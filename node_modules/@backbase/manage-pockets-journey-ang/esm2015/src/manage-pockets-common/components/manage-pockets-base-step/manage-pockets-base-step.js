import { Directive, EventEmitter, Input, Output } from '@angular/core';
import { POCKET_LOCALIZATIONS } from '../../localization/manage-pockets-journey.localizations';
import { TransferTypeEnum } from '../../model/pocket-item.model';
import * as i0 from "@angular/core";
// eslint-disable-next-line
export class ManagePocketsBaseStep {
    constructor() {
        this.back = new EventEmitter();
        this.cancel = new EventEmitter();
        this.pocketLocalizations = POCKET_LOCALIZATIONS;
        this.transferTypesEnum = TransferTypeEnum;
    }
    goBack() {
        this.back.emit();
    }
    abort() {
        this.cancel.emit();
    }
    isFieldValid(form, fieldName) {
        const controlField = form === null || form === void 0 ? void 0 : form.get(fieldName || '');
        return !!(controlField === null || controlField === void 0 ? void 0 : controlField.valid) || !!(controlField === null || controlField === void 0 ? void 0 : controlField.untouched);
    }
    getFieldErrors(form, field) {
        var _a;
        return (_a = form === null || form === void 0 ? void 0 : form.get(field || '')) === null || _a === void 0 ? void 0 : _a.errors;
    }
}
ManagePocketsBaseStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsBaseStep, deps: [], target: i0.ɵɵFactoryTarget.Directive });
ManagePocketsBaseStep.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ManagePocketsBaseStep, inputs: { journeyCurrency: "journeyCurrency", partialNewPayment: "partialNewPayment" }, outputs: { back: "back", cancel: "cancel" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsBaseStep, decorators: [{
            type: Directive
        }], propDecorators: { back: [{
                type: Output
            }], cancel: [{
                type: Output
            }], journeyCurrency: [{
                type: Input
            }], partialNewPayment: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLXBvY2tldHMtYmFzZS1zdGVwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9tYW5hZ2UtcG9ja2V0cy1qb3VybmV5L3NyYy9tYW5hZ2UtcG9ja2V0cy1jb21tb24vY29tcG9uZW50cy9tYW5hZ2UtcG9ja2V0cy1iYXNlLXN0ZXAvbWFuYWdlLXBvY2tldHMtYmFzZS1zdGVwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0seURBQXlELENBQUM7QUFFL0YsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sK0JBQStCLENBQUM7O0FBR2pFLDJCQUEyQjtBQUMzQixNQUFNLE9BQWdCLHFCQUFxQjtJQUYzQztRQUdZLFNBQUksR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO1FBQ2hDLFdBQU0sR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO1FBRzVDLHdCQUFtQixHQUFHLG9CQUFvQixDQUFDO1FBQzNDLHNCQUFpQixHQUFHLGdCQUFnQixDQUFDO0tBa0J0QztJQWhCQyxNQUFNO1FBQ0osSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVELFlBQVksQ0FBQyxJQUFnQixFQUFFLFNBQWtCO1FBQy9DLE1BQU0sWUFBWSxHQUFHLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRSxHQUFHLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ2hELE9BQU8sQ0FBQyxDQUFDLENBQUEsWUFBWSxhQUFaLFlBQVksdUJBQVosWUFBWSxDQUFFLEtBQUssQ0FBQSxJQUFJLENBQUMsQ0FBQyxDQUFBLFlBQVksYUFBWixZQUFZLHVCQUFaLFlBQVksQ0FBRSxTQUFTLENBQUEsQ0FBQztJQUM1RCxDQUFDO0lBRUQsY0FBYyxDQUFDLElBQWdCLEVBQUUsS0FBYzs7UUFDN0MsT0FBTyxNQUFBLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRSxHQUFHLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQywwQ0FBRSxNQUFNLENBQUM7SUFDeEMsQ0FBQzs7bUhBdkJtQixxQkFBcUI7dUdBQXJCLHFCQUFxQjs0RkFBckIscUJBQXFCO2tCQUYxQyxTQUFTOzhCQUdFLElBQUk7c0JBQWIsTUFBTTtnQkFDRyxNQUFNO3NCQUFmLE1BQU07Z0JBQ0UsZUFBZTtzQkFBdkIsS0FBSztnQkFDRyxpQkFBaUI7c0JBQXpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgUE9DS0VUX0xPQ0FMSVpBVElPTlMgfSBmcm9tICcuLi8uLi9sb2NhbGl6YXRpb24vbWFuYWdlLXBvY2tldHMtam91cm5leS5sb2NhbGl6YXRpb25zJztcbmltcG9ydCB7IFBheW1lbnRGb3JtSXRlbSB9IGZyb20gJy4uLy4uL21vZGVsL3BheW1lbnQubW9kZWwnO1xuaW1wb3J0IHsgVHJhbnNmZXJUeXBlRW51bSB9IGZyb20gJy4uLy4uL21vZGVsL3BvY2tldC1pdGVtLm1vZGVsJztcblxuQERpcmVjdGl2ZSgpXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBNYW5hZ2VQb2NrZXRzQmFzZVN0ZXAge1xuICBAT3V0cHV0KCkgYmFjayA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgQE91dHB1dCgpIGNhbmNlbCA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgQElucHV0KCkgam91cm5leUN1cnJlbmN5Pzogc3RyaW5nO1xuICBASW5wdXQoKSBwYXJ0aWFsTmV3UGF5bWVudD86IFBheW1lbnRGb3JtSXRlbTtcbiAgcG9ja2V0TG9jYWxpemF0aW9ucyA9IFBPQ0tFVF9MT0NBTElaQVRJT05TO1xuICB0cmFuc2ZlclR5cGVzRW51bSA9IFRyYW5zZmVyVHlwZUVudW07XG5cbiAgZ29CYWNrKCkge1xuICAgIHRoaXMuYmFjay5lbWl0KCk7XG4gIH1cblxuICBhYm9ydCgpIHtcbiAgICB0aGlzLmNhbmNlbC5lbWl0KCk7XG4gIH1cblxuICBpc0ZpZWxkVmFsaWQoZm9ybT86IEZvcm1Hcm91cCwgZmllbGROYW1lPzogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgY29uc3QgY29udHJvbEZpZWxkID0gZm9ybT8uZ2V0KGZpZWxkTmFtZSB8fCAnJyk7XG4gICAgcmV0dXJuICEhY29udHJvbEZpZWxkPy52YWxpZCB8fCAhIWNvbnRyb2xGaWVsZD8udW50b3VjaGVkO1xuICB9XG5cbiAgZ2V0RmllbGRFcnJvcnMoZm9ybT86IEZvcm1Hcm91cCwgZmllbGQ/OiBzdHJpbmcpIHtcbiAgICByZXR1cm4gZm9ybT8uZ2V0KGZpZWxkIHx8ICcnKT8uZXJyb3JzO1xuICB9XG59XG4iXX0=