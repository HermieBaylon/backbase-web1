import { Component, EventEmitter, Input, Output } from '@angular/core';
import { TransferTypeEnum } from '../../model/pocket-item.model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
import * as i2 from "@backbase/ui-ang/dropdown-menu";
import * as i3 from "@backbase/ui-ang/amount";
import * as i4 from "@backbase/ui-ang/progressbar";
import * as i5 from "@backbase/ui-ang/icon";
import * as i6 from "@angular/common";
export class ManagePocketsCardComponent {
    constructor(assetsService) {
        this.assetsService = assetsService;
        this.pocketTransfer = new EventEmitter();
        this.dropdownMenuOptions = [
            {
                label: $localize `:Add Money dropdown option@@managePockets.common.card.dropdown.addMoney.label:Add Money`,
                value: TransferTypeEnum.ADD,
            },
            {
                label: $localize `:Withdraw Money dropdown option@@managePockets.common.card.dropdown.withdrawMoney.label:Withdraw Money`,
                value: TransferTypeEnum.WITHDRAW,
            },
        ];
        this.dropdownMenuOptionsLabel = this.dropdownMenuOptions.map((item) => item.label);
        this.resolveAsset = this.assetsService.createAssetsResolver({
            widgetName: 'bb-manage-pockets-journey-ang',
            getURIFromAssetID: (assetId) => assetId,
        });
    }
    ngOnInit() {
        this.pocketImage = this.resolveAsset(`${this.pocket.icon}-img.webp`);
    }
    onButtonDropdownSelect(label) {
        const item = this.dropdownMenuOptions.find((option) => option.label === label);
        if (item && this.pocket) {
            this.pocketTransfer.emit({
                pocket: this.pocket,
                transferType: item.value,
            });
        }
    }
}
ManagePocketsCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsCardComponent, deps: [{ token: i1.AssetsService }], target: i0.ɵɵFactoryTarget.Component });
ManagePocketsCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ManagePocketsCardComponent, selector: "bb-manage-pockets-card", inputs: { pocket: "pocket" }, outputs: { pocketTransfer: "pocketTransfer" }, ngImport: i0, template: "<div class=\"bb-card bb-card--lg\">\n  <div class=\"bb-card__body\">\n    <div class=\"bb-stack bb-stack--wrap\">\n      <div class=\"bb-stack__item bb-stack__item--spacing-lg bb-manage-pockets-common-pocket-card__pocket-image-container\">\n        <img \n          [src]=\"pocketImage | async\" \n          alt=\"Representation of the selected pocket type\" \n          i18n-alt=\"Pocket image|changes according to the type of pocket@@managePockets.common.card.pocketImage\" \n          class=\"bb-manage-pockets-common-pocket-card__pocket-image\"\n        >\n      </div>\n      <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <div class=\"bb-block bb-block--md\">\n          <div class=\"bb-stack\">\n            <div class=\"bb-stack__item\">\n              <h2 class=\"bb-block bb-block--no-margin\">\n                {{pocket?.name}}\n              </h2>\n            </div>\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <bb-dropdown-menu-ui\n                icon=\"ellipsis-h\"\n                btnColor=\"link-dark\"\n                [btnCircle]=\"true\"\n                container=\"body\"\n                [options]=\"dropdownMenuOptionsLabel\"\n                (select)=\"onButtonDropdownSelect($event)\"\n              ></bb-dropdown-menu-ui>\n            </div>\n          </div>\n        </div>\n        <div class=\"bb-block bb-block--sm bb-subtitle bb-text-support\">\n          <span i18n=\"Available Balance|Current stored balance in pocket@@managePockets.common.card.availableBalance\">\n            Available Balance\n          </span\n          ><span *ngIf=\"!!pocket?.goal?.amountCurrency?.amount\" i18n=\"Pocket Goal|Expected amount to reach to complete pocket@@managePockets.common.card.goalAmount\">\n            / Goal Amount\n          </span>\n        </div>\n        <div class=\"bb-block\" [ngClass]=\"{ 'bb-block--xl': pocket?.goal?.progress != undefined }\">\n          <span class=\"bb-heading-2\">\n            <bb-amount-ui\n              [amount]=\"pocket?.balance?.amount\"\n              [currency]=\"pocket?.balance?.currencyCode\"\n            ></bb-amount-ui>\n          </span>\n          <span class=\"bb-manage-pockets-common-pocket-card__goal-amount bb-heading-3 bb-text-support\" *ngIf=\"!!pocket?.goal?.amountCurrency?.amount\">\n            /\n            <bb-amount-ui\n              [amount]=\"pocket?.goal?.amountCurrency?.amount\"\n              [currency]=\"pocket?.goal?.amountCurrency?.currencyCode\"\n              [decimalPlaces]=\"0\"\n            ></bb-amount-ui>\n          </span>\n        </div>\n        <ng-container *ngIf=\"!!pocket?.goal\">\n          <div class=\"bb-block bb-block--sm\" *ngIf=\"!!pocket?.goal?.progress || pocket?.goal?.progress == 0\">\n            <bb-progressbar-ui\n              [type]=\"pocket?.goal?.progress != '100' ? 'primary' : 'success'\"\n              height=\"8px\"\n              [value]=\"pocket?.goal?.progress\"\n            >\n            </bb-progressbar-ui>\n          </div>\n          <div class=\"bb-block\">\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\" *ngIf=\"!!pocket?.goal?.progress || pocket?.goal?.progress == 0\">\n                <div [ngClass]=\"pocket?.goal?.progress != 100 ? 'bb-text-primary' : 'bb-text-success'\">\n                  <span class=\"bb-manage-pockets-common-pocket-card__goal-percentage\">\n                    <bb-amount-ui\n                      [amount]=\"pocket?.goal?.progress\"\n                      [showPercent]=\"true\"\n                      [trailingZeroes]=\"false\"\n                    ></bb-amount-ui>\n                    <span i18n=\"Completed|Percentage of the goal currently completed@@managePockets.common.card.amountCompleted\">\n                      Completed\n                    </span>\n                  </span>\n                  <bb-icon-ui\n                    *ngIf=\"pocket?.goal?.progress == '100'\"\n                    name=\"check\"\n                    [inverse]=\"true\"\n                    size=\"sm\"\n                  ></bb-icon-ui>\n                </div>\n              </div>\n              <div class=\"bb-stack__item bb-stack__item--push-right bb-text-support\" *ngIf=\"!!pocket?.goal?.deadline\">\n                <bb-icon-ui\n                  name=\"calendar-today\"\n                  [inverse]=\"true\"\n                  size=\"sm\"\n                ></bb-icon-ui>\n                <span class=\"bb-manage-pockets-common-pocket-card__deadline-date\">\n                  {{pocket?.goal?.deadline | date}}\n                </span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>", components: [{ type: i2.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i4.ProgressbarComponent, selector: "bb-progressbar-ui", inputs: ["height", "max", "showValue", "striped", "animated", "type", "value"] }, { type: i5.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i6.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "async": i6.AsyncPipe, "date": i6.DatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsCardComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-manage-pockets-card',
                    templateUrl: './manage-pockets-card.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.AssetsService }]; }, propDecorators: { pocket: [{
                type: Input
            }], pocketTransfer: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,