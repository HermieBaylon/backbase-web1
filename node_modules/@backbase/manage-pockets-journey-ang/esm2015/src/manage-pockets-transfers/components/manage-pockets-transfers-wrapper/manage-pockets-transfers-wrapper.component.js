import { Component, EventEmitter, Input, Output } from '@angular/core';
import { ManagePocketsBaseWrapperComponent } from '../../../manage-pockets-common/components/manage-pockets-base-wrapper/manage-pockets-base-wrapper.component';
import { POCKET_LOCALIZATIONS } from '../../../manage-pockets-common/localization/manage-pockets-journey.localizations';
import { TransferTypeEnum } from '../../../manage-pockets-common/model/pocket-item.model';
import * as i0 from "@angular/core";
import * as i1 from "../manage-pockets-transfers-details/manage-pockets-transfers-details.component";
import * as i2 from "../manage-pockets-transfers-review/manage-pockets-transfers-review.component";
import * as i3 from "@backbase/ui-ang/modal";
import * as i4 from "@backbase/ui-ang/icon";
import * as i5 from "@angular/common";
import * as i6 from "@backbase/ui-ang/button";
export class ManagePocketsTransfersWrapperComponent extends ManagePocketsBaseWrapperComponent {
    constructor() {
        super(...arguments);
        this.newTransfer = new EventEmitter();
        this.transferTypesEnum = TransferTypeEnum;
        this.pocketLocalizations = POCKET_LOCALIZATIONS;
    }
    ngOnInit() {
        this.partialNewPayment = this.generatePaymentInfo();
    }
    accountChange(account) {
        this.partialNewPayment = Object.assign(Object.assign({}, this.partialNewPayment), { account });
    }
    goNext(paymentData) {
        this.partialNewPayment = paymentData;
        this.goToStep(this.currentStep + 1);
    }
    performTransfer(paymentInfo) {
        this.newTransfer.emit(paymentInfo);
    }
    generatePaymentInfo() {
        var _a;
        return Object.assign(Object.assign({}, this.partialNewPayment), { account: (_a = this.accountList) === null || _a === void 0 ? void 0 : _a[0], currencyCode: this.journeyCurrency, pocketInfo: this.pocketInfo });
    }
}
ManagePocketsTransfersWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsTransfersWrapperComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ManagePocketsTransfersWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ManagePocketsTransfersWrapperComponent, selector: "bb-manage-pockets-transfers-wrapper", inputs: { accountList: "accountList", awaitingTransferResponse: "awaitingTransferResponse", partialNewPayment: "partialNewPayment", pocketInfo: "pocketInfo" }, outputs: { newTransfer: "newTransfer" }, usesInheritance: true, ngImport: i0, template: "<bb-manage-pockets-transfers-details\n  *ngIf=\"currentStep === 1\"\n  [accountList]=\"accountList\"\n  [journeyCurrency]=\"journeyCurrency\"\n  [partialNewPayment]=\"partialNewPayment\"\n  (accountChange)=\"accountChange($event)\"\n  (cancel)=\"showAbortDialog()\"\n  (next)=\"goNext($event)\"\n></bb-manage-pockets-transfers-details>\n<bb-manage-pockets-transfers-review\n  *ngIf=\"currentStep === 2\"\n  [awaitingTransferResponse]=\"awaitingTransferResponse\"\n  [journeyCurrency]=\"journeyCurrency\"\n  [partialNewPayment]=\"partialNewPayment\"\n  [pocketInfo]=\"pocketInfo\"\n  (back)=\"goBack()\"\n  (cancel)=\"showAbortDialog()\"\n  (newTransfer)=\"performTransfer($event)\"\n></bb-manage-pockets-transfers-review>\n\n<bb-modal-ui [isOpen]=\"showDialog\" (cancel)=\"closeAbortDialog()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item\">\n          <span class=\"modal-title\">\n            {{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.wrapper.addMoneyModalHeader : pocketLocalizations.transfers.wrapper.withdrawMoneyModalHeader }}\n          </span>\n          <ng-container *ngIf=\"partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD; then addMoneyModalHeader; else withdrawMoneyModalHeader\"></ng-container>\n        </div>\n        <div class=\"bb-stack__item--push-right\">\n          <button\n            bbButton\n            (click)=\"closeAbortDialog()\"\n            class=\"bb-stack__item-sm\"\n            color=\"unstyled\"\n            aria-label=\"close dialog\"\n            i18n-aria-label=\"close dialog button@@managePockets.transfers.wrapper.modal.button.close\"\n          >\n            <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span>\n        {{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.wrapper.addMoneyModalBody : pocketLocalizations.transfers.wrapper.withdrawMoneyModalBody }}\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"confirmAbort()\"\n        >\n          {{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.wrapper.addMoneyModalConfirm : pocketLocalizations.transfers.wrapper.withdrawMoneyModalConfirm }}\n        </button>\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"closeAbortDialog()\"\n          i18n=\"Keep it@@managePockets.transfers.wrapper.modal.button.cancel\"\n        >\n          Keep it\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>", components: [{ type: i1.ManagePocketsTransfersDetailsComponent, selector: "bb-manage-pockets-transfers-details", inputs: ["accountList", "journeyCurrency"], outputs: ["accountChange", "next"] }, { type: i2.ManagePocketsTransfersReviewComponent, selector: "bb-manage-pockets-transfers-review", inputs: ["awaitingTransferResponse"], outputs: ["newTransfer"] }, { type: i3.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i3.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i4.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i3.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i6.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i3.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i3.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsTransfersWrapperComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-manage-pockets-transfers-wrapper',
                    templateUrl: './manage-pockets-transfers-wrapper.component.html',
                }]
        }], propDecorators: { accountList: [{
                type: Input
            }], awaitingTransferResponse: [{
                type: Input
            }], partialNewPayment: [{
                type: Input
            }], pocketInfo: [{
                type: Input
            }], newTransfer: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,