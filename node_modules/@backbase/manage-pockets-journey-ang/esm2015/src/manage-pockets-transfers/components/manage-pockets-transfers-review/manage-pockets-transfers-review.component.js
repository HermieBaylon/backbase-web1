import { Component, EventEmitter, Input, Output } from '@angular/core';
import { ManagePocketsBaseStep } from '../../../manage-pockets-common/components/manage-pockets-base-step/manage-pockets-base-step';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/amount";
import * as i2 from "@backbase/ui-ang/load-button";
import * as i3 from "@angular/common";
import * as i4 from "@backbase/ui-ang/button";
export class ManagePocketsTransfersReviewComponent extends ManagePocketsBaseStep {
    constructor() {
        super(...arguments);
        this.newTransfer = new EventEmitter();
    }
    performTransfer() {
        this.newTransfer.emit(this.partialNewPayment);
    }
}
ManagePocketsTransfersReviewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsTransfersReviewComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ManagePocketsTransfersReviewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ManagePocketsTransfersReviewComponent, selector: "bb-manage-pockets-transfers-review", inputs: { awaitingTransferResponse: "awaitingTransferResponse" }, outputs: { newTransfer: "newTransfer" }, usesInheritance: true, ngImport: i0, template: "<div class=\"bb-block bb-block--lg\">\n  <h2>{{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.review.addMoneyHeader : pocketLocalizations.transfers.review.withdrawMoneyHeader }}</h2>\n</div>\n\n<div class=\"bb-item-log bb-block bb-block--lg\">\n  <div class=\"bb-item-log__record bb-item-log__record--has-bullet\">\n    <div class=\"bb-item-log-record__bullet-icon bb-item-log-record__bullet-icon--filled bb-item-log-record__bullet-icon--spacing-md\"></div>\n    <div class=\"bb-block bb-block--md bb-item-log-record__details\">\n      <div class=\"bb-text-bold bb-block bb-block--sm\" i18n=\"From@@managePockets.transfers.review.itemLog.from.label\">\n        From\n      </div>\n      <ng-container *ngIf=\"partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD; then accountSlot; else pocketSlot\"></ng-container>\n    </div>\n  </div>\n  <div class=\"bb-item-log__record bb-item-log__record--has-bullet\">\n    <div class=\"bb-item-log-record__bullet-icon bb-item-log-record__bullet-icon--spacing-md\"></div>\n    <div class=\"bb-item-log-record__details\">\n      <div class=\"bb-text-bold bb-block bb-block--sm\" i18n=\"To@@managePockets.transfers.review.itemLog.to.label\">\n        To\n      </div>\n      <ng-container *ngIf=\"partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD; then pocketSlot; else accountSlot\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <div class=\"bb-block bb-block--sm\">\n    <span class=\"bb-text-semi-bold\" i18n=\"Amount@@managePockets.transfers.review.amount.header\">\n      Amount\n    </span>\n  </div>\n  <bb-amount-ui\n    class=\"bb-heading-1\"\n    [amount]=\"partialNewPayment?.amount\"\n    [currency]=\"journeyCurrency\"\n  ></bb-amount-ui>\n</div>\n\n<div class=\"bb-button-bar\">\n  <bb-load-button-ui\n    i18n=\"Confirm Transfer@@managePockets.transfers.review.button.confirmTransfer\"\n    color=\"primary\"\n    class=\"bb-button-bar__button\"\n    [isLoading]=\"awaitingTransferResponse\"\n    (click)=\"!awaitingTransferResponse && performTransfer()\"\n  >\n    Confirm Transfer\n  </bb-load-button-ui>\n  <button \n    bbButton \n    color=\"secondary\"\n    class=\"bb-button-bar__button\"\n    i18n=\"Back@@managePockets.transfers.review.button.back\"\n    (click)=\"goBack()\"\n  >\n    Back\n  </button>\n  <button \n    bbButton \n    color=\"link\"\n    class=\"bb-button-bar__button bb-button-bar__button--across\"\n    i18n=\"Cancel@@managePockets.transfers.review.button.cancel\"\n    (click)=\"abort()\"\n  >\n    Cancel\n  </button>\n</div>\n\n<ng-template #pocketSlot>\n  <div class=\"break-word bb-highlight bb-block bb-block--xs\">\n    {{partialNewPayment?.pocketInfo?.pocket?.name}}\n  </div>\n  <div class=\"bb-text-support bb-subtitle break-word contextual-alternates-off\" i18n=\"Pocket@@managePockets.transfers.review.itemLog.to.details\">\n    Pocket\n  </div>\n</ng-template>\n\n<ng-template #accountSlot>\n  <div class=\"break-word bb-highlight bb-block bb-block--xs\">\n    {{partialNewPayment?.account?.name}}\n  </div>\n  <div class=\"bb-text-support bb-subtitle break-word contextual-alternates-off\">\n    {{partialNewPayment?.account?.number}}\n  </div>\n</ng-template>", components: [{ type: i1.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i2.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsTransfersReviewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-manage-pockets-transfers-review',
                    templateUrl: './manage-pockets-transfers-review.component.html',
                }]
        }], propDecorators: { awaitingTransferResponse: [{
                type: Input
            }], newTransfer: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLXBvY2tldHMtdHJhbnNmZXJzLXJldmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wb2NrZXRzLWpvdXJuZXkvc3JjL21hbmFnZS1wb2NrZXRzLXRyYW5zZmVycy9jb21wb25lbnRzL21hbmFnZS1wb2NrZXRzLXRyYW5zZmVycy1yZXZpZXcvbWFuYWdlLXBvY2tldHMtdHJhbnNmZXJzLXJldmlldy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wb2NrZXRzLWpvdXJuZXkvc3JjL21hbmFnZS1wb2NrZXRzLXRyYW5zZmVycy9jb21wb25lbnRzL21hbmFnZS1wb2NrZXRzLXRyYW5zZmVycy1yZXZpZXcvbWFuYWdlLXBvY2tldHMtdHJhbnNmZXJzLXJldmlldy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZGQUE2RixDQUFDOzs7Ozs7QUFPcEksTUFBTSxPQUFPLHFDQUFzQyxTQUFRLHFCQUFxQjtJQUpoRjs7UUFNWSxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFtQixDQUFDO0tBSzdEO0lBSEMsZUFBZTtRQUNiLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ2hELENBQUM7O21JQU5VLHFDQUFxQzt1SEFBckMscUNBQXFDLDRNQ1JsRCw4dEdBb0ZjOzRGRDVFRCxxQ0FBcUM7a0JBSmpELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG9DQUFvQztvQkFDOUMsV0FBVyxFQUFFLGtEQUFrRDtpQkFDaEU7OEJBRVUsd0JBQXdCO3NCQUFoQyxLQUFLO2dCQUNJLFdBQVc7c0JBQXBCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWFuYWdlUG9ja2V0c0Jhc2VTdGVwIH0gZnJvbSAnLi4vLi4vLi4vbWFuYWdlLXBvY2tldHMtY29tbW9uL2NvbXBvbmVudHMvbWFuYWdlLXBvY2tldHMtYmFzZS1zdGVwL21hbmFnZS1wb2NrZXRzLWJhc2Utc3RlcCc7XG5pbXBvcnQgeyBQYXltZW50Rm9ybUl0ZW0gfSBmcm9tICcuLi8uLi8uLi9tYW5hZ2UtcG9ja2V0cy1jb21tb24vbW9kZWwvcGF5bWVudC5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLW1hbmFnZS1wb2NrZXRzLXRyYW5zZmVycy1yZXZpZXcnLFxuICB0ZW1wbGF0ZVVybDogJy4vbWFuYWdlLXBvY2tldHMtdHJhbnNmZXJzLXJldmlldy5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIE1hbmFnZVBvY2tldHNUcmFuc2ZlcnNSZXZpZXdDb21wb25lbnQgZXh0ZW5kcyBNYW5hZ2VQb2NrZXRzQmFzZVN0ZXAge1xuICBASW5wdXQoKSBhd2FpdGluZ1RyYW5zZmVyUmVzcG9uc2U/OiBib29sZWFuO1xuICBAT3V0cHV0KCkgbmV3VHJhbnNmZXIgPSBuZXcgRXZlbnRFbWl0dGVyPFBheW1lbnRGb3JtSXRlbT4oKTtcblxuICBwZXJmb3JtVHJhbnNmZXIoKSB7XG4gICAgdGhpcy5uZXdUcmFuc2Zlci5lbWl0KHRoaXMucGFydGlhbE5ld1BheW1lbnQpO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLWxnXCI+XG4gIDxoMj57eyBwYXJ0aWFsTmV3UGF5bWVudD8ucG9ja2V0SW5mbz8udHJhbnNmZXJUeXBlID09PSB0cmFuc2ZlclR5cGVzRW51bS5BREQgPyBwb2NrZXRMb2NhbGl6YXRpb25zLnRyYW5zZmVycy5yZXZpZXcuYWRkTW9uZXlIZWFkZXIgOiBwb2NrZXRMb2NhbGl6YXRpb25zLnRyYW5zZmVycy5yZXZpZXcud2l0aGRyYXdNb25leUhlYWRlciB9fTwvaDI+XG48L2Rpdj5cblxuPGRpdiBjbGFzcz1cImJiLWl0ZW0tbG9nIGJiLWJsb2NrIGJiLWJsb2NrLS1sZ1wiPlxuICA8ZGl2IGNsYXNzPVwiYmItaXRlbS1sb2dfX3JlY29yZCBiYi1pdGVtLWxvZ19fcmVjb3JkLS1oYXMtYnVsbGV0XCI+XG4gICAgPGRpdiBjbGFzcz1cImJiLWl0ZW0tbG9nLXJlY29yZF9fYnVsbGV0LWljb24gYmItaXRlbS1sb2ctcmVjb3JkX19idWxsZXQtaWNvbi0tZmlsbGVkIGJiLWl0ZW0tbG9nLXJlY29yZF9fYnVsbGV0LWljb24tLXNwYWNpbmctbWRcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLW1kIGJiLWl0ZW0tbG9nLXJlY29yZF9fZGV0YWlsc1wiPlxuICAgICAgPGRpdiBjbGFzcz1cImJiLXRleHQtYm9sZCBiYi1ibG9jayBiYi1ibG9jay0tc21cIiBpMThuPVwiRnJvbUBAbWFuYWdlUG9ja2V0cy50cmFuc2ZlcnMucmV2aWV3Lml0ZW1Mb2cuZnJvbS5sYWJlbFwiPlxuICAgICAgICBGcm9tXG4gICAgICA8L2Rpdj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJwYXJ0aWFsTmV3UGF5bWVudD8ucG9ja2V0SW5mbz8udHJhbnNmZXJUeXBlID09PSB0cmFuc2ZlclR5cGVzRW51bS5BREQ7IHRoZW4gYWNjb3VudFNsb3Q7IGVsc2UgcG9ja2V0U2xvdFwiPjwvbmctY29udGFpbmVyPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImJiLWl0ZW0tbG9nX19yZWNvcmQgYmItaXRlbS1sb2dfX3JlY29yZC0taGFzLWJ1bGxldFwiPlxuICAgIDxkaXYgY2xhc3M9XCJiYi1pdGVtLWxvZy1yZWNvcmRfX2J1bGxldC1pY29uIGJiLWl0ZW0tbG9nLXJlY29yZF9fYnVsbGV0LWljb24tLXNwYWNpbmctbWRcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItaXRlbS1sb2ctcmVjb3JkX19kZXRhaWxzXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiYmItdGV4dC1ib2xkIGJiLWJsb2NrIGJiLWJsb2NrLS1zbVwiIGkxOG49XCJUb0BAbWFuYWdlUG9ja2V0cy50cmFuc2ZlcnMucmV2aWV3Lml0ZW1Mb2cudG8ubGFiZWxcIj5cbiAgICAgICAgVG9cbiAgICAgIDwvZGl2PlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInBhcnRpYWxOZXdQYXltZW50Py5wb2NrZXRJbmZvPy50cmFuc2ZlclR5cGUgPT09IHRyYW5zZmVyVHlwZXNFbnVtLkFERDsgdGhlbiBwb2NrZXRTbG90OyBlbHNlIGFjY291bnRTbG90XCI+PC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG5cbjxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0teGxcIj5cbiAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1zbVwiPlxuICAgIDxzcGFuIGNsYXNzPVwiYmItdGV4dC1zZW1pLWJvbGRcIiBpMThuPVwiQW1vdW50QEBtYW5hZ2VQb2NrZXRzLnRyYW5zZmVycy5yZXZpZXcuYW1vdW50LmhlYWRlclwiPlxuICAgICAgQW1vdW50XG4gICAgPC9zcGFuPlxuICA8L2Rpdj5cbiAgPGJiLWFtb3VudC11aVxuICAgIGNsYXNzPVwiYmItaGVhZGluZy0xXCJcbiAgICBbYW1vdW50XT1cInBhcnRpYWxOZXdQYXltZW50Py5hbW91bnRcIlxuICAgIFtjdXJyZW5jeV09XCJqb3VybmV5Q3VycmVuY3lcIlxuICA+PC9iYi1hbW91bnQtdWk+XG48L2Rpdj5cblxuPGRpdiBjbGFzcz1cImJiLWJ1dHRvbi1iYXJcIj5cbiAgPGJiLWxvYWQtYnV0dG9uLXVpXG4gICAgaTE4bj1cIkNvbmZpcm0gVHJhbnNmZXJAQG1hbmFnZVBvY2tldHMudHJhbnNmZXJzLnJldmlldy5idXR0b24uY29uZmlybVRyYW5zZmVyXCJcbiAgICBjb2xvcj1cInByaW1hcnlcIlxuICAgIGNsYXNzPVwiYmItYnV0dG9uLWJhcl9fYnV0dG9uXCJcbiAgICBbaXNMb2FkaW5nXT1cImF3YWl0aW5nVHJhbnNmZXJSZXNwb25zZVwiXG4gICAgKGNsaWNrKT1cIiFhd2FpdGluZ1RyYW5zZmVyUmVzcG9uc2UgJiYgcGVyZm9ybVRyYW5zZmVyKClcIlxuICA+XG4gICAgQ29uZmlybSBUcmFuc2ZlclxuICA8L2JiLWxvYWQtYnV0dG9uLXVpPlxuICA8YnV0dG9uIFxuICAgIGJiQnV0dG9uIFxuICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICBjbGFzcz1cImJiLWJ1dHRvbi1iYXJfX2J1dHRvblwiXG4gICAgaTE4bj1cIkJhY2tAQG1hbmFnZVBvY2tldHMudHJhbnNmZXJzLnJldmlldy5idXR0b24uYmFja1wiXG4gICAgKGNsaWNrKT1cImdvQmFjaygpXCJcbiAgPlxuICAgIEJhY2tcbiAgPC9idXR0b24+XG4gIDxidXR0b24gXG4gICAgYmJCdXR0b24gXG4gICAgY29sb3I9XCJsaW5rXCJcbiAgICBjbGFzcz1cImJiLWJ1dHRvbi1iYXJfX2J1dHRvbiBiYi1idXR0b24tYmFyX19idXR0b24tLWFjcm9zc1wiXG4gICAgaTE4bj1cIkNhbmNlbEBAbWFuYWdlUG9ja2V0cy50cmFuc2ZlcnMucmV2aWV3LmJ1dHRvbi5jYW5jZWxcIlxuICAgIChjbGljayk9XCJhYm9ydCgpXCJcbiAgPlxuICAgIENhbmNlbFxuICA8L2J1dHRvbj5cbjwvZGl2PlxuXG48bmctdGVtcGxhdGUgI3BvY2tldFNsb3Q+XG4gIDxkaXYgY2xhc3M9XCJicmVhay13b3JkIGJiLWhpZ2hsaWdodCBiYi1ibG9jayBiYi1ibG9jay0teHNcIj5cbiAgICB7e3BhcnRpYWxOZXdQYXltZW50Py5wb2NrZXRJbmZvPy5wb2NrZXQ/Lm5hbWV9fVxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImJiLXRleHQtc3VwcG9ydCBiYi1zdWJ0aXRsZSBicmVhay13b3JkIGNvbnRleHR1YWwtYWx0ZXJuYXRlcy1vZmZcIiBpMThuPVwiUG9ja2V0QEBtYW5hZ2VQb2NrZXRzLnRyYW5zZmVycy5yZXZpZXcuaXRlbUxvZy50by5kZXRhaWxzXCI+XG4gICAgUG9ja2V0XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlICNhY2NvdW50U2xvdD5cbiAgPGRpdiBjbGFzcz1cImJyZWFrLXdvcmQgYmItaGlnaGxpZ2h0IGJiLWJsb2NrIGJiLWJsb2NrLS14c1wiPlxuICAgIHt7cGFydGlhbE5ld1BheW1lbnQ/LmFjY291bnQ/Lm5hbWV9fVxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImJiLXRleHQtc3VwcG9ydCBiYi1zdWJ0aXRsZSBicmVhay13b3JkIGNvbnRleHR1YWwtYWx0ZXJuYXRlcy1vZmZcIj5cbiAgICB7e3BhcnRpYWxOZXdQYXltZW50Py5hY2NvdW50Py5udW1iZXJ9fVxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+Il19