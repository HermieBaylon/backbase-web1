import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { AccountSelectorModule } from '@backbase/ui-ang/account-selector';
import { AmountInputModule } from '@backbase/ui-ang/amount-input';
import { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';
import { LoadButtonModule } from '@backbase/ui-ang/load-button';
import { ModalModule } from '@backbase/ui-ang/modal';
import { ManagePocketsCommonModule } from '../manage-pockets-common/manage-pockets-common.module';
import { ManagePocketsTransfersDetailsComponent } from './components/manage-pockets-transfers-details/manage-pockets-transfers-details.component';
import { ManagePocketsTransfersReviewComponent } from './components/manage-pockets-transfers-review/manage-pockets-transfers-review.component';
import { ManagePocketsTransfersWrapperComponent } from './components/manage-pockets-transfers-wrapper/manage-pockets-transfers-wrapper.component';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
const components = [
    ManagePocketsTransfersReviewComponent,
    ManagePocketsTransfersWrapperComponent,
    ManagePocketsTransfersDetailsComponent,
];
const modules = [
    AccountSelectorModule,
    AmountInputModule,
    InputValidationMessageModule,
    FormsModule,
    LoadButtonModule,
    ModalModule,
    ReactiveFormsModule,
];
export class ManagePocketsTransfersModule {
}
ManagePocketsTransfersModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsTransfersModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ManagePocketsTransfersModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsTransfersModule, declarations: [ManagePocketsTransfersReviewComponent,
        ManagePocketsTransfersWrapperComponent,
        ManagePocketsTransfersDetailsComponent], imports: [AccountSelectorModule,
        AmountInputModule,
        InputValidationMessageModule,
        FormsModule,
        LoadButtonModule,
        ModalModule,
        ReactiveFormsModule, CommonModule,
        ManagePocketsCommonModule, i1.BackbaseCoreModule], exports: [ManagePocketsTransfersReviewComponent,
        ManagePocketsTransfersWrapperComponent,
        ManagePocketsTransfersDetailsComponent, AccountSelectorModule,
        AmountInputModule,
        InputValidationMessageModule,
        FormsModule,
        LoadButtonModule,
        ModalModule,
        ReactiveFormsModule] });
ManagePocketsTransfersModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsTransfersModule, imports: [[
            ...modules,
            CommonModule,
            ManagePocketsCommonModule,
            BackbaseCoreModule.withConfig({
                classMap: { ManagePocketsTransfersWrapperComponent },
            }),
        ], AccountSelectorModule,
        AmountInputModule,
        InputValidationMessageModule,
        FormsModule,
        LoadButtonModule,
        ModalModule,
        ReactiveFormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsTransfersModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...components],
                    imports: [
                        ...modules,
                        CommonModule,
                        ManagePocketsCommonModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { ManagePocketsTransfersWrapperComponent },
                        }),
                    ],
                    exports: [...components, ...modules],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLXBvY2tldHMtdHJhbnNmZXJzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLXBvY2tldHMtam91cm5leS9zcmMvbWFuYWdlLXBvY2tldHMtdHJhbnNmZXJzL21hbmFnZS1wb2NrZXRzLXRyYW5zZmVycy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNsRyxPQUFPLEVBQUUsc0NBQXNDLEVBQUUsTUFBTSwwRkFBMEYsQ0FBQztBQUNsSixPQUFPLEVBQUUscUNBQXFDLEVBQUUsTUFBTSx3RkFBd0YsQ0FBQztBQUMvSSxPQUFPLEVBQUUsc0NBQXNDLEVBQUUsTUFBTSwwRkFBMEYsQ0FBQzs7O0FBRWxKLE1BQU0sVUFBVSxHQUFHO0lBQ2pCLHFDQUFxQztJQUNyQyxzQ0FBc0M7SUFDdEMsc0NBQXNDO0NBQ3ZDLENBQUM7QUFFRixNQUFNLE9BQU8sR0FBRztJQUNkLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsNEJBQTRCO0lBQzVCLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLG1CQUFtQjtDQUNwQixDQUFDO0FBY0YsTUFBTSxPQUFPLDRCQUE0Qjs7MEhBQTVCLDRCQUE0QjsySEFBNUIsNEJBQTRCLGlCQTNCdkMscUNBQXFDO1FBQ3JDLHNDQUFzQztRQUN0QyxzQ0FBc0MsYUFJdEMscUJBQXFCO1FBQ3JCLGlCQUFpQjtRQUNqQiw0QkFBNEI7UUFDNUIsV0FBVztRQUNYLGdCQUFnQjtRQUNoQixXQUFXO1FBQ1gsbUJBQW1CLEVBT2pCLFlBQVk7UUFDWix5QkFBeUIsb0NBcEIzQixxQ0FBcUM7UUFDckMsc0NBQXNDO1FBQ3RDLHNDQUFzQyxFQUl0QyxxQkFBcUI7UUFDckIsaUJBQWlCO1FBQ2pCLDRCQUE0QjtRQUM1QixXQUFXO1FBQ1gsZ0JBQWdCO1FBQ2hCLFdBQVc7UUFDWCxtQkFBbUI7MkhBZVIsNEJBQTRCLFlBVjlCO1lBQ1AsR0FBRyxPQUFPO1lBQ1YsWUFBWTtZQUNaLHlCQUF5QjtZQUN6QixrQkFBa0IsQ0FBQyxVQUFVLENBQUM7Z0JBQzVCLFFBQVEsRUFBRSxFQUFFLHNDQUFzQyxFQUFFO2FBQ3JELENBQUM7U0FDSCxFQWxCRCxxQkFBcUI7UUFDckIsaUJBQWlCO1FBQ2pCLDRCQUE0QjtRQUM1QixXQUFXO1FBQ1gsZ0JBQWdCO1FBQ2hCLFdBQVc7UUFDWCxtQkFBbUI7NEZBZVIsNEJBQTRCO2tCQVp4QyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDO29CQUM3QixPQUFPLEVBQUU7d0JBQ1AsR0FBRyxPQUFPO3dCQUNWLFlBQVk7d0JBQ1oseUJBQXlCO3dCQUN6QixrQkFBa0IsQ0FBQyxVQUFVLENBQUM7NEJBQzVCLFFBQVEsRUFBRSxFQUFFLHNDQUFzQyxFQUFFO3lCQUNyRCxDQUFDO3FCQUNIO29CQUNELE9BQU8sRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLEdBQUcsT0FBTyxDQUFDO2lCQUNyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBCYWNrYmFzZUNvcmVNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5pbXBvcnQgeyBBY2NvdW50U2VsZWN0b3JNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2FjY291bnQtc2VsZWN0b3InO1xuaW1wb3J0IHsgQW1vdW50SW5wdXRNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2Ftb3VudC1pbnB1dCc7XG5pbXBvcnQgeyBJbnB1dFZhbGlkYXRpb25NZXNzYWdlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UnO1xuaW1wb3J0IHsgTG9hZEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvbG9hZC1idXR0b24nO1xuaW1wb3J0IHsgTW9kYWxNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL21vZGFsJztcbmltcG9ydCB7IE1hbmFnZVBvY2tldHNDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9tYW5hZ2UtcG9ja2V0cy1jb21tb24vbWFuYWdlLXBvY2tldHMtY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBNYW5hZ2VQb2NrZXRzVHJhbnNmZXJzRGV0YWlsc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9tYW5hZ2UtcG9ja2V0cy10cmFuc2ZlcnMtZGV0YWlscy9tYW5hZ2UtcG9ja2V0cy10cmFuc2ZlcnMtZGV0YWlscy5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWFuYWdlUG9ja2V0c1RyYW5zZmVyc1Jldmlld0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9tYW5hZ2UtcG9ja2V0cy10cmFuc2ZlcnMtcmV2aWV3L21hbmFnZS1wb2NrZXRzLXRyYW5zZmVycy1yZXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7IE1hbmFnZVBvY2tldHNUcmFuc2ZlcnNXcmFwcGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL21hbmFnZS1wb2NrZXRzLXRyYW5zZmVycy13cmFwcGVyL21hbmFnZS1wb2NrZXRzLXRyYW5zZmVycy13cmFwcGVyLmNvbXBvbmVudCc7XG5cbmNvbnN0IGNvbXBvbmVudHMgPSBbXG4gIE1hbmFnZVBvY2tldHNUcmFuc2ZlcnNSZXZpZXdDb21wb25lbnQsXG4gIE1hbmFnZVBvY2tldHNUcmFuc2ZlcnNXcmFwcGVyQ29tcG9uZW50LFxuICBNYW5hZ2VQb2NrZXRzVHJhbnNmZXJzRGV0YWlsc0NvbXBvbmVudCxcbl07XG5cbmNvbnN0IG1vZHVsZXMgPSBbXG4gIEFjY291bnRTZWxlY3Rvck1vZHVsZSxcbiAgQW1vdW50SW5wdXRNb2R1bGUsXG4gIElucHV0VmFsaWRhdGlvbk1lc3NhZ2VNb2R1bGUsXG4gIEZvcm1zTW9kdWxlLFxuICBMb2FkQnV0dG9uTW9kdWxlLFxuICBNb2RhbE1vZHVsZSxcbiAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogWy4uLmNvbXBvbmVudHNdLFxuICBpbXBvcnRzOiBbXG4gICAgLi4ubW9kdWxlcyxcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgTWFuYWdlUG9ja2V0c0NvbW1vbk1vZHVsZSxcbiAgICBCYWNrYmFzZUNvcmVNb2R1bGUud2l0aENvbmZpZyh7XG4gICAgICBjbGFzc01hcDogeyBNYW5hZ2VQb2NrZXRzVHJhbnNmZXJzV3JhcHBlckNvbXBvbmVudCB9LFxuICAgIH0pLFxuICBdLFxuICBleHBvcnRzOiBbLi4uY29tcG9uZW50cywgLi4ubW9kdWxlc10sXG59KVxuZXhwb3J0IGNsYXNzIE1hbmFnZVBvY2tldHNUcmFuc2ZlcnNNb2R1bGUge31cbiJdfQ==