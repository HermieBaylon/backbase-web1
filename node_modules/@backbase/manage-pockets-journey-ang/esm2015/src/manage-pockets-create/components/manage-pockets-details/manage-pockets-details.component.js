import { TitleCasePipe } from '@angular/common';
import { Component, Input } from '@angular/core';
import { Validators } from '@angular/forms';
import { RegexReplacePipe } from '../../../manage-pockets-common/pipes/regex-replace.pipe';
import { ManagePocketsCreateBaseStep } from '../manage-pockets-create-base-step/manage-pockets-create-base-step';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/foundation-ang/core";
import * as i3 from "@backbase/ui-ang/input-text";
import * as i4 from "@backbase/ui-ang/input-validation-message";
import * as i5 from "@backbase/ui-ang/modal";
import * as i6 from "@backbase/ui-ang/icon";
import * as i7 from "@backbase/ui-ang/button";
import * as i8 from "../../../manage-pockets-common/directives/dynamic-id.directive";
import * as i9 from "@angular/common";
import * as i10 from "../../../manage-pockets-common/directives/accessibility-keyboard.directive";
import * as i11 from "../../../manage-pockets-common/pipes/regex-replace.pipe";
export class ManagePocketsDetailsComponent extends ManagePocketsCreateBaseStep {
    constructor(formBuilder, assetsService) {
        super();
        this.formBuilder = formBuilder;
        this.assetsService = assetsService;
        this.showDialog = false;
        this.resolveAsset = this.assetsService.createAssetsResolver({
            widgetName: 'bb-manage-pockets-journey-ang',
            getURIFromAssetID: (assetId) => assetId,
        });
    }
    ngOnInit() {
        var _a, _b, _c, _d;
        const defaultImage = ((_a = this.pocketImageList) === null || _a === void 0 ? void 0 : _a[0]) || 'home';
        this.pocketDetailsForm = this.formBuilder.group({
            name: [((_b = this.partialPocket) === null || _b === void 0 ? void 0 : _b.name) || this.formatName(defaultImage), Validators.required],
            icon: [((_c = this.partialPocket) === null || _c === void 0 ? void 0 : _c.icon) || defaultImage, Validators.required],
        });
        this.selectedImageAssetUrl = this.resolveAsset(`${((_d = this.partialPocket) === null || _d === void 0 ? void 0 : _d.icon) || defaultImage}-img.webp`);
    }
    formatName(pocketName) {
        const titleCasePipe = new TitleCasePipe();
        const regexPipe = new RegexReplacePipe();
        let formatedTittle = pocketName;
        formatedTittle = regexPipe.transform(formatedTittle, '-', ' ');
        formatedTittle = titleCasePipe.transform(formatedTittle);
        return formatedTittle;
    }
    openDialog() {
        this.showDialog = true;
    }
    closeDialog() {
        this.showDialog = false;
    }
    changeType(img) {
        this.pocketDetailsForm.patchValue({ name: this.formatName(img), icon: img });
        this.selectedImageAssetUrl = this.resolveAsset(`${img}-img.webp`);
        this.closeDialog();
    }
    getImage(img) {
        return this.resolveAsset(`${img}-img.webp`);
    }
    isTypeSelected(img) {
        return this.pocketDetailsForm.get('icon').value === img;
    }
    save() {
        if (this.pocketDetailsForm.valid) {
            this.goNext(this.formatDetailsValues());
        }
        else {
            this.pocketDetailsForm.markAllAsTouched();
        }
    }
    formatDetailsValues() {
        const { name, icon } = this.pocketDetailsForm.value;
        return { name, icon };
    }
}
ManagePocketsDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsDetailsComponent, deps: [{ token: i1.FormBuilder }, { token: i2.AssetsService }], target: i0.ɵɵFactoryTarget.Component });
ManagePocketsDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ManagePocketsDetailsComponent, selector: "bb-manage-pockets-details", inputs: { pocketImageList: "pocketImageList" }, usesInheritance: true, ngImport: i0, template: "<div class=\"bb-block bb-block--xl\">\n  <h2 i18n=\"Choose Your Pocket Image and Name@@managePockets.create.details.header\">\n    Choose Your Pocket Image and Name\n  </h2>\n</div>\n<form [formGroup]=\"pocketDetailsForm\" (submit)=\"save()\">\n  <div class=\"bb-block bb-block--xl\">\n    <div class=\"bb-stack bb-stack--wrap bb-stack--align-top\">\n      <div class=\"bb-stack__item bb-stack__item--spacing-xl bb-manage-pockets-create-details__pocket-image-container\">\n        <img \n          [src]=\"selectedImageAssetUrl | async\" \n          class=\"bb-manage-pockets-create-details__pocket-image bb-block bb-block--sm\" \n          alt=\"Representation of the selected pocket type\"\n          i18n-alt=\"Pocket image|changes according to the type of pocket@@managePockets.create.details.selectedImageAssetUrl\"\n          (click)=\"openDialog()\"\n        >\n        <div>\n          <button\n            #button\n            bbButton\n            buttonSize=\"sm\"\n            [block]=\"true\"\n            color=\"link-text\"\n            (click)=\"openDialog()\"\n            i18n=\"Change image button@@managePockets.create.details.button.changeImage\"\n          >\n            Change image\n          </button>\n        </div>\n      </div>\n      <div class=\"bb-stack__break bb-stack__break--xs-down\"></div>\n      <div class=\"bb-stack__item bb-manage-pockets-create-details__input-container\">\n        <bb-input-text-ui\n          formControlName=\"name\"\n          data-role=\"manage-pocket-creation-name\"\n          label=\"What's this Pocket for?\"\n          i18n-label=\"What's this Pocket for?@@managePockets.create.details.input.label\"\n          maxLength=\"50\"\n          [attr.aria-invalid]=\"!isFieldValid(pocketDetailsForm, 'name')\"\n          [attr.aria-describedby]=\"pocketNameError?.id\"\n        ></bb-input-text-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid(pocketDetailsForm, 'name')\">\n          <span \n            #pocketNameError\n            bbDynamicId\n            data-role=\"user-details-phone-number-validation-msg\"\n            i18n=\"You need to specify a Pocket name@@managePockets.create.details.input.validationError.required\"\n          >\n            You need to specify a Pocket name\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bb-button-bar\">    \n    <button \n      bbButton \n      i18n=\"Continue@@managePockets.create.details.button.continue\"\n      class=\"bb-button-bar__button\" \n      type=\"submit\"\n    >\n      Continue\n    </button>\n    <button \n      bbButton \n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel@@managePockets.create.details.button.cancel\"\n      (click)=\"abort()\"\n    >\n      Cancel\n    </button>\n  </div>\n</form>\n\n<bb-modal-ui [isOpen]=\"showDialog\" (cancel)=\"closeDialog()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item\">\n          <span class=\"modal-title\" i18n=\"Choose pocket image@@managePockets.create.details.modal.title\">\n            Choose Pocket Image\n          </span>\n        </div>\n        <div class=\"bb-stack__item--push-right\">\n          <button\n            bbButton\n            (click)=\"closeDialog()\"\n            class=\"bb-stack__item-sm\"\n            color=\"unstyled\"\n            aria-label=\"close dialog\"\n            i18n-aria-label=\"close dialog button@@managePockets.create.details.modal.button.close\"\n          >\n            <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div class=\"bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__box-item bb-manage-pockets-create-details__modal-image-item\" *ngFor=\"let imageName of pocketImageList\" bbAccessibilityKeyboard (click)=\"changeType(imageName)\">\n          <div class=\"bb-block bb-block--sm\">\n            <img\n              class=\"bb-manage-pockets-create-details__pocket-image\"\n              [ngClass]=\"{ 'active': isTypeSelected(imageName)}\"\n              [src]=\"getImage(imageName) | async\" \n              alt=\"\" \n            >\n          </div>\n          <p class=\"bb-text-align-center bb-subtitle bb-text-bold\" [ngClass]=\"isTypeSelected(imageName) ? 'bb-text-primary' : 'bb-text-support'\">\n            {{imageName | bbRegexReplace: '-' : ' ' | titlecase}}\n          </p>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n</bb-modal-ui>", components: [{ type: i3.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i4.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i5.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i5.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i6.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i5.ModalBodyComponent, selector: "bb-modal-body-ui" }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i7.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i8.DynamicIdDirective, selector: "[bbDynamicId]", inputs: ["bbDynamicId"], exportAs: ["bbDynamicId"] }, { type: i5.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i5.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i9.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i10.AccessibilityKeyboardDirective, selector: "[bbAccessibilityKeyboard]" }, { type: i9.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "async": i9.AsyncPipe, "titlecase": i9.TitleCasePipe, "bbRegexReplace": i11.RegexReplacePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-manage-pockets-details',
                    templateUrl: './manage-pockets-details.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }, { type: i2.AssetsService }]; }, propDecorators: { pocketImageList: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,