import { Component, EventEmitter, Input, Output } from '@angular/core';
import { ManagePocketsCreateBaseStep } from '../manage-pockets-create-base-step/manage-pockets-create-base-step';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
import * as i2 from "@backbase/ui-ang/amount";
import * as i3 from "@backbase/ui-ang/load-button";
import * as i4 from "@angular/common";
import * as i5 from "@backbase/ui-ang/button";
export class ManagePocketsConfirmationComponent extends ManagePocketsCreateBaseStep {
    constructor(assetsService) {
        super();
        this.assetsService = assetsService;
        this.newPocket = new EventEmitter();
        this.resolveAsset = this.assetsService.createAssetsResolver({
            widgetName: 'bb-manage-pockets-journey-ang',
            getURIFromAssetID: (assetId) => assetId,
        });
    }
    ngOnInit() {
        var _a;
        this.selectedImageAssetUrl = this.resolveAsset(`${(_a = this.partialPocket) === null || _a === void 0 ? void 0 : _a.icon}-img.webp`);
    }
    saveNewPocket() {
        this.newPocket.emit(this.partialPocket);
    }
}
ManagePocketsConfirmationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsConfirmationComponent, deps: [{ token: i1.AssetsService }], target: i0.ɵɵFactoryTarget.Component });
ManagePocketsConfirmationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ManagePocketsConfirmationComponent, selector: "bb-manage-pockets-confirmation", inputs: { awaitingCreateResponse: "awaitingCreateResponse" }, outputs: { newPocket: "newPocket" }, usesInheritance: true, ngImport: i0, template: "<div class=\"bb-block bb-block--xl\">\n  <h2 i18n=\"Review And Confirm Your Pocket Details@@managePockets.create.confirmation.header\">\n    Review And Confirm Your Pocket Details\n  </h2>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <div class=\"bb-stack bb-stack--density-xl bb-stack--wrap\">\n    <div class=\"bb-stack__item\">\n      <!-- Pocket Image -->\n      <img \n        [src]=\"selectedImageAssetUrl | async\" \n        class=\"bb-manage-pockets-common-pocket-card__pocket-image bb-block bb-block--sm\" \n        alt=\"Representation of the selected pocket type\"\n        i18n-alt=\"Pocket image|changes according to the type of pocket@@managePockets.create.confirmation.selectedImageAssetUrl\"\n      >\n    </div>\n    <div class=\"bb-stack__break bb-stack__break--xs bb-block bb-block--lg\"></div>\n    <div class=\"bb-stack__item bb-stack__item--align-top\">\n      <!-- Pocket Name  -->\n      <div class=\"bb-block bb-block--md\">\n        <p class=\"bb-block bb-block--no-margin bb-subtitle bb-text-support\" i18n=\"Pocket Name@@managePockets.create.confirmation.name.label\">\n          Pocket Name\n        </p>\n        <h3>{{partialPocket?.name}}</h3>  \n      </div>\n  \n      <!-- Goal Date -->\n      <div class=\"bb-block bb-block--md\" *ngIf=\"partialPocket?.goal?.deadline | date as pocketDate\">\n        <p class=\"bb-block bb-block--no-margin bb-subtitle bb-text-support\" i18n=\"Goal Date@@managePockets.create.confirmation.date.label\">\n          Goal Date\n        </p>\n        <h3>{{pocketDate | date}}</h3>  \n      </div>\n  \n      <!-- Goal Amount -->\n      <div class=\"bb-block bb-block--md\" *ngIf=\"partialPocket?.goal?.amountCurrency?.amount as pocketAmount\">\n        <p class=\"bb-block bb-block--no-margin bb-subtitle bb-text-support\" i18n=\"Goal Amount@@managePockets.create.confirmation.amount.label\">\n          Goal Amount\n        </p>\n        <h3>\n          <bb-amount-ui\n            [currency]=\"journeyCurrency\"\n            [amount]=\"pocketAmount\"\n            [mapCurrency]=\"true\"\n          ></bb-amount-ui>\n        </h3>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"bb-button-bar\">    \n  <bb-load-button-ui\n    i18n=\"Confirm Pocket@@managePockets.create.confirmation.button.continue\"\n    color=\"primary\"\n    class=\"bb-button-bar__button\"\n    [isLoading]=\"awaitingCreateResponse\"\n    (click)=\"!awaitingCreateResponse && saveNewPocket()\"\n  >\n    Confirm Pocket\n  </bb-load-button-ui>\n  <button \n    bbButton\n    i18n=\"Back@@managePockets.create.confirmation.button.back\"\n    class=\"bb-button-bar__button\"\n    color=\"secondary\" \n    (click)=\"goBack()\"\n  >\n    Back\n  </button>\n  <button \n    bbButton \n    color=\"link\"\n    class=\"bb-button-bar__button bb-button-bar__button--across\"\n    i18n=\"Cancel@@managePockets.create.confirmation.button.cancel\"\n    (click)=\"abort()\"\n  >\n    Cancel\n  </button>\n</div>\n", components: [{ type: i2.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i3.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i4.AsyncPipe, "date": i4.DatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsConfirmationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-manage-pockets-confirmation',
                    templateUrl: './manage-pockets-confirmation.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.AssetsService }]; }, propDecorators: { awaitingCreateResponse: [{
                type: Input
            }], newPocket: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLXBvY2tldHMtY29uZmlybWF0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLXBvY2tldHMtam91cm5leS9zcmMvbWFuYWdlLXBvY2tldHMtY3JlYXRlL2NvbXBvbmVudHMvbWFuYWdlLXBvY2tldHMtY29uZmlybWF0aW9uL21hbmFnZS1wb2NrZXRzLWNvbmZpcm1hdGlvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wb2NrZXRzLWpvdXJuZXkvc3JjL21hbmFnZS1wb2NrZXRzLWNyZWF0ZS9jb21wb25lbnRzL21hbmFnZS1wb2NrZXRzLWNvbmZpcm1hdGlvbi9tYW5hZ2UtcG9ja2V0cy1jb25maXJtYXRpb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkvRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxvRUFBb0UsQ0FBQzs7Ozs7OztBQU1qSCxNQUFNLE9BQU8sa0NBQW1DLFNBQVEsMkJBQTJCO0lBa0JqRixZQUErQixhQUE0QjtRQUN6RCxLQUFLLEVBQUUsQ0FBQztRQURxQixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQWhCakQsY0FBUyxHQUFHLElBQUksWUFBWSxFQUEwQixDQUFDO1FBV3pELGlCQUFZLEdBQW1CLElBQUksQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUM7WUFDN0UsVUFBVSxFQUFFLCtCQUErQjtZQUMzQyxpQkFBaUIsRUFBRSxDQUFDLE9BQWUsRUFBRSxFQUFFLENBQUMsT0FBTztTQUNoRCxDQUFDLENBQUM7SUFJSCxDQUFDO0lBZkQsUUFBUTs7UUFDTixJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLE1BQUEsSUFBSSxDQUFDLGFBQWEsMENBQUUsSUFBSSxXQUFXLENBQUMsQ0FBQztJQUN6RixDQUFDO0lBRUQsYUFBYTtRQUNYLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUMxQyxDQUFDOztnSUFYVSxrQ0FBa0M7b0hBQWxDLGtDQUFrQyxnTUNWL0MsazVGQWtGQTs0RkR4RWEsa0NBQWtDO2tCQUo5QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLFdBQVcsRUFBRSw4Q0FBOEM7aUJBQzVEO29HQUVVLHNCQUFzQjtzQkFBOUIsS0FBSztnQkFDSSxTQUFTO3NCQUFsQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXNzZXRzUmVzb2x2ZXIsIEFzc2V0c1NlcnZpY2UgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBOZXdQb2NrZXRJdGVtIH0gZnJvbSAnLi4vLi4vLi4vbWFuYWdlLXBvY2tldHMtY29tbW9uL21vZGVsL3BvY2tldC1pdGVtLm1vZGVsJztcbmltcG9ydCB7IE1hbmFnZVBvY2tldHNDcmVhdGVCYXNlU3RlcCB9IGZyb20gJy4uL21hbmFnZS1wb2NrZXRzLWNyZWF0ZS1iYXNlLXN0ZXAvbWFuYWdlLXBvY2tldHMtY3JlYXRlLWJhc2Utc3RlcCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLW1hbmFnZS1wb2NrZXRzLWNvbmZpcm1hdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9tYW5hZ2UtcG9ja2V0cy1jb25maXJtYXRpb24uY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBNYW5hZ2VQb2NrZXRzQ29uZmlybWF0aW9uQ29tcG9uZW50IGV4dGVuZHMgTWFuYWdlUG9ja2V0c0NyZWF0ZUJhc2VTdGVwIGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgYXdhaXRpbmdDcmVhdGVSZXNwb25zZT86IGJvb2xlYW47XG4gIEBPdXRwdXQoKSBuZXdQb2NrZXQgPSBuZXcgRXZlbnRFbWl0dGVyPFBhcnRpYWw8TmV3UG9ja2V0SXRlbT4+KCk7XG4gIHNlbGVjdGVkSW1hZ2VBc3NldFVybD86IE9ic2VydmFibGU8c3RyaW5nPjtcblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnNlbGVjdGVkSW1hZ2VBc3NldFVybCA9IHRoaXMucmVzb2x2ZUFzc2V0KGAke3RoaXMucGFydGlhbFBvY2tldD8uaWNvbn0taW1nLndlYnBgKTtcbiAgfVxuXG4gIHNhdmVOZXdQb2NrZXQoKSB7XG4gICAgdGhpcy5uZXdQb2NrZXQuZW1pdCh0aGlzLnBhcnRpYWxQb2NrZXQpO1xuICB9XG5cbiAgcHJpdmF0ZSByZXNvbHZlQXNzZXQ6IEFzc2V0c1Jlc29sdmVyID0gdGhpcy5hc3NldHNTZXJ2aWNlLmNyZWF0ZUFzc2V0c1Jlc29sdmVyKHtcbiAgICB3aWRnZXROYW1lOiAnYmItbWFuYWdlLXBvY2tldHMtam91cm5leS1hbmcnLFxuICAgIGdldFVSSUZyb21Bc3NldElEOiAoYXNzZXRJZDogc3RyaW5nKSA9PiBhc3NldElkLFxuICB9KTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgcmVhZG9ubHkgYXNzZXRzU2VydmljZTogQXNzZXRzU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0teGxcIj5cbiAgPGgyIGkxOG49XCJSZXZpZXcgQW5kIENvbmZpcm0gWW91ciBQb2NrZXQgRGV0YWlsc0BAbWFuYWdlUG9ja2V0cy5jcmVhdGUuY29uZmlybWF0aW9uLmhlYWRlclwiPlxuICAgIFJldmlldyBBbmQgQ29uZmlybSBZb3VyIFBvY2tldCBEZXRhaWxzXG4gIDwvaDI+XG48L2Rpdj5cblxuPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1tZFwiPlxuICA8ZGl2IGNsYXNzPVwiYmItc3RhY2sgYmItc3RhY2stLWRlbnNpdHkteGwgYmItc3RhY2stLXdyYXBcIj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItc3RhY2tfX2l0ZW1cIj5cbiAgICAgIDwhLS0gUG9ja2V0IEltYWdlIC0tPlxuICAgICAgPGltZyBcbiAgICAgICAgW3NyY109XCJzZWxlY3RlZEltYWdlQXNzZXRVcmwgfCBhc3luY1wiIFxuICAgICAgICBjbGFzcz1cImJiLW1hbmFnZS1wb2NrZXRzLWNvbW1vbi1wb2NrZXQtY2FyZF9fcG9ja2V0LWltYWdlIGJiLWJsb2NrIGJiLWJsb2NrLS1zbVwiIFxuICAgICAgICBhbHQ9XCJSZXByZXNlbnRhdGlvbiBvZiB0aGUgc2VsZWN0ZWQgcG9ja2V0IHR5cGVcIlxuICAgICAgICBpMThuLWFsdD1cIlBvY2tldCBpbWFnZXxjaGFuZ2VzIGFjY29yZGluZyB0byB0aGUgdHlwZSBvZiBwb2NrZXRAQG1hbmFnZVBvY2tldHMuY3JlYXRlLmNvbmZpcm1hdGlvbi5zZWxlY3RlZEltYWdlQXNzZXRVcmxcIlxuICAgICAgPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFja19fYnJlYWsgYmItc3RhY2tfX2JyZWFrLS14cyBiYi1ibG9jayBiYi1ibG9jay0tbGdcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItc3RhY2tfX2l0ZW0gYmItc3RhY2tfX2l0ZW0tLWFsaWduLXRvcFwiPlxuICAgICAgPCEtLSBQb2NrZXQgTmFtZSAgLS0+XG4gICAgICA8ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLW1kXCI+XG4gICAgICAgIDxwIGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLW5vLW1hcmdpbiBiYi1zdWJ0aXRsZSBiYi10ZXh0LXN1cHBvcnRcIiBpMThuPVwiUG9ja2V0IE5hbWVAQG1hbmFnZVBvY2tldHMuY3JlYXRlLmNvbmZpcm1hdGlvbi5uYW1lLmxhYmVsXCI+XG4gICAgICAgICAgUG9ja2V0IE5hbWVcbiAgICAgICAgPC9wPlxuICAgICAgICA8aDM+e3twYXJ0aWFsUG9ja2V0Py5uYW1lfX08L2gzPiAgXG4gICAgICA8L2Rpdj5cbiAgXG4gICAgICA8IS0tIEdvYWwgRGF0ZSAtLT5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0tbWRcIiAqbmdJZj1cInBhcnRpYWxQb2NrZXQ/LmdvYWw/LmRlYWRsaW5lIHwgZGF0ZSBhcyBwb2NrZXREYXRlXCI+XG4gICAgICAgIDxwIGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLW5vLW1hcmdpbiBiYi1zdWJ0aXRsZSBiYi10ZXh0LXN1cHBvcnRcIiBpMThuPVwiR29hbCBEYXRlQEBtYW5hZ2VQb2NrZXRzLmNyZWF0ZS5jb25maXJtYXRpb24uZGF0ZS5sYWJlbFwiPlxuICAgICAgICAgIEdvYWwgRGF0ZVxuICAgICAgICA8L3A+XG4gICAgICAgIDxoMz57e3BvY2tldERhdGUgfCBkYXRlfX08L2gzPiAgXG4gICAgICA8L2Rpdj5cbiAgXG4gICAgICA8IS0tIEdvYWwgQW1vdW50IC0tPlxuICAgICAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1tZFwiICpuZ0lmPVwicGFydGlhbFBvY2tldD8uZ29hbD8uYW1vdW50Q3VycmVuY3k/LmFtb3VudCBhcyBwb2NrZXRBbW91bnRcIj5cbiAgICAgICAgPHAgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0tbm8tbWFyZ2luIGJiLXN1YnRpdGxlIGJiLXRleHQtc3VwcG9ydFwiIGkxOG49XCJHb2FsIEFtb3VudEBAbWFuYWdlUG9ja2V0cy5jcmVhdGUuY29uZmlybWF0aW9uLmFtb3VudC5sYWJlbFwiPlxuICAgICAgICAgIEdvYWwgQW1vdW50XG4gICAgICAgIDwvcD5cbiAgICAgICAgPGgzPlxuICAgICAgICAgIDxiYi1hbW91bnQtdWlcbiAgICAgICAgICAgIFtjdXJyZW5jeV09XCJqb3VybmV5Q3VycmVuY3lcIlxuICAgICAgICAgICAgW2Ftb3VudF09XCJwb2NrZXRBbW91bnRcIlxuICAgICAgICAgICAgW21hcEN1cnJlbmN5XT1cInRydWVcIlxuICAgICAgICAgID48L2JiLWFtb3VudC11aT5cbiAgICAgICAgPC9oMz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuXG5cbjxkaXYgY2xhc3M9XCJiYi1idXR0b24tYmFyXCI+ICAgIFxuICA8YmItbG9hZC1idXR0b24tdWlcbiAgICBpMThuPVwiQ29uZmlybSBQb2NrZXRAQG1hbmFnZVBvY2tldHMuY3JlYXRlLmNvbmZpcm1hdGlvbi5idXR0b24uY29udGludWVcIlxuICAgIGNvbG9yPVwicHJpbWFyeVwiXG4gICAgY2xhc3M9XCJiYi1idXR0b24tYmFyX19idXR0b25cIlxuICAgIFtpc0xvYWRpbmddPVwiYXdhaXRpbmdDcmVhdGVSZXNwb25zZVwiXG4gICAgKGNsaWNrKT1cIiFhd2FpdGluZ0NyZWF0ZVJlc3BvbnNlICYmIHNhdmVOZXdQb2NrZXQoKVwiXG4gID5cbiAgICBDb25maXJtIFBvY2tldFxuICA8L2JiLWxvYWQtYnV0dG9uLXVpPlxuICA8YnV0dG9uIFxuICAgIGJiQnV0dG9uXG4gICAgaTE4bj1cIkJhY2tAQG1hbmFnZVBvY2tldHMuY3JlYXRlLmNvbmZpcm1hdGlvbi5idXR0b24uYmFja1wiXG4gICAgY2xhc3M9XCJiYi1idXR0b24tYmFyX19idXR0b25cIlxuICAgIGNvbG9yPVwic2Vjb25kYXJ5XCIgXG4gICAgKGNsaWNrKT1cImdvQmFjaygpXCJcbiAgPlxuICAgIEJhY2tcbiAgPC9idXR0b24+XG4gIDxidXR0b24gXG4gICAgYmJCdXR0b24gXG4gICAgY29sb3I9XCJsaW5rXCJcbiAgICBjbGFzcz1cImJiLWJ1dHRvbi1iYXJfX2J1dHRvbiBiYi1idXR0b24tYmFyX19idXR0b24tLWFjcm9zc1wiXG4gICAgaTE4bj1cIkNhbmNlbEBAbWFuYWdlUG9ja2V0cy5jcmVhdGUuY29uZmlybWF0aW9uLmJ1dHRvbi5jYW5jZWxcIlxuICAgIChjbGljayk9XCJhYm9ydCgpXCJcbiAgPlxuICAgIENhbmNlbFxuICA8L2J1dHRvbj5cbjwvZGl2PlxuIl19