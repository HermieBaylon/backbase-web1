import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../manage-pockets-common/services/manage-pockets.service";
import * as i2 from "@backbase/foundation-ang/core";
import * as i3 from "@angular/router";
import * as i4 from "../manage-pockets-journey-config.service";
import * as i5 from "@backbase/ui-ang/header";
import * as i6 from "../manage-pockets-list/components/manage-pockets-list-wrapper/manage-pockets-list-wrapper.component";
import * as i7 from "@backbase/ui-ang/loading-indicator";
import * as i8 from "@angular/common";
export class ManagePocketsListViewComponent {
    constructor(managePocketsService, assetsService, router, route, configService) {
        this.managePocketsService = managePocketsService;
        this.assetsService = assetsService;
        this.router = router;
        this.route = route;
        this.configService = configService;
        /**
         * Api Error status observable. Will return `true` is API fails for any reason
         */
        this.apiErrorStatus$ = this.managePocketsService.pocketListApiError$;
        this.resolveAsset = this.assetsService.createAssetsResolver({
            widgetName: 'bb-manage-pockets-journey-ang',
            getURIFromAssetID: (assetId) => assetId,
        });
    }
    ngOnInit() {
        this.refreshPocketList();
    }
    refreshPocketList() {
        this.pocketList$ = this.managePocketsService.retrievePocketList();
    }
    goToCreatePocket() {
        this.router.navigate(['../create'], { relativeTo: this.route });
    }
    goToPocketTransfer(pocketTransferItem) {
        this.router.navigate(['../transfer'], { state: pocketTransferItem, relativeTo: this.route });
    }
    get imageEmptyStateUrl() {
        return this.resolveAsset('manage-pockets-empty-state-img.webp');
    }
}
ManagePocketsListViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsListViewComponent, deps: [{ token: i1.ManagePocketsService }, { token: i2.AssetsService }, { token: i3.Router }, { token: i3.ActivatedRoute }, { token: i4.ManagePocketsJourneyConfigService }], target: i0.ɵɵFactoryTarget.Component });
ManagePocketsListViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ManagePocketsListViewComponent, selector: "bb-manage-pockets-list-view", ngImport: i0, template: "<div class=\"heading-widget bb-heading-widget px-0\" *ngIf=\"configService.displayHeaders\">\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Pockets\"\n    i18n-heading=\"Pockets heading@@managePockets.listView.heading.title\"\n  ></bb-header-ui>\n</div>\n\n<bb-manage-pockets-list-wrapper\n  *ngIf=\"pocketList$ | async as pocketList; else loadingState\"\n  [pocketList]=\"pocketList\"\n  [pocketListApiError]=\"apiErrorStatus$ | async\"\n  [emptyStateImageUrl]=\"imageEmptyStateUrl | async\"\n  (createPocket)=\"goToCreatePocket()\"\n  (pocketTransfer)=\"goToPocketTransfer($event)\"\n  (refreshData)=\"refreshPocketList()\"\n></bb-manage-pockets-list-wrapper>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui \n    loaderSize=\"lg\" \n    text=\"Loading your pockets...\"\n    i18n-text=\"Loading your pockets...|Text for the loading indicator@@managePockets.listView.loading.indicator.text\"\n  ></bb-loading-indicator-ui>\n</ng-template>", components: [{ type: i5.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i6.ManagePocketsListWrapperComponent, selector: "bb-manage-pockets-list-wrapper", inputs: ["pocketList", "pocketListApiError", "emptyStateImageUrl"], outputs: ["refreshData", "createPocket", "pocketTransfer"] }, { type: i7.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i8.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsListViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-manage-pockets-list-view',
                    templateUrl: './manage-pockets-list-view.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.ManagePocketsService }, { type: i2.AssetsService }, { type: i3.Router }, { type: i3.ActivatedRoute }, { type: i4.ManagePocketsJourneyConfigService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLXBvY2tldHMtbGlzdC12aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLXBvY2tldHMtam91cm5leS9zcmMvdmlld3MvbWFuYWdlLXBvY2tldHMtbGlzdC12aWV3LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLXBvY2tldHMtam91cm5leS9zcmMvdmlld3MvbWFuYWdlLXBvY2tldHMtbGlzdC12aWV3LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7QUFZbEQsTUFBTSxPQUFPLDhCQUE4QjtJQW1DekMsWUFDbUIsb0JBQTBDLEVBQzFDLGFBQTRCLEVBQzVCLE1BQWMsRUFDZCxLQUFxQixFQUM3QixhQUFnRDtRQUp4Qyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO1FBQzFDLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBQzVCLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQUM3QixrQkFBYSxHQUFiLGFBQWEsQ0FBbUM7UUFuQzNEOztXQUVHO1FBQ0gsb0JBQWUsR0FBSSxJQUFJLENBQUMsb0JBQW9CLENBQUMsbUJBQW1CLENBQUM7UUFrQnpELGlCQUFZLEdBQW1CLElBQUksQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUM7WUFDN0UsVUFBVSxFQUFFLCtCQUErQjtZQUMzQyxpQkFBaUIsRUFBRSxDQUFDLE9BQWUsRUFBRSxFQUFFLENBQUMsT0FBTztTQUNoRCxDQUFDLENBQUM7SUFZQSxDQUFDO0lBL0JKLFFBQVE7UUFDTixJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRUQsaUJBQWlCO1FBQ2YsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUNwRSxDQUFDO0lBRUQsZ0JBQWdCO1FBQ2QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLENBQUMsRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBRUQsa0JBQWtCLENBQUMsa0JBQXNDO1FBQ3ZELElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsYUFBYSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsa0JBQWtCLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQy9GLENBQUM7SUFPRCxJQUFJLGtCQUFrQjtRQUNwQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMscUNBQXFDLENBQUMsQ0FBQztJQUNsRSxDQUFDOzs0SEFqQ1UsOEJBQThCO2dIQUE5Qiw4QkFBOEIsbUVDWjNDLHEvQkF5QmM7NEZEYkQsOEJBQThCO2tCQUoxQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLFdBQVcsRUFBRSwyQ0FBMkM7aUJBQ3pEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlLCBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQXNzZXRzUmVzb2x2ZXIsIEFzc2V0c1NlcnZpY2UgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBQb2NrZXRSZXNwb25zZSwgUG9ja2V0VHJhbnNmZXJJdGVtIH0gZnJvbSAnLi4vbWFuYWdlLXBvY2tldHMtY29tbW9uL21vZGVsL3BvY2tldC1pdGVtLm1vZGVsJztcbmltcG9ydCB7IE1hbmFnZVBvY2tldHNTZXJ2aWNlIH0gZnJvbSAnLi4vbWFuYWdlLXBvY2tldHMtY29tbW9uL3NlcnZpY2VzL21hbmFnZS1wb2NrZXRzLnNlcnZpY2UnO1xuaW1wb3J0IHsgTWFuYWdlUG9ja2V0c0pvdXJuZXlDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi4vbWFuYWdlLXBvY2tldHMtam91cm5leS1jb25maWcuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLW1hbmFnZS1wb2NrZXRzLWxpc3QtdmlldycsXG4gIHRlbXBsYXRlVXJsOiAnLi9tYW5hZ2UtcG9ja2V0cy1saXN0LXZpZXcuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBNYW5hZ2VQb2NrZXRzTGlzdFZpZXdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogUG9ja2V0IGxpc3QgcmVzcG9uc2UsIGNhbiBjb250YWluIGVpdGhlciBzdWNjZXNmdWxsIHJlcXVlc3Qgb3IgQVBJIGVycm9yXG4gICAqL1xuICBwb2NrZXRMaXN0JD86IE9ic2VydmFibGU8UG9ja2V0UmVzcG9uc2U+O1xuICAvKipcbiAgICogQXBpIEVycm9yIHN0YXR1cyBvYnNlcnZhYmxlLiBXaWxsIHJldHVybiBgdHJ1ZWAgaXMgQVBJIGZhaWxzIGZvciBhbnkgcmVhc29uXG4gICAqL1xuICBhcGlFcnJvclN0YXR1cyQ/ID0gdGhpcy5tYW5hZ2VQb2NrZXRzU2VydmljZS5wb2NrZXRMaXN0QXBpRXJyb3IkO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucmVmcmVzaFBvY2tldExpc3QoKTtcbiAgfVxuXG4gIHJlZnJlc2hQb2NrZXRMaXN0KCkge1xuICAgIHRoaXMucG9ja2V0TGlzdCQgPSB0aGlzLm1hbmFnZVBvY2tldHNTZXJ2aWNlLnJldHJpZXZlUG9ja2V0TGlzdCgpO1xuICB9XG5cbiAgZ29Ub0NyZWF0ZVBvY2tldCgpIHtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbJy4uL2NyZWF0ZSddLCB7IHJlbGF0aXZlVG86IHRoaXMucm91dGUgfSk7XG4gIH1cblxuICBnb1RvUG9ja2V0VHJhbnNmZXIocG9ja2V0VHJhbnNmZXJJdGVtOiBQb2NrZXRUcmFuc2Zlckl0ZW0pIHtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbJy4uL3RyYW5zZmVyJ10sIHsgc3RhdGU6IHBvY2tldFRyYW5zZmVySXRlbSwgcmVsYXRpdmVUbzogdGhpcy5yb3V0ZSB9KTtcbiAgfVxuXG4gIHByaXZhdGUgcmVzb2x2ZUFzc2V0OiBBc3NldHNSZXNvbHZlciA9IHRoaXMuYXNzZXRzU2VydmljZS5jcmVhdGVBc3NldHNSZXNvbHZlcih7XG4gICAgd2lkZ2V0TmFtZTogJ2JiLW1hbmFnZS1wb2NrZXRzLWpvdXJuZXktYW5nJyxcbiAgICBnZXRVUklGcm9tQXNzZXRJRDogKGFzc2V0SWQ6IHN0cmluZykgPT4gYXNzZXRJZCxcbiAgfSk7XG5cbiAgZ2V0IGltYWdlRW1wdHlTdGF0ZVVybCgpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xuICAgIHJldHVybiB0aGlzLnJlc29sdmVBc3NldCgnbWFuYWdlLXBvY2tldHMtZW1wdHktc3RhdGUtaW1nLndlYnAnKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVhZG9ubHkgbWFuYWdlUG9ja2V0c1NlcnZpY2U6IE1hbmFnZVBvY2tldHNTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgYXNzZXRzU2VydmljZTogQXNzZXRzU2VydmljZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgcm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgIHJlYWRvbmx5IGNvbmZpZ1NlcnZpY2U6IE1hbmFnZVBvY2tldHNKb3VybmV5Q29uZmlnU2VydmljZSxcbiAgKSB7fVxufVxuIiwiPGRpdiBjbGFzcz1cImhlYWRpbmctd2lkZ2V0IGJiLWhlYWRpbmctd2lkZ2V0IHB4LTBcIiAqbmdJZj1cImNvbmZpZ1NlcnZpY2UuZGlzcGxheUhlYWRlcnNcIj5cbiAgPGJiLWhlYWRlci11aVxuICAgIGhlYWRpbmdUeXBlPVwiaDFcIlxuICAgIGhlYWRpbmdDbGFzc2VzPVwiYmItaGVhZGluZy13aWRnZXRfX2hlYWRpbmdcIlxuICAgIGhlYWRpbmc9XCJQb2NrZXRzXCJcbiAgICBpMThuLWhlYWRpbmc9XCJQb2NrZXRzIGhlYWRpbmdAQG1hbmFnZVBvY2tldHMubGlzdFZpZXcuaGVhZGluZy50aXRsZVwiXG4gID48L2JiLWhlYWRlci11aT5cbjwvZGl2PlxuXG48YmItbWFuYWdlLXBvY2tldHMtbGlzdC13cmFwcGVyXG4gICpuZ0lmPVwicG9ja2V0TGlzdCQgfCBhc3luYyBhcyBwb2NrZXRMaXN0OyBlbHNlIGxvYWRpbmdTdGF0ZVwiXG4gIFtwb2NrZXRMaXN0XT1cInBvY2tldExpc3RcIlxuICBbcG9ja2V0TGlzdEFwaUVycm9yXT1cImFwaUVycm9yU3RhdHVzJCB8IGFzeW5jXCJcbiAgW2VtcHR5U3RhdGVJbWFnZVVybF09XCJpbWFnZUVtcHR5U3RhdGVVcmwgfCBhc3luY1wiXG4gIChjcmVhdGVQb2NrZXQpPVwiZ29Ub0NyZWF0ZVBvY2tldCgpXCJcbiAgKHBvY2tldFRyYW5zZmVyKT1cImdvVG9Qb2NrZXRUcmFuc2ZlcigkZXZlbnQpXCJcbiAgKHJlZnJlc2hEYXRhKT1cInJlZnJlc2hQb2NrZXRMaXN0KClcIlxuPjwvYmItbWFuYWdlLXBvY2tldHMtbGlzdC13cmFwcGVyPlxuXG48bmctdGVtcGxhdGUgI2xvYWRpbmdTdGF0ZT5cbiAgPGJiLWxvYWRpbmctaW5kaWNhdG9yLXVpIFxuICAgIGxvYWRlclNpemU9XCJsZ1wiIFxuICAgIHRleHQ9XCJMb2FkaW5nIHlvdXIgcG9ja2V0cy4uLlwiXG4gICAgaTE4bi10ZXh0PVwiTG9hZGluZyB5b3VyIHBvY2tldHMuLi58VGV4dCBmb3IgdGhlIGxvYWRpbmcgaW5kaWNhdG9yQEBtYW5hZ2VQb2NrZXRzLmxpc3RWaWV3LmxvYWRpbmcuaW5kaWNhdG9yLnRleHRcIlxuICA+PC9iYi1sb2FkaW5nLWluZGljYXRvci11aT5cbjwvbmctdGVtcGxhdGU+Il19