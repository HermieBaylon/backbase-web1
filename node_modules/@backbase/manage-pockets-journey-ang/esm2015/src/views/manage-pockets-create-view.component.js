import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../manage-pockets-common/services/manage-pockets.service";
import * as i2 from "@angular/router";
import * as i3 from "@backbase/ui-ang/notification";
import * as i4 from "../manage-pockets-journey-config.service";
import * as i5 from "@backbase/ui-ang/header";
import * as i6 from "../manage-pockets-create/components/manage-pockets-create-wrapper/manage-pockets-create-wrapper.component";
import * as i7 from "@angular/common";
export class ManagePocketsCreateViewComponent {
    constructor(managePocketsService, router, route, cd, notificationService, configService) {
        this.managePocketsService = managePocketsService;
        this.router = router;
        this.route = route;
        this.cd = cd;
        this.notificationService = notificationService;
        this.configService = configService;
        this.awaitingCreateResponse = false;
    }
    abort() {
        this.navigateToList();
    }
    saveNewPocket(newPocketItem) {
        this.awaitingCreateResponse = true;
        const onSuccess = () => {
            this.awaitingCreateResponse = false;
            this.cd.markForCheck();
            this.pushNotification($localize `:Success pocket creation toast message@@managePockets.create.toast.success.message:Your "${newPocketItem.name}:pocket name:" pocket is created.`, 'success', $localize `:Success pocket creation toast header@@managePockets.create.toast.success.header:Your Pocket is Ready!`);
            this.navigateToList();
        };
        const onError = () => {
            this.awaitingCreateResponse = false;
            this.cd.markForCheck();
            this.pushNotification($localize `:Error pocket creation toast message@@managePockets.create.toast.error.message:Unable to proceed, please try again.`, 'error', $localize `:Error pocket creation toast header@@managePockets.create.toast.error.header:Failed to Create Pocket`);
        };
        this.managePocketsService.postPocket(newPocketItem).subscribe(onSuccess, onError);
    }
    navigateToList() {
        this.router.navigate(['../list'], { relativeTo: this.route });
    }
    pushNotification(message, modifier, header) {
        this.notificationService.showNotification({
            header,
            message,
            modifier,
            dismissible: true,
            ttl: 5000,
        });
    }
}
ManagePocketsCreateViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsCreateViewComponent, deps: [{ token: i1.ManagePocketsService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: i0.ChangeDetectorRef }, { token: i3.NotificationService }, { token: i4.ManagePocketsJourneyConfigService }], target: i0.ɵɵFactoryTarget.Component });
ManagePocketsCreateViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ManagePocketsCreateViewComponent, selector: "bb-manage-pockets-create-view", ngImport: i0, template: "<div class=\"heading-widget bb-heading-widget px-0\" *ngIf=\"configService.displayHeaders\">\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Create Pocket\"\n    i18n-heading=\"Create Pocket heading@@managePockets.createView.heading.title\"\n  ></bb-header-ui>\n</div>\n\n<bb-manage-pockets-create-wrapper\n  (cancel)=\"abort()\"\n  (newPocket)=\"saveNewPocket($event)\"\n  [pocketImageList]=\"configService.pocketImageList\"\n  [journeyCurrency]=\"configService.journeyCurrency\"\n  [awaitingCreateResponse]=\"awaitingCreateResponse\"\n></bb-manage-pockets-create-wrapper>", components: [{ type: i5.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i6.ManagePocketsCreateWrapperComponent, selector: "bb-manage-pockets-create-wrapper", inputs: ["pocketImageList", "awaitingCreateResponse"], outputs: ["newPocket"] }], directives: [{ type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManagePocketsCreateViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-manage-pockets-create-view',
                    templateUrl: './manage-pockets-create-view.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.ManagePocketsService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: i0.ChangeDetectorRef }, { type: i3.NotificationService }, { type: i4.ManagePocketsJourneyConfigService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLXBvY2tldHMtY3JlYXRlLXZpZXcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9tYW5hZ2UtcG9ja2V0cy1qb3VybmV5L3NyYy92aWV3cy9tYW5hZ2UtcG9ja2V0cy1jcmVhdGUtdmlldy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wb2NrZXRzLWpvdXJuZXkvc3JjL3ZpZXdzL21hbmFnZS1wb2NrZXRzLWNyZWF0ZS12aWV3LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBcUIsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7QUFZN0QsTUFBTSxPQUFPLGdDQUFnQztJQW9EM0MsWUFDbUIsb0JBQTBDLEVBQzFDLE1BQWMsRUFDZCxLQUFxQixFQUNyQixFQUFxQixFQUNyQixtQkFBd0MsRUFDaEQsYUFBZ0Q7UUFMeEMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQUMxQyxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQ2QsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFDckIsT0FBRSxHQUFGLEVBQUUsQ0FBbUI7UUFDckIsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtRQUNoRCxrQkFBYSxHQUFiLGFBQWEsQ0FBbUM7UUF6RDNELDJCQUFzQixHQUFHLEtBQUssQ0FBQztJQTBENUIsQ0FBQztJQXhESixLQUFLO1FBQ0gsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxhQUFhLENBQUMsYUFBcUM7UUFDakQsSUFBSSxDQUFDLHNCQUFzQixHQUFHLElBQUksQ0FBQztRQUVuQyxNQUFNLFNBQVMsR0FBRyxHQUFHLEVBQUU7WUFDckIsSUFBSSxDQUFDLHNCQUFzQixHQUFHLEtBQUssQ0FBQztZQUNwQyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxnQkFBZ0IsQ0FDbkIsU0FBUyxDQUFBLDRGQUE0RixhQUFhLENBQUMsSUFBSSxtQ0FBbUMsRUFDMUosU0FBUyxFQUNULFNBQVMsQ0FBQSx3R0FBd0csQ0FDbEgsQ0FBQztZQUNGLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN4QixDQUFDLENBQUM7UUFFRixNQUFNLE9BQU8sR0FBRyxHQUFHLEVBQUU7WUFDbkIsSUFBSSxDQUFDLHNCQUFzQixHQUFHLEtBQUssQ0FBQztZQUNwQyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxnQkFBZ0IsQ0FDbkIsU0FBUyxDQUFBLHFIQUFxSCxFQUM5SCxPQUFPLEVBQ1AsU0FBUyxDQUFBLHNHQUFzRyxDQUNoSCxDQUFDO1FBQ0osQ0FBQyxDQUFDO1FBRUYsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BGLENBQUM7SUFFTyxjQUFjO1FBQ3BCLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUVPLGdCQUFnQixDQUN0QixPQUE0QixFQUM1QixRQUErQixFQUMvQixNQUE0QjtRQUU1QixJQUFJLENBQUMsbUJBQW1CLENBQUMsZ0JBQWdCLENBQUM7WUFDeEMsTUFBTTtZQUNOLE9BQU87WUFDUCxRQUFRO1lBQ1IsV0FBVyxFQUFFLElBQUk7WUFDakIsR0FBRyxFQUFFLElBQUk7U0FDVixDQUFDLENBQUM7SUFDTCxDQUFDOzs4SEFsRFUsZ0NBQWdDO2tIQUFoQyxnQ0FBZ0MscUVDWjdDLDBuQkFlb0M7NEZESHZCLGdDQUFnQztrQkFKNUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsK0JBQStCO29CQUN6QyxXQUFXLEVBQUUsNkNBQTZDO2lCQUMzRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlLCBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvbm90aWZpY2F0aW9uJztcbmltcG9ydCB7IE5vdGlmaWNhdGlvbk1lc3NhZ2UsIE5vdGlmaWNhdGlvbk1vZGlmaWVyIH0gZnJvbSAnLi4vbWFuYWdlLXBvY2tldHMtY29tbW9uL21vZGVsL25vdGlmaWNhdGlvbnMubW9kZWwnO1xuaW1wb3J0IHsgTmV3UG9ja2V0SXRlbSB9IGZyb20gJy4uL21hbmFnZS1wb2NrZXRzLWNvbW1vbi9tb2RlbC9wb2NrZXQtaXRlbS5tb2RlbCc7XG5pbXBvcnQgeyBNYW5hZ2VQb2NrZXRzU2VydmljZSB9IGZyb20gJy4uL21hbmFnZS1wb2NrZXRzLWNvbW1vbi9zZXJ2aWNlcy9tYW5hZ2UtcG9ja2V0cy5zZXJ2aWNlJztcbmltcG9ydCB7IE1hbmFnZVBvY2tldHNKb3VybmV5Q29uZmlnU2VydmljZSB9IGZyb20gJy4uL21hbmFnZS1wb2NrZXRzLWpvdXJuZXktY29uZmlnLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1tYW5hZ2UtcG9ja2V0cy1jcmVhdGUtdmlldycsXG4gIHRlbXBsYXRlVXJsOiAnLi9tYW5hZ2UtcG9ja2V0cy1jcmVhdGUtdmlldy5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIE1hbmFnZVBvY2tldHNDcmVhdGVWaWV3Q29tcG9uZW50IHtcbiAgYXdhaXRpbmdDcmVhdGVSZXNwb25zZSA9IGZhbHNlO1xuXG4gIGFib3J0KCkge1xuICAgIHRoaXMubmF2aWdhdGVUb0xpc3QoKTtcbiAgfVxuXG4gIHNhdmVOZXdQb2NrZXQobmV3UG9ja2V0SXRlbTogUGFydGlhbDxOZXdQb2NrZXRJdGVtPikge1xuICAgIHRoaXMuYXdhaXRpbmdDcmVhdGVSZXNwb25zZSA9IHRydWU7XG5cbiAgICBjb25zdCBvblN1Y2Nlc3MgPSAoKSA9PiB7XG4gICAgICB0aGlzLmF3YWl0aW5nQ3JlYXRlUmVzcG9uc2UgPSBmYWxzZTtcbiAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XG4gICAgICB0aGlzLnB1c2hOb3RpZmljYXRpb24oXG4gICAgICAgICRsb2NhbGl6ZWA6U3VjY2VzcyBwb2NrZXQgY3JlYXRpb24gdG9hc3QgbWVzc2FnZUBAbWFuYWdlUG9ja2V0cy5jcmVhdGUudG9hc3Quc3VjY2Vzcy5tZXNzYWdlOllvdXIgXCIke25ld1BvY2tldEl0ZW0ubmFtZX06cG9ja2V0IG5hbWU6XCIgcG9ja2V0IGlzIGNyZWF0ZWQuYCxcbiAgICAgICAgJ3N1Y2Nlc3MnLFxuICAgICAgICAkbG9jYWxpemVgOlN1Y2Nlc3MgcG9ja2V0IGNyZWF0aW9uIHRvYXN0IGhlYWRlckBAbWFuYWdlUG9ja2V0cy5jcmVhdGUudG9hc3Quc3VjY2Vzcy5oZWFkZXI6WW91ciBQb2NrZXQgaXMgUmVhZHkhYCxcbiAgICAgICk7XG4gICAgICB0aGlzLm5hdmlnYXRlVG9MaXN0KCk7XG4gICAgfTtcblxuICAgIGNvbnN0IG9uRXJyb3IgPSAoKSA9PiB7XG4gICAgICB0aGlzLmF3YWl0aW5nQ3JlYXRlUmVzcG9uc2UgPSBmYWxzZTtcbiAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XG4gICAgICB0aGlzLnB1c2hOb3RpZmljYXRpb24oXG4gICAgICAgICRsb2NhbGl6ZWA6RXJyb3IgcG9ja2V0IGNyZWF0aW9uIHRvYXN0IG1lc3NhZ2VAQG1hbmFnZVBvY2tldHMuY3JlYXRlLnRvYXN0LmVycm9yLm1lc3NhZ2U6VW5hYmxlIHRvIHByb2NlZWQsIHBsZWFzZSB0cnkgYWdhaW4uYCxcbiAgICAgICAgJ2Vycm9yJyxcbiAgICAgICAgJGxvY2FsaXplYDpFcnJvciBwb2NrZXQgY3JlYXRpb24gdG9hc3QgaGVhZGVyQEBtYW5hZ2VQb2NrZXRzLmNyZWF0ZS50b2FzdC5lcnJvci5oZWFkZXI6RmFpbGVkIHRvIENyZWF0ZSBQb2NrZXRgLFxuICAgICAgKTtcbiAgICB9O1xuXG4gICAgdGhpcy5tYW5hZ2VQb2NrZXRzU2VydmljZS5wb3N0UG9ja2V0KG5ld1BvY2tldEl0ZW0pLnN1YnNjcmliZShvblN1Y2Nlc3MsIG9uRXJyb3IpO1xuICB9XG5cbiAgcHJpdmF0ZSBuYXZpZ2F0ZVRvTGlzdCgpIHtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbJy4uL2xpc3QnXSwgeyByZWxhdGl2ZVRvOiB0aGlzLnJvdXRlIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBwdXNoTm90aWZpY2F0aW9uKFxuICAgIG1lc3NhZ2U6IE5vdGlmaWNhdGlvbk1lc3NhZ2UsXG4gICAgbW9kaWZpZXI/OiBOb3RpZmljYXRpb25Nb2RpZmllcixcbiAgICBoZWFkZXI/OiBOb3RpZmljYXRpb25NZXNzYWdlLFxuICApIHtcbiAgICB0aGlzLm5vdGlmaWNhdGlvblNlcnZpY2Uuc2hvd05vdGlmaWNhdGlvbih7XG4gICAgICBoZWFkZXIsXG4gICAgICBtZXNzYWdlLFxuICAgICAgbW9kaWZpZXIsXG4gICAgICBkaXNtaXNzaWJsZTogdHJ1ZSxcbiAgICAgIHR0bDogNTAwMCxcbiAgICB9KTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVhZG9ubHkgbWFuYWdlUG9ja2V0c1NlcnZpY2U6IE1hbmFnZVBvY2tldHNTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgcm91dGVyOiBSb3V0ZXIsXG4gICAgcHJpdmF0ZSByZWFkb25seSByb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgcHJpdmF0ZSByZWFkb25seSBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgcHJpdmF0ZSByZWFkb25seSBub3RpZmljYXRpb25TZXJ2aWNlOiBOb3RpZmljYXRpb25TZXJ2aWNlLFxuICAgIHJlYWRvbmx5IGNvbmZpZ1NlcnZpY2U6IE1hbmFnZVBvY2tldHNKb3VybmV5Q29uZmlnU2VydmljZSxcbiAgKSB7fVxufVxuIiwiPGRpdiBjbGFzcz1cImhlYWRpbmctd2lkZ2V0IGJiLWhlYWRpbmctd2lkZ2V0IHB4LTBcIiAqbmdJZj1cImNvbmZpZ1NlcnZpY2UuZGlzcGxheUhlYWRlcnNcIj5cbiAgPGJiLWhlYWRlci11aVxuICAgIGhlYWRpbmdUeXBlPVwiaDFcIlxuICAgIGhlYWRpbmdDbGFzc2VzPVwiYmItaGVhZGluZy13aWRnZXRfX2hlYWRpbmdcIlxuICAgIGhlYWRpbmc9XCJDcmVhdGUgUG9ja2V0XCJcbiAgICBpMThuLWhlYWRpbmc9XCJDcmVhdGUgUG9ja2V0IGhlYWRpbmdAQG1hbmFnZVBvY2tldHMuY3JlYXRlVmlldy5oZWFkaW5nLnRpdGxlXCJcbiAgPjwvYmItaGVhZGVyLXVpPlxuPC9kaXY+XG5cbjxiYi1tYW5hZ2UtcG9ja2V0cy1jcmVhdGUtd3JhcHBlclxuICAoY2FuY2VsKT1cImFib3J0KClcIlxuICAobmV3UG9ja2V0KT1cInNhdmVOZXdQb2NrZXQoJGV2ZW50KVwiXG4gIFtwb2NrZXRJbWFnZUxpc3RdPVwiY29uZmlnU2VydmljZS5wb2NrZXRJbWFnZUxpc3RcIlxuICBbam91cm5leUN1cnJlbmN5XT1cImNvbmZpZ1NlcnZpY2Uuam91cm5leUN1cnJlbmN5XCJcbiAgW2F3YWl0aW5nQ3JlYXRlUmVzcG9uc2VdPVwiYXdhaXRpbmdDcmVhdGVSZXNwb25zZVwiXG4+PC9iYi1tYW5hZ2UtcG9ja2V0cy1jcmVhdGUtd3JhcHBlcj4iXX0=