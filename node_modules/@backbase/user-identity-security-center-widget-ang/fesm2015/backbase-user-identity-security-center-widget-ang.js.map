{"version":3,"file":"backbase-user-identity-security-center-widget-ang.js","sources":["../../../../libs/user-identity-security-center-widget/src/change-password-form/change-password-form.component.ts","../../../../libs/user-identity-security-center-widget/src/change-password-form/change-password-form.component.html","../../../../libs/user-identity-security-center-widget/src/change-password-form/change-password-form.module.ts","../../../../libs/user-identity-security-center-widget/src/types/user-identity-security-center-widget.type.ts","../../../../libs/user-identity-security-center-widget/src/user-identity-security-center-widget.component.ts","../../../../libs/user-identity-security-center-widget/src/user-identity-security-center-widget.component.html","../../../../libs/user-identity-security-center-widget/src/user-identity-security-center-widget.module.ts","../../../../libs/user-identity-security-center-widget/backbase-user-identity-security-center-widget-ang.ts"],"sourcesContent":["import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Component, Directive, EventEmitter, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { UserDataService } from '@backbase/user-common';\nimport { ConnectableObservable, of, Subject } from 'rxjs';\nimport { catchError, distinctUntilChanged, publish, takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-user-identity-security-center-widget-change-password-form',\n  templateUrl: './change-password-form.component.html',\n})\nexport class ChangePasswordFormComponent implements OnInit, OnDestroy {\n  /** @deprecated */\n  @ViewChild('notificationSuccess', { static: true }) notificationSuccessTemplate: TemplateRef<any> | undefined;\n\n  /** @deprecated */\n  @ViewChild('notificationFailure', { static: true }) notificationFailureTemplate: TemplateRef<any> | undefined;\n\n  /** @deprecated */\n  @ViewChild('notificationFailureLogin') notificationFailureTemplateLogin: TemplateRef<any> | undefined;\n\n  @Output() close = new EventEmitter<void>();\n  @Output() passwordChange = new EventEmitter<void>();\n  @Output() error = new EventEmitter<HttpErrorResponse>();\n\n  readonly hostRef = this;\n  private isSubmitted = false;\n  private readonly componentDestroyed = new Subject<void>();\n  passwordForm: FormGroup | undefined;\n  isSubmitting = false;\n\n  constructor(private readonly formBuilder: FormBuilder, private readonly userDataService: UserDataService) {}\n\n  ngOnDestroy(): void {\n    this.componentDestroyed.next();\n    this.componentDestroyed.complete();\n  }\n\n  ngOnInit() {\n    this.passwordForm = this.formBuilder.group({\n      currentPassword: ['', Validators.required],\n      inputNewPassword: ['', [Validators.required, this.isPasswordUnique]],\n      confirmNewPassword: ['', [Validators.required, this.passwordMatchesValidator]],\n    });\n\n    this.form.controls.currentPassword.valueChanges\n      .pipe(distinctUntilChanged(), takeUntil(this.componentDestroyed))\n      .subscribe(() => {\n        this.form.controls.inputNewPassword.updateValueAndValidity();\n      });\n\n    this.form.controls.inputNewPassword.valueChanges\n      .pipe(distinctUntilChanged(), takeUntil(this.componentDestroyed))\n      .subscribe(() => {\n        this.form.controls.confirmNewPassword.updateValueAndValidity();\n      });\n  }\n\n  showErrors(control: AbstractControl) {\n    return control.invalid && this.isSubmitted;\n  }\n\n  closePasswordModal() {\n    this.form.reset();\n    this.close.emit();\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n\n    if (!this.form.valid) {\n      return;\n    }\n    const currentPassword = this.form.controls.currentPassword.value;\n    const newPassword = this.form.controls.confirmNewPassword.value;\n\n    this.isSubmitting = true;\n\n    (\n      this.userDataService.changeUserPassword(currentPassword, newPassword).pipe(\n        tap(() => this.passwordChange.emit()),\n        catchError((error) => {\n          this.handleError(error);\n\n          return of(undefined);\n        }),\n        tap(() => {\n          this.isSubmitting = false;\n          this.closePasswordModal();\n          this.form.enable({ emitEvent: false });\n        }),\n        publish(),\n      ) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n\n  handleError(error: HttpErrorResponse) {\n    this.error.emit(error);\n  }\n\n  get form() {\n    if (!this.passwordForm) {\n      throw new Error('Form is undefined.');\n    }\n\n    return this.passwordForm;\n  }\n\n  readonly isPasswordUnique = () => {\n    if (this.passwordForm) {\n      const match = this.form.controls.inputNewPassword.value === this.form.controls.currentPassword.value;\n\n      // eslint-disable-next-line no-null/no-null\n      return match && this.form.controls.inputNewPassword.value ? { usedPassword: true } : null;\n    }\n\n    return false;\n  };\n\n  readonly passwordMatchesValidator = () => {\n    if (this.passwordForm) {\n      const match = this.form.controls.inputNewPassword.value === this.form.controls.confirmNewPassword.value;\n\n      // eslint-disable-next-line no-null/no-null\n      return match ? null : { mismatched: true };\n    }\n\n    return false;\n  };\n}\n\n@Directive({\n  selector: '[bbUserIdentitySecurityCenterChangePasswordForm]',\n})\nexport class UserIdentitySecurityCenterPasswordFormCustomizableDirective extends BbTemplate<\n  ChangePasswordFormComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserIdentitySecurityCenterWidgetPasswordPolicyCustomizable]',\n})\nexport class UserIdentitySecurityCenterPasswordFormPasswordPolicyCustomizableDirective extends BbTemplate<\n  ChangePasswordFormComponent,\n  undefined\n> {}\n","<ng-container bbUserIdentitySecurityCenterChangePasswordForm [bbHostRef]=\"hostRef\">\n</ng-container>  \n  \n<ng-template bbUserIdentitySecurityCenterChangePasswordForm let-hostRef>\n  <div *ngIf=\"hostRef.form\">\n    <div class=\"bb-block bb-block--lg\">\n      <bb-header-ui\n        headingType=\"h3\"\n        heading=\"Change Password\"\n        i18n-heading=\"Header for changing a users password@@bb-user-identity-security-center-widget.bb-header-ui\">\n      </bb-header-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\"\n      i18n=\"Label for current password description@@bb-user-identity-security-center-widget.current-password-description\">\n      To change your password, we must verify your current one first.\n    </div>\n\n    <form [formGroup]=\"hostRef.form\" (submit)=\"hostRef.onSubmit()\">\n      <div data-role=\"identity-security-center-change-password-form\">\n        <div class=\"bb-block bb-block--xl\">\n          <bb-input-password-ui\n            class=\"bb-form-field bb-form-field--md\"\n            label=\"Current password\"\n            i18n-label=\"Current password input label|Label text for current password input@@bb-user-identity-security-center-widget.current-password-input-label\"\n            formControlName=\"currentPassword\"\n            [autofocus]=\"true\" \n            maxLength=\"255\"\n            data-role=\"identity-security-center-current-password-input\">\n          </bb-input-password-ui>\n          <bb-input-validation-message-ui\n            [showErrors]=\"hostRef.showErrors(hostRef.form.controls.currentPassword)\">\n            <span *ngIf=\"hostRef.form.controls.currentPassword.errors?.required\"\n              data-role=\"identity-security-center-current-password-error\"\n              i18n=\"Error message for blank current password field|Error message requiring password for current password field@@bb-user-identity-security-center-widget.current-password-blank-error-message\">\n              You must enter your current password\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n\n        <ng-container bbUserIdentitySecurityCenterWidgetPasswordPolicyCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n        <div class=\"form-group\">\n          <bb-input-password-ui\n            class=\"bb-form-field bb-form-field--md\"\n            label=\"New password\"\n            formControlName=\"inputNewPassword\"\n            maxLength=\"255\"\n            data-role=\"identity-security-center-new-password-input\"\n            i18n-label=\"New password input label|Label text for new password input@@bb-user-identity-security-center-widget.new-password-input-label\">\n          </bb-input-password-ui>\n          <bb-input-validation-message-ui\n            [showErrors]=\"hostRef.showErrors(hostRef.form.controls.inputNewPassword)\">\n            <span *ngIf=\"hostRef.form.controls.inputNewPassword.errors?.required\"\n              data-role=\"identity-security-center-new-password-error\"\n              i18n=\"Error message for blank new password field|Error message requiring password for new password field@@bb-user-identity-security-center-widget.new-password-blank-error-message\">\n              You must enter a new password\n            </span>\n            <span *ngIf=\"hostRef.form.controls.inputNewPassword.errors?.usedPassword\"\n              data-role=\"identity-security-center-old-password-error\"\n              i18n=\"Error message for current password matching new password field|Error message requiring unique password for new password field@@bb-user-identity-security-center-widget.new-password-unique-error-message\">\n              New password must be different to current password \n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n\n        <div class=\"bb-block bb-block--lg\">\n          <bb-input-password-ui\n            class=\"bb-form-field bb-form-field--md\"\n            label=\"Confirm new password\"\n            formControlName=\"confirmNewPassword\"\n            maxLength=\"255\"\n            data-role=\"identity-security-center-confirm-password-input\"\n            i18n-label=\"Confirm password input label|Label text for confirm password input@@bb-user-identity-security-center-widget.confirm-password-input-label\">\n          </bb-input-password-ui>\n          <bb-input-validation-message-ui\n            [showErrors]=\"hostRef.showErrors(hostRef.form.controls.confirmNewPassword)\">\n            <span *ngIf=\"hostRef.form.controls.confirmNewPassword.errors?.mismatched\"\n              data-role=\"identity-security-center-confirm-password-mismatch-error\"\n              i18n=\"Error message for mismatch passwords|Error message for mismatch passwords for confirm new password field@@bb-user-identity-security-center-widget.confirm-password-mismatch-error-message\">\n              Passwords don't match\n            </span>\n            <span *ngIf=\"hostRef.form.controls.confirmNewPassword.errors?.required\"\n              data-role=\"identity-security-center-confirm-password-blank-error\"\n              i18n=\"Error message for blank password|Error message for blank password for confirm new password field@@bb-user-identity-security-center-widget.confirm-password-blank-error-message\">\n              You must re-type your new password\n            </span>\n          </bb-input-validation-message-ui> \n        </div>\n      </div>\n      <div class=\"bb-button-bar--reverse\">\n        <bb-load-button-ui\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          button-size=\"md\" \n          data-role=\"password-form-change-password-button\"\n          type=\"submit\"\n          i18n=\"Change password button|Text for change password button@@bb-user-identity-security-center-widget.change-password-button-text\"\n          [isLoading]=\"hostRef.isSubmitting\">\n          Change Password\n        </bb-load-button-ui>\n        <button bbButton\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          button-size=\"md\" \n          data-role=\"identity-security-center-cancel-button\"\n          (click)=\"hostRef.closePasswordModal()\" \n          (mousedown)=\"hostRef.closePasswordModal()\" \n          type=\"button\"\n          i18n=\"Cancel password button|Text for cancel password button@@bb-user-identity-security-center-widget.cancel-password-button-text\">\n          Cancel\n        </button>\n      </div>\n    </form> \n  </div>\n</ng-template>\n\n\n<ng-template bbUserIdentitySecurityCenterWidgetPasswordPolicyCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--lg\">\n    <div\n      class=\"bb-block bb-block--lg\"\n      i18n=\"Text for password form description@@bb-user-identity-security-center-widget.password-form-text\">\n      Your new password must contain:\n    </div>\n    <ul>\n      <li\n        i18n=\"Text for minimum length password policy bullet point@bb-user-identity-security-center-widget.password-form-policy-length\">\n        A minimum of 6 characters\n      </li>\n      <li\n        i18n=\"Text for uppercase password policy bullet point@bb-user-identity-security-center-widget.password-form-policy-uppercase\">\n        At least one UPPERCASE letter\n      </li>\n      <li\n        i18n=\"Text for lowercase password policy bullet point@bb-user-identity-security-center-widget.password-form-policy-lowecase\">\n        At least one lowercase letter\n      </li>\n    </ul>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { InputPasswordModule } from '@backbase/ui-ang/input-password';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport {\n  ChangePasswordFormComponent,\n  UserIdentitySecurityCenterPasswordFormCustomizableDirective,\n  UserIdentitySecurityCenterPasswordFormPasswordPolicyCustomizableDirective,\n} from './change-password-form.component';\n\nconst passwordForm = [\n  ChangePasswordFormComponent,\n  UserIdentitySecurityCenterPasswordFormPasswordPolicyCustomizableDirective,\n  UserIdentitySecurityCenterPasswordFormCustomizableDirective,\n];\nconst uiModules = [\n  AlertModule,\n  ButtonModule,\n  ErrorCommonStateModule,\n  HeaderModule,\n  LoadingIndicatorModule,\n  ModalModule,\n  InputPasswordModule,\n  InputValidationMessageModule,\n  ReactiveFormsModule,\n  LoadButtonModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { ChangePasswordFormComponent: ChangePasswordFormComponent },\n    }),\n    ...uiModules,\n  ],\n  declarations: [...passwordForm],\n  exports: [...uiModules, ...passwordForm],\n})\nexport class ChangePasswordFormModule {}\n","export enum UserIdentitySecurityCenterActionType {\n  PasswordChanged = '[UserIdentitySecurityCenterWidget] User password changed',\n  PasswordChangeFailed = '[UserIdentitySecurityCenterWidget] User password change failed',\n}\n\nexport interface UserIdentitySecurityCenterWidgetStatus {\n  type: UserIdentitySecurityCenterActionType;\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, Directive, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { ManageProfilePreferencesService, UserDataService } from '@backbase/user-common';\nimport { first } from 'rxjs/operators';\nimport {\n  UserIdentitySecurityCenterActionType,\n  UserIdentitySecurityCenterWidgetStatus,\n} from './types/user-identity-security-center-widget.type';\n\n@Component({\n  selector: 'bb-user-identity-security-center-widget',\n  templateUrl: './user-identity-security-center-widget.component.html',\n  providers: [ManageProfilePreferencesService, UserDataService],\n})\nexport class UserIdentitySecurityCenterWidgetComponent implements OnInit {\n  @ViewChild('notificationSuccess', { static: true }) notificationSuccessTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationFailure', { static: true }) notificationFailureTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationFailureLogin') notificationFailureTemplateLogin: TemplateRef<any> | undefined;\n\n  readonly hostRef = this;\n  openPassword = false;\n  private notificationDelay: number | undefined;\n\n  @Output() readonly widgetStatus = new EventEmitter<UserIdentitySecurityCenterWidgetStatus>();\n\n  /**\n   * Time to live for the success notification message in seconds\n   */\n  @Input() notificationDismissTime: number | undefined;\n\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n  ) {}\n\n  ngOnInit() {\n    if (this.notificationDismissTime) {\n      this.notificationDelay = this.notificationDismissTime * 1000;\n    } else {\n      this.manageProfilePreferencesService\n        .getNotificationDismissTimePreference()\n        .pipe(first())\n        .subscribe((time) => (this.notificationDelay = time * 1000));\n    }\n  }\n\n  toggleChangePassword() {\n    this.openPassword = !this.openPassword;\n  }\n\n  emitPasswordChanged() {\n    this.showNotification(this.notificationSuccessTemplate as TemplateRef<any>, 'success');\n    this.widgetStatus.emit({\n      type: UserIdentitySecurityCenterActionType.PasswordChanged,\n    });\n  }\n\n  emitError(error: HttpErrorResponse) {\n    if (error.status === 400) {\n      this.showNotification(this.notificationFailureTemplateLogin as TemplateRef<any>, 'error');\n    } else {\n      this.showNotification(this.notificationFailureTemplate as TemplateRef<any>, 'error');\n    }\n    this.widgetStatus.emit({\n      type: UserIdentitySecurityCenterActionType.PasswordChangeFailed,\n    });\n  }\n\n  private showNotification(template: TemplateRef<any>, type: 'success' | 'error'): void {\n    this.notificationService.showNotification({\n      message: template,\n      modifier: type,\n      ttl: this.notificationDelay,\n    });\n  }\n}\n\n@Directive({\n  selector: '[bbUserIdentitySecurityCenterWidgetCustomizable]',\n})\nexport class UserIdentitySecurityCenterCustomizableDirective extends BbTemplate<\n  UserIdentitySecurityCenterWidgetComponent,\n  undefined\n> {}\n","<ng-container bbUserIdentitySecurityCenterWidgetCustomizable\n  [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbUserIdentitySecurityCenterWidgetCustomizable\n  let-hostRef>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <bb-header-ui\n        headingType=\"h2\"\n        heading=\"Security Settings\"\n        i18n-heading=\"Header for changing a users password@@bb-user-identity-security-center-widget.bb-header-ui\">\n      </bb-header-ui>\n    </div>\n    <ng-container *ngIf=\"!hostRef.openPassword; else passwordForm\">\n      <div class=\"card-section\">\n        <div class=\"bb-stack\">\n          <strong class=\"bb-stack__item bb-stack__item--fill\"\n            i18n=\"Password list item label text@@bb-user-identity-security-center-widget.home-password-label\">\n            Password\n          </strong>\n          <div class=\"bb-stack__item\">\n            <button bbButton\n              color=\"link\"\n              buttonSize=\"md\"\n              type=\"submit\"\n              data-role=\"identity-security-center-password-change-button\"\n              aria-label=\"Change My Password\"\n              i18n-aria-label=\"Password change button aria label@@bb-user-identity-security-center-widget.change-button-aria-label\"\n              i18n=\"Password change button text@@bb-user-identity-security-center-widget.change-button-text\"\n              (click)=\"hostRef.toggleChangePassword()\">\n              Change\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #passwordForm>\n    <div class=\"card-section card-section--highlight\">\n      <bb-user-identity-security-center-widget-change-password-form\n        (close)=\"hostRef.toggleChangePassword()\"\n        (passwordChange)=\"hostRef.emitPasswordChanged()\"\n        (error)=\"hostRef.emitError($event)\">\n      </bb-user-identity-security-center-widget-change-password-form>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #notificationSuccess>\n  <span \n    data-role=\"user-change-password-success-notification\"\n    i18n=\"Password Reset Success Notification|Notification text for when password reset request is successful@@bb-user-identity-security-center-widget.notification.success\">\n    Password update successful.\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span \n    data-role=\"user-change-password-failure-notification\"\n    i18n=\"Password Reset Failure Notification|Notification text for when password reset request is unsuccessful@@bb-user-identity-security-center-widget.notification.failure\">\n    Could not update password.\n  </span>\n</ng-template>\n\n<ng-template #notificationFailureLogin>\n  <span \n    data-role=\"user-change-password-login-failure-notification\"\n    i18n=\"Password Reset Failure Notification|Notification text for when password reset request is unsuccessful@@bb-user-identity-security-center-widget.notification.failure\">\n    Could not update password. Incorrect login credentials or password policy not met.  \n  </span>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { InputPasswordModule } from '@backbase/ui-ang/input-password';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { UserCommonModule } from '@backbase/user-common';\nimport { ChangePasswordFormModule } from './change-password-form/change-password-form.module';\nimport {\n  UserIdentitySecurityCenterCustomizableDirective,\n  UserIdentitySecurityCenterWidgetComponent,\n} from './user-identity-security-center-widget.component';\n\nconst uiModules = [\n  AlertModule,\n  ButtonModule,\n  ErrorCommonStateModule,\n  HeaderModule,\n  LoadingIndicatorModule,\n  ModalModule,\n  InputPasswordModule,\n  InputValidationMessageModule,\n  ReactiveFormsModule,\n];\n\nconst widgetModules = [ChangePasswordFormModule];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { UserIdentitySecurityCenterWidgetComponent },\n    }),\n    UserCommonModule,\n    ...uiModules,\n    ...widgetModules,\n  ],\n  declarations: [UserIdentitySecurityCenterWidgetComponent, UserIdentitySecurityCenterCustomizableDirective],\n  exports: [\n    UserIdentitySecurityCenterWidgetComponent,\n    UserIdentitySecurityCenterCustomizableDirective,\n    ...uiModules,\n    ...widgetModules,\n  ],\n})\nexport class UserIdentitySecurityCenterWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["uiModules"],"mappings":"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"}