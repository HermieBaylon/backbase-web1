import { HttpErrorResponse } from '@angular/common/http';
import { EventEmitter, OnInit, TemplateRef } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { NotificationService } from '@backbase/ui-ang/notification';
import { ManageProfilePreferencesService } from '@backbase/user-common';
import { UserIdentitySecurityCenterWidgetStatus } from './types/user-identity-security-center-widget.type';
import * as i0 from "@angular/core";
export declare class UserIdentitySecurityCenterWidgetComponent implements OnInit {
    private readonly notificationService;
    private readonly manageProfilePreferencesService;
    notificationSuccessTemplate: TemplateRef<any> | undefined;
    notificationFailureTemplate: TemplateRef<any> | undefined;
    notificationFailureTemplateLogin: TemplateRef<any> | undefined;
    readonly hostRef: this;
    openPassword: boolean;
    private notificationDelay;
    readonly widgetStatus: EventEmitter<UserIdentitySecurityCenterWidgetStatus>;
    /**
     * Time to live for the success notification message in seconds
     */
    notificationDismissTime: number | undefined;
    constructor(notificationService: NotificationService, manageProfilePreferencesService: ManageProfilePreferencesService);
    ngOnInit(): void;
    toggleChangePassword(): void;
    emitPasswordChanged(): void;
    emitError(error: HttpErrorResponse): void;
    private showNotification;
    static ɵfac: i0.ɵɵFactoryDeclaration<UserIdentitySecurityCenterWidgetComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UserIdentitySecurityCenterWidgetComponent, "bb-user-identity-security-center-widget", never, { "notificationDismissTime": "notificationDismissTime"; }, { "widgetStatus": "widgetStatus"; }, never, never>;
}
export declare class UserIdentitySecurityCenterCustomizableDirective extends BbTemplate<UserIdentitySecurityCenterWidgetComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<UserIdentitySecurityCenterCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<UserIdentitySecurityCenterCustomizableDirective, "[bbUserIdentitySecurityCenterWidgetCustomizable]", never, {}, {}, never>;
}
