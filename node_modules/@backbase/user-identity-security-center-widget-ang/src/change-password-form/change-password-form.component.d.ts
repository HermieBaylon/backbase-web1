import { HttpErrorResponse } from '@angular/common/http';
import { EventEmitter, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { UserDataService } from '@backbase/user-common';
import * as i0 from "@angular/core";
export declare class ChangePasswordFormComponent implements OnInit, OnDestroy {
    private readonly formBuilder;
    private readonly userDataService;
    /** @deprecated */
    notificationSuccessTemplate: TemplateRef<any> | undefined;
    /** @deprecated */
    notificationFailureTemplate: TemplateRef<any> | undefined;
    /** @deprecated */
    notificationFailureTemplateLogin: TemplateRef<any> | undefined;
    close: EventEmitter<void>;
    passwordChange: EventEmitter<void>;
    error: EventEmitter<HttpErrorResponse>;
    readonly hostRef: this;
    private isSubmitted;
    private readonly componentDestroyed;
    passwordForm: FormGroup | undefined;
    isSubmitting: boolean;
    constructor(formBuilder: FormBuilder, userDataService: UserDataService);
    ngOnDestroy(): void;
    ngOnInit(): void;
    showErrors(control: AbstractControl): boolean;
    closePasswordModal(): void;
    onSubmit(): void;
    handleError(error: HttpErrorResponse): void;
    get form(): FormGroup;
    readonly isPasswordUnique: () => false | {
        usedPassword: boolean;
    } | null;
    readonly passwordMatchesValidator: () => false | {
        mismatched: boolean;
    } | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<ChangePasswordFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ChangePasswordFormComponent, "bb-user-identity-security-center-widget-change-password-form", never, {}, { "close": "close"; "passwordChange": "passwordChange"; "error": "error"; }, never, never>;
}
export declare class UserIdentitySecurityCenterPasswordFormCustomizableDirective extends BbTemplate<ChangePasswordFormComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<UserIdentitySecurityCenterPasswordFormCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<UserIdentitySecurityCenterPasswordFormCustomizableDirective, "[bbUserIdentitySecurityCenterChangePasswordForm]", never, {}, {}, never>;
}
export declare class UserIdentitySecurityCenterPasswordFormPasswordPolicyCustomizableDirective extends BbTemplate<ChangePasswordFormComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<UserIdentitySecurityCenterPasswordFormPasswordPolicyCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<UserIdentitySecurityCenterPasswordFormPasswordPolicyCustomizableDirective, "[bbUserIdentitySecurityCenterWidgetPasswordPolicyCustomizable]", never, {}, {}, never>;
}
