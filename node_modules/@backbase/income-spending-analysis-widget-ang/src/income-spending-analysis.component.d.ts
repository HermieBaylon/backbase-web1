import { DatePipe } from '@angular/common';
import { AfterViewChecked, ChangeDetectorRef, ElementRef } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { BbTemplate, ItemModel } from '@backbase/foundation-ang/core';
import { CssVariablesService } from '@backbase/ui-ang/css-variables-lib';
import { Period, PeriodFormatters } from '@backbase/ui-ang/period-selector';
import { BehaviorSubject, Observable } from 'rxjs';
import { Arc, ChartColorItem } from './bb-donut-chart-ui/donut-chart.module';
import { MonthSelectorData } from './constants';
import { IncomeSpendingAnalysisWidgetService } from './income-spending-analysis.service';
import { AnalysisType, BarChartOptions, CategoryTotalsDateParams, CategoryTotalsGetParams, CategoryTotalsPeriodSeries, CategoryTotalsSeries } from './model/analysis';
import * as i0 from "@angular/core";
export declare class IncomeSpendingAnalysisWidgetComponent implements AfterViewChecked {
    private readonly service;
    private readonly cssVariableService;
    private readonly model;
    private readonly route;
    private readonly datePipe;
    private readonly cd;
    private readonly locale;
    set analysisTypeValue(value: AnalysisType);
    chartIcon: ElementRef | undefined;
    chartLabel: ElementRef | undefined;
    translationNow: ElementRef | undefined;
    constructor(service: IncomeSpendingAnalysisWidgetService, cssVariableService: CssVariablesService, model: ItemModel, route: ActivatedRoute, datePipe: DatePipe, cd: ChangeDetectorRef, locale: string);
    hostRef: this;
    private readonly isIE;
    private readonly analysisTypeSubject;
    private endDateValue;
    private startDateValue;
    private readonly initialDateParams;
    private labelPositioned;
    private iconHeight;
    private labelHeight;
    iconWidth: number;
    selectedTab: number;
    readonly chartOptions: Observable<BarChartOptions>;
    isLoading: boolean;
    readonly analysisType: Observable<AnalysisType>;
    readonly arrangementIds: Observable<string[]>;
    readonly dateParams: BehaviorSubject<CategoryTotalsDateParams>;
    readonly dataParams: Observable<CategoryTotalsGetParams>;
    readonly analysisData: Observable<CategoryTotalsSeries>;
    readonly analysisPeriodData: Observable<CategoryTotalsPeriodSeries>;
    readonly colors: Observable<ChartColorItem[]>;
    error: string | undefined;
    private getRouteParam;
    private getProperty;
    get startDate(): Date;
    get endDate(): Date;
    get formatters(): PeriodFormatters;
    get isSpending(): Observable<boolean>;
    get relevance(): number;
    selectTab(num: number): void;
    private handleError;
    private formatPeriodData;
    private transformCategoryToIconName;
    private textX;
    private textY;
    getCategoryClass(cssClass: string): string;
    getTextTransition(): string;
    getTransformOffsetY(data: Arc): number;
    getStyleTransform(data: Arc, offsetX: number, offsetY: number): string;
    getAttrTransform(data: Arc, offsetX: number, offsetY: number): string;
    textClass(value: number, isSpending?: boolean): string;
    iconClass(value: number): string;
    abs(value: number): number;
    onPeriodRangeChange(monthSelectorData: MonthSelectorData): void;
    onPeriodChange(period: Period): void;
    customYAxisTickFormatting(totalPeriodSeries: CategoryTotalsPeriodSeries): (amount: string) => string;
    ngAfterViewChecked(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<IncomeSpendingAnalysisWidgetComponent, [null, null, { optional: true; }, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IncomeSpendingAnalysisWidgetComponent, "bb-income-spending-analysis-widget", never, { "analysisTypeValue": "analysisType"; }, {}, never, never>;
}
export declare class IncomeSpendingAnalysisCustomizableDirective extends BbTemplate<IncomeSpendingAnalysisWidgetComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<IncomeSpendingAnalysisCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IncomeSpendingAnalysisCustomizableDirective, "[bbIncomeSpendingAnalysisCustomizable]", never, {}, {}, never>;
}
export declare class IncomeSpendingAnalysisPeriodSelectorCustomizableDirective extends BbTemplate<IncomeSpendingAnalysisWidgetComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<IncomeSpendingAnalysisPeriodSelectorCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IncomeSpendingAnalysisPeriodSelectorCustomizableDirective, "[bbIncomeSpendingAnalysisPeriodSelectorCustomizable]", never, {}, {}, never>;
}
export declare class IncomeSpendingAnalysisChartWrapperCustomizableDirective extends BbTemplate<IncomeSpendingAnalysisWidgetComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<IncomeSpendingAnalysisChartWrapperCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IncomeSpendingAnalysisChartWrapperCustomizableDirective, "[bbIncomeSpendingAnalysisChartWrapperCustomizable]", never, {}, {}, never>;
}
export declare class IncomeSpendingAnalysisCategoriesListCustomizableDirective extends BbTemplate<IncomeSpendingAnalysisWidgetComponent, any | undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<IncomeSpendingAnalysisCategoriesListCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IncomeSpendingAnalysisCategoriesListCustomizableDirective, "[bbIncomeSpendingAnalysisCategoriesListCustomizable]", never, {}, {}, never>;
}
export declare class IncomeSpendingAnalysisChartCustomizableDirective extends BbTemplate<IncomeSpendingAnalysisWidgetComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<IncomeSpendingAnalysisChartCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IncomeSpendingAnalysisChartCustomizableDirective, "[bbIncomeSpendingAnalysisChartCustomizable]", never, {}, {}, never>;
}
export declare class IncomeSpendingAnalysisBarChartWrapperCustomizableDirective extends BbTemplate<IncomeSpendingAnalysisWidgetComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<IncomeSpendingAnalysisBarChartWrapperCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IncomeSpendingAnalysisBarChartWrapperCustomizableDirective, "[bbIncomeSpendingAnalysisBarChartWrapperCustomizable]", never, {}, {}, never>;
}
export declare class IncomeSpendingAnalysisMonthSelectorCustomizableDirective extends BbTemplate<IncomeSpendingAnalysisWidgetComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<IncomeSpendingAnalysisMonthSelectorCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IncomeSpendingAnalysisMonthSelectorCustomizableDirective, "[bbIncomeSpendingAnalysisMonthSelectorCustomizable]", never, {}, {}, never>;
}
