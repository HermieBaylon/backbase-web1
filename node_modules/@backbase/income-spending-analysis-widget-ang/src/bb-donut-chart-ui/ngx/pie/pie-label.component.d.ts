import { OnInit } from '@angular/core';
import { Arc } from '../../model/types';
import * as i0 from "@angular/core";
export declare class PieLabelComponent implements OnInit {
    /**
     * Information about the chart slice.
     */
    data: Arc | undefined;
    /**
     * Radius of the circle.
     */
    radius: number;
    /**
     * Text for the label.
     */
    label: string | undefined;
    /**
     * Color hex for the label.
     */
    color: string | undefined;
    /**
     * Icon name for the label.
     */
    icon: string | undefined;
    /**
     * The maximum number of labels displayed.
     */
    max: number;
    /**
     * Value of the label.
     */
    value: number;
    /**
     * Make the radius of each slice proportional to it's value.
     */
    explodeSlices: boolean;
    /**
     * Enable/Disable animations.
     */
    animations: boolean;
    /**
     * Enable/Disable label trimming.
     */
    labelTrim: boolean;
    /**
     * Set the label trimming size.
     */
    labelTrimSize: number;
    /**
     * Template for the label.
     */
    template: any;
    trimLabel: (label: string, max?: number) => string;
    private readonly isIE;
    constructor();
    get labelText(): string | undefined;
    get textX(): number;
    get textY(): number;
    get textTransition(): string;
    get styleTransform(): string;
    get attrTransform(): string;
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PieLabelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PieLabelComponent, "g[bb-charts-pie-label]", never, { "data": "data"; "radius": "radius"; "label": "label"; "color": "color"; "icon": "icon"; "max": "max"; "value": "value"; "explodeSlices": "explodeSlices"; "animations": "animations"; "labelTrim": "labelTrim"; "labelTrimSize": "labelTrimSize"; "template": "template"; }, {}, never, never>;
}
