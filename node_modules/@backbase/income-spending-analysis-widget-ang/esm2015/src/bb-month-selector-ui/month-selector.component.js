import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { PERIODS } from '../constants';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class MonthSelectorComponent {
    constructor() {
        this.hostRef = this;
        /**
         * Event emitter for selecting a tab.
         */
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.change = new EventEmitter();
        /**
         * Default selected tab
         */
        this.selectedTab = PERIODS[Math.max(PERIODS.map((item) => item.default).indexOf(true), 0)].duration;
    }
    /**
     * Change selected tab and triggers the change event after
     * creating start, end dates based on selected tab
     */
    onPeriodRangeChange(num) {
        this.selectedTab = num;
        // (monthsRange - 1) to get data starting from this month and 5 months before it,
        // which will end up to 6 months in total (the same of 12 months)
        const startDate = new Date();
        startDate.setMonth(startDate.getMonth() - (num - 1), 1);
        this.change.emit({
            tabIndex: num,
            period: {
                start: startDate,
                end: new Date(),
            },
        });
    }
}
MonthSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: MonthSelectorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MonthSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: MonthSelectorComponent, selector: "bb-month-selector-ui", inputs: { selectedTab: "selectedTab" }, outputs: { change: "change" }, ngImport: i0, template: "<div class=\"bb-block bb-block--lg bb-income-spending-analysis-periods bb-button-bar\">\n  <div class=\"btn-group btn-group-toggle\">\n      <button\n        data-role=\"1-month-btn\"\n        class=\"btn btn-secondary\"\n        [ngClass]=\"{active: selectedTab === 1}\"\n        value=\"1\"\n        (click)=\"onPeriodRangeChange(1)\"\n      >\n        <span\n          i18n=\"Data period|One month label@@incomeSpendingAnalysis.label.duration.month.one\"\n        >1</span>\n        <span\n          class=\"d-none d-md-inline\"\n          i18n=\"Data period|One month label@@incomeSpendingAnalysis.label.duration.month.one.largescreen\"\n        >&nbsp;month</span>\n        <span\n          class=\"d-md-none\"\n          i18n=\"Data period|One month label@@incomeSpendingAnalysis.label.duration.month.one.mobilescreen\"\n        >m</span>\n      </button>\n      <button\n        data-role=\"6-month-btn\"\n        class=\"btn btn-secondary\"\n        [ngClass]=\"{active: selectedTab === 6}\"\n        value=\"6\"\n        (click)=\"onPeriodRangeChange(6)\"\n      >\n        <span\n          i18n=\"Data period|One month label@@incomeSpendingAnalysis.label.duration.month.six\"\n        >6</span>\n        <span\n          class=\"d-none d-md-inline\"\n          i18n=\"Data period|One month label@@incomeSpendingAnalysis.label.duration.month.six.largescreen\"\n        >&nbsp;months</span>\n        <span\n          class=\"d-md-none\"\n          i18n=\"Data period|One month label@@incomeSpendingAnalysis.label.duration.month.six.mobilescreen\"\n        >m</span>\n      </button>\n      <button\n        data-role=\"12-month-btn\"\n        class=\"btn btn-secondary\"\n        [ngClass]=\"{active: selectedTab === 12}\"\n        value=\"12\"\n        (click)=\"onPeriodRangeChange(12)\"\n      >\n        <span\n          i18n=\"Data period|One month label@@incomeSpendingAnalysis.label.duration.month.twelve\"\n        >12</span>\n        <span\n          class=\"d-none d-md-inline\"\n          i18n=\"Data period|One month label@@incomeSpendingAnalysis.label.duration.month.twelve.largescreen\"\n        >&nbsp;months</span>\n        <span\n          class=\"d-md-none\"\n          i18n=\"Data period|One month label@@incomeSpendingAnalysis.label.duration.month.twelve.mobilescreen\"\n        >m</span>\n      </button>\n    </div>\n</div>\n", directives: [{ type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: MonthSelectorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-month-selector-ui',
                    templateUrl: './month-selector.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { change: [{
                type: Output
            }], selectedTab: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9udGgtc2VsZWN0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9pbmNvbWUtc3BlbmRpbmctYW5hbHlzaXMtd2lkZ2V0L3NyYy9iYi1tb250aC1zZWxlY3Rvci11aS9tb250aC1zZWxlY3Rvci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2luY29tZS1zcGVuZGluZy1hbmFseXNpcy13aWRnZXQvc3JjL2JiLW1vbnRoLXNlbGVjdG9yLXVpL21vbnRoLXNlbGVjdG9yLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEcsT0FBTyxFQUFxQixPQUFPLEVBQUUsTUFBTSxjQUFjLENBQUM7OztBQU8xRCxNQUFNLE9BQU8sc0JBQXNCO0lBTG5DO1FBTUUsWUFBTyxHQUFHLElBQUksQ0FBQztRQUNmOztXQUVHO1FBQ0gsNERBQTREO1FBQ2xELFdBQU0sR0FBRyxJQUFJLFlBQVksRUFBcUIsQ0FBQztRQUN6RDs7V0FFRztRQUNNLGdCQUFXLEdBQVcsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztLQXFCakg7SUFuQkM7OztPQUdHO0lBQ0gsbUJBQW1CLENBQUMsR0FBVztRQUM3QixJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQztRQUN2QixpRkFBaUY7UUFDakYsaUVBQWlFO1FBQ2pFLE1BQU0sU0FBUyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7UUFDN0IsU0FBUyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFeEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDZixRQUFRLEVBQUUsR0FBRztZQUNiLE1BQU0sRUFBRTtnQkFDTixLQUFLLEVBQUUsU0FBUztnQkFDaEIsR0FBRyxFQUFFLElBQUksSUFBSSxFQUFFO2FBQ2hCO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7b0hBOUJVLHNCQUFzQjt3R0FBdEIsc0JBQXNCLG1JQ1JuQyxxekVBNkRBOzRGRHJEYSxzQkFBc0I7a0JBTGxDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsV0FBVyxFQUFFLGlDQUFpQztvQkFDOUMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzhCQU9XLE1BQU07c0JBQWYsTUFBTTtnQkFJRSxXQUFXO3NCQUFuQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNb250aFNlbGVjdG9yRGF0YSwgUEVSSU9EUyB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLW1vbnRoLXNlbGVjdG9yLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21vbnRoLXNlbGVjdG9yLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE1vbnRoU2VsZWN0b3JDb21wb25lbnQge1xuICBob3N0UmVmID0gdGhpcztcbiAgLyoqXG4gICAqIEV2ZW50IGVtaXR0ZXIgZm9yIHNlbGVjdGluZyBhIHRhYi5cbiAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvbm8tb3V0cHV0LW5hdGl2ZVxuICBAT3V0cHV0KCkgY2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxNb250aFNlbGVjdG9yRGF0YT4oKTtcbiAgLyoqXG4gICAqIERlZmF1bHQgc2VsZWN0ZWQgdGFiXG4gICAqL1xuICBASW5wdXQoKSBzZWxlY3RlZFRhYjogbnVtYmVyID0gUEVSSU9EU1tNYXRoLm1heChQRVJJT0RTLm1hcCgoaXRlbSkgPT4gaXRlbS5kZWZhdWx0KS5pbmRleE9mKHRydWUpLCAwKV0uZHVyYXRpb247XG5cbiAgLyoqXG4gICAqIENoYW5nZSBzZWxlY3RlZCB0YWIgYW5kIHRyaWdnZXJzIHRoZSBjaGFuZ2UgZXZlbnQgYWZ0ZXJcbiAgICogY3JlYXRpbmcgc3RhcnQsIGVuZCBkYXRlcyBiYXNlZCBvbiBzZWxlY3RlZCB0YWJcbiAgICovXG4gIG9uUGVyaW9kUmFuZ2VDaGFuZ2UobnVtOiBudW1iZXIpIHtcbiAgICB0aGlzLnNlbGVjdGVkVGFiID0gbnVtO1xuICAgIC8vIChtb250aHNSYW5nZSAtIDEpIHRvIGdldCBkYXRhIHN0YXJ0aW5nIGZyb20gdGhpcyBtb250aCBhbmQgNSBtb250aHMgYmVmb3JlIGl0LFxuICAgIC8vIHdoaWNoIHdpbGwgZW5kIHVwIHRvIDYgbW9udGhzIGluIHRvdGFsICh0aGUgc2FtZSBvZiAxMiBtb250aHMpXG4gICAgY29uc3Qgc3RhcnREYXRlID0gbmV3IERhdGUoKTtcbiAgICBzdGFydERhdGUuc2V0TW9udGgoc3RhcnREYXRlLmdldE1vbnRoKCkgLSAobnVtIC0gMSksIDEpO1xuXG4gICAgdGhpcy5jaGFuZ2UuZW1pdCh7XG4gICAgICB0YWJJbmRleDogbnVtLFxuICAgICAgcGVyaW9kOiB7XG4gICAgICAgIHN0YXJ0OiBzdGFydERhdGUsXG4gICAgICAgIGVuZDogbmV3IERhdGUoKSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0tbGcgYmItaW5jb21lLXNwZW5kaW5nLWFuYWx5c2lzLXBlcmlvZHMgYmItYnV0dG9uLWJhclwiPlxuICA8ZGl2IGNsYXNzPVwiYnRuLWdyb3VwIGJ0bi1ncm91cC10b2dnbGVcIj5cbiAgICAgIDxidXR0b25cbiAgICAgICAgZGF0YS1yb2xlPVwiMS1tb250aC1idG5cIlxuICAgICAgICBjbGFzcz1cImJ0biBidG4tc2Vjb25kYXJ5XCJcbiAgICAgICAgW25nQ2xhc3NdPVwie2FjdGl2ZTogc2VsZWN0ZWRUYWIgPT09IDF9XCJcbiAgICAgICAgdmFsdWU9XCIxXCJcbiAgICAgICAgKGNsaWNrKT1cIm9uUGVyaW9kUmFuZ2VDaGFuZ2UoMSlcIlxuICAgICAgPlxuICAgICAgICA8c3BhblxuICAgICAgICAgIGkxOG49XCJEYXRhIHBlcmlvZHxPbmUgbW9udGggbGFiZWxAQGluY29tZVNwZW5kaW5nQW5hbHlzaXMubGFiZWwuZHVyYXRpb24ubW9udGgub25lXCJcbiAgICAgICAgPjE8L3NwYW4+XG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgY2xhc3M9XCJkLW5vbmUgZC1tZC1pbmxpbmVcIlxuICAgICAgICAgIGkxOG49XCJEYXRhIHBlcmlvZHxPbmUgbW9udGggbGFiZWxAQGluY29tZVNwZW5kaW5nQW5hbHlzaXMubGFiZWwuZHVyYXRpb24ubW9udGgub25lLmxhcmdlc2NyZWVuXCJcbiAgICAgICAgPiZuYnNwO21vbnRoPC9zcGFuPlxuICAgICAgICA8c3BhblxuICAgICAgICAgIGNsYXNzPVwiZC1tZC1ub25lXCJcbiAgICAgICAgICBpMThuPVwiRGF0YSBwZXJpb2R8T25lIG1vbnRoIGxhYmVsQEBpbmNvbWVTcGVuZGluZ0FuYWx5c2lzLmxhYmVsLmR1cmF0aW9uLm1vbnRoLm9uZS5tb2JpbGVzY3JlZW5cIlxuICAgICAgICA+bTwvc3Bhbj5cbiAgICAgIDwvYnV0dG9uPlxuICAgICAgPGJ1dHRvblxuICAgICAgICBkYXRhLXJvbGU9XCI2LW1vbnRoLWJ0blwiXG4gICAgICAgIGNsYXNzPVwiYnRuIGJ0bi1zZWNvbmRhcnlcIlxuICAgICAgICBbbmdDbGFzc109XCJ7YWN0aXZlOiBzZWxlY3RlZFRhYiA9PT0gNn1cIlxuICAgICAgICB2YWx1ZT1cIjZcIlxuICAgICAgICAoY2xpY2spPVwib25QZXJpb2RSYW5nZUNoYW5nZSg2KVwiXG4gICAgICA+XG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgaTE4bj1cIkRhdGEgcGVyaW9kfE9uZSBtb250aCBsYWJlbEBAaW5jb21lU3BlbmRpbmdBbmFseXNpcy5sYWJlbC5kdXJhdGlvbi5tb250aC5zaXhcIlxuICAgICAgICA+Njwvc3Bhbj5cbiAgICAgICAgPHNwYW5cbiAgICAgICAgICBjbGFzcz1cImQtbm9uZSBkLW1kLWlubGluZVwiXG4gICAgICAgICAgaTE4bj1cIkRhdGEgcGVyaW9kfE9uZSBtb250aCBsYWJlbEBAaW5jb21lU3BlbmRpbmdBbmFseXNpcy5sYWJlbC5kdXJhdGlvbi5tb250aC5zaXgubGFyZ2VzY3JlZW5cIlxuICAgICAgICA+Jm5ic3A7bW9udGhzPC9zcGFuPlxuICAgICAgICA8c3BhblxuICAgICAgICAgIGNsYXNzPVwiZC1tZC1ub25lXCJcbiAgICAgICAgICBpMThuPVwiRGF0YSBwZXJpb2R8T25lIG1vbnRoIGxhYmVsQEBpbmNvbWVTcGVuZGluZ0FuYWx5c2lzLmxhYmVsLmR1cmF0aW9uLm1vbnRoLnNpeC5tb2JpbGVzY3JlZW5cIlxuICAgICAgICA+bTwvc3Bhbj5cbiAgICAgIDwvYnV0dG9uPlxuICAgICAgPGJ1dHRvblxuICAgICAgICBkYXRhLXJvbGU9XCIxMi1tb250aC1idG5cIlxuICAgICAgICBjbGFzcz1cImJ0biBidG4tc2Vjb25kYXJ5XCJcbiAgICAgICAgW25nQ2xhc3NdPVwie2FjdGl2ZTogc2VsZWN0ZWRUYWIgPT09IDEyfVwiXG4gICAgICAgIHZhbHVlPVwiMTJcIlxuICAgICAgICAoY2xpY2spPVwib25QZXJpb2RSYW5nZUNoYW5nZSgxMilcIlxuICAgICAgPlxuICAgICAgICA8c3BhblxuICAgICAgICAgIGkxOG49XCJEYXRhIHBlcmlvZHxPbmUgbW9udGggbGFiZWxAQGluY29tZVNwZW5kaW5nQW5hbHlzaXMubGFiZWwuZHVyYXRpb24ubW9udGgudHdlbHZlXCJcbiAgICAgICAgPjEyPC9zcGFuPlxuICAgICAgICA8c3BhblxuICAgICAgICAgIGNsYXNzPVwiZC1ub25lIGQtbWQtaW5saW5lXCJcbiAgICAgICAgICBpMThuPVwiRGF0YSBwZXJpb2R8T25lIG1vbnRoIGxhYmVsQEBpbmNvbWVTcGVuZGluZ0FuYWx5c2lzLmxhYmVsLmR1cmF0aW9uLm1vbnRoLnR3ZWx2ZS5sYXJnZXNjcmVlblwiXG4gICAgICAgID4mbmJzcDttb250aHM8L3NwYW4+XG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgY2xhc3M9XCJkLW1kLW5vbmVcIlxuICAgICAgICAgIGkxOG49XCJEYXRhIHBlcmlvZHxPbmUgbW9udGggbGFiZWxAQGluY29tZVNwZW5kaW5nQW5hbHlzaXMubGFiZWwuZHVyYXRpb24ubW9udGgudHdlbHZlLm1vYmlsZXNjcmVlblwiXG4gICAgICAgID5tPC9zcGFuPlxuICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==