import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { AmountModule } from '@backbase/ui-ang/amount';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import { IconModule } from '@backbase/ui-ang/icon';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import { PeriodSelectorModule } from '@backbase/ui-ang/period-selector';
import { DonutChartModule } from './bb-donut-chart-ui/donut-chart.module';
import { MonthSelectorComponent } from './bb-month-selector-ui/month-selector.component';
import { IncomeSpendingAnalysisBarChartWrapperCustomizableDirective, IncomeSpendingAnalysisCategoriesListCustomizableDirective, IncomeSpendingAnalysisChartCustomizableDirective, IncomeSpendingAnalysisChartWrapperCustomizableDirective, IncomeSpendingAnalysisCustomizableDirective, IncomeSpendingAnalysisMonthSelectorCustomizableDirective, IncomeSpendingAnalysisPeriodSelectorCustomizableDirective, IncomeSpendingAnalysisWidgetComponent, } from './income-spending-analysis.component';
import { IncomeSpendingAnalysisWidgetService } from './income-spending-analysis.service';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
const components = [IncomeSpendingAnalysisWidgetComponent, MonthSelectorComponent];
const customizables = [
    IncomeSpendingAnalysisCustomizableDirective,
    IncomeSpendingAnalysisPeriodSelectorCustomizableDirective,
    IncomeSpendingAnalysisMonthSelectorCustomizableDirective,
    IncomeSpendingAnalysisChartWrapperCustomizableDirective,
    IncomeSpendingAnalysisCategoriesListCustomizableDirective,
    IncomeSpendingAnalysisChartCustomizableDirective,
    IncomeSpendingAnalysisBarChartWrapperCustomizableDirective,
];
const modules = [
    AmountModule,
    DonutChartModule,
    EmptyStateModule,
    IconModule,
    LoadingIndicatorModule,
    PeriodSelectorModule,
];
export class IncomeSpendingAnalysisWidgetModule {
}
IncomeSpendingAnalysisWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IncomeSpendingAnalysisWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisWidgetModule, declarations: [IncomeSpendingAnalysisWidgetComponent, MonthSelectorComponent, IncomeSpendingAnalysisCustomizableDirective,
        IncomeSpendingAnalysisPeriodSelectorCustomizableDirective,
        IncomeSpendingAnalysisMonthSelectorCustomizableDirective,
        IncomeSpendingAnalysisChartWrapperCustomizableDirective,
        IncomeSpendingAnalysisCategoriesListCustomizableDirective,
        IncomeSpendingAnalysisChartCustomizableDirective,
        IncomeSpendingAnalysisBarChartWrapperCustomizableDirective], imports: [CommonModule, i1.BackbaseCoreModule, AmountModule,
        DonutChartModule,
        EmptyStateModule,
        IconModule,
        LoadingIndicatorModule,
        PeriodSelectorModule], exports: [IncomeSpendingAnalysisWidgetComponent, MonthSelectorComponent, IncomeSpendingAnalysisCustomizableDirective,
        IncomeSpendingAnalysisPeriodSelectorCustomizableDirective,
        IncomeSpendingAnalysisMonthSelectorCustomizableDirective,
        IncomeSpendingAnalysisChartWrapperCustomizableDirective,
        IncomeSpendingAnalysisCategoriesListCustomizableDirective,
        IncomeSpendingAnalysisChartCustomizableDirective,
        IncomeSpendingAnalysisBarChartWrapperCustomizableDirective, AmountModule,
        DonutChartModule,
        EmptyStateModule,
        IconModule,
        LoadingIndicatorModule,
        PeriodSelectorModule] });
IncomeSpendingAnalysisWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisWidgetModule, providers: [IncomeSpendingAnalysisWidgetService], imports: [[
            CommonModule,
            BackbaseCoreModule.withConfig({
                classMap: { IncomeSpendingAnalysisWidgetComponent },
            }),
            ...modules,
        ], AmountModule,
        DonutChartModule,
        EmptyStateModule,
        IconModule,
        LoadingIndicatorModule,
        PeriodSelectorModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisWidgetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { IncomeSpendingAnalysisWidgetComponent },
                        }),
                        ...modules,
                    ],
                    declarations: [...components, ...customizables],
                    providers: [IncomeSpendingAnalysisWidgetService],
                    exports: [...components, ...customizables, ...modules],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5jb21lLXNwZW5kaW5nLWFuYWx5c2lzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvaW5jb21lLXNwZW5kaW5nLWFuYWx5c2lzLXdpZGdldC9zcmMvaW5jb21lLXNwZW5kaW5nLWFuYWx5c2lzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDaEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ25ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ3pGLE9BQU8sRUFDTCwwREFBMEQsRUFDMUQseURBQXlELEVBQ3pELGdEQUFnRCxFQUNoRCx1REFBdUQsRUFDdkQsMkNBQTJDLEVBQzNDLHdEQUF3RCxFQUN4RCx5REFBeUQsRUFDekQscUNBQXFDLEdBQ3RDLE1BQU0sc0NBQXNDLENBQUM7QUFDOUMsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7OztBQUV6RixNQUFNLFVBQVUsR0FBRyxDQUFDLHFDQUFxQyxFQUFFLHNCQUFzQixDQUFDLENBQUM7QUFFbkYsTUFBTSxhQUFhLEdBQUc7SUFDcEIsMkNBQTJDO0lBQzNDLHlEQUF5RDtJQUN6RCx3REFBd0Q7SUFDeEQsdURBQXVEO0lBQ3ZELHlEQUF5RDtJQUN6RCxnREFBZ0Q7SUFDaEQsMERBQTBEO0NBQzNELENBQUM7QUFDRixNQUFNLE9BQU8sR0FBRztJQUNkLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLFVBQVU7SUFDVixzQkFBc0I7SUFDdEIsb0JBQW9CO0NBQ3JCLENBQUM7QUFhRixNQUFNLE9BQU8sa0NBQWtDOztnSUFBbEMsa0NBQWtDO2lJQUFsQyxrQ0FBa0MsaUJBL0IzQixxQ0FBcUMsRUFBRSxzQkFBc0IsRUFHL0UsMkNBQTJDO1FBQzNDLHlEQUF5RDtRQUN6RCx3REFBd0Q7UUFDeEQsdURBQXVEO1FBQ3ZELHlEQUF5RDtRQUN6RCxnREFBZ0Q7UUFDaEQsMERBQTBELGFBWXhELFlBQVkseUJBVGQsWUFBWTtRQUNaLGdCQUFnQjtRQUNoQixnQkFBZ0I7UUFDaEIsVUFBVTtRQUNWLHNCQUFzQjtRQUN0QixvQkFBb0IsYUFqQkYscUNBQXFDLEVBQUUsc0JBQXNCLEVBRy9FLDJDQUEyQztRQUMzQyx5REFBeUQ7UUFDekQsd0RBQXdEO1FBQ3hELHVEQUF1RDtRQUN2RCx5REFBeUQ7UUFDekQsZ0RBQWdEO1FBQ2hELDBEQUEwRCxFQUcxRCxZQUFZO1FBQ1osZ0JBQWdCO1FBQ2hCLGdCQUFnQjtRQUNoQixVQUFVO1FBQ1Ysc0JBQXNCO1FBQ3RCLG9CQUFvQjtpSUFjVCxrQ0FBa0MsYUFIbEMsQ0FBQyxtQ0FBbUMsQ0FBQyxZQVJ2QztZQUNQLFlBQVk7WUFDWixrQkFBa0IsQ0FBQyxVQUFVLENBQUM7Z0JBQzVCLFFBQVEsRUFBRSxFQUFFLHFDQUFxQyxFQUFFO2FBQ3BELENBQUM7WUFDRixHQUFHLE9BQU87U0FDWCxFQWRELFlBQVk7UUFDWixnQkFBZ0I7UUFDaEIsZ0JBQWdCO1FBQ2hCLFVBQVU7UUFDVixzQkFBc0I7UUFDdEIsb0JBQW9COzRGQWNULGtDQUFrQztrQkFaOUMsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixrQkFBa0IsQ0FBQyxVQUFVLENBQUM7NEJBQzVCLFFBQVEsRUFBRSxFQUFFLHFDQUFxQyxFQUFFO3lCQUNwRCxDQUFDO3dCQUNGLEdBQUcsT0FBTztxQkFDWDtvQkFDRCxZQUFZLEVBQUUsQ0FBQyxHQUFHLFVBQVUsRUFBRSxHQUFHLGFBQWEsQ0FBQztvQkFDL0MsU0FBUyxFQUFFLENBQUMsbUNBQW1DLENBQUM7b0JBQ2hELE9BQU8sRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLEdBQUcsYUFBYSxFQUFFLEdBQUcsT0FBTyxDQUFDO2lCQUN2RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFja2Jhc2VDb3JlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuaW1wb3J0IHsgQW1vdW50TW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9hbW91bnQnO1xuaW1wb3J0IHsgRW1wdHlTdGF0ZU1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvZW1wdHktc3RhdGUnO1xuaW1wb3J0IHsgSWNvbk1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvaWNvbic7XG5pbXBvcnQgeyBMb2FkaW5nSW5kaWNhdG9yTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9sb2FkaW5nLWluZGljYXRvcic7XG5pbXBvcnQgeyBQZXJpb2RTZWxlY3Rvck1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvcGVyaW9kLXNlbGVjdG9yJztcbmltcG9ydCB7IERvbnV0Q2hhcnRNb2R1bGUgfSBmcm9tICcuL2JiLWRvbnV0LWNoYXJ0LXVpL2RvbnV0LWNoYXJ0Lm1vZHVsZSc7XG5pbXBvcnQgeyBNb250aFNlbGVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9iYi1tb250aC1zZWxlY3Rvci11aS9tb250aC1zZWxlY3Rvci5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgSW5jb21lU3BlbmRpbmdBbmFseXNpc0JhckNoYXJ0V3JhcHBlckN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbiAgSW5jb21lU3BlbmRpbmdBbmFseXNpc0NhdGVnb3JpZXNMaXN0Q3VzdG9taXphYmxlRGlyZWN0aXZlLFxuICBJbmNvbWVTcGVuZGluZ0FuYWx5c2lzQ2hhcnRDdXN0b21pemFibGVEaXJlY3RpdmUsXG4gIEluY29tZVNwZW5kaW5nQW5hbHlzaXNDaGFydFdyYXBwZXJDdXN0b21pemFibGVEaXJlY3RpdmUsXG4gIEluY29tZVNwZW5kaW5nQW5hbHlzaXNDdXN0b21pemFibGVEaXJlY3RpdmUsXG4gIEluY29tZVNwZW5kaW5nQW5hbHlzaXNNb250aFNlbGVjdG9yQ3VzdG9taXphYmxlRGlyZWN0aXZlLFxuICBJbmNvbWVTcGVuZGluZ0FuYWx5c2lzUGVyaW9kU2VsZWN0b3JDdXN0b21pemFibGVEaXJlY3RpdmUsXG4gIEluY29tZVNwZW5kaW5nQW5hbHlzaXNXaWRnZXRDb21wb25lbnQsXG59IGZyb20gJy4vaW5jb21lLXNwZW5kaW5nLWFuYWx5c2lzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbmNvbWVTcGVuZGluZ0FuYWx5c2lzV2lkZ2V0U2VydmljZSB9IGZyb20gJy4vaW5jb21lLXNwZW5kaW5nLWFuYWx5c2lzLnNlcnZpY2UnO1xuXG5jb25zdCBjb21wb25lbnRzID0gW0luY29tZVNwZW5kaW5nQW5hbHlzaXNXaWRnZXRDb21wb25lbnQsIE1vbnRoU2VsZWN0b3JDb21wb25lbnRdO1xuXG5jb25zdCBjdXN0b21pemFibGVzID0gW1xuICBJbmNvbWVTcGVuZGluZ0FuYWx5c2lzQ3VzdG9taXphYmxlRGlyZWN0aXZlLFxuICBJbmNvbWVTcGVuZGluZ0FuYWx5c2lzUGVyaW9kU2VsZWN0b3JDdXN0b21pemFibGVEaXJlY3RpdmUsXG4gIEluY29tZVNwZW5kaW5nQW5hbHlzaXNNb250aFNlbGVjdG9yQ3VzdG9taXphYmxlRGlyZWN0aXZlLFxuICBJbmNvbWVTcGVuZGluZ0FuYWx5c2lzQ2hhcnRXcmFwcGVyQ3VzdG9taXphYmxlRGlyZWN0aXZlLFxuICBJbmNvbWVTcGVuZGluZ0FuYWx5c2lzQ2F0ZWdvcmllc0xpc3RDdXN0b21pemFibGVEaXJlY3RpdmUsXG4gIEluY29tZVNwZW5kaW5nQW5hbHlzaXNDaGFydEN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbiAgSW5jb21lU3BlbmRpbmdBbmFseXNpc0JhckNoYXJ0V3JhcHBlckN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbl07XG5jb25zdCBtb2R1bGVzID0gW1xuICBBbW91bnRNb2R1bGUsXG4gIERvbnV0Q2hhcnRNb2R1bGUsXG4gIEVtcHR5U3RhdGVNb2R1bGUsXG4gIEljb25Nb2R1bGUsXG4gIExvYWRpbmdJbmRpY2F0b3JNb2R1bGUsXG4gIFBlcmlvZFNlbGVjdG9yTW9kdWxlLFxuXTtcbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgQmFja2Jhc2VDb3JlTW9kdWxlLndpdGhDb25maWcoe1xuICAgICAgY2xhc3NNYXA6IHsgSW5jb21lU3BlbmRpbmdBbmFseXNpc1dpZGdldENvbXBvbmVudCB9LFxuICAgIH0pLFxuICAgIC4uLm1vZHVsZXMsXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogWy4uLmNvbXBvbmVudHMsIC4uLmN1c3RvbWl6YWJsZXNdLFxuICBwcm92aWRlcnM6IFtJbmNvbWVTcGVuZGluZ0FuYWx5c2lzV2lkZ2V0U2VydmljZV0sXG4gIGV4cG9ydHM6IFsuLi5jb21wb25lbnRzLCAuLi5jdXN0b21pemFibGVzLCAuLi5tb2R1bGVzXSxcbn0pXG5leHBvcnQgY2xhc3MgSW5jb21lU3BlbmRpbmdBbmFseXNpc1dpZGdldE1vZHVsZSB7fVxuIl19