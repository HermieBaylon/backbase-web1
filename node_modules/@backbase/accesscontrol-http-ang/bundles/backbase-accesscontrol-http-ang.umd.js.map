{"version":3,"file":"backbase-accesscontrol-http-ang.umd.js","sources":["../../model/approvalStatus.ts","../../model/functionGroupType.ts","../../model/legalEntityType.ts","../../model/permissionMatrixAction.ts","../../model/presentationApprovalAction.ts","../../model/presentationApprovalCategory.ts","../../model/status.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/approvals.service.ts","../../api/approvals.service.mocks.ts","../../api/dataGroups.service.ts","../../api/dataGroups.service.mocks.ts","../../api/functionGroups.service.ts","../../api/functionGroups.service.mocks.ts","../../api/legalEntities.service.ts","../../api/legalEntities.service.mocks.ts","../../api/serviceAgreement.service.ts","../../api/serviceAgreement.service.mocks.ts","../../api/serviceAgreements.service.ts","../../api/serviceAgreements.service.mocks.ts","../../api/userContext.service.ts","../../api/userContext.service.mocks.ts","../../api/users.service.ts","../../api/users.service.mocks.ts","../../api/wizard.service.ts","../../api/wizard.service.mocks.ts"],"sourcesContent":["/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Presentation approval status\n */\nexport type ApprovalStatus = 'APPROVED' | 'PENDING' | 'REJECTED';\n\nexport const ApprovalStatus = {\n    APPROVED: 'APPROVED' as ApprovalStatus,\n    PENDING: 'PENDING' as ApprovalStatus,\n    REJECTED: 'REJECTED' as ApprovalStatus\n};\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport type FunctionGroupType = 'REGULAR' | 'TEMPLATE' | 'SYSTEM';\n\nexport const FunctionGroupType = {\n    REGULAR: 'REGULAR' as FunctionGroupType,\n    TEMPLATE: 'TEMPLATE' as FunctionGroupType,\n    SYSTEM: 'SYSTEM' as FunctionGroupType\n};\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of the legal entity. Bank or Customer.\n */\nexport type LegalEntityType = 'CUSTOMER' | 'BANK';\n\nexport const LegalEntityType = {\n    CUSTOMER: 'CUSTOMER' as LegalEntityType,\n    BANK: 'BANK' as LegalEntityType\n};\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Presentation action\n */\nexport type PermissionMatrixAction = 'added' | 'removed' | 'changed' | 'unchanged';\n\nexport const PermissionMatrixAction = {\n    ADDED: 'added' as PermissionMatrixAction,\n    REMOVED: 'removed' as PermissionMatrixAction,\n    CHANGED: 'changed' as PermissionMatrixAction,\n    UNCHANGED: 'unchanged' as PermissionMatrixAction\n};\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport type PresentationApprovalAction = 'CREATE' | 'EDIT' | 'DELETE';\n\nexport const PresentationApprovalAction = {\n    CREATE: 'CREATE' as PresentationApprovalAction,\n    EDIT: 'EDIT' as PresentationApprovalAction,\n    DELETE: 'DELETE' as PresentationApprovalAction\n};\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Category of approval\n */\nexport type PresentationApprovalCategory = 'Assign Permissions' | 'Assign Permissions by Wizard' | 'Manage Data Groups' | 'Manage Limits' | 'Manage Shadow Limits' | 'Unlock User' | 'Manage Function Groups' | 'Manage Service Agreements';\n\nexport const PresentationApprovalCategory = {\n    AssignPermissions: 'Assign Permissions' as PresentationApprovalCategory,\n    AssignPermissionsByWizard: 'Assign Permissions by Wizard' as PresentationApprovalCategory,\n    ManageDataGroups: 'Manage Data Groups' as PresentationApprovalCategory,\n    ManageLimits: 'Manage Limits' as PresentationApprovalCategory,\n    ManageShadowLimits: 'Manage Shadow Limits' as PresentationApprovalCategory,\n    UnlockUser: 'Unlock User' as PresentationApprovalCategory,\n    ManageFunctionGroups: 'Manage Function Groups' as PresentationApprovalCategory,\n    ManageServiceAgreements: 'Manage Service Agreements' as PresentationApprovalCategory\n};\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Status of the entity\n */\nexport type Status = 'ENABLED' | 'DISABLED';\n\nexport const Status = {\n    ENABLED: 'ENABLED' as Status,\n    DISABLED: 'DISABLED' as Status\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const ACCESS_CONTROL_BASE_PATH = new InjectionToken<string>('ACCESS_CONTROL_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface AccessControlConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class AccessControlConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: AccessControlConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link AccessControlConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link AccessControlConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module AccessControlConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { AccessControlConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class AccessControlApiModule {\n    public static forRoot(configurationFactory: () => AccessControlConfiguration): ModuleWithProviders<AccessControlApiModule> {\n        return {\n            ngModule: AccessControlApiModule,\n            providers: [ { provide: AccessControlConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: AccessControlApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: AccessControlConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('AccessControlApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationApprovalItem } from '../model/models';\nimport { PresentationApprovalStatus } from '../model/models';\nimport { PresentationDataGroupApprovalDetailsItem } from '../model/models';\nimport { PresentationFunctionGroupApprovalDetailsItem } from '../model/models';\nimport { PresentationPermissionsApprovalDetailsItem } from '../model/models';\nimport { ServiceAgreeementApprovalDetailsItem } from '../model/models';\nimport { WizardApprovalDetails } from '../model/models';\n\nimport { ACCESS_CONTROL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AccessControlConfiguration }                                     from '../configuration';\n\n\nexport interface GetApprovalsRequestParams {\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface GetPresentationDataGroupApprovalDetailsItemRequestParams {\n    /** Approval ID */\n    [\"approvalId\"]: string;\n}\n\nexport interface GetPresentationFunctionGroupApprovalDetailsItemRequestParams {\n    /** Approval ID */\n    [\"approvalId\"]: string;\n}\n\nexport interface GetPresentationPermissionsApprovalDetailsItemRequestParams {\n    /** Approval ID */\n    [\"approvalId\"]: string;\n}\n\nexport interface GetServiceAgreementApprovalDetailsItemRequestParams {\n    /** No description available */\n    [\"approvalId\"]: string;\n}\n\nexport interface GetWizardApprovalDetailsRequestParams {\n    /** Approval ID */\n    [\"approvalId\"]: string;\n}\n\nexport interface PostApproveApprovalRequestRequestParams {\n    /** Approval ID */\n    [\"approvalId\"]: string;\n}\n\nexport interface PostRejectApprovalRequestRequestParams {\n    /** Approval ID */\n    [\"approvalId\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApprovalsHttpService {\n\n    protected basePath = '/access-control';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AccessControlConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACCESS_CONTROL_BASE_PATH) basePath: string, @Optional() configuration: AccessControlConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve list of approvals for logged in user - &#x60;GET&#x60;.\n     * #Retrieve list of approvals for logged in user - &#x60;GET&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.approval.ListPendingApprovalsRoute  * Route Id: ListPendingApprovalsRoute  * Route source endpoint: direct:business.ListPendingApprovals  * Route destination endpoint: direct:listPendingApprovalsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<PresentationApprovalItem>>;\n    /**\n     * Retrieve list of approvals for logged in user - &#x60;GET&#x60;.\n     * #Retrieve list of approvals for logged in user - &#x60;GET&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.approval.ListPendingApprovalsRoute  * Route Id: ListPendingApprovalsRoute  * Route source endpoint: direct:business.ListPendingApprovals  * Route destination endpoint: direct:listPendingApprovalsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<PresentationApprovalItem>>>;\n    /**\n     * Retrieve list of approvals for logged in user - &#x60;GET&#x60;.\n     * #Retrieve list of approvals for logged in user - &#x60;GET&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.approval.ListPendingApprovalsRoute  * Route Id: ListPendingApprovalsRoute  * Route source endpoint: direct:business.ListPendingApprovals  * Route destination endpoint: direct:listPendingApprovalsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<PresentationApprovalItem>>>;\n    /**\n     * Retrieve list of approvals for logged in user - &#x60;GET&#x60;.\n     * #Retrieve list of approvals for logged in user - &#x60;GET&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.approval.ListPendingApprovalsRoute  * Route Id: ListPendingApprovalsRoute  * Route source endpoint: direct:business.ListPendingApprovals  * Route destination endpoint: direct:listPendingApprovalsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<PresentationApprovalItem>>(`${this.configuration.basePath}/client-api/v2/accessgroups/approvals`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getApprovalsUrl(requestParameters: GetApprovalsRequestParams): string {\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/approvals${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve details for approval - &#x60;GET&#x60;.\n     * #Retrieve details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetDataGroupApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationDataGroupApprovalDetailsItem(requestParameters: GetPresentationDataGroupApprovalDetailsItemRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationDataGroupApprovalDetailsItem>;\n    /**\n     * Retrieve details for approval - &#x60;GET&#x60;.\n     * #Retrieve details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetDataGroupApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationDataGroupApprovalDetailsItem(requestParameters: GetPresentationDataGroupApprovalDetailsItemRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationDataGroupApprovalDetailsItem>>;\n    /**\n     * Retrieve details for approval - &#x60;GET&#x60;.\n     * #Retrieve details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetDataGroupApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationDataGroupApprovalDetailsItem(requestParameters: GetPresentationDataGroupApprovalDetailsItemRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationDataGroupApprovalDetailsItem>>;\n    /**\n     * Retrieve details for approval - &#x60;GET&#x60;.\n     * #Retrieve details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetDataGroupApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationDataGroupApprovalDetailsItem(requestParameters: GetPresentationDataGroupApprovalDetailsItemRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getPresentationDataGroupApprovalDetailsItem.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationDataGroupApprovalDetailsItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/data-group`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPresentationDataGroupApprovalDetailsItemUrl(requestParameters: GetPresentationDataGroupApprovalDetailsItemRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getPresentationDataGroupApprovalDetailsItem.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/data-group`;\n    }\n\n    /**\n     * Retrieve job role details for approval - &#x60;GET&#x60;.\n     * #Retrieve job role details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetFunctionGroupApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationFunctionGroupApprovalDetailsItem(requestParameters: GetPresentationFunctionGroupApprovalDetailsItemRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationFunctionGroupApprovalDetailsItem>;\n    /**\n     * Retrieve job role details for approval - &#x60;GET&#x60;.\n     * #Retrieve job role details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetFunctionGroupApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationFunctionGroupApprovalDetailsItem(requestParameters: GetPresentationFunctionGroupApprovalDetailsItemRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationFunctionGroupApprovalDetailsItem>>;\n    /**\n     * Retrieve job role details for approval - &#x60;GET&#x60;.\n     * #Retrieve job role details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetFunctionGroupApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationFunctionGroupApprovalDetailsItem(requestParameters: GetPresentationFunctionGroupApprovalDetailsItemRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationFunctionGroupApprovalDetailsItem>>;\n    /**\n     * Retrieve job role details for approval - &#x60;GET&#x60;.\n     * #Retrieve job role details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetFunctionGroupApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationFunctionGroupApprovalDetailsItem(requestParameters: GetPresentationFunctionGroupApprovalDetailsItemRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getPresentationFunctionGroupApprovalDetailsItem.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationFunctionGroupApprovalDetailsItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/function-group`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPresentationFunctionGroupApprovalDetailsItemUrl(requestParameters: GetPresentationFunctionGroupApprovalDetailsItemRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getPresentationFunctionGroupApprovalDetailsItem.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/function-group`;\n    }\n\n    /**\n     * Retrieve details for approval - &#x60;GET&#x60;.\n     * #Retrieve details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.approval.GetPermissionsApprovalDetailsByIdRoute  * Route Id: GetPermissionsApprovalDetailsByIdRoute  * Route source endpoint: direct:business.GetApprovalById  * Route destination endpoint: direct:getApprovalByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationPermissionsApprovalDetailsItem(requestParameters: GetPresentationPermissionsApprovalDetailsItemRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationPermissionsApprovalDetailsItem>;\n    /**\n     * Retrieve details for approval - &#x60;GET&#x60;.\n     * #Retrieve details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.approval.GetPermissionsApprovalDetailsByIdRoute  * Route Id: GetPermissionsApprovalDetailsByIdRoute  * Route source endpoint: direct:business.GetApprovalById  * Route destination endpoint: direct:getApprovalByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationPermissionsApprovalDetailsItem(requestParameters: GetPresentationPermissionsApprovalDetailsItemRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationPermissionsApprovalDetailsItem>>;\n    /**\n     * Retrieve details for approval - &#x60;GET&#x60;.\n     * #Retrieve details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.approval.GetPermissionsApprovalDetailsByIdRoute  * Route Id: GetPermissionsApprovalDetailsByIdRoute  * Route source endpoint: direct:business.GetApprovalById  * Route destination endpoint: direct:getApprovalByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationPermissionsApprovalDetailsItem(requestParameters: GetPresentationPermissionsApprovalDetailsItemRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationPermissionsApprovalDetailsItem>>;\n    /**\n     * Retrieve details for approval - &#x60;GET&#x60;.\n     * #Retrieve details for approval - &#x60;GET&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.approval.GetPermissionsApprovalDetailsByIdRoute  * Route Id: GetPermissionsApprovalDetailsByIdRoute  * Route source endpoint: direct:business.GetApprovalById  * Route destination endpoint: direct:getApprovalByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPresentationPermissionsApprovalDetailsItem(requestParameters: GetPresentationPermissionsApprovalDetailsItemRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getPresentationPermissionsApprovalDetailsItem.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationPermissionsApprovalDetailsItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/permissions`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPresentationPermissionsApprovalDetailsItemUrl(requestParameters: GetPresentationPermissionsApprovalDetailsItemRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getPresentationPermissionsApprovalDetailsItem.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/permissions`;\n    }\n\n    /**\n     * Retrieve service agreement for approval - &#x60;GET&#x60;.\n     * #Retrieve service agreement for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetServiceAgreementApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementApprovalDetailsItem(requestParameters: GetServiceAgreementApprovalDetailsItemRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ServiceAgreeementApprovalDetailsItem>;\n    /**\n     * Retrieve service agreement for approval - &#x60;GET&#x60;.\n     * #Retrieve service agreement for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetServiceAgreementApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementApprovalDetailsItem(requestParameters: GetServiceAgreementApprovalDetailsItemRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ServiceAgreeementApprovalDetailsItem>>;\n    /**\n     * Retrieve service agreement for approval - &#x60;GET&#x60;.\n     * #Retrieve service agreement for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetServiceAgreementApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementApprovalDetailsItem(requestParameters: GetServiceAgreementApprovalDetailsItemRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ServiceAgreeementApprovalDetailsItem>>;\n    /**\n     * Retrieve service agreement for approval - &#x60;GET&#x60;.\n     * #Retrieve service agreement for approval - &#x60;GET&#x60;    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetServiceAgreementApprovalDetailsByIdFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementApprovalDetailsItem(requestParameters: GetServiceAgreementApprovalDetailsItemRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getServiceAgreementApprovalDetailsItem.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ServiceAgreeementApprovalDetailsItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/service-agreement`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getServiceAgreementApprovalDetailsItemUrl(requestParameters: GetServiceAgreementApprovalDetailsItemRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getServiceAgreementApprovalDetailsItem.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/service-agreement`;\n    }\n\n    /**\n     * Retrieve wizard setup approval details endpoint for Entitlements Wizard\n     * # Retrieve wizard setup approval details endpoint for Entitlements Wizard - &#x60;GET&#x60;. Get permissions, accounts and limits for specified users by approval id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getWizardApprovalDetails(requestParameters: GetWizardApprovalDetailsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<WizardApprovalDetails>;\n    /**\n     * Retrieve wizard setup approval details endpoint for Entitlements Wizard\n     * # Retrieve wizard setup approval details endpoint for Entitlements Wizard - &#x60;GET&#x60;. Get permissions, accounts and limits for specified users by approval id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getWizardApprovalDetails(requestParameters: GetWizardApprovalDetailsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<WizardApprovalDetails>>;\n    /**\n     * Retrieve wizard setup approval details endpoint for Entitlements Wizard\n     * # Retrieve wizard setup approval details endpoint for Entitlements Wizard - &#x60;GET&#x60;. Get permissions, accounts and limits for specified users by approval id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getWizardApprovalDetails(requestParameters: GetWizardApprovalDetailsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<WizardApprovalDetails>>;\n    /**\n     * Retrieve wizard setup approval details endpoint for Entitlements Wizard\n     * # Retrieve wizard setup approval details endpoint for Entitlements Wizard - &#x60;GET&#x60;. Get permissions, accounts and limits for specified users by approval id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getWizardApprovalDetails(requestParameters: GetWizardApprovalDetailsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getWizardApprovalDetails.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<WizardApprovalDetails>(`${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/wizard-setup`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getWizardApprovalDetailsUrl(requestParameters: GetWizardApprovalDetailsRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getWizardApprovalDetails.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/wizard-setup`;\n    }\n\n    /**\n     * Endpoint for approving approval\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postApproveApprovalRequest(requestParameters: PostApproveApprovalRequestRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationApprovalStatus>;\n    /**\n     * Endpoint for approving approval\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postApproveApprovalRequest(requestParameters: PostApproveApprovalRequestRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationApprovalStatus>>;\n    /**\n     * Endpoint for approving approval\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postApproveApprovalRequest(requestParameters: PostApproveApprovalRequestRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationApprovalStatus>>;\n    /**\n     * Endpoint for approving approval\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postApproveApprovalRequest(requestParameters: PostApproveApprovalRequestRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling postApproveApprovalRequest.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationApprovalStatus>(`${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/approve`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postApproveApprovalRequestUrl(requestParameters: PostApproveApprovalRequestRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling postApproveApprovalRequest.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/approve`;\n    }\n\n    /**\n     * Endpoint for rejecting approval\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectApprovalRequest(requestParameters: PostRejectApprovalRequestRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationApprovalStatus>;\n    /**\n     * Endpoint for rejecting approval\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectApprovalRequest(requestParameters: PostRejectApprovalRequestRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationApprovalStatus>>;\n    /**\n     * Endpoint for rejecting approval\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectApprovalRequest(requestParameters: PostRejectApprovalRequestRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationApprovalStatus>>;\n    /**\n     * Endpoint for rejecting approval\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectApprovalRequest(requestParameters: PostRejectApprovalRequestRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling postRejectApprovalRequest.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationApprovalStatus>(`${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/reject`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postRejectApprovalRequestUrl(requestParameters: PostRejectApprovalRequestRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling postRejectApprovalRequest.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/approvals/${encodeURIComponent(String(_approvalId))}/reject`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/approvals URL pattern\n*/\nexport const ApprovalsHttpServiceGetApprovalsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"creatorUserFullName\" : \"User 1\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Assign Permissions\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b6\"\n}, {\n  \"creatorUserFullName\" : \"User 2\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Manage Data Groups\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b7\"\n}, {\n  \"creatorUserFullName\" : \"User 3\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Unlock User\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b8\"\n}, {\n  \"creatorUserFullName\" : \"User 4\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Manage Limits\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b9\"\n}, {\n  \"creatorUserFullName\" : \"User 5\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Manage Shadow Limits\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b1\"\n}, {\n  \"creatorUserFullName\" : \"User 6\",\n  \"creatorUserId\" : \"5643e686d31e3567b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Manage Function Groups\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12c4\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/approvals/{approvalId}/data-group URL pattern\n*/\nexport const ApprovalsHttpServiceGetPresentationDataGroupApprovalDetailsItemMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/data-group\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"dataGroupId\" : \"0955e686d31e4216b3dd5d66161d536d\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"serviceAgreementName\" : \"Sa name\",\n  \"type\" : \"ARRANGEMENTS\",\n  \"approvalId\" : \"606d4532-f8d9-4a5f-36kl-887baf88fa24\",\n  \"action\" : \"EDIT\",\n  \"oldState\" : {\n    \"name\" : \"DG name\",\n    \"description\" : \"DG desc\"\n  },\n  \"newState\" : {\n    \"name\" : \"new DG name\",\n    \"description\" : \"new DG desc\"\n  },\n  \"addedDataItems\" : [ \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4612\", \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4613\" ],\n  \"removedDataItems\" : [ \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\", \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4614\" ],\n  \"unmodifiedDataItems\" : [ \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4615\", \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4611\" ],\n  \"legalEntityIds\" : [ \"cd0968b3-3520-4280-8699-cd46c4d6df72\", \"3c684e80-c646-4148-bc20-37718eab4d97\" ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/approvals/{approvalId}/function-group URL pattern\n*/\nexport const ApprovalsHttpServiceGetPresentationFunctionGroupApprovalDetailsItemMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/function-group\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"functionGroupId\" : \"0955e686d31e4216b3dd5d66161d536d\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"serviceAgreementName\" : \"saName\",\n  \"approvalId\" : \"606d4532-f8d9-4a5f-36kl-887baf88fa24\",\n  \"action\" : \"EDIT\",\n  \"oldState\" : {\n    \"name\" : \"FG1\",\n    \"description\" : \"FG1 description\",\n    \"approvalTypeId\" : \"approvalTypeIdA\",\n    \"validFromDate\" : \"2020-01-01\",\n    \"validFromTime\" : \"00:00:00\",\n    \"validUntilDate\" : \"2025-01-01\",\n    \"validUntilTime\" : \"23:59:59\"\n  },\n  \"newState\" : {\n    \"name\" : \"FG2\",\n    \"description\" : \"FG2 description\",\n    \"approvalTypeId\" : \"approvalTypeIdB\",\n    \"validFromDate\" : \"2020-06-10\",\n    \"validFromTime\" : \"04:32:24\",\n    \"validUntilDate\" : \"2023-01-01\",\n    \"validUntilTime\" : \"23:53:51\"\n  },\n  \"permissionMatrix\" : [ {\n    \"functionId\" : \"1012\",\n    \"functionCode\" : \"manage.limits\",\n    \"resource\" : \"Limits\",\n    \"name\" : \"Manage Limits\",\n    \"action\" : \"changed\",\n    \"privileges\" : {\n      \"view\" : {\n        \"old\" : true,\n        \"new\" : false\n      },\n      \"create\" : {\n        \"old\" : false,\n        \"new\" : true\n      },\n      \"edit\" : {\n        \"old\" : true,\n        \"new\" : false\n      },\n      \"delete\" : {\n        \"old\" : false,\n        \"new\" : false\n      },\n      \"approve\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"cancel\" : {\n        \"old\" : false,\n        \"new\" : true\n      },\n      \"execute\" : {\n        \"old\" : false,\n        \"new\" : true\n      }\n    }\n  }, {\n    \"functionId\" : \"1009\",\n    \"functionCode\" : \"assign.permissions\",\n    \"resource\" : \"Service Agreement\",\n    \"name\" : \"Assign Permissions\",\n    \"action\" : \"added\",\n    \"privileges\" : {\n      \"view\" : {\n        \"new\" : true\n      },\n      \"create\" : {\n        \"new\" : true\n      },\n      \"edit\" : {\n        \"new\" : false\n      },\n      \"delete\" : {\n        \"new\" : true\n      },\n      \"approve\" : {\n        \"new\" : false\n      },\n      \"cancel\" : {\n        \"new\" : true\n      },\n      \"execute\" : {\n        \"new\" : true\n      }\n    }\n  }, {\n    \"functionId\" : \"1046\",\n    \"functionCode\" : \"ach.debit\",\n    \"resource\" : \"Payments\",\n    \"name\" : \"ACH Debit\",\n    \"action\" : \"removed\",\n    \"privileges\" : {\n      \"view\" : {\n        \"old\" : true\n      },\n      \"create\" : {\n        \"old\" : true\n      },\n      \"edit\" : {\n        \"old\" : false\n      },\n      \"delete\" : {\n        \"old\" : true\n      },\n      \"approve\" : {\n        \"old\" : false\n      },\n      \"cancel\" : {\n        \"old\" : true\n      },\n      \"execute\" : {\n        \"old\" : true\n      }\n    }\n  }, {\n    \"functionId\" : \"1010\",\n    \"functionCode\" : \"manage.users\",\n    \"resource\" : \"User\",\n    \"name\" : \"Manage Users\",\n    \"action\" : \"unchanged\",\n    \"privileges\" : {\n      \"view\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"create\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"edit\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"delete\" : {\n        \"old\" : false,\n        \"new\" : false\n      },\n      \"approve\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"cancel\" : {\n        \"old\" : false,\n        \"new\" : false\n      }\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/approvals/{approvalId}/permissions URL pattern\n*/\nexport const ApprovalsHttpServiceGetPresentationPermissionsApprovalDetailsItemMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/permissions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalId\" : \"606d4532-f8d9-4a5f-36kl-887baf88fa24\",\n  \"creatorUserFullName\" : \"John Snow\",\n  \"creatorUserId\" : \"69ef5b3c-3997-4ee9-9f11-cb14447cf572\",\n  \"createdAt\" : \"2018-09-28T16:41:41.090Z\",\n  \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n  \"userFullName\" : \"Jack Sparrow\",\n  \"serviceAgreementId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n  \"serviceAgreementName\" : \"Backbase SA\",\n  \"serviceAgreementDescription\" : \"Detailed desscription of the SA.\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Assign Permissions\",\n  \"newFunctionGroups\" : [ {\n    \"id\" : \"c18dda63-27fa-4e4f-8882-24b24b0d46df\",\n    \"name\" : \"FGName\",\n    \"type\" : \"REGULAR\",\n    \"description\" : \"Function Group Description\",\n    \"dataGroups\" : [ {\n      \"id\" : \"c18dda63-27fa-4e4f-8882-24b24b0d46df\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Function Group Description\",\n      \"type\" : \"PAYEES\"\n    } ],\n    \"selfApprovalPolicies\" : [ {\n      \"businessFunctionCode\" : \"manage.users\",\n      \"canSelfApprove\" : false\n    } ]\n  } ],\n  \"removedFunctionGroups\" : [ {\n    \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n    \"name\" : \"FGName\",\n    \"type\" : \"TEMPLATE\",\n    \"description\" : \"Function Group Description\",\n    \"dataGroups\" : [ {\n      \"id\" : \"d9b299b0-ca28-4683-a3c1-9a339abfb5e4\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"CONTACTS\"\n    } ],\n    \"selfApprovalPolicies\" : [ {\n      \"businessFunctionCode\" : \"manage.users\",\n      \"canSelfApprove\" : false\n    } ]\n  } ],\n  \"modifiedFunctionGroups\" : [ {\n    \"id\" : \"d9b299b0-ca28-4683-a3c1-9a339abfb5e4\",\n    \"name\" : \"FGName\",\n    \"type\" : \"TEMPLATE\",\n    \"description\" : \"Function Group Description\",\n    \"newDataGroups\" : [ {\n      \"id\" : \"5690bd25-b9db-493a-9659-3d5e505c7358\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"CONTACTS\"\n    } ],\n    \"removedDataGroups\" : [ {\n      \"id\" : \"5f5c3714-289e-4f0c-bdb0-0b5a749f8beb\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"CUSTOMERS\"\n    } ],\n    \"unmodifiedDataGroups\" : [ {\n      \"id\" : \"10c387f2-4348-483e-ba98-f9b73926df4b\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"ARRANGEMENTS\"\n    } ]\n  } ],\n  \"unmodifiedFunctionGroups\" : [ {\n    \"id\" : \"08cb2ed4-2691-4a28-8219-37378917e58d\",\n    \"name\" : \"FGName\",\n    \"type\" : \"REGULAR\",\n    \"description\" : \"Function Group Description\",\n    \"dataGroups\" : [ {\n      \"id\" : \"619f3d39-9647-46c7-ac70-6218382ebc4d\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"CUSTOMERS\"\n    } ],\n    \"selfApprovalPolicies\" : [ {\n      \"businessFunctionCode\" : \"manage.users\",\n      \"canSelfApprove\" : false\n    } ]\n  } ],\n  \"requiredApproves\" : 3,\n  \"completedApproves\" : 1,\n  \"approvalLog\" : [ {\n    \"approverId\" : \"619f3d39-9647-46c7-ac70-6218382ebc4d\",\n    \"approverFullName\" : \"Donald Trump\",\n    \"approvedAt\" : \"2018-10-15T16:41:41.090Z\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/approvals/{approvalId}/service-agreement URL pattern\n*/\nexport const ApprovalsHttpServiceGetServiceAgreementApprovalDetailsItemMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/service-agreement\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"approvalId\" : \"606d4532-f8d9-4a5f-36kl-887baf88fa24\",\n  \"action\" : \"EDIT\",\n  \"oldState\" : {\n    \"name\" : \"FG1\",\n    \"description\" : \"FG1 description\",\n    \"validFromDate\" : \"2020-01-01\",\n    \"validFromTime\" : \"00:00:00\",\n    \"validUntilDate\" : \"2025-01-01\",\n    \"validUntilTime\" : \"23:59:59\",\n    \"admins\" : [ \"0955e686d31e4216b3dd5d76561d536d\", \"0955e686d31e4216b3dd5d76164d536d\", \"0955e686d31e4216b3aa5d76161d536d\" ],\n    \"legalEntities\" : [ {\n      \"name\" : \"LEName1\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a1c\",\n      \"externalId\" : \"C000001\",\n      \"contributeUsers\" : true,\n      \"contributeAccount\" : true\n    }, {\n      \"name\" : \"LEName2\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a2c\",\n      \"externalId\" : \"C000002\",\n      \"contributeUsers\" : true,\n      \"contributeAccount\" : false\n    } ]\n  },\n  \"newState\" : {\n    \"name\" : \"FG1\",\n    \"description\" : \"FG1 description\",\n    \"validFromDate\" : \"2020-01-01\",\n    \"validFromTime\" : \"00:00:00\",\n    \"validUntilDate\" : \"2025-01-01\",\n    \"validUntilTime\" : \"23:59:59\",\n    \"admins\" : [ \"0955e686d31e4216b3dd5d76561d536d\", \"0955e686d31e4216b3dd5d76164d536d\", \"0955e686d31e4216b3aa5d76161d522d\" ],\n    \"legalEntities\" : [ {\n      \"name\" : \"LEName1\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a1c\",\n      \"externalId\" : \"C000001\",\n      \"contributeUsers\" : true,\n      \"contributeAccount\" : true\n    }, {\n      \"name\" : \"LEName2\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a2c\",\n      \"externalId\" : \"C000002\",\n      \"contributeUsers\" : true,\n      \"contributeAccount\" : false\n    }, {\n      \"name\" : \"LEName3\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a4c\",\n      \"externalId\" : \"C000003\",\n      \"contributeUsers\" : false,\n      \"contributeAccount\" : true\n    } ]\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/approvals/{approvalId}/wizard-setup URL pattern\n*/\nexport const ApprovalsHttpServiceGetWizardApprovalDetailsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/wizard-setup\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalId\" : \"test\",\n  \"action\" : \"CREATE\",\n  \"category\" : \"Assign Permissions by Wizard\",\n  \"users\" : [ {\n    \"userId\" : \"c7a382786d514262b75ab9531b749a2b\",\n    \"userFullName\" : \"Paddy Brian\"\n  } ],\n  \"functionGroups\" : [ {\n    \"functionGroupId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b645392\"\n  }, {\n    \"functionGroupId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b6453812\"\n  } ],\n  \"serviceAgreementId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n  \"serviceAgreementName\" : \"AIB\",\n  \"accounts\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\", \"6c1261e8-7b6b-4c14-9bb4-e976d834c730\", \"e6659eea893c4da48f9b7fd425de4677\", \"8eb58b1d048d4112a2f7591d465c3f14\", \"8a48e7546e11f733016e2249604f4076\", \"8a48e7546e11f733016e22495b6a4067\", \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\", \"8a48e7546e11f733016e22496d7e409d\", \"8a48e7546e11f733016e2249734640af\", \"8a48e7546e11f733016e22496ba94097\", \"8a48e7546e11f733016e22494c19403a\", \"8a48e7546e11f733016e2249715a40a9\", \"8a48e7546e11f733016e2249693f4091\", \"8a48e7546e11f733016e2249771240bb\", \"8a48e7546e11f733016e22496f5f40a3\" ],\n  \"limit\" : {\n    \"currency\" : \"EUR\",\n    \"periodicLimitsBounds\" : {\n      \"customPeriods\" : [ {\n        \"amount\" : 100,\n        \"period\" : \"biweekly\"\n      } ],\n      \"daily\" : 100,\n      \"monthly\" : 10000,\n      \"quarterly\" : 100000,\n      \"weekly\" : 1000\n    },\n    \"transactionalLimitsBounds\" : {\n      \"amount\" : 1000\n    }\n  },\n  \"removeExistingPermissions\" : false\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/approvals/{approvalId}/approve URL pattern\n*/\nexport const ApprovalsHttpServicePostApproveApprovalRequestMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/approve\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalStatus\" : \"PENDING\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/approvals/{approvalId}/reject URL pattern\n*/\nexport const ApprovalsHttpServicePostRejectApprovalRequestMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/reject\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalStatus\" : \"PENDING\"\n}\n                },\n    ]\n}]);\n\nexport const ApprovalsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"creatorUserFullName\" : \"User 1\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Assign Permissions\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b6\"\n}, {\n  \"creatorUserFullName\" : \"User 2\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Manage Data Groups\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b7\"\n}, {\n  \"creatorUserFullName\" : \"User 3\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Unlock User\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b8\"\n}, {\n  \"creatorUserFullName\" : \"User 4\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Manage Limits\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b9\"\n}, {\n  \"creatorUserFullName\" : \"User 5\",\n  \"creatorUserId\" : \"5643e686d31e4216b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Manage Shadow Limits\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12b1\"\n}, {\n  \"creatorUserFullName\" : \"User 6\",\n  \"creatorUserId\" : \"5643e686d31e3567b3ff5d66161d1234\",\n  \"createdAt\" : \"2019-01-01T12:00:00Z\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Manage Function Groups\",\n  \"approvalId\" : \"2df100c6-b12b-4102-8831-db417acf12c4\"\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/data-group\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 200,\n                body: {\n  \"dataGroupId\" : \"0955e686d31e4216b3dd5d66161d536d\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"serviceAgreementName\" : \"Sa name\",\n  \"type\" : \"ARRANGEMENTS\",\n  \"approvalId\" : \"606d4532-f8d9-4a5f-36kl-887baf88fa24\",\n  \"action\" : \"EDIT\",\n  \"oldState\" : {\n    \"name\" : \"DG name\",\n    \"description\" : \"DG desc\"\n  },\n  \"newState\" : {\n    \"name\" : \"new DG name\",\n    \"description\" : \"new DG desc\"\n  },\n  \"addedDataItems\" : [ \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4612\", \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4613\" ],\n  \"removedDataItems\" : [ \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\", \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4614\" ],\n  \"unmodifiedDataItems\" : [ \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4615\", \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4611\" ],\n  \"legalEntityIds\" : [ \"cd0968b3-3520-4280-8699-cd46c4d6df72\", \"3c684e80-c646-4148-bc20-37718eab4d97\" ]\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/function-group\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 200,\n                body: {\n  \"functionGroupId\" : \"0955e686d31e4216b3dd5d66161d536d\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"serviceAgreementName\" : \"saName\",\n  \"approvalId\" : \"606d4532-f8d9-4a5f-36kl-887baf88fa24\",\n  \"action\" : \"EDIT\",\n  \"oldState\" : {\n    \"name\" : \"FG1\",\n    \"description\" : \"FG1 description\",\n    \"approvalTypeId\" : \"approvalTypeIdA\",\n    \"validFromDate\" : \"2020-01-01\",\n    \"validFromTime\" : \"00:00:00\",\n    \"validUntilDate\" : \"2025-01-01\",\n    \"validUntilTime\" : \"23:59:59\"\n  },\n  \"newState\" : {\n    \"name\" : \"FG2\",\n    \"description\" : \"FG2 description\",\n    \"approvalTypeId\" : \"approvalTypeIdB\",\n    \"validFromDate\" : \"2020-06-10\",\n    \"validFromTime\" : \"04:32:24\",\n    \"validUntilDate\" : \"2023-01-01\",\n    \"validUntilTime\" : \"23:53:51\"\n  },\n  \"permissionMatrix\" : [ {\n    \"functionId\" : \"1012\",\n    \"functionCode\" : \"manage.limits\",\n    \"resource\" : \"Limits\",\n    \"name\" : \"Manage Limits\",\n    \"action\" : \"changed\",\n    \"privileges\" : {\n      \"view\" : {\n        \"old\" : true,\n        \"new\" : false\n      },\n      \"create\" : {\n        \"old\" : false,\n        \"new\" : true\n      },\n      \"edit\" : {\n        \"old\" : true,\n        \"new\" : false\n      },\n      \"delete\" : {\n        \"old\" : false,\n        \"new\" : false\n      },\n      \"approve\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"cancel\" : {\n        \"old\" : false,\n        \"new\" : true\n      },\n      \"execute\" : {\n        \"old\" : false,\n        \"new\" : true\n      }\n    }\n  }, {\n    \"functionId\" : \"1009\",\n    \"functionCode\" : \"assign.permissions\",\n    \"resource\" : \"Service Agreement\",\n    \"name\" : \"Assign Permissions\",\n    \"action\" : \"added\",\n    \"privileges\" : {\n      \"view\" : {\n        \"new\" : true\n      },\n      \"create\" : {\n        \"new\" : true\n      },\n      \"edit\" : {\n        \"new\" : false\n      },\n      \"delete\" : {\n        \"new\" : true\n      },\n      \"approve\" : {\n        \"new\" : false\n      },\n      \"cancel\" : {\n        \"new\" : true\n      },\n      \"execute\" : {\n        \"new\" : true\n      }\n    }\n  }, {\n    \"functionId\" : \"1046\",\n    \"functionCode\" : \"ach.debit\",\n    \"resource\" : \"Payments\",\n    \"name\" : \"ACH Debit\",\n    \"action\" : \"removed\",\n    \"privileges\" : {\n      \"view\" : {\n        \"old\" : true\n      },\n      \"create\" : {\n        \"old\" : true\n      },\n      \"edit\" : {\n        \"old\" : false\n      },\n      \"delete\" : {\n        \"old\" : true\n      },\n      \"approve\" : {\n        \"old\" : false\n      },\n      \"cancel\" : {\n        \"old\" : true\n      },\n      \"execute\" : {\n        \"old\" : true\n      }\n    }\n  }, {\n    \"functionId\" : \"1010\",\n    \"functionCode\" : \"manage.users\",\n    \"resource\" : \"User\",\n    \"name\" : \"Manage Users\",\n    \"action\" : \"unchanged\",\n    \"privileges\" : {\n      \"view\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"create\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"edit\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"delete\" : {\n        \"old\" : false,\n        \"new\" : false\n      },\n      \"approve\" : {\n        \"old\" : true,\n        \"new\" : true\n      },\n      \"cancel\" : {\n        \"old\" : false,\n        \"new\" : false\n      }\n    }\n  } ]\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/permissions\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 200,\n                body: {\n  \"approvalId\" : \"606d4532-f8d9-4a5f-36kl-887baf88fa24\",\n  \"creatorUserFullName\" : \"John Snow\",\n  \"creatorUserId\" : \"69ef5b3c-3997-4ee9-9f11-cb14447cf572\",\n  \"createdAt\" : \"2018-09-28T16:41:41.090Z\",\n  \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n  \"userFullName\" : \"Jack Sparrow\",\n  \"serviceAgreementId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n  \"serviceAgreementName\" : \"Backbase SA\",\n  \"serviceAgreementDescription\" : \"Detailed desscription of the SA.\",\n  \"action\" : \"EDIT\",\n  \"category\" : \"Assign Permissions\",\n  \"newFunctionGroups\" : [ {\n    \"id\" : \"c18dda63-27fa-4e4f-8882-24b24b0d46df\",\n    \"name\" : \"FGName\",\n    \"type\" : \"REGULAR\",\n    \"description\" : \"Function Group Description\",\n    \"dataGroups\" : [ {\n      \"id\" : \"c18dda63-27fa-4e4f-8882-24b24b0d46df\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Function Group Description\",\n      \"type\" : \"PAYEES\"\n    } ],\n    \"selfApprovalPolicies\" : [ {\n      \"businessFunctionCode\" : \"manage.users\",\n      \"canSelfApprove\" : false\n    } ]\n  } ],\n  \"removedFunctionGroups\" : [ {\n    \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n    \"name\" : \"FGName\",\n    \"type\" : \"TEMPLATE\",\n    \"description\" : \"Function Group Description\",\n    \"dataGroups\" : [ {\n      \"id\" : \"d9b299b0-ca28-4683-a3c1-9a339abfb5e4\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"CONTACTS\"\n    } ],\n    \"selfApprovalPolicies\" : [ {\n      \"businessFunctionCode\" : \"manage.users\",\n      \"canSelfApprove\" : false\n    } ]\n  } ],\n  \"modifiedFunctionGroups\" : [ {\n    \"id\" : \"d9b299b0-ca28-4683-a3c1-9a339abfb5e4\",\n    \"name\" : \"FGName\",\n    \"type\" : \"TEMPLATE\",\n    \"description\" : \"Function Group Description\",\n    \"newDataGroups\" : [ {\n      \"id\" : \"5690bd25-b9db-493a-9659-3d5e505c7358\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"CONTACTS\"\n    } ],\n    \"removedDataGroups\" : [ {\n      \"id\" : \"5f5c3714-289e-4f0c-bdb0-0b5a749f8beb\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"CUSTOMERS\"\n    } ],\n    \"unmodifiedDataGroups\" : [ {\n      \"id\" : \"10c387f2-4348-483e-ba98-f9b73926df4b\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"ARRANGEMENTS\"\n    } ]\n  } ],\n  \"unmodifiedFunctionGroups\" : [ {\n    \"id\" : \"08cb2ed4-2691-4a28-8219-37378917e58d\",\n    \"name\" : \"FGName\",\n    \"type\" : \"REGULAR\",\n    \"description\" : \"Function Group Description\",\n    \"dataGroups\" : [ {\n      \"id\" : \"619f3d39-9647-46c7-ac70-6218382ebc4d\",\n      \"name\" : \"DGName\",\n      \"description\" : \"Data Group Description\",\n      \"type\" : \"CUSTOMERS\"\n    } ],\n    \"selfApprovalPolicies\" : [ {\n      \"businessFunctionCode\" : \"manage.users\",\n      \"canSelfApprove\" : false\n    } ]\n  } ],\n  \"requiredApproves\" : 3,\n  \"completedApproves\" : 1,\n  \"approvalLog\" : [ {\n    \"approverId\" : \"619f3d39-9647-46c7-ac70-6218382ebc4d\",\n    \"approverFullName\" : \"Donald Trump\",\n    \"approvedAt\" : \"2018-10-15T16:41:41.090Z\"\n  } ]\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/service-agreement\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 200,\n                body: {\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"approvalId\" : \"606d4532-f8d9-4a5f-36kl-887baf88fa24\",\n  \"action\" : \"EDIT\",\n  \"oldState\" : {\n    \"name\" : \"FG1\",\n    \"description\" : \"FG1 description\",\n    \"validFromDate\" : \"2020-01-01\",\n    \"validFromTime\" : \"00:00:00\",\n    \"validUntilDate\" : \"2025-01-01\",\n    \"validUntilTime\" : \"23:59:59\",\n    \"admins\" : [ \"0955e686d31e4216b3dd5d76561d536d\", \"0955e686d31e4216b3dd5d76164d536d\", \"0955e686d31e4216b3aa5d76161d536d\" ],\n    \"legalEntities\" : [ {\n      \"name\" : \"LEName1\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a1c\",\n      \"externalId\" : \"C000001\",\n      \"contributeUsers\" : true,\n      \"contributeAccount\" : true\n    }, {\n      \"name\" : \"LEName2\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a2c\",\n      \"externalId\" : \"C000002\",\n      \"contributeUsers\" : true,\n      \"contributeAccount\" : false\n    } ]\n  },\n  \"newState\" : {\n    \"name\" : \"FG1\",\n    \"description\" : \"FG1 description\",\n    \"validFromDate\" : \"2020-01-01\",\n    \"validFromTime\" : \"00:00:00\",\n    \"validUntilDate\" : \"2025-01-01\",\n    \"validUntilTime\" : \"23:59:59\",\n    \"admins\" : [ \"0955e686d31e4216b3dd5d76561d536d\", \"0955e686d31e4216b3dd5d76164d536d\", \"0955e686d31e4216b3aa5d76161d522d\" ],\n    \"legalEntities\" : [ {\n      \"name\" : \"LEName1\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a1c\",\n      \"externalId\" : \"C000001\",\n      \"contributeUsers\" : true,\n      \"contributeAccount\" : true\n    }, {\n      \"name\" : \"LEName2\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a2c\",\n      \"externalId\" : \"C000002\",\n      \"contributeUsers\" : true,\n      \"contributeAccount\" : false\n    }, {\n      \"name\" : \"LEName3\",\n      \"id\" : \"f41c4f3fea444cd2bfcf861dd13d2a4c\",\n      \"externalId\" : \"C000003\",\n      \"contributeUsers\" : false,\n      \"contributeAccount\" : true\n    } ]\n  }\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/wizard-setup\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvalId\" : \"test\",\n  \"action\" : \"CREATE\",\n  \"category\" : \"Assign Permissions by Wizard\",\n  \"users\" : [ {\n    \"userId\" : \"c7a382786d514262b75ab9531b749a2b\",\n    \"userFullName\" : \"Paddy Brian\"\n  } ],\n  \"functionGroups\" : [ {\n    \"functionGroupId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b645392\"\n  }, {\n    \"functionGroupId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b6453812\"\n  } ],\n  \"serviceAgreementId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n  \"serviceAgreementName\" : \"AIB\",\n  \"accounts\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\", \"6c1261e8-7b6b-4c14-9bb4-e976d834c730\", \"e6659eea893c4da48f9b7fd425de4677\", \"8eb58b1d048d4112a2f7591d465c3f14\", \"8a48e7546e11f733016e2249604f4076\", \"8a48e7546e11f733016e22495b6a4067\", \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\", \"8a48e7546e11f733016e22496d7e409d\", \"8a48e7546e11f733016e2249734640af\", \"8a48e7546e11f733016e22496ba94097\", \"8a48e7546e11f733016e22494c19403a\", \"8a48e7546e11f733016e2249715a40a9\", \"8a48e7546e11f733016e2249693f4091\", \"8a48e7546e11f733016e2249771240bb\", \"8a48e7546e11f733016e22496f5f40a3\" ],\n  \"limit\" : {\n    \"currency\" : \"EUR\",\n    \"periodicLimitsBounds\" : {\n      \"customPeriods\" : [ {\n        \"amount\" : 100,\n        \"period\" : \"biweekly\"\n      } ],\n      \"daily\" : 100,\n      \"monthly\" : 10000,\n      \"quarterly\" : 100000,\n      \"weekly\" : 1000\n    },\n    \"transactionalLimitsBounds\" : {\n      \"amount\" : 1000\n    }\n  },\n  \"removeExistingPermissions\" : false\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/approve\",\n        method: \"POST\",\n        responses: [\n\n\n            {\n                status: 200,\n                body: {\n  \"approvalStatus\" : \"PENDING\"\n}\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/approvals/{approvalId}/reject\",\n        method: \"POST\",\n        responses: [\n\n\n            {\n                status: 200,\n                body: {\n  \"approvalStatus\" : \"PENDING\"\n}\n            },\n\n    ]\n},\n]\n);\n\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { DataGroupItem } from '../model/models';\nimport { DataGroupItemBase } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { GetDataGroupItem } from '../model/models';\nimport { IdItem } from '../model/models';\nimport { NotFoundError } from '../model/models';\n\nimport { ACCESS_CONTROL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AccessControlConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteDataGroupByIdRequestParams {\n    /** external ID */\n    [\"id\"]: string;\n}\n\nexport interface GetDataGroupByIdRequestParams {\n    /** external ID */\n    [\"id\"]: string;\n}\n\nexport interface GetDataGroupsRequestParams {\n    /** Id of Service Agreement */\n    [\"serviceAgreementId\"]: string;\n    /** Type od data group */\n    [\"type\"]?: string;\n    /** Defines if the items of the data groups will be returned in the response */\n    [\"includeItems\"]?: boolean;\n}\n\nexport interface PostDataGroupsRequestParams {\n    /** # Create Data Group - &#x60;POST&#x60;    Creates a new data group.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.AddDataGroupRoute  * Route Id: AddDataGroupRoute  * Route source endpoint:     - direct:accessgroup.datagroup.add  * Route destination endpoint:    - direct:accessgroup.datagroup.add.validate    - direct:accessgroup.datagroup.add.persist */\n    [\"dataGroupItemBase\"]?: DataGroupItemBase;\n}\n\nexport interface PutDataGroupByIdRequestParams {\n    /** external ID */\n    [\"id\"]: string;\n    /** # Update Data Group details - &#x60;PUT&#x60;    Updates details for a specific data group.  Update may be done by: data group internal id or (data group name and referenced service agreement external id)    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.UpdateDataGroupByIdGroupRoute  * Route Id: UpdateDataGroupByIdGroupRoute  * Route source endpoint: direct:accessgroup.datagroup.update  * Route destination endpoint:      - direct:accessgroup.datagroup.update.validate     - direct:accessgroup.datagroup.update.persist */\n    [\"dataGroupItem\"]?: DataGroupItem;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataGroupsHttpService {\n\n    protected basePath = '/access-control';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AccessControlConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACCESS_CONTROL_BASE_PATH) basePath: string, @Optional() configuration: AccessControlConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete Data Group - &#x60;DELETE&#x60;.\n     * # Delete Data Group - &#x60;DELETE&#x60;    Deletes the specific data group by internal data group id.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.DeleteDataGroupRoute  * Route Id: DeleteDataGroupRoute  * Route source endpoint: direct:business.DeleteDataGroup  * Route destination endpoint: direct:deleteDataGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDataGroupById(requestParameters: DeleteDataGroupByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete Data Group - &#x60;DELETE&#x60;.\n     * # Delete Data Group - &#x60;DELETE&#x60;    Deletes the specific data group by internal data group id.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.DeleteDataGroupRoute  * Route Id: DeleteDataGroupRoute  * Route source endpoint: direct:business.DeleteDataGroup  * Route destination endpoint: direct:deleteDataGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDataGroupById(requestParameters: DeleteDataGroupByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete Data Group - &#x60;DELETE&#x60;.\n     * # Delete Data Group - &#x60;DELETE&#x60;    Deletes the specific data group by internal data group id.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.DeleteDataGroupRoute  * Route Id: DeleteDataGroupRoute  * Route source endpoint: direct:business.DeleteDataGroup  * Route destination endpoint: direct:deleteDataGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDataGroupById(requestParameters: DeleteDataGroupByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete Data Group - &#x60;DELETE&#x60;.\n     * # Delete Data Group - &#x60;DELETE&#x60;    Deletes the specific data group by internal data group id.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.DeleteDataGroupRoute  * Route Id: DeleteDataGroupRoute  * Route source endpoint: direct:business.DeleteDataGroup  * Route destination endpoint: direct:deleteDataGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDataGroupById(requestParameters: DeleteDataGroupByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteDataGroupById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/data-groups/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteDataGroupByIdUrl(requestParameters: DeleteDataGroupByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteDataGroupById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/data-groups/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Retrieve Data Group details - &#x60;GET&#x60;.\n     * # Retrieve Data Group details - &#x60;GET&#x60;    Retrieves details for a specific data group.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.GetDataGroupByIdRoute  * Route Id: GetDataGroupByIdRoute  * Route source endpoint: direct:business.GetDataGroupById  * Route destination endpoint: direct:getDataGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataGroupById(requestParameters: GetDataGroupByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetDataGroupItem>;\n    /**\n     * Retrieve Data Group details - &#x60;GET&#x60;.\n     * # Retrieve Data Group details - &#x60;GET&#x60;    Retrieves details for a specific data group.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.GetDataGroupByIdRoute  * Route Id: GetDataGroupByIdRoute  * Route source endpoint: direct:business.GetDataGroupById  * Route destination endpoint: direct:getDataGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataGroupById(requestParameters: GetDataGroupByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetDataGroupItem>>;\n    /**\n     * Retrieve Data Group details - &#x60;GET&#x60;.\n     * # Retrieve Data Group details - &#x60;GET&#x60;    Retrieves details for a specific data group.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.GetDataGroupByIdRoute  * Route Id: GetDataGroupByIdRoute  * Route source endpoint: direct:business.GetDataGroupById  * Route destination endpoint: direct:getDataGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataGroupById(requestParameters: GetDataGroupByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetDataGroupItem>>;\n    /**\n     * Retrieve Data Group details - &#x60;GET&#x60;.\n     * # Retrieve Data Group details - &#x60;GET&#x60;    Retrieves details for a specific data group.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.GetDataGroupByIdRoute  * Route Id: GetDataGroupByIdRoute  * Route source endpoint: direct:business.GetDataGroupById  * Route destination endpoint: direct:getDataGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataGroupById(requestParameters: GetDataGroupByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getDataGroupById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetDataGroupItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/data-groups/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getDataGroupByIdUrl(requestParameters: GetDataGroupByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getDataGroupById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/data-groups/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * List Data Groups - &#x60;GET&#x60;.\n     * # List Data Groups - &#x60;GET&#x60;    Provides a list of all data groups for given Legal Entity ID and type.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.ListDataGroupsRoute  * Route Id: ListDataGroupsRoute  * Route source endpoint: direct:business.ListDataGroups  * Route destination endpoint: direct:listDataGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataGroups(requestParameters: GetDataGroupsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<GetDataGroupItem>>;\n    /**\n     * List Data Groups - &#x60;GET&#x60;.\n     * # List Data Groups - &#x60;GET&#x60;    Provides a list of all data groups for given Legal Entity ID and type.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.ListDataGroupsRoute  * Route Id: ListDataGroupsRoute  * Route source endpoint: direct:business.ListDataGroups  * Route destination endpoint: direct:listDataGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataGroups(requestParameters: GetDataGroupsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<GetDataGroupItem>>>;\n    /**\n     * List Data Groups - &#x60;GET&#x60;.\n     * # List Data Groups - &#x60;GET&#x60;    Provides a list of all data groups for given Legal Entity ID and type.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.ListDataGroupsRoute  * Route Id: ListDataGroupsRoute  * Route source endpoint: direct:business.ListDataGroups  * Route destination endpoint: direct:listDataGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataGroups(requestParameters: GetDataGroupsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<GetDataGroupItem>>>;\n    /**\n     * List Data Groups - &#x60;GET&#x60;.\n     * # List Data Groups - &#x60;GET&#x60;    Provides a list of all data groups for given Legal Entity ID and type.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.ListDataGroupsRoute  * Route Id: ListDataGroupsRoute  * Route source endpoint: direct:business.ListDataGroups  * Route destination endpoint: direct:listDataGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataGroups(requestParameters: GetDataGroupsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getDataGroups.');\n        }\n        const _type = requestParameters[\"type\"];\n        const _includeItems = requestParameters[\"includeItems\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_type !== undefined && _type !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_type, 'type');\n        }\n        if (_includeItems !== undefined && _includeItems !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_includeItems, 'includeItems');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<GetDataGroupItem>>(`${this.configuration.basePath}/client-api/v2/accessgroups/data-groups`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getDataGroupsUrl(requestParameters: GetDataGroupsRequestParams): string {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getDataGroups.');\n        }\n        const _type = requestParameters[\"type\"];\n        const _includeItems = requestParameters[\"includeItems\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_type !== undefined && _type !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_type, 'type');\n        }\n        if (_includeItems !== undefined && _includeItems !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_includeItems, 'includeItems');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/data-groups${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Create Data Group - &#x60;POST&#x60;.\n     * # Create Data Group - &#x60;POST&#x60;    Creates a new data group.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.AddDataGroupRoute  * Route Id: AddDataGroupRoute  * Route source endpoint:     - direct:accessgroup.datagroup.add  * Route destination endpoint:    - direct:accessgroup.datagroup.add.validate    - direct:accessgroup.datagroup.add.persist\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postDataGroups(requestParameters: PostDataGroupsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<IdItem>;\n    /**\n     * Create Data Group - &#x60;POST&#x60;.\n     * # Create Data Group - &#x60;POST&#x60;    Creates a new data group.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.AddDataGroupRoute  * Route Id: AddDataGroupRoute  * Route source endpoint:     - direct:accessgroup.datagroup.add  * Route destination endpoint:    - direct:accessgroup.datagroup.add.validate    - direct:accessgroup.datagroup.add.persist\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postDataGroups(requestParameters: PostDataGroupsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<IdItem>>;\n    /**\n     * Create Data Group - &#x60;POST&#x60;.\n     * # Create Data Group - &#x60;POST&#x60;    Creates a new data group.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.AddDataGroupRoute  * Route Id: AddDataGroupRoute  * Route source endpoint:     - direct:accessgroup.datagroup.add  * Route destination endpoint:    - direct:accessgroup.datagroup.add.validate    - direct:accessgroup.datagroup.add.persist\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postDataGroups(requestParameters: PostDataGroupsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<IdItem>>;\n    /**\n     * Create Data Group - &#x60;POST&#x60;.\n     * # Create Data Group - &#x60;POST&#x60;    Creates a new data group.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.AddDataGroupRoute  * Route Id: AddDataGroupRoute  * Route source endpoint:     - direct:accessgroup.datagroup.add  * Route destination endpoint:    - direct:accessgroup.datagroup.add.validate    - direct:accessgroup.datagroup.add.persist\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postDataGroups(requestParameters: PostDataGroupsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _dataGroupItemBase = requestParameters[\"dataGroupItemBase\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<IdItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/data-groups`,\n            _dataGroupItemBase,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postDataGroupsUrl(requestParameters: PostDataGroupsRequestParams): string {\n        const _dataGroupItemBase = requestParameters[\"dataGroupItemBase\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/data-groups`;\n    }\n\n    /**\n     * Update Data Group details - &#x60;PUT&#x60;.\n     * # Update Data Group details - &#x60;PUT&#x60;    Updates details for a specific data group.  Update may be done by: data group internal id or (data group name and referenced service agreement external id)    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.UpdateDataGroupByIdGroupRoute  * Route Id: UpdateDataGroupByIdGroupRoute  * Route source endpoint: direct:accessgroup.datagroup.update  * Route destination endpoint:      - direct:accessgroup.datagroup.update.validate     - direct:accessgroup.datagroup.update.persist\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putDataGroupById(requestParameters: PutDataGroupByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Update Data Group details - &#x60;PUT&#x60;.\n     * # Update Data Group details - &#x60;PUT&#x60;    Updates details for a specific data group.  Update may be done by: data group internal id or (data group name and referenced service agreement external id)    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.UpdateDataGroupByIdGroupRoute  * Route Id: UpdateDataGroupByIdGroupRoute  * Route source endpoint: direct:accessgroup.datagroup.update  * Route destination endpoint:      - direct:accessgroup.datagroup.update.validate     - direct:accessgroup.datagroup.update.persist\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putDataGroupById(requestParameters: PutDataGroupByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Update Data Group details - &#x60;PUT&#x60;.\n     * # Update Data Group details - &#x60;PUT&#x60;    Updates details for a specific data group.  Update may be done by: data group internal id or (data group name and referenced service agreement external id)    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.UpdateDataGroupByIdGroupRoute  * Route Id: UpdateDataGroupByIdGroupRoute  * Route source endpoint: direct:accessgroup.datagroup.update  * Route destination endpoint:      - direct:accessgroup.datagroup.update.validate     - direct:accessgroup.datagroup.update.persist\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putDataGroupById(requestParameters: PutDataGroupByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Update Data Group details - &#x60;PUT&#x60;.\n     * # Update Data Group details - &#x60;PUT&#x60;    Updates details for a specific data group.  Update may be done by: data group internal id or (data group name and referenced service agreement external id)    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.datagroup.UpdateDataGroupByIdGroupRoute  * Route Id: UpdateDataGroupByIdGroupRoute  * Route source endpoint: direct:accessgroup.datagroup.update  * Route destination endpoint:      - direct:accessgroup.datagroup.update.validate     - direct:accessgroup.datagroup.update.persist\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putDataGroupById(requestParameters: PutDataGroupByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putDataGroupById.');\n        }\n        const _dataGroupItem = requestParameters[\"dataGroupItem\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/data-groups/${encodeURIComponent(String(_id))}`,\n            _dataGroupItem,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putDataGroupByIdUrl(requestParameters: PutDataGroupByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putDataGroupById.');\n        }\n        const _dataGroupItem = requestParameters[\"dataGroupItem\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/data-groups/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/data-groups/{id} URL pattern\n*/\nexport const DataGroupsHttpServiceDeleteDataGroupByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/data-groups/{id} URL pattern\n*/\nexport const DataGroupsHttpServiceGetDataGroupByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\",\n  \"name\" : \"Data group 1\",\n  \"description\" : \"Simple data group\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"type\" : \"ARRANGEMENTS\",\n  \"items\" : [ \"e6659eea893c4da48f9b7fd425de4677\", \"8eb58b1d048d4112a2f7591d465c3f14\" ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/data-groups URL pattern\n*/\nexport const DataGroupsHttpServiceGetDataGroupsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"138a7683-e9da-4ffa-a257-b78626790cd7\",\n  \"name\" : \"Salaries\",\n  \"description\" : \"Contains accounts used for paying salaries\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"type\" : \"ARRANGEMENTS\",\n  \"items\" : [ \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\" ]\n}, {\n  \"id\" : \"109104933dcc42bc89ac5f960a6e1776\",\n  \"name\" : \"All Accounts\",\n  \"description\" : \"Contains all accounts\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b15\",\n  \"type\" : \"ARRANGEMENTS\",\n  \"items\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\", \"6c1261e8-7b6b-4c14-9bb4-e976d834c730\" ],\n  \"approvalId\" : \"7a3fe8c4-ea29-4251-9883-f9f3d06305e2\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/data-groups URL pattern\n*/\nexport const DataGroupsHttpServicePostDataGroupsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n                },\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/data-groups/{id} URL pattern\n*/\nexport const DataGroupsHttpServicePutDataGroupByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n\nexport const DataGroupsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\",\n  \"name\" : \"Data group 1\",\n  \"description\" : \"Simple data group\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"type\" : \"ARRANGEMENTS\",\n  \"items\" : [ \"e6659eea893c4da48f9b7fd425de4677\", \"8eb58b1d048d4112a2f7591d465c3f14\" ]\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"138a7683-e9da-4ffa-a257-b78626790cd7\",\n  \"name\" : \"Salaries\",\n  \"description\" : \"Contains accounts used for paying salaries\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b14\",\n  \"type\" : \"ARRANGEMENTS\",\n  \"items\" : [ \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\" ]\n}, {\n  \"id\" : \"109104933dcc42bc89ac5f960a6e1776\",\n  \"name\" : \"All Accounts\",\n  \"description\" : \"Contains all accounts\",\n  \"serviceAgreementId\" : \"0889e686d31e4216b3dd5d66163d2b15\",\n  \"type\" : \"ARRANGEMENTS\",\n  \"items\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\", \"6c1261e8-7b6b-4c14-9bb4-e976d834c730\" ],\n  \"approvalId\" : \"7a3fe8c4-ea29-4251-9883-f9f3d06305e2\"\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n            },\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/data-groups/{id}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n\n    ]\n},\n]\n);\n\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { FunctionGroupItem } from '../model/models';\nimport { FunctionGroupItemBase } from '../model/models';\nimport { FunctionGroupItemPut } from '../model/models';\nimport { IdItem } from '../model/models';\nimport { NotFoundError } from '../model/models';\n\nimport { ACCESS_CONTROL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AccessControlConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteFunctionGroupByIdRequestParams {\n    /** external ID */\n    [\"id\"]: string;\n}\n\nexport interface GetFunctionGroupByIdRequestParams {\n    /** external ID */\n    [\"id\"]: string;\n}\n\nexport interface GetFunctionGroupsRequestParams {\n    /** Service Agreement Id */\n    [\"serviceAgreementId\"]: string;\n}\n\nexport interface PostFunctionGroupsRequestParams {\n    /** # Create Function Group - &#x60;POST&#x60;    Creates a new function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.AddFunctionGroupRoute  * Route Id: AddFunctionGroupRoute  * Route source endpoint: direct:business.AddFunctionGroups  * Route destination endpoint: direct:addFunctionGroupRequestedInternal */\n    [\"functionGroupItemBase\"]?: FunctionGroupItemBase;\n}\n\nexport interface PutFunctionGroupByIdRequestParams {\n    /** external ID */\n    [\"id\"]: string;\n    /** # Update Function Group details - &#x60;PUT&#x60;    Updates details for a specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.UpdateFunctionGroupByIdRoute  * Route Id: UpdateFunctionGroupByIdRoute  * Route source endpoint: direct:business.UpdateFunctionGroupById  * Route destination endpoint: direct:updateFunctionGroupByIdRequestedInternal */\n    [\"functionGroupItemPut\"]?: FunctionGroupItemPut;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FunctionGroupsHttpService {\n\n    protected basePath = '/access-control';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AccessControlConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACCESS_CONTROL_BASE_PATH) basePath: string, @Optional() configuration: AccessControlConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete Function Group - &#x60;DELETE&#x60;.\n     * # Delete Function Group - &#x60;DELETE&#x60;    Deletes the specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.DeleteFunctionGroupByIdRoute  * Route Id: DeleteFunctionGroupByIdRoute  * Route source endpoint: direct:business.DeleteFunctionGroupById  * Route destination endpoint: direct:deleteFunctionGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteFunctionGroupById(requestParameters: DeleteFunctionGroupByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete Function Group - &#x60;DELETE&#x60;.\n     * # Delete Function Group - &#x60;DELETE&#x60;    Deletes the specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.DeleteFunctionGroupByIdRoute  * Route Id: DeleteFunctionGroupByIdRoute  * Route source endpoint: direct:business.DeleteFunctionGroupById  * Route destination endpoint: direct:deleteFunctionGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteFunctionGroupById(requestParameters: DeleteFunctionGroupByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete Function Group - &#x60;DELETE&#x60;.\n     * # Delete Function Group - &#x60;DELETE&#x60;    Deletes the specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.DeleteFunctionGroupByIdRoute  * Route Id: DeleteFunctionGroupByIdRoute  * Route source endpoint: direct:business.DeleteFunctionGroupById  * Route destination endpoint: direct:deleteFunctionGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteFunctionGroupById(requestParameters: DeleteFunctionGroupByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete Function Group - &#x60;DELETE&#x60;.\n     * # Delete Function Group - &#x60;DELETE&#x60;    Deletes the specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.DeleteFunctionGroupByIdRoute  * Route Id: DeleteFunctionGroupByIdRoute  * Route source endpoint: direct:business.DeleteFunctionGroupById  * Route destination endpoint: direct:deleteFunctionGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteFunctionGroupById(requestParameters: DeleteFunctionGroupByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteFunctionGroupById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/function-groups/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteFunctionGroupByIdUrl(requestParameters: DeleteFunctionGroupByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteFunctionGroupById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/function-groups/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Retrieve Function Group details - &#x60;GET&#x60;.\n     * # Retrieve Function Group details - &#x60;GET&#x60;    Retrieves details for a specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.GetFunctionGroupByIdRoute  * Route Id: GetFunctionGroupRoute  * Route source endpoint: direct:business.GetFunctionGroup  * Route destination endpoint: direct:getFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFunctionGroupById(requestParameters: GetFunctionGroupByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<FunctionGroupItem>;\n    /**\n     * Retrieve Function Group details - &#x60;GET&#x60;.\n     * # Retrieve Function Group details - &#x60;GET&#x60;    Retrieves details for a specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.GetFunctionGroupByIdRoute  * Route Id: GetFunctionGroupRoute  * Route source endpoint: direct:business.GetFunctionGroup  * Route destination endpoint: direct:getFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFunctionGroupById(requestParameters: GetFunctionGroupByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<FunctionGroupItem>>;\n    /**\n     * Retrieve Function Group details - &#x60;GET&#x60;.\n     * # Retrieve Function Group details - &#x60;GET&#x60;    Retrieves details for a specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.GetFunctionGroupByIdRoute  * Route Id: GetFunctionGroupRoute  * Route source endpoint: direct:business.GetFunctionGroup  * Route destination endpoint: direct:getFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFunctionGroupById(requestParameters: GetFunctionGroupByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<FunctionGroupItem>>;\n    /**\n     * Retrieve Function Group details - &#x60;GET&#x60;.\n     * # Retrieve Function Group details - &#x60;GET&#x60;    Retrieves details for a specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.GetFunctionGroupByIdRoute  * Route Id: GetFunctionGroupRoute  * Route source endpoint: direct:business.GetFunctionGroup  * Route destination endpoint: direct:getFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFunctionGroupById(requestParameters: GetFunctionGroupByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getFunctionGroupById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FunctionGroupItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/function-groups/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getFunctionGroupByIdUrl(requestParameters: GetFunctionGroupByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getFunctionGroupById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/function-groups/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * List Function Groups - &#x60;GET&#x60;.\n     * # List Function Groups - &#x60;GET&#x60;    Provides a list of all function groups for given Service Agreement ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.ListFunctionGroupsRoute  * Route Id: ListFunctionGroupsRoute  * Route source endpoint: direct:business.ListFunctionGroups  * Route destination endpoint: direct:listFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFunctionGroups(requestParameters: GetFunctionGroupsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<FunctionGroupItem>>;\n    /**\n     * List Function Groups - &#x60;GET&#x60;.\n     * # List Function Groups - &#x60;GET&#x60;    Provides a list of all function groups for given Service Agreement ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.ListFunctionGroupsRoute  * Route Id: ListFunctionGroupsRoute  * Route source endpoint: direct:business.ListFunctionGroups  * Route destination endpoint: direct:listFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFunctionGroups(requestParameters: GetFunctionGroupsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<FunctionGroupItem>>>;\n    /**\n     * List Function Groups - &#x60;GET&#x60;.\n     * # List Function Groups - &#x60;GET&#x60;    Provides a list of all function groups for given Service Agreement ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.ListFunctionGroupsRoute  * Route Id: ListFunctionGroupsRoute  * Route source endpoint: direct:business.ListFunctionGroups  * Route destination endpoint: direct:listFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFunctionGroups(requestParameters: GetFunctionGroupsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<FunctionGroupItem>>>;\n    /**\n     * List Function Groups - &#x60;GET&#x60;.\n     * # List Function Groups - &#x60;GET&#x60;    Provides a list of all function groups for given Service Agreement ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.ListFunctionGroupsRoute  * Route Id: ListFunctionGroupsRoute  * Route source endpoint: direct:business.ListFunctionGroups  * Route destination endpoint: direct:listFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFunctionGroups(requestParameters: GetFunctionGroupsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getFunctionGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<FunctionGroupItem>>(`${this.configuration.basePath}/client-api/v2/accessgroups/function-groups`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getFunctionGroupsUrl(requestParameters: GetFunctionGroupsRequestParams): string {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getFunctionGroups.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/function-groups${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Create Function Group - &#x60;POST&#x60;.\n     * # Create Function Group - &#x60;POST&#x60;    Creates a new function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.AddFunctionGroupRoute  * Route Id: AddFunctionGroupRoute  * Route source endpoint: direct:business.AddFunctionGroups  * Route destination endpoint: direct:addFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFunctionGroups(requestParameters: PostFunctionGroupsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<IdItem>;\n    /**\n     * Create Function Group - &#x60;POST&#x60;.\n     * # Create Function Group - &#x60;POST&#x60;    Creates a new function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.AddFunctionGroupRoute  * Route Id: AddFunctionGroupRoute  * Route source endpoint: direct:business.AddFunctionGroups  * Route destination endpoint: direct:addFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFunctionGroups(requestParameters: PostFunctionGroupsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<IdItem>>;\n    /**\n     * Create Function Group - &#x60;POST&#x60;.\n     * # Create Function Group - &#x60;POST&#x60;    Creates a new function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.AddFunctionGroupRoute  * Route Id: AddFunctionGroupRoute  * Route source endpoint: direct:business.AddFunctionGroups  * Route destination endpoint: direct:addFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFunctionGroups(requestParameters: PostFunctionGroupsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<IdItem>>;\n    /**\n     * Create Function Group - &#x60;POST&#x60;.\n     * # Create Function Group - &#x60;POST&#x60;    Creates a new function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.AddFunctionGroupRoute  * Route Id: AddFunctionGroupRoute  * Route source endpoint: direct:business.AddFunctionGroups  * Route destination endpoint: direct:addFunctionGroupRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFunctionGroups(requestParameters: PostFunctionGroupsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _functionGroupItemBase = requestParameters[\"functionGroupItemBase\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<IdItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/function-groups`,\n            _functionGroupItemBase,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postFunctionGroupsUrl(requestParameters: PostFunctionGroupsRequestParams): string {\n        const _functionGroupItemBase = requestParameters[\"functionGroupItemBase\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/function-groups`;\n    }\n\n    /**\n     * Update Function Group details - &#x60;PUT&#x60;.\n     * # Update Function Group details - &#x60;PUT&#x60;    Updates details for a specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.UpdateFunctionGroupByIdRoute  * Route Id: UpdateFunctionGroupByIdRoute  * Route source endpoint: direct:business.UpdateFunctionGroupById  * Route destination endpoint: direct:updateFunctionGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putFunctionGroupById(requestParameters: PutFunctionGroupByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Update Function Group details - &#x60;PUT&#x60;.\n     * # Update Function Group details - &#x60;PUT&#x60;    Updates details for a specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.UpdateFunctionGroupByIdRoute  * Route Id: UpdateFunctionGroupByIdRoute  * Route source endpoint: direct:business.UpdateFunctionGroupById  * Route destination endpoint: direct:updateFunctionGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putFunctionGroupById(requestParameters: PutFunctionGroupByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Update Function Group details - &#x60;PUT&#x60;.\n     * # Update Function Group details - &#x60;PUT&#x60;    Updates details for a specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.UpdateFunctionGroupByIdRoute  * Route Id: UpdateFunctionGroupByIdRoute  * Route source endpoint: direct:business.UpdateFunctionGroupById  * Route destination endpoint: direct:updateFunctionGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putFunctionGroupById(requestParameters: PutFunctionGroupByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Update Function Group details - &#x60;PUT&#x60;.\n     * # Update Function Group details - &#x60;PUT&#x60;    Updates details for a specific function group.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.functiongroup.UpdateFunctionGroupByIdRoute  * Route Id: UpdateFunctionGroupByIdRoute  * Route source endpoint: direct:business.UpdateFunctionGroupById  * Route destination endpoint: direct:updateFunctionGroupByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putFunctionGroupById(requestParameters: PutFunctionGroupByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putFunctionGroupById.');\n        }\n        const _functionGroupItemPut = requestParameters[\"functionGroupItemPut\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/function-groups/${encodeURIComponent(String(_id))}`,\n            _functionGroupItemPut,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putFunctionGroupByIdUrl(requestParameters: PutFunctionGroupByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putFunctionGroupById.');\n        }\n        const _functionGroupItemPut = requestParameters[\"functionGroupItemPut\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/function-groups/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/function-groups/{id} URL pattern\n*/\nexport const FunctionGroupsHttpServiceDeleteFunctionGroupByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/function-groups/{id} URL pattern\n*/\nexport const FunctionGroupsHttpServiceGetFunctionGroupByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"name\" : \"Manage Entitlements\",\n  \"description\" : \"This profile will control managing of entitlements\",\n  \"serviceAgreementId\" : \"1642b2e1-61c4-4ce3-8bd9-877327587f4b\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1012\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1011\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1010\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1009\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"create\"\n    }, {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"edit\"\n    } ]\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/function-groups URL pattern\n*/\nexport const FunctionGroupsHttpServiceGetFunctionGroupsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"00779897-253c-4bbb-b0c7-3c47fd0b0b08\",\n  \"name\" : \"Manage Entitlements\",\n  \"description\" : \"This profile will control managing of entitlements\",\n  \"serviceAgreementId\" : \"51c95177-0d29-43f6-978c-be8c0b9126ab\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1012\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1011\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1010\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1009\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"create\"\n    }, {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"edit\"\n    } ]\n  } ],\n  \"validFromDate\" : \"2019-08-16\",\n  \"validFromTime\" : \"16:43:52\",\n  \"validUntilDate\" : \"2019-08-23\",\n  \"validUntilTime\" : \"16:43:52\",\n  \"type\" : \"REGULAR\"\n}, {\n  \"id\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eead\",\n  \"name\" : \"Viewer of Product Summary and Transactions\",\n  \"description\" : \"This profile will control viewing of Product Summary and Transactions\",\n  \"legalEntityId\" : \"be2a6940-91f9-4cba-9c35-0b1f55f4071d\",\n  \"serviceAgreementId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1006\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1003\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  } ],\n  \"approvalId\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eead\",\n  \"validFromDate\" : \"2019-09-17\",\n  \"validFromTime\" : \"16:43:57\",\n  \"validUntilDate\" : \"2019-10-25\",\n  \"validUntilTime\" : \"16:55:23\",\n  \"type\" : \"TEMPLATE\"\n}, {\n  \"id\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eeae\",\n  \"name\" : \"Limits Manager\",\n  \"description\" : \"This profile will control managing of limits\",\n  \"legalEntityId\" : \"be2a6940-91f9-4cba-9c35-0b1f55f4071d\",\n  \"serviceAgreementId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1012\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"create\"\n    }, {\n      \"privilege\" : \"edit\"\n    }, {\n      \"privilege\" : \"delete\"\n    } ]\n  }, {\n    \"functionId\" : \"1014\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  } ],\n  \"validFromDate\" : \"2019-09-17\",\n  \"validFromTime\" : \"16:43:57\",\n  \"validUntilDate\" : \"2019-10-25\",\n  \"validUntilTime\" : \"16:55:23\",\n  \"type\" : \"TEMPLATE\"\n}, {\n  \"id\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eeaf\",\n  \"name\" : \"Permissions Approvals Manager\",\n  \"description\" : \"This profile will control approving of Permissions\",\n  \"legalEntityId\" : \"be2a6940-91f9-4cba-9c35-0b1f55f4071d\",\n  \"serviceAgreementId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1009\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"delete\"\n    } ]\n  }, {\n    \"functionId\" : \"1020\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1019\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  } ],\n  \"validFromDate\" : \"2019-09-17\",\n  \"validFromTime\" : \"16:43:57\",\n  \"validUntilDate\" : \"2019-10-25\",\n  \"validUntilTime\" : \"16:55:23\",\n  \"type\" : \"TEMPLATE\"\n}, {\n  \"id\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6feaf\",\n  \"name\" : \"Salary Manager\",\n  \"description\" : \"This profile will control paying salaries\",\n  \"legalEntityId\" : \"be2a6940-91f9-4cba-9c35-0b1f55f4071d\",\n  \"serviceAgreementId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1015\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"create\"\n    }, {\n      \"privilege\" : \"edit\"\n    }, {\n      \"privilege\" : \"delete\"\n    } ]\n  } ],\n  \"validFromDate\" : \"2019-09-17\",\n  \"validFromTime\" : \"16:43:57\",\n  \"validUntilDate\" : \"2019-10-25\",\n  \"validUntilTime\" : \"16:55:23\",\n  \"type\" : \"REGULAR\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/function-groups URL pattern\n*/\nexport const FunctionGroupsHttpServicePostFunctionGroupsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n                },\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/function-groups/{id} URL pattern\n*/\nexport const FunctionGroupsHttpServicePutFunctionGroupByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n\nexport const FunctionGroupsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"name\" : \"Manage Entitlements\",\n  \"description\" : \"This profile will control managing of entitlements\",\n  \"serviceAgreementId\" : \"1642b2e1-61c4-4ce3-8bd9-877327587f4b\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1012\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1011\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1010\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1009\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"create\"\n    }, {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"edit\"\n    } ]\n  } ]\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"00779897-253c-4bbb-b0c7-3c47fd0b0b08\",\n  \"name\" : \"Manage Entitlements\",\n  \"description\" : \"This profile will control managing of entitlements\",\n  \"serviceAgreementId\" : \"51c95177-0d29-43f6-978c-be8c0b9126ab\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1012\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1011\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1010\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1009\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"create\"\n    }, {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"edit\"\n    } ]\n  } ],\n  \"validFromDate\" : \"2019-08-16\",\n  \"validFromTime\" : \"16:43:52\",\n  \"validUntilDate\" : \"2019-08-23\",\n  \"validUntilTime\" : \"16:43:52\",\n  \"type\" : \"REGULAR\"\n}, {\n  \"id\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eead\",\n  \"name\" : \"Viewer of Product Summary and Transactions\",\n  \"description\" : \"This profile will control viewing of Product Summary and Transactions\",\n  \"legalEntityId\" : \"be2a6940-91f9-4cba-9c35-0b1f55f4071d\",\n  \"serviceAgreementId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1006\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1003\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  } ],\n  \"approvalId\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eead\",\n  \"validFromDate\" : \"2019-09-17\",\n  \"validFromTime\" : \"16:43:57\",\n  \"validUntilDate\" : \"2019-10-25\",\n  \"validUntilTime\" : \"16:55:23\",\n  \"type\" : \"TEMPLATE\"\n}, {\n  \"id\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eeae\",\n  \"name\" : \"Limits Manager\",\n  \"description\" : \"This profile will control managing of limits\",\n  \"legalEntityId\" : \"be2a6940-91f9-4cba-9c35-0b1f55f4071d\",\n  \"serviceAgreementId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1012\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"create\"\n    }, {\n      \"privilege\" : \"edit\"\n    }, {\n      \"privilege\" : \"delete\"\n    } ]\n  }, {\n    \"functionId\" : \"1014\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  } ],\n  \"validFromDate\" : \"2019-09-17\",\n  \"validFromTime\" : \"16:43:57\",\n  \"validUntilDate\" : \"2019-10-25\",\n  \"validUntilTime\" : \"16:55:23\",\n  \"type\" : \"TEMPLATE\"\n}, {\n  \"id\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eeaf\",\n  \"name\" : \"Permissions Approvals Manager\",\n  \"description\" : \"This profile will control approving of Permissions\",\n  \"legalEntityId\" : \"be2a6940-91f9-4cba-9c35-0b1f55f4071d\",\n  \"serviceAgreementId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1009\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"delete\"\n    } ]\n  }, {\n    \"functionId\" : \"1020\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  }, {\n    \"functionId\" : \"1019\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    } ]\n  } ],\n  \"validFromDate\" : \"2019-09-17\",\n  \"validFromTime\" : \"16:43:57\",\n  \"validUntilDate\" : \"2019-10-25\",\n  \"validUntilTime\" : \"16:55:23\",\n  \"type\" : \"TEMPLATE\"\n}, {\n  \"id\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6feaf\",\n  \"name\" : \"Salary Manager\",\n  \"description\" : \"This profile will control paying salaries\",\n  \"legalEntityId\" : \"be2a6940-91f9-4cba-9c35-0b1f55f4071d\",\n  \"serviceAgreementId\" : \"f34f7587-5ded-4f51-94c3-3a89d1b64539\",\n  \"permissions\" : [ {\n    \"functionId\" : \"1015\",\n    \"assignedPrivileges\" : [ {\n      \"privilege\" : \"view\"\n    }, {\n      \"privilege\" : \"create\"\n    }, {\n      \"privilege\" : \"edit\"\n    }, {\n      \"privilege\" : \"delete\"\n    } ]\n  } ],\n  \"validFromDate\" : \"2019-09-17\",\n  \"validFromTime\" : \"16:43:57\",\n  \"validUntilDate\" : \"2019-10-25\",\n  \"validUntilTime\" : \"16:55:23\",\n  \"type\" : \"REGULAR\"\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n            },\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/function-groups/{id}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n\n    ]\n},\n]\n);\n\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { GetServiceAgreement } from '../model/models';\nimport { LegalEntityAsParticipantCreateItem } from '../model/models';\nimport { LegalEntityAsParticipantItemId } from '../model/models';\nimport { LegalEntityCreateItem } from '../model/models';\nimport { LegalEntityExternalDataItem } from '../model/models';\nimport { LegalEntityItem } from '../model/models';\nimport { LegalEntityItemBase } from '../model/models';\nimport { LegalEntityItemId } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { SearchSubEntitiesParameters } from '../model/models';\n\nimport { ACCESS_CONTROL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AccessControlConfiguration }                                     from '../configuration';\n\n\nexport interface GetLegalEntitiesRequestParams {\n    /** Id of the Legal Entity\\&#39;s parent */\n    [\"parentEntityId\"]?: string;\n}\n\nexport interface GetLegalEntityByExternalIdRequestParams {\n    /** Legal Entity external ID */\n    [\"externalId\"]: string;\n}\n\nexport interface GetLegalEntityByIdRequestParams {\n    /** Legal Entity internal Id */\n    [\"legalEntityId\"]: string;\n}\n\nexport interface GetLegalEntityExternalDataRequestParams {\n    /** The data field used for search */\n    [\"field\"]?: string;\n    /** The string term used for search */\n    [\"term\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface GetMasterServiceAgreementRequestParams {\n    /** Legal Entity internal ID */\n    [\"legalEntityId\"]: string;\n}\n\nexport interface GetSegmentationRequestParams {\n    /** Name of the business function */\n    [\"businessFunction\"]: string;\n    /** Search by name or external ID: partial term for name and whole term for external ID */\n    [\"query\"]?: string;\n    /** Name of the privilege */\n    [\"privilege\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface PostLegalEntitiesRequestParams {\n    /** # Create new legal entity - &#x60;POST&#x60;    Create new legal entity.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalEntityFlow   */\n    [\"legalEntityCreateItem\"]?: LegalEntityCreateItem;\n}\n\nexport interface PostLegalEntitiesAsParticipantRequestParams {\n    /** # Create new legal entity and assign to service agreement - &#x60;POST&#x60;    Create new legal entity and assign the legal entity to either an existing or new service agreement.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalAsParticipantEntityFlow   */\n    [\"legalEntityAsParticipantCreateItem\"]?: LegalEntityAsParticipantCreateItem;\n}\n\nexport interface PostSubEntitiesRequestParams {\n    /** # Sub Legal Entities list - &#x60;POST&#x60;    Initial call to retrieve the list of sub legal entities (customers) from the backbase platform by excluding ids passed in the body of the request.  If no parentEntityId passed as query parameter then will return sub legal entities from the context user.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.GetSubLegalEntitlesFlow   */\n    [\"searchSubEntitiesParameters\"]?: SearchSubEntitiesParameters;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegalEntitiesHttpService {\n\n    protected basePath = '/access-control';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AccessControlConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACCESS_CONTROL_BASE_PATH) basePath: string, @Optional() configuration: AccessControlConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Legal Entities list - &#x60;GET&#x60;.\n     * # Legal Entities list - &#x60;GET&#x60;    Initial call to retrieve the list of legal entities (customers) from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.ListLegalEntitiesRoute  * Route Id: ListLegalEntities  * Route source endpoint: direct:business.legalEntities.ListLegalEntities  * Route destination endpoint: direct:listLegalEntitiesRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LegalEntityItem>>;\n    /**\n     * Legal Entities list - &#x60;GET&#x60;.\n     * # Legal Entities list - &#x60;GET&#x60;    Initial call to retrieve the list of legal entities (customers) from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.ListLegalEntitiesRoute  * Route Id: ListLegalEntities  * Route source endpoint: direct:business.legalEntities.ListLegalEntities  * Route destination endpoint: direct:listLegalEntitiesRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LegalEntityItem>>>;\n    /**\n     * Legal Entities list - &#x60;GET&#x60;.\n     * # Legal Entities list - &#x60;GET&#x60;    Initial call to retrieve the list of legal entities (customers) from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.ListLegalEntitiesRoute  * Route Id: ListLegalEntities  * Route source endpoint: direct:business.legalEntities.ListLegalEntities  * Route destination endpoint: direct:listLegalEntitiesRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LegalEntityItem>>>;\n    /**\n     * Legal Entities list - &#x60;GET&#x60;.\n     * # Legal Entities list - &#x60;GET&#x60;    Initial call to retrieve the list of legal entities (customers) from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.ListLegalEntitiesRoute  * Route Id: ListLegalEntities  * Route source endpoint: direct:business.legalEntities.ListLegalEntities  * Route destination endpoint: direct:listLegalEntitiesRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _parentEntityId = requestParameters[\"parentEntityId\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_parentEntityId !== undefined && _parentEntityId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_parentEntityId, 'parentEntityId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<LegalEntityItem>>(`${this.configuration.basePath}/client-api/v2/legalentities`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLegalEntitiesUrl(requestParameters: GetLegalEntitiesRequestParams): string {\n        const _parentEntityId = requestParameters[\"parentEntityId\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_parentEntityId !== undefined && _parentEntityId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_parentEntityId, 'parentEntityId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/legalentities${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Legal Entity by external id - &#x60;GET&#x60;.\n     * # Legal Entity by external id - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity from the backbase platform with the given Legal Entity external reference.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityByExternalIdRoute  * Route Id: GetLegalEntityByExternalId  * Route source endpoint: direct:business.legalentities.GetLegalEntityByExternalId  * Route destination endpoint: direct:getLegalEntityByExternalIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityByExternalId(requestParameters: GetLegalEntityByExternalIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LegalEntityItemBase>;\n    /**\n     * Legal Entity by external id - &#x60;GET&#x60;.\n     * # Legal Entity by external id - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity from the backbase platform with the given Legal Entity external reference.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityByExternalIdRoute  * Route Id: GetLegalEntityByExternalId  * Route source endpoint: direct:business.legalentities.GetLegalEntityByExternalId  * Route destination endpoint: direct:getLegalEntityByExternalIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityByExternalId(requestParameters: GetLegalEntityByExternalIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LegalEntityItemBase>>;\n    /**\n     * Legal Entity by external id - &#x60;GET&#x60;.\n     * # Legal Entity by external id - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity from the backbase platform with the given Legal Entity external reference.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityByExternalIdRoute  * Route Id: GetLegalEntityByExternalId  * Route source endpoint: direct:business.legalentities.GetLegalEntityByExternalId  * Route destination endpoint: direct:getLegalEntityByExternalIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityByExternalId(requestParameters: GetLegalEntityByExternalIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LegalEntityItemBase>>;\n    /**\n     * Legal Entity by external id - &#x60;GET&#x60;.\n     * # Legal Entity by external id - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity from the backbase platform with the given Legal Entity external reference.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityByExternalIdRoute  * Route Id: GetLegalEntityByExternalId  * Route source endpoint: direct:business.legalentities.GetLegalEntityByExternalId  * Route destination endpoint: direct:getLegalEntityByExternalIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityByExternalId(requestParameters: GetLegalEntityByExternalIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getLegalEntityByExternalId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LegalEntityItemBase>(`${this.configuration.basePath}/client-api/v2/legalentities/external/${encodeURIComponent(String(_externalId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLegalEntityByExternalIdUrl(requestParameters: GetLegalEntityByExternalIdRequestParams): string {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getLegalEntityByExternalId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/legalentities/external/${encodeURIComponent(String(_externalId))}`;\n    }\n\n    /**\n     * Legal Entity by ID - &#x60;GET&#x60;.\n     * # Legal Entity by ID - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity (customer) by ID from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityByIdRoute  * Route Id: GetLegalEntityById  * Route source endpoint: direct:business.legalentities.GetLegalEntityById  * Route destination endpoint: direct:getLegalEntityByIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityById(requestParameters: GetLegalEntityByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LegalEntityItem>;\n    /**\n     * Legal Entity by ID - &#x60;GET&#x60;.\n     * # Legal Entity by ID - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity (customer) by ID from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityByIdRoute  * Route Id: GetLegalEntityById  * Route source endpoint: direct:business.legalentities.GetLegalEntityById  * Route destination endpoint: direct:getLegalEntityByIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityById(requestParameters: GetLegalEntityByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LegalEntityItem>>;\n    /**\n     * Legal Entity by ID - &#x60;GET&#x60;.\n     * # Legal Entity by ID - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity (customer) by ID from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityByIdRoute  * Route Id: GetLegalEntityById  * Route source endpoint: direct:business.legalentities.GetLegalEntityById  * Route destination endpoint: direct:getLegalEntityByIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityById(requestParameters: GetLegalEntityByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LegalEntityItem>>;\n    /**\n     * Legal Entity by ID - &#x60;GET&#x60;.\n     * # Legal Entity by ID - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity (customer) by ID from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityByIdRoute  * Route Id: GetLegalEntityById  * Route source endpoint: direct:business.legalentities.GetLegalEntityById  * Route destination endpoint: direct:getLegalEntityByIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityById(requestParameters: GetLegalEntityByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _legalEntityId = requestParameters[\"legalEntityId\"];\n        if (_legalEntityId === null || _legalEntityId === undefined) {\n            throw new Error('Required parameter legalEntityId was null or undefined when calling getLegalEntityById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LegalEntityItem>(`${this.configuration.basePath}/client-api/v2/legalentities/${encodeURIComponent(String(_legalEntityId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLegalEntityByIdUrl(requestParameters: GetLegalEntityByIdRequestParams): string {\n        const _legalEntityId = requestParameters[\"legalEntityId\"];\n        if (_legalEntityId === null || _legalEntityId === undefined) {\n            throw new Error('Required parameter legalEntityId was null or undefined when calling getLegalEntityById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/legalentities/${encodeURIComponent(String(_legalEntityId))}`;\n    }\n\n    /**\n     * Legal Entities list with external data - &#x60;GET&#x60;.\n     * # Legal Entities list with external data - &#x60;GET&#x60;    Get legal entities with external data    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.ExternalLegalEntitySearchFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityExternalData(requestParameters: GetLegalEntityExternalDataRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LegalEntityExternalDataItem>>;\n    /**\n     * Legal Entities list with external data - &#x60;GET&#x60;.\n     * # Legal Entities list with external data - &#x60;GET&#x60;    Get legal entities with external data    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.ExternalLegalEntitySearchFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityExternalData(requestParameters: GetLegalEntityExternalDataRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LegalEntityExternalDataItem>>>;\n    /**\n     * Legal Entities list with external data - &#x60;GET&#x60;.\n     * # Legal Entities list with external data - &#x60;GET&#x60;    Get legal entities with external data    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.ExternalLegalEntitySearchFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityExternalData(requestParameters: GetLegalEntityExternalDataRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LegalEntityExternalDataItem>>>;\n    /**\n     * Legal Entities list with external data - &#x60;GET&#x60;.\n     * # Legal Entities list with external data - &#x60;GET&#x60;    Get legal entities with external data    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.ExternalLegalEntitySearchFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityExternalData(requestParameters: GetLegalEntityExternalDataRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _field = requestParameters[\"field\"];\n        const _term = requestParameters[\"term\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_field !== undefined && _field !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_field, 'field');\n        }\n        if (_term !== undefined && _term !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_term, 'term');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<LegalEntityExternalDataItem>>(`${this.configuration.basePath}/client-api/v2/legalentities/external-data`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLegalEntityExternalDataUrl(requestParameters: GetLegalEntityExternalDataRequestParams): string {\n        const _field = requestParameters[\"field\"];\n        const _term = requestParameters[\"term\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_field !== undefined && _field !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_field, 'field');\n        }\n        if (_term !== undefined && _term !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_term, 'term');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/legalentities/external-data${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Legal Entity for current user - &#x60;GET&#x60;.\n     * # Legal Entity for current user - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity (customer) for current user from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityForCurrentUserRoute  * Route Id: GetLegalEntityForCurrentUser  * Route source endpoint: direct:business.legalentities.GetLegalEntityForCurrentUser  * Route destination endpoint: direct:getLegalEntityForCurrentUserRequestedInternal  \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityForUser(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LegalEntityItem>;\n    /**\n     * Legal Entity for current user - &#x60;GET&#x60;.\n     * # Legal Entity for current user - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity (customer) for current user from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityForCurrentUserRoute  * Route Id: GetLegalEntityForCurrentUser  * Route source endpoint: direct:business.legalentities.GetLegalEntityForCurrentUser  * Route destination endpoint: direct:getLegalEntityForCurrentUserRequestedInternal  \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityForUser(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LegalEntityItem>>;\n    /**\n     * Legal Entity for current user - &#x60;GET&#x60;.\n     * # Legal Entity for current user - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity (customer) for current user from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityForCurrentUserRoute  * Route Id: GetLegalEntityForCurrentUser  * Route source endpoint: direct:business.legalentities.GetLegalEntityForCurrentUser  * Route destination endpoint: direct:getLegalEntityForCurrentUserRequestedInternal  \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityForUser(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LegalEntityItem>>;\n    /**\n     * Legal Entity for current user - &#x60;GET&#x60;.\n     * # Legal Entity for current user - &#x60;GET&#x60;    Initial call to retrieve a Legal Entity (customer) for current user from the backbase platform.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetLegalEntityForCurrentUserRoute  * Route Id: GetLegalEntityForCurrentUser  * Route source endpoint: direct:business.legalentities.GetLegalEntityForCurrentUser  * Route destination endpoint: direct:getLegalEntityForCurrentUserRequestedInternal  \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityForUser(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LegalEntityItem>(`${this.configuration.basePath}/client-api/v2/legalentities/me`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLegalEntityForUserUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/legalentities/me`;\n    }\n\n    /**\n     * Master service agreement for Legal Entity - &#x60;GET&#x60;.\n     * # Master service agreement for Legal Entity - &#x60;GET&#x60;    Retrieve master service agreement for Legal Entity.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetMasterServiceAgreementByLegalEntityIdRoute  * Route Id: GetMasterServiceAgreementByLegalEntityId  * Route source endpoint: direct:business.legalentities.GetMasterServiceAgreementByLegalEntityId  * Route destination endpoint: direct:getMasterServiceAgreementByLegalEntityIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMasterServiceAgreement(requestParameters: GetMasterServiceAgreementRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetServiceAgreement>;\n    /**\n     * Master service agreement for Legal Entity - &#x60;GET&#x60;.\n     * # Master service agreement for Legal Entity - &#x60;GET&#x60;    Retrieve master service agreement for Legal Entity.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetMasterServiceAgreementByLegalEntityIdRoute  * Route Id: GetMasterServiceAgreementByLegalEntityId  * Route source endpoint: direct:business.legalentities.GetMasterServiceAgreementByLegalEntityId  * Route destination endpoint: direct:getMasterServiceAgreementByLegalEntityIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMasterServiceAgreement(requestParameters: GetMasterServiceAgreementRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetServiceAgreement>>;\n    /**\n     * Master service agreement for Legal Entity - &#x60;GET&#x60;.\n     * # Master service agreement for Legal Entity - &#x60;GET&#x60;    Retrieve master service agreement for Legal Entity.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetMasterServiceAgreementByLegalEntityIdRoute  * Route Id: GetMasterServiceAgreementByLegalEntityId  * Route source endpoint: direct:business.legalentities.GetMasterServiceAgreementByLegalEntityId  * Route destination endpoint: direct:getMasterServiceAgreementByLegalEntityIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMasterServiceAgreement(requestParameters: GetMasterServiceAgreementRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetServiceAgreement>>;\n    /**\n     * Master service agreement for Legal Entity - &#x60;GET&#x60;.\n     * # Master service agreement for Legal Entity - &#x60;GET&#x60;    Retrieve master service agreement for Legal Entity.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.legalentity.routes.GetMasterServiceAgreementByLegalEntityIdRoute  * Route Id: GetMasterServiceAgreementByLegalEntityId  * Route source endpoint: direct:business.legalentities.GetMasterServiceAgreementByLegalEntityId  * Route destination endpoint: direct:getMasterServiceAgreementByLegalEntityIdRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMasterServiceAgreement(requestParameters: GetMasterServiceAgreementRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _legalEntityId = requestParameters[\"legalEntityId\"];\n        if (_legalEntityId === null || _legalEntityId === undefined) {\n            throw new Error('Required parameter legalEntityId was null or undefined when calling getMasterServiceAgreement.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetServiceAgreement>(`${this.configuration.basePath}/client-api/v2/legalentities/${encodeURIComponent(String(_legalEntityId))}/serviceagreements/master`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMasterServiceAgreementUrl(requestParameters: GetMasterServiceAgreementRequestParams): string {\n        const _legalEntityId = requestParameters[\"legalEntityId\"];\n        if (_legalEntityId === null || _legalEntityId === undefined) {\n            throw new Error('Required parameter legalEntityId was null or undefined when calling getMasterServiceAgreement.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/legalentities/${encodeURIComponent(String(_legalEntityId))}/serviceagreements/master`;\n    }\n\n    /**\n     * Legal Entities Segmentation - &#x60;GET&#x60;.\n     * # Legal Entities Segmentation - &#x60;GET&#x60;    List customers that user has access to.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.SegmentationLegalEntitySearchFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSegmentation(requestParameters: GetSegmentationRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LegalEntityItem>>;\n    /**\n     * Legal Entities Segmentation - &#x60;GET&#x60;.\n     * # Legal Entities Segmentation - &#x60;GET&#x60;    List customers that user has access to.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.SegmentationLegalEntitySearchFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSegmentation(requestParameters: GetSegmentationRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LegalEntityItem>>>;\n    /**\n     * Legal Entities Segmentation - &#x60;GET&#x60;.\n     * # Legal Entities Segmentation - &#x60;GET&#x60;    List customers that user has access to.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.SegmentationLegalEntitySearchFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSegmentation(requestParameters: GetSegmentationRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LegalEntityItem>>>;\n    /**\n     * Legal Entities Segmentation - &#x60;GET&#x60;.\n     * # Legal Entities Segmentation - &#x60;GET&#x60;    List customers that user has access to.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.SegmentationLegalEntitySearchFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSegmentation(requestParameters: GetSegmentationRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _businessFunction = requestParameters[\"businessFunction\"];\n        if (_businessFunction === null || _businessFunction === undefined) {\n            throw new Error('Required parameter businessFunction was null or undefined when calling getSegmentation.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _privilege = requestParameters[\"privilege\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_businessFunction !== undefined && _businessFunction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_businessFunction, 'businessFunction');\n        }\n        if (_privilege !== undefined && _privilege !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilege, 'privilege');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<LegalEntityItem>>(`${this.configuration.basePath}/client-api/v2/legalentities/segmentation`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getSegmentationUrl(requestParameters: GetSegmentationRequestParams): string {\n        const _businessFunction = requestParameters[\"businessFunction\"];\n        if (_businessFunction === null || _businessFunction === undefined) {\n            throw new Error('Required parameter businessFunction was null or undefined when calling getSegmentation.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _privilege = requestParameters[\"privilege\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_businessFunction !== undefined && _businessFunction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_businessFunction, 'businessFunction');\n        }\n        if (_privilege !== undefined && _privilege !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilege, 'privilege');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/legalentities/segmentation${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Create new legal entity - &#x60;POST&#x60;.\n     * # Create new legal entity - &#x60;POST&#x60;    Create new legal entity.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalEntityFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLegalEntities(requestParameters: PostLegalEntitiesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LegalEntityItemId>;\n    /**\n     * Create new legal entity - &#x60;POST&#x60;.\n     * # Create new legal entity - &#x60;POST&#x60;    Create new legal entity.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalEntityFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLegalEntities(requestParameters: PostLegalEntitiesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LegalEntityItemId>>;\n    /**\n     * Create new legal entity - &#x60;POST&#x60;.\n     * # Create new legal entity - &#x60;POST&#x60;    Create new legal entity.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalEntityFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLegalEntities(requestParameters: PostLegalEntitiesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LegalEntityItemId>>;\n    /**\n     * Create new legal entity - &#x60;POST&#x60;.\n     * # Create new legal entity - &#x60;POST&#x60;    Create new legal entity.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalEntityFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLegalEntities(requestParameters: PostLegalEntitiesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _legalEntityCreateItem = requestParameters[\"legalEntityCreateItem\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<LegalEntityItemId>(`${this.configuration.basePath}/client-api/v2/legalentities`,\n            _legalEntityCreateItem,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postLegalEntitiesUrl(requestParameters: PostLegalEntitiesRequestParams): string {\n        const _legalEntityCreateItem = requestParameters[\"legalEntityCreateItem\"];\n        return `${this.configuration.basePath}/client-api/v2/legalentities`;\n    }\n\n    /**\n     * Create new legal entity and assign to service agreement - &#x60;POST&#x60;.\n     * # Create new legal entity and assign to service agreement - &#x60;POST&#x60;    Create new legal entity and assign the legal entity to either an existing or new service agreement.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalEntityAsParticipantFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLegalEntitiesAsParticipant(requestParameters: PostLegalEntitiesAsParticipantRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LegalEntityAsParticipantItemId>;\n    /**\n     * Create new legal entity and assign to service agreement - &#x60;POST&#x60;.\n     * # Create new legal entity and assign to service agreement - &#x60;POST&#x60;    Create new legal entity and assign the legal entity to either an existing or new service agreement.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalEntityAsParticipantFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLegalEntitiesAsParticipant(requestParameters: PostLegalEntitiesAsParticipantRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LegalEntityAsParticipantItemId>>;\n    /**\n     * Create new legal entity and assign to service agreement - &#x60;POST&#x60;.\n     * # Create new legal entity and assign to service agreement - &#x60;POST&#x60;    Create new legal entity and assign the legal entity to either an existing or new service agreement.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalEntityAsParticipantFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLegalEntitiesAsParticipant(requestParameters: PostLegalEntitiesAsParticipantRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LegalEntityAsParticipantItemId>>;\n    /**\n     * Create new legal entity and assign to service agreement - &#x60;POST&#x60;.\n     * # Create new legal entity and assign to service agreement - &#x60;POST&#x60;    Create new legal entity and assign the legal entity to either an existing or new service agreement.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.CreateLegalEntityAsParticipantFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLegalEntitiesAsParticipant(requestParameters: PostLegalEntitiesAsParticipantRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _legalEntityAsParticipantCreateItem = requestParameters[\"legalEntityAsParticipantCreateItem\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<LegalEntityAsParticipantItemId>(`${this.configuration.basePath}/client-api/v2/legalentities/as-participant`,\n            _legalEntityAsParticipantCreateItem,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postLegalEntitiesAsParticipantUrl(requestParameters: PostLegalEntitiesAsParticipantRequestParams): string {\n        const _legalEntityAsParticipantCreateItem = requestParameters[\"legalEntityAsParticipantCreateItem\"];\n        return `${this.configuration.basePath}/client-api/v2/legalentities/as-participant`;\n    }\n\n    /**\n     * Sub Legal Entities list - &#x60;POST&#x60;.\n     * # Sub Legal Entities list - &#x60;POST&#x60;    Initial call to retrieve the list of sub legal entities (customers) from the backbase platform by excluding ids passed in the body of the request.  If no parentEntityId passed as query parameter then will return sub legal entities from the context user.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.GetSubLegalEntitlesFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubEntities(requestParameters: PostSubEntitiesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LegalEntityItemBase>>;\n    /**\n     * Sub Legal Entities list - &#x60;POST&#x60;.\n     * # Sub Legal Entities list - &#x60;POST&#x60;    Initial call to retrieve the list of sub legal entities (customers) from the backbase platform by excluding ids passed in the body of the request.  If no parentEntityId passed as query parameter then will return sub legal entities from the context user.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.GetSubLegalEntitlesFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubEntities(requestParameters: PostSubEntitiesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LegalEntityItemBase>>>;\n    /**\n     * Sub Legal Entities list - &#x60;POST&#x60;.\n     * # Sub Legal Entities list - &#x60;POST&#x60;    Initial call to retrieve the list of sub legal entities (customers) from the backbase platform by excluding ids passed in the body of the request.  If no parentEntityId passed as query parameter then will return sub legal entities from the context user.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.GetSubLegalEntitlesFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubEntities(requestParameters: PostSubEntitiesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LegalEntityItemBase>>>;\n    /**\n     * Sub Legal Entities list - &#x60;POST&#x60;.\n     * # Sub Legal Entities list - &#x60;POST&#x60;    Initial call to retrieve the list of sub legal entities (customers) from the backbase platform by excluding ids passed in the body of the request.  If no parentEntityId passed as query parameter then will return sub legal entities from the context user.    ### Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.legalentity.business.flows.GetSubLegalEntitlesFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubEntities(requestParameters: PostSubEntitiesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _searchSubEntitiesParameters = requestParameters[\"searchSubEntitiesParameters\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Array<LegalEntityItemBase>>(`${this.configuration.basePath}/client-api/v2/legalentities/sub-entities`,\n            _searchSubEntitiesParameters,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postSubEntitiesUrl(requestParameters: PostSubEntitiesRequestParams): string {\n        const _searchSubEntitiesParameters = requestParameters[\"searchSubEntitiesParameters\"];\n        return `${this.configuration.basePath}/client-api/v2/legalentities/sub-entities`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities URL pattern\n*/\nexport const LegalEntitiesHttpServiceGetLegalEntitiesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"Bank\",\n  \"type\" : \"BANK\",\n  \"isParent\" : true\n}, {\n  \"id\" : \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"parentId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}, {\n  \"id\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"parentId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : true\n}, {\n  \"id\" : \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n  \"externalId\" : \"Backbase Amsterdam\",\n  \"name\" : \"Backbase Amsterdam\",\n  \"parentId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"parentId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities/external/{externalId} URL pattern\n*/\nexport const LegalEntitiesHttpServiceGetLegalEntityByExternalIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities/external/{externalId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"1\",\n  \"externalId\" : \"ext1\",\n  \"type\" : \"CUSTOMER\",\n  \"name\" : \"Endava\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities/{legalEntityId} URL pattern\n*/\nexport const LegalEntitiesHttpServiceGetLegalEntityByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities/{legalEntityId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"e1d55a46-656a-491b-b6e0-443ff09bbe52\",\n  \"externalId\" : \"ext1\",\n  \"name\" : \"Endava\",\n  \"parentId\" : \"e1d55a46-656a-491b-b6e0-443ff09bbe52\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities/external-data URL pattern\n*/\nexport const LegalEntitiesHttpServiceGetLegalEntityExternalDataMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities/external-data\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"Bank\",\n  \"type\" : \"BANK\"\n}, {\n  \"id\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"type\" : \"CUSTOMER\"\n}, {\n  \"externalId\" : \"Backbase Amsterdam\",\n  \"name\" : \"Backbase Amsterdam\"\n}, {\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities/me URL pattern\n*/\nexport const LegalEntitiesHttpServiceGetLegalEntityForUserMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities/me\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"e1d55a46-656a-491b-b6e0-443ff09bbe52\",\n  \"externalId\" : \"ext1\",\n  \"name\" : \"Endava\",\n  \"parentId\" : \"e1d55a46-656a-491b-b6e0-443ff09bbe52\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities/{legalEntityId}/serviceagreements/master URL pattern\n*/\nexport const LegalEntitiesHttpServiceGetMasterServiceAgreementMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities/{legalEntityId}/serviceagreements/master\",\n        method: \"GET\",\n        responses: [\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities/segmentation URL pattern\n*/\nexport const LegalEntitiesHttpServiceGetSegmentationMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities/segmentation\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"Bank\",\n  \"type\" : \"BANK\",\n  \"isParent\" : true\n}, {\n  \"id\" : \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"parentId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}, {\n  \"id\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"parentId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : true\n}, {\n  \"id\" : \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n  \"externalId\" : \"Backbase Amsterdam\",\n  \"name\" : \"Backbase Amsterdam\",\n  \"parentId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"parentId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities URL pattern\n*/\nexport const LegalEntitiesHttpServicePostLegalEntitiesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities/as-participant URL pattern\n*/\nexport const LegalEntitiesHttpServicePostLegalEntitiesAsParticipantMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities/as-participant\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"legalEntityId\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"serviceAgreementId\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/legalentities/sub-entities URL pattern\n*/\nexport const LegalEntitiesHttpServicePostSubEntitiesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/legalentities/sub-entities\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"Bank\",\n  \"type\" : \"BANK\"\n}, {\n  \"id\" : \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"type\" : \"CUSTOMER\"\n}, {\n  \"id\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"type\" : \"CUSTOMER\"\n}, {\n  \"id\" : \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n  \"externalId\" : \"Backbase Amsterdam\",\n  \"name\" : \"Backbase Amsterdam\",\n  \"type\" : \"CUSTOMER\"\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"type\" : \"CUSTOMER\"\n} ]\n                },\n    ]\n}]);\n\nexport const LegalEntitiesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"Bank\",\n  \"type\" : \"BANK\",\n  \"isParent\" : true\n}, {\n  \"id\" : \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"parentId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}, {\n  \"id\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"parentId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : true\n}, {\n  \"id\" : \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n  \"externalId\" : \"Backbase Amsterdam\",\n  \"name\" : \"Backbase Amsterdam\",\n  \"parentId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"parentId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities/external/{externalId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"1\",\n  \"externalId\" : \"ext1\",\n  \"type\" : \"CUSTOMER\",\n  \"name\" : \"Endava\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities/{legalEntityId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"e1d55a46-656a-491b-b6e0-443ff09bbe52\",\n  \"externalId\" : \"ext1\",\n  \"name\" : \"Endava\",\n  \"parentId\" : \"e1d55a46-656a-491b-b6e0-443ff09bbe52\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities/external-data\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"Bank\",\n  \"type\" : \"BANK\"\n}, {\n  \"id\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"type\" : \"CUSTOMER\"\n}, {\n  \"externalId\" : \"Backbase Amsterdam\",\n  \"name\" : \"Backbase Amsterdam\"\n}, {\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\"\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities/me\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"e1d55a46-656a-491b-b6e0-443ff09bbe52\",\n  \"externalId\" : \"ext1\",\n  \"name\" : \"Endava\",\n  \"parentId\" : \"e1d55a46-656a-491b-b6e0-443ff09bbe52\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities/{legalEntityId}/serviceagreements/master\",\n        method: \"GET\",\n        responses: [\n\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities/segmentation\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"Bank\",\n  \"type\" : \"BANK\",\n  \"isParent\" : true\n}, {\n  \"id\" : \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"parentId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}, {\n  \"id\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"parentId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : true\n}, {\n  \"id\" : \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n  \"externalId\" : \"Backbase Amsterdam\",\n  \"name\" : \"Backbase Amsterdam\",\n  \"parentId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"parentId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"type\" : \"CUSTOMER\",\n  \"isParent\" : false\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities/as-participant\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"legalEntityId\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"serviceAgreementId\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/legalentities/sub-entities\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"Bank\",\n  \"type\" : \"BANK\"\n}, {\n  \"id\" : \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"type\" : \"CUSTOMER\"\n}, {\n  \"id\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"type\" : \"CUSTOMER\"\n}, {\n  \"id\" : \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n  \"externalId\" : \"Backbase Amsterdam\",\n  \"name\" : \"Backbase Amsterdam\",\n  \"type\" : \"CUSTOMER\"\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"type\" : \"CUSTOMER\"\n} ]\n            },\n\n\n    ]\n},\n]\n);\n\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { IdItem } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { ServiceAgreementItem } from '../model/models';\nimport { ServiceAgreementPost } from '../model/models';\nimport { ServiceAgreementStatePut } from '../model/models';\nimport { ServiceAgreementUsersGetResponseBody } from '../model/models';\nimport { UnexposedUsersGetResponseBody } from '../model/models';\nimport { UpdateAdmins } from '../model/models';\nimport { UsersForServiceAgreement } from '../model/models';\n\nimport { ACCESS_CONTROL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AccessControlConfiguration }                                     from '../configuration';\n\n\nexport interface GetServiceAgreementRequestParams {\n    /** Legal entity ID that created the service agreement */\n    [\"creatorId\"]: string;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n    /** The search term used to search. */\n    [\"query\"]?: string;\n}\n\nexport interface GetServiceAgreementAdminsRequestParams {\n    /** No description available */\n    [\"serviceAgreementId\"]: string;\n}\n\nexport interface GetServiceAgreementItemRequestParams {\n    /** Servicre Agreement ID */\n    [\"serviceAgreementId\"]: string;\n}\n\nexport interface GetServiceAgreementUsersRequestParams {\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** The search term used to search. */\n    [\"query\"]?: string;\n}\n\nexport interface GetUnexposedUsersRequestParams {\n    /** The search term used to search. */\n    [\"query\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface PostServiceAgreementRequestParams {\n    /** # Create Service Agreement - &#x60;POST&#x60;    Creates a new Service Agreement.    ###Extendibility    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddServiceAgreementRoute  * Route Id: AddServiceAgreementRoute  * Route source endpoint: direct:business.addServiceAgreement  * Route destination endpoint: direct:AddServiceAgreementRequestedInternal */\n    [\"serviceAgreementPost\"]?: ServiceAgreementPost;\n}\n\nexport interface PostUsersAddRequestParams {\n    /** # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal */\n    [\"usersForServiceAgreement\"]?: UsersForServiceAgreement;\n}\n\nexport interface PostUsersRemoveRequestParams {\n    /** # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal */\n    [\"usersForServiceAgreement\"]?: UsersForServiceAgreement;\n}\n\nexport interface PutAdminsRequestParams {\n    /** Servicre Agreement ID */\n    [\"id\"]: string;\n    /** # Add admins in Service Agreement - &#x60;PUT&#x60;    Adds Admins to a given Service Agreement, per Legal Entity participant.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateServiceAgreementAdminsRoute  * Route Id: UpdateServiceAgreementAdminsRoute  * Route source endpoint: direct:business.updateServiceAgreementAdmins  * Route destination endpoint: direct:updateServiceAgreementAdminsRequestedInternal */\n    [\"updateAdmins\"]?: UpdateAdmins;\n}\n\nexport interface PutServiceAgreementStateRequestParams {\n    /** No description available */\n    [\"serviceAgreementId\"]: string;\n    /** # Update Service Agreement State - &#x60;PUT&#x60;    Updates status for a specific service agreement.   */\n    [\"serviceAgreementStatePut\"]?: ServiceAgreementStatePut;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceAgreementHttpService {\n\n    protected basePath = '/access-control';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AccessControlConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACCESS_CONTROL_BASE_PATH) basePath: string, @Optional() configuration: AccessControlConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * List Service Agreements - &#x60;GET&#x60;.\n     * # List Service Agreements - &#x60;GET&#x60;    Provides a list of all service agreements that have been created by given Legal Entity (creator).    ###Extendibility    Extendable using Apache Camel:    * Route Class: ListSARoute  * Route Id: ListSARoutId  * Route source endpoint: Business_LISTSA  * Route destination endpoint: DEFAULT_LIST_SA\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreement(requestParameters: GetServiceAgreementRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ServiceAgreementItem>>;\n    /**\n     * List Service Agreements - &#x60;GET&#x60;.\n     * # List Service Agreements - &#x60;GET&#x60;    Provides a list of all service agreements that have been created by given Legal Entity (creator).    ###Extendibility    Extendable using Apache Camel:    * Route Class: ListSARoute  * Route Id: ListSARoutId  * Route source endpoint: Business_LISTSA  * Route destination endpoint: DEFAULT_LIST_SA\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreement(requestParameters: GetServiceAgreementRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ServiceAgreementItem>>>;\n    /**\n     * List Service Agreements - &#x60;GET&#x60;.\n     * # List Service Agreements - &#x60;GET&#x60;    Provides a list of all service agreements that have been created by given Legal Entity (creator).    ###Extendibility    Extendable using Apache Camel:    * Route Class: ListSARoute  * Route Id: ListSARoutId  * Route source endpoint: Business_LISTSA  * Route destination endpoint: DEFAULT_LIST_SA\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreement(requestParameters: GetServiceAgreementRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ServiceAgreementItem>>>;\n    /**\n     * List Service Agreements - &#x60;GET&#x60;.\n     * # List Service Agreements - &#x60;GET&#x60;    Provides a list of all service agreements that have been created by given Legal Entity (creator).    ###Extendibility    Extendable using Apache Camel:    * Route Class: ListSARoute  * Route Id: ListSARoutId  * Route source endpoint: Business_LISTSA  * Route destination endpoint: DEFAULT_LIST_SA\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreement(requestParameters: GetServiceAgreementRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _creatorId = requestParameters[\"creatorId\"];\n        if (_creatorId === null || _creatorId === undefined) {\n            throw new Error('Required parameter creatorId was null or undefined when calling getServiceAgreement.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _query = requestParameters[\"query\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_creatorId !== undefined && _creatorId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_creatorId, 'creatorId');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ServiceAgreementItem>>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getServiceAgreementUrl(requestParameters: GetServiceAgreementRequestParams): string {\n        const _creatorId = requestParameters[\"creatorId\"];\n        if (_creatorId === null || _creatorId === undefined) {\n            throw new Error('Required parameter creatorId was null or undefined when calling getServiceAgreement.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _query = requestParameters[\"query\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_creatorId !== undefined && _creatorId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_creatorId, 'creatorId');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve Service Agreement admins - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement admins - &#x60;GET&#x60;    Retrieves Users that are admins in Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListAdminsForServiceAgreementRoute  * Route Id: ListAdminsForServiceAgreementRoute  * Route source endpoint: direct:business.listAdminsForServiceAgreement  * Route destination endpoint: direct:listAdminsForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementAdmins(requestParameters: GetServiceAgreementAdminsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ServiceAgreementUsersGetResponseBody>>;\n    /**\n     * Retrieve Service Agreement admins - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement admins - &#x60;GET&#x60;    Retrieves Users that are admins in Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListAdminsForServiceAgreementRoute  * Route Id: ListAdminsForServiceAgreementRoute  * Route source endpoint: direct:business.listAdminsForServiceAgreement  * Route destination endpoint: direct:listAdminsForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementAdmins(requestParameters: GetServiceAgreementAdminsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ServiceAgreementUsersGetResponseBody>>>;\n    /**\n     * Retrieve Service Agreement admins - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement admins - &#x60;GET&#x60;    Retrieves Users that are admins in Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListAdminsForServiceAgreementRoute  * Route Id: ListAdminsForServiceAgreementRoute  * Route source endpoint: direct:business.listAdminsForServiceAgreement  * Route destination endpoint: direct:listAdminsForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementAdmins(requestParameters: GetServiceAgreementAdminsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ServiceAgreementUsersGetResponseBody>>>;\n    /**\n     * Retrieve Service Agreement admins - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement admins - &#x60;GET&#x60;    Retrieves Users that are admins in Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListAdminsForServiceAgreementRoute  * Route Id: ListAdminsForServiceAgreementRoute  * Route source endpoint: direct:business.listAdminsForServiceAgreement  * Route destination endpoint: direct:listAdminsForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementAdmins(requestParameters: GetServiceAgreementAdminsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getServiceAgreementAdmins.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ServiceAgreementUsersGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/${encodeURIComponent(String(_serviceAgreementId))}/admins`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getServiceAgreementAdminsUrl(requestParameters: GetServiceAgreementAdminsRequestParams): string {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getServiceAgreementAdmins.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/${encodeURIComponent(String(_serviceAgreementId))}/admins`;\n    }\n\n    /**\n     * Retrieve Service Agreement details - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement details - &#x60;GET&#x60;    Retrieves Service Agreement details by given ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementRoute  * Route Id: GetServiceAgreementRoute  * Route source endpoint: direct:business.getServiceAgreementById  * Route destination endpoint: direct:getServiceAgreementByIdRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementContext(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ServiceAgreementItem>;\n    /**\n     * Retrieve Service Agreement details - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement details - &#x60;GET&#x60;    Retrieves Service Agreement details by given ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementRoute  * Route Id: GetServiceAgreementRoute  * Route source endpoint: direct:business.getServiceAgreementById  * Route destination endpoint: direct:getServiceAgreementByIdRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementContext(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ServiceAgreementItem>>;\n    /**\n     * Retrieve Service Agreement details - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement details - &#x60;GET&#x60;    Retrieves Service Agreement details by given ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementRoute  * Route Id: GetServiceAgreementRoute  * Route source endpoint: direct:business.getServiceAgreementById  * Route destination endpoint: direct:getServiceAgreementByIdRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementContext(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ServiceAgreementItem>>;\n    /**\n     * Retrieve Service Agreement details - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement details - &#x60;GET&#x60;    Retrieves Service Agreement details by given ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementRoute  * Route Id: GetServiceAgreementRoute  * Route source endpoint: direct:business.getServiceAgreementById  * Route destination endpoint: direct:getServiceAgreementByIdRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementContext(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ServiceAgreementItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getServiceAgreementContextUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context`;\n    }\n\n    /**\n     * Retrieve Service Agreement details - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement details - &#x60;GET&#x60;    Retrieves Service Agreement details by given ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementRoute  * Route Id: GetServiceAgreementRoute  * Route source endpoint: direct:business.getServiceAgreementById  * Route destination endpoint: direct:getServiceAgreementByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementItem(requestParameters: GetServiceAgreementItemRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ServiceAgreementItem>;\n    /**\n     * Retrieve Service Agreement details - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement details - &#x60;GET&#x60;    Retrieves Service Agreement details by given ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementRoute  * Route Id: GetServiceAgreementRoute  * Route source endpoint: direct:business.getServiceAgreementById  * Route destination endpoint: direct:getServiceAgreementByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementItem(requestParameters: GetServiceAgreementItemRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ServiceAgreementItem>>;\n    /**\n     * Retrieve Service Agreement details - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement details - &#x60;GET&#x60;    Retrieves Service Agreement details by given ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementRoute  * Route Id: GetServiceAgreementRoute  * Route source endpoint: direct:business.getServiceAgreementById  * Route destination endpoint: direct:getServiceAgreementByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementItem(requestParameters: GetServiceAgreementItemRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ServiceAgreementItem>>;\n    /**\n     * Retrieve Service Agreement details - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement details - &#x60;GET&#x60;    Retrieves Service Agreement details by given ID.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementRoute  * Route Id: GetServiceAgreementRoute  * Route source endpoint: direct:business.getServiceAgreementById  * Route destination endpoint: direct:getServiceAgreementByIdRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementItem(requestParameters: GetServiceAgreementItemRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getServiceAgreementItem.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ServiceAgreementItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/${encodeURIComponent(String(_serviceAgreementId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getServiceAgreementItemUrl(requestParameters: GetServiceAgreementItemRequestParams): string {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getServiceAgreementItem.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/${encodeURIComponent(String(_serviceAgreementId))}`;\n    }\n\n    /**\n     * List users in Service Agreement - &#x60;GET&#x60;.\n     * # List users in Service Agreement - &#x60;GET&#x60;    Provides a list of all users that belong to a given Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListUsersForServiceAgreementRoute  * Route Id: ListUsersForServiceAgreementRoute  * Route source endpoint: direct:business.listUsersForServiceAgreement  * Route destination endpoint: direct:listUsersForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public getServiceAgreementUsers(requestParameters: GetServiceAgreementUsersRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ServiceAgreementUsersGetResponseBody>>;\n    /**\n     * List users in Service Agreement - &#x60;GET&#x60;.\n     * # List users in Service Agreement - &#x60;GET&#x60;    Provides a list of all users that belong to a given Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListUsersForServiceAgreementRoute  * Route Id: ListUsersForServiceAgreementRoute  * Route source endpoint: direct:business.listUsersForServiceAgreement  * Route destination endpoint: direct:listUsersForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public getServiceAgreementUsers(requestParameters: GetServiceAgreementUsersRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ServiceAgreementUsersGetResponseBody>>>;\n    /**\n     * List users in Service Agreement - &#x60;GET&#x60;.\n     * # List users in Service Agreement - &#x60;GET&#x60;    Provides a list of all users that belong to a given Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListUsersForServiceAgreementRoute  * Route Id: ListUsersForServiceAgreementRoute  * Route source endpoint: direct:business.listUsersForServiceAgreement  * Route destination endpoint: direct:listUsersForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public getServiceAgreementUsers(requestParameters: GetServiceAgreementUsersRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ServiceAgreementUsersGetResponseBody>>>;\n    /**\n     * List users in Service Agreement - &#x60;GET&#x60;.\n     * # List users in Service Agreement - &#x60;GET&#x60;    Provides a list of all users that belong to a given Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListUsersForServiceAgreementRoute  * Route Id: ListUsersForServiceAgreementRoute  * Route source endpoint: direct:business.listUsersForServiceAgreement  * Route destination endpoint: direct:listUsersForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public getServiceAgreementUsers(requestParameters: GetServiceAgreementUsersRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _query = requestParameters[\"query\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ServiceAgreementUsersGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context/users`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getServiceAgreementUsersUrl(requestParameters: GetServiceAgreementUsersRequestParams): string {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _query = requestParameters[\"query\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context/users${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * List all unexposed users - &#x60;GET&#x60;.\n     * # List all unexposed users - &#x60;GET&#x60;    Provides a list of all unexposed users that belong to the participants who are sharing users in the given Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetUnexposedUsersRoute  * Route Id: GetUnexposedUsersRoute  * Route source endpoint: direct:business.getUnexposedUsers  * Route destination endpoint: direct:getUnexposedUsersRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public getUnexposedUsers(requestParameters: GetUnexposedUsersRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<UnexposedUsersGetResponseBody>>;\n    /**\n     * List all unexposed users - &#x60;GET&#x60;.\n     * # List all unexposed users - &#x60;GET&#x60;    Provides a list of all unexposed users that belong to the participants who are sharing users in the given Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetUnexposedUsersRoute  * Route Id: GetUnexposedUsersRoute  * Route source endpoint: direct:business.getUnexposedUsers  * Route destination endpoint: direct:getUnexposedUsersRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public getUnexposedUsers(requestParameters: GetUnexposedUsersRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<UnexposedUsersGetResponseBody>>>;\n    /**\n     * List all unexposed users - &#x60;GET&#x60;.\n     * # List all unexposed users - &#x60;GET&#x60;    Provides a list of all unexposed users that belong to the participants who are sharing users in the given Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetUnexposedUsersRoute  * Route Id: GetUnexposedUsersRoute  * Route source endpoint: direct:business.getUnexposedUsers  * Route destination endpoint: direct:getUnexposedUsersRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public getUnexposedUsers(requestParameters: GetUnexposedUsersRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<UnexposedUsersGetResponseBody>>>;\n    /**\n     * List all unexposed users - &#x60;GET&#x60;.\n     * # List all unexposed users - &#x60;GET&#x60;    Provides a list of all unexposed users that belong to the participants who are sharing users in the given Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetUnexposedUsersRoute  * Route Id: GetUnexposedUsersRoute  * Route source endpoint: direct:business.getUnexposedUsers  * Route destination endpoint: direct:getUnexposedUsersRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public getUnexposedUsers(requestParameters: GetUnexposedUsersRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<UnexposedUsersGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context/users/unexposed`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUnexposedUsersUrl(requestParameters: GetUnexposedUsersRequestParams): string {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context/users/unexposed${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Create Service Agreement - &#x60;POST&#x60;.\n     * # Create Service Agreement - &#x60;POST&#x60;    Creates a new Service Agreement.    ###Extendibility    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddServiceAgreementRoute  * Route Id: AddServiceAgreementRoute  * Route source endpoint: direct:business.addServiceAgreement  * Route destination endpoint: direct:AddServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postServiceAgreement(requestParameters: PostServiceAgreementRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<IdItem>;\n    /**\n     * Create Service Agreement - &#x60;POST&#x60;.\n     * # Create Service Agreement - &#x60;POST&#x60;    Creates a new Service Agreement.    ###Extendibility    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddServiceAgreementRoute  * Route Id: AddServiceAgreementRoute  * Route source endpoint: direct:business.addServiceAgreement  * Route destination endpoint: direct:AddServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postServiceAgreement(requestParameters: PostServiceAgreementRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<IdItem>>;\n    /**\n     * Create Service Agreement - &#x60;POST&#x60;.\n     * # Create Service Agreement - &#x60;POST&#x60;    Creates a new Service Agreement.    ###Extendibility    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddServiceAgreementRoute  * Route Id: AddServiceAgreementRoute  * Route source endpoint: direct:business.addServiceAgreement  * Route destination endpoint: direct:AddServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postServiceAgreement(requestParameters: PostServiceAgreementRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<IdItem>>;\n    /**\n     * Create Service Agreement - &#x60;POST&#x60;.\n     * # Create Service Agreement - &#x60;POST&#x60;    Creates a new Service Agreement.    ###Extendibility    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddServiceAgreementRoute  * Route Id: AddServiceAgreementRoute  * Route source endpoint: direct:business.addServiceAgreement  * Route destination endpoint: direct:AddServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postServiceAgreement(requestParameters: PostServiceAgreementRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _serviceAgreementPost = requestParameters[\"serviceAgreementPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<IdItem>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements`,\n            _serviceAgreementPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postServiceAgreementUrl(requestParameters: PostServiceAgreementRequestParams): string {\n        const _serviceAgreementPost = requestParameters[\"serviceAgreementPost\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements`;\n    }\n\n    /**\n     * Add Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postUsersAdd(requestParameters: PostUsersAddRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Add Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postUsersAdd(requestParameters: PostUsersAddRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Add Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postUsersAdd(requestParameters: PostUsersAddRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Add Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postUsersAdd(requestParameters: PostUsersAddRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _usersForServiceAgreement = requestParameters[\"usersForServiceAgreement\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context/users/add`,\n            _usersForServiceAgreement,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postUsersAddUrl(requestParameters: PostUsersAddRequestParams): string {\n        const _usersForServiceAgreement = requestParameters[\"usersForServiceAgreement\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context/users/add`;\n    }\n\n    /**\n     * Remove Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postUsersRemove(requestParameters: PostUsersRemoveRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Remove Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postUsersRemove(requestParameters: PostUsersRemoveRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Remove Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postUsersRemove(requestParameters: PostUsersRemoveRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Remove Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postUsersRemove(requestParameters: PostUsersRemoveRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _usersForServiceAgreement = requestParameters[\"usersForServiceAgreement\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context/users/remove`,\n            _usersForServiceAgreement,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postUsersRemoveUrl(requestParameters: PostUsersRemoveRequestParams): string {\n        const _usersForServiceAgreement = requestParameters[\"usersForServiceAgreement\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/context/users/remove`;\n    }\n\n    /**\n     * Add admins in Service Agreement - &#x60;PUT&#x60;.\n     * # Add admins in Service Agreement - &#x60;PUT&#x60;    Adds Admins to a given Service Agreement, per Legal Entity participant.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateServiceAgreementAdminsRoute  * Route Id: UpdateServiceAgreementAdminsRoute  * Route source endpoint: direct:business.updateServiceAgreementAdmins  * Route destination endpoint: direct:updateServiceAgreementAdminsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAdmins(requestParameters: PutAdminsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Add admins in Service Agreement - &#x60;PUT&#x60;.\n     * # Add admins in Service Agreement - &#x60;PUT&#x60;    Adds Admins to a given Service Agreement, per Legal Entity participant.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateServiceAgreementAdminsRoute  * Route Id: UpdateServiceAgreementAdminsRoute  * Route source endpoint: direct:business.updateServiceAgreementAdmins  * Route destination endpoint: direct:updateServiceAgreementAdminsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAdmins(requestParameters: PutAdminsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Add admins in Service Agreement - &#x60;PUT&#x60;.\n     * # Add admins in Service Agreement - &#x60;PUT&#x60;    Adds Admins to a given Service Agreement, per Legal Entity participant.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateServiceAgreementAdminsRoute  * Route Id: UpdateServiceAgreementAdminsRoute  * Route source endpoint: direct:business.updateServiceAgreementAdmins  * Route destination endpoint: direct:updateServiceAgreementAdminsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAdmins(requestParameters: PutAdminsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Add admins in Service Agreement - &#x60;PUT&#x60;.\n     * # Add admins in Service Agreement - &#x60;PUT&#x60;    Adds Admins to a given Service Agreement, per Legal Entity participant.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateServiceAgreementAdminsRoute  * Route Id: UpdateServiceAgreementAdminsRoute  * Route source endpoint: direct:business.updateServiceAgreementAdmins  * Route destination endpoint: direct:updateServiceAgreementAdminsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAdmins(requestParameters: PutAdminsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putAdmins.');\n        }\n        const _updateAdmins = requestParameters[\"updateAdmins\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/${encodeURIComponent(String(_id))}/admins`,\n            _updateAdmins,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putAdminsUrl(requestParameters: PutAdminsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putAdmins.');\n        }\n        const _updateAdmins = requestParameters[\"updateAdmins\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/${encodeURIComponent(String(_id))}/admins`;\n    }\n\n    /**\n     * Update Service Agreement State - &#x60;PUT&#x60;.\n     * # Update Service Agreement State - &#x60;PUT&#x60;    Updates status for a specific service agreement.  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putServiceAgreementState(requestParameters: PutServiceAgreementStateRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Update Service Agreement State - &#x60;PUT&#x60;.\n     * # Update Service Agreement State - &#x60;PUT&#x60;    Updates status for a specific service agreement.  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putServiceAgreementState(requestParameters: PutServiceAgreementStateRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Update Service Agreement State - &#x60;PUT&#x60;.\n     * # Update Service Agreement State - &#x60;PUT&#x60;    Updates status for a specific service agreement.  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putServiceAgreementState(requestParameters: PutServiceAgreementStateRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Update Service Agreement State - &#x60;PUT&#x60;.\n     * # Update Service Agreement State - &#x60;PUT&#x60;    Updates status for a specific service agreement.  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putServiceAgreementState(requestParameters: PutServiceAgreementStateRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling putServiceAgreementState.');\n        }\n        const _serviceAgreementStatePut = requestParameters[\"serviceAgreementStatePut\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/${encodeURIComponent(String(_serviceAgreementId))}/state`,\n            _serviceAgreementStatePut,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putServiceAgreementStateUrl(requestParameters: PutServiceAgreementStateRequestParams): string {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling putServiceAgreementState.');\n        }\n        const _serviceAgreementStatePut = requestParameters[\"serviceAgreementStatePut\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/serviceagreements/${encodeURIComponent(String(_serviceAgreementId))}/state`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements URL pattern\n*/\nexport const ServiceAgreementHttpServiceGetServiceAgreementMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"951293e6521940e3ae0608f93ff0b215\",\n  \"externalId\" : \"external-id-1\",\n  \"name\" : \"Broker deal 1\",\n  \"description\" : \"Agreement between Backbase and Apple\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96147\",\n  \"externalId\" : \"external-id-2\",\n  \"name\" : \"Broker deal 2\",\n  \"description\" : \"Agreement between Backbase and HP\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae0a1e42bbe96147\",\n  \"externalId\" : \"external-id-3\",\n  \"name\" : \"Tyler Boyd Associates\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae1a1e42bbe96147\",\n  \"externalId\" : \"external-id-4\",\n  \"name\" : \"Tyler Boyd Associates UAE\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae2a1e42bbe96147\",\n  \"externalId\" : \"external-id-5\",\n  \"name\" : \"Tyler Boyd Associates US\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae3a1e42bbe96147\",\n  \"externalId\" : \"external-id-6\",\n  \"name\" : \"Tyler Boyd Associates US Salary Services\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae4a1e42bbe96147\",\n  \"externalId\" : \"external-id-7\",\n  \"name\" : \"Tyler Boyd Associates US Training\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae5a1e42bbe96147\",\n  \"externalId\" : \"external-id-8\",\n  \"name\" : \"Tyler Boyd Associates UK\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae6a1e42bbe96147\",\n  \"externalId\" : \"external-id-9\",\n  \"name\" : \"Tyler Boyd Associates UK Sales\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae7a1e42bbe96147\",\n  \"externalId\" : \"external-id-10\",\n  \"name\" : \"Tyler Boyd Associates UK Marketing\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae9a1e42bbe96147\",\n  \"externalId\" : \"external-id-11\",\n  \"name\" : \"Broker deal 11\",\n  \"description\" : \"Agreement between Backbase and Microsoft\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a0e42bbe96147\",\n  \"externalId\" : \"external-id-12\",\n  \"name\" : \"Broker deal 12\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a2e42bbe96147\",\n  \"externalId\" : \"external-id-13\",\n  \"name\" : \"Tyler Boyd Associates ROI\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a3e42bbe96147\",\n  \"externalId\" : \"external-id-14\",\n  \"name\" : \"Tyler Boyd Associates ROI Services\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a4e42bbe96147\",\n  \"externalId\" : \"external-id-15\",\n  \"name\" : \"Tyler Boyd Associates ROI Finance\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a5e42bbe96147\",\n  \"externalId\" : \"external-id-16\",\n  \"name\" : \"Tyler Boyd Associates ROI HR\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a6e42bbe96147\",\n  \"externalId\" : \"external-id-17\",\n  \"name\" : \"Tyler Boyd Associates EU\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a7e42bbe96147\",\n  \"externalId\" : \"external-id-18\",\n  \"name\" : \"Tyler Boyd Associates EU North\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a8e42bbe96147\",\n  \"externalId\" : \"external-id-19\",\n  \"name\" : \"Tyler Boyd Associates EU East\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a9e02bbe96147\",\n  \"externalId\" : \"external-id-20\",\n  \"name\" : \"Tyler Boyd Associates EU South\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e12bbe96147\",\n  \"externalId\" : \"external-id-21\",\n  \"name\" : \"Broker deal 21\",\n  \"description\" : \"Agreement between Backbase and Google\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e22bbe96147\",\n  \"externalId\" : \"external-id-22\",\n  \"name\" : \"Broker deal 22\",\n  \"description\" : \"Agreement between Backbase and Dell\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e32bbe96147\",\n  \"externalId\" : \"external-id-23\",\n  \"name\" : \"Tyler Boyd Associates EU West\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e52bbe96147\",\n  \"externalId\" : \"external-id-24\",\n  \"name\" : \"Tyler Boyd Associates EU Central\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e62bbe96147\",\n  \"externalId\" : \"external-id-25\",\n  \"name\" : \"Tyler Boyd Associates CAN\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e72bbe96147\",\n  \"externalId\" : \"external-id-26\",\n  \"name\" : \"Tyler Boyd Associates CAN Finance\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e82bbe96147\",\n  \"externalId\" : \"external-id-27\",\n  \"name\" : \"Tyler Boyd Associates BRA\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e92bbe96147\",\n  \"externalId\" : \"external-id-28\",\n  \"name\" : \"Tyler Boyd Associates URU\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e41bbe96147\",\n  \"externalId\" : \"external-id-29\",\n  \"name\" : \"Tyler Boyd Associates ARG\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e43bbe96147\",\n  \"externalId\" : \"external-id-30\",\n  \"name\" : \"Tyler Boyd Associates AUS\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements/{serviceAgreementId}/admins URL pattern\n*/\nexport const ServiceAgreementHttpServiceGetServiceAgreementAdminsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/{serviceAgreementId}/admins\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"David\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements/context URL pattern\n*/\nexport const ServiceAgreementHttpServiceGetServiceAgreementContextMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"externalId\" : \"external-id-1\",\n  \"name\" : \"Broker deal 1\",\n  \"description\" : \"Agreement between Backbase and Apple\",\n  \"creatorLegalEntity\" : \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"validFromDate\" : \"2017-03-31\",\n  \"validFromTime\" : \"08:30:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"17:30:00\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements/{serviceAgreementId} URL pattern\n*/\nexport const ServiceAgreementHttpServiceGetServiceAgreementItemMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/{serviceAgreementId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"externalId\" : \"external-id-1\",\n  \"name\" : \"Broker deal 1\",\n  \"description\" : \"Agreement between Backbase and Apple\",\n  \"creatorLegalEntity\" : \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"validFromDate\" : \"2017-03-31\",\n  \"validFromTime\" : \"08:30:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"17:30:00\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements/context/users URL pattern\n*/\nexport const ServiceAgreementHttpServiceGetServiceAgreementUsersMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context/users\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"David\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements/context/users/unexposed URL pattern\n*/\nexport const ServiceAgreementHttpServiceGetUnexposedUsersMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context/users/unexposed\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"fullName\" : \"David\",\n  \"legalEntityId\" : \"f63f3fc550794eed84bf848dbbba9bbd\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityId\" : \"f63f3fc550794eed84bf848dbbba9bbd\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityId\" : \"951293e6521940e3ae0608f93ff0b215\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements URL pattern\n*/\nexport const ServiceAgreementHttpServicePostServiceAgreementMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n                },\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements/context/users/add URL pattern\n*/\nexport const ServiceAgreementHttpServicePostUsersAddMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context/users/add\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements/context/users/remove URL pattern\n*/\nexport const ServiceAgreementHttpServicePostUsersRemoveMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context/users/remove\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements/{id}/admins URL pattern\n*/\nexport const ServiceAgreementHttpServicePutAdminsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/{id}/admins\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/serviceagreements/{serviceAgreementId}/state URL pattern\n*/\nexport const ServiceAgreementHttpServicePutServiceAgreementStateMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/{serviceAgreementId}/state\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n\nexport const ServiceAgreementHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"951293e6521940e3ae0608f93ff0b215\",\n  \"externalId\" : \"external-id-1\",\n  \"name\" : \"Broker deal 1\",\n  \"description\" : \"Agreement between Backbase and Apple\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96147\",\n  \"externalId\" : \"external-id-2\",\n  \"name\" : \"Broker deal 2\",\n  \"description\" : \"Agreement between Backbase and HP\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae0a1e42bbe96147\",\n  \"externalId\" : \"external-id-3\",\n  \"name\" : \"Tyler Boyd Associates\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae1a1e42bbe96147\",\n  \"externalId\" : \"external-id-4\",\n  \"name\" : \"Tyler Boyd Associates UAE\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae2a1e42bbe96147\",\n  \"externalId\" : \"external-id-5\",\n  \"name\" : \"Tyler Boyd Associates US\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae3a1e42bbe96147\",\n  \"externalId\" : \"external-id-6\",\n  \"name\" : \"Tyler Boyd Associates US Salary Services\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae4a1e42bbe96147\",\n  \"externalId\" : \"external-id-7\",\n  \"name\" : \"Tyler Boyd Associates US Training\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae5a1e42bbe96147\",\n  \"externalId\" : \"external-id-8\",\n  \"name\" : \"Tyler Boyd Associates UK\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae6a1e42bbe96147\",\n  \"externalId\" : \"external-id-9\",\n  \"name\" : \"Tyler Boyd Associates UK Sales\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae7a1e42bbe96147\",\n  \"externalId\" : \"external-id-10\",\n  \"name\" : \"Tyler Boyd Associates UK Marketing\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae9a1e42bbe96147\",\n  \"externalId\" : \"external-id-11\",\n  \"name\" : \"Broker deal 11\",\n  \"description\" : \"Agreement between Backbase and Microsoft\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a0e42bbe96147\",\n  \"externalId\" : \"external-id-12\",\n  \"name\" : \"Broker deal 12\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a2e42bbe96147\",\n  \"externalId\" : \"external-id-13\",\n  \"name\" : \"Tyler Boyd Associates ROI\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a3e42bbe96147\",\n  \"externalId\" : \"external-id-14\",\n  \"name\" : \"Tyler Boyd Associates ROI Services\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a4e42bbe96147\",\n  \"externalId\" : \"external-id-15\",\n  \"name\" : \"Tyler Boyd Associates ROI Finance\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a5e42bbe96147\",\n  \"externalId\" : \"external-id-16\",\n  \"name\" : \"Tyler Boyd Associates ROI HR\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a6e42bbe96147\",\n  \"externalId\" : \"external-id-17\",\n  \"name\" : \"Tyler Boyd Associates EU\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a7e42bbe96147\",\n  \"externalId\" : \"external-id-18\",\n  \"name\" : \"Tyler Boyd Associates EU North\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a8e42bbe96147\",\n  \"externalId\" : \"external-id-19\",\n  \"name\" : \"Tyler Boyd Associates EU East\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a9e02bbe96147\",\n  \"externalId\" : \"external-id-20\",\n  \"name\" : \"Tyler Boyd Associates EU South\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e12bbe96147\",\n  \"externalId\" : \"external-id-21\",\n  \"name\" : \"Broker deal 21\",\n  \"description\" : \"Agreement between Backbase and Google\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e22bbe96147\",\n  \"externalId\" : \"external-id-22\",\n  \"name\" : \"Broker deal 22\",\n  \"description\" : \"Agreement between Backbase and Dell\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e32bbe96147\",\n  \"externalId\" : \"external-id-23\",\n  \"name\" : \"Tyler Boyd Associates EU West\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e52bbe96147\",\n  \"externalId\" : \"external-id-24\",\n  \"name\" : \"Tyler Boyd Associates EU Central\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e62bbe96147\",\n  \"externalId\" : \"external-id-25\",\n  \"name\" : \"Tyler Boyd Associates CAN\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e72bbe96147\",\n  \"externalId\" : \"external-id-26\",\n  \"name\" : \"Tyler Boyd Associates CAN Finance\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e82bbe96147\",\n  \"externalId\" : \"external-id-27\",\n  \"name\" : \"Tyler Boyd Associates BRA\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e92bbe96147\",\n  \"externalId\" : \"external-id-28\",\n  \"name\" : \"Tyler Boyd Associates URU\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e41bbe96147\",\n  \"externalId\" : \"external-id-29\",\n  \"name\" : \"Tyler Boyd Associates ARG\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e43bbe96147\",\n  \"externalId\" : \"external-id-30\",\n  \"name\" : \"Tyler Boyd Associates AUS\",\n  \"description\" : \"Description of service agreement\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\"\n} ]\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/{serviceAgreementId}/admins\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"David\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"externalId\" : \"external-id-1\",\n  \"name\" : \"Broker deal 1\",\n  \"description\" : \"Agreement between Backbase and Apple\",\n  \"creatorLegalEntity\" : \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"validFromDate\" : \"2017-03-31\",\n  \"validFromTime\" : \"08:30:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"17:30:00\"\n}\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/{serviceAgreementId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"externalId\" : \"external-id-1\",\n  \"name\" : \"Broker deal 1\",\n  \"description\" : \"Agreement between Backbase and Apple\",\n  \"creatorLegalEntity\" : \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"validFromDate\" : \"2017-03-31\",\n  \"validFromTime\" : \"08:30:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"17:30:00\"\n}\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context/users\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"David\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context/users/unexposed\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"fullName\" : \"David\",\n  \"legalEntityId\" : \"f63f3fc550794eed84bf848dbbba9bbd\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityId\" : \"f63f3fc550794eed84bf848dbbba9bbd\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityId\" : \"951293e6521940e3ae0608f93ff0b215\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n            },\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"0955e686d31e4216b3dd5d66161d536d\"\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context/users/add\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/context/users/remove\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/{id}/admins\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/serviceagreements/{serviceAgreementId}/state\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n\n    ]\n},\n]\n);\n\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { FunctionsGetResponseBody } from '../model/models';\nimport { ListOfFunctionGroupsWithDataGroups } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationApprovalPermissions } from '../model/models';\nimport { PresentationApprovalStatus } from '../model/models';\nimport { PresentationServiceAgreement } from '../model/models';\nimport { ServiceAgreementParticipantsGetResponseBody } from '../model/models';\nimport { ServiceAgreementSave } from '../model/models';\nimport { ServiceAgreementUsersGetResponseBody } from '../model/models';\nimport { UnexposedUsersGetResponseBody } from '../model/models';\nimport { UsersForServiceAgreement } from '../model/models';\n\nimport { ACCESS_CONTROL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AccessControlConfiguration }                                     from '../configuration';\n\n\nexport interface GetAssignUsersPermissionsRequestParams {\n    /** Service Agreement ID */\n    [\"id\"]: string;\n    /** User ID */\n    [\"userId\"]: string;\n}\n\nexport interface GetBusinessfunctionsRequestParams {\n    /** Service Agreement ID */\n    [\"id\"]: string;\n}\n\nexport interface GetServiceAgreementParticipantsRequestParams {\n    /** Service Agreement ID */\n    [\"id\"]: string;\n}\n\nexport interface GetServiceAgreementUsersSARequestParams {\n    /** Service Agreement ID */\n    [\"id\"]: string;\n    /** The search term used to search. */\n    [\"query\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface GetServiceAgreementsRequestParams {\n    /** Legal entity ID that created the service agreement */\n    [\"creatorId\"]?: string;\n    /** Id of the user that is exposed, regular or local admin in the service agreement. */\n    [\"userId\"]?: string;\n    /** The search term used to search. */\n    [\"query\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface GetUnexposedUsersSARequestParams {\n    /** Service Agreement ID */\n    [\"id\"]: string;\n    /** The search term used to search. */\n    [\"query\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface PostUsersAddSARequestParams {\n    /** Service Agreement ID */\n    [\"id\"]: string;\n    /** # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal */\n    [\"usersForServiceAgreement\"]?: UsersForServiceAgreement;\n}\n\nexport interface PostUsersRemoveSARequestParams {\n    /** Service Agreement ID */\n    [\"id\"]: string;\n    /** # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal */\n    [\"usersForServiceAgreement\"]?: UsersForServiceAgreement;\n}\n\nexport interface PutAssignUsersPermissionsRequestParams {\n    /** Service Agreement ID */\n    [\"id\"]: string;\n    /** User ID */\n    [\"userId\"]: string;\n    /** # Assign permissions for a users in a service agreement. - &#x60;PUT&#x60;    Updates all permission for a users in a given service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateAssignUsersPermissionsRoute  * Route Id: UpdateAssignUsersPermissionsRoute  * Route source endpoint: direct:business.assignUsersPermissions  * Route destination endpoint: direct:assignUsersPermissions */\n    [\"listOfFunctionGroupsWithDataGroups\"]?: ListOfFunctionGroupsWithDataGroups;\n}\n\nexport interface PutServiceAgreementSaveRequestParams {\n    /** Service Agreement ID */\n    [\"id\"]: string;\n    /** # Service Agreement - &#x60;PUT&#x60;    Request method PUT for updating service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.EditServiceAgreementRoute  * Route Id: EditServiceAgreementRoute  * Route source endpoint: direct:business.editServiceAgreement  * Route destination endpoint: direct:EditServiceAgreementRequestedInternal */\n    [\"serviceAgreementSave\"]?: ServiceAgreementSave;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceAgreementsHttpService {\n\n    protected basePath = '/access-control';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AccessControlConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACCESS_CONTROL_BASE_PATH) basePath: string, @Optional() configuration: AccessControlConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * List Assigned permissions for a users in a service agreement. - &#x60;GET&#x60;.\n     * # List Assigned permissions for a users in a service agreement. - &#x60;GET&#x60;    Returns user permissions and approval id for specific user and service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateAssignUsersPermissionsRoute  * Route Id: UpdateAssignUsersPermissionsRoute  * Route source endpoint: direct:business.assignUsersPermissions  * Route destination endpoint: direct:assignUsersPermissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignUsersPermissions(requestParameters: GetAssignUsersPermissionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationApprovalPermissions>;\n    /**\n     * List Assigned permissions for a users in a service agreement. - &#x60;GET&#x60;.\n     * # List Assigned permissions for a users in a service agreement. - &#x60;GET&#x60;    Returns user permissions and approval id for specific user and service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateAssignUsersPermissionsRoute  * Route Id: UpdateAssignUsersPermissionsRoute  * Route source endpoint: direct:business.assignUsersPermissions  * Route destination endpoint: direct:assignUsersPermissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignUsersPermissions(requestParameters: GetAssignUsersPermissionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationApprovalPermissions>>;\n    /**\n     * List Assigned permissions for a users in a service agreement. - &#x60;GET&#x60;.\n     * # List Assigned permissions for a users in a service agreement. - &#x60;GET&#x60;    Returns user permissions and approval id for specific user and service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateAssignUsersPermissionsRoute  * Route Id: UpdateAssignUsersPermissionsRoute  * Route source endpoint: direct:business.assignUsersPermissions  * Route destination endpoint: direct:assignUsersPermissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignUsersPermissions(requestParameters: GetAssignUsersPermissionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationApprovalPermissions>>;\n    /**\n     * List Assigned permissions for a users in a service agreement. - &#x60;GET&#x60;.\n     * # List Assigned permissions for a users in a service agreement. - &#x60;GET&#x60;    Returns user permissions and approval id for specific user and service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateAssignUsersPermissionsRoute  * Route Id: UpdateAssignUsersPermissionsRoute  * Route source endpoint: direct:business.assignUsersPermissions  * Route destination endpoint: direct:assignUsersPermissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignUsersPermissions(requestParameters: GetAssignUsersPermissionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getAssignUsersPermissions.');\n        }\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getAssignUsersPermissions.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationApprovalPermissions>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/${encodeURIComponent(String(_userId))}/permissions`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAssignUsersPermissionsUrl(requestParameters: GetAssignUsersPermissionsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getAssignUsersPermissions.');\n        }\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getAssignUsersPermissions.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/${encodeURIComponent(String(_userId))}/permissions`;\n    }\n\n    /**\n     * List Business Functions For Service Agreement - &#x60;GET&#x60;.\n     * # List Business Functions For Service Agreement - &#x60;GET&#x60;    Provides a list of all available business functions that can be used for a given Service Agreement.    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetBusinessFunctionsForServiceAgreementFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBusinessfunctions(requestParameters: GetBusinessfunctionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<FunctionsGetResponseBody>>;\n    /**\n     * List Business Functions For Service Agreement - &#x60;GET&#x60;.\n     * # List Business Functions For Service Agreement - &#x60;GET&#x60;    Provides a list of all available business functions that can be used for a given Service Agreement.    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetBusinessFunctionsForServiceAgreementFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBusinessfunctions(requestParameters: GetBusinessfunctionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<FunctionsGetResponseBody>>>;\n    /**\n     * List Business Functions For Service Agreement - &#x60;GET&#x60;.\n     * # List Business Functions For Service Agreement - &#x60;GET&#x60;    Provides a list of all available business functions that can be used for a given Service Agreement.    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetBusinessFunctionsForServiceAgreementFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBusinessfunctions(requestParameters: GetBusinessfunctionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<FunctionsGetResponseBody>>>;\n    /**\n     * List Business Functions For Service Agreement - &#x60;GET&#x60;.\n     * # List Business Functions For Service Agreement - &#x60;GET&#x60;    Provides a list of all available business functions that can be used for a given Service Agreement.    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetBusinessFunctionsForServiceAgreementFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBusinessfunctions(requestParameters: GetBusinessfunctionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBusinessfunctions.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<FunctionsGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/business-functions`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getBusinessfunctionsUrl(requestParameters: GetBusinessfunctionsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBusinessfunctions.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/business-functions`;\n    }\n\n    /**\n     * Retrieve Service Agreement participants - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement participants - &#x60;GET&#x60;    Retrieves Legal Entities that are participants in Service Agreement from the context.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementParticipantsRoute  * Route Id: GetServiceAgreementParticipantsRoute  * Route source endpoint: direct:business.getServiceAgreementParticipants  * Route destination endpoint: direct:getServiceAgreementParticipantsRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getContextServiceAgreementParticipants(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ServiceAgreementParticipantsGetResponseBody>>;\n    /**\n     * Retrieve Service Agreement participants - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement participants - &#x60;GET&#x60;    Retrieves Legal Entities that are participants in Service Agreement from the context.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementParticipantsRoute  * Route Id: GetServiceAgreementParticipantsRoute  * Route source endpoint: direct:business.getServiceAgreementParticipants  * Route destination endpoint: direct:getServiceAgreementParticipantsRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getContextServiceAgreementParticipants(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ServiceAgreementParticipantsGetResponseBody>>>;\n    /**\n     * Retrieve Service Agreement participants - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement participants - &#x60;GET&#x60;    Retrieves Legal Entities that are participants in Service Agreement from the context.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementParticipantsRoute  * Route Id: GetServiceAgreementParticipantsRoute  * Route source endpoint: direct:business.getServiceAgreementParticipants  * Route destination endpoint: direct:getServiceAgreementParticipantsRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getContextServiceAgreementParticipants(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ServiceAgreementParticipantsGetResponseBody>>>;\n    /**\n     * Retrieve Service Agreement participants - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement participants - &#x60;GET&#x60;    Retrieves Legal Entities that are participants in Service Agreement from the context.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementParticipantsRoute  * Route Id: GetServiceAgreementParticipantsRoute  * Route source endpoint: direct:business.getServiceAgreementParticipants  * Route destination endpoint: direct:getServiceAgreementParticipantsRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getContextServiceAgreementParticipants(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ServiceAgreementParticipantsGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/usercontext/participants`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getContextServiceAgreementParticipantsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/usercontext/participants`;\n    }\n\n    /**\n     * Retrieve Service Agreement participants - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement participants - &#x60;GET&#x60;    Retrieves Legal Entities that are participants in Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementParticipantsRoute  * Route Id: GetServiceAgreementParticipantsRoute  * Route source endpoint: direct:business.getServiceAgreementParticipants  * Route destination endpoint: direct:getServiceAgreementParticipantsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementParticipants(requestParameters: GetServiceAgreementParticipantsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ServiceAgreementParticipantsGetResponseBody>>;\n    /**\n     * Retrieve Service Agreement participants - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement participants - &#x60;GET&#x60;    Retrieves Legal Entities that are participants in Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementParticipantsRoute  * Route Id: GetServiceAgreementParticipantsRoute  * Route source endpoint: direct:business.getServiceAgreementParticipants  * Route destination endpoint: direct:getServiceAgreementParticipantsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementParticipants(requestParameters: GetServiceAgreementParticipantsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ServiceAgreementParticipantsGetResponseBody>>>;\n    /**\n     * Retrieve Service Agreement participants - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement participants - &#x60;GET&#x60;    Retrieves Legal Entities that are participants in Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementParticipantsRoute  * Route Id: GetServiceAgreementParticipantsRoute  * Route source endpoint: direct:business.getServiceAgreementParticipants  * Route destination endpoint: direct:getServiceAgreementParticipantsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementParticipants(requestParameters: GetServiceAgreementParticipantsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ServiceAgreementParticipantsGetResponseBody>>>;\n    /**\n     * Retrieve Service Agreement participants - &#x60;GET&#x60;.\n     * # Retrieve Service Agreement participants - &#x60;GET&#x60;    Retrieves Legal Entities that are participants in Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetServiceAgreementParticipantsRoute  * Route Id: GetServiceAgreementParticipantsRoute  * Route source endpoint: direct:business.getServiceAgreementParticipants  * Route destination endpoint: direct:getServiceAgreementParticipantsRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementParticipants(requestParameters: GetServiceAgreementParticipantsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getServiceAgreementParticipants.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ServiceAgreementParticipantsGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/participants`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getServiceAgreementParticipantsUrl(requestParameters: GetServiceAgreementParticipantsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getServiceAgreementParticipants.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/participants`;\n    }\n\n    /**\n     * List users in Service Agreement - &#x60;GET&#x60;.\n     * # List users in Service Agreement - &#x60;GET&#x60;    Provides a list of all users that belong to a given Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListUsersForServiceAgreementRoute  * Route Id: ListUsersForServiceAgreementRoute  * Route source endpoint: direct:business.listUsersForServiceAgreement  * Route destination endpoint: direct:listUsersForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementUsersSA(requestParameters: GetServiceAgreementUsersSARequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ServiceAgreementUsersGetResponseBody>>;\n    /**\n     * List users in Service Agreement - &#x60;GET&#x60;.\n     * # List users in Service Agreement - &#x60;GET&#x60;    Provides a list of all users that belong to a given Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListUsersForServiceAgreementRoute  * Route Id: ListUsersForServiceAgreementRoute  * Route source endpoint: direct:business.listUsersForServiceAgreement  * Route destination endpoint: direct:listUsersForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementUsersSA(requestParameters: GetServiceAgreementUsersSARequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ServiceAgreementUsersGetResponseBody>>>;\n    /**\n     * List users in Service Agreement - &#x60;GET&#x60;.\n     * # List users in Service Agreement - &#x60;GET&#x60;    Provides a list of all users that belong to a given Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListUsersForServiceAgreementRoute  * Route Id: ListUsersForServiceAgreementRoute  * Route source endpoint: direct:business.listUsersForServiceAgreement  * Route destination endpoint: direct:listUsersForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementUsersSA(requestParameters: GetServiceAgreementUsersSARequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ServiceAgreementUsersGetResponseBody>>>;\n    /**\n     * List users in Service Agreement - &#x60;GET&#x60;.\n     * # List users in Service Agreement - &#x60;GET&#x60;    Provides a list of all users that belong to a given Service Agreement.    ### Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListUsersForServiceAgreementRoute  * Route Id: ListUsersForServiceAgreementRoute  * Route source endpoint: direct:business.listUsersForServiceAgreement  * Route destination endpoint: direct:listUsersForServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreementUsersSA(requestParameters: GetServiceAgreementUsersSARequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getServiceAgreementUsersSA.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ServiceAgreementUsersGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getServiceAgreementUsersSAUrl(requestParameters: GetServiceAgreementUsersSARequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getServiceAgreementUsersSA.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * List Service Agreements - &#x60;GET&#x60;.\n     * # List Service Agreements - &#x60;GET&#x60;    Returns a list of all service agreements that have been created by the given Legal Entity (creator)  plus list of service agreements which are under hierarchy under the provided creatorId, or under the users legal entity if creatorId is not provided.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListServiceAgreementsHierarchyRoute  * Route Id: ListServiceAgreementsRouteHierarchy  * Route source endpoint: direct:business.listServiceAgreementsHierarchy  * Route destination endpoint: direct:listServiceAgreementsHierarchyRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreements(requestParameters: GetServiceAgreementsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<PresentationServiceAgreement>>;\n    /**\n     * List Service Agreements - &#x60;GET&#x60;.\n     * # List Service Agreements - &#x60;GET&#x60;    Returns a list of all service agreements that have been created by the given Legal Entity (creator)  plus list of service agreements which are under hierarchy under the provided creatorId, or under the users legal entity if creatorId is not provided.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListServiceAgreementsHierarchyRoute  * Route Id: ListServiceAgreementsRouteHierarchy  * Route source endpoint: direct:business.listServiceAgreementsHierarchy  * Route destination endpoint: direct:listServiceAgreementsHierarchyRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreements(requestParameters: GetServiceAgreementsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<PresentationServiceAgreement>>>;\n    /**\n     * List Service Agreements - &#x60;GET&#x60;.\n     * # List Service Agreements - &#x60;GET&#x60;    Returns a list of all service agreements that have been created by the given Legal Entity (creator)  plus list of service agreements which are under hierarchy under the provided creatorId, or under the users legal entity if creatorId is not provided.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListServiceAgreementsHierarchyRoute  * Route Id: ListServiceAgreementsRouteHierarchy  * Route source endpoint: direct:business.listServiceAgreementsHierarchy  * Route destination endpoint: direct:listServiceAgreementsHierarchyRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreements(requestParameters: GetServiceAgreementsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<PresentationServiceAgreement>>>;\n    /**\n     * List Service Agreements - &#x60;GET&#x60;.\n     * # List Service Agreements - &#x60;GET&#x60;    Returns a list of all service agreements that have been created by the given Legal Entity (creator)  plus list of service agreements which are under hierarchy under the provided creatorId, or under the users legal entity if creatorId is not provided.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.ListServiceAgreementsHierarchyRoute  * Route Id: ListServiceAgreementsRouteHierarchy  * Route source endpoint: direct:business.listServiceAgreementsHierarchy  * Route destination endpoint: direct:listServiceAgreementsHierarchyRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceAgreements(requestParameters: GetServiceAgreementsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _creatorId = requestParameters[\"creatorId\"];\n        const _userId = requestParameters[\"userId\"];\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_creatorId !== undefined && _creatorId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_creatorId, 'creatorId');\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<PresentationServiceAgreement>>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/hierarchy`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getServiceAgreementsUrl(requestParameters: GetServiceAgreementsRequestParams): string {\n        const _creatorId = requestParameters[\"creatorId\"];\n        const _userId = requestParameters[\"userId\"];\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_creatorId !== undefined && _creatorId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_creatorId, 'creatorId');\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/hierarchy${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * List all unexposed users - &#x60;GET&#x60;.\n     * # List all unexposed users - &#x60;GET&#x60;    Provides a list of all unexposed users that belong to the participants who are sharing users in the given Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetUnexposedUsersRoute  * Route Id: GetUnexposedUsersRoute  * Route source endpoint: direct:business.getUnexposedUsers  * Route destination endpoint: direct:getUnexposedUsersRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnexposedUsersSA(requestParameters: GetUnexposedUsersSARequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<UnexposedUsersGetResponseBody>>;\n    /**\n     * List all unexposed users - &#x60;GET&#x60;.\n     * # List all unexposed users - &#x60;GET&#x60;    Provides a list of all unexposed users that belong to the participants who are sharing users in the given Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetUnexposedUsersRoute  * Route Id: GetUnexposedUsersRoute  * Route source endpoint: direct:business.getUnexposedUsers  * Route destination endpoint: direct:getUnexposedUsersRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnexposedUsersSA(requestParameters: GetUnexposedUsersSARequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<UnexposedUsersGetResponseBody>>>;\n    /**\n     * List all unexposed users - &#x60;GET&#x60;.\n     * # List all unexposed users - &#x60;GET&#x60;    Provides a list of all unexposed users that belong to the participants who are sharing users in the given Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetUnexposedUsersRoute  * Route Id: GetUnexposedUsersRoute  * Route source endpoint: direct:business.getUnexposedUsers  * Route destination endpoint: direct:getUnexposedUsersRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnexposedUsersSA(requestParameters: GetUnexposedUsersSARequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<UnexposedUsersGetResponseBody>>>;\n    /**\n     * List all unexposed users - &#x60;GET&#x60;.\n     * # List all unexposed users - &#x60;GET&#x60;    Provides a list of all unexposed users that belong to the participants who are sharing users in the given Service Agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.GetUnexposedUsersRoute  * Route Id: GetUnexposedUsersRoute  * Route source endpoint: direct:business.getUnexposedUsers  * Route destination endpoint: direct:getUnexposedUsersRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnexposedUsersSA(requestParameters: GetUnexposedUsersSARequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getUnexposedUsersSA.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<UnexposedUsersGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/unexposed`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUnexposedUsersSAUrl(requestParameters: GetUnexposedUsersSARequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getUnexposedUsersSA.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/unexposed${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Add Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUsersAddSA(requestParameters: PostUsersAddSARequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Add Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUsersAddSA(requestParameters: PostUsersAddSARequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Add Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUsersAddSA(requestParameters: PostUsersAddSARequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Add Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Add Users in a Service Agreement - &#x60;POST&#x60;    Adds Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.AddUserInServiceAgreementRoute  * Route Id: AddUserInServiceAgreementRoute  * Route source endpoint: direct:business.addUsersInServiceAgreement  * Route destination endpoint: direct:addUsersInServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUsersAddSA(requestParameters: PostUsersAddSARequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postUsersAddSA.');\n        }\n        const _usersForServiceAgreement = requestParameters[\"usersForServiceAgreement\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/add`,\n            _usersForServiceAgreement,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postUsersAddSAUrl(requestParameters: PostUsersAddSARequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postUsersAddSA.');\n        }\n        const _usersForServiceAgreement = requestParameters[\"usersForServiceAgreement\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/add`;\n    }\n\n    /**\n     * Remove Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUsersRemoveSA(requestParameters: PostUsersRemoveSARequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Remove Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUsersRemoveSA(requestParameters: PostUsersRemoveSARequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Remove Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUsersRemoveSA(requestParameters: PostUsersRemoveSARequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Remove Users in a Service Agreement - &#x60;POST&#x60;.\n     * # Remove Users in a Service Agreement - &#x60;POST&#x60;    Removes Users in a Service Agreement    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.RemoveUserFromServiceAgreementRoute  * Route Id: RemoveUserFromServiceAgreementRoute  * Route source endpoint: direct:business.removeUsersFromServiceAgreement  * Route destination endpoint: removeUsersFromServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUsersRemoveSA(requestParameters: PostUsersRemoveSARequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postUsersRemoveSA.');\n        }\n        const _usersForServiceAgreement = requestParameters[\"usersForServiceAgreement\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/remove`,\n            _usersForServiceAgreement,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postUsersRemoveSAUrl(requestParameters: PostUsersRemoveSARequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postUsersRemoveSA.');\n        }\n        const _usersForServiceAgreement = requestParameters[\"usersForServiceAgreement\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/remove`;\n    }\n\n    /**\n     * Assign permissions for a users in a service agreement. - &#x60;PUT&#x60;.\n     * # Assign permissions for a users in a service agreement. - &#x60;PUT&#x60;    Updates all permission for a users in a given service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateAssignUsersPermissionsRoute  * Route Id: UpdateAssignUsersPermissionsRoute  * Route source endpoint: direct:business.assignUsersPermissions  * Route destination endpoint: direct:assignUsersPermissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAssignUsersPermissions(requestParameters: PutAssignUsersPermissionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationApprovalStatus>;\n    /**\n     * Assign permissions for a users in a service agreement. - &#x60;PUT&#x60;.\n     * # Assign permissions for a users in a service agreement. - &#x60;PUT&#x60;    Updates all permission for a users in a given service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateAssignUsersPermissionsRoute  * Route Id: UpdateAssignUsersPermissionsRoute  * Route source endpoint: direct:business.assignUsersPermissions  * Route destination endpoint: direct:assignUsersPermissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAssignUsersPermissions(requestParameters: PutAssignUsersPermissionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationApprovalStatus>>;\n    /**\n     * Assign permissions for a users in a service agreement. - &#x60;PUT&#x60;.\n     * # Assign permissions for a users in a service agreement. - &#x60;PUT&#x60;    Updates all permission for a users in a given service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateAssignUsersPermissionsRoute  * Route Id: UpdateAssignUsersPermissionsRoute  * Route source endpoint: direct:business.assignUsersPermissions  * Route destination endpoint: direct:assignUsersPermissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAssignUsersPermissions(requestParameters: PutAssignUsersPermissionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationApprovalStatus>>;\n    /**\n     * Assign permissions for a users in a service agreement. - &#x60;PUT&#x60;.\n     * # Assign permissions for a users in a service agreement. - &#x60;PUT&#x60;    Updates all permission for a users in a given service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.UpdateAssignUsersPermissionsRoute  * Route Id: UpdateAssignUsersPermissionsRoute  * Route source endpoint: direct:business.assignUsersPermissions  * Route destination endpoint: direct:assignUsersPermissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAssignUsersPermissions(requestParameters: PutAssignUsersPermissionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putAssignUsersPermissions.');\n        }\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling putAssignUsersPermissions.');\n        }\n        const _listOfFunctionGroupsWithDataGroups = requestParameters[\"listOfFunctionGroupsWithDataGroups\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<PresentationApprovalStatus>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/${encodeURIComponent(String(_userId))}/permissions`,\n            _listOfFunctionGroupsWithDataGroups,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putAssignUsersPermissionsUrl(requestParameters: PutAssignUsersPermissionsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putAssignUsersPermissions.');\n        }\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling putAssignUsersPermissions.');\n        }\n        const _listOfFunctionGroupsWithDataGroups = requestParameters[\"listOfFunctionGroupsWithDataGroups\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}/users/${encodeURIComponent(String(_userId))}/permissions`;\n    }\n\n    /**\n     * Service Agreement - &#x60;PUT&#x60;.\n     * # Service Agreement - &#x60;PUT&#x60;    Request method PUT for updating service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.EditServiceAgreementRoute  * Route Id: EditServiceAgreementRoute  * Route source endpoint: direct:business.editServiceAgreement  * Route destination endpoint: direct:EditServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putServiceAgreementSave(requestParameters: PutServiceAgreementSaveRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Service Agreement - &#x60;PUT&#x60;.\n     * # Service Agreement - &#x60;PUT&#x60;    Request method PUT for updating service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.EditServiceAgreementRoute  * Route Id: EditServiceAgreementRoute  * Route source endpoint: direct:business.editServiceAgreement  * Route destination endpoint: direct:EditServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putServiceAgreementSave(requestParameters: PutServiceAgreementSaveRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Service Agreement - &#x60;PUT&#x60;.\n     * # Service Agreement - &#x60;PUT&#x60;    Request method PUT for updating service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.EditServiceAgreementRoute  * Route Id: EditServiceAgreementRoute  * Route source endpoint: direct:business.editServiceAgreement  * Route destination endpoint: direct:EditServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putServiceAgreementSave(requestParameters: PutServiceAgreementSaveRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Service Agreement - &#x60;PUT&#x60;.\n     * # Service Agreement - &#x60;PUT&#x60;    Request method PUT for updating service agreement.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.serviceagreement.EditServiceAgreementRoute  * Route Id: EditServiceAgreementRoute  * Route source endpoint: direct:business.editServiceAgreement  * Route destination endpoint: direct:EditServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putServiceAgreementSave(requestParameters: PutServiceAgreementSaveRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putServiceAgreementSave.');\n        }\n        const _serviceAgreementSave = requestParameters[\"serviceAgreementSave\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}`,\n            _serviceAgreementSave,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putServiceAgreementSaveUrl(requestParameters: PutServiceAgreementSaveRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putServiceAgreementSave.');\n        }\n        const _serviceAgreementSave = requestParameters[\"serviceAgreementSave\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/service-agreements/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/{id}/users/{userId}/permissions URL pattern\n*/\nexport const ServiceAgreementsHttpServiceGetAssignUsersPermissionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/{userId}/permissions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"items\" : [ {\n    \"functionGroupId\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eead\",\n    \"dataGroupIds\" : [ {\n      \"id\" : \"138a7683-e9da-4ffa-a257-b78626790cd7\"\n    } ]\n  }, {\n    \"functionGroupId\" : \"00779897-253c-4bbb-b0c7-3c47fd0b0b08\",\n    \"dataGroupIds\" : [ ]\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/{id}/business-functions URL pattern\n*/\nexport const ServiceAgreementsHttpServiceGetBusinessfunctionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/business-functions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"functionId\" : \"1026\",\n  \"functionCode\" : \"us.billpay.enrolment\",\n  \"resource\" : \"Billpay\",\n  \"name\" : \"US Billpay Enrolment\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1006\",\n  \"functionCode\" : \"product.summary\",\n  \"resource\" : \"Product Summary\",\n  \"name\" : \"Product Summary\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1046\",\n  \"functionCode\" : \"ach.debit\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"ACH Debit\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1013\",\n  \"functionCode\" : \"audit\",\n  \"resource\" : \"Audit\",\n  \"name\" : \"Audit\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1043\",\n  \"functionCode\" : \"sepa.credit.transfer.intc\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"SEPA CT - Intracompany\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1021\",\n  \"functionCode\" : \"us.billpay.payments\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Billpay Payments\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1011\",\n  \"functionCode\" : \"manage.legalentities\",\n  \"resource\" : \"Legal Entity\",\n  \"name\" : \"Manage Legal Entities\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1032\",\n  \"functionCode\" : \"assign.approval.policies\",\n  \"resource\" : \"Approvals\",\n  \"name\" : \"Assign Approval Policies\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1050\",\n  \"functionCode\" : \"unlock.user\",\n  \"resource\" : \"Identities\",\n  \"name\" : \"Unlock User\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1049\",\n  \"functionCode\" : \"lock.user\",\n  \"resource\" : \"Identities\",\n  \"name\" : \"Lock User\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1014\",\n  \"functionCode\" : \"manage.shadow.limits\",\n  \"resource\" : \"Limits\",\n  \"name\" : \"Manage Shadow Limits\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1009\",\n  \"functionCode\" : \"assign.permissions\",\n  \"resource\" : \"Service Agreement\",\n  \"name\" : \"Assign Permissions\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1037\",\n  \"functionCode\" : \"batch.sepa\",\n  \"resource\" : \"Batch\",\n  \"name\" : \"Batch - SEPA CT\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1017\",\n  \"functionCode\" : \"us.domestic.wire\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Domestic Wire\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1010\",\n  \"functionCode\" : \"manage.users\",\n  \"resource\" : \"User\",\n  \"name\" : \"Manage Users\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1022\",\n  \"functionCode\" : \"us.billpay.payees\",\n  \"resource\" : \"Contacts\",\n  \"name\" : \"US Billpay Payees\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1019\",\n  \"functionCode\" : \"manage.data.groups\",\n  \"resource\" : \"Entitlements\",\n  \"name\" : \"Manage Data Groups\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1015\",\n  \"functionCode\" : \"intra.company.payments\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"Intra Company Payments\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1044\",\n  \"functionCode\" : \"us.domestic.wire.intc\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Domestic Wire - Intracompany\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1028\",\n  \"functionCode\" : \"manage.service.agreements\",\n  \"resource\" : \"Service Agreement\",\n  \"name\" : \"Manage Service Agreements\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1025\",\n  \"functionCode\" : \"us.billpay.payees.summary\",\n  \"resource\" : \"Contacts\",\n  \"name\" : \"US Billpay Payees-Summary\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1038\",\n  \"functionCode\" : \"manage.messages\",\n  \"resource\" : \"Message Center\",\n  \"name\" : \"Manage Messages\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1045\",\n  \"functionCode\" : \"us.foreign.wire.intc\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Foreign Wire - Intracompany\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1040\",\n  \"functionCode\" : \"manage.default.limits\",\n  \"resource\" : \"Limits\",\n  \"name\" : \"Manage Default Limits\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1031\",\n  \"functionCode\" : \"manage.topics\",\n  \"resource\" : \"Message Center\",\n  \"name\" : \"Manage Topics\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1042\",\n  \"functionCode\" : \"ach.credit.intc\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"ACH Credit - Intracompany\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1034\",\n  \"functionCode\" : \"manage.identities\",\n  \"resource\" : \"Identities\",\n  \"name\" : \"Manage Identities\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1002\",\n  \"functionCode\" : \"payments.sepa\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"SEPA CT\",\n  \"privileges\" : [ {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1023\",\n  \"functionCode\" : \"us.billpay.accounts\",\n  \"resource\" : \"Arrangements\",\n  \"name\" : \"US Billpay Accounts\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1047\",\n  \"functionCode\" : \"manage.budgets\",\n  \"resource\" : \"Personal Finance Management\",\n  \"name\" : \"Manage Budgets\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1033\",\n  \"functionCode\" : \"manage.approval.policy.level\",\n  \"resource\" : \"Approvals\",\n  \"name\" : \"Manage Approval Policy and Level\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1035\",\n  \"functionCode\" : \"manage.user.profiles\",\n  \"resource\" : \"User Profiles\",\n  \"name\" : \"Manage User Profiles\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1003\",\n  \"functionCode\" : \"transactions\",\n  \"resource\" : \"Transactions\",\n  \"name\" : \"Transactions\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1039\",\n  \"functionCode\" : \"supervise.messages\",\n  \"resource\" : \"Message Center\",\n  \"name\" : \"Supervise Messages\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1005\",\n  \"functionCode\" : \"contacts\",\n  \"resource\" : \"Contacts\",\n  \"name\" : \"Contacts\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1012\",\n  \"functionCode\" : \"manage.limits\",\n  \"resource\" : \"Limits\",\n  \"name\" : \"Manage Limits\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1041\",\n  \"functionCode\" : \"ach.credit.transfer\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"ACH Credit Transfer\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1029\",\n  \"functionCode\" : \"manage.actions.recipes\",\n  \"resource\" : \"Actions\",\n  \"name\" : \"Manage Action Recipes\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1027\",\n  \"functionCode\" : \"access.actions.history\",\n  \"resource\" : \"Actions\",\n  \"name\" : \"Access Actions History\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1016\",\n  \"functionCode\" : \"manage.statements\",\n  \"resource\" : \"Account Statements\",\n  \"name\" : \"Manage Statements\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1048\",\n  \"functionCode\" : \"manage.saving.goals\",\n  \"resource\" : \"Personal Finance Management\",\n  \"name\" : \"Manage Saving Goals\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1030\",\n  \"functionCode\" : \"manage.notifications\",\n  \"resource\" : \"Notifications\",\n  \"name\" : \"Manage Notifications\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1020\",\n  \"functionCode\" : \"manage.function.groups\",\n  \"resource\" : \"Entitlements\",\n  \"name\" : \"Manage Function Groups\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1007\",\n  \"functionCode\" : \"assign.users\",\n  \"resource\" : \"Service Agreement\",\n  \"name\" : \"Assign Users\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1018\",\n  \"functionCode\" : \"us.foreign.wire\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Foreign Wire\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1036\",\n  \"functionCode\" : \"support.access.payments\",\n  \"resource\" : \"Support Access\",\n  \"name\" : \"Support Access for Payments\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1024\",\n  \"functionCode\" : \"us.billpay.payees.search\",\n  \"resource\" : \"Contacts\",\n  \"name\" : \"US Billpay Payees-Search\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1051\",\n  \"functionCode\" : \"manage.devices\",\n  \"resource\" : \"Device\",\n  \"name\" : \"Manage Devices\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1052\",\n  \"functionCode\" : \"sepa.credit.transfer.closed\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"SEPA CT - closed\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1053\",\n  \"functionCode\" : \"a2a.transfer\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"A2A Transfer\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/usercontext/participants URL pattern\n*/\nexport const ServiceAgreementsHttpServiceGetContextServiceAgreementParticipantsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/usercontext/participants\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"sharingUsers\" : true,\n  \"sharingAccounts\" : false\n}, {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"sharingUsers\" : false,\n  \"sharingAccounts\" : true\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/{id}/participants URL pattern\n*/\nexport const ServiceAgreementsHttpServiceGetServiceAgreementParticipantsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/participants\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"sharingUsers\" : true,\n  \"sharingAccounts\" : false\n}, {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"sharingUsers\" : false,\n  \"sharingAccounts\" : true\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/{id}/users URL pattern\n*/\nexport const ServiceAgreementsHttpServiceGetServiceAgreementUsersSAMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"David\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/hierarchy URL pattern\n*/\nexport const ServiceAgreementsHttpServiceGetServiceAgreementsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/hierarchy\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"951293e6521940e3ae0608f93ff0b215\",\n  \"externalId\" : \"external-id-1\",\n  \"name\" : \"Broker deal 1\",\n  \"description\" : \"Agreement between Backbase and Apple\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3,\n  \"validFromDate\" : \"2017-03-31\",\n  \"validFromTime\" : \"08:00:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"08:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96147\",\n  \"externalId\" : \"external-id-2\",\n  \"name\" : \"Broker deal 2\",\n  \"description\" : \"Agreement between Backbase and HP\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4,\n  \"validFromDate\" : \"2018-03-31\",\n  \"validFromTime\" : \"08:00:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"08:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96148\",\n  \"externalId\" : \"external-id-3\",\n  \"name\" : \"Broker deal 3\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1,\n  \"validFromDate\" : \"2018-10-31\",\n  \"validFromTime\" : \"09:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96149\",\n  \"externalId\" : \"external-id-4\",\n  \"name\" : \"Broker deal 4\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates UAE\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3,\n  \"validUntilDate\" : \"2020-06-29\",\n  \"validUntilTime\" : \"20:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96150\",\n  \"externalId\" : \"external-id-5\",\n  \"name\" : \"Broker deal 5\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates US\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4,\n  \"validFromDate\" : \"2015-01-01\",\n  \"validFromTime\" : \"08:00:00\",\n  \"validUntilDate\" : \"2019-12-31\",\n  \"validUntilTime\" : \"08:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96151\",\n  \"externalId\" : \"external-id-6\",\n  \"name\" : \"Broker deal 6\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates US Salary Services\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96152\",\n  \"externalId\" : \"external-id-7\",\n  \"name\" : \"Broker deal 7\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates US Training\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96153\",\n  \"externalId\" : \"external-id-8\",\n  \"name\" : \"Broker deal 8\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates UK\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96154\",\n  \"externalId\" : \"external-id-9\",\n  \"name\" : \"Broker deal 9\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates UK Sales\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96155\",\n  \"externalId\" : \"external-id-10\",\n  \"name\" : \"Broker deal 10\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates UK Marketing\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96156\",\n  \"externalId\" : \"external-id-11\",\n  \"name\" : \"Broker deal 11\",\n  \"description\" : \"Agreement between Backbase and Microsoft\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3,\n  \"validFromDate\" : \"2017-03-01\",\n  \"validFromTime\" : \"10:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96157\",\n  \"externalId\" : \"external-id-12\",\n  \"name\" : \"Broker deal 12\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96158\",\n  \"externalId\" : \"external-id-13\",\n  \"name\" : \"Broker deal 13\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell US\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96159\",\n  \"externalId\" : \"external-id-14\",\n  \"name\" : \"Broker deal 14\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell UAE\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96160\",\n  \"externalId\" : \"external-id-15\",\n  \"name\" : \"Broker deal 15\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell US Foreign Exchange\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4,\n  \"validFromDate\" : \"2017-03-31\",\n  \"validFromTime\" : \"08:00:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"08:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96161\",\n  \"externalId\" : \"external-id-16\",\n  \"name\" : \"Broker deal 16\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell US Salary Services\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96162\",\n  \"externalId\" : \"external-id-17\",\n  \"name\" : \"Broker deal 17\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell US Training\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96163\",\n  \"externalId\" : \"external-id-18\",\n  \"name\" : \"Broker deal 18\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell UK\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96164\",\n  \"externalId\" : \"external-id-19\",\n  \"name\" : \"Broker deal 19\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell UK Sales\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96165\",\n  \"externalId\" : \"external-id-20\",\n  \"name\" : \"Broker deal 20\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell UK Marketing\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96166\",\n  \"externalId\" : \"external-id-21\",\n  \"name\" : \"Broker deal 21\",\n  \"description\" : \"Agreement between Backbase and Jenkins\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96167\",\n  \"externalId\" : \"external-id-22\",\n  \"name\" : \"Broker deal 22\",\n  \"description\" : \"Agreement between Backbase and Blue Ocean\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96168\",\n  \"externalId\" : \"external-id-23\",\n  \"name\" : \"Broker deal 23\",\n  \"description\" : \"Agreement between Backbase and Dell US\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96169\",\n  \"externalId\" : \"external-id-24\",\n  \"name\" : \"Broker deal 24\",\n  \"description\" : \"Agreement between Backbase and Dell UAE\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96170\",\n  \"externalId\" : \"external-id-25\",\n  \"name\" : \"Broker deal 25\",\n  \"description\" : \"Agreement between Backbase and Dell AUS\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96171\",\n  \"externalId\" : \"external-id-26\",\n  \"name\" : \"Broker deal 26\",\n  \"description\" : \"Agreement between Backbase and Dell US Salary Services\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96172\",\n  \"externalId\" : \"external-id-27\",\n  \"name\" : \"Broker deal 27\",\n  \"description\" : \"Agreement between Backbase and Dell US Training\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96173\",\n  \"externalId\" : \"external-id-28\",\n  \"name\" : \"Broker deal 28\",\n  \"description\" : \"Agreement between Backbase and Dell UK\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96174\",\n  \"externalId\" : \"external-id-29\",\n  \"name\" : \"Broker deal 29\",\n  \"description\" : \"Agreement between Backbase and Dell UK Sales\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96175\",\n  \"externalId\" : \"external-id-30\",\n  \"name\" : \"Broker deal 30\",\n  \"description\" : \"Agreement between Backbase and Dell UK Marketing\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/{id}/users/unexposed URL pattern\n*/\nexport const ServiceAgreementsHttpServiceGetUnexposedUsersSAMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/unexposed\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"fullName\" : \"David\",\n  \"legalEntityId\" : \"f63f3fc550794eed84bf848dbbba9bbd\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityId\" : \"f63f3fc550794eed84bf848dbbba9bbd\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityId\" : \"951293e6521940e3ae0608f93ff0b215\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/{id}/users/add URL pattern\n*/\nexport const ServiceAgreementsHttpServicePostUsersAddSAMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/add\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/{id}/users/remove URL pattern\n*/\nexport const ServiceAgreementsHttpServicePostUsersRemoveSAMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/remove\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/{id}/users/{userId}/permissions URL pattern\n*/\nexport const ServiceAgreementsHttpServicePutAssignUsersPermissionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/{userId}/permissions\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalStatus\" : \"PENDING\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/service-agreements/{id} URL pattern\n*/\nexport const ServiceAgreementsHttpServicePutServiceAgreementSaveMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n\nexport const ServiceAgreementsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/{userId}/permissions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"items\" : [ {\n    \"functionGroupId\" : \"98f8531d-9bf4-4f3f-a49b-7cf331d6eead\",\n    \"dataGroupIds\" : [ {\n      \"id\" : \"138a7683-e9da-4ffa-a257-b78626790cd7\"\n    } ]\n  }, {\n    \"functionGroupId\" : \"00779897-253c-4bbb-b0c7-3c47fd0b0b08\",\n    \"dataGroupIds\" : [ ]\n  } ]\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/business-functions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"functionId\" : \"1026\",\n  \"functionCode\" : \"us.billpay.enrolment\",\n  \"resource\" : \"Billpay\",\n  \"name\" : \"US Billpay Enrolment\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1006\",\n  \"functionCode\" : \"product.summary\",\n  \"resource\" : \"Product Summary\",\n  \"name\" : \"Product Summary\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1046\",\n  \"functionCode\" : \"ach.debit\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"ACH Debit\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1013\",\n  \"functionCode\" : \"audit\",\n  \"resource\" : \"Audit\",\n  \"name\" : \"Audit\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1043\",\n  \"functionCode\" : \"sepa.credit.transfer.intc\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"SEPA CT - Intracompany\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1021\",\n  \"functionCode\" : \"us.billpay.payments\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Billpay Payments\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1011\",\n  \"functionCode\" : \"manage.legalentities\",\n  \"resource\" : \"Legal Entity\",\n  \"name\" : \"Manage Legal Entities\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1032\",\n  \"functionCode\" : \"assign.approval.policies\",\n  \"resource\" : \"Approvals\",\n  \"name\" : \"Assign Approval Policies\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1050\",\n  \"functionCode\" : \"unlock.user\",\n  \"resource\" : \"Identities\",\n  \"name\" : \"Unlock User\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1049\",\n  \"functionCode\" : \"lock.user\",\n  \"resource\" : \"Identities\",\n  \"name\" : \"Lock User\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1014\",\n  \"functionCode\" : \"manage.shadow.limits\",\n  \"resource\" : \"Limits\",\n  \"name\" : \"Manage Shadow Limits\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1009\",\n  \"functionCode\" : \"assign.permissions\",\n  \"resource\" : \"Service Agreement\",\n  \"name\" : \"Assign Permissions\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1037\",\n  \"functionCode\" : \"batch.sepa\",\n  \"resource\" : \"Batch\",\n  \"name\" : \"Batch - SEPA CT\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1017\",\n  \"functionCode\" : \"us.domestic.wire\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Domestic Wire\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1010\",\n  \"functionCode\" : \"manage.users\",\n  \"resource\" : \"User\",\n  \"name\" : \"Manage Users\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1022\",\n  \"functionCode\" : \"us.billpay.payees\",\n  \"resource\" : \"Contacts\",\n  \"name\" : \"US Billpay Payees\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1019\",\n  \"functionCode\" : \"manage.data.groups\",\n  \"resource\" : \"Entitlements\",\n  \"name\" : \"Manage Data Groups\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1015\",\n  \"functionCode\" : \"intra.company.payments\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"Intra Company Payments\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1044\",\n  \"functionCode\" : \"us.domestic.wire.intc\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Domestic Wire - Intracompany\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1028\",\n  \"functionCode\" : \"manage.service.agreements\",\n  \"resource\" : \"Service Agreement\",\n  \"name\" : \"Manage Service Agreements\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1025\",\n  \"functionCode\" : \"us.billpay.payees.summary\",\n  \"resource\" : \"Contacts\",\n  \"name\" : \"US Billpay Payees-Summary\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1038\",\n  \"functionCode\" : \"manage.messages\",\n  \"resource\" : \"Message Center\",\n  \"name\" : \"Manage Messages\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1045\",\n  \"functionCode\" : \"us.foreign.wire.intc\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Foreign Wire - Intracompany\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1040\",\n  \"functionCode\" : \"manage.default.limits\",\n  \"resource\" : \"Limits\",\n  \"name\" : \"Manage Default Limits\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1031\",\n  \"functionCode\" : \"manage.topics\",\n  \"resource\" : \"Message Center\",\n  \"name\" : \"Manage Topics\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1042\",\n  \"functionCode\" : \"ach.credit.intc\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"ACH Credit - Intracompany\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1034\",\n  \"functionCode\" : \"manage.identities\",\n  \"resource\" : \"Identities\",\n  \"name\" : \"Manage Identities\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1002\",\n  \"functionCode\" : \"payments.sepa\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"SEPA CT\",\n  \"privileges\" : [ {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1023\",\n  \"functionCode\" : \"us.billpay.accounts\",\n  \"resource\" : \"Arrangements\",\n  \"name\" : \"US Billpay Accounts\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1047\",\n  \"functionCode\" : \"manage.budgets\",\n  \"resource\" : \"Personal Finance Management\",\n  \"name\" : \"Manage Budgets\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1033\",\n  \"functionCode\" : \"manage.approval.policy.level\",\n  \"resource\" : \"Approvals\",\n  \"name\" : \"Manage Approval Policy and Level\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1035\",\n  \"functionCode\" : \"manage.user.profiles\",\n  \"resource\" : \"User Profiles\",\n  \"name\" : \"Manage User Profiles\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1003\",\n  \"functionCode\" : \"transactions\",\n  \"resource\" : \"Transactions\",\n  \"name\" : \"Transactions\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1039\",\n  \"functionCode\" : \"supervise.messages\",\n  \"resource\" : \"Message Center\",\n  \"name\" : \"Supervise Messages\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1005\",\n  \"functionCode\" : \"contacts\",\n  \"resource\" : \"Contacts\",\n  \"name\" : \"Contacts\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1012\",\n  \"functionCode\" : \"manage.limits\",\n  \"resource\" : \"Limits\",\n  \"name\" : \"Manage Limits\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1041\",\n  \"functionCode\" : \"ach.credit.transfer\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"ACH Credit Transfer\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1029\",\n  \"functionCode\" : \"manage.actions.recipes\",\n  \"resource\" : \"Actions\",\n  \"name\" : \"Manage Action Recipes\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1027\",\n  \"functionCode\" : \"access.actions.history\",\n  \"resource\" : \"Actions\",\n  \"name\" : \"Access Actions History\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1016\",\n  \"functionCode\" : \"manage.statements\",\n  \"resource\" : \"Account Statements\",\n  \"name\" : \"Manage Statements\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1048\",\n  \"functionCode\" : \"manage.saving.goals\",\n  \"resource\" : \"Personal Finance Management\",\n  \"name\" : \"Manage Saving Goals\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1030\",\n  \"functionCode\" : \"manage.notifications\",\n  \"resource\" : \"Notifications\",\n  \"name\" : \"Manage Notifications\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1020\",\n  \"functionCode\" : \"manage.function.groups\",\n  \"resource\" : \"Entitlements\",\n  \"name\" : \"Manage Function Groups\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1007\",\n  \"functionCode\" : \"assign.users\",\n  \"resource\" : \"Service Agreement\",\n  \"name\" : \"Assign Users\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1018\",\n  \"functionCode\" : \"us.foreign.wire\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"US Foreign Wire\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1036\",\n  \"functionCode\" : \"support.access.payments\",\n  \"resource\" : \"Support Access\",\n  \"name\" : \"Support Access for Payments\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1024\",\n  \"functionCode\" : \"us.billpay.payees.search\",\n  \"resource\" : \"Contacts\",\n  \"name\" : \"US Billpay Payees-Search\",\n  \"privileges\" : [ {\n    \"privilege\" : \"execute\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1051\",\n  \"functionCode\" : \"manage.devices\",\n  \"resource\" : \"Device\",\n  \"name\" : \"Manage Devices\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : false\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : false\n  } ]\n}, {\n  \"functionId\" : \"1052\",\n  \"functionCode\" : \"sepa.credit.transfer.closed\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"SEPA CT - closed\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n}, {\n  \"functionId\" : \"1053\",\n  \"functionCode\" : \"a2a.transfer\",\n  \"resource\" : \"Payments\",\n  \"name\" : \"A2A Transfer\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"create\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"edit\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"delete\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"approve\",\n    \"supportsLimit\" : true\n  }, {\n    \"privilege\" : \"cancel\",\n    \"supportsLimit\" : true\n  } ]\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/usercontext/participants\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"sharingUsers\" : true,\n  \"sharingAccounts\" : false\n}, {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"sharingUsers\" : false,\n  \"sharingAccounts\" : true\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/participants\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"externalId\" : \"KPMG\",\n  \"name\" : \"KPMG\",\n  \"sharingUsers\" : true,\n  \"sharingAccounts\" : false\n}, {\n  \"id\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"externalId\" : \"Backbase\",\n  \"name\" : \"Backbase\",\n  \"sharingUsers\" : false,\n  \"sharingAccounts\" : true\n} ]\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"David\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db958963\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"legalEntityId\" : \"a1198a20-5a40-4eb7-b47f-a553db920429\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/hierarchy\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"951293e6521940e3ae0608f93ff0b215\",\n  \"externalId\" : \"external-id-1\",\n  \"name\" : \"Broker deal 1\",\n  \"description\" : \"Agreement between Backbase and Apple\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3,\n  \"validFromDate\" : \"2017-03-31\",\n  \"validFromTime\" : \"08:00:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"08:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96147\",\n  \"externalId\" : \"external-id-2\",\n  \"name\" : \"Broker deal 2\",\n  \"description\" : \"Agreement between Backbase and HP\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4,\n  \"validFromDate\" : \"2018-03-31\",\n  \"validFromTime\" : \"08:00:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"08:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96148\",\n  \"externalId\" : \"external-id-3\",\n  \"name\" : \"Broker deal 3\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1,\n  \"validFromDate\" : \"2018-10-31\",\n  \"validFromTime\" : \"09:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96149\",\n  \"externalId\" : \"external-id-4\",\n  \"name\" : \"Broker deal 4\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates UAE\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3,\n  \"validUntilDate\" : \"2020-06-29\",\n  \"validUntilTime\" : \"20:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96150\",\n  \"externalId\" : \"external-id-5\",\n  \"name\" : \"Broker deal 5\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates US\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4,\n  \"validFromDate\" : \"2015-01-01\",\n  \"validFromTime\" : \"08:00:00\",\n  \"validUntilDate\" : \"2019-12-31\",\n  \"validUntilTime\" : \"08:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96151\",\n  \"externalId\" : \"external-id-6\",\n  \"name\" : \"Broker deal 6\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates US Salary Services\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96152\",\n  \"externalId\" : \"external-id-7\",\n  \"name\" : \"Broker deal 7\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates US Training\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96153\",\n  \"externalId\" : \"external-id-8\",\n  \"name\" : \"Broker deal 8\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates UK\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96154\",\n  \"externalId\" : \"external-id-9\",\n  \"name\" : \"Broker deal 9\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates UK Sales\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96155\",\n  \"externalId\" : \"external-id-10\",\n  \"name\" : \"Broker deal 10\",\n  \"description\" : \"Agreement between Backbase and Tyler Boyd Associates UK Marketing\",\n  \"creatorLegalEntity\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96156\",\n  \"externalId\" : \"external-id-11\",\n  \"name\" : \"Broker deal 11\",\n  \"description\" : \"Agreement between Backbase and Microsoft\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3,\n  \"validFromDate\" : \"2017-03-01\",\n  \"validFromTime\" : \"10:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96157\",\n  \"externalId\" : \"external-id-12\",\n  \"name\" : \"Broker deal 12\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96158\",\n  \"externalId\" : \"external-id-13\",\n  \"name\" : \"Broker deal 13\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell US\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96159\",\n  \"externalId\" : \"external-id-14\",\n  \"name\" : \"Broker deal 14\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell UAE\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96160\",\n  \"externalId\" : \"external-id-15\",\n  \"name\" : \"Broker deal 15\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell US Foreign Exchange\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4,\n  \"validFromDate\" : \"2017-03-31\",\n  \"validFromTime\" : \"08:00:00\",\n  \"validUntilDate\" : \"2019-03-31\",\n  \"validUntilTime\" : \"08:00:00\"\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96161\",\n  \"externalId\" : \"external-id-16\",\n  \"name\" : \"Broker deal 16\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell US Salary Services\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96162\",\n  \"externalId\" : \"external-id-17\",\n  \"name\" : \"Broker deal 17\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell US Training\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96163\",\n  \"externalId\" : \"external-id-18\",\n  \"name\" : \"Broker deal 18\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell UK\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96164\",\n  \"externalId\" : \"external-id-19\",\n  \"name\" : \"Broker deal 19\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell UK Sales\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96165\",\n  \"externalId\" : \"external-id-20\",\n  \"name\" : \"Broker deal 20\",\n  \"description\" : \"Agreement between Backbase and Packard-Bell UK Marketing\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96166\",\n  \"externalId\" : \"external-id-21\",\n  \"name\" : \"Broker deal 21\",\n  \"description\" : \"Agreement between Backbase and Jenkins\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96167\",\n  \"externalId\" : \"external-id-22\",\n  \"name\" : \"Broker deal 22\",\n  \"description\" : \"Agreement between Backbase and Blue Ocean\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96168\",\n  \"externalId\" : \"external-id-23\",\n  \"name\" : \"Broker deal 23\",\n  \"description\" : \"Agreement between Backbase and Dell US\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96169\",\n  \"externalId\" : \"external-id-24\",\n  \"name\" : \"Broker deal 24\",\n  \"description\" : \"Agreement between Backbase and Dell UAE\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96170\",\n  \"externalId\" : \"external-id-25\",\n  \"name\" : \"Broker deal 25\",\n  \"description\" : \"Agreement between Backbase and Dell AUS\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96171\",\n  \"externalId\" : \"external-id-26\",\n  \"name\" : \"Broker deal 26\",\n  \"description\" : \"Agreement between Backbase and Dell US Salary Services\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96172\",\n  \"externalId\" : \"external-id-27\",\n  \"name\" : \"Broker deal 27\",\n  \"description\" : \"Agreement between Backbase and Dell US Training\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96173\",\n  \"externalId\" : \"external-id-28\",\n  \"name\" : \"Broker deal 28\",\n  \"description\" : \"Agreement between Backbase and Dell UK\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName\",\n  \"numberOfParticipants\" : 4\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96174\",\n  \"externalId\" : \"external-id-29\",\n  \"name\" : \"Broker deal 29\",\n  \"description\" : \"Agreement between Backbase and Dell UK Sales\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : true,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName4\",\n  \"numberOfParticipants\" : 1\n}, {\n  \"id\" : \"9e4fb91794574b98ae8a1e42bbe96175\",\n  \"externalId\" : \"external-id-30\",\n  \"name\" : \"Broker deal 30\",\n  \"description\" : \"Agreement between Backbase and Dell UK Marketing\",\n  \"creatorLegalEntity\" : \"9371efe0-e295-47f7-822f-934532646b98\",\n  \"isMaster\" : false,\n  \"status\" : \"ENABLED\",\n  \"creatorLegalEntityName\" : \"someName1\",\n  \"numberOfParticipants\" : 3\n} ]\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/unexposed\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"01d70d09997b41cb83ea0e1db84626b3\",\n  \"externalId\" : \"U0000011\",\n  \"fullName\" : \"David\",\n  \"legalEntityId\" : \"f63f3fc550794eed84bf848dbbba9bbd\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bbf6a23536fa49029abf9c03f97a82fa\",\n  \"externalId\" : \"U0000012\",\n  \"fullName\" : \"Paul\",\n  \"legalEntityId\" : \"f63f3fc550794eed84bf848dbbba9bbd\",\n  \"legalEntityName\" : \"LE-1\"\n}, {\n  \"id\" : \"bc4ce9091eb04754a5a9b9422099f0fa\",\n  \"externalId\" : \"U0000013\",\n  \"fullName\" : \"Wayne\",\n  \"legalEntityId\" : \"951293e6521940e3ae0608f93ff0b215\",\n  \"legalEntityName\" : \"LE-2\"\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/add\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/remove\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}/users/{userId}/permissions\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvalStatus\" : \"PENDING\"\n}\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/service-agreements/{id}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n\n    ]\n},\n]\n);\n\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { PermissionsDataGroup } from '../model/models';\nimport { PermissionsRequest } from '../model/models';\nimport { Serviceagreementpartialitem } from '../model/models';\nimport { UserContextPOST } from '../model/models';\n\nimport { ACCESS_CONTROL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AccessControlConfiguration }                                     from '../configuration';\n\n\nexport interface GetUserContextPermissionsRequestParams {\n    /** # User context data group permissions - &#x60;POST&#x60;    Returns list of permissions with data groups and items filtered by user context user id and service agreement id (fallback  on MSA if no service agreement provided in the context) and data group types, resource name,  business function name and privileges provided in the request body.    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.accesscontrol.business.flows.useraccess.GetPermissionDataGroupsFlow   */\n    [\"permissionsRequest\"]?: PermissionsRequest;\n}\n\nexport interface GetUserContextServiceAgreementsRequestParams {\n    /** The search term used to search. */\n    [\"query\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface PostUserContextRequestParams {\n    /** #Create user context for current user - &#x60;POST&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ValidateServiceAgreementRoute  * Route Id: ValidateServiceAgreementRoute   * Route source endpoint: direct:business.ValidateServiceAgreement  * Route destination endpoint: direct:validateServiceAgreementRequestedInternal */\n    [\"userContextPOST\"]?: UserContextPOST;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextHttpService {\n\n    protected basePath = '/access-control';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AccessControlConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACCESS_CONTROL_BASE_PATH) basePath: string, @Optional() configuration: AccessControlConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve user context data group permissions.\n     * Retrieve user context data group permissions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserContextPermissions(requestParameters: GetUserContextPermissionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PermissionsDataGroup>;\n    /**\n     * Retrieve user context data group permissions.\n     * Retrieve user context data group permissions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserContextPermissions(requestParameters: GetUserContextPermissionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PermissionsDataGroup>>;\n    /**\n     * Retrieve user context data group permissions.\n     * Retrieve user context data group permissions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserContextPermissions(requestParameters: GetUserContextPermissionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PermissionsDataGroup>>;\n    /**\n     * Retrieve user context data group permissions.\n     * Retrieve user context data group permissions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserContextPermissions(requestParameters: GetUserContextPermissionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _permissionsRequest = requestParameters[\"permissionsRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PermissionsDataGroup>(`${this.configuration.basePath}/client-api/v2/accessgroups/usercontext/data-group-permissions`,\n            _permissionsRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUserContextPermissionsUrl(requestParameters: GetUserContextPermissionsRequestParams): string {\n        const _permissionsRequest = requestParameters[\"permissionsRequest\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/usercontext/data-group-permissions`;\n    }\n\n    /**\n     * Retrieve the list service agreement of the current user.\n     * Retrieve the list service agreement of the current user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserContextServiceAgreements(requestParameters: GetUserContextServiceAgreementsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<Serviceagreementpartialitem>>;\n    /**\n     * Retrieve the list service agreement of the current user.\n     * Retrieve the list service agreement of the current user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserContextServiceAgreements(requestParameters: GetUserContextServiceAgreementsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<Serviceagreementpartialitem>>>;\n    /**\n     * Retrieve the list service agreement of the current user.\n     * Retrieve the list service agreement of the current user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserContextServiceAgreements(requestParameters: GetUserContextServiceAgreementsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<Serviceagreementpartialitem>>>;\n    /**\n     * Retrieve the list service agreement of the current user.\n     * Retrieve the list service agreement of the current user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserContextServiceAgreements(requestParameters: GetUserContextServiceAgreementsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<Serviceagreementpartialitem>>(`${this.configuration.basePath}/client-api/v2/accessgroups/usercontext/serviceagreements`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUserContextServiceAgreementsUrl(requestParameters: GetUserContextServiceAgreementsRequestParams): string {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/usercontext/serviceagreements${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Create user context for current user - &#x60;POST&#x60;.\n     * #Create user context for current user - &#x60;POST&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ValidateServiceAgreementRoute  * Route Id: ValidateServiceAgreementRoute   * Route source endpoint: direct:business.ValidateServiceAgreement  * Route destination endpoint: direct:validateServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUserContext(requestParameters: PostUserContextRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Create user context for current user - &#x60;POST&#x60;.\n     * #Create user context for current user - &#x60;POST&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ValidateServiceAgreementRoute  * Route Id: ValidateServiceAgreementRoute   * Route source endpoint: direct:business.ValidateServiceAgreement  * Route destination endpoint: direct:validateServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUserContext(requestParameters: PostUserContextRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Create user context for current user - &#x60;POST&#x60;.\n     * #Create user context for current user - &#x60;POST&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ValidateServiceAgreementRoute  * Route Id: ValidateServiceAgreementRoute   * Route source endpoint: direct:business.ValidateServiceAgreement  * Route destination endpoint: direct:validateServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUserContext(requestParameters: PostUserContextRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Create user context for current user - &#x60;POST&#x60;.\n     * #Create user context for current user - &#x60;POST&#x60;    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ValidateServiceAgreementRoute  * Route Id: ValidateServiceAgreementRoute   * Route source endpoint: direct:business.ValidateServiceAgreement  * Route destination endpoint: direct:validateServiceAgreementRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postUserContext(requestParameters: PostUserContextRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _userContextPOST = requestParameters[\"userContextPOST\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/usercontext`,\n            _userContextPOST,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postUserContextUrl(requestParameters: PostUserContextRequestParams): string {\n        const _userContextPOST = requestParameters[\"userContextPOST\"];\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/usercontext`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/usercontext/data-group-permissions URL pattern\n*/\nexport const UserContextHttpServiceGetUserContextPermissionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/usercontext/data-group-permissions\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"permissionsData\" : [ {\n    \"permissions\" : [ {\n      \"resourceName\" : \"Payments\",\n      \"functionName\" : \"SEPA CT\",\n      \"privileges\" : [ \"view\" ]\n    }, {\n      \"resourceName\" : \"Payments\",\n      \"functionName\" : \"Domestic Payments\",\n      \"privileges\" : [ \"view\", \"create\" ]\n    } ],\n    \"dataGroups\" : [ [ {\n      \"dataGroupType\" : \"ARRANGAMENTS\",\n      \"dataGroupIds\" : [ \"a9393b23-62f5-4f07-ae8f-ba0dbea86c36\" ]\n    }, {\n      \"dataGroupType\" : \"PAYEES\",\n      \"dataGroupIds\" : [ \"a29c3cf2-9bda-41ee-8998-031f594a66b4\" ]\n    } ], [ {\n      \"dataGroupType\" : \"ARRANGEMENTS\",\n      \"dataGroupIds\" : [ \"f6677897-7a75-4bd5-8fc4-25695ca5b4de\" ]\n    } ] ]\n  }, {\n    \"permissions\" : [ {\n      \"resourceName\" : \"Payments\",\n      \"functionName\" : \"Domestic Payments\",\n      \"privileges\" : [ \"create\" ]\n    } ],\n    \"dataGroups\" : [ [ {\n      \"dataGroupType\" : \"ARRANGEMENTS\",\n      \"dataGroupIds\" : [ \"f6677897-7a75-4bd5-8fc4-25695ca5b4de\" ]\n    } ] ]\n  } ],\n  \"dataGroupsData\" : [ {\n    \"dataGroupId\" : \"a9393b23-62f5-4f07-ae8f-ba0dbea86c36\",\n    \"dataItemIds\" : [ \"d308ae19-d170-4967-b185-dceb8d356cfa\" ]\n  }, {\n    \"dataGroupId\" : \"a29c3cf2-9bda-41ee-8998-031f594a66b4\",\n    \"dataItemIds\" : [ \"66893fed-bbbb-42d6-a5c3-320b6d4a781f\" ]\n  }, {\n    \"dataGroupId\" : \"f6677897-7a75-4bd5-8fc4-25695ca5b4de\",\n    \"dataItemIds\" : [ \"d0c8dd02-99be-46e9-8ff0-8021a71552a7\" ]\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/usercontext/serviceagreements URL pattern\n*/\nexport const UserContextHttpServiceGetUserContextServiceAgreementsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/usercontext/serviceagreements\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"a1198a205a404eb7b47fa553db920429\",\n  \"name\" : \"Online Banking Service Agreement\",\n  \"description\" : \"Service Agreement between Online Banking and Backbase\",\n  \"isMaster\" : false\n}, {\n  \"id\" : \"37115f7b556a4e11ba0bfd07e2567b1d\",\n  \"name\" : \"Doe Corporation Service Agreement\",\n  \"description\" : \"Service Agreement for Doe Corp.\",\n  \"isMaster\" : true\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/usercontext URL pattern\n*/\nexport const UserContextHttpServicePostUserContextMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/usercontext\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n    ]\n}]);\n\nexport const UserContextHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/usercontext/data-group-permissions\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"permissionsData\" : [ {\n    \"permissions\" : [ {\n      \"resourceName\" : \"Payments\",\n      \"functionName\" : \"SEPA CT\",\n      \"privileges\" : [ \"view\" ]\n    }, {\n      \"resourceName\" : \"Payments\",\n      \"functionName\" : \"Domestic Payments\",\n      \"privileges\" : [ \"view\", \"create\" ]\n    } ],\n    \"dataGroups\" : [ [ {\n      \"dataGroupType\" : \"ARRANGAMENTS\",\n      \"dataGroupIds\" : [ \"a9393b23-62f5-4f07-ae8f-ba0dbea86c36\" ]\n    }, {\n      \"dataGroupType\" : \"PAYEES\",\n      \"dataGroupIds\" : [ \"a29c3cf2-9bda-41ee-8998-031f594a66b4\" ]\n    } ], [ {\n      \"dataGroupType\" : \"ARRANGEMENTS\",\n      \"dataGroupIds\" : [ \"f6677897-7a75-4bd5-8fc4-25695ca5b4de\" ]\n    } ] ]\n  }, {\n    \"permissions\" : [ {\n      \"resourceName\" : \"Payments\",\n      \"functionName\" : \"Domestic Payments\",\n      \"privileges\" : [ \"create\" ]\n    } ],\n    \"dataGroups\" : [ [ {\n      \"dataGroupType\" : \"ARRANGEMENTS\",\n      \"dataGroupIds\" : [ \"f6677897-7a75-4bd5-8fc4-25695ca5b4de\" ]\n    } ] ]\n  } ],\n  \"dataGroupsData\" : [ {\n    \"dataGroupId\" : \"a9393b23-62f5-4f07-ae8f-ba0dbea86c36\",\n    \"dataItemIds\" : [ \"d308ae19-d170-4967-b185-dceb8d356cfa\" ]\n  }, {\n    \"dataGroupId\" : \"a29c3cf2-9bda-41ee-8998-031f594a66b4\",\n    \"dataItemIds\" : [ \"66893fed-bbbb-42d6-a5c3-320b6d4a781f\" ]\n  }, {\n    \"dataGroupId\" : \"f6677897-7a75-4bd5-8fc4-25695ca5b4de\",\n    \"dataItemIds\" : [ \"d0c8dd02-99be-46e9-8ff0-8021a71552a7\" ]\n  } ]\n}\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/usercontext/serviceagreements\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"a1198a205a404eb7b47fa553db920429\",\n  \"name\" : \"Online Banking Service Agreement\",\n  \"description\" : \"Service Agreement between Online Banking and Backbase\",\n  \"isMaster\" : false\n}, {\n  \"id\" : \"37115f7b556a4e11ba0bfd07e2567b1d\",\n  \"name\" : \"Doe Corporation Service Agreement\",\n  \"description\" : \"Service Agreement for Doe Corp.\",\n  \"isMaster\" : true\n} ]\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/usercontext\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n    ]\n},\n]\n);\n\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ArrangementPrivilegesGetResponseBody } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { PresentationUserDataItemPermission } from '../model/models';\nimport { PrivilegesGetResponseBody } from '../model/models';\nimport { UserPermissionsSummaryGetResponseBody } from '../model/models';\nimport { UsersByPermission } from '../model/models';\n\nimport { ACCESS_CONTROL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AccessControlConfiguration }                                     from '../configuration';\n\n\nexport interface GetArrangementUserPermissionCheckRequestParams {\n    /** Arrangement ID */\n    [\"id\"]: string;\n    /** Resource name. */\n    [\"resource\"]: string;\n    /** function name. */\n    [\"function\"]: string;\n    /** Privilege name. */\n    [\"privilege\"]: string;\n}\n\nexport interface GetArrangementUserPrivilegesRequestParams {\n    /** Name of function */\n    [\"functionName\"]: string;\n    /** Name of resource */\n    [\"resourceName\"]: string;\n    /** Name of privilege */\n    [\"privilegeName\"]?: string;\n}\n\nexport interface GetCheckUserPermissionRequestParams {\n    /** Name of Function */\n    [\"functionName\"]: string;\n    /** Name of Resource */\n    [\"resourceName\"]: string;\n    /** comma-separated privileges. */\n    [\"privileges\"]: string;\n}\n\nexport interface GetDataItemPermissionsContextRequestParams {\n    /** Name of Function */\n    [\"functionName\"]?: string;\n    /** Name of Resource */\n    [\"resourceName\"]?: string;\n    /** Name of the privilege */\n    [\"privilege\"]?: string;\n    /** Name of the data group type */\n    [\"dataGroupType\"]?: string;\n    /** Id of the data item */\n    [\"dataItemId\"]?: string;\n}\n\nexport interface GetUserPrivilegesRequestParams {\n    /** Name of Function */\n    [\"functionName\"]: string;\n    /** Name of Resource */\n    [\"resourceName\"]: string;\n}\n\nexport interface GetUsersByPermissionsRequestParams {\n    /** Function name. */\n    [\"functionName\"]: string;\n    /** Service Agreement ID */\n    [\"serviceAgreementId\"]?: string;\n    /** Name of the privilege */\n    [\"privilege\"]?: string;\n    /** Name of the data group type */\n    [\"dataGroupType\"]?: string;\n    /** Id of the data item */\n    [\"dataItemId\"]?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersHttpService {\n\n    protected basePath = '/access-control';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AccessControlConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACCESS_CONTROL_BASE_PATH) basePath: string, @Optional() configuration: AccessControlConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Arrangement permission check.\n     * # Arrangement permission check.    Checks permissions for a single arrangement item.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getArrangementUserPermissionCheck(requestParameters: GetArrangementUserPermissionCheckRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Arrangement permission check.\n     * # Arrangement permission check.    Checks permissions for a single arrangement item.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getArrangementUserPermissionCheck(requestParameters: GetArrangementUserPermissionCheckRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Arrangement permission check.\n     * # Arrangement permission check.    Checks permissions for a single arrangement item.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getArrangementUserPermissionCheck(requestParameters: GetArrangementUserPermissionCheckRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Arrangement permission check.\n     * # Arrangement permission check.    Checks permissions for a single arrangement item.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getArrangementUserPermissionCheck(requestParameters: GetArrangementUserPermissionCheckRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getArrangementUserPermissionCheck.');\n        }\n        const _resource = requestParameters[\"resource\"];\n        if (_resource === null || _resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getArrangementUserPermissionCheck.');\n        }\n        const _function = requestParameters[\"function\"];\n        if (_function === null || _function === undefined) {\n            throw new Error('Required parameter function was null or undefined when calling getArrangementUserPermissionCheck.');\n        }\n        const _privilege = requestParameters[\"privilege\"];\n        if (_privilege === null || _privilege === undefined) {\n            throw new Error('Required parameter privilege was null or undefined when calling getArrangementUserPermissionCheck.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_resource !== undefined && _resource !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resource, 'resource');\n        }\n        if (_function !== undefined && _function !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_function, 'function');\n        }\n        if (_privilege !== undefined && _privilege !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilege, 'privilege');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/users/user-privileges/arrangements/${encodeURIComponent(String(_id))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getArrangementUserPermissionCheckUrl(requestParameters: GetArrangementUserPermissionCheckRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getArrangementUserPermissionCheck.');\n        }\n        const _resource = requestParameters[\"resource\"];\n        if (_resource === null || _resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getArrangementUserPermissionCheck.');\n        }\n        const _function = requestParameters[\"function\"];\n        if (_function === null || _function === undefined) {\n            throw new Error('Required parameter function was null or undefined when calling getArrangementUserPermissionCheck.');\n        }\n        const _privilege = requestParameters[\"privilege\"];\n        if (_privilege === null || _privilege === undefined) {\n            throw new Error('Required parameter privilege was null or undefined when calling getArrangementUserPermissionCheck.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_resource !== undefined && _resource !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resource, 'resource');\n        }\n        if (_function !== undefined && _function !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_function, 'function');\n        }\n        if (_privilege !== undefined && _privilege !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilege, 'privilege');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/users/user-privileges/arrangements/${encodeURIComponent(String(_id))}${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * List Arrangements that user has access to - &#x60;GET&#x60;.\n     * # List Arrangements that user has access to - &#x60;GET&#x60;    Provides (retrieve) list of Arrangements along with appropriate privilege(s) that given User has access to.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.GetArrangementPrivilegesRoute  * Route Id: GetArrangementPrivilegesRoute  * Route source endpoint: direct:business.GetArrangementPrivileges  * Route destination endpoint: direct:getArrangementPrivilegesRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getArrangementUserPrivileges(requestParameters: GetArrangementUserPrivilegesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ArrangementPrivilegesGetResponseBody>>;\n    /**\n     * List Arrangements that user has access to - &#x60;GET&#x60;.\n     * # List Arrangements that user has access to - &#x60;GET&#x60;    Provides (retrieve) list of Arrangements along with appropriate privilege(s) that given User has access to.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.GetArrangementPrivilegesRoute  * Route Id: GetArrangementPrivilegesRoute  * Route source endpoint: direct:business.GetArrangementPrivileges  * Route destination endpoint: direct:getArrangementPrivilegesRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getArrangementUserPrivileges(requestParameters: GetArrangementUserPrivilegesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ArrangementPrivilegesGetResponseBody>>>;\n    /**\n     * List Arrangements that user has access to - &#x60;GET&#x60;.\n     * # List Arrangements that user has access to - &#x60;GET&#x60;    Provides (retrieve) list of Arrangements along with appropriate privilege(s) that given User has access to.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.GetArrangementPrivilegesRoute  * Route Id: GetArrangementPrivilegesRoute  * Route source endpoint: direct:business.GetArrangementPrivileges  * Route destination endpoint: direct:getArrangementPrivilegesRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getArrangementUserPrivileges(requestParameters: GetArrangementUserPrivilegesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ArrangementPrivilegesGetResponseBody>>>;\n    /**\n     * List Arrangements that user has access to - &#x60;GET&#x60;.\n     * # List Arrangements that user has access to - &#x60;GET&#x60;    Provides (retrieve) list of Arrangements along with appropriate privilege(s) that given User has access to.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.GetArrangementPrivilegesRoute  * Route Id: GetArrangementPrivilegesRoute  * Route source endpoint: direct:business.GetArrangementPrivileges  * Route destination endpoint: direct:getArrangementPrivilegesRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getArrangementUserPrivileges(requestParameters: GetArrangementUserPrivilegesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _functionName = requestParameters[\"functionName\"];\n        if (_functionName === null || _functionName === undefined) {\n            throw new Error('Required parameter functionName was null or undefined when calling getArrangementUserPrivileges.');\n        }\n        const _resourceName = requestParameters[\"resourceName\"];\n        if (_resourceName === null || _resourceName === undefined) {\n            throw new Error('Required parameter resourceName was null or undefined when calling getArrangementUserPrivileges.');\n        }\n        const _privilegeName = requestParameters[\"privilegeName\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_resourceName !== undefined && _resourceName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resourceName, 'resourceName');\n        }\n        if (_privilegeName !== undefined && _privilegeName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilegeName, 'privilegeName');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ArrangementPrivilegesGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/users/user-privileges/arrangements`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getArrangementUserPrivilegesUrl(requestParameters: GetArrangementUserPrivilegesRequestParams): string {\n        const _functionName = requestParameters[\"functionName\"];\n        if (_functionName === null || _functionName === undefined) {\n            throw new Error('Required parameter functionName was null or undefined when calling getArrangementUserPrivileges.');\n        }\n        const _resourceName = requestParameters[\"resourceName\"];\n        if (_resourceName === null || _resourceName === undefined) {\n            throw new Error('Required parameter resourceName was null or undefined when calling getArrangementUserPrivileges.');\n        }\n        const _privilegeName = requestParameters[\"privilegeName\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_resourceName !== undefined && _resourceName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resourceName, 'resourceName');\n        }\n        if (_privilegeName !== undefined && _privilegeName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilegeName, 'privilegeName');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/users/user-privileges/arrangements${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Check if User is allowed to perform given action - &#x60;GET&#x60;.\n     * # Check if User is allowed to perform given action - &#x60;GET&#x60;    Checks if the user has the specific privileges for given business function.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ValidatePermissionsRoute  * Route Id: ValidatePermissionsRoute  * Route source endpoint: direct:business.ValidatePermissions  * Route destination endpoint: direct:validatePermissionsRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCheckUserPermission(requestParameters: GetCheckUserPermissionRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Check if User is allowed to perform given action - &#x60;GET&#x60;.\n     * # Check if User is allowed to perform given action - &#x60;GET&#x60;    Checks if the user has the specific privileges for given business function.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ValidatePermissionsRoute  * Route Id: ValidatePermissionsRoute  * Route source endpoint: direct:business.ValidatePermissions  * Route destination endpoint: direct:validatePermissionsRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCheckUserPermission(requestParameters: GetCheckUserPermissionRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Check if User is allowed to perform given action - &#x60;GET&#x60;.\n     * # Check if User is allowed to perform given action - &#x60;GET&#x60;    Checks if the user has the specific privileges for given business function.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ValidatePermissionsRoute  * Route Id: ValidatePermissionsRoute  * Route source endpoint: direct:business.ValidatePermissions  * Route destination endpoint: direct:validatePermissionsRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCheckUserPermission(requestParameters: GetCheckUserPermissionRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Check if User is allowed to perform given action - &#x60;GET&#x60;.\n     * # Check if User is allowed to perform given action - &#x60;GET&#x60;    Checks if the user has the specific privileges for given business function.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ValidatePermissionsRoute  * Route Id: ValidatePermissionsRoute  * Route source endpoint: direct:business.ValidatePermissions  * Route destination endpoint: direct:validatePermissionsRequestedInternal  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCheckUserPermission(requestParameters: GetCheckUserPermissionRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _functionName = requestParameters[\"functionName\"];\n        if (_functionName === null || _functionName === undefined) {\n            throw new Error('Required parameter functionName was null or undefined when calling getCheckUserPermission.');\n        }\n        const _resourceName = requestParameters[\"resourceName\"];\n        if (_resourceName === null || _resourceName === undefined) {\n            throw new Error('Required parameter resourceName was null or undefined when calling getCheckUserPermission.');\n        }\n        const _privileges = requestParameters[\"privileges\"];\n        if (_privileges === null || _privileges === undefined) {\n            throw new Error('Required parameter privileges was null or undefined when calling getCheckUserPermission.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_resourceName !== undefined && _resourceName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resourceName, 'resourceName');\n        }\n        if (_privileges !== undefined && _privileges !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privileges, 'privileges');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/client-api/v2/accessgroups/users/user-permissions`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCheckUserPermissionUrl(requestParameters: GetCheckUserPermissionRequestParams): string {\n        const _functionName = requestParameters[\"functionName\"];\n        if (_functionName === null || _functionName === undefined) {\n            throw new Error('Required parameter functionName was null or undefined when calling getCheckUserPermission.');\n        }\n        const _resourceName = requestParameters[\"resourceName\"];\n        if (_resourceName === null || _resourceName === undefined) {\n            throw new Error('Required parameter resourceName was null or undefined when calling getCheckUserPermission.');\n        }\n        const _privileges = requestParameters[\"privileges\"];\n        if (_privileges === null || _privileges === undefined) {\n            throw new Error('Required parameter privileges was null or undefined when calling getCheckUserPermission.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_resourceName !== undefined && _resourceName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resourceName, 'resourceName');\n        }\n        if (_privileges !== undefined && _privileges !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privileges, 'privileges');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/users/user-permissions${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Get Data Item Permissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataItemPermissionsContext(requestParameters: GetDataItemPermissionsContextRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<PresentationUserDataItemPermission>>;\n    /**\n     * Get Data Item Permissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataItemPermissionsContext(requestParameters: GetDataItemPermissionsContextRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<PresentationUserDataItemPermission>>>;\n    /**\n     * Get Data Item Permissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataItemPermissionsContext(requestParameters: GetDataItemPermissionsContextRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<PresentationUserDataItemPermission>>>;\n    /**\n     * Get Data Item Permissions\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDataItemPermissionsContext(requestParameters: GetDataItemPermissionsContextRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _functionName = requestParameters[\"functionName\"];\n        const _resourceName = requestParameters[\"resourceName\"];\n        const _privilege = requestParameters[\"privilege\"];\n        const _dataGroupType = requestParameters[\"dataGroupType\"];\n        const _dataItemId = requestParameters[\"dataItemId\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_resourceName !== undefined && _resourceName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resourceName, 'resourceName');\n        }\n        if (_privilege !== undefined && _privilege !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilege, 'privilege');\n        }\n        if (_dataGroupType !== undefined && _dataGroupType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_dataGroupType, 'dataGroupType');\n        }\n        if (_dataItemId !== undefined && _dataItemId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_dataItemId, 'dataItemId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<PresentationUserDataItemPermission>>(`${this.configuration.basePath}/client-api/v2/accessgroups/users/data-item-permissions`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getDataItemPermissionsContextUrl(requestParameters: GetDataItemPermissionsContextRequestParams): string {\n        const _functionName = requestParameters[\"functionName\"];\n        const _resourceName = requestParameters[\"resourceName\"];\n        const _privilege = requestParameters[\"privilege\"];\n        const _dataGroupType = requestParameters[\"dataGroupType\"];\n        const _dataItemId = requestParameters[\"dataItemId\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_resourceName !== undefined && _resourceName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resourceName, 'resourceName');\n        }\n        if (_privilege !== undefined && _privilege !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilege, 'privilege');\n        }\n        if (_dataGroupType !== undefined && _dataGroupType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_dataGroupType, 'dataGroupType');\n        }\n        if (_dataItemId !== undefined && _dataItemId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_dataItemId, 'dataItemId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/users/data-item-permissions${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * User Permissions Summary - &#x60;GET&#x60;.\n     * # User Permissions Summary - &#x60;GET&#x60;    Returns aggregated summary of user permissions.  Returned data structure will contain all allowed Resources + Business Functions + Permissions.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.GetUserPrivilegesSummaryRoute  * Route Id: GetUserPrivilegesSummaryRoute  * Route source endpoint: direct:business.getUserPrivilegesSummary  * Route destination endpoint: direct:getUserPrivilegesSummaryRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserPermissionsSummary(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<UserPermissionsSummaryGetResponseBody>>;\n    /**\n     * User Permissions Summary - &#x60;GET&#x60;.\n     * # User Permissions Summary - &#x60;GET&#x60;    Returns aggregated summary of user permissions.  Returned data structure will contain all allowed Resources + Business Functions + Permissions.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.GetUserPrivilegesSummaryRoute  * Route Id: GetUserPrivilegesSummaryRoute  * Route source endpoint: direct:business.getUserPrivilegesSummary  * Route destination endpoint: direct:getUserPrivilegesSummaryRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserPermissionsSummary(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<UserPermissionsSummaryGetResponseBody>>>;\n    /**\n     * User Permissions Summary - &#x60;GET&#x60;.\n     * # User Permissions Summary - &#x60;GET&#x60;    Returns aggregated summary of user permissions.  Returned data structure will contain all allowed Resources + Business Functions + Permissions.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.GetUserPrivilegesSummaryRoute  * Route Id: GetUserPrivilegesSummaryRoute  * Route source endpoint: direct:business.getUserPrivilegesSummary  * Route destination endpoint: direct:getUserPrivilegesSummaryRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserPermissionsSummary(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<UserPermissionsSummaryGetResponseBody>>>;\n    /**\n     * User Permissions Summary - &#x60;GET&#x60;.\n     * # User Permissions Summary - &#x60;GET&#x60;    Returns aggregated summary of user permissions.  Returned data structure will contain all allowed Resources + Business Functions + Permissions.    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.GetUserPrivilegesSummaryRoute  * Route Id: GetUserPrivilegesSummaryRoute  * Route source endpoint: direct:business.getUserPrivilegesSummary  * Route destination endpoint: direct:getUserPrivilegesSummaryRequestedInternal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserPermissionsSummary(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<UserPermissionsSummaryGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/users/permissions/summary`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUserPermissionsSummaryUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/users/permissions/summary`;\n    }\n\n    /**\n     * List User privileges for given Business function - &#x60;GET&#x60;.\n     * # List User privileges for given Business function - &#x60;GET&#x60;    Provides a list of user privileges for given business function (eg. Contacts).    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ListPrivilegesRoute  * Route Id: ListPrivilegesRoute  * Route source endpoint: direct:business.ListPrivileges  * Route destination endpoint: direct:listPrivilegesRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserPrivileges(requestParameters: GetUserPrivilegesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<PrivilegesGetResponseBody>>;\n    /**\n     * List User privileges for given Business function - &#x60;GET&#x60;.\n     * # List User privileges for given Business function - &#x60;GET&#x60;    Provides a list of user privileges for given business function (eg. Contacts).    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ListPrivilegesRoute  * Route Id: ListPrivilegesRoute  * Route source endpoint: direct:business.ListPrivileges  * Route destination endpoint: direct:listPrivilegesRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserPrivileges(requestParameters: GetUserPrivilegesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<PrivilegesGetResponseBody>>>;\n    /**\n     * List User privileges for given Business function - &#x60;GET&#x60;.\n     * # List User privileges for given Business function - &#x60;GET&#x60;    Provides a list of user privileges for given business function (eg. Contacts).    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ListPrivilegesRoute  * Route Id: ListPrivilegesRoute  * Route source endpoint: direct:business.ListPrivileges  * Route destination endpoint: direct:listPrivilegesRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserPrivileges(requestParameters: GetUserPrivilegesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<PrivilegesGetResponseBody>>>;\n    /**\n     * List User privileges for given Business function - &#x60;GET&#x60;.\n     * # List User privileges for given Business function - &#x60;GET&#x60;    Provides a list of user privileges for given business function (eg. Contacts).    ###Extendability    Extendable using Apache Camel:    * Route Class: com.backbase.presentation.services.accessgroups.routes.useraccess.ListPrivilegesRoute  * Route Id: ListPrivilegesRoute  * Route source endpoint: direct:business.ListPrivileges  * Route destination endpoint: direct:listPrivilegesRequestedInternal\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserPrivileges(requestParameters: GetUserPrivilegesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _functionName = requestParameters[\"functionName\"];\n        if (_functionName === null || _functionName === undefined) {\n            throw new Error('Required parameter functionName was null or undefined when calling getUserPrivileges.');\n        }\n        const _resourceName = requestParameters[\"resourceName\"];\n        if (_resourceName === null || _resourceName === undefined) {\n            throw new Error('Required parameter resourceName was null or undefined when calling getUserPrivileges.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_resourceName !== undefined && _resourceName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resourceName, 'resourceName');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<PrivilegesGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/accessgroups/users/user-privileges`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUserPrivilegesUrl(requestParameters: GetUserPrivilegesRequestParams): string {\n        const _functionName = requestParameters[\"functionName\"];\n        if (_functionName === null || _functionName === undefined) {\n            throw new Error('Required parameter functionName was null or undefined when calling getUserPrivileges.');\n        }\n        const _resourceName = requestParameters[\"resourceName\"];\n        if (_resourceName === null || _resourceName === undefined) {\n            throw new Error('Required parameter resourceName was null or undefined when calling getUserPrivileges.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_resourceName !== undefined && _resourceName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resourceName, 'resourceName');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/users/user-privileges${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Users By Permissons - &#x60;GET&#x60;.\n     * # Users By Permissons - &#x60;GET&#x60;    Provides list of internal user ids filtered by permissions in service agreement    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetUsersByPermissionsFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsersByPermissions(requestParameters: GetUsersByPermissionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<UsersByPermission>;\n    /**\n     * Users By Permissons - &#x60;GET&#x60;.\n     * # Users By Permissons - &#x60;GET&#x60;    Provides list of internal user ids filtered by permissions in service agreement    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetUsersByPermissionsFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsersByPermissions(requestParameters: GetUsersByPermissionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<UsersByPermission>>;\n    /**\n     * Users By Permissons - &#x60;GET&#x60;.\n     * # Users By Permissons - &#x60;GET&#x60;    Provides list of internal user ids filtered by permissions in service agreement    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetUsersByPermissionsFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsersByPermissions(requestParameters: GetUsersByPermissionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<UsersByPermission>>;\n    /**\n     * Users By Permissons - &#x60;GET&#x60;.\n     * # Users By Permissons - &#x60;GET&#x60;    Provides list of internal user ids filtered by permissions in service agreement    ###Extendability    Extendable using REST endpoint handler:     * Extending handler class: com.backbase.presentation.services.accessgroups.business.flows.GetUsersByPermissionsFlow  \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsersByPermissions(requestParameters: GetUsersByPermissionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _functionName = requestParameters[\"functionName\"];\n        if (_functionName === null || _functionName === undefined) {\n            throw new Error('Required parameter functionName was null or undefined when calling getUsersByPermissions.');\n        }\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _privilege = requestParameters[\"privilege\"];\n        const _dataGroupType = requestParameters[\"dataGroupType\"];\n        const _dataItemId = requestParameters[\"dataItemId\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_privilege !== undefined && _privilege !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilege, 'privilege');\n        }\n        if (_dataGroupType !== undefined && _dataGroupType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_dataGroupType, 'dataGroupType');\n        }\n        if (_dataItemId !== undefined && _dataItemId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_dataItemId, 'dataItemId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<UsersByPermission>(`${this.configuration.basePath}/client-api/v2/accessgroups/users/by-permissions`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUsersByPermissionsUrl(requestParameters: GetUsersByPermissionsRequestParams): string {\n        const _functionName = requestParameters[\"functionName\"];\n        if (_functionName === null || _functionName === undefined) {\n            throw new Error('Required parameter functionName was null or undefined when calling getUsersByPermissions.');\n        }\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _privilege = requestParameters[\"privilege\"];\n        const _dataGroupType = requestParameters[\"dataGroupType\"];\n        const _dataItemId = requestParameters[\"dataItemId\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_functionName !== undefined && _functionName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_functionName, 'functionName');\n        }\n        if (_privilege !== undefined && _privilege !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_privilege, 'privilege');\n        }\n        if (_dataGroupType !== undefined && _dataGroupType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_dataGroupType, 'dataGroupType');\n        }\n        if (_dataItemId !== undefined && _dataItemId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_dataItemId, 'dataItemId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/accessgroups/users/by-permissions${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/users/user-privileges/arrangements/{id} URL pattern\n*/\nexport const UsersHttpServiceGetArrangementUserPermissionCheckMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/user-privileges/arrangements/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/users/user-privileges/arrangements URL pattern\n*/\nexport const UsersHttpServiceGetArrangementUserPrivilegesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/user-privileges/arrangements\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"arrangementId\" : \"9fa0961eb3d04dd3a5e48748d27e7275\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\"\n  } ]\n}, {\n  \"arrangementId\" : \"149f7e8d26904fc38bd0fdfc83394116\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\"\n  } ]\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/users/user-permissions URL pattern\n*/\nexport const UsersHttpServiceGetCheckUserPermissionMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/user-permissions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/users/data-item-permissions URL pattern\n*/\nexport const UsersHttpServiceGetDataItemPermissionsContextMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/data-item-permissions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"dataItem\" : {\n    \"id\" : \"9fa0961eb3d04dd3a5e48748d27e7275\",\n    \"dataType\" : \"ARRANGEMENTS\"\n  },\n  \"permissions\" : [ {\n    \"resource\" : \"Payments\",\n    \"businessFunction\" : \"SEPA CT\",\n    \"privileges\" : [ \"view\" ]\n  }, {\n    \"resource\" : \"Payments\",\n    \"businessFunction\" : \"Domestic Payments\",\n    \"privileges\" : [ \"view\", \"create\" ]\n  } ]\n}, {\n  \"dataItem\" : {\n    \"id\" : \"9fa0961eb3d046d3a5e48748d27e7275\",\n    \"dataType\" : \"ARRANGEMENTS\"\n  },\n  \"permissions\" : [ {\n    \"resource\" : \"Payments\",\n    \"businessFunction\" : \"Domestic Payments\",\n    \"privileges\" : [ \"approve\" ]\n  } ]\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/users/permissions/summary URL pattern\n*/\nexport const UsersHttpServiceGetUserPermissionsSummaryMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/permissions/summary\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"resource\" : \"Contacts\",\n  \"function\" : \"Contacts\",\n  \"permissions\" : {\n    \"view\" : true,\n    \"edit\" : true\n  }\n}, {\n  \"resource\" : \"Payments\",\n  \"function\" : \"US Domestic Wire\",\n  \"permissions\" : {\n    \"create\" : true,\n    \"view\" : true,\n    \"approve\" : true\n  }\n}, {\n  \"resource\" : \"Payments\",\n  \"function\" : \"US Foreign Wire\",\n  \"permissions\" : {\n    \"create\" : true,\n    \"view\" : true,\n    \"approve\" : true\n  }\n}, {\n  \"resource\" : \"Payments\",\n  \"function\" : \"SEPA CT\",\n  \"permissions\" : {\n    \"create\" : true,\n    \"view\" : true,\n    \"approve\" : true\n  }\n}, {\n  \"resource\" : \"Entitlements\",\n  \"function\" : \"Manage Data Groups\",\n  \"permissions\" : {\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Entitlements\",\n  \"function\" : \"Manage Function Groups\",\n  \"permissions\" : {\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Limits\",\n  \"function\" : \"Manage Limits\",\n  \"permissions\" : {\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Actions\",\n  \"function\" : \"Manage Action Recipes\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"User\",\n  \"function\" : \"Manage Users\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Service Agreement\",\n  \"function\" : \"Assign Users\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Service Agreement\",\n  \"function\" : \"Assign Permissions\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true,\n    \"approve\" : true\n  }\n}, {\n  \"resource\" : \"Service Agreement\",\n  \"function\" : \"Manage Service Agreements\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Legal Entity\",\n  \"function\" : \"Manage Legal Entities\",\n  \"permissions\" : {\n    \"view\" : true\n  }\n}, {\n  \"resource\" : \"Approvals\",\n  \"function\" : \"Assign Approval Policies\",\n  \"permissions\" : {\n    \"create\" : true,\n    \"delete\" : true,\n    \"edit\" : true,\n    \"view\" : true\n  }\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/users/user-privileges URL pattern\n*/\nexport const UsersHttpServiceGetUserPrivilegesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/user-privileges\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"privilege\" : \"execute\"\n}, {\n  \"privilege\" : \"read\"\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /access-control/client-api/v2/accessgroups/users/by-permissions URL pattern\n*/\nexport const UsersHttpServiceGetUsersByPermissionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/by-permissions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"userIds\" : [ \"4e4def6f-d7dc-40ef-9031-3a62938a859c\", \"f7552b61-5f17-45d4-bdbe-fa3a12217bdd\" ]\n}\n                },\n    ]\n}]);\n\nexport const UsersHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/user-privileges/arrangements/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/user-privileges/arrangements\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"arrangementId\" : \"9fa0961eb3d04dd3a5e48748d27e7275\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\"\n  } ]\n}, {\n  \"arrangementId\" : \"149f7e8d26904fc38bd0fdfc83394116\",\n  \"privileges\" : [ {\n    \"privilege\" : \"view\"\n  } ]\n} ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/user-permissions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/data-item-permissions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"dataItem\" : {\n    \"id\" : \"9fa0961eb3d04dd3a5e48748d27e7275\",\n    \"dataType\" : \"ARRANGEMENTS\"\n  },\n  \"permissions\" : [ {\n    \"resource\" : \"Payments\",\n    \"businessFunction\" : \"SEPA CT\",\n    \"privileges\" : [ \"view\" ]\n  }, {\n    \"resource\" : \"Payments\",\n    \"businessFunction\" : \"Domestic Payments\",\n    \"privileges\" : [ \"view\", \"create\" ]\n  } ]\n}, {\n  \"dataItem\" : {\n    \"id\" : \"9fa0961eb3d046d3a5e48748d27e7275\",\n    \"dataType\" : \"ARRANGEMENTS\"\n  },\n  \"permissions\" : [ {\n    \"resource\" : \"Payments\",\n    \"businessFunction\" : \"Domestic Payments\",\n    \"privileges\" : [ \"approve\" ]\n  } ]\n} ]\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/permissions/summary\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"resource\" : \"Contacts\",\n  \"function\" : \"Contacts\",\n  \"permissions\" : {\n    \"view\" : true,\n    \"edit\" : true\n  }\n}, {\n  \"resource\" : \"Payments\",\n  \"function\" : \"US Domestic Wire\",\n  \"permissions\" : {\n    \"create\" : true,\n    \"view\" : true,\n    \"approve\" : true\n  }\n}, {\n  \"resource\" : \"Payments\",\n  \"function\" : \"US Foreign Wire\",\n  \"permissions\" : {\n    \"create\" : true,\n    \"view\" : true,\n    \"approve\" : true\n  }\n}, {\n  \"resource\" : \"Payments\",\n  \"function\" : \"SEPA CT\",\n  \"permissions\" : {\n    \"create\" : true,\n    \"view\" : true,\n    \"approve\" : true\n  }\n}, {\n  \"resource\" : \"Entitlements\",\n  \"function\" : \"Manage Data Groups\",\n  \"permissions\" : {\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Entitlements\",\n  \"function\" : \"Manage Function Groups\",\n  \"permissions\" : {\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Limits\",\n  \"function\" : \"Manage Limits\",\n  \"permissions\" : {\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Actions\",\n  \"function\" : \"Manage Action Recipes\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"User\",\n  \"function\" : \"Manage Users\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Service Agreement\",\n  \"function\" : \"Assign Users\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Service Agreement\",\n  \"function\" : \"Assign Permissions\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true,\n    \"approve\" : true\n  }\n}, {\n  \"resource\" : \"Service Agreement\",\n  \"function\" : \"Manage Service Agreements\",\n  \"permissions\" : {\n    \"execute\" : true,\n    \"view\" : true,\n    \"edit\" : true,\n    \"create\" : true,\n    \"delete\" : true\n  }\n}, {\n  \"resource\" : \"Legal Entity\",\n  \"function\" : \"Manage Legal Entities\",\n  \"permissions\" : {\n    \"view\" : true\n  }\n}, {\n  \"resource\" : \"Approvals\",\n  \"function\" : \"Assign Approval Policies\",\n  \"permissions\" : {\n    \"create\" : true,\n    \"delete\" : true,\n    \"edit\" : true,\n    \"view\" : true\n  }\n} ]\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/user-privileges\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"privilege\" : \"execute\"\n}, {\n  \"privilege\" : \"read\"\n} ]\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/access-control/client-api/v2/accessgroups/users/by-permissions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"userIds\" : [ \"4e4def6f-d7dc-40ef-9031-3a62938a859c\", \"f7552b61-5f17-45d4-bdbe-fa3a12217bdd\" ]\n}\n            },\n\n\n    ]\n},\n]\n);\n\n\n","/**\n * Access Control client API\n * Manage user permissions, data groups, function groups and service agreements from client side\n *\n * The version of the OpenAPI document: 2.10.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationApprovalStatus } from '../model/models';\nimport { WizardUsersPermissionsSetup } from '../model/models';\n\nimport { ACCESS_CONTROL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AccessControlConfiguration }                                     from '../configuration';\n\n\nexport interface PostWizardSetupRequestParams {\n    /** Service Agreement ID */\n    [\"serviceAgreementId\"]: string;\n    /** Wizard payload example  */\n    [\"wizardUsersPermissionsSetup\"]?: WizardUsersPermissionsSetup;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WizardHttpService {\n\n    protected basePath = '/access-control';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AccessControlConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACCESS_CONTROL_BASE_PATH) basePath: string, @Optional() configuration: AccessControlConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Assign permissions for users in service agreement\n     * # Assign permissions for users in a service agreement. - &#x60;POST&#x60;. Assign permissions, create DataGroups and Limits for specified users in service agreement. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postWizardSetup(requestParameters: PostWizardSetupRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationApprovalStatus>;\n    /**\n     * Assign permissions for users in service agreement\n     * # Assign permissions for users in a service agreement. - &#x60;POST&#x60;. Assign permissions, create DataGroups and Limits for specified users in service agreement. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postWizardSetup(requestParameters: PostWizardSetupRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationApprovalStatus>>;\n    /**\n     * Assign permissions for users in service agreement\n     * # Assign permissions for users in a service agreement. - &#x60;POST&#x60;. Assign permissions, create DataGroups and Limits for specified users in service agreement. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postWizardSetup(requestParameters: PostWizardSetupRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationApprovalStatus>>;\n    /**\n     * Assign permissions for users in service agreement\n     * # Assign permissions for users in a service agreement. - &#x60;POST&#x60;. Assign permissions, create DataGroups and Limits for specified users in service agreement. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postWizardSetup(requestParameters: PostWizardSetupRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling postWizardSetup.');\n        }\n        const _wizardUsersPermissionsSetup = requestParameters[\"wizardUsersPermissionsSetup\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationApprovalStatus>(`${this.configuration.basePath}/client-api/v2/wizard/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/setup`,\n            _wizardUsersPermissionsSetup,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postWizardSetupUrl(requestParameters: PostWizardSetupRequestParams): string {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {\n            throw new Error('Required parameter serviceAgreementId was null or undefined when calling postWizardSetup.');\n        }\n        const _wizardUsersPermissionsSetup = requestParameters[\"wizardUsersPermissionsSetup\"];\n        return `${this.configuration.basePath}/client-api/v2/wizard/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/setup`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /access-control/client-api/v2/wizard/service-agreements/{serviceAgreementId}/setup URL pattern\n*/\nexport const WizardHttpServicePostWizardSetupMocksProvider: Provider = createMocks([{\n        urlPattern: \"/access-control/client-api/v2/wizard/service-agreements/{serviceAgreementId}/setup\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalStatus\" : \"PENDING\"\n}\n                },\n    ]\n}]);\n\nexport const WizardHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/access-control/client-api/v2/wizard/service-agreements/{serviceAgreementId}/setup\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvalStatus\" : \"PENDING\"\n}\n            },\n\n\n\n    ]\n},\n]\n);\n\n\n"],"names":["InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}