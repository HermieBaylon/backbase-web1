import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { PresentationApprovalItem } from '../model/models';
import { PresentationApprovalStatus } from '../model/models';
import { PresentationDataGroupApprovalDetailsItem } from '../model/models';
import { PresentationFunctionGroupApprovalDetailsItem } from '../model/models';
import { PresentationPermissionsApprovalDetailsItem } from '../model/models';
import { ServiceAgreeementApprovalDetailsItem } from '../model/models';
import { WizardApprovalDetails } from '../model/models';
import { AccessControlConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetApprovalsRequestParams {
    ["from"]?: number;
    ["cursor"]?: string;
    ["size"]?: number;
}
export interface GetPresentationDataGroupApprovalDetailsItemRequestParams {
    ["approvalId"]: string;
}
export interface GetPresentationFunctionGroupApprovalDetailsItemRequestParams {
    ["approvalId"]: string;
}
export interface GetPresentationPermissionsApprovalDetailsItemRequestParams {
    ["approvalId"]: string;
}
export interface GetServiceAgreementApprovalDetailsItemRequestParams {
    ["approvalId"]: string;
}
export interface GetWizardApprovalDetailsRequestParams {
    ["approvalId"]: string;
}
export interface PostApproveApprovalRequestRequestParams {
    ["approvalId"]: string;
}
export interface PostRejectApprovalRequestRequestParams {
    ["approvalId"]: string;
}
export declare class ApprovalsHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: AccessControlConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: AccessControlConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<Array<PresentationApprovalItem>>;
    getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<Array<PresentationApprovalItem>>>;
    getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<Array<PresentationApprovalItem>>>;
    getApprovalsUrl(requestParameters: GetApprovalsRequestParams): string;
    getPresentationDataGroupApprovalDetailsItem(requestParameters: GetPresentationDataGroupApprovalDetailsItemRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationDataGroupApprovalDetailsItem>;
    getPresentationDataGroupApprovalDetailsItem(requestParameters: GetPresentationDataGroupApprovalDetailsItemRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationDataGroupApprovalDetailsItem>>;
    getPresentationDataGroupApprovalDetailsItem(requestParameters: GetPresentationDataGroupApprovalDetailsItemRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationDataGroupApprovalDetailsItem>>;
    getPresentationDataGroupApprovalDetailsItemUrl(requestParameters: GetPresentationDataGroupApprovalDetailsItemRequestParams): string;
    getPresentationFunctionGroupApprovalDetailsItem(requestParameters: GetPresentationFunctionGroupApprovalDetailsItemRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationFunctionGroupApprovalDetailsItem>;
    getPresentationFunctionGroupApprovalDetailsItem(requestParameters: GetPresentationFunctionGroupApprovalDetailsItemRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationFunctionGroupApprovalDetailsItem>>;
    getPresentationFunctionGroupApprovalDetailsItem(requestParameters: GetPresentationFunctionGroupApprovalDetailsItemRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationFunctionGroupApprovalDetailsItem>>;
    getPresentationFunctionGroupApprovalDetailsItemUrl(requestParameters: GetPresentationFunctionGroupApprovalDetailsItemRequestParams): string;
    getPresentationPermissionsApprovalDetailsItem(requestParameters: GetPresentationPermissionsApprovalDetailsItemRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationPermissionsApprovalDetailsItem>;
    getPresentationPermissionsApprovalDetailsItem(requestParameters: GetPresentationPermissionsApprovalDetailsItemRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationPermissionsApprovalDetailsItem>>;
    getPresentationPermissionsApprovalDetailsItem(requestParameters: GetPresentationPermissionsApprovalDetailsItemRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationPermissionsApprovalDetailsItem>>;
    getPresentationPermissionsApprovalDetailsItemUrl(requestParameters: GetPresentationPermissionsApprovalDetailsItemRequestParams): string;
    getServiceAgreementApprovalDetailsItem(requestParameters: GetServiceAgreementApprovalDetailsItemRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<ServiceAgreeementApprovalDetailsItem>;
    getServiceAgreementApprovalDetailsItem(requestParameters: GetServiceAgreementApprovalDetailsItemRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<ServiceAgreeementApprovalDetailsItem>>;
    getServiceAgreementApprovalDetailsItem(requestParameters: GetServiceAgreementApprovalDetailsItemRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<ServiceAgreeementApprovalDetailsItem>>;
    getServiceAgreementApprovalDetailsItemUrl(requestParameters: GetServiceAgreementApprovalDetailsItemRequestParams): string;
    getWizardApprovalDetails(requestParameters: GetWizardApprovalDetailsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<WizardApprovalDetails>;
    getWizardApprovalDetails(requestParameters: GetWizardApprovalDetailsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<WizardApprovalDetails>>;
    getWizardApprovalDetails(requestParameters: GetWizardApprovalDetailsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<WizardApprovalDetails>>;
    getWizardApprovalDetailsUrl(requestParameters: GetWizardApprovalDetailsRequestParams): string;
    postApproveApprovalRequest(requestParameters: PostApproveApprovalRequestRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationApprovalStatus>;
    postApproveApprovalRequest(requestParameters: PostApproveApprovalRequestRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationApprovalStatus>>;
    postApproveApprovalRequest(requestParameters: PostApproveApprovalRequestRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationApprovalStatus>>;
    postApproveApprovalRequestUrl(requestParameters: PostApproveApprovalRequestRequestParams): string;
    postRejectApprovalRequest(requestParameters: PostRejectApprovalRequestRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationApprovalStatus>;
    postRejectApprovalRequest(requestParameters: PostRejectApprovalRequestRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationApprovalStatus>>;
    postRejectApprovalRequest(requestParameters: PostRejectApprovalRequestRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationApprovalStatus>>;
    postRejectApprovalRequestUrl(requestParameters: PostRejectApprovalRequestRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ApprovalsHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ApprovalsHttpService>;
}
