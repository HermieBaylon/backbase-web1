import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { PresentationApprovalStatus } from '../model/models';
import { WizardUsersPermissionsSetup } from '../model/models';
import { AccessControlConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface PostWizardSetupRequestParams {
    ["serviceAgreementId"]: string;
    ["wizardUsersPermissionsSetup"]?: WizardUsersPermissionsSetup;
}
export declare class WizardHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: AccessControlConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: AccessControlConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    postWizardSetup(requestParameters: PostWizardSetupRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationApprovalStatus>;
    postWizardSetup(requestParameters: PostWizardSetupRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationApprovalStatus>>;
    postWizardSetup(requestParameters: PostWizardSetupRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationApprovalStatus>>;
    postWizardSetupUrl(requestParameters: PostWizardSetupRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<WizardHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<WizardHttpService>;
}
