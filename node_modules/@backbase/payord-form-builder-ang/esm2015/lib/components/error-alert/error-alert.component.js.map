{"version":3,"file":"error-alert.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/error-alert/error-alert.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/error-alert/error-alert.component.html"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,MAAM,EACN,YAAY,GAEb,MAAM,eAAe,CAAC;;;;AAOvB,MAAM,OAAO,mBAAmB;IAJhC;QAUE;;WAEG;QACO,cAAS,GAAG,IAAI,YAAY,EAAU,CAAC;QAExC,YAAO,GAAG,IAAI,CAAC;KAmBzB;IAjBC,WAAW;QACT,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;;gBAC/B,KAAK,MAAM,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE;oBACnC,IAAI,KAAK,CAAC,OAAO,KAAI,MAAA,KAAK,CAAC,OAAO,0CAAE,cAAc,CAAC,OAAO,CAAC,CAAA,EAAE;wBAC3D,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC;wBACrD,MAAM,aAAa,GAAS,KAAK,CAAC,OAAQ,CAAC,OAAO,CAAC,CAAC;wBACpD,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;qBAC7D;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;;oIA7BU,mBAAmB;wHAAnB,mBAAmB,oJCbhC,kiBAiBA;4FDJa,mBAAmB;kBAJ/B,SAAS;mBAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,WAAW,EAAE,8BAA8B;iBAC5C;8BAKU,SAAS;sBAAjB,KAAK;gBAKI,SAAS;sBAAlB,MAAM","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n} from '@angular/core';\nimport { ErrorItem } from '@backbase/data-ang/payment-order';\n\n@Component({\n  selector: 'bb-error-alert',\n  templateUrl: './error-alert.component.html',\n})\nexport class ErrorAlertComponent implements OnChanges {\n  /**\n   * Collection of errors to show in alerts\n   */\n  @Input() errorList!: ErrorItem[];\n\n  /**\n   * Emitted when an alert has been closed\n   */\n  @Output() hideAlert = new EventEmitter<number>();\n\n  readonly hostRef = this;\n\n  ngOnChanges() {\n    if (this.errorList && this.errorList.length > 0) {\n      this.errorList.forEach((error) => {\n        for (const context in error.context) {\n          if (error.message && error.context?.hasOwnProperty(context)) {\n            const regEx = new RegExp('{{' + context + '}}', 'g');\n            const replacedValue = (<any>error.context)[context];\n            error.message = error.message.replace(regEx, replacedValue);\n          }\n        }\n      });\n    }\n  }\n\n  hideError(index: number) {\n    this.hideAlert.emit(index);\n  }\n}\n","<div class=\"sticky-top pt-2\">\n  <div\n    class=\"bb-block bb-block--md\"\n    *ngFor=\"let error of errorList; let ind = index\"\n    role=\"alert\"\n  >\n    <ng-content\n      *ngTemplateOutlet=\"notification; context: { error: error, id: ind }\"\n    ></ng-content>\n  </div>\n</div>\n\n<ng-template #notification let-error=\"error\" let-id=\"id\">\n  <bb-alert-ui [title]=\"''\" [dismissible]=\"true\" (close)=\"hideError(id)\">\n    <p class=\"bb-block bb-block--no-margin\">{{ error?.message }}</p>\n  </bb-alert-ui>\n</ng-template>\n"]}