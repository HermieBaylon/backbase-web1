import { Component, Input, Output, EventEmitter, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/alert";
import * as i2 from "@angular/common";
export class ErrorAlertComponent {
    constructor() {
        /**
         * Emitted when an alert has been closed
         */
        this.hideAlert = new EventEmitter();
        this.hostRef = this;
    }
    ngOnChanges() {
        if (this.errorList && this.errorList.length > 0) {
            this.errorList.forEach((error) => {
                var _a;
                for (const context in error.context) {
                    if (error.message && ((_a = error.context) === null || _a === void 0 ? void 0 : _a.hasOwnProperty(context))) {
                        const regEx = new RegExp('{{' + context + '}}', 'g');
                        const replacedValue = error.context[context];
                        error.message = error.message.replace(regEx, replacedValue);
                    }
                }
            });
        }
    }
    hideError(index) {
        this.hideAlert.emit(index);
    }
}
/** @nocollapse */ ErrorAlertComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ErrorAlertComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ErrorAlertComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ErrorAlertComponent, selector: "bb-error-alert", inputs: { errorList: "errorList" }, outputs: { hideAlert: "hideAlert" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"sticky-top pt-2\">\n  <div\n    class=\"bb-block bb-block--md\"\n    *ngFor=\"let error of errorList; let ind = index\"\n    role=\"alert\"\n  >\n    <ng-content\n      *ngTemplateOutlet=\"notification; context: { error: error, id: ind }\"\n    ></ng-content>\n  </div>\n</div>\n\n<ng-template #notification let-error=\"error\" let-id=\"id\">\n  <bb-alert-ui [title]=\"''\" [dismissible]=\"true\" (close)=\"hideError(id)\">\n    <p class=\"bb-block bb-block--no-margin\">{{ error?.message }}</p>\n  </bb-alert-ui>\n</ng-template>\n", components: [{ type: i1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ErrorAlertComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-error-alert',
                    templateUrl: './error-alert.component.html',
                }]
        }], propDecorators: { errorList: [{
                type: Input
            }], hideAlert: [{
                type: Output
            }] } });
//# sourceMappingURL=error-alert.component.js.map