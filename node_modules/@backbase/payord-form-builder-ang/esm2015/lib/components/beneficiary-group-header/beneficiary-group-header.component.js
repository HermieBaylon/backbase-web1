import { Component } from '@angular/core';
import { PaymentFormFieldHooks, resetBeneficiaryDetails, CounterPartyFields, PaymentBaseFields, InitiatorFields, HiddenFields, } from '@backbase/payment-orders-ang';
import { triggerHook } from '../../helpers/hooks-helpers';
import { registerFormControl } from '../../helpers/form-helpers';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "@angular/common";
import * as i3 from "@backbase/ui-ang/button";
export class PayordBeneficiaryGroupHeaderComponent {
    constructor() {
        this.iconName = 'clear';
    }
    ngOnInit() {
        var _a;
        this.hideBeneficiaryFieldsControl = registerFormControl(this.group, HiddenFields.hideBeneficiaryFields);
        this.initiatorIdControl = ((_a = this.group.parent) === null || _a === void 0 ? void 0 : _a.get([PaymentBaseFields.initiator, InitiatorFields.id]));
        triggerHook(PaymentFormFieldHooks.onInit, this);
    }
    onClearValues() {
        var _a, _b, _c, _d;
        const parentGroup = this.group.parent;
        const nameControl = (parentGroup.get([PaymentBaseFields.initiator, InitiatorFields.name]));
        if (nameControl.value) {
            nameControl.setErrors(null);
        }
        if (typeof ((_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.clearOptions) === null || _b === void 0 ? void 0 : _b.onClear) === 'function') {
            this.options.clearOptions.onClear(this.group);
        }
        else {
            resetBeneficiaryDetails(this.group);
        }
        (_c = this.hideBeneficiaryFieldsControl) === null || _c === void 0 ? void 0 : _c.setValue(true);
        (_d = this.initiatorIdControl) === null || _d === void 0 ? void 0 : _d.updateValueAndValidity();
    }
    showClearBtn() {
        const accountName = this.group.get(CounterPartyFields.name);
        const accountNumber = this.group.get(CounterPartyFields.accountNumber);
        const bankBranchCode = this.group.get([
            CounterPartyFields.creditorBank,
            CounterPartyFields.bankBranchCode,
        ]);
        const bic = this.group.get([
            CounterPartyFields.creditorBank,
            CounterPartyFields.bic,
        ]);
        return ((accountName === null || accountName === void 0 ? void 0 : accountName.value) ||
            (accountNumber === null || accountNumber === void 0 ? void 0 : accountNumber.value) ||
            (bankBranchCode === null || bankBranchCode === void 0 ? void 0 : bankBranchCode.value) ||
            (bic === null || bic === void 0 ? void 0 : bic.value));
    }
    ngOnDestroy() {
        triggerHook(PaymentFormFieldHooks.onDestroy, this);
    }
}
/** @nocollapse */ PayordBeneficiaryGroupHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordBeneficiaryGroupHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PayordBeneficiaryGroupHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PayordBeneficiaryGroupHeaderComponent, selector: "bb-payord-beneficiary-header", ngImport: i0, template: "<div\n  *ngIf=\"config?.options?.label\"\n  class=\"bb-stack\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <legend class=\"bb-inline-stack__item bb-fieldset__heading break-word\">\n    <ng-container *ngIf=\"!group?.value?.name\">{{\n      options?.label\n    }}</ng-container>\n    <ng-container *ngIf=\"group?.value?.name && options?.hasDynamicTitle\">\n      <span>{{ options?.label }}: {{ group?.value?.name }}</span>\n      <span\n        *ngIf=\"\n          group?.value?.selectedContact?.contactId &&\n          group?.value?.beneficiaryAccountName\n        \"\n      >\n        - {{ group?.value?.beneficiaryAccountName }}\n      </span>\n    </ng-container>\n  </legend>\n  <button\n    *ngIf=\"showClearBtn()\"\n    class=\"bb-stack__item--push-right\"\n    bbButton\n    color=\"link\"\n    (click)=\"onClearValues()\"\n    data-role=\"clear-beneficiary-button\"\n  >\n    <bb-icon-ui [name]=\"options?.clearOptions?.icon || iconName\"></bb-icon-ui>\n    <span *ngIf=\"options?.clearOptions?.label\">{{\n      options?.clearOptions?.label\n    }}</span>\n    <span\n      *ngIf=\"!options?.clearOptions?.label\"\n      i18n=\"@@dynamic-form-field-beneficiary-header.label\"\n      >Clear</span\n    >\n  </button>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordBeneficiaryGroupHeaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payord-beneficiary-header',
                    templateUrl: './payord-beneficiary-group-header.component.html',
                }]
        }] });
//# sourceMappingURL=beneficiary-group-header.component.js.map