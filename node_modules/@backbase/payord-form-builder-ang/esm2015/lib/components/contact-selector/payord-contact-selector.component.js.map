{"version":3,"file":"payord-contact-selector.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/contact-selector/payord-contact-selector.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/contact-selector/payord-contact-selector.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { SchemeNames } from '@backbase/data-ang/payment-order';\nimport {\n  BeneficiaryList,\n  ContactItem,\n  ContactScheme,\n  CounterPartyFields,\n  FetchCreditorItemsParams,\n  HiddenFields,\n  Hideable,\n  ListState,\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n  PaymentFormFieldOptions,\n} from '@backbase/payment-orders-ang';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime, map, takeUntil, tap } from 'rxjs/operators';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-contact-selector',\n  templateUrl: './payord-contact-selector.component.html',\n})\nexport class PayordContactSelectorComponent implements OnInit, OnDestroy {\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  contacts$!: Observable<Array<ContactItem> | null>;\n  @ViewChild('dd') dropdownItem?: NgbDropdown;\n  listState?: ListState;\n  listStateType = ListState;\n  private inputFocused = false;\n  private destroy$ = new Subject();\n  private searchQuery = '';\n  defaultEmptyStateTitle = $localize`:@@payord.contact.selector.ui.contacts.nothing-found.label:No contacts`;\n  defaultEmptyStateSubtitle = $localize`:@@payord.contact.selector.ui.contacts.nothing-found.subtitle:You don't have any contacts to be displayed.`;\n  defaultErrorStateTitle = $localize`:@@payord.contact.selector.ui.contacts.error.label:Oops! Something went wrong`;\n  defaultErrorStateSubtitle = $localize`:@@payord.contact.selector.ui.contacts.error.subtitle:We are unable to load your contacts Please try again.`;\n\n  ngOnInit() {\n    this.registerFields();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n    this.listState = ListState.LOADING;\n\n    this.contacts$ = this.options.items$.pipe(\n      map((response) =>\n        response instanceof HttpErrorResponse ? null : response\n      ),\n      map((contacts: ContactItem[]) =>\n        this.options.mapItems && contacts?.length\n          ? this.options.mapItems(contacts)\n          : contacts\n      ),\n      map((contacts: ContactItem[]) =>\n        contacts?.map((contact) => ({\n          ...contact,\n          transferKey: this.getTransferEntry(contact),\n        }))\n      ),\n      tap((contacts: ContactItem[]) => {\n        this.setStatus(contacts);\n        // Close dropdown if there is no result by search\n        if (this.inputFocused && this.searchQuery) {\n          contacts && contacts.length\n            ? this.dropdownItem?.open()\n            : this.dropdownItem?.close();\n        }\n      })\n    );\n\n    // Sets schemeName on value change in accountNumber field\n    this.group.valueChanges\n      .pipe(\n        takeUntil(this.destroy$),\n        debounceTime(1000),\n        map(({ accountNumber }) => accountNumber)\n      )\n      .subscribe(this.setScheme.bind(this));\n  }\n\n  private registerFields() {\n    registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue\n    );\n    registerFormControl(\n      this.group,\n      CounterPartyFields.role,\n      [],\n      [],\n      'CREDITOR'\n    );\n    registerFormControl(this.group, CounterPartyFields.selectedContact, [], []);\n    registerFormControl(this.group, CounterPartyFields.schemeName);\n    registerFormControl(this.group, HiddenFields.selectedBeneficiary);\n  }\n\n  private fetchCreditorItems(params: FetchCreditorItemsParams) {\n    if (this.options?.fetchItems$) {\n      this.options.fetchItems$.next(params);\n    }\n  }\n\n  onSelectContact(_event: EventTarget, contact: ContactItem) {\n    this.group.get(this.config.name)?.patchValue(contact.name);\n    this.group\n      .get(CounterPartyFields.accountNumber)\n      ?.patchValue(this.getTransferEntry(contact)?.value);\n    this.group.get([HiddenFields.selectedBeneficiary])?.patchValue(contact);\n    this.dropdownItem?.close();\n    this.setContactId(contact);\n  }\n\n  handleSearch(query: string) {\n    if (this.inputFocused) {\n      this.searchQuery = query;\n      this.fetchCreditorItems({\n        params: { query },\n        type: BeneficiaryList.CONTACTS,\n      });\n      if (!query) {\n        this.dropdownItem?.close();\n      }\n    }\n  }\n\n  setStatus(contacts?: ContactItem[]) {\n    if (!contacts) {\n      this.listState = ListState.ERROR;\n    } else if (!contacts.length) {\n      this.listState = ListState.EMPTY;\n    } else if (contacts.length) {\n      this.listState = ListState.LIST;\n    }\n  }\n\n  onClear() {\n    this.group.get(this.config.name)?.reset();\n    this.fetchCreditorItems({ type: BeneficiaryList.CONTACTS });\n  }\n\n  focusHandler() {\n    this.inputFocused = true;\n  }\n\n  onBlur() {\n    this.inputFocused = false;\n  }\n\n  private setContactId(contact: ContactItem) {\n    this.group\n      .get([CounterPartyFields.selectedContact])\n      ?.patchValue({ contactId: contact?.id });\n  }\n\n  /**\n   * Sets schemeName for payment order request payload\n   * Checks entered value with regex pattern to detect if it is email, phone number or accountNumber\n   */\n  private setScheme(counterPartyIdentification?: string) {\n    if (!counterPartyIdentification) return;\n    const scheme = this.options.contactSchemes?.find(({ regex }) =>\n      regex?.test(counterPartyIdentification)\n    );\n    let schemeValue: SchemeNames | undefined;\n    switch (scheme?.name) {\n      case ContactScheme.email:\n        schemeValue = SchemeNames.EMAIL;\n        break;\n      case ContactScheme.phoneNumber:\n        schemeValue = SchemeNames.MOBILE;\n        break;\n      case ContactScheme.accountNumber:\n        schemeValue = SchemeNames.BBAN;\n        break;\n    }\n    if (schemeValue) {\n      this.group.controls[CounterPartyFields.schemeName].patchValue(\n        schemeValue,\n        { emitEvent: false }\n      );\n    }\n  }\n\n  /**\n   * Return first scheme value of contact. That allows customer to prioritize either email, phone number or account number for a contact.\n   * For instance [email, phoneNumber] will return mail if there is a mail value in contact item, otherwise will check phoneNumber.\n   * This is\n   */\n  private getTransferEntry(contact: ContactItem): {\n    scheme: ContactScheme;\n    value: string | undefined;\n  } {\n    const defaultScheme = ContactScheme.accountNumber;\n    const firstScheme =\n      this.options.contactSchemes?.find(\n        (scheme) => !!contact.accounts[0][scheme.name]\n      )?.name || defaultScheme;\n    return { scheme: firstScheme, value: contact.accounts[0][firstScheme] };\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  class=\"form-group bb-dynamic-input\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n>\n  <label *ngIf=\"options?.label\" [for]=\"'payord-contact-selector-search-box'\"\n    >{{ options?.label }}\n  </label>\n\n  <div\n    ngbDropdown\n    #dd=\"ngbDropdown\"\n    class=\"full-width-typeahead bb-payment-card-state bb-block bb-block--md\"\n  >\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      *ngIf=\"options?.helperText\"\n      [attr.id]=\"'payord-contact-selector__helper-text'\"\n      [textContent]=\"options?.helperText\"\n    >\n    </span>\n\n    <bb-search-box-ui\n      ngbDropdownAnchor\n      (clear)=\"onClear()\"\n      (focus)=\"focusHandler()\"\n      (blur)=\"onBlur()\"\n      [formControl]=\"group.controls[config.name]\"\n      [placeholder]=\"options?.placeholder\"\n      [squareBorder]=\"options?.squareBorder\"\n      [autocomplete]=\"options?.autocomplete || 'off'\"\n      (ngModelChange)=\"handleSearch(group.controls[config.name].value)\"\n      [showClear]=\"true\"\n      [id]=\"'payord-contact-selector-search-box'\"\n      [attr.data-role]=\"'contact-selector-search-box'\"\n    >\n      <button\n        bbButton\n        ngbDropdownToggle\n        color=\"unstyled\"\n        [attr.aria-label]=\"'contact dropdown button'\"\n      >\n        <bb-icon-ui name=\"contacts\"></bb-icon-ui>\n      </button>\n    </bb-search-box-ui>\n\n    <div\n      ngbDropdownMenu\n      class=\"dropdown-menu bb-product-selector__dropdown-menu dropdown-menu-right pre-scrollable-typeahead\"\n    >\n      <div class=\"dropdown-menu-inner-container\">\n        <!-- CONTACTS -->\n        <ng-container *ngIf=\"contacts$ | async as contacts\">\n          <ng-container *ngIf=\"listState === listStateType.LIST\">\n            <ng-container *ngFor=\"let contact of contacts\">\n              <ng-container\n                *ngTemplateOutlet=\"contactTemp; context: { $implicit: contact }\"\n              >\n              </ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n        <!-- TODO UPDATE EMPTY AND ERROR STATES -->\n        <ng-container *ngIf=\"listState === listStateType.ERROR\">\n          <ng-container *ngTemplateOutlet=\"errorState\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"listState === listStateType.EMPTY\">\n          <ng-container *ngTemplateOutlet=\"emptyState\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"listState === listStateType.LOADING\">\n          <ng-container *ngTemplateOutlet=\"loading\"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label || 'Beneficiary name'\"\n    ></bb-payord-validation-message>\n  </div>\n</div>\n\n<ng-template #contactTemp let-contact>\n  <button\n    role=\"menuitem\"\n    type=\"button\"\n    class=\"bb-stack\"\n    (click)=\"onSelectContact($event, contact)\"\n    ngbDropdownItem\n  >\n    <div class=\"bb-stack__item\">\n      <span class=\"sr-only\" i18n=\"@@payord.contact.selector.ui.group.contacts\"\n        >Contact</span\n      >\n      <bb-icon-ui\n        size=\"xl\"\n        class=\"bb-stack text-muted\"\n        name=\"account-box\"\n      ></bb-icon-ui>\n    </div>\n\n    <div\n      class=\"text-left bb-stack__item\"\n      *ngIf=\"contact?.transferKey as transferKey\"\n    >\n      <span\n        class=\"sr-only\"\n        i18n=\"@@payord.contact.selector.ui.contact.account.name.label\"\n        id=\"contact_accountNameLabel\"\n      >\n        Contact name:\n      </span>\n      <div attr.aria-labelledby=\"contact_accountNameLabel\" class=\"bb-text-bold\">\n        {{ contact?.name }}\n      </div>\n      <span\n        class=\"sr-only\"\n        i18n=\"@@payord.contact.selector.ui.contact.account.number.label\"\n        id=\"contact_accountNumberLabel\"\n      >\n        { transferKey.scheme, select, accountNumber { Account Number } email {\n        Email } phoneNumber { Phone Number } }\n      </span>\n      <div\n        class=\"text-dark\"\n        *ngIf=\"contact?.accounts[0]?.accountNumber\"\n        attr.aria-labelledby=\"contact_accountNumberLabel\"\n        class=\"bb-subtitle bb-text-support\"\n      >\n        {{ transferKey.value }}\n      </div>\n    </div>\n  </button>\n</ng-template>\n\n<ng-template #emptyState>\n  <bb-empty-state-ui\n    data-role=\"contacts-empty-state\"\n    iconSize=\"xxl\"\n    class=\"bb-state-container\"\n    iconModifier=\"contacts\"\n    [title]=\"options?.emptyStateTitle || defaultEmptyStateTitle\"\n    [subtitle]=\"options?.emptyStateSubtitle || defaultEmptyStateSubtitle\"\n  >\n  </bb-empty-state-ui>\n</ng-template>\n<ng-template #errorState>\n  <bb-empty-state-ui\n    data-role=\"contacts-error-state\"\n    iconSize=\"xxl\"\n    class=\"bb-state-container\"\n    iconModifier=\"error-outline\"\n    [title]=\"options?.errorStateTitle || defaultErrorStateTitle\"\n    [subtitle]=\"options?.errorStateSubtitle || defaultErrorStateSubtitle\"\n  >\n  </bb-empty-state-ui>\n</ng-template>\n\n<ng-template #loading>\n  <div class=\"bb-state-container\">\n    <bb-loading-indicator-ui loaderSize=\"md\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n"]}