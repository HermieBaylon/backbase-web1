import { ElementRef } from '@angular/core';
import { Component } from '@angular/core';
import { PaymentFormFieldHooks, RemittanceInfoFields, focusChildElement, } from '@backbase/payment-orders-ang';
import { registerFormControl } from '../../helpers/form-helpers';
import { triggerHook } from '../../helpers/hooks-helpers';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/input-text";
import * as i2 from "@backbase/payment-orders-ang";
import * as i3 from "../validation-message/validation-message.component";
import * as i4 from "@backbase/ui-ang/icon";
import * as i5 from "@angular/common";
import * as i6 from "@angular/forms";
import * as i7 from "@backbase/ui-ang/button";
export class PayordPurposeOfPaymentComponent {
    constructor(elRef) {
        this.elRef = elRef;
    }
    ngOnInit() {
        this.control =
            this.group.get(RemittanceInfoFields.purposeOfPayment) ||
                registerFormControl(this.group, this.config.name, this.options.validators, this.options.asyncValidators, this.options.defaultValue, this.config);
        this.options.isCollapsed = this.control.value
            ? false
            : this.options.isCollapsed === undefined
                ? true
                : this.options.isCollapsed;
        triggerHook(PaymentFormFieldHooks.onInit, this);
    }
    expand() {
        this.options.isCollapsed = false;
        focusChildElement('.form-control', this.elRef.nativeElement);
    }
    selectPurpose(purpose) {
        this.control.setValue(purpose);
    }
    ngOnDestroy() {
        triggerHook(PaymentFormFieldHooks.onDestroy, this);
    }
}
/** @nocollapse */ PayordPurposeOfPaymentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordPurposeOfPaymentComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PayordPurposeOfPaymentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PayordPurposeOfPaymentComponent, selector: "bb-payord-purpose-of-payment", ngImport: i0, template: "<ng-container\n  *ngIf=\"control?.value || !options?.isCollapsed; else collapsedTmpl\"\n>\n  <div\n    class=\"bb-dynamic-input form-group\"\n    [formGroup]=\"group\"\n    [ngClass]=\"options?.cssClasses\"\n  >\n    <div [hidden]=\"config?.hidden\" [attr.aria-hidden]=\"config?.hidden\">\n      <ng-container *ngIf=\"!options?.purposes || !options?.purposes.length\">\n        <label\n          class=\"bb-dynamic-input__label\"\n          data-role=\"purpose-of-payment-label\"\n          [id]=\"inputEl?.id + '__label'\"\n          [for]=\"inputEl?.id\"\n          [textContent]=\"options?.label || ''\"\n        ></label>\n        <span\n          class=\"bb-dynamic-input__helper-text bb-text-support\"\n          data-role=\"purpose-of-payment-optional-label\"\n          *ngIf=\"options?.isOptional && options?.helperText\"\n          [id]=\"inputEl?.id + '__desc'\"\n          [textContent]=\"options?.helperText\"\n        >\n        </span>\n\n        <bb-input-text-ui\n          #inputEl\n          [formControlName]=\"config.name\"\n          [attr.disabled]=\"options?.disabled\"\n          [minLength]=\"options?.minLength\"\n          [maxLength]=\"options?.maxLength\"\n          [showCharCounter]=\"options?.showCharCounter\"\n          [attr.id]=\"options?.id\"\n          [placeholder]=\"options?.placeholder || ''\"\n          [autocomplete]=\"options?.autoComplete\"\n          [attr.autofocus]=\"options?.autofocus\"\n          [attr.readonly]=\"options?.readonly\"\n          [aria-describedby]=\"descElem?.id\"\n          data-role=\"purpose-of-payment-selector\"\n        ></bb-input-text-ui>\n\n        <div\n          #descElem\n          class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n          [attr.aria-hidden]=\"!options?.description\"\n          [hidden]=\"!options?.description\"\n          [id]=\"inputEl?.id + '__desc'\"\n          [textContent]=\"options?.description || ''\"\n        ></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"options?.purposes?.length\">\n        <bb-select-purpose-dropdown\n          [formControlName]=\"config?.name\"\n          [label]=\"options?.label\"\n          [purposes]=\"options?.purposes\"\n          [isOptional]=\"options?.isOptional\"\n          [helperText]=\"options?.helperText\"\n          [placeholder]=\"options?.placeholder\"\n          [searchPlaceholder]=\"options?.searchPlaceholder\"\n          [dropdownIcon]=\"options?.dropdownIcon\"\n          [selectedPurpose]=\"control.value\"\n          (selectPurpose)=\"selectPurpose($event)\"\n          data-role=\"purpose-of-payment-selector-dropdown\"\n        ></bb-select-purpose-dropdown>\n      </ng-container>\n\n      <bb-payord-validation-message\n        [control]=\"group?.controls[config.name]\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label\"\n      ></bb-payord-validation-message>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #collapsedTmpl>\n  <span\n    class=\"bb-dynamic-input__collapse-btn-container\"\n    [hidden]=\"config?.hidden\"\n    [attr.aria-hidden]=\"config?.hidden\"\n  >\n    <button\n      class=\"bb-dynamic-input__collapse-btn\"\n      data-role=\"purpose-of-payment-btn\"\n      bbButton\n      [color]=\"options?.collapseOptions?.btnColor || 'link'\"\n      [buttonSize]=\"options?.collapseOptions?.btnSize\"\n      (click)=\"expand()\"\n    >\n      <bb-icon-ui\n        class=\"bb-dynamic-input__collapse-btn-icon mr-2\"\n        *ngIf=\"!options?.collapseOptions?.hideIcon\"\n        [name]=\"options?.collapseOptions?.icon || 'add'\"\n        [size]=\"options?.collapseOptions?.iconSize\"\n      >\n      </bb-icon-ui>\n      <span class=\"bb-dynamic-input__collapse-btn-label\">\n        {{ options?.collapseOptions?.label || options?.label }}\n      </span>\n    </button>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n    ></bb-payord-validation-message>\n  </span>\n</ng-template>\n", components: [{ type: i1.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i2.ӨSelectPurposeDropdownComponent, selector: "bb-select-purpose-dropdown", inputs: ["longDescription", "purposes", "isOptional", "selectedPurpose", "helperText", "placeholder", "label", "searchPlaceholder", "dropdownIcon"], outputs: ["selectPurpose"] }, { type: i3.ValidationMessageComponent, selector: "bb-payord-validation-message", inputs: ["control", "validationMessages", "label", "id", "hideGeneric"] }, { type: i4.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i6.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i6.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i6.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i7.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordPurposeOfPaymentComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payord-purpose-of-payment',
                    templateUrl: './payord-purpose-of-payment.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });
//# sourceMappingURL=payord-purpose-of-payment.component.js.map