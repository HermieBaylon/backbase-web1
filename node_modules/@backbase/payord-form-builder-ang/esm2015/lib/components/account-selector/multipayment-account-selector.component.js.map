{"version":3,"file":"multipayment-account-selector.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/account-selector/multipayment-account-selector.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/account-selector/multipayment-account-selector.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n  AccountField,\n  PaymentFormFieldHooks,\n  MultiPaymentAccountFormItem,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';\n\n@Component({\n  selector: 'bb-multi-payment-account-selector',\n  templateUrl: './multipayment-account-selector.component.html',\n})\nexport class MultiPaymentAccountSelectorComponent implements OnInit, OnDestroy {\n  private _selectedAccount!: MultiPaymentAccountFormItem;\n  private items!: Array<MultiPaymentAccountFormItem>;\n  private gc$$ = new Subject<void>();\n\n  public get selectedAccount() {\n    return this._selectedAccount;\n  }\n\n  public set selectedAccount(account: MultiPaymentAccountFormItem) {\n    this._selectedAccount = account;\n    this.group?.patchValue(account);\n    this.group?.markAsTouched();\n    this.group?.markAsDirty();\n  }\n\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n\n  items$!: Observable<Array<MultiPaymentAccountFormItem>>;\n\n  accountFormat: PaymentCardNumberFormat = {\n    length: 0,\n    maskRange: [0, 0],\n    segments: 0,\n  };\n\n  accountGroup = {\n    [AccountField.id]: [''],\n    [AccountField.name]: [''],\n    [AccountField.accountNumber]: [''],\n    [AccountField.number]: [''],\n    [AccountField.accountType]: [''],\n    [AccountField.currency]: [''],\n    [AccountField.balance]: [''],\n    [AccountField.bankBranchCode]: [''],\n  };\n\n  ngOnInit() {\n    this.registerFields();\n    this.items$ = this.options?.items$.pipe(\n      tap((items: MultiPaymentAccountFormItem[]) => {\n        this.items = items;\n        if (this.group?.get('id')?.value) {\n          this.selectedAccount = this.findAccount(this.group?.get('id')?.value);\n        }\n      })\n    );\n    const initiator = this.group?.parent?.get('initiator');\n    initiator?.valueChanges.pipe(takeUntil(this.gc$$)).subscribe({\n      next: (account: MultiPaymentAccountFormItem) => {\n        this._selectedAccount = this.findAccount(account.id);\n      },\n    });\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    this.gc$$.next();\n    this.gc$$.complete();\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  registerFields() {\n    for (const key in this.accountGroup) {\n      if (this.accountGroup.hasOwnProperty(key)) {\n        const validators = [];\n        if (key === AccountField.id || key === AccountField.name) {\n          validators.push(Validators.required);\n        }\n        registerFormControl(this.group, key, validators, [], '');\n      }\n    }\n  }\n\n  selectItem(account: MultiPaymentAccountFormItem) {\n    this.selectedAccount = account;\n    if (this.options?.accountSelected) {\n      this.options?.accountSelected(account);\n    }\n    this.options?.searchTerm$.next('');\n  }\n\n  onBlur() {\n    if (this.options?.required) {\n      this.group?.markAllAsTouched();\n    }\n  }\n\n  onSearch($event: string) {\n    if (this.options?.searchTerm$) {\n      this.options?.searchTerm$.next($event);\n    }\n  }\n\n  private findAccount(id: string) {\n    return this.items.find((item) => item.id === id) || this.group?.value;\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n>\n  <section class=\"payment-from\" [formGroup]=\"group\">\n    <label class=\"bb-form-field\">\n      <div *ngIf=\"options?.label\" class=\"bb-dynamic-input__label bb-label\">\n        <span>\n          {{ options?.label }}\n        </span>\n        <span\n          class=\"bb-dynamic-input__helper-text bb-text-support\"\n          *ngIf=\"options?.helperText\"\n          [textContent]=\"options?.helperText\"\n        >\n        </span>\n      </div>\n      <bb-account-selector-ui\n        [markFirst]=\"true\"\n        [highlight]=\"false\"\n        [filterItems]=\"options?.filterItems\"\n        [internalFiltering]=\"false\"\n        [closeOnSelect]=\"true\"\n        [dropdownPosition]=\"'bottom'\"\n        [items]=\"items$ | async\"\n        [selectedItems]=\"selectedAccount\"\n        [searchFunc]=\"options?.searchFunc\"\n        (change)=\"selectItem($event)\"\n        (blur)=\"onBlur()\"\n        (search)=\"onSearch($event)\"\n        (filterChange)=\"onSearch($event)\"\n        [placeholder]=\"options?.placeholder || ''\"\n        [attr.aria-label]=\"options?.label\"\n        [required]=\"options?.required\"\n        [attr.data-role]=\"'debit-account-selector'\"\n        [showCurrencySymbol]=\"options?.showCurrencySymbol\"\n        [showBankBranchCode]=\"options?.showBankBranchCode\"\n        [productNumberFormat]=\"accountFormat\"\n      ></bb-account-selector-ui>\n    </label>\n\n    <ng-container *ngIf=\"!selectedAccount\">\n      <bb-payord-validation-message\n        [control]=\"group?.controls['id']\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label || 'Account'\"\n      ></bb-payord-validation-message>\n    </ng-container>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      *ngIf=\"options?.description\"\n      [textContent]=\"options?.description\"\n    ></div>\n  </section>\n</div>\n"]}