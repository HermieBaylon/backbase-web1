{"version":3,"file":"payord-switch.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/switch/payord-switch.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/switch/payord-switch.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,MAAM,eAAe,CAAC;AAC7D,OAAO,EAEL,qBAAqB,GACtB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,oBAAoB,EAAE,MAAM,qCAAqC,CAAC;AAC3E,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;;;;;;;;AAM1D,MAAM,OAAO,qBACX,SAAQ,oBAAoB;IAG5B,YAA6B,iBAAoC;QAC/D,KAAK,CAAC,iBAAiB,CAAC,CAAC;QADE,sBAAiB,GAAjB,iBAAiB,CAAmB;IAEjE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAChC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,OAAO,CAAC,UAAU,EACvB,IAAI,CAAC,OAAO,CAAC,eAAe,EAC5B,IAAI,CAAC,OAAO,CAAC,YAAY,EACzB,IAAI,CAAC,MAAM,CACZ,CAAC;QACF,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,WAAW,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,WAAW;QACT,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;;sIAvBU,qBAAqB;0HAArB,qBAAqB,+ECdlC,+0BA2BA;4FDba,qBAAqB;kBAJjC,SAAS;mBAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,WAAW,EAAE,gCAAgC;iBAC9C","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  PaymentFormField,\n  PaymentFormFieldHooks,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-switch',\n  templateUrl: './payord-switch.component.html',\n})\nexport class PayordSwitchComponent\n  extends ActivatableFormField\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  class=\"form-group bb-dynamic-input\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div [hidden]=\"config?.hidden\">\n    <bb-switch-ui\n      [formControlName]=\"config?.name\"\n      [label]=\"options?.label\"\n      [labelPosition]=\"options?.labelPosition\"\n      (change)=\"toggleDependants()\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid\n      }\"\n      [inputSelector]=\"'.bb-switch__checkbox'\"\n      [attr.data-role]=\"config?.name\"\n      #inputEl\n    >\n    </bb-switch-ui>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n      [id]=\"inputEl?.id + '__error'\"\n    ></bb-payord-validation-message>\n  </div>\n</div>\n"]}