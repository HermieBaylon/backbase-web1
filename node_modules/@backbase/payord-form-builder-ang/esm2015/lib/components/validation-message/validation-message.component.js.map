{"version":3,"file":"validation-message.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/validation-message/validation-message.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/validation-message/validation-message.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAU,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACrE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAgB,cAAc,EAAE,MAAM,8BAA8B,CAAC;;;;AAM5E,MAAM,OAAO,0BAA0B;IA0BrC,YAA6B,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAR9C;;WAEG;QACM,gBAAW,GAAG,KAAK,CAAC;IAKoB,CAAC;IAElD,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,IAAI,EAAE,CAAC;IAC1D,CAAC;IAED,oBAAoB,CAAC,KAAc;QACjC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE;YACzD,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBACzC,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI,KAAK,KAAK,EAAE;oBAC/B,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,OAAO,CAAC;oBACrC,OAAO,IAAI,CAAC,iBAAiB,CAAC;iBAC/B;qBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACxC,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,OAAO,CAAC;oBACrC,OAAO,IAAI,CAAC,iBAAiB,CAAC;iBAC/B;aACF;SACF;QACD,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,cAAc,CACZ,8BAA8B,EAC9B,IAAI,CAAC,KAAK,CAAC,aAAa,EACxB,KAAK,CACN,CAAC;IACJ,CAAC;;2IA3DU,0BAA0B;+HAA1B,0BAA0B,oMCRvC,usCAyCA;4FDjCa,0BAA0B;kBAJtC,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,qCAAqC;iBACnD;iGAKU,OAAO;sBAAf,KAAK;gBAIG,kBAAkB;sBAA1B,KAAK;gBAIG,KAAK;sBAAb,KAAK;gBAIG,EAAE;sBAAV,KAAK;gBAKG,WAAW;sBAAnB,KAAK","sourcesContent":["import { OnInit, Component, Input, ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ErrorMessage, toggleTabIndex } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-validation-message',\n  templateUrl: './validation-message.component.html',\n})\nexport class ValidationMessageComponent implements OnInit {\n  /**\n   * The form control instance\n   */\n  @Input() control!: FormControl;\n  /**\n   * List of validation messages\n   */\n  @Input() validationMessages!: Array<ErrorMessage>;\n  /**\n   * Label of the form control\n   */\n  @Input() label!: string;\n  /**\n   * Id of validation message\n   */\n  @Input() id!: string;\n\n  /**\n   * If Generic messages are not needed.\n   */\n  @Input() hideGeneric = false;\n\n  requiredMessage!: string;\n  validationMessage!: string;\n\n  constructor(private readonly elRef: ElementRef) {}\n\n  ngOnInit() {\n    this.validationMessages = this.validationMessages || [];\n  }\n\n  getValidationMessage(error?: string): string {\n    this.validationMessage = '';\n    if (this.control.errors && this.validationMessages.length) {\n      for (const msg of this.validationMessages) {\n        if (error && msg.name === error) {\n          this.validationMessage = msg.message;\n          return this.validationMessage;\n        } else if (this.control.errors[msg.name]) {\n          this.validationMessage = msg.message;\n          return this.validationMessage;\n        }\n      }\n    }\n    return this.validationMessage;\n  }\n\n  getRequiredMessage(): string {\n    this.requiredMessage = this.getValidationMessage('required');\n    return this.requiredMessage;\n  }\n\n  onFocusout() {\n    toggleTabIndex(\n      '.bb-input-validation-message',\n      this.elRef.nativeElement,\n      false\n    );\n  }\n}\n","<bb-input-validation-message-ui\n  data-role=\"input-error\"\n  (focusout)=\"onFocusout()\"\n  *ngIf=\"control\"\n  [showErrors]=\"control?.touched && control?.invalid\"\n>\n  <ng-container\n    *ngIf=\"control.errors && control.errors['required']; else invalidError\"\n  >\n    <span data-role=\"required-error\" [attr.id]=\"id\">\n      <ng-container *ngIf=\"getRequiredMessage(); else requiredError\">\n        {{ requiredMessage }}\n      </ng-container>\n    </span>\n  </ng-container>\n\n  <ng-template #requiredError>\n    <ng-container\n      i18n=\"@@dynamic-form-field-default-validation-message.required.error\"\n    >\n      {{ label }} is required\n    </ng-container>\n  </ng-template>\n\n  <ng-template #invalidError>\n    <span data-role=\"required-error\" [attr.id]=\"id\">\n      <ng-container *ngIf=\"getValidationMessage(); else genericError\">\n        {{ validationMessage }}\n      </ng-container>\n    </span>\n  </ng-template>\n\n  <ng-template #genericError>\n    <ng-container\n      *ngIf=\"!hideGeneric\"\n      i18n=\"@@dynamic-form-field-default-validation-message.generic.error\"\n    >\n      Invalid {{ label }}\n    </ng-container>\n  </ng-template>\n</bb-input-validation-message-ui>\n"]}