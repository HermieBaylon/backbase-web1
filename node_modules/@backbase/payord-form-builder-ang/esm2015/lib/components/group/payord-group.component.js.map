{"version":3,"file":"payord-group.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/group/payord-group.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/group/payord-group.component.html"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,YAAY,GAEb,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAEL,SAAS,EACT,UAAU,GAEX,MAAM,gBAAgB,CAAC;AAMxB,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;;;;;;;;;AAMhE,MAAM,OAAO,oBAAoB;IAY/B,YAA6B,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAHjE,QAAG,GAAG,IAAI,YAAY,EAAE,CAAC;IAG2C,CAAC;IAErE,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;YACjC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;YAC7C,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,iBAAiB,CAAC,KAAK;aACzB,IAAI,CACH,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,CACtB,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CACjC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,CACvC,CACF,EACD,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CACpB;aACA,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;;YAClB,IAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,0CAAE,MAAM,EAAE;gBACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,iBAAiB,CAAC,KAAK;aACzB,IAAI,CACH,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,CACtB,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CACjC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,CACvC,CACF,EACD,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CACpB;aACA,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;;YAClB,IAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,0CAAE,MAAM,EAAE;gBACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB,CAAC,KAAe;QAC/B,MAAM,cAAc,GAA+B,EAAE,CAAC;QACtD,KAAK,CAAC,OAAO,CAAC,CAAC,QAAgB,EAAE,EAAE;YACjC,cAAc,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,UAAU,CAAC,WAAqB;QAC9B,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAC3D,IAAI,OAA+B,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CACxB,CAAC,KAA6D,EAAE,EAAE;;YAChE,IAAI,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC9B,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;gBACrB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC9D,IAAI,OAAO,KAAI,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,sBAAsB,CAAA,EAAE;oBACrD,OAAO,CAAC,aAAa,CAAC;wBACpB,UAAU,CAAC,QAAQ;wBACnB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;qBACpC,CAAC,CAAC;oBACH,OAAO,CAAC,kBAAkB,CAAC;wBACzB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,IAAI,EAAE,CAAC;qBACzC,CAAC,CAAC;oBACH,OAAO,CAAC,sBAAsB,EAAE,CAAC;iBAClC;aACF;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,WAAqB;QAC9B,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAC3D,IAAI,OAA+B,CAAC;QAEpC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CACxB,CAAC,KAA6D,EAAE,EAAE;;YAChE,IAAI,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC9B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gBACpB,OAAO,GAAG,CAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,UAAU;oBAClC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;oBAC3D,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;gBAExD,IAAI,OAAO,IAAI,CAAC,CAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,iBAAiB,CAAA,EAAE;oBACjD,IAAI,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,sBAAsB,EAAE;wBAC1C,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;wBAC5B,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;wBACjC,OAAO,CAAC,sBAAsB,EAAE,CAAC;qBAClC;oBACD,OAAO,CAAC,KAAK,EAAE,CAAC;oBAChB,IAAI,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,YAAY,EAAE;wBAChC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;qBAChD;iBACF;gBACD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAE5B,IAAI,MAAA,MAAmB,KAAM,0CAAE,MAAM,0CAAE,MAAM,EAAE;oBAC7C,MAAA,MAAmB,KAAM,0CAAE,MAAM,0CAAE,OAAO,CAAC,CAAC,WAAW,EAAE,EAAE,CACzD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAClC,CAAC;iBACH;aACF;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,eAAe,CAAC,KAAgD;;QACtE,IAAI,CAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,UAAU,KAAI,CAAC,CAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,oBAAoB,CAAA,EAAE;YACvE,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAC/D,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;gBACpB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAEO,cAAc,CACpB,SAAiB,EACjB,UAAkB;QAElB,IAAI,MAAM,GAAiC,IAAI,CAAC,KAAK,CAAC;QACtD,IAAI,OAA+B,CAAC;QAEpC,OAAO,MAAM,EAAE;YACb,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,IAAI,SAAS,EAAE,CAAC,CAAC;YACnD,IAAI,OAAO,EAAE;gBACX,OAAO,OAAO,CAAC;aAChB;YACD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;SACxB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW;QACT,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IACtB,CAAC;;qIAjJU,oBAAoB;yHAApB,oBAAoB,qGC1BjC,qpEAqEA;4FD3Ca,oBAAoB;kBAJhC,SAAS;mBAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,WAAW,EAAE,+BAA+B;iBAC7C;wGAKU,MAAM;sBAAd,KAAK;gBAIG,KAAK;sBAAb,KAAK","sourcesContent":["import {\n  Component,\n  Input,\n  OnInit,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { takeUntil, map } from 'rxjs/operators';\nimport {\n  AbstractControl,\n  FormGroup,\n  Validators,\n  FormArray,\n} from '@angular/forms';\nimport {\n  PaymentFormGroup,\n  Hideable,\n  PaymentFormFieldConfig,\n} from '@backbase/payment-orders-ang';\nimport { mapDependentItems } from '../../helpers/generic-utils';\n\n@Component({\n  selector: 'bb-payord-group',\n  templateUrl: './payord-group.component.html',\n})\nexport class PayordGroupComponent implements OnInit, OnDestroy {\n  /**\n   * The config of the form group\n   */\n  @Input() config!: PaymentFormGroup & Hideable;\n  /**\n   * The parent formgroup\n   */\n  @Input() group!: FormGroup;\n  gc$ = new EventEmitter();\n  eventName!: string;\n\n  constructor(private readonly visibilityService: VisibilityService) {}\n\n  ngOnInit() {\n    this.eventName = this.config.parent\n      ? `${this.config.parent}.${this.config.name}`\n      : this.config.name;\n    this.visibilityService.show$\n      .pipe(\n        map(({ name, items }) =>\n          mapDependentItems(items, name).find(\n            (dep) => dep.parent === this.eventName\n          )\n        ),\n        takeUntil(this.gc$)\n      )\n      .subscribe((data) => {\n        if (data?.items?.length) {\n          this.showFields(data.items);\n        }\n      });\n\n    this.visibilityService.hide$\n      .pipe(\n        map(({ name, items }) =>\n          mapDependentItems(items, name).find(\n            (dep) => dep.parent === this.eventName\n          )\n        ),\n        takeUntil(this.gc$)\n      )\n      .subscribe((data) => {\n        if (data?.items?.length) {\n          this.hideFields(data.items);\n        }\n      });\n  }\n\n  scanHideableItems(items: string[]) {\n    const hideableFields: { [key: string]: boolean } = {};\n    items.forEach((itemName: string) => {\n      hideableFields[itemName] = true;\n    });\n    return hideableFields;\n  }\n\n  showFields(fieldsNames: string[]) {\n    const hideableFields = this.scanHideableItems(fieldsNames);\n    let control: AbstractControl | null;\n    this.config.fields.forEach(\n      (field: (PaymentFormFieldConfig | PaymentFormGroup) & Hideable) => {\n        if (hideableFields[field.name]) {\n          field.hidden = false;\n          control = this.group.get(`${this.config.name}.${field.name}`);\n          if (control && field?.options?.isConditionalMandatory) {\n            control.setValidators([\n              Validators.required,\n              ...(field.options.validators || []),\n            ]);\n            control.setAsyncValidators([\n              ...(field.options.asyncValidators || []),\n            ]);\n            control.updateValueAndValidity();\n          }\n        }\n      }\n    );\n  }\n\n  hideFields(fieldsNames: string[]) {\n    const hideableFields = this.scanHideableItems(fieldsNames);\n    let control: AbstractControl | null;\n\n    this.config.fields.forEach(\n      (field: (PaymentFormFieldConfig | PaymentFormGroup) & Hideable) => {\n        if (hideableFields[field.name]) {\n          field.hidden = true;\n          control = field?.options?.mapToField\n            ? this.getMappedField(field.name, field.options.mapToField)\n            : this.group.get(`${this.config.name}.${field.name}`);\n\n          if (control && !field?.options?.keepValueOnHidden) {\n            if (field?.options?.isConditionalMandatory) {\n              control.setValidators(null);\n              control.setAsyncValidators(null);\n              control.updateValueAndValidity();\n            }\n            control.reset();\n            if (field?.options?.defaultValue) {\n              control.patchValue(field.options.defaultValue);\n            }\n          }\n          this.hideNestedField(field);\n\n          if ((<PaymentFormGroup>field)?.fields?.length) {\n            (<PaymentFormGroup>field)?.fields?.forEach((nestedField) =>\n              this.hideNestedField(nestedField)\n            );\n          }\n        }\n      }\n    );\n  }\n\n  private hideNestedField(field: PaymentFormFieldConfig | PaymentFormGroup) {\n    if (field?.options?.dependants && !field?.options?.keepDependantsOnHide) {\n      mapDependentItems(field.options.dependants, field.parent).forEach(\n        ({ parent, items }) => {\n          this.visibilityService.hideItems(parent, items);\n        }\n      );\n    }\n  }\n\n  private getMappedField(\n    fieldName: string,\n    mapToField: string\n  ): AbstractControl | null {\n    let parent: FormGroup | FormArray | null = this.group;\n    let control: AbstractControl | null;\n\n    while (parent) {\n      control = parent.get(`${mapToField}.${fieldName}`);\n      if (control) {\n        return control;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n}\n","<ng-container *ngIf=\"!config?.hidden\">\n  <div\n    *ngIf=\"config?.cssClasses?.length; else defaultTmpl\"\n    [ngClass]=\"config?.cssClasses\"\n  >\n    <ng-container *ngTemplateOutlet=\"defaultTmpl\"></ng-container>\n  </div>\n</ng-container>\n\n<ng-template #defaultTmpl>\n  <ng-container *ngIf=\"!config.collapsible; else collapsibleTmpl\">\n    <bb-fieldset-ui\n      *ngIf=\"config?.title; else subGroup\"\n      [heading]=\"config?.title\"\n    >\n      <div *ngIf=\"config.subTitle\" class=\"bb-fieldset\">\n        {{ config?.subTitle }}\n      </div>\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </bb-fieldset-ui>\n    <ng-container *ngIf=\"config?.separator\">\n      <bb-separator\n        [options]=\"config.separator\"\n        class=\"d-block mt-5\"\n      ></bb-separator>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template #subGroup>\n  <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n</ng-template>\n\n<ng-template #collapsibleTmpl>\n  <fieldset class=\"bb-fieldset\">\n    <bb-collapsible-ui data-role=\"schedule-toggle\" #collapse>\n      <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n        <div\n          (click)=\"collapse.toggle()\"\n          [attr.aria-expanded]=\"isOpen\"\n          class=\"bb-stack justify-content-between col-12\"\n        >\n          <legend>\n            <span class=\"bb-label\">{{ config?.title }}</span>\n          </legend>\n          <button\n            bbButton\n            color=\"outline\"\n            [attr.aria-label]=\"config?.title\"\n            [attr.aria-expanded]=\"isOpen\"\n            (click)=\"collapse.toggle(); $event.stopPropagation()\"\n          >\n            <bb-icon-ui\n              [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"\n            ></bb-icon-ui>\n          </button>\n        </div>\n        <hr class=\"mt-0 mx-3\" />\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </ng-template>\n    </bb-collapsible-ui>\n  </fieldset>\n</ng-template>\n\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n"]}