{"version":3,"file":"payord-internal-amount-options.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/internal-amount-options/payord-internal-amount-options.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/internal-amount-options/payord-internal-amount-options.component.html"],"names":[],"mappings":"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","sourcesContent":["import { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport { Component, OnInit, OnDestroy, Inject, LOCALE_ID } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport {\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentFormFieldHooks,\n  PaymentBaseFields,\n  ProductKinds,\n  AmountOption,\n  BaseObject,\n  RemittanceInfoFields,\n  InternalAccountFormItem,\n} from '@backbase/payment-orders-ang';\nimport { StateService, PaymentState } from '@backbase/payment-orders-ang';\nimport BigNumber from 'bignumber.js';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  pluck,\n  tap,\n  startWith,\n  distinctUntilChanged,\n  filter,\n} from 'rxjs/operators';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { mapLocalize } from '../../helpers/generic-utils';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\n\n@Component({\n  selector: 'bb-internal-amount-options',\n  templateUrl: './payord-internal-amount-options.component.html',\n})\nexport class PayordInternalAmountOptionsComponent\n  extends ActivatableFormField\n  implements OnInit, PaymentFormField, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  toAccountProduct$!: Observable<InternalAccountFormItem> | undefined;\n  toAccountDefaultRecord!: ProductSummaryItem | undefined;\n  productKinds = ProductKinds;\n  remittanceInfoFields = RemittanceInfoFields;\n  amountOptions?: AmountOption[];\n  customAmount!: string;\n  touched = false;\n  readonly id = `bb-compact-amount-${new Date().getTime()}`;\n  private subscription$?: Subscription;\n\n  /**\n   * The format used for bignumber;\n   */\n  private readonly format: BigNumber.Format;\n  private readonly groupSeparator: string;\n  private readonly decimalSeparator: string;\n\n  constructor(\n    private readonly stateService: StateService,\n    visibilityService: VisibilityService,\n    @Inject(LOCALE_ID) private readonly locale: string\n  ) {\n    super(visibilityService);\n    this.groupSeparator = getLocaleNumberSymbol(\n      this.locale,\n      NumberSymbol.CurrencyGroup\n    );\n    this.decimalSeparator = getLocaleNumberSymbol(\n      this.locale,\n      NumberSymbol.CurrencyDecimal\n    );\n    this.format = {\n      groupSeparator: this.groupSeparator,\n      decimalSeparator: this.decimalSeparator,\n      groupSize: 3,\n    };\n  }\n  ngOnInit() {\n    this.registerFields();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n    this.control = this.group.controls[this.config.name];\n    this.listenAmountOptionChanges();\n\n    this.toAccountProduct$ = this.group.parent\n      ?.get(PaymentBaseFields.counterparty)\n      ?.valueChanges.pipe(\n        startWith(\n          this.group.parent?.get(PaymentBaseFields.counterparty)?.value\n        ),\n        pluck('accountData'),\n        filter((account) => !!account),\n        distinctUntilChanged((prev, curr) => prev.id === curr.id),\n        tap((account: InternalAccountFormItem) => {\n          const optionValue = this.control?.value;\n          if (optionValue || optionValue === 0) {\n            if (this.stateService.currentState !== PaymentState.EDIT) {\n              this.control?.reset();\n              this.group.controls[\n                RemittanceInfoFields.amountOptionLabel\n              ].reset();\n              this.group.controls[\n                RemittanceInfoFields.amountCurrencyGroup\n              ].reset();\n              this.group.controls['scheduleFrequency'].reset();\n              this.group.controls['showFrequencySwitch'].reset();\n            }\n            this.customAmount = new BigNumber(\n              this.group.controls[\n                RemittanceInfoFields.amountCurrencyGroup\n              ].value?.amount\n            ).toFormat(this.format);\n          }\n\n          this.toggleDependants();\n          this.toAccountDefaultRecord = account.defaultRecord;\n          this.setAmountOptions(account);\n          this.stateService.setPaymentState(PaymentState.INITIAL);\n\n          if (this.options.noBalanceText) {\n            if (this.isAmountOptionsZero(account) && this.control) {\n              this.group.removeControl(this.config.name);\n            } else if (!this.control) {\n              registerFormControl(\n                this.group,\n                this.config.name,\n                [Validators.required],\n                this.options.asyncValidators\n              );\n              this.listenAmountOptionChanges();\n            }\n          }\n\n          if (account.currency) {\n            this.group\n              .get(\n                `${RemittanceInfoFields.amountCurrencyGroup}.${RemittanceInfoFields.currency}`\n              )\n              ?.patchValue(account.currency);\n          }\n        })\n      );\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n    this.subscription$?.unsubscribe();\n  }\n\n  registerFields() {\n    registerFormControl(this.group, RemittanceInfoFields.amountOptionLabel);\n    registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators\n    );\n    registerFormControl(this.group, 'scheduleFrequency');\n    registerFormControl(this.group, 'showFrequencySwitch');\n  }\n\n  /**\n   * Method to handle selecting amount option\n   *\n   * @param [index] index of selected amount option\n   */\n  amountOptionChange(index: number) {\n    const option = this.amountOptions?.[index] || <AmountOption>{};\n    const label = option.label;\n    const currency = this.toAccountDefaultRecord?.currency;\n    const amount = (this.toAccountDefaultRecord as BaseObject<any>)?.[\n      option.amountApiField || ''\n    ]?.toString();\n\n    if (option.hasCustomAmountInput) {\n      this.group.controls[RemittanceInfoFields.amountCurrencyGroup].reset({\n        amount: '',\n        currency,\n      });\n      this.group.controls[RemittanceInfoFields.amountOptionLabel].patchValue(\n        label\n      );\n      this.group.controls['scheduleFrequency'].patchValue(\n        option.scheduleFrequency\n      );\n      this.group.controls['showFrequencySwitch'].patchValue(\n        option.showFrequencySwitch\n      );\n    }\n\n    if (amount) {\n      this.group.patchValue({\n        [RemittanceInfoFields.amountCurrencyGroup]: { amount, currency },\n        [RemittanceInfoFields.amountOptionLabel]: label,\n        scheduleFrequency: option.scheduleFrequency,\n        showFrequencySwitch: option.showFrequencySwitch,\n      });\n    }\n    this.toggleDependants();\n  }\n\n  /**\n   * Set amount options depend on selected product\n   *\n   * @param [product] selected account in counterParty product selector\n   */\n  setAmountOptions(product: InternalAccountFormItem): void {\n    const { creditCard, loan } = this.options?.amountOptions || {};\n\n    switch (product.productKindName) {\n      case ProductKinds.creditCard:\n        this.amountOptions = creditCard?.map(mapLocalize) || [];\n        break;\n      case ProductKinds.loanAccount:\n        this.amountOptions = loan?.map(mapLocalize) || [];\n        break;\n      default:\n        this.amountOptions = [];\n    }\n  }\n\n  isAmountOptionsZero(account: InternalAccountFormItem) {\n    if (!this.amountOptions?.length || !account) {\n      return;\n    }\n    return this.amountOptions?.every((option: AmountOption) =>\n      option?.amountApiField\n        ? Number(\n            (account.defaultRecord as BaseObject<any>)?.[option.amountApiField]\n          ) === 0\n        : true\n    );\n  }\n\n  listenAmountOptionChanges() {\n    this.subscription$ = this.control?.valueChanges\n      .pipe(\n        startWith(this.control?.value),\n        distinctUntilChanged(),\n        filter(\n          (value) =>\n            (value || value === 0) &&\n            this.stateService.currentState !== PaymentState.EDIT\n        )\n      )\n      .subscribe(this.amountOptionChange.bind(this));\n  }\n}\n","<ng-container *ngIf=\"toAccountProduct$ | async as product\">\n  <fieldset\n    class=\"bb-fieldset bb-amount-options\"\n    [ngClass]=\"options?.cssClasses\"\n    [formGroup]=\"group\"\n    *ngIf=\"!config?.hidden\"\n  >\n    <div\n      class=\"bb-block bb-block--md\"\n      *ngIf=\"\n        !(options?.noBalanceText && isAmountOptionsZero(product));\n        else noBalanceMessage\n      \"\n    >\n      <bb-payord-validation-message\n        id=\"amount-option-error-message\"\n        [control]=\"group.get(config.name)\"\n        [validationMessages]=\"options?.validationMessages\"\n        class=\"d-block bb-block bb-block--md\"\n      ></bb-payord-validation-message>\n      <bb-input-radio-group-ui\n        [formControlName]=\"config.name\"\n        [aria-describedby]=\"'amount-option-error-message'\"\n        [preselect]=\"options?.preselect\"\n        [horizontal]=\"options?.horizontal\"\n      >\n        <bb-input-radio-ui\n          *ngFor=\"let option of amountOptions; index as i\"\n          aria-labelledby=\"payord-amount-options-amount-{{\n            i\n          }} payord-amount-options-label-{{ i }}\"\n          aria-describedby=\"payord-amount-options-description-{{ i }}\"\n          [labelTemplate]=\"\n            option.hasCustomAmountInput ? otherTemplate : labelTemplate\n          \"\n          [labelTemplateContext]=\"[option, product, i]\"\n          [value]=\"i\"\n        ></bb-input-radio-ui>\n      </bb-input-radio-group-ui>\n    </div>\n    <ng-template #noBalanceMessage>\n      <div class=\"bb-block bb-block--md bb-amount-options__no-balance-text\">\n        {{ options?.noBalanceText }}\n      </div>\n    </ng-template>\n  </fieldset>\n</ng-container>\n\n<ng-template #labelTemplate let-context=\"labelTemplateContext\">\n  <div\n    class=\"bb-stack bb-stack--wrap\"\n    [ngClass]=\"options?.amountOptions?.cssClasses\"\n  >\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div attr.id=\"payord-amount-options-label-{{ context[2] }}\">\n        {{ context[0].label }}\n      </div>\n      <div *ngIf=\"context[0].description\">\n        <span\n          class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n          attr.id=\"payord-amount-options-description-{{ context[2] }}\"\n        >\n          {{ context[0].description }}\n        </span>\n      </div>\n    </div>\n    <div class=\"bb-stack__item bb-stack__break--sm-down\">\n      <bb-amount-ui\n        attr.id=\"payord-amount-options-amount-{{ context[2] }}\"\n        [amount]=\"context[1].defaultRecord[context[0].amountApiField]\"\n        [currency]=\"context[1].currency\"\n        [mapCurrency]=\"options?.mapCurrency !== false\"\n        [bbHighlight]=\"options?.highlight\"\n        [abbreviate]=\"options?.abbreviate\"\n        [showPlusSign]=\"options?.showPlusSign\"\n        [trailingZeroes]=\"options?.trailingZeroes !== false\"\n      ></bb-amount-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #otherTemplate let-context=\"labelTemplateContext\">\n  <div\n    class=\"bb-amount-input__field--large bb-form-field bb-form-field--md\"\n    [ngClass]=\"options?.amountOptions?.cssClasses\"\n    [class.was-validated]=\"\n      touched &&\n      group.controls[remittanceInfoFields.amountCurrencyGroup].invalid\n    \"\n  >\n    <div>{{ context[0].label }}</div>\n    <div *ngIf=\"context[0].description\" class=\"bb-block bb-block--sm\">\n      <span\n        class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n      >\n        {{ context[0].description }}\n      </span>\n    </div>\n    <ng-container *ngIf=\"group.controls[config.name]?.value === context[2]\">\n      <div\n        class=\"position-relative\"\n        [formGroup]=\"group.controls[remittanceInfoFields.amountCurrencyGroup]\"\n      >\n        <bb-amount-input-ui\n          [formControlName]=\"remittanceInfoFields.amount\"\n          (focusout)=\"touched = true\"\n          [mapCurrency]=\"options?.showCurrencySymbol !== false\"\n          [wrapperClasses]=\"\n            options.wrapperClasses || 'bb-amount-input__field--large'\n          \"\n          [currency]=\"context[1].currency\"\n          [required]=\"true\"\n          [autoDecimal]=\"options.autoDecimal\"\n          [aria-describedby]=\"'compact-amount-error-message'\"\n          [placeholder]=\"options?.placeholder || '0.00'\"\n          [maxLength]=\"options?.maxLength\"\n        ></bb-amount-input-ui>\n      </div>\n      <bb-payord-validation-message\n        [id]=\"'compact-amount-error-message'\"\n        [control]=\"group.controls[remittanceInfoFields.amountCurrencyGroup]\"\n        [validationMessages]=\"options?.validationMessages\"\n      ></bb-payord-validation-message>\n    </ng-container>\n  </div>\n</ng-template>\n"]}