import { Component } from '@angular/core';
import { CounterPartyFields, Scheme, PaymentFormFieldHooks, } from '@backbase/payment-orders-ang';
import { registerFormControl } from '../../helpers/form-helpers';
import { triggerHook } from '../../helpers/hooks-helpers';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/input-text";
import * as i2 from "../validation-message/validation-message.component";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
import * as i5 from "../../directives/dynamic-aria-attribute.directive";
import * as i6 from "@backbase/payment-orders-ang";
export class PayordTextboxComponent {
    ngOnInit() {
        this.control = registerFormControl(this.group, this.config.name, this.options.validators, this.options.asyncValidators, this.options.defaultValue, this.config);
        if (this.options.isIban) {
            const schemeNameControl = this.group.get(CounterPartyFields.schemeName) ||
                registerFormControl(this.group, CounterPartyFields.schemeName);
            if (schemeNameControl.value !== Scheme.IBAN) {
                schemeNameControl.setValue(Scheme.IBAN);
            }
        }
        triggerHook(PaymentFormFieldHooks.onInit, this);
    }
    ngOnDestroy() {
        triggerHook(PaymentFormFieldHooks.onDestroy, this);
    }
}
/** @nocollapse */ PayordTextboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordTextboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PayordTextboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PayordTextboxComponent, selector: "bb-payord-text", ngImport: i0, template: "<div\n  *ngIf=\"!config?.hidden\"\n  class=\"bb-dynamic-input form-group contextual-alternates-off\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <ng-container *ngIf=\"!options?.isIban; else ibanElem\">\n    <label\n      class=\"bb-dynamic-input__label\"\n      [id]=\"inputEl?.id + '__label'\"\n      [for]=\"inputEl?.id\"\n      #labelElem\n    >\n      {{ options?.label || '' }}\n    </label>\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      [textContent]=\"options?.helperText\"\n      *ngIf=\"options?.helperText\"\n    >\n    </span>\n    <bb-input-text-ui\n      #inputEl\n      [formControlName]=\"config.name\"\n      [disabled]=\"options?.disabled\"\n      [minLength]=\"options?.minLength\"\n      [maxLength]=\"options?.maxLength\"\n      [showCharCounter]=\"options?.showCharCounter\"\n      [id]=\"options?.id\"\n      [placeholder]=\"options?.placeholder || ''\"\n      [autocomplete]=\"options?.autoComplete\"\n      [autofocus]=\"options?.autofocus\"\n      [readonly]=\"options?.readonly\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid,\n        __desc: options?.description\n      }\"\n      [attr.data-role]=\"config.name\"\n    >\n    </bb-input-text-ui>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n      [id]=\"inputEl?.id + '__error'\"\n      #errorElem\n    ></bb-payord-validation-message>\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #descElem\n    ></div>\n  </ng-container>\n\n  <ng-template #ibanElem>\n    <label\n      class=\"bb-dynamic-input__label\"\n      [id]=\"ibanInput?.id + '__label'\"\n      [for]=\"ibanInput?.id\"\n      [textContent]=\"options?.label || ''\"\n      #ibanLabelElem\n    >\n    </label>\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      *ngIf=\"options?.helperText\"\n      [textContent]=\"options?.helperText\"\n    >\n    </span>\n    <bb-input-text-ui\n      [formControlName]=\"config.name\"\n      [disabled]=\"options?.disabled\"\n      [maxLength]=\"options?.maxLength\"\n      [placeholder]=\"options?.placeholder || ''\"\n      [autocomplete]=\"options?.autoComplete\"\n      [autofocus]=\"options?.autofocus\"\n      [minLength]=\"options?.minLength\"\n      [readonly]=\"options?.readonly\"\n      [id]=\"options?.id\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid,\n        __desc: options?.description\n      }\"\n      bbIban\n      #ibanInput\n    >\n    </bb-input-text-ui>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n      [id]=\"ibanInput?.id + '__error'\"\n      #ibanErrorElem\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"ibanInput?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #ibanDescElem\n    ></div>\n  </ng-template>\n</div>\n", components: [{ type: i1.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i2.ValidationMessageComponent, selector: "bb-payord-validation-message", inputs: ["control", "validationMessages", "label", "id", "hideGeneric"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i5.DynamicAriaAttributeDirective, selector: "[bbDynamicAriaAttribute]", inputs: ["bbDynamicAriaAttribute", "prependInputId", "inputSelector", "ariaAttributeName"] }, { type: i6.ӨIbanDirective, selector: "[bbIban]", inputs: ["maxLen"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordTextboxComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payord-text',
                    templateUrl: './payord-text.component.html',
                }]
        }] });
//# sourceMappingURL=payord-text.component.js.map