{"version":3,"file":"payord-address.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/address/payord-address.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/address/payord-address.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport {\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentFormField,\n  PaymentFormFieldHooks,\n  AddressType,\n  focusErrorElement,\n  PaymentBaseFields,\n  CounterPartyFields,\n  isAddressTruthy,\n} from '@backbase/payment-orders-ang';\nimport {\n  registerFormGroup,\n  registerFormControl,\n  getParentForm,\n} from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SanctionedCountry } from '@backbase/data-ang/payment-order-options';\nimport { CountriesMap, ViewType } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-address',\n  templateUrl: './payord-address.component.html',\n})\nexport class PayordAddressComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  options: PaymentFormFieldOptions = {};\n  countries$!: Observable<{ label: string; value: string | undefined }>;\n\n  addressViewType = ViewType.FORM;\n  addressGroup!: FormGroup;\n  initialAddress = {\n    addressLine1: [''],\n    addressLine2: [''],\n    streetName: [''],\n    postCode: [''],\n    town: [''],\n    countrySubDivision: [''],\n  };\n  parentForm!: FormGroup;\n  counterpartyIdControl!: AbstractControl;\n\n  constructor(private readonly elRef: ElementRef) {}\n\n  ngOnInit() {\n    this.options.hideCountry =\n      this.options.hideCountry ||\n      (this.options.isWizardMode &&\n        this.options.addressType === AddressType['beneficiary bank']);\n    this.countries$ =\n      this.options.useSanctionedCountries || this.options.isWizardMode\n        ? this.options.items$.pipe(\n            map((items: Array<SanctionedCountry>) =>\n              items.map(({ country }: SanctionedCountry) => ({\n                value: country,\n                label: CountriesMap[country],\n              }))\n            )\n          )\n        : of(this.options.countries);\n\n    this.addressGroup = <FormGroup>(\n      registerFormGroup(this.group, this.config.name, this.initialAddress)\n    );\n    if (!this.options.hideCountry) {\n      registerFormControl(this.addressGroup, 'country');\n    }\n    this.addressViewType = isAddressTruthy(this.addressGroup.value)\n      ? ViewType.CARD\n      : ViewType.BUTTON;\n    this.parentForm = getParentForm(this.group);\n    this.counterpartyIdControl = <AbstractControl>(\n      this.parentForm.get([\n        PaymentBaseFields.counterparty,\n        CounterPartyFields.id,\n      ])\n    );\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  onAddressAdd() {\n    this.addressViewType = ViewType.FORM;\n  }\n\n  onAddressEdit() {\n    this.addressViewType = ViewType.FORM;\n  }\n\n  onAddressDelete() {\n    this.addressViewType = ViewType.BUTTON;\n    if (this.options.hideCountry || this.options.options?.length === 1) {\n      for (const key in this.addressGroup.controls) {\n        if (key !== 'country') {\n          this.addressGroup.controls[key].reset();\n        }\n      }\n    } else {\n      this.addressGroup.reset();\n    }\n  }\n\n  onAddressReset() {\n    this.addressViewType = ViewType.BUTTON;\n  }\n\n  onAddressSubmit() {\n    if (this.addressGroup.valid) {\n      this.addressViewType = ViewType.CARD;\n    } else {\n      focusErrorElement(this.elRef.nativeElement);\n    }\n  }\n}\n","<div class=\"bb-dynamic-input\" [hidden]=\"config?.hidden\">\n  <div class=\"form-group\" [ngClass]=\"options?.cssClasses\">\n    <bb-address-item-details\n      [addressForm]=\"addressGroup\"\n      [addressType]=\"options?.addressType\"\n      [viewType]=\"options?.viewType || addressViewType\"\n      [isClosedPayment]=\"\n        parentForm.get('isClosedPayment')?.value || counterpartyIdControl?.value\n      \"\n      (add)=\"onAddressAdd()\"\n      (edit)=\"onAddressEdit()\"\n      (discard)=\"onAddressDelete()\"\n      (delete)=\"onAddressDelete()\"\n      (reset)=\"onAddressReset()\"\n      (submit)=\"onAddressSubmit()\"\n      [states]=\"options?.states\"\n      [countries]=\"countries$ | async\"\n      [hideCountry]=\"options?.hideCountry\"\n      [attr.data-role]=\"config?.name\"\n    >\n    </bb-address-item-details>\n  </div>\n</div>\n"]}