{"version":3,"file":"payord-textarea.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/textarea/payord-textarea.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/textarea/payord-textarea.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,UAAU,EAAE,MAAM,eAAe,CAAC;AAEzE,OAAO,EAIL,qBAAqB,EACrB,iBAAiB,GAClB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;;;;;;;;;AAM9D,MAAM,OAAO,uBAAuB;IASlC,YAA6B,KAA8B;QAA9B,UAAK,GAAL,KAAK,CAAyB;QAF3D,gBAAW,GAAG,KAAK,CAAC;IAE0C,CAAC;IAE/D,QAAQ;;QACN,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAChC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,OAAO,CAAC,UAAU,EACvB,IAAI,CAAC,OAAO,CAAC,eAAe,EAC5B,IAAI,CAAC,OAAO,CAAC,YAAY,EACzB,IAAI,CAAC,MAAM,CACZ,CAAC;QACF,IAAI,MAAA,IAAI,CAAC,OAAO,CAAC,KAAK,0CAAE,OAAO,EAAE;YAC/B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACnD;QACD,IAAI,CAAC,WAAW;YACd,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACtE,WAAW,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IAC1D,CAAC;IAED,WAAW;QACT,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;;wIAnCU,uBAAuB;4HAAvB,uBAAuB,0DCjBpC,0sFAkFA;4FDjEa,uBAAuB;kBAJnC,SAAS;mBAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,WAAW,EAAE,kCAAkC;iBAChD","sourcesContent":["import { Component, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport {\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentFormFieldHooks,\n  focusChildElement,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { isObjectTruthy } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-textarea',\n  templateUrl: './payord-textarea.component.html',\n})\nexport class PayordTextAreaComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  options!: PaymentFormFieldOptions;\n  control!: AbstractControl;\n  isCollapsed = false;\n\n  constructor(private readonly elRef: ElementRef<HTMLElement>) {}\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    if (this.control.value?.content) {\n      this.control.setValue(this.control.value.content);\n    }\n    this.isCollapsed =\n      !this.control.value && isObjectTruthy(this.options.collapseOptions);\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  expand() {\n    this.isCollapsed = false;\n    focusChildElement('textarea', this.elRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<ng-container *ngIf=\"!config?.hidden\">\n  <div\n    *ngIf=\"!isCollapsed\"\n    class=\"bb-dynamic-input form-group\"\n    [formGroup]=\"group\"\n    [ngClass]=\"options?.cssClasses\"\n  >\n    <label\n      class=\"bb-dynamic-input__label\"\n      [id]=\"inputEl?.id + '__label'\"\n      [for]=\"inputEl?.id\"\n      [textContent]=\"options?.label || ''\"\n      #labelElem\n    ></label>\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      *ngIf=\"options?.helperText\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.helperText\"\n    >\n    </span>\n    <bb-textarea-ui\n      [placeholder]=\"options?.placeholder || ''\"\n      [formControlName]=\"config.name\"\n      [showCharCounter]=\"true\"\n      [minLength]=\"options?.minLength\"\n      [maxLength]=\"options?.maxLength\"\n      [rows]=\"options?.rows\"\n      [cols]=\"options?.cols\"\n      [attr.data-role]=\"config.name\"\n      wrap=\"hard\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid,\n        __desc: options?.description\n      }\"\n      #inputEl\n    >\n    </bb-textarea-ui>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #descElem\n    ></div>\n  </div>\n\n  <ng-container *ngIf=\"isCollapsed\">\n    <span class=\"bb-dynamic-input__collapse-btn-container\">\n      <button\n        class=\"bb-dynamic-input__collapse-btn\"\n        bbButton\n        [color]=\"options?.collapseOptions?.btnColor || 'link'\"\n        [buttonSize]=\"options?.collapseOptions?.btnSize\"\n        (click)=\"expand()\"\n      >\n        <bb-icon-ui\n          class=\"bb-dynamic-input__collapse-btn-icon mr-2\"\n          *ngIf=\"!options?.collapseOptions?.hideIcon\"\n          [name]=\"options?.collapseOptions?.icon || 'add'\"\n          [size]=\"options?.collapseOptions?.iconSize\"\n        >\n        </bb-icon-ui>\n        <span class=\"bb-dynamic-input__collapse-btn-label\">\n          {{ options?.collapseOptions?.label || options?.label }}\n        </span>\n      </button>\n      <bb-payord-validation-message\n        [control]=\"group?.controls[config.name]\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label\"\n      ></bb-payord-validation-message>\n    </span>\n  </ng-container>\n</ng-container>\n"]}