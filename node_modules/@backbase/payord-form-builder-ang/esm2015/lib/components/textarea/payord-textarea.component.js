import { Component, ElementRef } from '@angular/core';
import { PaymentFormFieldHooks, focusChildElement, } from '@backbase/payment-orders-ang';
import { registerFormControl } from '../../helpers/form-helpers';
import { triggerHook } from '../../helpers/hooks-helpers';
import { isObjectTruthy } from '@backbase/payment-orders-ang';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/textarea";
import * as i2 from "../validation-message/validation-message.component";
import * as i3 from "@backbase/ui-ang/icon";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
import * as i6 from "../../directives/dynamic-aria-attribute.directive";
import * as i7 from "@backbase/ui-ang/button";
export class PayordTextAreaComponent {
    constructor(elRef) {
        this.elRef = elRef;
        this.isCollapsed = false;
    }
    ngOnInit() {
        var _a;
        this.control = registerFormControl(this.group, this.config.name, this.options.validators, this.options.asyncValidators, this.options.defaultValue, this.config);
        if ((_a = this.control.value) === null || _a === void 0 ? void 0 : _a.content) {
            this.control.setValue(this.control.value.content);
        }
        this.isCollapsed =
            !this.control.value && isObjectTruthy(this.options.collapseOptions);
        triggerHook(PaymentFormFieldHooks.onInit, this);
    }
    expand() {
        this.isCollapsed = false;
        focusChildElement('textarea', this.elRef.nativeElement);
    }
    ngOnDestroy() {
        triggerHook(PaymentFormFieldHooks.onDestroy, this);
    }
}
/** @nocollapse */ PayordTextAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordTextAreaComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PayordTextAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PayordTextAreaComponent, selector: "bb-payord-textarea", ngImport: i0, template: "<ng-container *ngIf=\"!config?.hidden\">\n  <div\n    *ngIf=\"!isCollapsed\"\n    class=\"bb-dynamic-input form-group\"\n    [formGroup]=\"group\"\n    [ngClass]=\"options?.cssClasses\"\n  >\n    <label\n      class=\"bb-dynamic-input__label\"\n      [id]=\"inputEl?.id + '__label'\"\n      [for]=\"inputEl?.id\"\n      [textContent]=\"options?.label || ''\"\n      #labelElem\n    ></label>\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      *ngIf=\"options?.helperText\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.helperText\"\n    >\n    </span>\n    <bb-textarea-ui\n      [placeholder]=\"options?.placeholder || ''\"\n      [formControlName]=\"config.name\"\n      [showCharCounter]=\"true\"\n      [minLength]=\"options?.minLength\"\n      [maxLength]=\"options?.maxLength\"\n      [rows]=\"options?.rows\"\n      [cols]=\"options?.cols\"\n      [attr.data-role]=\"config.name\"\n      wrap=\"hard\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid,\n        __desc: options?.description\n      }\"\n      #inputEl\n    >\n    </bb-textarea-ui>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #descElem\n    ></div>\n  </div>\n\n  <ng-container *ngIf=\"isCollapsed\">\n    <span class=\"bb-dynamic-input__collapse-btn-container\">\n      <button\n        class=\"bb-dynamic-input__collapse-btn\"\n        bbButton\n        [color]=\"options?.collapseOptions?.btnColor || 'link'\"\n        [buttonSize]=\"options?.collapseOptions?.btnSize\"\n        (click)=\"expand()\"\n      >\n        <bb-icon-ui\n          class=\"bb-dynamic-input__collapse-btn-icon mr-2\"\n          *ngIf=\"!options?.collapseOptions?.hideIcon\"\n          [name]=\"options?.collapseOptions?.icon || 'add'\"\n          [size]=\"options?.collapseOptions?.iconSize\"\n        >\n        </bb-icon-ui>\n        <span class=\"bb-dynamic-input__collapse-btn-label\">\n          {{ options?.collapseOptions?.label || options?.label }}\n        </span>\n      </button>\n      <bb-payord-validation-message\n        [control]=\"group?.controls[config.name]\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label\"\n      ></bb-payord-validation-message>\n    </span>\n  </ng-container>\n</ng-container>\n", components: [{ type: i1.TextareaComponent, selector: "bb-textarea-ui", inputs: ["rows", "cols", "placeholder", "maxLength", "minLength", "readonly", "showCharCounter", "wrap"] }, { type: i2.ValidationMessageComponent, selector: "bb-payord-validation-message", inputs: ["control", "validationMessages", "label", "id", "hideGeneric"] }, { type: i3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i6.DynamicAriaAttributeDirective, selector: "[bbDynamicAriaAttribute]", inputs: ["bbDynamicAriaAttribute", "prependInputId", "inputSelector", "ariaAttributeName"] }, { type: i7.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordTextAreaComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payord-textarea',
                    templateUrl: './payord-textarea.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });
//# sourceMappingURL=payord-textarea.component.js.map