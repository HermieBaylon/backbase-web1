{"version":3,"file":"payord-debit-account-selector.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/debit-account-selector/payord-debit-account-selector.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/debit-account-selector/payord-debit-account-selector.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport {\n  Component,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Optional,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  FormGroup,\n  AbstractControl,\n  Validators,\n  ValidatorFn,\n} from '@angular/forms';\nimport { Observable, Subject, of, BehaviorSubject } from 'rxjs';\nimport {\n  ArrangementList,\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n  InitiatorFields,\n  PaymentFormFieldHooks,\n  PaymentBaseFields,\n  BB_CLOSED_PAYMENT_BUS_FN_SUFFIX,\n  BB_INTRACOMPANY_PAYMENT_BUS_FN_SUFFIX,\n  DefaultClosedPaymentBusFnSuffix,\n  DefaultIntraCompanyPaymentBusFnSuffix,\n  HiddenFields,\n  InternalAccountFormItem,\n  forbiddenStatus,\n  CounterPartyFields,\n  missingInListValidator,\n  sameAccountsValidator,\n} from '@backbase/payment-orders-ang';\nimport {\n  getParentForm,\n  isClosedPaymentValidator,\n  registerFormControl,\n} from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport {\n  catchError,\n  debounceTime,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { DeprecationsService } from '@backbase/foundation-ang/core';\nimport { SchemeNames } from '@backbase/data-ang/payment-order';\nimport { toggleBeneficiaryControls } from '../../helpers/generic-utils';\n\n@Component({\n  selector: 'bb-payord-debit-account-selector',\n  templateUrl: 'payord-debit-account-selector.component.html',\n})\nexport class PayordDebitAccountSelectorComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n\n  control!: AbstractControl;\n  /**\n   * @deprecated\n   * This property is deprecated from 3.10.3 and will be removed in next major release\n   * Please use `arangementItems$` instead\n   */\n  items$!: Observable<Array<InternalAccountFormItem>>;\n  arrangementItems$!: Observable<ArrangementList>;\n  arrangementList!: ArrangementList;\n  selectedAccount!: InternalAccountFormItem & { number?: string };\n  initialDebitGroup = {\n    [InitiatorFields.id]: [''],\n    [InitiatorFields.name]: [''],\n    [InitiatorFields.accountNumber]: [''],\n    schemeName: [],\n    currency: [''],\n    balance: [''],\n  };\n  form!: FormGroup;\n  gc$ = new Subject<void>();\n  isClosedPaymentControl?: AbstractControl;\n  private loadDebitAccountAndSelect$ = new Subject<undefined>();\n  private accountIds: string[] = [];\n  private currentPage = 0;\n  private searchTerm = '';\n  typeahead$ = new Subject<string>();\n  loading$ = new BehaviorSubject(true);\n  defaultTypeToSearchText = $localize`:@@debit-account-selector.default-type-to-search-text:No items found`;\n\n  constructor(\n    @Optional()\n    @Inject(BB_CLOSED_PAYMENT_BUS_FN_SUFFIX)\n    private closedPaymentBusFnSuffix: string,\n    @Optional()\n    @Inject(BB_INTRACOMPANY_PAYMENT_BUS_FN_SUFFIX)\n    private intraCompanyPaymentBusFnSuffix: string,\n    private readonly deprecationService: DeprecationsService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.deprecationService.logDeprecatedFeature(\n      `\"BB_CLOSED_PAYMENT_BUS_FN_SUFFIX\", \"BB_INTRACOMPANY_PAYMENT_BUS_FN_SUFFIX\", \"DefaultClosedPaymentBusFnSuffix\" and\n      \"DefaultIntraCompanyPaymentBusFnSuffix\" are deprecated and will be removed in next major release`\n    );\n    this.closedPaymentBusFnSuffix =\n      this.closedPaymentBusFnSuffix || DefaultClosedPaymentBusFnSuffix;\n    this.intraCompanyPaymentBusFnSuffix =\n      this.intraCompanyPaymentBusFnSuffix ||\n      DefaultIntraCompanyPaymentBusFnSuffix;\n    this.registerFields();\n    this.listenSearch();\n    this.control = this.group.controls['id'];\n    this.form = getParentForm(this.control);\n    this.isClosedPaymentControl = registerFormControl(\n      this.form,\n      HiddenFields.isClosedPayment\n    );\n    // populate value to show it in edit mode\n    if (this.group.value.id) {\n      this.selectItem(this.group.value);\n    }\n    // populate account balance and currency when applying a payment template or editing payment\n    this.arrangementItems$ = this.options?.items$?.pipe(\n      tap(({ items: list }: ArrangementList) => {\n        this.accountIds = list.map((item: InternalAccountFormItem) => item.id);\n        if (this.group.value.id) {\n          const selectedAccount = list?.find(\n            (item) => item.id === this.group.value.id\n          );\n          if (selectedAccount) {\n            this.selectItem(selectedAccount);\n          } else {\n            // we need to load debit account to show it selected\n            this.loadDebitAccountAndSelect$.next();\n          }\n        }\n      }),\n      catchError((err: HttpErrorResponse) => of(err))\n    );\n\n    this.arrangementItems$\n      .pipe(takeUntil(this.gc$))\n      .subscribe((arrangementList) => {\n        this.loading$.next(false);\n        this.arrangementList = arrangementList;\n        this.cdRef.detectChanges();\n      });\n\n    const counterpartyGroup = <FormGroup>(\n      this.form.get(PaymentBaseFields.counterparty)\n    );\n\n    if (this.options.checkClosedPaymentsAccess) {\n      this.isClosedPaymentControl?.valueChanges\n        .pipe(takeUntil(this.gc$))\n        .subscribe((isClosedPayment: boolean) => {\n          if (isClosedPayment) {\n            toggleBeneficiaryControls(counterpartyGroup, isClosedPayment);\n            this.control.updateValueAndValidity();\n          }\n        });\n\n      this.options.arrangementPermissions$\n        ?.pipe(takeUntil(this.gc$))\n        .subscribe((response: HttpResponse<any>) => {\n          this.isClosedPaymentControl?.setValue(\n            response?.status === forbiddenStatus\n          );\n        });\n    }\n    this.loadDebitAccountAndSelect$\n      .pipe(\n        takeUntil(this.gc$),\n        switchMap(\n          () =>\n            this.options.loadAccountByAccountId(\n              this.group.value.id,\n              this.group.value.accountNumber\n            ) as Observable<InternalAccountFormItem | undefined>\n        ),\n        tap((item: InternalAccountFormItem | undefined) => {\n          if (item) {\n            this.accountIds.push(item.id);\n          } else {\n            this.control.setValidators([\n              Validators.required,\n              missingInListValidator(this.getAccountIdsList.bind(this)),\n            ]);\n            this.control.updateValueAndValidity();\n          }\n          const account = item || this.group.value;\n          this.selectItem(account);\n        }),\n        catchError(() => of(undefined))\n      )\n      .subscribe();\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  private fetchArrangementPermissions(arrangementId: string) {\n    if (\n      !this.options.isWizardMode &&\n      this.options.checkClosedPaymentsAccess &&\n      arrangementId\n    ) {\n      this.options.fetchArrangementPermissions$?.next(arrangementId);\n    }\n  }\n\n  private getAccountIdsList() {\n    return this.accountIds;\n  }\n\n  private listenSearch() {\n    this.typeahead$\n      .pipe(takeUntil(this.gc$), debounceTime(300))\n      .subscribe((query: string) => {\n        this.onSearch(query);\n      });\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  registerFields() {\n    const validators: { [key: string]: Array<ValidatorFn> } = {\n      [InitiatorFields.id]: [Validators.required],\n    };\n    for (const key in this.initialDebitGroup) {\n      if (this.initialDebitGroup.hasOwnProperty(key)) {\n        if (key === InitiatorFields.id) {\n          if (this.checkClosedPayment()) {\n            validators[InitiatorFields.id].push(isClosedPaymentValidator);\n          }\n          if (this.isCounterpartyGroup()) {\n            validators[InitiatorFields.id].push(sameAccountsValidator());\n          }\n        }\n        registerFormControl(this.group, key, validators[key], [], '');\n      }\n    }\n  }\n\n  private isCounterpartyGroup(): boolean {\n    return this.config.name === CounterPartyFields.counterPartyAccountGroup;\n  }\n\n  private checkClosedPayment(): boolean {\n    return (\n      !this.options.isWizardMode &&\n      this.config.name === InitiatorFields.initiatorAccountGroup &&\n      this.options.checkClosedPaymentsAccess\n    );\n  }\n\n  selectItem(account: InternalAccountFormItem) {\n    if (this.group && account.name) {\n      this.group.patchValue({\n        id: account.id,\n        name: account.name,\n        accountNumber: account.accountNumber,\n        balance: account.balance,\n        currency: account.currency,\n        accountType: account.accountType,\n        additions: account.additions || {},\n        schemeName: SchemeNames.ID,\n      });\n      this.selectedAccount = {\n        ...account,\n        number: account.accountNumber,\n        currency: account.currency,\n        balance: account.balance,\n      };\n\n      if (!this.isCounterpartyGroup()) {\n        this.form\n          .get([PaymentBaseFields.counterparty, CounterPartyFields.id])\n          ?.updateValueAndValidity();\n      }\n\n      this.fetchArrangementPermissions(account.id);\n    }\n\n    this.group.markAllAsTouched();\n    this.group.markAsDirty();\n  }\n\n  onBlur() {\n    if (this.options.required) {\n      this.group.markAllAsTouched();\n    }\n  }\n\n  onScrollToEnd(): void {\n    this.options.fetchItems$.next({\n      from: ++this.currentPage,\n      searchTerm: this.searchTerm,\n    });\n    this.loading$.next(true);\n  }\n\n  onSearch(searchTerm: string) {\n    this.currentPage = 0;\n    this.searchTerm = searchTerm;\n    this.options.fetchItems$.next({ from: this.currentPage, searchTerm });\n    this.loading$.next(true);\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n>\n  <section class=\"payment-from\" [formGroup]=\"group\">\n    <label class=\"d-block\">\n      <div *ngIf=\"options?.label\" class=\"bb-dynamic-input__label bb-label\">\n        <span>\n          {{ options?.label }}\n        </span>\n        <span\n          class=\"bb-dynamic-input__helper-text bb-text-support\"\n          *ngIf=\"options?.helperText\"\n          [textContent]=\"options?.helperText\"\n        >\n        </span>\n      </div>\n      <div class=\"bb-form-field\">\n        <bb-account-selector-ui\n          [markFirst]=\"true\"\n          [highlight]=\"false\"\n          [filterItems]=\"options?.filterItems\"\n          [closeOnSelect]=\"true\"\n          [dropdownPosition]=\"'bottom'\"\n          [items]=\"arrangementList?.items\"\n          [selectedItems]=\"selectedAccount\"\n          (change)=\"selectItem($event)\"\n          (blur)=\"onBlur()\"\n          [placeholder]=\"options?.placeholder || ''\"\n          [attr.aria-label]=\"options?.label\"\n          [required]=\"options?.required\"\n          [attr.data-role]=\"'debit-account-selector'\"\n          [showBankBranchCode]=\"options?.showBankBranchCode\"\n          [bbDynamicAriaAttribute]=\"{\n            'payord-debit-account-selector__error':\n              control?.touched && control?.invalid,\n            'payord-debit-account-selector__desc': options?.description\n          }\"\n          [prependInputId]=\"false\"\n          inputSelector=\".ng-input input\"\n          [disableScrollEnd]=\"\n            arrangementList?.items?.length >= arrangementList?.count\n          \"\n          (scrollToEnd)=\"onScrollToEnd()\"\n          [searchFunc]=\"options.searchFn\"\n          [minTermLength]=\"options.minTermLength || 0\"\n          [typeToSearchText]=\"\n            options.typeToSearchText || defaultTypeToSearchText\n          \"\n          [typeahead]=\"options.disableTypeahead ? undefined : typeahead$\"\n          [loading]=\"loading$ | async\"\n        ></bb-account-selector-ui>\n      </div>\n    </label>\n\n    <bb-payord-validation-message\n      [control]=\"control\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label || 'Debit account'\"\n      [id]=\"'payord-debit-account-selector__error'\"\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      id=\"payord-debit-account-selector__desc\"\n      *ngIf=\"options?.description\"\n      [textContent]=\"options?.description\"\n    ></div>\n  </section>\n</div>\n"]}