{"version":3,"file":"payord-beneficiary-selector.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/beneficiary-selector/payord-beneficiary-selector.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/beneficiary-selector/payord-beneficiary-selector.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\nimport {\n  AccountInformation,\n  Address,\n  BeneficiaryContactItem,\n  ContactItem,\n  BeneficiaryList,\n  CounterPartyFields,\n  FetchCreditorItemsParams,\n  getAccountHolderAddress,\n  getContactBankAddress,\n  HiddenFields,\n  isAddressTruthy,\n  InitiatorFields,\n  InternalAccountFormItem,\n  PaymentBaseFields,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n  PaymentFormFieldOptions,\n  sameAccountsValidator,\n} from '@backbase/payment-orders-ang';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\n\nimport {\n  registerFormControl,\n  registerFormGroup,\n} from '../../helpers/form-helpers';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { toggleBeneficiaryControls } from '../../helpers/generic-utils';\n\n@Component({\n  selector: 'bb-payord-beneficiary-selector',\n  templateUrl: 'payord-beneficiary-selector.component.html',\n})\nexport class PayordBeneficiarySelectorComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  options!: PaymentFormFieldOptions;\n\n  selectedAccount!: InternalAccountFormItem;\n  showBeneficiaryDetails = false;\n  accountNameControl!: AbstractControl;\n  beneficiaryAccountNameControl!: AbstractControl;\n  accountNumberControl!: AbstractControl;\n  bankCodeControl!: AbstractControl;\n  bankNameControl!: AbstractControl;\n  bankBicControl!: AbstractControl;\n  beneficiaryAddressGroup!: AbstractControl;\n  beneficiaryBankAddressGroup!: AbstractControl;\n  beneficiaryBankGroup!: AbstractControl;\n  saveContactControlName = CounterPartyFields.saveNewContact;\n  saveContactControl!: AbstractControl;\n  saveNewContactControl!: AbstractControl;\n  selectedContactControl!: AbstractControl;\n  manualEdit$ = new BehaviorSubject<boolean>(false);\n  manualEditControl!: AbstractControl;\n  isClosedPaymentControl!: AbstractControl;\n  selectedBeneficiaryControl!: AbstractControl;\n  enableBeneficiaryControl!: AbstractControl;\n  // This control is deprecated, please use `initiatorIdControl` instead\n  initiatorNameControl!: AbstractControl;\n  initiatorIdControl!: AbstractControl;\n  hideBeneficiaryFieldsControl!: AbstractControl;\n  private arrangementIdControl!: AbstractControl;\n\n  private query = '';\n  private initiatorControlSubscription?: Subscription;\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly visibilityService: VisibilityService,\n    private readonly deprecationService: DeprecationsService\n  ) {}\n\n  ngOnInit() {\n    this.setupFormFields();\n    if (this.options.isWizardMode) {\n      this.setupWizardFormFields();\n    }\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n    if (this.accountNameControl.value || this.options?.isTemplateMode) {\n      this.showDependantFields();\n    } else {\n      this.hideDependantFields();\n    }\n\n    const initiatorControl = this.group.parent?.get(\n      PaymentBaseFields.initiator\n    );\n    initiatorControl?.valueChanges\n      .pipe(takeUntil(this.destroy$), startWith(initiatorControl.value))\n      .subscribe(({ id }) => {\n        this.accountNameControl.updateValueAndValidity();\n      });\n\n    this.arrangementIdControl?.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((controlId) => {\n        if (!this.isClosedPaymentControl.value) {\n          toggleBeneficiaryControls(this.group, !!controlId);\n        }\n      });\n\n    this.hideBeneficiaryFieldsControl?.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.onSearch('');\n        this.enableBeneficiaryControl.setValue(true);\n        this.manualEdit$.next(false);\n        this.saveNewContactControl.setValue(false);\n        if (!this.options.isWizardMode) {\n          this.hideDependantFields();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.initiatorControlSubscription?.unsubscribe();\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  setupFormFields() {\n    this.deprecationService.logDeprecatedFeature(`\n      \"initiatorNameControl\" is deprecated and will be removed in next major release, please use \"initiatorIdControl\" instead.\n    `);\n    this.accountNameControl = registerFormControl(\n      this.group,\n      this.config.name,\n      [Validators.required, sameAccountsValidator()]\n    );\n    this.manualEditControl = registerFormControl(\n      this.group.parent as FormGroup,\n      HiddenFields.isManualEdit\n    );\n    this.isClosedPaymentControl = registerFormControl(\n      this.group.parent as FormGroup,\n      HiddenFields.isClosedPayment\n    );\n    this.enableBeneficiaryControl = registerFormControl(\n      this.group.parent as FormGroup,\n      HiddenFields.enableBeneficiary,\n      [],\n      [],\n      true\n    );\n    this.beneficiaryAccountNameControl = registerFormControl(\n      this.group,\n      HiddenFields.beneficiaryAccountName\n    );\n    this.saveContactControl = registerFormControl(\n      this.group,\n      this.saveContactControlName\n    );\n    this.saveNewContactControl = registerFormControl(\n      this.group,\n      HiddenFields.showSaveNewContact\n    );\n    this.hideBeneficiaryFieldsControl = registerFormControl(\n      this.group,\n      HiddenFields.hideBeneficiaryFields\n    );\n    this.arrangementIdControl = registerFormControl(\n      this.group,\n      CounterPartyFields.id\n    );\n    this.selectedBeneficiaryControl = registerFormControl(\n      <FormGroup>this.group.parent,\n      HiddenFields.selectedBeneficiary\n    );\n    this.selectedContactControl = <FormGroup>(\n      registerFormGroup(this.group, CounterPartyFields.selectedContact, {\n        contactId: [''],\n        accountId: [''],\n      })\n    );\n    this.initiatorIdControl = <FormControl>(\n      this.group.parent?.get([PaymentBaseFields.initiator, InitiatorFields.id])\n    );\n  }\n\n  setupWizardFormFields() {\n    this.accountNumberControl =\n      this.group.controls[CounterPartyFields.accountNumber] ||\n      this.registerAccountNumberControl();\n    this.beneficiaryAddressGroup =\n      this.group.controls[CounterPartyFields.postalAddress] ||\n      this.registerAddressGroup(this.group);\n    this.beneficiaryBankGroup =\n      this.group.controls[CounterPartyFields.creditorBank] ||\n      this.registerCreditorBankGroup();\n    this.bankCodeControl =\n      this.group.controls[\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`\n      ] || this.registerBankCodeControl();\n    this.bankNameControl =\n      this.group.controls[\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`\n      ] || this.registerBankNameControl();\n    this.bankBicControl =\n      this.group.controls[\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`\n      ] || this.registerBankBicControl();\n    this.beneficiaryBankAddressGroup =\n      this.group.controls[\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`\n      ] || this.registerAddressGroup(<FormGroup>this.beneficiaryBankGroup);\n    registerFormControl(<FormGroup>this.group, CounterPartyFields.schemeName);\n  }\n\n  registerAccountNumberControl() {\n    return registerFormControl(\n      <FormGroup>this.group,\n      CounterPartyFields.accountNumber\n    );\n  }\n\n  registerBankNameControl() {\n    return registerFormControl(\n      <FormGroup>this.beneficiaryBankGroup,\n      CounterPartyFields.bankName\n    );\n  }\n\n  registerBankBicControl() {\n    return registerFormControl(\n      <FormGroup>this.beneficiaryBankGroup,\n      CounterPartyFields.bic\n    );\n  }\n\n  registerBankCodeControl() {\n    return registerFormControl(\n      <FormGroup>this.beneficiaryBankGroup,\n      CounterPartyFields.bankBranchCode\n    );\n  }\n\n  registerAddressGroup(group: FormGroup) {\n    const initialAddress = {\n      addressLine1: [''],\n      addressLine2: [''],\n      streetName: [''],\n      postCode: [''],\n      town: [''],\n      countrySubDivision: [''],\n      country: [''],\n    };\n    return <FormGroup>(\n      registerFormGroup(group, CounterPartyFields.postalAddress, initialAddress)\n    );\n  }\n\n  registerCreditorBankGroup() {\n    const creditorBankGroup = new FormGroup({});\n    this.group.addControl(CounterPartyFields.creditorBank, creditorBankGroup);\n    return creditorBankGroup;\n  }\n\n  registerCreditorBankAddress() {\n    const creditorBankGroup = new FormGroup({});\n    this.group.addControl(CounterPartyFields.creditorBank, creditorBankGroup);\n    return creditorBankGroup;\n  }\n\n  private fetchCreditorItems(params: FetchCreditorItemsParams) {\n    if (this.config.options?.fetchItems$) {\n      this.config.options.fetchItems$.next(params);\n    }\n  }\n\n  onLoadMoreAccounts(page: number) {\n    this.deprecationService.logDeprecatedFeature(`\n      \"onLoadMoreAccounts\" is deprecated since 3.9.3 and will be removed in 3.10.0, please use \"onFetchMoreItems\" instead.\n    `);\n    this.fetchCreditorItems({\n      params: { from: page, query: this.query },\n      type: BeneficiaryList.ACCOUNTS,\n    });\n  }\n\n  onLoadMoreContacts(page: number) {\n    this.deprecationService.logDeprecatedFeature(`\n      \"onLoadMoreContacts\" is deprecated since 3.9.3 and will be removed in 3.10.0, please use \"onFetchMoreItems\" instead.\n    `);\n    this.fetchCreditorItems({\n      params: { from: page, query: this.query },\n      type: BeneficiaryList.CONTACTS,\n    });\n  }\n\n  onFetchMoreItems(event: { page: number; type: BeneficiaryList }) {\n    this.fetchCreditorItems({\n      params: { from: event.page, query: this.query },\n      type: event.type,\n    });\n  }\n\n  onSearch(query: string) {\n    this.query = query;\n    this.manualEditControl.setValue(true);\n    this.fetchCreditorItems({ params: { query } });\n  }\n\n  onSelectAccount(selectedItem: InternalAccountFormItem) {\n    const accountNumberControl =\n      this.group.controls[CounterPartyFields.accountNumber];\n    const bankNameControl = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`\n    );\n    const bankCodeControl = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`\n    );\n    const beneficiaryAddressGroup = this.group.get(\n      CounterPartyFields.postalAddress\n    );\n    const creditorBankBic = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`\n    );\n    this.setValue(this.accountNameControl, selectedItem.name || '');\n    this.setValue(accountNumberControl, selectedItem.accountNumber || '');\n    this.setValue(bankCodeControl, selectedItem.bankBranchCode);\n    this.setValue(creditorBankBic, selectedItem.BIC || '');\n    this.setValue(bankNameControl, '');\n    this.setValue(this.arrangementIdControl, selectedItem.id);\n    this.saveNewContactControl.setValue(false);\n    this.setAddress(<FormGroup>beneficiaryAddressGroup, {});\n    this.setDefaultCountry();\n    this.showBeneficiaryDetails = true;\n    this.enableBeneficiaryControl.setValue(false);\n    this.manualEdit$.next(false);\n    this.manualEditControl.setValue(false);\n    this.selectedBeneficiaryControl.setValue(selectedItem);\n    this.selectedContactControl.reset();\n    this.saveContactControl.reset();\n    this.showDependantFields();\n    this.initiatorIdControl?.updateValueAndValidity();\n  }\n\n  onSelectContact(selectedcontact: BeneficiaryContactItem) {\n    const accountNumberControl =\n      this.group.controls[CounterPartyFields.accountNumber];\n    const bankNameControl = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`\n    );\n    const bankCodeControl = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`\n    );\n    const creditorBankBic = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`\n    );\n    const beneficiaryAddressGroup = this.group.get(\n      CounterPartyFields.postalAddress\n    );\n    const beneficiaryBankAddressGroup = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`\n    );\n    const account = selectedcontact.accounts[0];\n    const accountHolderAddress = this.getAccountHolderAddress(account);\n    const beneficiaryAddress = isAddressTruthy(accountHolderAddress)\n      ? accountHolderAddress\n      : this.getBeneficiaryAddress(selectedcontact);\n    const bankAddress = this.getContactBankAddress(account);\n    this.setValue(this.accountNameControl, selectedcontact.name);\n    this.setValue(\n      this.beneficiaryAccountNameControl,\n      selectedcontact.accountName || ''\n    );\n    this.setValue(\n      accountNumberControl,\n      account.accountNumber || account.IBAN || ''\n    );\n    this.setValue(bankCodeControl, account.bankCode || '');\n    this.setValue(bankNameControl, account.bankName || '');\n    this.setValue(creditorBankBic, account.BIC || '');\n    this.setValue(this.arrangementIdControl, '');\n    this.setValue(\n      this.selectedContactControl,\n      this.getSelectedContactDetails(selectedcontact)\n    );\n    this.selectedBeneficiaryControl.setValue(selectedcontact);\n    this.setAddress(<FormGroup>beneficiaryAddressGroup, beneficiaryAddress);\n    this.setAddress(<FormGroup>beneficiaryBankAddressGroup, bankAddress, true);\n\n    this.showBeneficiaryDetails = true;\n    this.manualEdit$.next(false);\n    this.manualEditControl.setValue(false);\n    this.enableBeneficiaryControl.setValue(false);\n    this.saveContactControl.reset();\n    this.showDependantFields();\n    this.initiatorIdControl?.updateValueAndValidity();\n  }\n\n  private getSelectedContactDetails(selectedcontact: ContactItem) {\n    // currently there is no id associated with a contact account. Will need populate accountId when contacts fix this.\n    return { contactId: selectedcontact?.id, accountId: '' };\n  }\n\n  setAddressDetails(addressGroup: FormGroup, address: Address) {\n    if (addressGroup) {\n      if (isAddressTruthy(address)) {\n        this.setAddress(addressGroup, address);\n      }\n    }\n  }\n\n  onManualEdit(search: string) {\n    const bankaddressGroup = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`\n    );\n    const banksAddressControls = this.options.isWizardMode\n      ? this.getAddressFields(<FormGroup>bankaddressGroup)\n      : [bankaddressGroup];\n    this.accountNameControl.patchValue(search);\n    this.manualEdit$.next(true);\n    this.manualEditControl.setValue(true);\n    this.saveNewContactControl.setValue(true);\n    this.setValue(this.arrangementIdControl, '');\n    this.selectedBeneficiaryControl.reset();\n    this.resetControls([\n      this.group.controls[CounterPartyFields.accountNumber],\n      this.group.get(\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`\n      ),\n      this.group.get(\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`\n      ),\n      this.group.get(\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`\n      ),\n      this.group.get(CounterPartyFields.postalAddress),\n      this.selectedContactControl,\n      ...banksAddressControls,\n    ]);\n    this.setDefaultCountry();\n    this.visibilityService.showItems(this.config.parent);\n    this.showDependantFields();\n  }\n\n  private setDefaultCountry() {\n    const defaultCountry = this.options.isWizardMode\n      ? {\n          country: this.group.parent?.get(HiddenFields.defaultCountry)?.value,\n        }\n      : null;\n    const beneficiaryBankAddressGroup = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`\n    );\n    this.setAddress(\n      <FormGroup>beneficiaryBankAddressGroup,\n      { ...defaultCountry },\n      true\n    );\n  }\n\n  onSearchBlur(value: string) {\n    this.accountNameControl.patchValue(value);\n    if (!this.accountNameControl.touched) {\n      this.accountNameControl.markAsTouched();\n    }\n  }\n\n  getAddressFields(bankaddressGroup: FormGroup | null): Array<AbstractControl> {\n    const addressControls: Array<AbstractControl> = [];\n    if (bankaddressGroup) {\n      for (const controlName in bankaddressGroup.controls) {\n        if (bankaddressGroup.controls.hasOwnProperty(controlName)) {\n          const control = bankaddressGroup.controls[controlName];\n          if (controlName !== CounterPartyFields.country) {\n            addressControls.push(control);\n          }\n        }\n      }\n    }\n    return addressControls;\n  }\n\n  private resetControls(controls: Array<AbstractControl | null>) {\n    controls.forEach((control) => {\n      if (control) {\n        control.reset();\n      }\n    });\n  }\n\n  showDependantFields() {\n    if (this.config.options?.dependants) {\n      this.visibilityService.showItems(\n        this.config.parent,\n        this.config.options.dependants\n      );\n    }\n  }\n\n  hideDependantFields() {\n    if (this.config.options?.dependants) {\n      this.visibilityService.hideItems(\n        this.config.parent,\n        this.config.options.dependants\n      );\n    }\n  }\n\n  getBeneficiaryAddress(contact: Address) {\n    return {\n      addressLine1: contact.addressLine1,\n      addressLine2: contact.addressLine2,\n      streetName: contact.streetName,\n      town: contact.town,\n      postCode: contact.postCode,\n      countrySubDivision: contact.countrySubDivision,\n      country: contact.country,\n    };\n  }\n\n  getAccountHolderAddress(account: AccountInformation) {\n    return getAccountHolderAddress(account);\n  }\n\n  getContactBankAddress(account: AccountInformation) {\n    return getContactBankAddress(account);\n  }\n\n  setAddress(\n    addressGroup: FormGroup | null,\n    addressInfo: Address,\n    isBankAddress = false\n  ) {\n    if (addressGroup) {\n      if (isAddressTruthy(addressInfo) || isBankAddress) {\n        addressGroup.patchValue({\n          addressLine1: addressInfo.addressLine1,\n          addressLine2: addressInfo.addressLine2,\n          streetName: addressInfo.streetName,\n          town: addressInfo.town,\n          postCode: addressInfo.postCode,\n          countrySubDivision: addressInfo.countrySubDivision,\n          country: addressInfo.country,\n        });\n      } else {\n        for (const controlName in addressGroup.controls) {\n          if (\n            !(\n              isBankAddress &&\n              this.options.retainBankCountry &&\n              controlName === 'country'\n            )\n          ) {\n            addressGroup.controls[controlName].reset();\n          }\n        }\n      }\n    }\n  }\n\n  setValue(\n    control: AbstractControl | null,\n    value?: string | boolean | number | object\n  ) {\n    if (control) {\n      if (value) {\n        control.patchValue(value);\n      } else {\n        control.reset();\n      }\n    }\n  }\n\n  onClearValue(value: string) {\n    this.setValue(this.beneficiaryAccountNameControl, value);\n  }\n\n  isBeneficiaryDisabled(): boolean {\n    return (\n      (this.isClosedPaymentControl.value &&\n        !this.enableBeneficiaryControl.value) ||\n      !!this.arrangementIdControl.value\n    );\n  }\n}\n","<ng-container\n  *ngTemplateOutlet=\"\n    creditorTmpl;\n    context: { $implicit: options?.items$ | async }\n  \"\n></ng-container>\n\n<ng-template let-creditorDetails #creditorTmpl>\n  <div\n    class=\"form-group bb-dynamic-input\"\n    [ngClass]=\"options?.cssClasses\"\n    *ngIf=\"!config?.hidden\"\n    [formGroup]=\"group\"\n  >\n    <section class=\"payment-to form-group\">\n      <bb-beneficiary-selector-ui\n        [selectedItem]=\"{ name: accountNameControl?.value }\"\n        [placeholder]=\"options?.placeholder || ''\"\n        [tabs]=\"options?.tabs\"\n        [hasError]=\"accountNameControl?.touched && accountNameControl?.invalid\"\n        [totalAccounts]=\"creditorDetails?.totalCreditAccounts\"\n        [totalContacts]=\"creditorDetails?.totalContacts\"\n        [accounts]=\"creditorDetails?.accounts\"\n        [contacts]=\"creditorDetails?.contacts\"\n        [totalContactsItemsCount]=\"creditorDetails?.totalContactsItemsCount\"\n        [dropdownIcon]=\"options?.dropdownIcon || 'toggle-down'\"\n        [aria-label]=\"options?.ariaLabel || 'Toggle beneficiary list'\"\n        [title]=\"options?.label\"\n        [helperText]=\"options?.helperText\"\n        [search]=\"accountNameControl\"\n        [isManualEditDisabled]=\"options?.isManualEditDisabled\"\n        [isClosedPayment]=\"isClosedPaymentControl.value\"\n        [isBeneficiaryDisabled]=\"isBeneficiaryDisabled()\"\n        (fetchMoreItems)=\"onFetchMoreItems($event)\"\n        (searchValue)=\"onSearch($event)\"\n        (selectedAccount)=\"onSelectAccount($event)\"\n        (selectedContact)=\"onSelectContact($event)\"\n        (manualEdit)=\"onManualEdit($event)\"\n        (searchBlur)=\"onSearchBlur($event)\"\n        (clear)=\"onClearValue($event)\"\n        #beneficiarySelector\n      ></bb-beneficiary-selector-ui>\n\n      <bb-payord-validation-message\n        [control]=\"group?.controls['name']\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label || 'Beneficiary name'\"\n      ></bb-payord-validation-message>\n\n      <div\n        class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n        *ngIf=\"options?.description\"\n        [textContent]=\"options?.description\"\n      ></div>\n    </section>\n    <ng-container *ngIf=\"!options?.isTemplateMode\">\n      <div\n        *ngIf=\"saveNewContactControl?.value || (manualEdit$ | async)\"\n        class=\"bb-block bb-block--md\"\n      >\n        <bb-input-checkbox-ui\n          [disabled]=\"!!isClosedPaymentControl.value\"\n          [formControlName]=\"saveContactControlName\"\n          [label]=\"options.saveNewContactLabel || 'Save as a new contact'\"\n          data-role=\"save-new-contact-checkbox\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n"]}