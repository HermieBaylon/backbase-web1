{"version":3,"file":"payord-internal-account-selector.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/internal-account-selector/payord-internal-account-selector.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/internal-account-selector/payord-internal-account-selector.component.html"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAGT,SAAS,EAET,SAAS,EACT,iBAAiB,GAClB,MAAM,eAAe,CAAC;AACvB,OAAO,EAGL,UAAU,GAEX,MAAM,gBAAgB,CAAC;AACxB,OAAO,EAAE,aAAa,EAAE,SAAS,EAAc,EAAE,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AACzE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC/E,OAAO,EAIL,qBAAqB,EACrB,eAAe,EACf,kBAAkB,EAClB,eAAe,EACf,iBAAiB,EAEjB,YAAY,GAKb,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC1D,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAE7D,OAAO,EAAE,oBAAoB,EAAE,MAAM,qCAAqC,CAAC;AAC3E,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;;;;;;;;;;;;AAGtE,MAAM,WAAW,GAAG,CAClB,MAA0B,EAC1B,IAAY,EACiB,EAAE;IAC/B,MAAM,KAAK,GAAG,IAAI;SACf,KAAK,CAAC,GAAG,CAAC;SACV,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,WAAC,OAAA,MAAkB,GAAI,0CAAG,GAAG,CAAC,CAAA,EAAA,EAAE,MAAM,CAAC,CAAC;IAC/D,OAAoC,CAClC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAClE,CAAC;AACJ,CAAC,CAAC;AAMF,MAAM,OAAO,sCACX,SAAQ,oBAAoB;IAgE5B,YACmB,QAAmB,EACnB,EAAqB,EACrB,cAA8B,EAC/C,iBAAoC;QAEpC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QALR,aAAQ,GAAR,QAAQ,CAAW;QACnB,OAAE,GAAF,EAAE,CAAmB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAtDhC,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;QAChD,uBAAkB,GAA0C,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1D,iBAAY,GAAG,YAAY,CAAC;QACrC;;WAEG;QACH,iBAAY,GAAG,EAAE,CAAC;QAClB;;WAEG;QACH,kBAAa,GAAG;YACd,MAAM,EAAE,CAAC;YACT,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACjB,QAAQ,EAAE,CAAC;SACZ,CAAC;QAEF;;WAEG;QACH,YAAO,GAAG,KAAK,CAAC;IAuChB,CAAC;IAtCD;;OAEG;IACH,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,eAAe,CAAC,qBAAqB;YAC/D,CAAC,CAAC,iBAAiB,CAAC,YAAY;YAChC,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC;IAClC,CAAC;IACD;;OAEG;IACH,IAAI,cAAc;;QAChB,OAAO,CAAC,CAAC,CAAA,MAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,UAAU,0CAAE,MAAM,EAAE,CAAA,CAAC;IACtD,CAAC;IACD;;OAEG;IACH,IAAI,oBAAoB;;QACtB,MAAM,YAAY,GAChB,CAAA,MAAA,IAAI,CAAC,OAAO,CAAC,kBAAkB,0CAAE,oBAAoB,KAAI,EAAE,CAAC;QAC9D,MAAM,WAAW,GACf,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,eAAe,CAAC,qBAAqB,CAAC;QAC7D,MAAM,YAAY,GAAG,MAAA,IAAI,CAAC,eAAe,0CAAE,eAAe,CAAC;QAC3D,MAAM,oBAAoB,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAsB,EAAE,EAAE,CAC1E,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAC9D,CAAC;QACF,OAAO,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAsB,EAAE,EAAE,CACzD,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAC5B,CAAC;IACJ,CAAC;IAWD,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,oBAAoB,IAAI,CAAC,MAAM,CAAC,IAAI,gBAAgB,CAAC;QAEzE,IAAI,CAAC,IAAI,GAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACtE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,EACJ,YAAY,EACZ,eAAe,EACf,MAAM,EACN,YAAY,EACZ,iBAAiB,EACjB,SAAS,GACV,GAAG,IAAI,CAAC,OAAO,CAAC;QAEjB,IAAI,iBAAiB,EAAE;YACrB,IAAI,CAAC,kBAAkB,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACzD;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAC/B,IAAI,CAAC,CAAC,CAAC,EACP,GAAG,CAAC,CAAC,QAAmC,EAAE,EAAE,CAC1C,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,CAAA;YACvC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACjC,CAAC,CAAC,QAAQ,CACb,EACD,GAAG,CAAC,CAAC,QAAmC,EAAE,EAAE,CAC1C,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,YAAY,CAAC,CACjD,EACD,GAAG,CAAC,CAAC,QAAmC,EAAE,EAAE,CAC1C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAChD,EACD,GAAG,CAAC,CAAC,QAAmC,EAAE,EAAE,CAC1C,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC,EACD,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,aAAa,CAAC;YAC2B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAC7D,IAAI,CAAC,CAAC,CAAC,EACP,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB;YACsC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CACjE,IAAI,CAAC,CAAC,CAAC,EACP,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB;SACF,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,SAAS,GAAG,EAAE,CAAC,EAAE,EAAE;;YAC3C,MAAM,QAAQ,GAAG,CAAC,GAAG,SAAS,EAAE,GAAG,SAAS,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC3B,IAAI,SAAS,CAAC;gBACd,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,cAAc,CACjD,IAAI,CAAC,cAAc,CAAC,IAAI,CACzB,CAAC;gBACF,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBACzC,MAAM,OAAO,GACX,UAAU,KAAK,eAAe,CAAC,qBAAqB;oBAClD,CAAC,CAAC,YAAY;oBACd,CAAC,CAAC,UAAU,CAAC;gBACjB,SAAS,GAAG,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;gBAClE,IAAI,SAAS,IAAI,CAAC,SAAS,IAAI,UAAU,MAAK,MAAA,QAAQ,CAAC,CAAC,CAAC,0CAAE,EAAE,CAAA,EAAE;oBAC7D,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACzB;gBACD,IAAI,SAAS,EAAE;oBACb,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;iBAC5B;aACF;YACD,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,WAAW,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;YAC9D,SAAS,CAAC,aAAa,EAAE,MAAM,CAAC;iBAC7B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YAEtC,oHAAoH;YACpH,SAAS,CAAM,aAAa,EAAE,OAAO,CAAC;iBACnC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;YAE7C,wCAAwC;YACxC,IAAI,CAAC,QAAQ,CAAC,YAAY,CACxB,aAAa,EACb,kBAAkB,EAClB,IAAI,CAAC,YAAY,CAClB,CAAC;SACH;IACH,CAAC;IAED;;OAEG;IACH,mBAAmB,CACjB,WAAsC,EAAE,EACxC,eAAkC,EAAE;QAEpC,OAAO,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,CAAC,CAAC,OAAgC,EAAE,EAAE,CAC3D,YAAY,CAAC,MAAM;YACjB,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,KAAK,OAAO,CAAC,eAAe,CAAC;YACrE,CAAC,CAAC,IAAI,CACT,CAAC;IACJ,CAAC;IACD;;OAEG;IACH,kBAAkB,CAChB,WAAsC,EAAE,EACxC,eAA8B,EAAE;QAEhC,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CACjC,YAAY,CAAC,MAAM;YACjB,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;gBACpC,MAAM,QAAQ,GAAG,WAAW,CACN,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,EAC1C,GAAG,CACJ,CAAC;gBACF,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC;YAC3C,CAAC,CAAC;YACJ,CAAC,CAAC,IAAI,CACT,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,kBAAkB,CAAC,IAAe;QAChC,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YACjC,IAAI,CAAC,eAAe,GAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAe,CAAC,KAAK,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAe,CAAC,YAAY;iBACrD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,gBAAgB,CAAC,GAA4B;QAC3C,IACE,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,kBAAkB,CAAC,wBAAwB;YAChE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAC7C;YACA,MAAM,IAAI,GACR,GAAG,CAAC,eAAe,KAAK,YAAY,CAAC,iBAAiB;gBACpD,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,UAAU,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,YAAY,CAAe,CAAC,UAAU,CAAC;gBACtE,IAAI;aACL,CAAC,CAAC;SACJ;IACH,CAAC;IAED,UAAU,CAAC,SAAS,GAAG,IAAI;QACzB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;SAC/B;QACD,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IAED;;OAEG;IACH,eAAe;;QACb,MAAM,aAAa,GAAG,MAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,0CAAE,eAAe,CAAC;QACjE,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,0CAAE,eAAe,CAAC;QACvE,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,IAAI,EAAE,CAAC;QAC/D,MAAM,EAAE,iBAAiB,EAAE,GAAG,YAAY,CAAC;QAE3C,IAAI,YAAY,IAAI,aAAa,IAAI,gBAAgB,EAAE;YACrD,OAAO,gBAAgB,KAAK,iBAAiB;gBAC3C,aAAa,KAAK,iBAAiB;gBACnC,CAAC,CAAC,YAAY,CAAC,QAAQ;gBACvB,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC;SAC3B;QACD,OAAO;IACT,CAAC;IAED,oBAAoB,CAClB,QAAmC,EACnC,KAAgB,EAChB,GAAW;QAEX,IAAI,QAAQ,KAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAC,GAAG,CAAC,CAAA,EAAE;YACjC,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,kBAAkB;QAChB,MAAM,WAAW,GACf,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,eAAe,CAAC,qBAAqB;YACxD,CAAC,CAAC,eAAe;YACjB,CAAC,CAAC,kBAAkB,CAAC;QACzB,OAAO;YACL,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;YACvC,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;YACzC,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;YAClD,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;YAChD,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;YACjC,eAAe,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;YACtC,WAAW,EAAE,EAAE;SAChB,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/C,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;YAC9B,IAAI,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBACpC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;aACjE;SACF;IACH,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,OAAgC;;QACzC,MAAM,kBAAkB,GAAG,eAAe,CAAC,OAAO,CAAC;QACnD,MAAM,iBAAiB,GAAG,MAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,YAAY,0CAAE,IAAI,CACxD,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,WAAW,KAAK,OAAO,CAAC,eAAe,CAC3D,CAAC;QACF,MAAM,WAAW,GAAG,CAAA,MAAA,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,OAAO,0CAAE,QAAQ;YACtD,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ;YACpC,CAAC,CAAC,kBAAkB,CAAC;QAEvB,MAAM,OAAO,GAAG,WAAW,CACL,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,EAC1C,WAAW,CACZ,CAAC;QACF,uCACK,OAAO,KACV,OAAO,EAAsB,OAAO,EACpC,YAAY,EAAE,MAAA,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,OAAO,0CAAE,KAAK,IAC/C;IACJ,CAAC;IAED,WAAW;QACT,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,OAAgC;;QACzC,IAAI,IAAI,CAAC,KAAK,KAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAA,EAAE;YAC/B,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC;YACpC,MAAM,EAAE,iBAAiB,EAAE,GAAG,YAAY,CAAC;YAC3C,MAAM,kBAAkB,GACtB,CAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,eAAe,MAAK,iBAAiB,CAAC;YAC9D,MAAM,UAAU,GACd,eAAe,KAAK,iBAAiB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;YAC/D,MAAM,IAAI,GACR,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,kBAAkB,CAAC,wBAAwB;gBAChE,kBAAkB;gBAChB,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,UAAU,CAAC;YAEjB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;gBACpB,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,aAAa,EAAE,OAAO,CAAC,aAAa;gBACpC,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,UAAU;gBACV,eAAe,EAAE,OAAO,CAAC,eAAe;gBACxC,IAAI;gBACJ,WAAW,EAAE,OAAO;aACrB,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,qBACf,OAAO,CACX,CAAC;SACH;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3C,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QACzB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;;uJA1WU,sCAAsC;2IAAtC,sCAAsC,sNC1DnD,u7NA6KA;4FDnHa,sCAAsC;kBAJlD,SAAS;mBAAC;oBACT,QAAQ,EAAE,qCAAqC;oBAC/C,WAAW,EAAE,iDAAiD;iBAC/D;6LAK+B,eAAe;sBAA5C,SAAS;uBAAC,iBAAiB","sourcesContent":["import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  AfterViewInit,\n  Renderer2,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  FormGroup,\n  AbstractControl,\n  Validators,\n  ValidatorFn,\n} from '@angular/forms';\nimport { combineLatest, fromEvent, Observable, of, Subject } from 'rxjs';\nimport { map, take, takeUntil, catchError, shareReplay } from 'rxjs/operators';\nimport {\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n  InitiatorFields,\n  CounterPartyFields,\n  AccountBalances,\n  PaymentBaseFields,\n  BaseObject,\n  ProductKinds,\n  FilterState,\n  ProductKindItem,\n  DisabledCombination,\n  InternalAccountFormItem,\n} from '@backbase/payment-orders-ang';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { ActivatedRoute } from '@angular/router';\nimport { getRouteParams } from '../../helpers/route-helpers';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { ProductSelectorComponent } from '@backbase/ui-ang/product-selector';\n\nconst getDbsValue = (\n  dbsObj: ProductSummaryItem,\n  keys: string\n): number | string | undefined => {\n  const value = keys\n    .split('.')\n    .reduce((obj, key) => (<BaseObject<any>>obj)?.[key], dbsObj);\n  return <number | string | undefined>(\n    (['string', 'number'].includes(typeof value) ? value : undefined)\n  );\n};\n\n@Component({\n  selector: 'bb-payord-internal-account-selector',\n  templateUrl: 'payord-internal-account-selector.component.html',\n})\nexport class PayordInternalAccountSelectorComponent\n  extends ActivatableFormField\n  implements PaymentFormField, OnInit, OnDestroy, AfterViewInit\n{\n  @ViewChild('productSelector') productSelector:\n    | ProductSelectorComponent\n    | undefined;\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  form!: FormGroup;\n  control!: AbstractControl;\n  selectedAccount!: InternalAccountFormItem & { number?: string };\n  disabledAccount: InternalAccountFormItem | undefined;\n  private readonly destroy$ = new Subject<void>();\n  connectedAccounts$: Observable<InternalAccountFormItem[]> = of([]);\n  readonly productKinds = ProductKinds;\n  /**\n   * Id to associate messages to form field for accessibility\n   */\n  validationId = '';\n  /**\n   * Account number fromat used to mask the account numbers in the selector\n   */\n  accountFormat = {\n    length: 0,\n    maskRange: [0, 0],\n    segments: 0,\n  };\n\n  /**\n   * Boolean to show if account selector tab is touched\n   */\n  touched = false;\n  /**\n   * Return other account selector field name\n   */\n  get peerFieldName() {\n    return this.config.name === InitiatorFields.initiatorAccountGroup\n      ? PaymentBaseFields.counterparty\n      : PaymentBaseFields.initiator;\n  }\n  /**\n   * Flag to show if dropdown is open\n   */\n  get isDropdownOpen(): boolean {\n    return !!this.productSelector?.bbDropdown?.isOpen();\n  }\n  /**\n   * Flag to show which account kinds should not be rendered in order to avoid unwanted matches between two account\n   */\n  get disabledProductKinds(): ProductKinds[] {\n    const combinations =\n      this.options.paymentTypeOptions?.disabledCombinations || [];\n    const isInitiator =\n      this.config.name === InitiatorFields.initiatorAccountGroup;\n    const counterParty = this.disabledAccount?.productKindName;\n    const disabledProductKinds = combinations.filter((i: DisabledCombination) =>\n      isInitiator ? i.to === counterParty : i.from === counterParty\n    );\n    return disabledProductKinds.map((i: DisabledCombination) =>\n      isInitiator ? i.from : i.to\n    );\n  }\n\n  constructor(\n    private readonly renderer: Renderer2,\n    private readonly cd: ChangeDetectorRef,\n    private readonly activatedRoute: ActivatedRoute,\n    visibilityService: VisibilityService\n  ) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.validationId = `account-selector-${this.config.name}-error-message`;\n\n    this.form = <FormGroup>(this.group.parent ? this.group.parent : null);\n    this.registerFields();\n    this.control = this.group.controls['name'];\n    const {\n      otherFilters,\n      connectedItems$,\n      items$,\n      productKinds,\n      connectedAccounts,\n      preselect,\n    } = this.options;\n\n    if (connectedAccounts) {\n      this.connectedAccounts$ = connectedItems$.pipe(take(1));\n    }\n\n    this.options.items$ = items$.pipe(\n      take(1),\n      map((accounts: InternalAccountFormItem[]) =>\n        this.options.mapItems && accounts?.length\n          ? this.options.mapItems(accounts)\n          : accounts\n      ),\n      map((accounts: InternalAccountFormItem[]) =>\n        this.filterByProductKind(accounts, productKinds)\n      ),\n      map((accounts: InternalAccountFormItem[]) =>\n        this.filterByOtherProps(accounts, otherFilters)\n      ),\n      map((accounts: InternalAccountFormItem[]) =>\n        accounts.map(this.mapBalance.bind(this))\n      ),\n      shareReplay(1)\n    );\n\n    combineLatest([\n      <Observable<InternalAccountFormItem[]>>this.options.items$.pipe(\n        take(1),\n        catchError(() => of([]))\n      ),\n      <Observable<InternalAccountFormItem[]>>this.connectedAccounts$.pipe(\n        take(1),\n        catchError(() => of([]))\n      ),\n    ]).subscribe(([internals, externals = []]) => {\n      const accounts = [...internals, ...externals];\n      if (!this.group.value['id']) {\n        let selection;\n        const { transferFrom, transferTo } = getRouteParams(\n          this.activatedRoute.root\n        );\n        const { name: configName } = this.config;\n        const idParam =\n          configName === InitiatorFields.initiatorAccountGroup\n            ? transferFrom\n            : transferTo;\n        selection = idParam && accounts.find((acc) => acc.id === idParam);\n        if (preselect && !selection && transferTo !== accounts[0]?.id) {\n          selection = accounts[0];\n        }\n        if (selection) {\n          this.selectItem(selection);\n        }\n      }\n      this.setAccountInEditMode(accounts, this.group, 'id');\n    });\n\n    this.setDisabledAccount(this.form);\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngAfterViewInit() {\n    if (this.productSelector) {\n      const { nativeElement } = this.productSelector.dropdownToggle;\n      fromEvent(nativeElement, 'blur')\n        .pipe(take(1))\n        .subscribe(() => this.setTouched());\n\n      //Here to fix Safari focus issue https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n      fromEvent<any>(nativeElement, 'click')\n        .pipe(take(1))\n        .subscribe((e) => e.currentTarget.focus());\n\n      // Fix accessibility issue (MAINT-10313)\n      this.renderer.setAttribute(\n        nativeElement,\n        'aria-describedby',\n        this.validationId\n      );\n    }\n  }\n\n  /**\n   * Filtering accounts by product kind\n   */\n  filterByProductKind(\n    accounts: InternalAccountFormItem[] = [],\n    productKinds: ProductKindItem[] = []\n  ) {\n    return accounts?.filter((account: InternalAccountFormItem) =>\n      productKinds.length\n        ? productKinds.some((i) => i.productKind === account.productKindName)\n        : true\n    );\n  }\n  /**\n   * Filtering accounts by other filter properties\n   */\n  filterByOtherProps(\n    accounts: InternalAccountFormItem[] = [],\n    otherFilters: FilterState[] = []\n  ) {\n    return accounts.filter((account) =>\n      otherFilters.length\n        ? otherFilters.every(({ key, value }) => {\n            const dbsValue = getDbsValue(\n              <ProductSummaryItem>account?.defaultRecord,\n              key\n            );\n            return value.some((v) => v === dbsValue);\n          })\n        : true\n    );\n  }\n\n  /**\n   * Disable account which is already selected at the counter party selector\n   */\n  setDisabledAccount(form: FormGroup) {\n    if (form?.get(this.peerFieldName)) {\n      this.disabledAccount = (form.get(this.peerFieldName) as FormGroup).value;\n      (form.get(this.peerFieldName) as FormGroup).valueChanges\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((acc) => {\n          this.disabledAccount = acc;\n          this.setPaymentConfig(acc);\n        });\n    }\n  }\n\n  setPaymentConfig(acc: InternalAccountFormItem) {\n    if (\n      this.config.name === CounterPartyFields.counterPartyAccountGroup &&\n      this.form.get(PaymentBaseFields.counterparty)\n    ) {\n      const role =\n        acc.productKindName === ProductKinds.connectedAccounts\n          ? 'DEBTOR'\n          : 'CREDITOR';\n      (this.form.get(PaymentBaseFields.counterparty) as FormGroup).patchValue({\n        role,\n      });\n    }\n  }\n\n  setTouched(isTouched = true) {\n    this.touched = isTouched;\n    if (isTouched) {\n      this.group.markAllAsTouched();\n    }\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Return paymentType regarding to from-to account combination\n   */\n  pickPaymentType(): string | undefined {\n    const initiatorKind = this.form.value.initiator?.productKindName;\n    const counterPartyKind = this.form.value.counterparty?.productKindName;\n    const { paymentTypes } = this.options.paymentTypeOptions || {};\n    const { connectedAccounts } = ProductKinds;\n\n    if (paymentTypes && initiatorKind && counterPartyKind) {\n      return counterPartyKind === connectedAccounts ||\n        initiatorKind === connectedAccounts\n        ? paymentTypes.external\n        : paymentTypes.internal;\n    }\n    return;\n  }\n\n  setAccountInEditMode(\n    accounts: InternalAccountFormItem[],\n    group: FormGroup,\n    key: string\n  ) {\n    if (accounts && group?.value[key]) {\n      const account = accounts.filter((a) => a.id === group.value[key]);\n      this.selectItem(account[0]);\n    }\n  }\n\n  selectAccountGroup(): BaseObject<ValidatorFn[]> | undefined {\n    const fieldsGroup =\n      this.config.name === InitiatorFields.initiatorAccountGroup\n        ? InitiatorFields\n        : CounterPartyFields;\n    return {\n      [fieldsGroup.id]: [Validators.required],\n      [fieldsGroup.name]: [Validators.required],\n      [fieldsGroup.accountNumber]: [Validators.required],\n      [CounterPartyFields.role]: [Validators.required],\n      currency: [],\n      schemeName: [Validators.required],\n      productKindName: [Validators.required],\n      accountData: [],\n    };\n  }\n\n  registerFields() {\n    const accountGroup = this.selectAccountGroup();\n    for (const key in accountGroup) {\n      if (accountGroup.hasOwnProperty(key)) {\n        registerFormControl(this.group, key, accountGroup[key], [], '');\n      }\n    }\n  }\n\n  /**\n   * Set balance and balance label to account regarding to selected balance type in config\n   */\n  mapBalance(account: InternalAccountFormItem): InternalAccountFormItem {\n    const defaultBalanceType = AccountBalances.current;\n    const productKindConfig = this.options?.productKinds?.find(\n      (config) => config.productKind === account.productKindName\n    );\n    const dbsProperty = productKindConfig?.balance?.apiField\n      ? productKindConfig.balance.apiField\n      : defaultBalanceType;\n\n    const balance = getDbsValue(\n      <ProductSummaryItem>account?.defaultRecord,\n      dbsProperty\n    );\n    return {\n      ...account,\n      balance: <number | undefined>balance,\n      balanceLabel: productKindConfig?.balance?.label,\n    };\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  selectItem(account: InternalAccountFormItem) {\n    if (this.group && account?.name) {\n      const { productKindName } = account;\n      const { connectedAccounts } = ProductKinds;\n      const isPeerConnectedAcc =\n        this.disabledAccount?.productKindName === connectedAccounts;\n      const schemeName =\n        productKindName === connectedAccounts ? 'EXTERNAL_ID' : 'ID';\n      const role =\n        this.config.name === CounterPartyFields.counterPartyAccountGroup &&\n        isPeerConnectedAcc\n          ? 'DEBTOR'\n          : 'CREDITOR';\n\n      this.group.patchValue({\n        id: account.id,\n        name: account.name,\n        accountNumber: account.accountNumber,\n        currency: account.currency,\n        schemeName,\n        productKindName: account.productKindName,\n        role,\n        accountData: account,\n      });\n      this.selectedAccount = {\n        ...account,\n      };\n    }\n\n    this.toggleDependants();\n\n    const paymentType = this.pickPaymentType();\n    if (paymentType) {\n      this.form.patchValue({ paymentType });\n    }\n\n    this.group.markAsDirty();\n    this.cd.detectChanges();\n  }\n}\n","<div\n  class=\"form-group bb-dynamic-input\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n>\n  <div *ngIf=\"options?.label\" class=\"bb-label bb-block bb-block--lg\">\n    {{ options?.label }}\n  </div>\n  <section class=\"payment-from\" [formGroup]=\"group\">\n    <label class=\"bb-form-field\">\n      <bb-product-selector-ui\n        [autoClose]=\"true\"\n        [class.bb-product-selector--invalid-border]=\"\n          touched && group.invalid && !isDropdownOpen\n        \"\n        #productSelector\n      >\n        <ng-container bbDropdownToggle>\n          <div\n            *ngIf=\"selectedAccount\"\n            data-role=\"product-selector-selected-product\"\n          >\n            <bb-product-item-basic-account-ui\n              [title]=\"selectedAccount?.name\"\n              [productNumber]=\"selectedAccount?.accountNumber\"\n              [amount]=\"selectedAccount.balance\"\n              [currency]=\"selectedAccount.currency\"\n              [productNumberFormat]=\"\n                options?.productNumberFormat || accountFormat\n              \"\n              [highlight]=\"options?.highlight\"\n              [showCurrencySymbol]=\"options?.showCurrencySymbol !== false\"\n              [active]=\"false\"\n              [balanceLabel]=\"selectedAccount?.balanceLabel\"\n              i18n-balanceLabel=\"\n                Available balance\n                label@@payord-internal-account-selector.amount.available\"\n            ></bb-product-item-basic-account-ui>\n          </div>\n          <div *ngIf=\"!selectedAccount\" class=\"bb-stack\">\n            <span\n              data-role=\"item-empty-state\"\n              class=\"bb-text-support bb-product-selector__placeholder\"\n            >\n              {{ options?.placeholder }}\n            </span>\n          </div>\n        </ng-container>\n        <ng-container bbDropdownMenu>\n          <ng-container\n            *ngIf=\"{\n              internal: options?.items$ | async,\n              external: connectedAccounts$ | async\n            } as accounts\"\n          >\n            <ng-container\n              *ngIf=\"\n                accounts.internal?.length || accounts.external?.length;\n                else notFound\n              \"\n            >\n              <ng-container\n                *ngFor=\"let item of accounts.internal; let i = index\"\n              >\n                <button\n                  *ngIf=\"!disabledProductKinds.includes(item.productKindName)\"\n                  (click)=\"selectItem(item)\"\n                  [disabled]=\"\n                    item.accountNumber === disabledAccount?.accountNumber\n                  \"\n                  bbButton\n                  color=\"unstyled\"\n                  class=\"bb-product-selector__dropdown-item\"\n                  [ngClass]=\"{\n                    selected: item.id === selectedAccount?.id,\n                    'bb-text-support':\n                      item.accountNumber === disabledAccount?.accountNumber\n                  }\"\n                >\n                  <bb-product-item-basic-account-ui\n                    [title]=\"item.name\"\n                    [amount]=\"item.balance\"\n                    [productNumber]=\"item.accountNumber\"\n                    [currency]=\"item.currency\"\n                    [highlight]=\"options?.highlight\"\n                    [active]=\"false\"\n                    [class.bb-dropdown-multi-select--disabled]=\"\n                      item.accountNumber === disabledAccount?.accountNumber\n                    \"\n                    [productNumberFormat]=\"\n                      options?.productNumberFormat || accountFormat\n                    \"\n                    [showCurrencySymbol]=\"options?.showCurrencySymbol !== false\"\n                    [balanceLabel]=\"item?.balanceLabel\"\n                    i18n-balanceLabel=\"\n                      Available balance\n                      label@@payord-internal-account-selector.amount.available\"\n                  ></bb-product-item-basic-account-ui>\n                </button>\n              </ng-container>\n              <ng-container\n                *ngIf=\"\n                  disabledAccount?.productKindName !==\n                  productKinds.connectedAccounts\n                \"\n              >\n                <h4\n                  class=\"bb-subheader bb-text-support bb-block bb-block--no-margin bb-inline-stack bb-internal-account-selector__subheader\"\n                  *ngIf=\"\n                    accounts.external?.length &&\n                    options?.connectedAccountsSubHeader as subheader\n                  \"\n                  tabIndex=\"-1\"\n                >\n                  <bb-icon-ui\n                    name=\"insert-link\"\n                    cropped\n                    class=\"bb-inline-stack__item--spacing-sm\"\n                  ></bb-icon-ui>\n                  <span>{{ subheader }}</span>\n                </h4>\n                <button\n                  *ngFor=\"let item of accounts.external\"\n                  (click)=\"selectItem(item)\"\n                  [disabled]=\"\n                    item.accountNumber === disabledAccount?.accountNumber\n                  \"\n                  bbButton\n                  color=\"unstyled\"\n                  class=\"bb-product-selector__dropdown-item\"\n                  [ngClass]=\"{\n                    selected: item.id === selectedAccount?.id,\n                    'bb-text-support':\n                      item.accountNumber === disabledAccount?.accountNumber\n                  }\"\n                >\n                  <bb-product-item-basic-account-ui\n                    [title]=\"item.name\"\n                    [productNumber]=\"item.accountNumber\"\n                    [highlight]=\"options?.highlight\"\n                    [active]=\"false\"\n                    [class.bb-dropdown-multi-select--disabled]=\"\n                      item.accountNumber === disabledAccount?.accountNumber\n                    \"\n                    [productNumberFormat]=\"\n                      options?.productNumberFormat || accountFormat\n                    \"\n                    [showCurrencySymbol]=\"options?.showCurrencySymbol !== false\"\n                  ></bb-product-item-basic-account-ui>\n                </button>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n          <ng-template #notFound>\n            <bb-empty-state-ui\n              title=\"No items found\"\n              [showIcon]=\"false\"\n            ></bb-empty-state-ui>\n          </ng-template>\n        </ng-container>\n      </bb-product-selector-ui>\n    </label>\n\n    <ng-container *ngIf=\"!selectedAccount\">\n      <bb-payord-validation-message\n        [id]=\"validationId\"\n        [control]=\"group?.controls['name']\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label\"\n      ></bb-payord-validation-message>\n    </ng-container>\n  </section>\n</div>\n"]}