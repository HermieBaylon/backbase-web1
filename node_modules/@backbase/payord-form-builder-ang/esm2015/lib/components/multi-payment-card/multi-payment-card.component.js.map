{"version":3,"file":"multi-payment-card.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/multi-payment-card/multi-payment-card.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/multi-payment-card/multi-payment-card.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport {\n  CreditDebitMixedIndicator,\n  ErrorItem,\n  InternalAccountFormItem,\n  MultiPaymentCard,\n  parseString,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n} from '@backbase/payment-orders-ang';\nimport {\n  animationFrameScheduler,\n  asapScheduler,\n  fromEvent,\n  Observable,\n  Subject,\n  BehaviorSubject,\n} from 'rxjs';\nimport {\n  addControlToFormArray,\n  registerFormArray,\n} from '../../helpers/form-helpers';\nimport { auditTime, startWith, take, takeUntil } from 'rxjs/operators';\nimport { BatchPaymentsPutResponse } from '@backbase/data-ang/payment-batch';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport '@angular/localize/init';\n\nconst SCROLL_SCHEDULER =\n  typeof requestAnimationFrame !== 'undefined'\n    ? animationFrameScheduler\n    : asapScheduler;\n\n@Component({\n  selector: 'bb-multi-payment-card',\n  templateUrl: './multi-payment-card.component.html',\n  styles: [\n    `\n      .virtual-scroll__container {\n        position: relative;\n      }\n\n      .virtual-scroll__padding {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 1px;\n        height: 1px;\n        transform-origin: 0 0;\n        opacity: 0;\n      }\n\n      .virtual-scroll__content {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        max-width: 100vw;\n        max-height: 100vh;\n      }\n    `,\n  ],\n})\nexport class MultiPaymentCardComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  fieldOptions: Partial<MultiPaymentCard> = {};\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  paymentArrayControl!: FormArray;\n  count = new EventEmitter();\n  search = new EventEmitter();\n  cardConfig: { name: string; validators?: ValidatorFn[] }[] = [\n    {\n      name: 'counterpartyName',\n      validators: [],\n    },\n    {\n      name: 'counterpartyAccountNumber',\n      validators: [],\n    },\n    {\n      name: 'id',\n      validators: [],\n    },\n    { name: 'bankBranchCode' },\n    { name: 'accountType' },\n    { name: 'balance' },\n    { name: 'currency' },\n    { name: 'description', validators: [] },\n    {\n      name: 'amount',\n      validators: [],\n    },\n  ];\n  readonly hostRef: MultiPaymentCardComponent = this;\n\n  @ViewChild('scroll', { read: ElementRef, static: true }) scroll!: ElementRef;\n  @ViewChild('padding', { read: ElementRef, static: true })\n  padding!: ElementRef;\n  @ViewChild('content', { read: ElementRef, static: true })\n  content!: ElementRef;\n\n  public viewportItems: AbstractControl[] = [];\n\n  public subscription!: Observable<any>;\n\n  private readonly destroy$ = new Subject<void>();\n  private scrollableElement!: HTMLElement;\n\n  private _items: Array<{\n    expanded: boolean;\n    dropdownOpen: boolean;\n    height: number;\n  }> = [];\n  private visibleItemsInViewport = 0;\n  private bufferedItems = 5;\n  private visibleViewport = 0;\n  public firstRenderedItemIndex = 0;\n\n  accounts: {\n    search$: BehaviorSubject<string>;\n    items$: Observable<InternalAccountFormItem[]>;\n  }[] = [];\n\n  defaultConfig: MultiPaymentCard = {\n    counterpartyName: {\n      label: '',\n      validationMessageLabel: $localize`:@@multipayment-card.account.validation-message-label:Account`,\n      placeholder: '',\n      dropdownIcon: 'toggle-down',\n      ariaLabel: $localize`:@@multipayment-card.counterparty-name.aria-label:Toggle beneficiary list`,\n    },\n    amount: {\n      label: $localize`:@@multipayment-card.amount.label:Amount`,\n      validationMessageLabel: $localize`:@@multipayment-card.amount.validation-message-label:Amount`,\n      currency: 'USD',\n      maxLength: 10,\n      placeholder: '0.00',\n    },\n    description: {\n      placeholder: $localize`:@@multipayment-card.description.placeholder:Enter text...`,\n      minLength: 3,\n      maxLength: 140,\n    },\n  };\n\n  private lastBlur = {\n    timeoutId: 0,\n    itemIndex: -1,\n  };\n\n  constructor(\n    private readonly renderer: Renderer2,\n    private readonly ngZone: NgZone,\n    private readonly viewportRuler: ViewportRuler,\n    private readonly changeDetector: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.fieldOptions = {\n      counterpartyName: {\n        ...this.defaultConfig.counterpartyName,\n        ...this.options?.fieldsConfig?.counterpartyName,\n      },\n      amount: {\n        ...this.defaultConfig.amount,\n        ...this.options?.fieldsConfig?.amount,\n      },\n      description: {\n        ...this.defaultConfig.description,\n        ...this.options?.fieldsConfig?.description,\n      },\n    };\n    this._addValidators();\n    this.options.helperText = parseString(\n      this.options?.helperText || '',\n      this.options?.maximumAllowedPayments\n    );\n    this.paymentArrayControl = registerFormArray(\n      this.group,\n      this.config.name,\n      this.options.validators\n    );\n    const controls = this.paymentArrayControl.controls;\n    controls.forEach((control) => this.setupItem(control));\n    const len = Math.min(controls.length, this.bufferedItems * 2);\n    for (let i = 0; i < len; i++) {\n      this.addRenderedItem(controls[i], i);\n    }\n\n    this.scrollableElement = this.config.options.containerRef.nativeElement;\n\n    this.paymentArrayControl.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        while (this.paymentArrayControl.length > this._items.length) {\n          const currentIndex = this._items.length;\n          const control = this.paymentArrayControl.at(currentIndex);\n          this.setupItem(control);\n          this.addRenderedItem(control, currentIndex);\n        }\n        this.onScrollChanged();\n      });\n\n    this.viewportRuler\n      .change()\n      .pipe(startWith(null), takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateViewport();\n        this.onScrollChanged();\n      });\n\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.scrollableElement, 'scroll')\n        .pipe(\n          startWith(null),\n          takeUntil(this.destroy$),\n          auditTime(0, SCROLL_SCHEDULER)\n        )\n        .subscribe(() => this.onScrollChanged());\n    });\n  }\n\n  ngOnDestroy() {\n    this.accounts.forEach((account) => account.search$.complete());\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  addAccount() {\n    this.setupItem();\n    addControlToFormArray(this.paymentArrayControl, this.cardConfig);\n\n    const currentIndex = this.paymentArrayControl.length - 1;\n    const control = this.paymentArrayControl.at(currentIndex);\n\n    this.addRenderedItem(control, currentIndex);\n    this.count.emit(this.paymentArrayControl.length);\n    this.onScrollChanged();\n  }\n\n  removeAccount(index: number) {\n    if (this.options.paymentIdList[index]) {\n      this.config.options\n        .deletePayment(index)\n        .pipe(take(1))\n        .subscribe(() => {\n          this.removeAccountAt(index);\n        });\n    } else {\n      this.removeAccountAt(index);\n    }\n  }\n  /**\n   * will return form with given index in form Array\n   *\n   * @param index - form array index\n   */\n  getForm(index: number): FormGroup {\n    return this.paymentArrayControl.at(index) as FormGroup;\n  }\n\n  /**\n   *  method to get the form details.\n   *\n   * @param index form array index\n   * @param name form field\n   */\n  getControl(index: number, name: string): FormControl {\n    return this.paymentArrayControl.at(index).get(name) as FormControl;\n  }\n  /**\n   * patch value on selecting account\n   *\n   * @param event -  the selected data\n   * @param index - form Array index\n   */\n  onSelectAccount(event: any, index: number) {\n    this.getControl(index, 'id')?.patchValue(event.id, { emitEvent: false });\n    this.getControl(index, 'counterpartyName')?.patchValue(event.name);\n    this.getControl(index, 'counterpartyAccountNumber')?.patchValue(\n      event.accountNumber,\n      { emitEvent: false }\n    );\n    this.getControl(index, 'bankBranchCode')?.patchValue(event.bankBranchCode, {\n      emitEvent: false,\n    });\n    this.getControl(index, 'accountType')?.patchValue(event.accountType, {\n      emitEvent: false,\n    });\n    this.getControl(index, 'balance')?.patchValue(event.balance, {\n      emitEvent: false,\n    });\n    this.getControl(index, 'currency')?.patchValue(event.currency, {\n      emitEvent: false,\n    });\n    this.getControl(index, 'counterpartyName')?.markAllAsTouched();\n    this.getControl(index, 'counterpartyName')?.markAsDirty();\n    this.getControl(index, 'counterpartyName')?.updateValueAndValidity();\n    this.getControl(\n      index,\n      'counterpartyAccountNumber'\n    )?.updateValueAndValidity();\n    this.cardBlur(index);\n  }\n\n  /**\n   * Search query will emit search on account selector\n   *\n   * @param query\n   */\n  onSearch(index: number, query: string) {\n    this.accounts[index].search$.next(query);\n    this.search.emit(query);\n  }\n\n  openDescription(index: number) {\n    this._items[index].expanded = true;\n    this.getControl(index, 'description')?.patchValue('', { onlySelf: true });\n    this.onScrollChanged();\n  }\n\n  isExpanded(index: number) {\n    return Boolean(this._items[index] && this._items[index].expanded);\n  }\n\n  /**\n   * will emit call the blur hook if any\n   *\n   * @param index - form index\n   */\n  cardBlur(index: number) {\n    this.lastBlur.itemIndex = index;\n    this.ngZone.runOutsideAngular(() => {\n      this.lastBlur.timeoutId = setTimeout(() => {\n        const form = this.getForm(index);\n        if (form.dirty && form.valid && this.config.options.paymentBlur) {\n          const formValue = form.value;\n          const payment = {\n            creditDebitIndicator: CreditDebitMixedIndicator.CREDIT,\n            counterpartyArrangementId: formValue.id,\n            counterpartyName: formValue.counterpartyName,\n            counterpartyAccountNumber: formValue.counterpartyAccountNumber,\n            counterpartyBankBranchCode: formValue.bankBranchCode,\n            instructedAmount: {\n              amount: formValue.amount,\n              currencyCode: formValue.currency,\n            },\n\n            description: formValue.description,\n          };\n          this.config.options\n            .paymentBlur(payment, index)\n            .pipe(take(1))\n            .subscribe(\n              (response: BatchPaymentsPutResponse) => {\n                form.markAsPristine();\n                this.changeDetector.detectChanges();\n              },\n              (error: ErrorItem | { type: string }) => {\n                if ('message' in error) {\n                  form.setErrors({\n                    error: { name: 'error', message: error.message },\n                  });\n                }\n                this.changeDetector.detectChanges();\n              }\n            );\n        }\n        if (this.options && this.options.hooks && this.options.hooks.onBlur) {\n          this.options.hooks.onBlur(form);\n        }\n      }) as any;\n    });\n  }\n\n  cardFocus(index: number) {\n    if (this.lastBlur.itemIndex === index) {\n      clearTimeout(this.lastBlur.timeoutId);\n    }\n  }\n\n  deleteDescription(index: number) {\n    if (this.getControl(index, 'description')?.value) {\n      this.getControl(index, 'description')?.markAsDirty();\n    }\n    this.getControl(index, 'description')?.patchValue('');\n    this._items[index].expanded = false;\n    this.onScrollChanged();\n  }\n\n  onDropdownOpenChange(index: number, isOpen: boolean) {\n    this._items[index].dropdownOpen = isOpen;\n  }\n\n  isDropdownOpen(index: number) {\n    return this._items[index].dropdownOpen;\n  }\n\n  private addRenderedItem(control: AbstractControl, index: number) {\n    this.viewportItems.push(control);\n    this.changeDetector.detectChanges();\n    this.cacheItemHeight(\n      this.content.nativeElement.children[\n        this.content.nativeElement.children.length - 1\n      ],\n      index\n    );\n  }\n\n  private removeAccountAt(index: number) {\n    this.paymentArrayControl.removeAt(index);\n    this._items.splice(index, 1);\n    this.updateVisibleItems();\n    this.updateDimensions();\n    this.count.emit(this.paymentArrayControl.length);\n  }\n\n  private calculateAverageItemHeight() {\n    if (this._items.length === 0) {\n      return 0;\n    }\n    return Math.ceil(\n      this._items.reduce((prev, curr) => prev + curr.height, 0) /\n        this._items.length\n    );\n  }\n\n  private cacheItemHeight(item: HTMLElement, index: number) {\n    const currentItemHeight = this.getElementSize(item).height;\n    this._items[index].height = currentItemHeight;\n  }\n\n  private firstVisibleItemIndex() {\n    if (this._items.length === 0) {\n      return 0;\n    }\n\n    const scrollTop = this.scrollableElement.scrollTop;\n    const contentScrollPosition = Math.max(\n      0,\n      scrollTop - this.scroll.nativeElement.offsetTop\n    );\n    let index = 0;\n    let remainingScroll = contentScrollPosition - this._items[index].height;\n    while (remainingScroll > 0 && index < this._items.length) {\n      index += 1;\n      remainingScroll -= this._items[index].height;\n    }\n\n    return index;\n  }\n\n  private invalidateVisibleItemsCache() {\n    const children = this.content.nativeElement.children;\n    const itemsLength = this.content.nativeElement.children.length;\n    for (let i = 0; i < itemsLength; ++i) {\n      const internalIndex = this.firstRenderedItemIndex + i;\n      this.cacheItemHeight(children[i], internalIndex);\n    }\n    this.changeDetector.markForCheck();\n  }\n\n  private onScrollChanged() {\n    this.ngZone.runOutsideAngular(() => {\n      requestAnimationFrame(() => {\n        this.invalidateVisibleItemsCache();\n        this.updateVisibleItems();\n        this.updateDimensions();\n      });\n    });\n  }\n\n  private updateViewport() {\n    this.ngZone.runOutsideAngular(() => {\n      requestAnimationFrame(() => {\n        const topOffset = Math.max(\n          0,\n          this.scroll.nativeElement.offsetTop - this.scrollableElement.scrollTop\n        );\n        /** @TODO get bottom offset dynamically */\n        const bottomOffset = 100;\n        this.visibleViewport =\n          this.scrollableElement.clientHeight - topOffset - bottomOffset;\n      });\n    });\n  }\n\n  private updateVisibleItems() {\n    const averageItemHeight = this.calculateAverageItemHeight();\n    if (averageItemHeight > 0) {\n      this.visibleItemsInViewport = Math.round(\n        this.visibleViewport / this.calculateAverageItemHeight()\n      );\n    } else {\n      this.visibleItemsInViewport = 0;\n    }\n    this.firstRenderedItemIndex = Math.max(\n      0,\n      this.firstVisibleItemIndex() - this.bufferedItems\n    );\n    const renderedItemsLength = Math.min(\n      this.visibleItemsInViewport + this.bufferedItems * 2,\n      this.paymentArrayControl.controls.length\n    );\n    this.viewportItems = this.paymentArrayControl.controls.slice(\n      this.firstRenderedItemIndex,\n      this.firstRenderedItemIndex + renderedItemsLength\n    );\n    this.changeDetector.markForCheck();\n    this.changeDetector.detectChanges();\n  }\n\n  private updateDimensions() {\n    const contentHeight = this.virtualViewportHeight();\n    const padding = this._items\n      .slice(0, this.firstRenderedItemIndex)\n      .reduce((prev, curr) => prev + curr.height, 0);\n\n    this.renderer.setStyle(\n      this.padding.nativeElement,\n      'transform',\n      `scaleY(${contentHeight})`\n    );\n    this.renderer.setStyle(\n      this.scroll.nativeElement,\n      'height',\n      `${contentHeight}px`\n    );\n    this.renderer.setStyle(\n      this.content.nativeElement,\n      'transform',\n      `translateY(${padding}px)`\n    );\n    this.changeDetector.markForCheck();\n    this.changeDetector.detectChanges();\n  }\n\n  private getElementSize(element: HTMLElement): ClientRect {\n    const result = element.getBoundingClientRect();\n    const styles: any = getComputedStyle(element);\n    const marginTop = parseInt(styles['margin-top'], 10) || 0;\n    const marginBottom = parseInt(styles['margin-bottom'], 10) || 0;\n    const marginLeft = parseInt(styles['margin-left'], 10) || 0;\n    const marginRight = parseInt(styles['margin-right'], 10) || 0;\n\n    return {\n      top: result.top + marginTop,\n      bottom: result.bottom + marginBottom,\n      left: result.left + marginLeft,\n      right: result.right + marginRight,\n      width: result.width + marginLeft + marginRight,\n      height: result.height + marginTop + marginBottom,\n    } as ClientRect;\n  }\n\n  private virtualViewportHeight() {\n    return this._items.reduce((prev, curr) => prev + curr.height, 0);\n  }\n\n  private _addValidators() {\n    this.cardConfig.forEach((field) => {\n      const name = field.name as keyof MultiPaymentCard;\n      if (this.fieldOptions[name]) {\n        field.validators = (\n          this.fieldOptions[name] as PaymentFormFieldOptions\n        ).validators;\n      }\n    });\n  }\n\n  private setupItem(control?: AbstractControl) {\n    const expanded = control\n      ? control.get('description')?.value?.trim()\n      : false;\n    this._items.push({\n      height: 0,\n      expanded,\n      dropdownOpen: false,\n    });\n    this.accounts.push(this.config.options.observableAccountsFactory());\n  }\n}\n","<div\n  class=\"form-group bb-dynamic-input\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div class=\"bb-block bb-block--lg\">\n    <div *ngIf=\"options?.label\" class=\"bb-heading-3\">\n      {{ options?.label }}\n    </div>\n    <div\n      *ngIf=\"options?.helperText\"\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    >\n      {{ options?.helperText }}\n    </div>\n  </div>\n\n  <div\n    class=\"row bb-block bb-block--md bb-subheader bb-subheader--regular bb-text-bold\"\n    *ngIf=\"paymentArrayControl.controls.length\"\n  >\n    <span class=\"col-6\">{{ fieldOptions?.counterpartyName?.header }}</span>\n    <span\n      class=\"col-4 d-none d-md-block\"\n      i18n=\"@@multipayment-card-column-header-ammount-title.label\"\n      >Amount (Credit)</span\n    >\n  </div>\n\n  <div #scroll class=\"virtual-scroll__container\">\n    <div #padding class=\"virtual-scroll__padding\"></div>\n    <div #content class=\"virtual-scroll__content\">\n      <ng-container [formArrayName]=\"hostRef.config?.name\">\n        <div\n          *ngFor=\"let group of viewportItems; let i = index\"\n          class=\"bb-block bb-block--md\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"\n              cardTemplate;\n              context: { group: group, index: firstRenderedItemIndex + i }\n            \"\n          ></ng-container>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n  <div\n    class=\"text-center\"\n    *ngIf=\"\n      paymentArrayControl.controls.length < options?.maximumAllowedPayments\n    \"\n    data-role=\"add-account-card\"\n    [ngClass]=\"{\n      'border border-danger':\n        paymentArrayControl.controls.length === 0 && paymentArrayControl.touched\n    }\"\n  >\n    <button\n      bbButton\n      color=\"link\"\n      buttonSize=\"md\"\n      [attr.data-role]=\"'btn-icon-link-md-def'\"\n      (click)=\"addAccount()\"\n      class=\"m-2\"\n    >\n      <bb-icon-ui color=\"link\" name=\"add\" size=\"md\" cropped></bb-icon-ui>\n      <span\n        data-role=\"add-account\"\n        i18n=\"@@multipayment-card-button-text-add-account.text\"\n        >Add account</span\n      >\n    </button>\n  </div>\n\n  <bb-payord-validation-message\n    [control]=\"hostRef.paymentArrayControl\"\n    [validationMessages]=\"options.validationMessages\"\n    [hideGeneric]=\"true\"\n  ></bb-payord-validation-message>\n\n  <ng-template #cardTemplate let-group=\"group\" let-index=\"index\">\n    <div\n      class=\"card card-sm\"\n      [formGroup]=\"getForm(index)\"\n      (focusout)=\"cardBlur(index)\"\n      (focusin)=\"cardFocus(index)\"\n    >\n      <div class=\"card-body\">\n        <div\n          class=\"bb-block\"\n          [ngClass]=\"{ 'bb-block--sm': getForm(index)?.errors?.error }\"\n        >\n          <div\n            class=\"bb-stack bb-block\"\n            [ngClass]=\"{\n              'bb-block--sm':\n                isExpanded(index) &&\n                !getControl(index, 'counterpartyName')?.value,\n              'bb-block--md':\n                isExpanded(index) &&\n                getControl(index, 'counterpartyName')?.value\n            }\"\n          >\n            <div class=\"bb-stack__item bb-stack__item--fill\">\n              <div class=\"row\">\n                <div class=\"col-md-6 bb-block--md-md-down\">\n                  <bb-beneficiary-selector\n                    [selectedItem]=\"{\n                      name: getControl(index, 'counterpartyName')?.value\n                    }\"\n                    [placeholder]=\"fieldOptions?.counterpartyName?.placeholder\"\n                    [dropdownIcon]=\"\n                      fieldOptions?.counterpartyName?.dropdownIcon\n                    \"\n                    [aria-label]=\"fieldOptions?.counterpartyName?.ariaLabel\"\n                    [title]=\"fieldOptions?.counterpartyName?.label\"\n                    [debounceTime]=\"\n                      fieldOptions?.counterpartyName?.debounceTime\n                    \"\n                    [hasError]=\"\n                      getControl(index, 'counterpartyName')?.touched &&\n                      getControl(index, 'counterpartyName')?.invalid\n                    \"\n                    [helperText]=\"fieldOptions?.counterpartyName?.helperText\"\n                    [selectedItemTemplate]=\"selectedItemtemplate\"\n                    [listItemTemplate]=\"listItemtemplate\"\n                    (searchValue)=\"onSearch(index, $event)\"\n                    (selectedAccount)=\"onSelectAccount($event, index)\"\n                    (searchBlur)=\"\n                      getControl(index, 'counterpartyName').markAsTouched()\n                    \"\n                    (dropdownOpenChange)=\"onDropdownOpenChange(index, $event)\"\n                    [clearSearchOnselect]=\"true\"\n                    #beneficiarySelector\n                  ></bb-beneficiary-selector>\n                  <bb-payord-validation-message\n                    [control]=\"getControl(index, 'counterpartyName')\"\n                    [validationMessages]=\"\n                      fieldOptions?.counterpartyName?.validationMessages\n                    \"\n                    [label]=\"\n                      fieldOptions?.counterpartyName?.validationMessageLabel\n                    \"\n                  ></bb-payord-validation-message>\n                </div>\n                <div class=\"col-md-4\">\n                  <div class=\"bb-block bb-block--sm\">\n                    <bb-amount-input-ui\n                      formControlName=\"amount\"\n                      [mapCurrency]=\"false\"\n                      [currency]=\"fieldOptions?.amount?.currency\"\n                      [required]=\"true\"\n                      [aria-describedby]=\"\n                        'compact-amount-error-message' + index\n                      \"\n                      [maxLength]=\"fieldOptions?.amount?.maxLength\"\n                      [placeholder]=\"fieldOptions?.amount?.placeholder\"\n                    >\n                    </bb-amount-input-ui>\n                    <bb-payord-validation-message\n                      [control]=\"getControl(index, 'amount')\"\n                      [validationMessages]=\"\n                        fieldOptions?.amount?.validationMessages\n                      \"\n                      [label]=\"fieldOptions?.amount?.validationMessageLabel\"\n                    ></bb-payord-validation-message>\n                  </div>\n                  <span\n                    class=\"bb-text-support bb-subtitle\"\n                    [hidden]=\"isExpanded(index)\"\n                  >\n                    <ng-container>Add</ng-container>\n                    <a\n                      role=\"button\"\n                      class=\"ml-1\"\n                      (click)=\"openDescription(index)\"\n                    >\n                      <u class=\"bb-text-support\" data-role=\"description-link\"\n                        >description</u\n                      >\n                    </a>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--align-top d-print-none\"\n            >\n              <button\n                bbButton\n                buttonSize=\"sm\"\n                circle=\"true\"\n                color=\"link-dark\"\n                data-role=\"close-to-account\"\n                (click)=\"removeAccount(index)\"\n              >\n                <span\n                  class=\"sr-only\"\n                  id=\"closeBtn\"\n                  aria-label=\"remove payment card\"\n                  i18n-aria-label=\"\n                    Remove Payment Card@@multi-payment-card.details.remove\"\n                >\n                  Remove account\n                </span>\n                <bb-icon-ui name=\"times\"></bb-icon-ui>\n              </button>\n            </div>\n          </div>\n\n          <div\n            class=\"card card-sm card--highlight card--shadowless\"\n            [hidden]=\"!isExpanded(index)\"\n          >\n            <div class=\"card-body\">\n              <label class=\"bb-label\">\n                {{ fieldOptions?.description?.title }}\n                <span\n                  class=\"bb-text-support bb-text-default\"\n                  i18n=\"@@multipayment-card.description.label.optional\"\n                  >(optional)</span\n                >\n              </label>\n              <div\n                class=\"bb-stack bb-stack--align-top bb-stack--density-sm\"\n                data-role=\"description-input\"\n              >\n                <bb-textarea-ui\n                  formControlName=\"description\"\n                  [placeholder]=\"fieldOptions?.description?.placeholder\"\n                  [showCharCounter]=\"true\"\n                  [minLength]=\"fieldOptions?.description?.minLength\"\n                  [maxLength]=\"fieldOptions?.description?.maxLength\"\n                  [rows]=\"3\"\n                  [cols]=\"50\"\n                  wrap=\"hard\"\n                  class=\"bb-stack__item\"\n                >\n                </bb-textarea-ui>\n                <button\n                  bbButton\n                  buttonSize=\"sm\"\n                  class=\"bb-stack__item\"\n                  circle=\"true\"\n                  color=\"link-dark\"\n                  (click)=\"deleteDescription(index)\"\n                >\n                  <bb-icon-ui\n                    name=\"delete\"\n                    data-role=\"delete-description\"\n                    color=\"secondary-lightest\"\n                  ></bb-icon-ui>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <ng-container *ngIf=\"getForm(index)?.errors?.error\">\n          <bb-payord-validation-message\n            [control]=\"getForm(index)\"\n            [validationMessages]=\"[getForm(index)?.errors?.error]\"\n          ></bb-payord-validation-message>\n        </ng-container>\n      </div>\n    </div>\n\n    <ng-template #listItemtemplate>\n      <ng-container *ngIf=\"isDropdownOpen(index)\" class=\"bb-product-selector\">\n        <div\n          *ngIf=\"\n            accounts[index] && (accounts[index].items$ | async);\n            let accounts;\n            else: loadingAccounts\n          \"\n          class=\"pre-scrollable\"\n          style=\"z-index: 1040\"\n        >\n          <bb-beneficiary-selector-account\n            *ngFor=\"let account of accounts\"\n            [account]=\"account\"\n            size=\"sm\"\n            class=\"px-1 border-bottom bb-product-selector__dropdown-item\"\n            [class.selected]=\"getControl(index, 'id').value === account.id\"\n            ngbDropdownItem\n            (selectedAccount)=\"onSelectAccount($event, index)\"\n          >\n          </bb-beneficiary-selector-account>\n        </div>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #loadingAccounts>\n      <bb-loading-indicator-ui></bb-loading-indicator-ui>\n    </ng-template>\n\n    <ng-template #selectedItemtemplate>\n      <div\n        class=\"rounded border p-3\"\n        [ngClass]=\"{\n          'border-danger': getControl(index, 'counterpartyName').invalid\n        }\"\n      >\n        <div role=\"menuitem\" class=\"\">\n          <div class=\"bb-stack\">\n            <div class=\"bb-stack__item\" data-role=\"selected-to-account\">\n              <span class=\"bb-text-bold\">{{\n                getControl(index, 'counterpartyName')?.value\n              }}</span>\n            </div>\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <bb-icon-ui\n                name=\"perm-contact-calendar\"\n                color=\"dark\"\n              ></bb-icon-ui>\n            </div>\n          </div>\n          <div class=\"bb-subtitle bb-text-support break-word\">\n            <span *ngIf=\"getControl(index, 'bankBranchCode')?.value\"\n              >{{ getControl(index, 'bankBranchCode')?.value }} /</span\n            >\n            {{ getControl(index, 'counterpartyAccountNumber')?.value }}\n          </div>\n          <div class=\"text-right\">\n            <bb-amount-ui\n              [amount]=\"getControl(index, 'balance')?.value\"\n              [currency]=\"getControl(index, 'currency')?.value\"\n              [mapCurrency]=\"false\"\n            ></bb-amount-ui>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </ng-template>\n</div>\n"]}