import { Component } from '@angular/core';
import { PaymentFormFieldHooks } from '@backbase/payment-orders-ang';
import { registerFormControl } from '../../helpers/form-helpers';
import { ActivatableFormField } from '../../models/activatable-form-field';
import { VisibilityService } from '../../services/visibility.service';
import { triggerHook } from '../../helpers/hooks-helpers';
import * as i0 from "@angular/core";
import * as i1 from "../../services/visibility.service";
import * as i2 from "@backbase/ui-ang/dropdown-single-select";
import * as i3 from "../validation-message/validation-message.component";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
import * as i6 from "../../directives/dynamic-aria-attribute.directive";
export class PayordSelectComponent extends ActivatableFormField {
    constructor(visibilityService) {
        super(visibilityService);
        this.visibilityService = visibilityService;
    }
    ngOnInit() {
        this.control = registerFormControl(this.group, this.config.name, this.options.validators, this.options.asyncValidators, this.options.defaultValue, this.config);
        this.toggleDependants();
        triggerHook(PaymentFormFieldHooks.onInit, this);
    }
    ngOnDestroy() {
        triggerHook(PaymentFormFieldHooks.onDestroy, this);
    }
}
/** @nocollapse */ PayordSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordSelectComponent, deps: [{ token: i1.VisibilityService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PayordSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PayordSelectComponent, selector: "bb-payord-select", usesInheritance: true, ngImport: i0, template: "<div\n  class=\"bb-dynamic-input form-group\"\n  *ngIf=\"!config?.hidden\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <label\n    class=\"bb-dynamic-input__label\"\n    [id]=\"inputEl?.id + '__label'\"\n    [for]=\"inputEl?.id\"\n    [textContent]=\"options?.label || ''\"\n    #labelElem\n  ></label>\n  <span\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    *ngIf=\"options?.helperText\"\n    [id]=\"inputEl?.id + '__desc'\"\n    [textContent]=\"options?.helperText\"\n  >\n  </span>\n\n  <bb-dropdown-single-select-ui\n    [formControlName]=\"config.name\"\n    [placeholder]=\"options?.placeholder || ''\"\n    (change)=\"toggleDependants()\"\n    [bbDynamicAriaAttribute]=\"{\n      __error: control?.touched && control?.invalid,\n      __desc: options?.description\n    }\"\n    [attr.data-role]=\"config.name\"\n    #inputEl\n  >\n    <bb-dropdown-single-select-option-ui\n      *ngFor=\"let option of options?.options\"\n      [value]=\"option.value\"\n      [label]=\"option.label\"\n      [attr.data-role]=\"option.value\"\n    >\n    </bb-dropdown-single-select-option-ui>\n  </bb-dropdown-single-select-ui>\n\n  <bb-payord-validation-message\n    [control]=\"group?.controls[config.name]\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label\"\n    [id]=\"inputEl?.id + '__error'\"\n  ></bb-payord-validation-message>\n\n  <div\n    class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    [attr.aria-hidden]=\"!options?.description\"\n    [hidden]=\"!options?.description\"\n    [id]=\"inputEl?.id + '__desc'\"\n    [textContent]=\"options?.description || ''\"\n    #descElem\n  ></div>\n</div>\n", components: [{ type: i2.DropdownSingleSelectComponent, selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i2.DropdownSingleSelectOptionComponent, selector: "bb-dropdown-single-select-option-ui", inputs: ["value", "label"] }, { type: i3.ValidationMessageComponent, selector: "bb-payord-validation-message", inputs: ["control", "validationMessages", "label", "id", "hideGeneric"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i6.DynamicAriaAttributeDirective, selector: "[bbDynamicAriaAttribute]", inputs: ["bbDynamicAriaAttribute", "prependInputId", "inputSelector", "ariaAttributeName"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordSelectComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payord-select',
                    templateUrl: './payord-select.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.VisibilityService }]; } });
//# sourceMappingURL=payord-select.component.js.map