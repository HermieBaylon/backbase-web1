{"version":3,"file":"payord-schedule-header.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/schedule-header/payord-schedule-header.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/schedule-header/payord-schedule-header.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,MAAM,eAAe,CAAC;AAE7D,OAAO,EACL,WAAW,EAKX,qBAAqB,EACrB,eAAe,EACf,WAAW,EACX,eAAe,GAChB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;;;AAM1D,MAAM,OAAO,6BAA6B;IAJ1C;QAUE,mBAAc,GAAG,CAAC,CAAC;QAEnB,YAAO,GAAG,eAAe,CAAC;QAC1B,gBAAW,GAAG,WAAW,CAAC;KAiB3B;IAfC,OAAO,CAAC,SAAe;QACrB,MAAM,KAAK,GAAG,eAAe,EAAE,CAAC;QAChC,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAE9C,OAAO,IAAI,KAAK,KAAK,CAAC;IACxB,CAAC;IAED,QAAQ;;QACN,IAAI,CAAC,UAAU,GAAG,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,KAAI,SAAS,CAAC;QACxD,WAAW,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,WAAW;QACT,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;;8IAzBU,6BAA6B;kIAA7B,6BAA6B,iECnB1C,urEA4DA;4FDzCa,6BAA6B;kBAJzC,SAAS;mBAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,WAAW,EAAE,+BAA+B;iBAC7C","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  Frequencies,\n  PaymentFormFieldConfig,\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  Hideable,\n  PaymentFormFieldHooks,\n  getRelativeDate,\n  getDateOnly,\n  ScheduleEndType,\n} from '@backbase/payment-orders-ang';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-schedule-header',\n  templateUrl: './payord-schedule-header.html',\n})\nexport class PayordScheduleHeaderComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  minOccurrences = 2;\n  dateFormat?: string;\n  endType = ScheduleEndType;\n  frequencies = Frequencies;\n\n  isToday(startDate: Date) {\n    const today = getRelativeDate();\n    const date = getDateOnly(new Date(startDate));\n\n    return date === today;\n  }\n\n  ngOnInit() {\n    this.dateFormat = this.options?.dateFormat || 'd MMM y';\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  class=\"bb-dynamic-input bb-schedule-header bb-fieldset__heading\"\n  *ngIf=\"!config?.hidden\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <ng-container\n    *ngIf=\"(group?.value?.frequency?.value || group?.value?.frequency) as freq\"\n  >\n    <span>\n      <ng-container *ngIf=\"options?.label\">{{options?.label}}</ng-container>\n      <ng-container\n        *ngIf=\"!options?.label\"\n        i18n=\"@@dynamic-form-field-schedule-header.default-title\"\n        >Schedule</ng-container\n      >\n    </span>\n    <span class=\"bb-schedule-header__text\">\n      <span> - </span>\n      <span i18n=\"@@dynamic-form-field-schedule-header.frequency\"\n        >{ freq, select, DAILY {Daily} WEEKLY {Weekly} BIWEEKLY {Bi-Weekly}\n        MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY {Annually} }</span\n      >\n      <ng-container *ngIf=\"freq === frequencies.ONCE\">\n        <span>\n          {{ group?.value?.startDate | date: dateFormat }}\n          <span\n            class=\"bb-schedule-header__relative-text\"\n            *ngIf=\"isToday(group?.value?.startDate)\"\n            i18n=\"@@dynamic-form-field-schedule-header.today\"\n          >\n            (Today)\n          </span>\n        </span>\n      </ng-container>\n\n      <ng-container *ngIf=\"freq !== frequencies.ONCE\">\n        <span class=\"bb-schedule-header__sepatator\">,</span>\n        <span i18n=\"@@dynamic-form-field-schedule-header-from.label\">\n          from\n        </span>\n        <span>{{group?.value?.startDate | date: dateFormat}}</span>\n        <ng-container\n          *ngIf=\"group?.value?.endType === endType.ON && group?.value?.endDate\"\n        >\n          <span> - </span>\n          <span> {{group?.value?.endDate | date: dateFormat}}</span>\n        </ng-container>\n        <ng-container\n          *ngIf=\"group?.value?.endType === endType.AFTER && group?.value?.repeat\"\n        >\n          <span>, </span> <span> {{ group?.value?.repeat }} </span>\n          <span i18n=\"@@dynamic-form-field-schedule-header-occurances.label\">\n            times</span\n          >\n        </ng-container>\n      </ng-container>\n    </span>\n  </ng-container>\n  <hr class=\"bb-schedule-header__sepatator\" />\n</div>\n"]}