{"version":3,"file":"payord-compact-amount.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/compact-amount/payord-compact-amount.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/compact-amount/payord-compact-amount.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,MAAM,eAAe,CAAC;AAC7D,OAAO,EAEL,UAAU,GAGX,MAAM,gBAAgB,CAAC;AACxB,OAAO,EACL,eAAe,EAKf,oBAAoB,EACpB,qBAAqB,EACrB,iBAAiB,GAClB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAC;AAC/D,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAE1D,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;;;;;;AAMhD,MAAM,OAAO,4BAA4B;IAJzC;QAYE,yBAAoB,GAAG,oBAAoB,CAAC;QAC5C,kBAAa,GAAG;YACd,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE,EAAE;YACjC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,EAAE;SACpC,CAAC;QAEO,OAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;KAqCpC;IAnCC,QAAQ;;QACN,IAAI,CAAC,WAAW,GAAc,iBAAiB,CAC7C,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB;YACE,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE;gBAC7B,CAAA,MAAA,IAAI,CAAC,OAAO,CAAC,YAAY,0CAAE,MAAM,KAAI,IAAI,CAAC,aAAa,CAAC,MAAM;aAC/D;YACD,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;gBAC/B,CAAA,MAAA,IAAI,CAAC,OAAO,CAAC,YAAY,0CAAE,QAAQ,KAAI,IAAI,CAAC,aAAa,CAAC,QAAQ;aACnE;SACF,EACD,CAAC,UAAU,CAAC,QAAQ,EAAE,eAA8B,CAAC,EACrD,IAAI,CAAC,OAAO,CAAC,eAAe,CAC7B,CAAC;QAEF,IAAI,CAAC,mBAAmB,GAAG,MAAY,CACrC,MAAA,IAAI,CAAC,KAAK,CAAC,MAAM,0CAAE,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC,CACnD,0CAAE,YAAY,CAAC,IAAI,CACnB,SAAS,CACP,MAAY,MAAA,IAAI,CAAC,KAAK,CAAC,MAAM,0CAAE,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAE,0CAAE,KAAK,CACxE,EACD,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE;;YAChB,OAAA,MAAA,IAAI,CAAC,WAAW;iBACb,GAAG,CAAC,oBAAoB,CAAC,QAAQ,CAAC,0CACjC,UAAU,CAAC,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,KAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;SAAA,CAC7D,CACF,CAAC;QAEF,WAAW,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,WAAW;QACT,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;;6IAlDU,4BAA4B;iIAA5B,4BAA4B,mEC1BzC,szCAmCA;4FDTa,4BAA4B;kBAJxC,SAAS;mBAAC;oBACT,QAAQ,EAAE,6BAA6B;oBACvC,WAAW,EAAE,wCAAwC;iBACtD","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  ValidatorFn,\n  AbstractControl,\n} from '@angular/forms';\nimport {\n  amountValidator,\n  InternalAccountFormItem,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  RemittanceInfoFields,\n  PaymentFormFieldHooks,\n  PaymentBaseFields,\n} from '@backbase/payment-orders-ang';\nimport { registerFormGroup } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { Observable } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-payord-compact-amount-ui',\n  templateUrl: './payord-compact-amount.component.html',\n})\nexport class PayordCompactAmountComponent\n  implements OnInit, PaymentFormField, OnDestroy\n{\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  options!: PaymentFormFieldOptions;\n  control!: AbstractControl;\n  fromAccountProduct$!: Observable<InternalAccountFormItem | undefined>;\n  remittanceInfoFields = RemittanceInfoFields;\n  initialAmount = {\n    [RemittanceInfoFields.amount]: '',\n    [RemittanceInfoFields.currency]: '',\n  };\n  amountGroup!: FormGroup;\n  readonly id = new Date().getTime();\n\n  ngOnInit() {\n    this.amountGroup = <FormGroup>registerFormGroup(\n      this.group,\n      this.config.name,\n      {\n        [RemittanceInfoFields.amount]: [\n          this.options.defaultValue?.amount || this.initialAmount.amount,\n        ],\n        [RemittanceInfoFields.currency]: [\n          this.options.defaultValue?.currency || this.initialAmount.currency,\n        ],\n      },\n      [Validators.required, amountValidator as ValidatorFn],\n      this.options.asyncValidators\n    );\n\n    this.fromAccountProduct$ = (<FormGroup>(\n      this.group.parent?.get(PaymentBaseFields.initiator)\n    ))?.valueChanges.pipe(\n      startWith(\n        (<FormGroup>this.group.parent?.get(PaymentBaseFields.initiator))?.value\n      ),\n      tap((initiator) =>\n        this.amountGroup\n          .get(RemittanceInfoFields.currency)\n          ?.patchValue(initiator?.currency || this.options.currency)\n      )\n    );\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<section\n  class=\"form-group bb-dynamic-input\"\n  [formGroup]=\"amountGroup\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n  [class.was-validated]=\"\n    group.get(config.name)?.invalid && group.get(config.name)?.touched\n  \"\n>\n  <label [attr.for]=\"'bb-compact-amount-' + id\" *ngIf=\"options?.label\">{{\n    options?.label\n  }}</label>\n  <div class=\"position-relative\">\n    <bb-amount-input-ui\n      [id]=\"'bb-compact-amount-' + id\"\n      [formControlName]=\"remittanceInfoFields.amount\"\n      [mapCurrency]=\"options?.showCurrencySymbol !== false\"\n      [currency]=\"(fromAccountProduct$ | async)?.currency || options?.currency\"\n      [placeholder]=\"options?.placeholder || '0.00'\"\n      [required]=\"true\"\n      [wrapperClasses]=\"\n        options.wrapperClasses || 'bb-amount-input__field--large'\n      \"\n      [autoDecimal]=\"options.autoDecimal\"\n      [maxLength]=\"options?.maxLength\"\n      [aria-describedby]=\"'compact-amount-error-message-' + id\"\n    ></bb-amount-input-ui>\n  </div>\n  <bb-payord-validation-message\n    [id]=\"'compact-amount-error-message-' + id\"\n    [control]=\"group.get(config.name)\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label || 'Amount'\"\n  ></bb-payord-validation-message>\n</section>\n"]}