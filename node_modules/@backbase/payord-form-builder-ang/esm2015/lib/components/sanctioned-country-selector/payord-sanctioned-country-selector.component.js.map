{"version":3,"file":"payord-sanctioned-country-selector.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/sanctioned-country-selector/payord-sanctioned-country-selector.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/sanctioned-country-selector/payord-sanctioned-country-selector.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  CounterPartyFields,\n  HiddenFields,\n  isAddressTruthy,\n  PaymentBaseFields,\n  PaymentFormFieldHooks,\n  PaymentOptionFields,\n  RemittanceInfoFields,\n} from '@backbase/payment-orders-ang';\nimport { tap, map } from 'rxjs/operators';\nimport { getParentForm, registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport {\n  SanctionedCountry,\n  InputFormField,\n} from '@backbase/data-ang/payment-order-options';\n\n@Component({\n  selector: 'bb-payord-sanctioned-country-selector',\n  templateUrl: 'payord-sanctioned-country-selector.component.html',\n})\nexport class PayordSanctionedCountrySelectorComponent\n  extends ActivatableFormField\n  implements OnInit, OnDestroy\n{\n  control!: AbstractControl;\n  inputFormSettingControl!: AbstractControl;\n  defaultBankCodeSettingControl!: AbstractControl;\n  defaultCountryControl!: AbstractControl;\n  isClosedPaymentControl!: AbstractControl;\n  parentForm!: FormGroup;\n  countries$!: Observable<Array<string>>;\n  countries: Array<string> = [];\n  defaultCountry!: string;\n  inputFormSettings: { [key: string]: Array<InputFormField> } = {};\n  sanctionedCountries: { [key: string]: SanctionedCountry } = {};\n  formSubscription?: Subscription;\n  httpSubscription?: Subscription;\n  counterpartyIdControl!: AbstractControl;\n  private sanctionedCountriesControl!: AbstractControl;\n\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.defaultCountry = this.options.defaultCountry || '';\n    this.parentForm = getParentForm(this.group);\n\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.defaultCountry,\n      this.config\n    );\n\n    this.inputFormSettingControl =\n      this.parentForm.get(PaymentOptionFields.inputFormFromSettings) ||\n      registerFormControl(\n        this.parentForm,\n        PaymentOptionFields.inputFormFromSettings\n      );\n    this.defaultBankCodeSettingControl =\n      this.parentForm.get(HiddenFields.defaultBankCodeSetting) ||\n      registerFormControl(this.parentForm, HiddenFields.defaultBankCodeSetting);\n    this.defaultCountryControl = registerFormControl(\n      this.parentForm,\n      HiddenFields.sanctionedCountries\n    );\n    this.sanctionedCountriesControl = registerFormControl(\n      this.parentForm,\n      HiddenFields.sanctionedCountries\n    );\n\n    if (this.options.items$) {\n      this.httpSubscription = this.options.items$\n        .pipe(\n          map((items: Array<SanctionedCountry>) => this.mapCountries(items)),\n          tap((countryCodes: Array<string>) => {\n            this.countries = this.options.isWizardMode\n              ? countryCodes\n              : countryCodes.filter(\n                  (country) => country !== this.defaultCountry\n                );\n            this.sanctionedCountriesControl.setValue(this.countries);\n            if (\n              !this.control.value &&\n              this.defaultCountry &&\n              this.parentForm.get('isEditMode')?.value\n            ) {\n              this.control.setValue(this.defaultCountry);\n            }\n          })\n        )\n        .subscribe();\n    }\n\n    this.formSubscription = this.control.valueChanges.subscribe((value) =>\n      this.onChange(value)\n    );\n    this.counterpartyIdControl = <AbstractControl>(\n      this.parentForm.get([\n        PaymentBaseFields.counterparty,\n        CounterPartyFields.id,\n      ])\n    );\n\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  mapCountries(sanctionedCountries: Array<SanctionedCountry>) {\n    return sanctionedCountries.map((item) => {\n      if (item.country === this.control.value) {\n        this.inputFormSettingControl.reset();\n        this.inputFormSettingControl.setValue(item);\n      }\n      if (item.inputFormSettings) {\n        this.sanctionedCountries[item.country] = item;\n        this.inputFormSettings[item.country] = item.inputFormSettings;\n      }\n      if (item.isDefault) {\n        this.defaultCountry = item.country;\n        this.defaultCountryControl.setValue(item.country);\n        if (this.inputFormSettings[item.country]) {\n          this.inputFormSettings[item.country].forEach((setting) => {\n            if (setting.key === 'bank-code') {\n              this.defaultBankCodeSettingControl.setValue(setting);\n            }\n          });\n        }\n      }\n      return item.country;\n    });\n  }\n\n  onChange(val: string) {\n    this.inputFormSettingControl.setValue(this.sanctionedCountries[val]);\n    this.toggleDependants();\n  }\n\n  resetAddressGroup() {\n    const addressGroup = <FormGroup>(\n      (this.control && this.control.parent ? this.control.parent : null)\n    );\n    if (isAddressTruthy(addressGroup.value)) {\n      for (const controlName in addressGroup.controls) {\n        if (controlName !== 'country') {\n          addressGroup.controls[controlName].reset();\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.formSubscription) {\n      this.formSubscription.unsubscribe();\n    }\n\n    if (this.httpSubscription) {\n      this.httpSubscription.unsubscribe();\n    }\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  private resetPurposeOfPayment() {\n    const popControl = this.parentForm.get([\n      PaymentBaseFields.remittanceInfo,\n      RemittanceInfoFields.purposeOfPayment,\n    ]);\n    if (popControl?.value) {\n      popControl.reset();\n    }\n  }\n\n  selectItem(country: string) {\n    this.defaultCountry = country;\n    this.control.setValue(country);\n    this.resetAddressGroup();\n    this.resetPurposeOfPayment();\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  *ngIf=\"!config?.hidden\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <bb-select-country-dropdown\n    [formControlName]=\"config?.name\"\n    [countries]=\"countries\"\n    [label]=\"options?.label\"\n    [helperText]=\"options?.helperText\"\n    [placeholder]=\"options?.placeholder\"\n    [searchPlaceholder]=\"options?.searchPlaceholder\"\n    [dropdownIcon]=\"options?.dropdownIcon\"\n    [selectedCountry]=\"control.value\"\n    [isClosedPayment]=\"\n      parentForm.get('isClosedPayment')?.value || counterpartyIdControl?.value\n    \"\n    (selectCountry)=\"selectItem($event)\"\n    data-role=\"sanctioned-country-selector-dropdown\"\n  ></bb-select-country-dropdown>\n\n  <bb-payord-validation-message\n    [control]=\"group?.controls[config.name]\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label\"\n  ></bb-payord-validation-message>\n\n  <div\n    class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    [attr.aria-hidden]=\"!options?.description\"\n    [hidden]=\"!options?.description\"\n    [textContent]=\"options?.description || ''\"\n    #descElem\n  ></div>\n</div>\n"]}