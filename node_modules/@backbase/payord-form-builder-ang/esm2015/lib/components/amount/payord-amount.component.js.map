{"version":3,"file":"payord-amount.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/amount/payord-amount.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/amount/payord-amount.component.html"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAGT,SAAS,GAEV,MAAM,eAAe,CAAC;AACvB,OAAO,EAEL,UAAU,GAGX,MAAM,gBAAgB,CAAC;AACxB,OAAO,EACL,eAAe,EAIf,oBAAoB,EACpB,qBAAqB,GACtB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;;;;;;AAM1D,MAAM,OAAO,qBAAqB;IAJlC;QAQW,mBAAc,GAAG,qBAAqB,CAAC,GAAG,EAAE,CAAC;QA4BtD;;WAEG;QACH,kBAAa,GAAG;YACd,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE,EAAE;YACjC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,EAAE;SACpC,CAAC;KAoCH;IAlCC;;;;OAIG;IACH,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAChC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,CAAC,UAAU,CAAC,QAAQ,EAAE,eAA8B,CAAC,EACrD,IAAI,CAAC,OAAO,CAAC,eAAe,EAC5B,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,EAC/C,IAAI,CAAC,MAAM,CACZ,CAAC;QACF,WAAW,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED;;;;OAIG;IACH,WAAW;QACT,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,wBAAwB;;QACtB,OAAO,CACL,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU;YACxB,GAAG,CAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,aAAa,CAAC,EAAE,KAAI,EAAE,IAC3C,CAAA,MAAA,IAAI,CAAC,YAAY,0CAAE,aAAa,CAAC,EAAE,KAAI,EACzC,EAAE,CAAC,IAAI,EAAE,CACV,CAAC;IACJ,CAAC;;AAtEc,yBAAG,GAAG,CAAC,CAAC;sIAHZ,qBAAqB;0HAArB,qBAAqB,mQC5BlC,m9DAyDA;4FD7Ba,qBAAqB;kBAJjC,SAAS;mBAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,WAAW,EAAE,gCAAgC;iBAC9C;8BAQS,aAAa;sBADpB,SAAS;uBAAC,aAAa;gBAIhB,YAAY;sBADnB,SAAS;uBAAC,YAAY","sourcesContent":["import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  ValidatorFn,\n  AbstractControl,\n} from '@angular/forms';\nimport {\n  amountValidator,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  RemittanceInfoFields,\n  PaymentFormFieldHooks,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-amount',\n  templateUrl: './payord-amount.component.html',\n})\nexport class PayordAmountComponent\n  implements OnInit, PaymentFormField, OnDestroy\n{\n  private static _id = 0;\n  readonly payordAmountId = PayordAmountComponent._id++;\n\n  @ViewChild('amountLabel')\n  private amountLabelEl: ElementRef | undefined;\n\n  @ViewChild('helperText')\n  private helperTextEL: ElementRef | undefined;\n\n  /**\n   * Form config\n   */\n  config!: PaymentFormFieldConfig;\n\n  /**\n   * Form group\n   */\n  group!: FormGroup;\n\n  /**\n   * Form field options\n   */\n  options!: PaymentFormFieldOptions;\n\n  /**\n   * Form control\n   */\n  control!: AbstractControl;\n\n  /**\n   * Initial amount value\n   */\n  initialAmount = {\n    [RemittanceInfoFields.amount]: '',\n    [RemittanceInfoFields.currency]: '',\n  };\n\n  /**\n   * Initializes the component.\n   *\n   * @returns\n   */\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      [Validators.required, amountValidator as ValidatorFn],\n      this.options.asyncValidators,\n      this.options.defaultValue || this.initialAmount,\n      this.config\n    );\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  /**\n   * Cleanups just before Angular destroys the component.\n   *\n   * @returns\n   */\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  getLabelledbyForSelector(): string {\n    return (\n      this.options?.labelledBy ||\n      `${this.amountLabelEl?.nativeElement.id || ''} ${\n        this.helperTextEL?.nativeElement.id || ''\n      }`.trim()\n    );\n  }\n}\n","<section\n  *ngIf=\"!config?.hidden\"\n  class=\"bb-dynamic-input form-group payment-amount\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div\n    #amountLabel\n    class=\"bb-dynamic-input__label bb-label\"\n    id=\"payord-amount__helper-label-{{ payordAmountId }}\"\n    *ngIf=\"options?.label\"\n  >\n    {{ options?.label }}\n  </div>\n  <span\n    #helperText\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    id=\"payord-amount__helper-text-{{ payordAmountId }}\"\n    *ngIf=\"options?.helperText\"\n    [textContent]=\"options?.helperText\"\n  >\n  </span>\n  <bb-currency-input-ui\n    resultType=\"string\"\n    [attr.maxlength]=\"options?.maxLength || 18\"\n    [currencies]=\"options?.currencies\"\n    [decMaxLen]=\"options?.decMaxLen\"\n    [allowNegativeValue]=\"options?.allowNegativeValue\"\n    [currencyLabel]=\"options?.currencyLabel || ''\"\n    [decimalLabel]=\"options?.decimalLabel || ''\"\n    [disabled]=\"options?.disabled || false\"\n    [integer]=\"options?.integer\"\n    [integerLabel]=\"options?.integerLabel || ''\"\n    [isRightAligned]=\"options?.isRightAligned\"\n    [placeholder]=\"options?.placeholder || 0\"\n    [readonly]=\"options?.readonly\"\n    [aria-describedby]=\"options?.describedBy\"\n    [aria-labelledby]=\"getLabelledbyForSelector()\"\n    [aria-invalid]=\"options?.ariaInvalid\"\n    [formControlName]=\"this.config.name\"\n    [attr.data-role]=\"config.name\"\n  >\n    <div bbValidationMessage>\n      <bb-payord-validation-message\n        *ngIf=\"control?.touched && control?.invalid\"\n        [control]=\"group.get('amountGroup')\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label || 'Amount'\"\n      ></bb-payord-validation-message>\n    </div>\n  </bb-currency-input-ui>\n  <div\n    class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    *ngIf=\"options?.description\"\n    [textContent]=\"options?.description\"\n  ></div>\n</section>\n"]}