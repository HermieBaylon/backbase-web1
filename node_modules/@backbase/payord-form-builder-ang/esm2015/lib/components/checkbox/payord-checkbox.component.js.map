{"version":3,"file":"payord-checkbox.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-form-builder-ang/src/lib/components/checkbox/payord-checkbox.component.ts","../../../../../../../libs/payord-form-builder-ang/src/lib/components/checkbox/payord-checkbox.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAE,oBAAoB,EAAE,MAAM,qCAAqC,CAAC;AAC3E,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC1D,OAAO,EAAE,qBAAqB,EAAE,MAAM,8BAA8B,CAAC;;;;;;;;AAMrE,MAAM,OAAO,uBACX,SAAQ,oBAAoB;IAK5B,YAA6B,iBAAoC;QAC/D,KAAK,CAAC,iBAAiB,CAAC,CAAC;QADE,sBAAiB,GAAjB,iBAAiB,CAAmB;QAFjE,kBAAa,GAAG,IAAI,CAAC;IAIrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,CAAC,CACpB,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAC3D,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAChC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,OAAO,CAAC,UAAU,EACvB,IAAI,CAAC,OAAO,CAAC,eAAe,EAC5B,IAAI,CAAC,OAAO,CAAC,YAAY,EACzB,IAAI,CAAC,MAAM,CACZ,CAAC;QACF,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,WAAW,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,WAAW;QACT,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;;wIA5BU,uBAAuB;4HAAvB,uBAAuB,iFCXpC,8vBAyBA;4FDda,uBAAuB;kBAJnC,SAAS;mBAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,WAAW,EAAE,kCAAkC;iBAChD","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { PaymentFormFieldHooks } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-checkbox',\n  templateUrl: './payord-checkbox.component.html',\n})\nexport class PayordCheckboxComponent\n  extends ActivatableFormField\n  implements OnInit, OnDestroy\n{\n  shouldDisplay = true;\n\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.shouldDisplay = !(\n      this.options.hideInWizardMode && this.options.isWizardMode\n    );\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  *ngIf=\"!config?.hidden && shouldDisplay\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <bb-input-checkbox-ui\n    [formControlName]=\"config?.name\"\n    [label]=\"options?.label\"\n    (change)=\"toggleDependants()\"\n    [disabled]=\"options?.disabled\"\n    [bbDynamicAriaAttribute]=\"{\n      __error: control?.touched && control?.invalid\n    }\"\n    [attr.data-role]=\"config?.name\"\n    #inputEl\n  >\n  </bb-input-checkbox-ui>\n  <bb-payord-validation-message\n    [control]=\"group?.controls[config.name]\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label\"\n    [id]=\"inputEl?.id + '__error'\"\n  ></bb-payord-validation-message>\n</div>\n"]}