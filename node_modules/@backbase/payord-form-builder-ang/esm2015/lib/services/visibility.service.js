import { BehaviorSubject } from 'rxjs';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class VisibilityService {
    constructor() {
        this.showSubject$ = new BehaviorSubject({});
        this.hideSubject$ = new BehaviorSubject({});
    }
    /**
     * Getter to show an item
     */
    get show$() {
        return this.showSubject$.asObservable();
    }
    /**
     * Getter to hide an item
     */
    get hide$() {
        return this.hideSubject$.asObservable();
    }
    /**
     * Shows the items
     *
     * @param [name] Item name
     * @param [items] Items to show
     * @returns
     */
    showItems(name, items) {
        this.showSubject$.next({ name, items });
    }
    /**
     * Hides the items
     *
     * @param [name] Item name
     * @param [items] Items to hide
     * @returns
     */
    hideItems(name, items) {
        this.hideSubject$.next({ name, items });
    }
}
/** @nocollapse */ VisibilityService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: VisibilityService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ VisibilityService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: VisibilityService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: VisibilityService, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=visibility.service.js.map