import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { distinctUntilChanged } from 'rxjs/operators';
import * as i0 from "@angular/core";
export class MultiPaymentService {
    constructor() {
        this.totalAmount$ = new BehaviorSubject(0);
        this.totalTransfers$ = new BehaviorSubject(0);
    }
    get paymentTotalAmount$() {
        return this.totalAmount$.asObservable().pipe(distinctUntilChanged());
    }
    get paymentTotalTransfers$() {
        return this.totalTransfers$.asObservable().pipe(distinctUntilChanged());
    }
}
/** @nocollapse */ MultiPaymentService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: MultiPaymentService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ MultiPaymentService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: MultiPaymentService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: MultiPaymentService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });
//# sourceMappingURL=multi-payment.service.js.map