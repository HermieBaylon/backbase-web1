{"version":3,"file":"visibility.service.js","sourceRoot":"","sources":["../../../../../../libs/payord-form-builder-ang/src/lib/services/visibility.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAc,eAAe,EAAE,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;AAS3C,MAAM,OAAO,iBAAiB;IAD9B;QAEU,iBAAY,GAAG,IAAI,eAAe,CAGvC,EAAE,CAAC,CAAC;QACC,iBAAY,GAAG,IAAI,eAAe,CAGvC,EAAE,CAAC,CAAC;KAqCR;IAnCC;;OAEG;IACH,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC;IAED;;;;;;OAMG;IACH,SAAS,CAAC,IAAa,EAAE,KAAkC;QACzD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;;OAMG;IACH,SAAS,CAAC,IAAa,EAAE,KAAkC;QACzD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1C,CAAC;;kIA5CU,iBAAiB;sIAAjB,iBAAiB;4FAAjB,iBAAiB;kBAD7B,UAAU","sourcesContent":["import { Observable, BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { DependantItem } from '@backbase/payment-orders-ang';\n\ntype ItemVisibility = Observable<{\n  name?: string | undefined;\n  items?: (string | DependantItem)[] | undefined;\n}>;\n\n@Injectable()\nexport class VisibilityService {\n  private showSubject$ = new BehaviorSubject<{\n    name?: string;\n    items?: (string | DependantItem)[];\n  }>({});\n  private hideSubject$ = new BehaviorSubject<{\n    name?: string;\n    items?: (string | DependantItem)[];\n  }>({});\n\n  /**\n   * Getter to show an item\n   */\n  get show$(): ItemVisibility {\n    return this.showSubject$.asObservable();\n  }\n\n  /**\n   * Getter to hide an item\n   */\n  get hide$(): ItemVisibility {\n    return this.hideSubject$.asObservable();\n  }\n\n  /**\n   * Shows the items\n   *\n   * @param [name] Item name\n   * @param [items] Items to show\n   * @returns\n   */\n  showItems(name?: string, items?: (string | DependantItem)[]) {\n    this.showSubject$.next({ name, items });\n  }\n\n  /**\n   * Hides the items\n   *\n   * @param [name] Item name\n   * @param [items] Items to hide\n   * @returns\n   */\n  hideItems(name?: string, items?: (string | DependantItem)[]) {\n    this.hideSubject$.next({ name, items });\n  }\n}\n"]}