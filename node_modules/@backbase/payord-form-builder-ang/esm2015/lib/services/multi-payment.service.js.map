{"version":3,"file":"multi-payment.service.js","sourceRoot":"","sources":["../../../../../../libs/payord-form-builder-ang/src/lib/services/multi-payment.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAc,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;;AAKtD,MAAM,OAAO,mBAAmB;IAHhC;QAIE,iBAAY,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;QAC9C,oBAAe,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;KASlD;IAPC,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;IAC1E,CAAC;;oIAVU,mBAAmB;wIAAnB,mBAAmB,cAFlB,MAAM;4FAEP,mBAAmB;kBAH/B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MultiPaymentService {\n  totalAmount$ = new BehaviorSubject<number>(0);\n  totalTransfers$ = new BehaviorSubject<number>(0);\n\n  get paymentTotalAmount$(): Observable<number> {\n    return this.totalAmount$.asObservable().pipe(distinctUntilChanged());\n  }\n\n  get paymentTotalTransfers$(): Observable<number> {\n    return this.totalTransfers$.asObservable().pipe(distinctUntilChanged());\n  }\n}\n"]}