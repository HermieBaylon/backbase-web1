{"version":3,"file":"form-field.directive.js","sourceRoot":"","sources":["../../../../../../libs/payord-form-builder-ang/src/lib/directives/form-field.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,wBAAwB,EACxB,gBAAgB,GAEjB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAM3C,OAAO,EAAE,wBAAwB,EAAE,MAAM,wCAAwC,CAAC;;;AAKlF,MAAM,OAAO,yBAAyB;IAkBpC,YACU,QAAkC,EAClC,SAA2B,EAClB,iBAA2C;QAFpD,aAAQ,GAAR,QAAQ,CAA0B;QAClC,cAAS,GAAT,SAAS,CAAkB;QAClB,sBAAiB,GAAjB,iBAAiB,CAA0B;IAC3D,CAAC;IAEJ,QAAQ;QACN,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxE,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAM,SAAS,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACzD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACjD,CAAC;;0IA/BU,yBAAyB;8HAAzB,yBAAyB;4FAAzB,yBAAyB;kBAHrC,SAAS;mBAAC;oBACT,QAAQ,EAAE,sBAAsB;iBACjC;qLAKU,OAAO;sBAAf,KAAK;gBAKG,MAAM;sBAAd,KAAK;gBAKG,KAAK;sBAAb,KAAK","sourcesContent":["import {\n  Directive,\n  Input,\n  OnInit,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ComponentRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n} from '@backbase/payment-orders-ang';\nimport { ComponentsFactoryService } from '../services/components-factory.service';\n\n@Directive({\n  selector: '[bbPaymentFormField]',\n})\nexport class PaymentFormFieldDirective implements PaymentFormField, OnInit {\n  /**\n   * The data of the form field\n   */\n  @Input() options!: PaymentFormFieldOptions;\n\n  /**\n   * The config of form field\n   */\n  @Input() config!: PaymentFormFieldConfig;\n\n  /**\n   * The parent form group of the form field\n   */\n  @Input() group!: FormGroup;\n\n  component!: ComponentRef<PaymentFormField>;\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    private readonly componentsFactory: ComponentsFactoryService\n  ) {}\n\n  ngOnInit() {\n    const component = this.componentsFactory.getFormField(this.config.type);\n    const factory = this.resolver.resolveComponentFactory<any>(component);\n    this.component = this.container.createComponent(factory);\n    this.component.instance.config = this.config;\n    this.component.instance.group = this.group;\n    this.component.instance.options = this.options;\n  }\n}\n"]}