{"version":3,"file":"generic-utils.js","sourceRoot":"","sources":["../../../../../../libs/payord-form-builder-ang/src/lib/helpers/generic-utils.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,kBAAkB,GAGnB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAG9D,MAAM,CAAC,MAAM,WAAW,GAAG,CAAI,GAAM,EAAK,EAAE;IAC1C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;QAAE,OAAO,GAAG,CAAC;IAErC,OAAO,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QACzD,MAAM,cAAc,GAClB,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAA,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QAC1D,uCAAY,MAAM,KAAE,CAAC,GAAG,CAAC,EAAE,cAAc,IAAG;IAC9C,CAAC,EAAE,EAAE,CAAM,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,UAAU,iBAAiB,CAC/B,aAA4C,EAAE,EAC9C,aAAsB;IAEtB,MAAM,SAAS,GAAa,EAAE,CAAC;IAC/B,MAAM,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,GAAG,EAAmB,EAAE;QACxE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACpB,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,CAAC,GAAG,MAAM,EAAE,GAAG,CAAC,CAAC;SACzB;IACH,CAAC,EAAmB,EAAE,CAAC,CAAC;IACxB,OAAO;QACL,GAAG,cAAc;QACjB,EAAE,MAAM,EAAE,aAAuB,EAAE,KAAK,EAAE,SAAS,EAAE;KACtD,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,uBAAuB,CACrC,OAA2B;IAE3B,MAAM,SAAS,GAAG,oBAAoB,CAAC;IACvC,MAAM,MAAM,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;IACpC,MAAM,WAAW,GAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,iBAAiB,KAAI,EAAE,CAAC;IACrD,MAAM,QAAQ,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,iBAAiB,CAAC;IAC5C,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;QAC5B,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,EAAE;YAC3B,MAAM,CAAC,UAAU;gBACf,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;SACxE;IACH,CAAC,CAAC,CAAC;IAEH,uCAAY,MAAM,KAAE,QAAQ,IAAG;AACjC,CAAC;AAED,MAAM,UAAU,yBAAyB,CACvC,SAAoB,EACpB,mBAA4B;IAE5B,MAAM,QAAQ,GAAG;QACf,kBAAkB,CAAC,aAAa;QAChC,GAAG,kBAAkB,CAAC,YAAY,IAAI,kBAAkB,CAAC,cAAc,EAAE;QACzE,GAAG,kBAAkB,CAAC,YAAY,IAAI,kBAAkB,CAAC,QAAQ,EAAE;QACnE,GAAG,kBAAkB,CAAC,YAAY,IAAI,kBAAkB,CAAC,GAAG,EAAE;KAC/D,CAAC;IACF,IAAI,mBAAmB,EAAE;QACvB,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,WAAC,OAAA,MAAA,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,0CAAE,OAAO,EAAE,CAAA,EAAA,CAAC,CAAC;KACnE;SAAM;QACL,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,WAAC,OAAA,MAAA,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,0CAAE,MAAM,EAAE,CAAA,EAAA,CAAC,CAAC;KAClE;AACH,CAAC","sourcesContent":["import { FormGroup } from '@angular/forms';\nimport { SanctionedCountry } from '@backbase/data-ang/payment-order-options';\nimport {\n  CounterPartyFields,\n  DependantItem,\n  PurposeInfo,\n} from '@backbase/payment-orders-ang';\nimport { isObjectTruthy } from '@backbase/payment-orders-ang';\ndeclare const $localize: any;\n\nexport const mapLocalize = <T>(obj: T): T => {\n  if (!isObjectTruthy(obj)) return obj;\n\n  return Object.entries(obj).reduce((result, [key, value]) => {\n    const localizedValue =\n      typeof value === 'string' ? $localize`${value}` : value;\n    return { ...result, [key]: localizedValue };\n  }, {}) as T;\n};\n\nexport function mapDependentItems(\n  dependants: Array<string | DependantItem> = [],\n  currentParent?: string\n): DependantItem[] {\n  const localDeps: string[] = [];\n  const dependantItems = dependants.reduce((result, dep): DependantItem[] => {\n    if (typeof dep === 'string') {\n      localDeps.push(dep);\n      return result;\n    } else {\n      return [...result, dep];\n    }\n  }, <DependantItem[]>[]);\n  return [\n    ...dependantItems,\n    { parent: currentParent as string, items: localDeps },\n  ];\n}\n\nexport function getPurposeOfPaymentInfo(\n  country?: SanctionedCountry\n): PurposeInfo {\n  const fieldName = 'purpose-of-payment';\n  const result = { isOptional: true };\n  const countryInfo = country?.inputFormSettings || [];\n  const purposes = country?.purposesOfPayment;\n  countryInfo.forEach((field) => {\n    if (field.key === fieldName) {\n      result.isOptional =\n        field.mandatory !== undefined ? !field.mandatory : result.isOptional;\n    }\n  });\n\n  return { ...result, purposes };\n}\n\nexport function toggleBeneficiaryControls(\n  formGroup: FormGroup,\n  shouldDisableFields: boolean\n): void {\n  const controls = [\n    CounterPartyFields.accountNumber,\n    `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`,\n    `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`,\n    `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`,\n  ];\n  if (shouldDisableFields) {\n    controls?.forEach((control) => formGroup.get(control)?.disable());\n  } else {\n    controls?.forEach((control) => formGroup.get(control)?.enable());\n  }\n}\n"]}