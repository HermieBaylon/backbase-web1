import { OnDestroy, OnInit } from '@angular/core';
import { AbstractControl, FormGroup } from '@angular/forms';
import { PaymentFormField, PaymentFormFieldConfig, PaymentFormFieldOptions } from '@backbase/payment-orders-ang';
import { Subject, Subscription } from 'rxjs';
import * as i0 from "@angular/core";
export interface CalculatedRate {
    currencyFrom: string;
    currencyTo: string;
    rate: number;
    calculatedAmount: number;
}
export declare class PayordSanctionedCurrencyAmountComponent implements OnInit, PaymentFormField, OnDestroy {
    private static _id;
    readonly sanctionedCurrencyAmountId: number;
    private amountLabelEl;
    private helperTextEL;
    /**
     * Form config
     */
    config: PaymentFormFieldConfig;
    /**
     * Form group
     */
    group: FormGroup;
    /**
     * Form field options
     */
    options: PaymentFormFieldOptions;
    /**
     * Form control
     */
    control: AbstractControl;
    /**
     * Subscriptio to a value change
     */
    valueChangeSubscription?: Subscription;
    /**
     * Currency control
     */
    initiatorCurrencyControl: AbstractControl;
    /**
     * Subject for exchange rate
     */
    exchangeRate$: Subject<number>;
    /**
     * Control for exchange rate
     */
    exchangeRateControl: AbstractControl;
    /**
     * Parent form group
     */
    parentForm: FormGroup;
    /**
     * Initial amount value
     */
    initialAmount: {
        amount: string;
        currency: string;
    };
    /**
     * Initializes the component.
     *
     * @returns
     */
    ngOnInit(): void;
    /**
     * Returns the calculated rate
     *
     * @param [exchangeRate] Exchange rate
     */
    getCalculatedRate(exchangeRate?: number): CalculatedRate | undefined;
    /**
     * Cleanups just before Angular destroys the component.
     *
     * @returns
     */
    ngOnDestroy(): void;
    getLabelledbyForSelector(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<PayordSanctionedCurrencyAmountComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PayordSanctionedCurrencyAmountComponent, "bb-sanctioned-currency-amount", never, {}, {}, never, never>;
}
