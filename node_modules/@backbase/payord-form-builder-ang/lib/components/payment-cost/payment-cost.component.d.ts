import { OnDestroy, OnInit } from '@angular/core';
import { AbstractControl, FormGroup } from '@angular/forms';
import { Currency, Hideable, PaymentFormFieldConfig, PaymentFormFieldOptions, RemittanceInfoFields } from '@backbase/payment-orders-ang';
import { PaymentCostInfo } from '@backbase/payment-orders-ang';
import { BehaviorSubject, Subscription } from 'rxjs';
import * as i0 from "@angular/core";
export declare class PayordPaymentCostComponent implements OnInit, OnDestroy {
    readonly defaultCurrency = "USD";
    options: PaymentFormFieldOptions;
    config: PaymentFormFieldConfig & Hideable;
    group: FormGroup;
    amountControl: AbstractControl | null;
    fromCurrencyControl: AbstractControl | null;
    chargeBearerControl: AbstractControl;
    transferFeeControl: AbstractControl;
    exchangeRateControl: AbstractControl;
    instructionPriorityControl: AbstractControl | null;
    paymentTypeNameControl: AbstractControl | null;
    paymentCostInfo$: BehaviorSubject<PaymentCostInfo | undefined>;
    amount: {
        [RemittanceInfoFields.amount]: string;
        [RemittanceInfoFields.currency]: string;
    };
    subscription?: Subscription;
    fromCurrency: string;
    exchangeRate: number;
    instructionPriority: boolean;
    isTotalAmountDisplayed: boolean;
    ngOnInit(): void;
    getTotalCost(transferFee?: Currency, calculatedAmount?: number): string;
    ngOnDestroy(): void;
    hasForexInfo(fromCurrency?: string, toCurrency?: string, exchangeRate?: number): boolean;
    listenChanges(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PayordPaymentCostComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PayordPaymentCostComponent, "bb-payment-cost", never, {}, {}, never, never>;
}
