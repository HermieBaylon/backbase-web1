import { OnInit, OnDestroy } from '@angular/core';
import { ActivatableFormField } from '../../models/activatable-form-field';
import { VisibilityService } from '../../services/visibility.service';
import { AbstractControl } from '@angular/forms';
import { BehaviorSubject, Subscription, Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class PayordChargeBearerComponent extends ActivatableFormField implements OnInit, OnDestroy {
    private readonly visibilityService;
    chargeBearerOptionsControl?: AbstractControl | null;
    chargeBearerOptionsSubject$: BehaviorSubject<string[]>;
    chargeBearerOptions$: Observable<string[]>;
    subscription?: Subscription;
    constructor(visibilityService: VisibilityService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PayordChargeBearerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PayordChargeBearerComponent, "bb-charge-bearer", never, {}, {}, never, never>;
}
