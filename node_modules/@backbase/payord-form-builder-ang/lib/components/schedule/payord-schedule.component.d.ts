import { OnInit, OnDestroy } from '@angular/core';
import { FormGroup, Validators } from '@angular/forms';
import { pastDateValidator, requiredEndDateValidator, requiredEndTypeValidator, requiredAfterValidator } from '@backbase/payment-orders-ang';
import { PaymentFormField, PaymentFormFieldConfig, PaymentFormFieldOptions, ScheduleItem } from '@backbase/payment-orders-ang';
import * as i0 from "@angular/core";
export declare class PayordScheduleComponent implements OnInit, PaymentFormField, OnDestroy {
    options: PaymentFormFieldOptions;
    config: PaymentFormFieldConfig;
    group: FormGroup;
    scheduleGroup: FormGroup;
    defaultMinOcccurs: number;
    defaultMaxOcccurs: number;
    ngOnInit(): void;
    ngOnDestroy(): void;
    initScheduleFields(minOccurs: number, maxOccurs: number): {
        frequency: ((typeof Validators.required)[] | {
            value: string;
            every: string;
        })[];
        startDate: (string | (typeof Validators.required)[])[];
        endDate: (string | (typeof pastDateValidator | typeof requiredEndDateValidator)[])[];
        repeat: (number | (import("@angular/forms").ValidatorFn | typeof requiredAfterValidator | null)[])[];
        endType: (string | (typeof requiredEndTypeValidator)[])[];
    };
    registerFields(fields: {
        [key: string]: any[];
    }): void;
    get scheduleLabelData(): ScheduleItem;
    static ɵfac: i0.ɵɵFactoryDeclaration<PayordScheduleComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PayordScheduleComponent, "bb-payord-schedule", never, {}, {}, never, never>;
}
