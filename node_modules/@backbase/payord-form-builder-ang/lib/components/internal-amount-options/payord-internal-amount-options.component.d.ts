import { OnInit, OnDestroy } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { ProductSummaryItem } from '@backbase/data-ang/arrangements';
import { PaymentFormField, PaymentFormFieldConfig, PaymentFormFieldOptions, ProductKinds, AmountOption, RemittanceInfoFields, InternalAccountFormItem } from '@backbase/payment-orders-ang';
import { StateService } from '@backbase/payment-orders-ang';
import { Observable } from 'rxjs';
import { ActivatableFormField } from '../../models/activatable-form-field';
import { VisibilityService } from '../../services/visibility.service';
import * as i0 from "@angular/core";
export declare class PayordInternalAmountOptionsComponent extends ActivatableFormField implements OnInit, PaymentFormField, OnDestroy {
    private readonly stateService;
    private readonly locale;
    options: PaymentFormFieldOptions;
    config: PaymentFormFieldConfig;
    group: FormGroup;
    toAccountProduct$: Observable<InternalAccountFormItem> | undefined;
    toAccountDefaultRecord: ProductSummaryItem | undefined;
    productKinds: typeof ProductKinds;
    remittanceInfoFields: typeof RemittanceInfoFields;
    amountOptions?: AmountOption[];
    customAmount: string;
    touched: boolean;
    readonly id: string;
    private subscription$?;
    /**
     * The format used for bignumber;
     */
    private readonly format;
    private readonly groupSeparator;
    private readonly decimalSeparator;
    constructor(stateService: StateService, visibilityService: VisibilityService, locale: string);
    ngOnInit(): void;
    ngOnDestroy(): void;
    registerFields(): void;
    /**
     * Method to handle selecting amount option
     *
     * @param [index] index of selected amount option
     */
    amountOptionChange(index: number): void;
    /**
     * Set amount options depend on selected product
     *
     * @param [product] selected account in counterParty product selector
     */
    setAmountOptions(product: InternalAccountFormItem): void;
    isAmountOptionsZero(account: InternalAccountFormItem): boolean | undefined;
    listenAmountOptionChanges(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PayordInternalAmountOptionsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PayordInternalAmountOptionsComponent, "bb-internal-amount-options", never, {}, {}, never, never>;
}
