import { OnInit, OnDestroy } from '@angular/core';
import { ActivatableFormField } from '../../models/activatable-form-field';
import { VisibilityService } from '../../services/visibility.service';
import { AbstractControl } from '@angular/forms';
import { PaymentOption } from '@backbase/payment-orders-ang';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class PayordSelectPaymentOptionComponent extends ActivatableFormField implements OnInit, OnDestroy {
    private readonly visibilityService;
    remittanceInfoGroup?: AbstractControl | null;
    paymentOptions: Array<PaymentOption>;
    paymentOptions$: Observable<Array<PaymentOption>>;
    paymentTypecontrol: AbstractControl;
    instructionPriorityControl: AbstractControl;
    transferFeeControl: AbstractControl;
    chargeBearerOptionsControl: AbstractControl;
    paymentTypeNameControl: AbstractControl;
    separator: string;
    defaultTransFerFee: {
        amount: string;
        currencyCode: string;
    };
    today: string;
    showConfirmOptionModal: boolean;
    selectedPaymentOptionLabel?: string;
    private previousPaymentOption?;
    private currentPaymentOption?;
    private isClosedPaymentControl;
    private isManualEditControl;
    constructor(visibilityService: VisibilityService);
    ngOnInit(): void;
    setPaymentOptionDetails(paymentOption: PaymentOption): void;
    getValue(option: PaymentOption): string;
    getValueByType(type: string, priority: string): PaymentOption;
    onRadioChange(value: string): void;
    private shouldShowConfirmationModal;
    confirmPaymentOption(): void;
    cancelPaymentOption(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PayordSelectPaymentOptionComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PayordSelectPaymentOptionComponent, "bb-select-payment-option", never, {}, {}, never, never>;
}
