import { Observable } from 'rxjs';
import { DependantItem } from '@backbase/payment-orders-ang';
import * as i0 from "@angular/core";
declare type ItemVisibility = Observable<{
    name?: string | undefined;
    items?: (string | DependantItem)[] | undefined;
}>;
export declare class VisibilityService {
    private showSubject$;
    private hideSubject$;
    /**
     * Getter to show an item
     */
    get show$(): ItemVisibility;
    /**
     * Getter to hide an item
     */
    get hide$(): ItemVisibility;
    /**
     * Shows the items
     *
     * @param [name] Item name
     * @param [items] Items to show
     * @returns
     */
    showItems(name?: string, items?: (string | DependantItem)[]): void;
    /**
     * Hides the items
     *
     * @param [name] Item name
     * @param [items] Items to hide
     * @returns
     */
    hideItems(name?: string, items?: (string | DependantItem)[]): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<VisibilityService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<VisibilityService>;
}
export {};
