{"version":3,"file":"backbase-payord-form-builder-ang.js","sources":["../../../../libs/payord-form-builder-ang/src/lib/helpers/generic-utils.ts","../../../../libs/payord-form-builder-ang/src/lib/helpers/form-helpers.ts","../../../../libs/payord-form-builder-ang/src/lib/helpers/hooks-helpers.ts","../../../../libs/payord-form-builder-ang/src/lib/components/address/payord-address.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/address/payord-address.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/validation-message/validation-message.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/validation-message/validation-message.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/amount/payord-amount.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/amount/payord-amount.component.html","../../../../libs/payord-form-builder-ang/src/lib/services/visibility.service.ts","../../../../libs/payord-form-builder-ang/src/lib/components/beneficiary-selector/payord-beneficiary-selector.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/beneficiary-selector/payord-beneficiary-selector.component.html","../../../../libs/payord-form-builder-ang/src/lib/models/activatable-form-field.ts","../../../../libs/payord-form-builder-ang/src/lib/directives/dynamic-aria-attribute.directive.ts","../../../../libs/payord-form-builder-ang/src/lib/components/checkbox/payord-checkbox.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/checkbox/payord-checkbox.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/debit-account-selector/payord-debit-account-selector.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/debit-account-selector/payord-debit-account-selector.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/radio/payord-radio.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/radio/payord-radio.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/schedule/payord-schedule.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/schedule/payord-schedule.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/select/payord-select.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/select/payord-select.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/textarea/payord-textarea.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/textarea/payord-textarea.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/textbox/payord-text.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/textbox/payord-text.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/sanctioned-currency-input/payord-sanctioned-currency-amount.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/sanctioned-currency-input/payord-sanctioned-currency-amount.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/country-selector/payord-country-selector.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/country-selector/payord-country-selector.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/switch/payord-switch.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/switch/payord-switch.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/date/payord-date.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/date/payord-date.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/number/payord-number.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/number/payord-number.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/phone/payord-phone.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/phone/payord-phone.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/select-payment-option/payord-select-payment-option.ts","../../../../libs/payord-form-builder-ang/src/lib/components/select-payment-option/payord-select-payment-option.html","../../../../libs/payord-form-builder-ang/src/lib/components/payment-cost/payment-cost.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/payment-cost/payment-cost.component.html","../../../../libs/payord-form-builder-ang/src/lib/helpers/route-helpers.ts","../../../../libs/payord-form-builder-ang/src/lib/components/internal-account-selector/payord-internal-account-selector.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/internal-account-selector/payord-internal-account-selector.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/compact-amount/payord-compact-amount.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/compact-amount/payord-compact-amount.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/button-group/payord-button-group.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/button-group/payord-button-group.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/schedule-header/payord-schedule-header.ts","../../../../libs/payord-form-builder-ang/src/lib/components/schedule-header/payord-schedule-header.html","../../../../libs/payord-form-builder-ang/src/lib/components/sanctioned-country-selector/payord-sanctioned-country-selector.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/sanctioned-country-selector/payord-sanctioned-country-selector.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/charge-bearer/charge-bearer.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/charge-bearer/charge-bearer.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/multi-payment-card/multi-payment-card.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/multi-payment-card/multi-payment-card.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/credit-debit-selector/payord-credit-debit-selector.ts","../../../../libs/payord-form-builder-ang/src/lib/components/credit-debit-selector/payord-credit-debit-selector.html","../../../../libs/payord-form-builder-ang/src/lib/components/internal-amount-options/payord-internal-amount-options.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/internal-amount-options/payord-internal-amount-options.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/header/payord-header.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/header/payord-header.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/purpose-of-payment/payord-purpose-of-payment.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/purpose-of-payment/payord-purpose-of-payment.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/alert/payord-alert.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/alert/payord-alert.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/schedule-switch/payord-schedule-switch.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/schedule-switch/payord-schedule-switch.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/beneficiary-group-header/beneficiary-group-header.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/beneficiary-group-header/payord-beneficiary-group-header.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/account-selector/multipayment-account-selector.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/account-selector/multipayment-account-selector.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/contact-selector/payord-contact-selector.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/contact-selector/payord-contact-selector.component.html","../../../../libs/payord-form-builder-ang/src/lib/models/components-map.model.ts","../../../../libs/payord-form-builder-ang/src/lib/services/components-factory.service.ts","../../../../libs/payord-form-builder-ang/src/lib/components/group/payord-group.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/group/payord-group.component.html","../../../../libs/payord-form-builder-ang/src/lib/directives/form-field.directive.ts","../../../../libs/payord-form-builder-ang/src/lib/containers/payord-form/payord-form.component.ts","../../../../libs/payord-form-builder-ang/src/lib/containers/payord-form/payord-form.component.html","../../../../libs/payord-form-builder-ang/src/lib/helpers/payment-config-helpers.ts","../../../../libs/payord-form-builder-ang/src/lib/containers/adaptive-form/adaptive-form.component.ts","../../../../libs/payord-form-builder-ang/src/lib/containers/adaptive-form/adaptive-form.component.html","../../../../libs/payord-form-builder-ang/src/lib/services/multi-payment.service.ts","../../../../libs/payord-form-builder-ang/src/lib/containers/multi-payment-form/multi-payment-form.component.ts","../../../../libs/payord-form-builder-ang/src/lib/containers/multi-payment-form/multi-payment-form.component.html","../../../../libs/payord-form-builder-ang/src/lib/components/error-alert/error-alert.component.ts","../../../../libs/payord-form-builder-ang/src/lib/components/error-alert/error-alert.component.html","../../../../libs/payord-form-builder-ang/src/lib/payord-form-builder-ang.module.ts","../../../../libs/payord-form-builder-ang/src/backbase-payord-form-builder-ang.ts"],"sourcesContent":["import { FormGroup } from '@angular/forms';\nimport { SanctionedCountry } from '@backbase/data-ang/payment-order-options';\nimport {\n  CounterPartyFields,\n  DependantItem,\n  PurposeInfo,\n} from '@backbase/payment-orders-ang';\nimport { isObjectTruthy } from '@backbase/payment-orders-ang';\ndeclare const $localize: any;\n\nexport const mapLocalize = <T>(obj: T): T => {\n  if (!isObjectTruthy(obj)) return obj;\n\n  return Object.entries(obj).reduce((result, [key, value]) => {\n    const localizedValue =\n      typeof value === 'string' ? $localize`${value}` : value;\n    return { ...result, [key]: localizedValue };\n  }, {}) as T;\n};\n\nexport function mapDependentItems(\n  dependants: Array<string | DependantItem> = [],\n  currentParent?: string\n): DependantItem[] {\n  const localDeps: string[] = [];\n  const dependantItems = dependants.reduce((result, dep): DependantItem[] => {\n    if (typeof dep === 'string') {\n      localDeps.push(dep);\n      return result;\n    } else {\n      return [...result, dep];\n    }\n  }, <DependantItem[]>[]);\n  return [\n    ...dependantItems,\n    { parent: currentParent as string, items: localDeps },\n  ];\n}\n\nexport function getPurposeOfPaymentInfo(\n  country?: SanctionedCountry\n): PurposeInfo {\n  const fieldName = 'purpose-of-payment';\n  const result = { isOptional: true };\n  const countryInfo = country?.inputFormSettings || [];\n  const purposes = country?.purposesOfPayment;\n  countryInfo.forEach((field) => {\n    if (field.key === fieldName) {\n      result.isOptional =\n        field.mandatory !== undefined ? !field.mandatory : result.isOptional;\n    }\n  });\n\n  return { ...result, purposes };\n}\n\nexport function toggleBeneficiaryControls(\n  formGroup: FormGroup,\n  shouldDisableFields: boolean\n): void {\n  const controls = [\n    CounterPartyFields.accountNumber,\n    `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`,\n    `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`,\n    `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`,\n  ];\n  if (shouldDisableFields) {\n    controls?.forEach((control) => formGroup.get(control)?.disable());\n  } else {\n    controls?.forEach((control) => formGroup.get(control)?.enable());\n  }\n}\n","import {\n  AbstractControl,\n  AsyncValidatorFn,\n  FormArray,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { InputFormField } from '@backbase/data-ang/payment-order-options';\nimport {\n  Address,\n  amountValidator,\n  ArrangementItem,\n  ContactItem,\n  CounterPartyDetails,\n  CounterPartyFields,\n  currencyValidatorFactory,\n  datePart,\n  getAccountHolderAddress,\n  getConfig,\n  getContactBankAddress,\n  HiddenFields,\n  ibanCountryValidator,\n  isCounterpartyObjectEquals,\n  isObjectTruthy,\n  isSelectedBeneficiaryModified,\n  objectEquals,\n  PaymentBaseFields,\n  PaymentDetails,\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentTemplateFields,\n  PaymentTypeConfig,\n  RemittanceDetails,\n  RemittanceInfoFields,\n  resetBeneficiaryDetails,\n  ScheduleItem,\n} from '@backbase/payment-orders-ang';\nimport { getPurposeOfPaymentInfo } from './generic-utils';\n\n/**\n * Registers a FormControl in the provided FormGroup\n *\n * @param group\n * @param formControlName\n * @param [validators]\n * @param [asyncValidators]\n * @param [initialValue='']\n * @returns\n */\nexport function registerFormControl(\n  group: FormGroup,\n  formControlName: string,\n  validators?: Array<ValidatorFn>,\n  asyncValidators?: Array<AsyncValidatorFn>,\n  initialValue: any = '',\n  config?: PaymentFormFieldConfig\n): AbstractControl {\n  let formControl: AbstractControl;\n  formControl = group.controls[formControlName];\n  group.addControl(\n    formControlName,\n    new FormControl(initialValue, validators || [], asyncValidators || [])\n  );\n\n  if (formControl) {\n    resetValidators(formControl, validators, asyncValidators, config);\n  } else {\n    group.addControl(\n      formControlName,\n      new FormControl(initialValue, validators || [], asyncValidators || [])\n    );\n    formControl = group.controls[formControlName];\n  }\n\n  return formControl;\n}\n\n/**\n * Converts the nested form array into a flat map. It is used to lookup any fields easily\n */\nexport const createControlsMap = (\n  controls: Array<PaymentFormFieldConfig | PaymentFormGroup>,\n  controlsMap: { [key: string]: PaymentFormFieldConfig | PaymentFormGroup } = {}\n) => {\n  let path: string;\n  return controls.reduce(\n    (\n      acc: { [key: string]: PaymentFormFieldConfig | PaymentFormGroup },\n      control: PaymentFormFieldConfig | PaymentFormGroup\n    ) => {\n      path = control.parent\n        ? `${control.parent}.${control.name}`\n        : control.name;\n      if ((<PaymentFormGroup>control).fields) {\n        acc = {\n          ...acc,\n          ...createControlsMap((<PaymentFormGroup>control).fields, acc),\n        };\n      } else {\n        acc[path] = control;\n      }\n      return acc;\n    },\n    controlsMap\n  );\n};\n\nexport function registerFormGroup(\n  group: FormGroup,\n  formGroupName: string,\n  formGroupConfig: { [key: string]: any[] },\n  validators?: Array<ValidatorFn>,\n  asyncValidators?: Array<AsyncValidatorFn>\n): AbstractControl | null {\n  const subGroup =\n    <FormGroup>group.get(formGroupName) ||\n    new FormGroup({}, validators || [], asyncValidators || []);\n\n  for (const key in formGroupConfig) {\n    if (formGroupConfig.hasOwnProperty(key)) {\n      subGroup.registerControl(\n        key,\n        new FormControl(\n          formGroupConfig[key].shift(),\n          (formGroupConfig[key].shift() as Array<ValidatorFn>) || []\n        )\n      );\n    }\n  }\n  group.addControl(formGroupName, subGroup);\n\n  return group.get(formGroupName);\n}\n\nexport function getParentForm(control: AbstractControl): FormGroup {\n  let ancestor = control;\n\n  while (ancestor && ancestor.parent) {\n    ancestor = ancestor.parent;\n  }\n\n  return <FormGroup>ancestor;\n}\n\nexport function getFormFieldData({\n  formControlPath,\n  form,\n  config,\n}: {\n  formControlPath: string;\n  form: FormGroup;\n  config: PaymentTypeConfig;\n}):\n  | {\n      control: AbstractControl | null;\n      fieldConfig: PaymentFormFieldConfig | PaymentFormGroup | undefined;\n    }\n  | undefined {\n  const apiFieldMap: { [key: string]: any } = {\n    'transferTransactionInformation.counterpartyAccount.identification.identification':\n      {\n        name: CounterPartyFields.accountNumber,\n        path: `${PaymentBaseFields.counterparty}.${CounterPartyFields.accountNumber}`,\n      },\n    'transferTransactionInformation.counterpartyBank.bankBranchCode': {\n      name: CounterPartyFields.bankBranchCode,\n      path: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`,\n    },\n    'transferTransactionInformation.instructedAmount.currencyCode': {\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      path: `${PaymentBaseFields.remittanceInfo}.${RemittanceInfoFields.amountCurrencyGroup}`,\n    },\n  };\n  const fieldData = apiFieldMap[formControlPath] || null;\n\n  if (fieldData) {\n    const control = form.get(fieldData.path);\n    const fieldConfig = getConfig(fieldData.name, config);\n    return { control, fieldConfig };\n  }\n  return;\n}\n\nexport function applyInputFormSettingForCountry({\n  inputFormSetting,\n  form,\n  config,\n}: {\n  inputFormSetting: InputFormField | any;\n  form: FormGroup;\n  config: PaymentTypeConfig;\n}) {\n  const counterpartyGroup = <FormGroup>form.get(PaymentBaseFields.counterparty);\n  const isClosedPaymentControl = <FormGroup>(\n    form.get(HiddenFields.isClosedPayment)\n  );\n  const hasArrangementIdControl = <FormGroup>(\n    counterpartyGroup.get(CounterPartyFields.id)\n  );\n  const schemeControl =\n    counterpartyGroup.get(CounterPartyFields.schemeName) ||\n    registerFormControl(counterpartyGroup, CounterPartyFields.schemeName);\n  if (inputFormSetting.apiField) {\n    const { control = null, fieldConfig = null } =\n      getFormFieldData({\n        formControlPath: inputFormSetting.apiField,\n        form,\n        config,\n      }) || {};\n\n    let validators: ValidatorFn[] | null = [];\n    if (inputFormSetting.mandatory) {\n      // For currency input we need amountValidator instead of Validators.required\n      if (inputFormSetting.key === 'currency') {\n        validators.push(amountValidator as ValidatorFn);\n      } else {\n        validators.push(Validators.required);\n      }\n    }\n\n    if (inputFormSetting.regex) {\n      validators.push(createValidatorFromRegex(inputFormSetting.regex));\n    }\n\n    if (inputFormSetting.key === 'currency' && inputFormSetting.values.length) {\n      validators.push(currencyValidatorFactory(inputFormSetting.values));\n    }\n\n    if (inputFormSetting.key === 'account-number') {\n      schemeControl.setValue(inputFormSetting.format);\n      if (inputFormSetting.format === 'IBAN') {\n        validators.push(ibanCountryValidator());\n      }\n    }\n\n    if (control && fieldConfig) {\n      const labelData = inputFormSetting.label || {};\n      const labelKey = Object.keys(labelData)[0];\n      const label = labelData[labelKey]; // need  to implement i18n for this\n      fieldConfig.options = fieldConfig.options || {};\n\n      if (label) {\n        if (!fieldConfig.options.defaultLabel) {\n          fieldConfig.options.defaultLabel =\n            getLabelFromInputSetting(\n              form.get('defaultBankCodeSetting')?.value\n            ) || fieldConfig.options.label;\n        }\n        fieldConfig.options.label = label;\n      } else if (\n        fieldConfig.options.defaultLabel &&\n        fieldConfig.options.defaultLabel !== fieldConfig.options.label\n      ) {\n        // reset to default label if the inputform setting doesn't contain label.\n        fieldConfig.options.label = fieldConfig.options.defaultLabel;\n      }\n\n      const shouldEnableControls = !(\n        isClosedPaymentControl?.value || hasArrangementIdControl?.value\n      );\n      if (inputFormSetting.notApplicable) {\n        control.reset();\n        validators = null;\n        control.disable();\n      } else if (control.disabled && shouldEnableControls) {\n        control.enable();\n      }\n\n      if (isControlFilled(control)) {\n        control.markAsTouched();\n      }\n      control.setValidators(validators);\n      control.updateValueAndValidity();\n    }\n  }\n}\n\nexport function setAdditionalBankDetails(\n  form: FormGroup,\n  config: PaymentTypeConfig\n) {\n  const setting = <InputFormField>form.get('defaultBankCodeSetting')?.value;\n  if (!setting) return;\n\n  const label = getLabelFromInputSetting(setting);\n  const regex = setting.regex;\n  if (label) {\n    setAdditionalBankLabel(CounterPartyFields.correspondentBank, label, config);\n    setAdditionalBankLabel(CounterPartyFields.intermediaryBank, label, config);\n  }\n\n  if (regex) {\n    appendBankCodePatternValidator(\n      CounterPartyFields.correspondentBank,\n      regex,\n      config\n    );\n    appendBankCodePatternValidator(\n      CounterPartyFields.intermediaryBank,\n      regex,\n      config\n    );\n  }\n}\n\nexport function createValidatorFromRegex(pattern: string): ValidatorFn {\n  if (pattern.startsWith('/') && pattern.endsWith('/')) {\n    pattern = pattern.slice(1, -1);\n  }\n\n  return Validators.pattern(new RegExp(pattern));\n}\n\nfunction appendBankCodePatternValidator(\n  controlName: string,\n  regex: string,\n  config: PaymentTypeConfig\n) {\n  const additionalBankConfig = getConfig(\n    controlName,\n    config\n  ) as PaymentFormGroup;\n  if (!additionalBankConfig) return;\n  const bankCodeConfig = getConfig(\n    CounterPartyFields.bankBranchCode,\n    additionalBankConfig\n  );\n  if (bankCodeConfig) {\n    if (!bankCodeConfig?.options) {\n      bankCodeConfig.options = {};\n    }\n    bankCodeConfig.options.validators = [createValidatorFromRegex(regex)];\n  }\n}\n\nfunction getLabelFromInputSetting(setting?: InputFormField): string {\n  return Object.values(setting?.label || {})[0];\n}\n\nfunction setAdditionalBankLabel(\n  additionalBankType: string,\n  label: string,\n  config: PaymentTypeConfig\n) {\n  const additionalBankConfig = getConfig(\n    additionalBankType,\n    config\n  ) as PaymentFormGroup;\n  if (additionalBankConfig) {\n    const bankCodeConfig = getConfig(\n      CounterPartyFields.bankBranchCode,\n      additionalBankConfig\n    );\n    const selectAdditionalBankCodeTypeConfig = getConfig(\n      'selectAdditionalBankCodeType',\n      additionalBankConfig\n    );\n    const selectAdditionalBankCodeTypeOptions =\n      selectAdditionalBankCodeTypeConfig?.options?.options;\n    if (bankCodeConfig?.options) {\n      bankCodeConfig.options.label = label;\n    }\n    if (selectAdditionalBankCodeTypeOptions?.length) {\n      selectAdditionalBankCodeTypeOptions.forEach(\n        (option: { label: string; value: string }) => {\n          if (option.value === 'BRANCH_CODE') {\n            option.label = label;\n          }\n        }\n      );\n    }\n  }\n}\n\nexport function isControlFilled(control: AbstractControl) {\n  const isAmountControl =\n    (control?.value || {}).hasOwnProperty('currency') &&\n    (control?.value || {}).hasOwnProperty('amount');\n  return isAmountControl ? !!control?.value?.amount : !!control?.value;\n}\n\nexport function isClosedPaymentValidator(control: AbstractControl) {\n  const form = getParentForm(control);\n  const counterPartyDetails = (<FormGroup>(\n    form.get(PaymentBaseFields.counterparty)\n  ))?.getRawValue();\n  const selectedBeneficiary = form.get(HiddenFields.selectedBeneficiary)?.value;\n  const isBeneficairyUpdatedManually =\n    isSelectedBeneficiaryModified(counterPartyDetails, selectedBeneficiary) ||\n    (form?.get(HiddenFields.isManualEdit)?.value &&\n      isCounterPartyDetailsTruthy(counterPartyDetails));\n\n  return isBeneficairyUpdatedManually &&\n    form?.get(HiddenFields.isClosedPayment)?.value\n    ? { hasOnlyClosedPaymentPermission: true }\n    : null;\n}\n\nexport function getCounterpartyFormGroupDetails(\n  form: FormGroup\n): Partial<ArrangementItem> {\n  const counterparty: CounterPartyDetails = (<FormGroup>(\n    form.get(PaymentBaseFields.counterparty)\n  ))?.getRawValue();\n\n  return {\n    name: counterparty?.name,\n    accountNumber: counterparty?.accountNumber,\n    bankBranchCode: counterparty?.creditorBank?.bankBranchCode,\n    BIC: counterparty?.creditorBank?.bic,\n  };\n}\n\nexport function resetValidators(\n  formControl: AbstractControl,\n  validators?: Array<ValidatorFn>,\n  asyncValidators?: Array<AsyncValidatorFn>,\n  config?: PaymentFormFieldConfig\n) {\n  const computedValidators = validators ? [...validators] : [];\n\n  if (!config?.hidden && config?.options?.isConditionalMandatory) {\n    computedValidators.push(Validators.required);\n  }\n\n  formControl.markAsUntouched();\n  formControl.clearValidators();\n  formControl.clearAsyncValidators();\n  formControl.setAsyncValidators(asyncValidators || []);\n  formControl.setValidators(computedValidators);\n}\n\nexport function addAddressFields(formGroup: FormGroup) {\n  const addressFields = {\n    addressLine1: [''],\n    addressLine2: [''],\n    streetName: [''],\n    postCode: [''],\n    town: [''],\n    countrySubDivision: [''],\n    country: [''],\n  };\n  for (const key in addressFields) {\n    if (addressFields.hasOwnProperty(key) && !formGroup.get(key)) {\n      registerFormControl(formGroup, key);\n    }\n  }\n}\n\nexport function registerFormArray(\n  group: FormGroup,\n  formArrayName: string,\n  validators?: Array<ValidatorFn>,\n  asyncValidators?: Array<AsyncValidatorFn>\n): FormArray {\n  const array =\n    <FormArray>group.get(formArrayName) ||\n    new FormArray([], validators || [], asyncValidators || []);\n  group.addControl(formArrayName, array);\n  return group.get(formArrayName) as FormArray;\n}\n\nexport function addControlToFormArray(\n  array: FormArray,\n  formGroupConfig: any[],\n  validators?: Array<ValidatorFn>,\n  asyncValidators?: Array<AsyncValidatorFn>,\n  initialValue: any = null\n): FormArray {\n  const subGroup = new FormGroup({}, validators || [], asyncValidators || []);\n  formGroupConfig.forEach((formConfig) => {\n    if (formConfig.name) {\n      subGroup.registerControl(\n        formConfig.name,\n        new FormControl(\n          initialValue,\n          (formConfig.validators as Array<ValidatorFn>) || []\n        )\n      );\n    }\n  });\n  array.push(subGroup);\n  return array;\n}\n\nexport function isEditFormDirty(\n  formValue: PaymentDetails,\n  initialFormValue?: PaymentDetails\n): boolean {\n  if (!initialFormValue) return true;\n  const schedule = getScheduleDatePart(formValue.schedule);\n  const initialSchedule = getScheduleDatePart(initialFormValue.schedule);\n\n  return (\n    formValue.initiator?.id !== initialFormValue.initiator?.id ||\n    !isCounterpartyObjectEquals(\n      formValue.counterparty,\n      initialFormValue.counterparty\n    ) ||\n    !objectEquals(schedule, initialSchedule) ||\n    isRemittanceInfoDirty(\n      formValue[PaymentBaseFields.remittanceInfo],\n      initialFormValue[PaymentBaseFields.remittanceInfo]\n    ) ||\n    formValue.chargeBearer !== initialFormValue.chargeBearer\n  );\n}\n\nexport function isTemplateFormDirty(\n  formValue: PaymentDetails,\n  initialFormValue: PaymentDetails\n) {\n  return (\n    formValue[PaymentBaseFields.initiator].id !==\n      initialFormValue[PaymentBaseFields.initiator].id ||\n    !objectEquals(\n      formValue[PaymentBaseFields.counterparty],\n      initialFormValue[PaymentBaseFields.counterparty]\n    ) ||\n    isRemittanceInfoDirty(\n      formValue[PaymentBaseFields.remittanceInfo],\n      initialFormValue[PaymentBaseFields.remittanceInfo]\n    ) ||\n    formValue[PaymentTemplateFields.templateName] !==\n      initialFormValue[PaymentTemplateFields.templateName]\n  );\n}\n\nfunction getScheduleDatePart(schedule: ScheduleItem) {\n  return {\n    ...schedule,\n    startDate: datePart(schedule?.startDate),\n    endDate: datePart(schedule?.endDate),\n  };\n}\n\nfunction isRemittanceInfoDirty(\n  remittanceInfo: RemittanceDetails,\n  initialRemittanceInfo: RemittanceDetails\n) {\n  if (!remittanceInfo) return false;\n  const amountGroup = remittanceInfo[RemittanceInfoFields.amountCurrencyGroup];\n  const initialAmountGroup =\n    initialRemittanceInfo[RemittanceInfoFields.amountCurrencyGroup];\n\n  return (\n    amountGroup?.amount !== initialAmountGroup?.amount ||\n    amountGroup?.currency !== initialAmountGroup?.currency ||\n    remittanceInfo[RemittanceInfoFields.urgent] !==\n      initialRemittanceInfo[RemittanceInfoFields.urgent] ||\n    remittanceInfo[RemittanceInfoFields.paymentReference] !==\n      initialRemittanceInfo[RemittanceInfoFields.paymentReference] ||\n    remittanceInfo[RemittanceInfoFields.description] !==\n      initialRemittanceInfo[RemittanceInfoFields.description]\n  );\n}\n\nexport function applyPurposeOfPaymentSettings({\n  form,\n  config,\n}: {\n  form: FormGroup;\n  config: PaymentTypeConfig | any;\n}) {\n  const country = form.value?.inputFormFromSettings;\n  const remittanceGroup = <FormGroup>form.get(PaymentBaseFields.remittanceInfo);\n  if (!remittanceGroup) {\n    return;\n  }\n  const purposeControl =\n    remittanceGroup.get(RemittanceInfoFields.purposeOfPayment) ||\n    registerFormControl(remittanceGroup, RemittanceInfoFields.purposeOfPayment);\n  const info = getPurposeOfPaymentInfo(country);\n  const fieldConfig = getConfig(RemittanceInfoFields.purposeOfPayment, config);\n  const options = fieldConfig?.options;\n\n  if (purposeControl && options) {\n    options.isOptional = info.isOptional;\n    options.purposes = info.purposes;\n    options.isCollapsed = info.isOptional;\n\n    if (options.isOptional) {\n      purposeControl.setValidators(null);\n      purposeControl.setAsyncValidators(null);\n      purposeControl.updateValueAndValidity();\n    } else {\n      purposeControl.setValidators([\n        Validators.required,\n        ...(options.validators || []),\n      ]);\n      purposeControl.setAsyncValidators([...(options.asyncValidators || [])]);\n      purposeControl.updateValueAndValidity();\n    }\n  }\n}\n\nfunction isCounterPartyDetailsTruthy(counterpartyDetails: CounterPartyDetails) {\n  return isObjectTruthy({\n    name: counterpartyDetails?.name,\n    accountNumber: counterpartyDetails.accountNumber,\n    bankBranchCode: counterpartyDetails.creditorBank?.bankBranchCode,\n  });\n}\n\nexport function getBeneficiaryDetails(\n  beneficiary?: ContactItem | ArrangementItem\n): Partial<ArrangementItem & { address: Address; bankAddress: Address }> {\n  const contactAccount = (<ContactItem>beneficiary)?.accounts?.[0];\n  const beneficiaryItem = beneficiary as ArrangementItem;\n  return {\n    bankBranchCode: contactAccount?.bankCode || beneficiaryItem?.bankBranchCode,\n    accountNumber:\n      contactAccount?.accountNumber || beneficiaryItem?.accountNumber,\n    name: beneficiary?.name,\n    BIC: contactAccount?.BIC || beneficiaryItem?.BIC,\n    address: getAccountHolderAddress(contactAccount),\n    bankAddress: getContactBankAddress(contactAccount),\n  };\n}\n\nexport function revertBeneficiaryChanges(form: FormGroup): void {\n  const counterPartyGroup = <FormGroup>form.get(PaymentBaseFields.counterparty);\n  const selectedBeneficiary = form.get(HiddenFields.selectedBeneficiary)?.value;\n  const addressGroup = counterPartyGroup.get(CounterPartyFields.postalAddress);\n  const bankAddressGroup = counterPartyGroup.get([\n    CounterPartyFields.creditorBank,\n    CounterPartyFields.postalAddress,\n  ]);\n  const isManualEditControl = form.get(HiddenFields.isManualEdit);\n\n  if (selectedBeneficiary) {\n    const beneficiaryDetails = getBeneficiaryDetails(selectedBeneficiary);\n    isManualEditControl?.reset();\n    counterPartyGroup.patchValue({\n      [CounterPartyFields.name]: beneficiaryDetails.name,\n      [CounterPartyFields.accountNumber]: beneficiaryDetails.accountNumber,\n      [CounterPartyFields.creditorBank]: {\n        [CounterPartyFields.bankBranchCode]: beneficiaryDetails.bankBranchCode,\n        [CounterPartyFields.bic]: beneficiaryDetails.BIC,\n      },\n    });\n    addressGroup?.setValue({ ...beneficiaryDetails.address });\n    bankAddressGroup?.setValue({\n      ...beneficiaryDetails.bankAddress,\n      country:\n        beneficiaryDetails.bankAddress?.country ||\n        form.get(HiddenFields.defaultCountry)?.value,\n    });\n  } else {\n    resetBeneficiaryDetails(counterPartyGroup);\n  }\n}\n","import {\n  PaymentFormFieldHooks,\n  PaymentFormField,\n  MultiPaymentHooks,\n  MultiPaymentHooksConfig,\n  StepperConfig,\n  StepperAction,\n} from '@backbase/payment-orders-ang';\nimport { FormControl } from '@angular/forms';\n\nexport function triggerHook(\n  name: PaymentFormFieldHooks,\n  component: PaymentFormField\n) {\n  const control = <FormControl>component.group.get(component.config.name);\n  const hook = component.config.hooks && component.config.hooks[name];\n  if (typeof hook === 'function') {\n    // Triggering the hook with component specific parameters\n    hook({\n      component, // The component instance\n      control, // The component form field\n      group: component.group, // The parent form group\n    });\n  }\n}\n\nexport function triggerStepperHook(\n  hooks: MultiPaymentHooks,\n  hookName: MultiPaymentHooksConfig | undefined,\n  callback?: () => void,\n  stepperConfig?: StepperConfig,\n  action?: StepperAction\n) {\n  const hook = hookName && hookName[hooks];\n  const doneFn = callback as () => void;\n\n  if (typeof hook === 'function') {\n    if (hooks === MultiPaymentHooks.onClick) {\n      hook({\n        doneFn, // Callback function that is triggered when hooks complete\n        stepperConfig,\n        action,\n      });\n    } else {\n      hook({});\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport {\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentFormField,\n  PaymentFormFieldHooks,\n  AddressType,\n  focusErrorElement,\n  PaymentBaseFields,\n  CounterPartyFields,\n  isAddressTruthy,\n} from '@backbase/payment-orders-ang';\nimport {\n  registerFormGroup,\n  registerFormControl,\n  getParentForm,\n} from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SanctionedCountry } from '@backbase/data-ang/payment-order-options';\nimport { CountriesMap, ViewType } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-address',\n  templateUrl: './payord-address.component.html',\n})\nexport class PayordAddressComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  options: PaymentFormFieldOptions = {};\n  countries$!: Observable<{ label: string; value: string | undefined }>;\n\n  addressViewType = ViewType.FORM;\n  addressGroup!: FormGroup;\n  initialAddress = {\n    addressLine1: [''],\n    addressLine2: [''],\n    streetName: [''],\n    postCode: [''],\n    town: [''],\n    countrySubDivision: [''],\n  };\n  parentForm!: FormGroup;\n  counterpartyIdControl!: AbstractControl;\n\n  constructor(private readonly elRef: ElementRef) {}\n\n  ngOnInit() {\n    this.options.hideCountry =\n      this.options.hideCountry ||\n      (this.options.isWizardMode &&\n        this.options.addressType === AddressType['beneficiary bank']);\n    this.countries$ =\n      this.options.useSanctionedCountries || this.options.isWizardMode\n        ? this.options.items$.pipe(\n            map((items: Array<SanctionedCountry>) =>\n              items.map(({ country }: SanctionedCountry) => ({\n                value: country,\n                label: CountriesMap[country],\n              }))\n            )\n          )\n        : of(this.options.countries);\n\n    this.addressGroup = <FormGroup>(\n      registerFormGroup(this.group, this.config.name, this.initialAddress)\n    );\n    if (!this.options.hideCountry) {\n      registerFormControl(this.addressGroup, 'country');\n    }\n    this.addressViewType = isAddressTruthy(this.addressGroup.value)\n      ? ViewType.CARD\n      : ViewType.BUTTON;\n    this.parentForm = getParentForm(this.group);\n    this.counterpartyIdControl = <AbstractControl>(\n      this.parentForm.get([\n        PaymentBaseFields.counterparty,\n        CounterPartyFields.id,\n      ])\n    );\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  onAddressAdd() {\n    this.addressViewType = ViewType.FORM;\n  }\n\n  onAddressEdit() {\n    this.addressViewType = ViewType.FORM;\n  }\n\n  onAddressDelete() {\n    this.addressViewType = ViewType.BUTTON;\n    if (this.options.hideCountry || this.options.options?.length === 1) {\n      for (const key in this.addressGroup.controls) {\n        if (key !== 'country') {\n          this.addressGroup.controls[key].reset();\n        }\n      }\n    } else {\n      this.addressGroup.reset();\n    }\n  }\n\n  onAddressReset() {\n    this.addressViewType = ViewType.BUTTON;\n  }\n\n  onAddressSubmit() {\n    if (this.addressGroup.valid) {\n      this.addressViewType = ViewType.CARD;\n    } else {\n      focusErrorElement(this.elRef.nativeElement);\n    }\n  }\n}\n","<div class=\"bb-dynamic-input\" [hidden]=\"config?.hidden\">\n  <div class=\"form-group\" [ngClass]=\"options?.cssClasses\">\n    <bb-address-item-details\n      [addressForm]=\"addressGroup\"\n      [addressType]=\"options?.addressType\"\n      [viewType]=\"options?.viewType || addressViewType\"\n      [isClosedPayment]=\"\n        parentForm.get('isClosedPayment')?.value || counterpartyIdControl?.value\n      \"\n      (add)=\"onAddressAdd()\"\n      (edit)=\"onAddressEdit()\"\n      (discard)=\"onAddressDelete()\"\n      (delete)=\"onAddressDelete()\"\n      (reset)=\"onAddressReset()\"\n      (submit)=\"onAddressSubmit()\"\n      [states]=\"options?.states\"\n      [countries]=\"countries$ | async\"\n      [hideCountry]=\"options?.hideCountry\"\n      [attr.data-role]=\"config?.name\"\n    >\n    </bb-address-item-details>\n  </div>\n</div>\n","import { OnInit, Component, Input, ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ErrorMessage, toggleTabIndex } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-validation-message',\n  templateUrl: './validation-message.component.html',\n})\nexport class ValidationMessageComponent implements OnInit {\n  /**\n   * The form control instance\n   */\n  @Input() control!: FormControl;\n  /**\n   * List of validation messages\n   */\n  @Input() validationMessages!: Array<ErrorMessage>;\n  /**\n   * Label of the form control\n   */\n  @Input() label!: string;\n  /**\n   * Id of validation message\n   */\n  @Input() id!: string;\n\n  /**\n   * If Generic messages are not needed.\n   */\n  @Input() hideGeneric = false;\n\n  requiredMessage!: string;\n  validationMessage!: string;\n\n  constructor(private readonly elRef: ElementRef) {}\n\n  ngOnInit() {\n    this.validationMessages = this.validationMessages || [];\n  }\n\n  getValidationMessage(error?: string): string {\n    this.validationMessage = '';\n    if (this.control.errors && this.validationMessages.length) {\n      for (const msg of this.validationMessages) {\n        if (error && msg.name === error) {\n          this.validationMessage = msg.message;\n          return this.validationMessage;\n        } else if (this.control.errors[msg.name]) {\n          this.validationMessage = msg.message;\n          return this.validationMessage;\n        }\n      }\n    }\n    return this.validationMessage;\n  }\n\n  getRequiredMessage(): string {\n    this.requiredMessage = this.getValidationMessage('required');\n    return this.requiredMessage;\n  }\n\n  onFocusout() {\n    toggleTabIndex(\n      '.bb-input-validation-message',\n      this.elRef.nativeElement,\n      false\n    );\n  }\n}\n","<bb-input-validation-message-ui\n  data-role=\"input-error\"\n  (focusout)=\"onFocusout()\"\n  *ngIf=\"control\"\n  [showErrors]=\"control?.touched && control?.invalid\"\n>\n  <ng-container\n    *ngIf=\"control.errors && control.errors['required']; else invalidError\"\n  >\n    <span data-role=\"required-error\" [attr.id]=\"id\">\n      <ng-container *ngIf=\"getRequiredMessage(); else requiredError\">\n        {{ requiredMessage }}\n      </ng-container>\n    </span>\n  </ng-container>\n\n  <ng-template #requiredError>\n    <ng-container\n      i18n=\"@@dynamic-form-field-default-validation-message.required.error\"\n    >\n      {{ label }} is required\n    </ng-container>\n  </ng-template>\n\n  <ng-template #invalidError>\n    <span data-role=\"required-error\" [attr.id]=\"id\">\n      <ng-container *ngIf=\"getValidationMessage(); else genericError\">\n        {{ validationMessage }}\n      </ng-container>\n    </span>\n  </ng-template>\n\n  <ng-template #genericError>\n    <ng-container\n      *ngIf=\"!hideGeneric\"\n      i18n=\"@@dynamic-form-field-default-validation-message.generic.error\"\n    >\n      Invalid {{ label }}\n    </ng-container>\n  </ng-template>\n</bb-input-validation-message-ui>\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  ValidatorFn,\n  AbstractControl,\n} from '@angular/forms';\nimport {\n  amountValidator,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  RemittanceInfoFields,\n  PaymentFormFieldHooks,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-amount',\n  templateUrl: './payord-amount.component.html',\n})\nexport class PayordAmountComponent\n  implements OnInit, PaymentFormField, OnDestroy\n{\n  private static _id = 0;\n  readonly payordAmountId = PayordAmountComponent._id++;\n\n  @ViewChild('amountLabel')\n  private amountLabelEl: ElementRef | undefined;\n\n  @ViewChild('helperText')\n  private helperTextEL: ElementRef | undefined;\n\n  /**\n   * Form config\n   */\n  config!: PaymentFormFieldConfig;\n\n  /**\n   * Form group\n   */\n  group!: FormGroup;\n\n  /**\n   * Form field options\n   */\n  options!: PaymentFormFieldOptions;\n\n  /**\n   * Form control\n   */\n  control!: AbstractControl;\n\n  /**\n   * Initial amount value\n   */\n  initialAmount = {\n    [RemittanceInfoFields.amount]: '',\n    [RemittanceInfoFields.currency]: '',\n  };\n\n  /**\n   * Initializes the component.\n   *\n   * @returns\n   */\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      [Validators.required, amountValidator as ValidatorFn],\n      this.options.asyncValidators,\n      this.options.defaultValue || this.initialAmount,\n      this.config\n    );\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  /**\n   * Cleanups just before Angular destroys the component.\n   *\n   * @returns\n   */\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  getLabelledbyForSelector(): string {\n    return (\n      this.options?.labelledBy ||\n      `${this.amountLabelEl?.nativeElement.id || ''} ${\n        this.helperTextEL?.nativeElement.id || ''\n      }`.trim()\n    );\n  }\n}\n","<section\n  *ngIf=\"!config?.hidden\"\n  class=\"bb-dynamic-input form-group payment-amount\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div\n    #amountLabel\n    class=\"bb-dynamic-input__label bb-label\"\n    id=\"payord-amount__helper-label-{{ payordAmountId }}\"\n    *ngIf=\"options?.label\"\n  >\n    {{ options?.label }}\n  </div>\n  <span\n    #helperText\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    id=\"payord-amount__helper-text-{{ payordAmountId }}\"\n    *ngIf=\"options?.helperText\"\n    [textContent]=\"options?.helperText\"\n  >\n  </span>\n  <bb-currency-input-ui\n    resultType=\"string\"\n    [attr.maxlength]=\"options?.maxLength || 18\"\n    [currencies]=\"options?.currencies\"\n    [decMaxLen]=\"options?.decMaxLen\"\n    [allowNegativeValue]=\"options?.allowNegativeValue\"\n    [currencyLabel]=\"options?.currencyLabel || ''\"\n    [decimalLabel]=\"options?.decimalLabel || ''\"\n    [disabled]=\"options?.disabled || false\"\n    [integer]=\"options?.integer\"\n    [integerLabel]=\"options?.integerLabel || ''\"\n    [isRightAligned]=\"options?.isRightAligned\"\n    [placeholder]=\"options?.placeholder || 0\"\n    [readonly]=\"options?.readonly\"\n    [aria-describedby]=\"options?.describedBy\"\n    [aria-labelledby]=\"getLabelledbyForSelector()\"\n    [aria-invalid]=\"options?.ariaInvalid\"\n    [formControlName]=\"this.config.name\"\n    [attr.data-role]=\"config.name\"\n  >\n    <div bbValidationMessage>\n      <bb-payord-validation-message\n        *ngIf=\"control?.touched && control?.invalid\"\n        [control]=\"group.get('amountGroup')\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label || 'Amount'\"\n      ></bb-payord-validation-message>\n    </div>\n  </bb-currency-input-ui>\n  <div\n    class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    *ngIf=\"options?.description\"\n    [textContent]=\"options?.description\"\n  ></div>\n</section>\n","import { Observable, BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { DependantItem } from '@backbase/payment-orders-ang';\n\ntype ItemVisibility = Observable<{\n  name?: string | undefined;\n  items?: (string | DependantItem)[] | undefined;\n}>;\n\n@Injectable()\nexport class VisibilityService {\n  private showSubject$ = new BehaviorSubject<{\n    name?: string;\n    items?: (string | DependantItem)[];\n  }>({});\n  private hideSubject$ = new BehaviorSubject<{\n    name?: string;\n    items?: (string | DependantItem)[];\n  }>({});\n\n  /**\n   * Getter to show an item\n   */\n  get show$(): ItemVisibility {\n    return this.showSubject$.asObservable();\n  }\n\n  /**\n   * Getter to hide an item\n   */\n  get hide$(): ItemVisibility {\n    return this.hideSubject$.asObservable();\n  }\n\n  /**\n   * Shows the items\n   *\n   * @param [name] Item name\n   * @param [items] Items to show\n   * @returns\n   */\n  showItems(name?: string, items?: (string | DependantItem)[]) {\n    this.showSubject$.next({ name, items });\n  }\n\n  /**\n   * Hides the items\n   *\n   * @param [name] Item name\n   * @param [items] Items to hide\n   * @returns\n   */\n  hideItems(name?: string, items?: (string | DependantItem)[]) {\n    this.hideSubject$.next({ name, items });\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\nimport {\n  AccountInformation,\n  Address,\n  BeneficiaryContactItem,\n  ContactItem,\n  BeneficiaryList,\n  CounterPartyFields,\n  FetchCreditorItemsParams,\n  getAccountHolderAddress,\n  getContactBankAddress,\n  HiddenFields,\n  isAddressTruthy,\n  InitiatorFields,\n  InternalAccountFormItem,\n  PaymentBaseFields,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n  PaymentFormFieldOptions,\n  sameAccountsValidator,\n} from '@backbase/payment-orders-ang';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\n\nimport {\n  registerFormControl,\n  registerFormGroup,\n} from '../../helpers/form-helpers';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { toggleBeneficiaryControls } from '../../helpers/generic-utils';\n\n@Component({\n  selector: 'bb-payord-beneficiary-selector',\n  templateUrl: 'payord-beneficiary-selector.component.html',\n})\nexport class PayordBeneficiarySelectorComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  options!: PaymentFormFieldOptions;\n\n  selectedAccount!: InternalAccountFormItem;\n  showBeneficiaryDetails = false;\n  accountNameControl!: AbstractControl;\n  beneficiaryAccountNameControl!: AbstractControl;\n  accountNumberControl!: AbstractControl;\n  bankCodeControl!: AbstractControl;\n  bankNameControl!: AbstractControl;\n  bankBicControl!: AbstractControl;\n  beneficiaryAddressGroup!: AbstractControl;\n  beneficiaryBankAddressGroup!: AbstractControl;\n  beneficiaryBankGroup!: AbstractControl;\n  saveContactControlName = CounterPartyFields.saveNewContact;\n  saveContactControl!: AbstractControl;\n  saveNewContactControl!: AbstractControl;\n  selectedContactControl!: AbstractControl;\n  manualEdit$ = new BehaviorSubject<boolean>(false);\n  manualEditControl!: AbstractControl;\n  isClosedPaymentControl!: AbstractControl;\n  selectedBeneficiaryControl!: AbstractControl;\n  enableBeneficiaryControl!: AbstractControl;\n  // This control is deprecated, please use `initiatorIdControl` instead\n  initiatorNameControl!: AbstractControl;\n  initiatorIdControl!: AbstractControl;\n  hideBeneficiaryFieldsControl!: AbstractControl;\n  private arrangementIdControl!: AbstractControl;\n\n  private query = '';\n  private initiatorControlSubscription?: Subscription;\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly visibilityService: VisibilityService,\n    private readonly deprecationService: DeprecationsService\n  ) {}\n\n  ngOnInit() {\n    this.setupFormFields();\n    if (this.options.isWizardMode) {\n      this.setupWizardFormFields();\n    }\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n    if (this.accountNameControl.value || this.options?.isTemplateMode) {\n      this.showDependantFields();\n    } else {\n      this.hideDependantFields();\n    }\n\n    const initiatorControl = this.group.parent?.get(\n      PaymentBaseFields.initiator\n    );\n    initiatorControl?.valueChanges\n      .pipe(takeUntil(this.destroy$), startWith(initiatorControl.value))\n      .subscribe(({ id }) => {\n        this.accountNameControl.updateValueAndValidity();\n      });\n\n    this.arrangementIdControl?.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((controlId) => {\n        if (!this.isClosedPaymentControl.value) {\n          toggleBeneficiaryControls(this.group, !!controlId);\n        }\n      });\n\n    this.hideBeneficiaryFieldsControl?.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.onSearch('');\n        this.enableBeneficiaryControl.setValue(true);\n        this.manualEdit$.next(false);\n        this.saveNewContactControl.setValue(false);\n        if (!this.options.isWizardMode) {\n          this.hideDependantFields();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.initiatorControlSubscription?.unsubscribe();\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  setupFormFields() {\n    this.deprecationService.logDeprecatedFeature(`\n      \"initiatorNameControl\" is deprecated and will be removed in next major release, please use \"initiatorIdControl\" instead.\n    `);\n    this.accountNameControl = registerFormControl(\n      this.group,\n      this.config.name,\n      [Validators.required, sameAccountsValidator()]\n    );\n    this.manualEditControl = registerFormControl(\n      this.group.parent as FormGroup,\n      HiddenFields.isManualEdit\n    );\n    this.isClosedPaymentControl = registerFormControl(\n      this.group.parent as FormGroup,\n      HiddenFields.isClosedPayment\n    );\n    this.enableBeneficiaryControl = registerFormControl(\n      this.group.parent as FormGroup,\n      HiddenFields.enableBeneficiary,\n      [],\n      [],\n      true\n    );\n    this.beneficiaryAccountNameControl = registerFormControl(\n      this.group,\n      HiddenFields.beneficiaryAccountName\n    );\n    this.saveContactControl = registerFormControl(\n      this.group,\n      this.saveContactControlName\n    );\n    this.saveNewContactControl = registerFormControl(\n      this.group,\n      HiddenFields.showSaveNewContact\n    );\n    this.hideBeneficiaryFieldsControl = registerFormControl(\n      this.group,\n      HiddenFields.hideBeneficiaryFields\n    );\n    this.arrangementIdControl = registerFormControl(\n      this.group,\n      CounterPartyFields.id\n    );\n    this.selectedBeneficiaryControl = registerFormControl(\n      <FormGroup>this.group.parent,\n      HiddenFields.selectedBeneficiary\n    );\n    this.selectedContactControl = <FormGroup>(\n      registerFormGroup(this.group, CounterPartyFields.selectedContact, {\n        contactId: [''],\n        accountId: [''],\n      })\n    );\n    this.initiatorIdControl = <FormControl>(\n      this.group.parent?.get([PaymentBaseFields.initiator, InitiatorFields.id])\n    );\n  }\n\n  setupWizardFormFields() {\n    this.accountNumberControl =\n      this.group.controls[CounterPartyFields.accountNumber] ||\n      this.registerAccountNumberControl();\n    this.beneficiaryAddressGroup =\n      this.group.controls[CounterPartyFields.postalAddress] ||\n      this.registerAddressGroup(this.group);\n    this.beneficiaryBankGroup =\n      this.group.controls[CounterPartyFields.creditorBank] ||\n      this.registerCreditorBankGroup();\n    this.bankCodeControl =\n      this.group.controls[\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`\n      ] || this.registerBankCodeControl();\n    this.bankNameControl =\n      this.group.controls[\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`\n      ] || this.registerBankNameControl();\n    this.bankBicControl =\n      this.group.controls[\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`\n      ] || this.registerBankBicControl();\n    this.beneficiaryBankAddressGroup =\n      this.group.controls[\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`\n      ] || this.registerAddressGroup(<FormGroup>this.beneficiaryBankGroup);\n    registerFormControl(<FormGroup>this.group, CounterPartyFields.schemeName);\n  }\n\n  registerAccountNumberControl() {\n    return registerFormControl(\n      <FormGroup>this.group,\n      CounterPartyFields.accountNumber\n    );\n  }\n\n  registerBankNameControl() {\n    return registerFormControl(\n      <FormGroup>this.beneficiaryBankGroup,\n      CounterPartyFields.bankName\n    );\n  }\n\n  registerBankBicControl() {\n    return registerFormControl(\n      <FormGroup>this.beneficiaryBankGroup,\n      CounterPartyFields.bic\n    );\n  }\n\n  registerBankCodeControl() {\n    return registerFormControl(\n      <FormGroup>this.beneficiaryBankGroup,\n      CounterPartyFields.bankBranchCode\n    );\n  }\n\n  registerAddressGroup(group: FormGroup) {\n    const initialAddress = {\n      addressLine1: [''],\n      addressLine2: [''],\n      streetName: [''],\n      postCode: [''],\n      town: [''],\n      countrySubDivision: [''],\n      country: [''],\n    };\n    return <FormGroup>(\n      registerFormGroup(group, CounterPartyFields.postalAddress, initialAddress)\n    );\n  }\n\n  registerCreditorBankGroup() {\n    const creditorBankGroup = new FormGroup({});\n    this.group.addControl(CounterPartyFields.creditorBank, creditorBankGroup);\n    return creditorBankGroup;\n  }\n\n  registerCreditorBankAddress() {\n    const creditorBankGroup = new FormGroup({});\n    this.group.addControl(CounterPartyFields.creditorBank, creditorBankGroup);\n    return creditorBankGroup;\n  }\n\n  private fetchCreditorItems(params: FetchCreditorItemsParams) {\n    if (this.config.options?.fetchItems$) {\n      this.config.options.fetchItems$.next(params);\n    }\n  }\n\n  onLoadMoreAccounts(page: number) {\n    this.deprecationService.logDeprecatedFeature(`\n      \"onLoadMoreAccounts\" is deprecated since 3.9.3 and will be removed in 3.10.0, please use \"onFetchMoreItems\" instead.\n    `);\n    this.fetchCreditorItems({\n      params: { from: page, query: this.query },\n      type: BeneficiaryList.ACCOUNTS,\n    });\n  }\n\n  onLoadMoreContacts(page: number) {\n    this.deprecationService.logDeprecatedFeature(`\n      \"onLoadMoreContacts\" is deprecated since 3.9.3 and will be removed in 3.10.0, please use \"onFetchMoreItems\" instead.\n    `);\n    this.fetchCreditorItems({\n      params: { from: page, query: this.query },\n      type: BeneficiaryList.CONTACTS,\n    });\n  }\n\n  onFetchMoreItems(event: { page: number; type: BeneficiaryList }) {\n    this.fetchCreditorItems({\n      params: { from: event.page, query: this.query },\n      type: event.type,\n    });\n  }\n\n  onSearch(query: string) {\n    this.query = query;\n    this.manualEditControl.setValue(true);\n    this.fetchCreditorItems({ params: { query } });\n  }\n\n  onSelectAccount(selectedItem: InternalAccountFormItem) {\n    const accountNumberControl =\n      this.group.controls[CounterPartyFields.accountNumber];\n    const bankNameControl = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`\n    );\n    const bankCodeControl = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`\n    );\n    const beneficiaryAddressGroup = this.group.get(\n      CounterPartyFields.postalAddress\n    );\n    const creditorBankBic = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`\n    );\n    this.setValue(this.accountNameControl, selectedItem.name || '');\n    this.setValue(accountNumberControl, selectedItem.accountNumber || '');\n    this.setValue(bankCodeControl, selectedItem.bankBranchCode);\n    this.setValue(creditorBankBic, selectedItem.BIC || '');\n    this.setValue(bankNameControl, '');\n    this.setValue(this.arrangementIdControl, selectedItem.id);\n    this.saveNewContactControl.setValue(false);\n    this.setAddress(<FormGroup>beneficiaryAddressGroup, {});\n    this.setDefaultCountry();\n    this.showBeneficiaryDetails = true;\n    this.enableBeneficiaryControl.setValue(false);\n    this.manualEdit$.next(false);\n    this.manualEditControl.setValue(false);\n    this.selectedBeneficiaryControl.setValue(selectedItem);\n    this.selectedContactControl.reset();\n    this.saveContactControl.reset();\n    this.showDependantFields();\n    this.initiatorIdControl?.updateValueAndValidity();\n  }\n\n  onSelectContact(selectedcontact: BeneficiaryContactItem) {\n    const accountNumberControl =\n      this.group.controls[CounterPartyFields.accountNumber];\n    const bankNameControl = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`\n    );\n    const bankCodeControl = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`\n    );\n    const creditorBankBic = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`\n    );\n    const beneficiaryAddressGroup = this.group.get(\n      CounterPartyFields.postalAddress\n    );\n    const beneficiaryBankAddressGroup = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`\n    );\n    const account = selectedcontact.accounts[0];\n    const accountHolderAddress = this.getAccountHolderAddress(account);\n    const beneficiaryAddress = isAddressTruthy(accountHolderAddress)\n      ? accountHolderAddress\n      : this.getBeneficiaryAddress(selectedcontact);\n    const bankAddress = this.getContactBankAddress(account);\n    this.setValue(this.accountNameControl, selectedcontact.name);\n    this.setValue(\n      this.beneficiaryAccountNameControl,\n      selectedcontact.accountName || ''\n    );\n    this.setValue(\n      accountNumberControl,\n      account.accountNumber || account.IBAN || ''\n    );\n    this.setValue(bankCodeControl, account.bankCode || '');\n    this.setValue(bankNameControl, account.bankName || '');\n    this.setValue(creditorBankBic, account.BIC || '');\n    this.setValue(this.arrangementIdControl, '');\n    this.setValue(\n      this.selectedContactControl,\n      this.getSelectedContactDetails(selectedcontact)\n    );\n    this.selectedBeneficiaryControl.setValue(selectedcontact);\n    this.setAddress(<FormGroup>beneficiaryAddressGroup, beneficiaryAddress);\n    this.setAddress(<FormGroup>beneficiaryBankAddressGroup, bankAddress, true);\n\n    this.showBeneficiaryDetails = true;\n    this.manualEdit$.next(false);\n    this.manualEditControl.setValue(false);\n    this.enableBeneficiaryControl.setValue(false);\n    this.saveContactControl.reset();\n    this.showDependantFields();\n    this.initiatorIdControl?.updateValueAndValidity();\n  }\n\n  private getSelectedContactDetails(selectedcontact: ContactItem) {\n    // currently there is no id associated with a contact account. Will need populate accountId when contacts fix this.\n    return { contactId: selectedcontact?.id, accountId: '' };\n  }\n\n  setAddressDetails(addressGroup: FormGroup, address: Address) {\n    if (addressGroup) {\n      if (isAddressTruthy(address)) {\n        this.setAddress(addressGroup, address);\n      }\n    }\n  }\n\n  onManualEdit(search: string) {\n    const bankaddressGroup = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`\n    );\n    const banksAddressControls = this.options.isWizardMode\n      ? this.getAddressFields(<FormGroup>bankaddressGroup)\n      : [bankaddressGroup];\n    this.accountNameControl.patchValue(search);\n    this.manualEdit$.next(true);\n    this.manualEditControl.setValue(true);\n    this.saveNewContactControl.setValue(true);\n    this.setValue(this.arrangementIdControl, '');\n    this.selectedBeneficiaryControl.reset();\n    this.resetControls([\n      this.group.controls[CounterPartyFields.accountNumber],\n      this.group.get(\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`\n      ),\n      this.group.get(\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bankBranchCode}`\n      ),\n      this.group.get(\n        `${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`\n      ),\n      this.group.get(CounterPartyFields.postalAddress),\n      this.selectedContactControl,\n      ...banksAddressControls,\n    ]);\n    this.setDefaultCountry();\n    this.visibilityService.showItems(this.config.parent);\n    this.showDependantFields();\n  }\n\n  private setDefaultCountry() {\n    const defaultCountry = this.options.isWizardMode\n      ? {\n          country: this.group.parent?.get(HiddenFields.defaultCountry)?.value,\n        }\n      : null;\n    const beneficiaryBankAddressGroup = this.group.get(\n      `${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`\n    );\n    this.setAddress(\n      <FormGroup>beneficiaryBankAddressGroup,\n      { ...defaultCountry },\n      true\n    );\n  }\n\n  onSearchBlur(value: string) {\n    this.accountNameControl.patchValue(value);\n    if (!this.accountNameControl.touched) {\n      this.accountNameControl.markAsTouched();\n    }\n  }\n\n  getAddressFields(bankaddressGroup: FormGroup | null): Array<AbstractControl> {\n    const addressControls: Array<AbstractControl> = [];\n    if (bankaddressGroup) {\n      for (const controlName in bankaddressGroup.controls) {\n        if (bankaddressGroup.controls.hasOwnProperty(controlName)) {\n          const control = bankaddressGroup.controls[controlName];\n          if (controlName !== CounterPartyFields.country) {\n            addressControls.push(control);\n          }\n        }\n      }\n    }\n    return addressControls;\n  }\n\n  private resetControls(controls: Array<AbstractControl | null>) {\n    controls.forEach((control) => {\n      if (control) {\n        control.reset();\n      }\n    });\n  }\n\n  showDependantFields() {\n    if (this.config.options?.dependants) {\n      this.visibilityService.showItems(\n        this.config.parent,\n        this.config.options.dependants\n      );\n    }\n  }\n\n  hideDependantFields() {\n    if (this.config.options?.dependants) {\n      this.visibilityService.hideItems(\n        this.config.parent,\n        this.config.options.dependants\n      );\n    }\n  }\n\n  getBeneficiaryAddress(contact: Address) {\n    return {\n      addressLine1: contact.addressLine1,\n      addressLine2: contact.addressLine2,\n      streetName: contact.streetName,\n      town: contact.town,\n      postCode: contact.postCode,\n      countrySubDivision: contact.countrySubDivision,\n      country: contact.country,\n    };\n  }\n\n  getAccountHolderAddress(account: AccountInformation) {\n    return getAccountHolderAddress(account);\n  }\n\n  getContactBankAddress(account: AccountInformation) {\n    return getContactBankAddress(account);\n  }\n\n  setAddress(\n    addressGroup: FormGroup | null,\n    addressInfo: Address,\n    isBankAddress = false\n  ) {\n    if (addressGroup) {\n      if (isAddressTruthy(addressInfo) || isBankAddress) {\n        addressGroup.patchValue({\n          addressLine1: addressInfo.addressLine1,\n          addressLine2: addressInfo.addressLine2,\n          streetName: addressInfo.streetName,\n          town: addressInfo.town,\n          postCode: addressInfo.postCode,\n          countrySubDivision: addressInfo.countrySubDivision,\n          country: addressInfo.country,\n        });\n      } else {\n        for (const controlName in addressGroup.controls) {\n          if (\n            !(\n              isBankAddress &&\n              this.options.retainBankCountry &&\n              controlName === 'country'\n            )\n          ) {\n            addressGroup.controls[controlName].reset();\n          }\n        }\n      }\n    }\n  }\n\n  setValue(\n    control: AbstractControl | null,\n    value?: string | boolean | number | object\n  ) {\n    if (control) {\n      if (value) {\n        control.patchValue(value);\n      } else {\n        control.reset();\n      }\n    }\n  }\n\n  onClearValue(value: string) {\n    this.setValue(this.beneficiaryAccountNameControl, value);\n  }\n\n  isBeneficiaryDisabled(): boolean {\n    return (\n      (this.isClosedPaymentControl.value &&\n        !this.enableBeneficiaryControl.value) ||\n      !!this.arrangementIdControl.value\n    );\n  }\n}\n","<ng-container\n  *ngTemplateOutlet=\"\n    creditorTmpl;\n    context: { $implicit: options?.items$ | async }\n  \"\n></ng-container>\n\n<ng-template let-creditorDetails #creditorTmpl>\n  <div\n    class=\"form-group bb-dynamic-input\"\n    [ngClass]=\"options?.cssClasses\"\n    *ngIf=\"!config?.hidden\"\n    [formGroup]=\"group\"\n  >\n    <section class=\"payment-to form-group\">\n      <bb-beneficiary-selector-ui\n        [selectedItem]=\"{ name: accountNameControl?.value }\"\n        [placeholder]=\"options?.placeholder || ''\"\n        [tabs]=\"options?.tabs\"\n        [hasError]=\"accountNameControl?.touched && accountNameControl?.invalid\"\n        [totalAccounts]=\"creditorDetails?.totalCreditAccounts\"\n        [totalContacts]=\"creditorDetails?.totalContacts\"\n        [accounts]=\"creditorDetails?.accounts\"\n        [contacts]=\"creditorDetails?.contacts\"\n        [totalContactsItemsCount]=\"creditorDetails?.totalContactsItemsCount\"\n        [dropdownIcon]=\"options?.dropdownIcon || 'toggle-down'\"\n        [aria-label]=\"options?.ariaLabel || 'Toggle beneficiary list'\"\n        [title]=\"options?.label\"\n        [helperText]=\"options?.helperText\"\n        [search]=\"accountNameControl\"\n        [isManualEditDisabled]=\"options?.isManualEditDisabled\"\n        [isClosedPayment]=\"isClosedPaymentControl.value\"\n        [isBeneficiaryDisabled]=\"isBeneficiaryDisabled()\"\n        (fetchMoreItems)=\"onFetchMoreItems($event)\"\n        (searchValue)=\"onSearch($event)\"\n        (selectedAccount)=\"onSelectAccount($event)\"\n        (selectedContact)=\"onSelectContact($event)\"\n        (manualEdit)=\"onManualEdit($event)\"\n        (searchBlur)=\"onSearchBlur($event)\"\n        (clear)=\"onClearValue($event)\"\n        #beneficiarySelector\n      ></bb-beneficiary-selector-ui>\n\n      <bb-payord-validation-message\n        [control]=\"group?.controls['name']\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label || 'Beneficiary name'\"\n      ></bb-payord-validation-message>\n\n      <div\n        class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n        *ngIf=\"options?.description\"\n        [textContent]=\"options?.description\"\n      ></div>\n    </section>\n    <ng-container *ngIf=\"!options?.isTemplateMode\">\n      <div\n        *ngIf=\"saveNewContactControl?.value || (manualEdit$ | async)\"\n        class=\"bb-block bb-block--md\"\n      >\n        <bb-input-checkbox-ui\n          [disabled]=\"!!isClosedPaymentControl.value\"\n          [formControlName]=\"saveContactControlName\"\n          [label]=\"options.saveNewContactLabel || 'Save as a new contact'\"\n          data-role=\"save-new-contact-checkbox\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n","import {\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n  DependantItem,\n} from '@backbase/payment-orders-ang';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { VisibilityService } from '../services/visibility.service';\nimport { mapDependentItems } from '../helpers/generic-utils';\n\nexport class ActivatableFormField implements PaymentFormField {\n  /**\n   * Payment form field options\n   */\n  options!: PaymentFormFieldOptions;\n\n  /**\n   * Payment form field configuration\n   */\n  config!: PaymentFormFieldConfig;\n\n  /**\n   * Form group object\n   * Tracks the value and validity state of a group of FormControl instances\n   */\n  group!: FormGroup;\n\n  /**\n   * Base class for FormControl, FormGroup, and FormArray\n   */\n  control!: AbstractControl;\n\n  /**\n   * @internal\n   */\n  constructor(private readonly service: VisibilityService) {}\n\n  /**\n   * @internal\n   */\n  private showDependantFields() {\n    if (this.config.options && this.config.options.dependants) {\n      this.service.showItems(\n        this.config.parent,\n        this.config.options.dependants\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private hideDependantFields() {\n    if (this.config.options) {\n      this.service.hideItems(\n        this.config.parent,\n        this.config.options.dependants\n      );\n    }\n  }\n\n  /**\n   * Tracks if a form item should be shown or not\n   */\n  toggleDependants() {\n    const { options, parent: currentParent } = this.config;\n    if (options && options.dependants) {\n      if (typeof options.activateDependantsOn === 'function') {\n        const toShow =\n          options.activateDependantsOn(this.control.value, this.control) || [];\n        const toShowMap = mapDependentItems(toShow, currentParent);\n        const toHide = mapDependentItems(\n          options?.dependants,\n          currentParent\n        ).map(({ parent, items }: DependantItem) => {\n          const toShowItem = toShowMap.find(\n            (i: DependantItem) => i.parent === parent\n          );\n          if (toShowItem) {\n            return {\n              parent,\n              items: items.filter((i) => !toShowItem.items.includes(i)),\n            };\n          } else {\n            return { parent, items };\n          }\n        });\n\n        mapDependentItems(toShow, currentParent).forEach(\n          ({ parent, items }) => {\n            if (items.length) {\n              this.service.showItems(parent, items);\n            }\n          }\n        );\n\n        mapDependentItems(toHide, currentParent).forEach(\n          ({ parent, items }) => {\n            if (items.length) {\n              this.service.hideItems(parent, items);\n            }\n          }\n        );\n      } else if (\n        this.control.value === this.config.options.activateDependantsOn\n      ) {\n        this.showDependantFields();\n      } else {\n        this.hideDependantFields();\n      }\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  Renderer2,\n  ElementRef,\n  DoCheck,\n  KeyValueChanges,\n} from '@angular/core';\n\ninterface KeyValueMap {\n  [key: string]: any;\n}\n\n@Directive({\n  selector: '[bbDynamicAriaAttribute]',\n})\nexport class DynamicAriaAttributeDirective implements DoCheck {\n  /**\n   * The map that contains a key value pair that contains the an id\n   * and a condition when they should be added to the element.\n   */\n  @Input('bbDynamicAriaAttribute')\n  set ariaAttributeMap(value: KeyValueMap) {\n    this._rawMap = value;\n    if (this._rawMap) {\n      this.setAriaAttributeIds(this._rawMap);\n      this._keyValueDiffer = null;\n      this._keyValueDiffer = this.keyValueDiffers.find(this._rawMap).create();\n    }\n  }\n\n  /**\n   * Flag to denote if the id of the input should be prepended to provided aria ids\n   */\n  @Input() prependInputId = true;\n\n  /**\n   * The selector to select the actual html input.\n   */\n  @Input() inputSelector = '.form-control';\n\n  /**\n   * The name of the aria attribute to be added dynamically. Defaults to aria-describedby.\n   */\n  @Input() ariaAttributeName = 'aria-describedby';\n\n  private _keyValueDiffer: KeyValueDiffer<string, any> | null = null;\n  private _rawMap: KeyValueMap | null = null;\n\n  constructor(\n    private readonly keyValueDiffers: KeyValueDiffers,\n    private readonly hostElem: ElementRef,\n    private readonly renderer: Renderer2\n  ) {}\n\n  ngDoCheck() {\n    if (this._keyValueDiffer) {\n      const keyValueChanges = this._keyValueDiffer.diff(\n        this._rawMap as { [k: string]: any }\n      );\n      if (keyValueChanges) {\n        this.applyKeyValueChanges(keyValueChanges);\n      }\n    }\n  }\n\n  private applyKeyValueChanges(changes: KeyValueChanges<string, any>): void {\n    const currentMap: KeyValueMap = {};\n    changes.forEachAddedItem(\n      (record) => (currentMap[record.key] = record.currentValue)\n    );\n    changes.forEachChangedItem(\n      (record) => (currentMap[record.key] = record.currentValue)\n    );\n    changes.forEachRemovedItem((record) => {\n      if (record.previousValue) {\n        currentMap[record.key] = false;\n      }\n    });\n    this.setAriaAttributeIds(currentMap);\n  }\n\n  private setAriaAttributeIds(idMap: KeyValueMap) {\n    const targetElem = this.hostElem.nativeElement.querySelector(\n      this.inputSelector\n    );\n    const targetElemId = targetElem?.id || '';\n    const ids = Object.keys(idMap).reduce((acc: string[], id: string) => {\n      if (!!idMap[id]) {\n        acc.push(this.prependInputId ? targetElemId + id : id);\n      }\n      return acc;\n    }, []);\n\n    this.removeAriaAttributeIds(targetElem);\n    const descByIds = ids.join(' ').trim();\n    if (targetElem && descByIds) {\n      this.renderer.setAttribute(targetElem, this.ariaAttributeName, descByIds);\n    }\n  }\n\n  private removeAriaAttributeIds(targetElem: HTMLElement) {\n    if (targetElem) {\n      this.renderer.removeAttribute(targetElem, this.ariaAttributeName);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { PaymentFormFieldHooks } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-checkbox',\n  templateUrl: './payord-checkbox.component.html',\n})\nexport class PayordCheckboxComponent\n  extends ActivatableFormField\n  implements OnInit, OnDestroy\n{\n  shouldDisplay = true;\n\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.shouldDisplay = !(\n      this.options.hideInWizardMode && this.options.isWizardMode\n    );\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  *ngIf=\"!config?.hidden && shouldDisplay\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <bb-input-checkbox-ui\n    [formControlName]=\"config?.name\"\n    [label]=\"options?.label\"\n    (change)=\"toggleDependants()\"\n    [disabled]=\"options?.disabled\"\n    [bbDynamicAriaAttribute]=\"{\n      __error: control?.touched && control?.invalid\n    }\"\n    [attr.data-role]=\"config?.name\"\n    #inputEl\n  >\n  </bb-input-checkbox-ui>\n  <bb-payord-validation-message\n    [control]=\"group?.controls[config.name]\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label\"\n    [id]=\"inputEl?.id + '__error'\"\n  ></bb-payord-validation-message>\n</div>\n","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport {\n  Component,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Optional,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  FormGroup,\n  AbstractControl,\n  Validators,\n  ValidatorFn,\n} from '@angular/forms';\nimport { Observable, Subject, of, BehaviorSubject } from 'rxjs';\nimport {\n  ArrangementList,\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n  InitiatorFields,\n  PaymentFormFieldHooks,\n  PaymentBaseFields,\n  BB_CLOSED_PAYMENT_BUS_FN_SUFFIX,\n  BB_INTRACOMPANY_PAYMENT_BUS_FN_SUFFIX,\n  DefaultClosedPaymentBusFnSuffix,\n  DefaultIntraCompanyPaymentBusFnSuffix,\n  HiddenFields,\n  InternalAccountFormItem,\n  forbiddenStatus,\n  CounterPartyFields,\n  missingInListValidator,\n  sameAccountsValidator,\n} from '@backbase/payment-orders-ang';\nimport {\n  getParentForm,\n  isClosedPaymentValidator,\n  registerFormControl,\n} from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport {\n  catchError,\n  debounceTime,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { DeprecationsService } from '@backbase/foundation-ang/core';\nimport { SchemeNames } from '@backbase/data-ang/payment-order';\nimport { toggleBeneficiaryControls } from '../../helpers/generic-utils';\n\n@Component({\n  selector: 'bb-payord-debit-account-selector',\n  templateUrl: 'payord-debit-account-selector.component.html',\n})\nexport class PayordDebitAccountSelectorComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n\n  control!: AbstractControl;\n  /**\n   * @deprecated\n   * This property is deprecated from 3.10.3 and will be removed in next major release\n   * Please use `arangementItems$` instead\n   */\n  items$!: Observable<Array<InternalAccountFormItem>>;\n  arrangementItems$!: Observable<ArrangementList>;\n  arrangementList!: ArrangementList;\n  selectedAccount!: InternalAccountFormItem & { number?: string };\n  initialDebitGroup = {\n    [InitiatorFields.id]: [''],\n    [InitiatorFields.name]: [''],\n    [InitiatorFields.accountNumber]: [''],\n    schemeName: [],\n    currency: [''],\n    balance: [''],\n  };\n  form!: FormGroup;\n  gc$ = new Subject<void>();\n  isClosedPaymentControl?: AbstractControl;\n  private loadDebitAccountAndSelect$ = new Subject<undefined>();\n  private accountIds: string[] = [];\n  private currentPage = 0;\n  private searchTerm = '';\n  typeahead$ = new Subject<string>();\n  loading$ = new BehaviorSubject(true);\n  defaultTypeToSearchText = $localize`:@@debit-account-selector.default-type-to-search-text:No items found`;\n\n  constructor(\n    @Optional()\n    @Inject(BB_CLOSED_PAYMENT_BUS_FN_SUFFIX)\n    private closedPaymentBusFnSuffix: string,\n    @Optional()\n    @Inject(BB_INTRACOMPANY_PAYMENT_BUS_FN_SUFFIX)\n    private intraCompanyPaymentBusFnSuffix: string,\n    private readonly deprecationService: DeprecationsService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.deprecationService.logDeprecatedFeature(\n      `\"BB_CLOSED_PAYMENT_BUS_FN_SUFFIX\", \"BB_INTRACOMPANY_PAYMENT_BUS_FN_SUFFIX\", \"DefaultClosedPaymentBusFnSuffix\" and\n      \"DefaultIntraCompanyPaymentBusFnSuffix\" are deprecated and will be removed in next major release`\n    );\n    this.closedPaymentBusFnSuffix =\n      this.closedPaymentBusFnSuffix || DefaultClosedPaymentBusFnSuffix;\n    this.intraCompanyPaymentBusFnSuffix =\n      this.intraCompanyPaymentBusFnSuffix ||\n      DefaultIntraCompanyPaymentBusFnSuffix;\n    this.registerFields();\n    this.listenSearch();\n    this.control = this.group.controls['id'];\n    this.form = getParentForm(this.control);\n    this.isClosedPaymentControl = registerFormControl(\n      this.form,\n      HiddenFields.isClosedPayment\n    );\n    // populate value to show it in edit mode\n    if (this.group.value.id) {\n      this.selectItem(this.group.value);\n    }\n    // populate account balance and currency when applying a payment template or editing payment\n    this.arrangementItems$ = this.options?.items$?.pipe(\n      tap(({ items: list }: ArrangementList) => {\n        this.accountIds = list.map((item: InternalAccountFormItem) => item.id);\n        if (this.group.value.id) {\n          const selectedAccount = list?.find(\n            (item) => item.id === this.group.value.id\n          );\n          if (selectedAccount) {\n            this.selectItem(selectedAccount);\n          } else {\n            // we need to load debit account to show it selected\n            this.loadDebitAccountAndSelect$.next();\n          }\n        }\n      }),\n      catchError((err: HttpErrorResponse) => of(err))\n    );\n\n    this.arrangementItems$\n      .pipe(takeUntil(this.gc$))\n      .subscribe((arrangementList) => {\n        this.loading$.next(false);\n        this.arrangementList = arrangementList;\n        this.cdRef.detectChanges();\n      });\n\n    const counterpartyGroup = <FormGroup>(\n      this.form.get(PaymentBaseFields.counterparty)\n    );\n\n    if (this.options.checkClosedPaymentsAccess) {\n      this.isClosedPaymentControl?.valueChanges\n        .pipe(takeUntil(this.gc$))\n        .subscribe((isClosedPayment: boolean) => {\n          if (isClosedPayment) {\n            toggleBeneficiaryControls(counterpartyGroup, isClosedPayment);\n            this.control.updateValueAndValidity();\n          }\n        });\n\n      this.options.arrangementPermissions$\n        ?.pipe(takeUntil(this.gc$))\n        .subscribe((response: HttpResponse<any>) => {\n          this.isClosedPaymentControl?.setValue(\n            response?.status === forbiddenStatus\n          );\n        });\n    }\n    this.loadDebitAccountAndSelect$\n      .pipe(\n        takeUntil(this.gc$),\n        switchMap(\n          () =>\n            this.options.loadAccountByAccountId(\n              this.group.value.id,\n              this.group.value.accountNumber\n            ) as Observable<InternalAccountFormItem | undefined>\n        ),\n        tap((item: InternalAccountFormItem | undefined) => {\n          if (item) {\n            this.accountIds.push(item.id);\n          } else {\n            this.control.setValidators([\n              Validators.required,\n              missingInListValidator(this.getAccountIdsList.bind(this)),\n            ]);\n            this.control.updateValueAndValidity();\n          }\n          const account = item || this.group.value;\n          this.selectItem(account);\n        }),\n        catchError(() => of(undefined))\n      )\n      .subscribe();\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  private fetchArrangementPermissions(arrangementId: string) {\n    if (\n      !this.options.isWizardMode &&\n      this.options.checkClosedPaymentsAccess &&\n      arrangementId\n    ) {\n      this.options.fetchArrangementPermissions$?.next(arrangementId);\n    }\n  }\n\n  private getAccountIdsList() {\n    return this.accountIds;\n  }\n\n  private listenSearch() {\n    this.typeahead$\n      .pipe(takeUntil(this.gc$), debounceTime(300))\n      .subscribe((query: string) => {\n        this.onSearch(query);\n      });\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  registerFields() {\n    const validators: { [key: string]: Array<ValidatorFn> } = {\n      [InitiatorFields.id]: [Validators.required],\n    };\n    for (const key in this.initialDebitGroup) {\n      if (this.initialDebitGroup.hasOwnProperty(key)) {\n        if (key === InitiatorFields.id) {\n          if (this.checkClosedPayment()) {\n            validators[InitiatorFields.id].push(isClosedPaymentValidator);\n          }\n          if (this.isCounterpartyGroup()) {\n            validators[InitiatorFields.id].push(sameAccountsValidator());\n          }\n        }\n        registerFormControl(this.group, key, validators[key], [], '');\n      }\n    }\n  }\n\n  private isCounterpartyGroup(): boolean {\n    return this.config.name === CounterPartyFields.counterPartyAccountGroup;\n  }\n\n  private checkClosedPayment(): boolean {\n    return (\n      !this.options.isWizardMode &&\n      this.config.name === InitiatorFields.initiatorAccountGroup &&\n      this.options.checkClosedPaymentsAccess\n    );\n  }\n\n  selectItem(account: InternalAccountFormItem) {\n    if (this.group && account.name) {\n      this.group.patchValue({\n        id: account.id,\n        name: account.name,\n        accountNumber: account.accountNumber,\n        balance: account.balance,\n        currency: account.currency,\n        accountType: account.accountType,\n        additions: account.additions || {},\n        schemeName: SchemeNames.ID,\n      });\n      this.selectedAccount = {\n        ...account,\n        number: account.accountNumber,\n        currency: account.currency,\n        balance: account.balance,\n      };\n\n      if (!this.isCounterpartyGroup()) {\n        this.form\n          .get([PaymentBaseFields.counterparty, CounterPartyFields.id])\n          ?.updateValueAndValidity();\n      }\n\n      this.fetchArrangementPermissions(account.id);\n    }\n\n    this.group.markAllAsTouched();\n    this.group.markAsDirty();\n  }\n\n  onBlur() {\n    if (this.options.required) {\n      this.group.markAllAsTouched();\n    }\n  }\n\n  onScrollToEnd(): void {\n    this.options.fetchItems$.next({\n      from: ++this.currentPage,\n      searchTerm: this.searchTerm,\n    });\n    this.loading$.next(true);\n  }\n\n  onSearch(searchTerm: string) {\n    this.currentPage = 0;\n    this.searchTerm = searchTerm;\n    this.options.fetchItems$.next({ from: this.currentPage, searchTerm });\n    this.loading$.next(true);\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n>\n  <section class=\"payment-from\" [formGroup]=\"group\">\n    <label class=\"d-block\">\n      <div *ngIf=\"options?.label\" class=\"bb-dynamic-input__label bb-label\">\n        <span>\n          {{ options?.label }}\n        </span>\n        <span\n          class=\"bb-dynamic-input__helper-text bb-text-support\"\n          *ngIf=\"options?.helperText\"\n          [textContent]=\"options?.helperText\"\n        >\n        </span>\n      </div>\n      <div class=\"bb-form-field\">\n        <bb-account-selector-ui\n          [markFirst]=\"true\"\n          [highlight]=\"false\"\n          [filterItems]=\"options?.filterItems\"\n          [closeOnSelect]=\"true\"\n          [dropdownPosition]=\"'bottom'\"\n          [items]=\"arrangementList?.items\"\n          [selectedItems]=\"selectedAccount\"\n          (change)=\"selectItem($event)\"\n          (blur)=\"onBlur()\"\n          [placeholder]=\"options?.placeholder || ''\"\n          [attr.aria-label]=\"options?.label\"\n          [required]=\"options?.required\"\n          [attr.data-role]=\"'debit-account-selector'\"\n          [showBankBranchCode]=\"options?.showBankBranchCode\"\n          [bbDynamicAriaAttribute]=\"{\n            'payord-debit-account-selector__error':\n              control?.touched && control?.invalid,\n            'payord-debit-account-selector__desc': options?.description\n          }\"\n          [prependInputId]=\"false\"\n          inputSelector=\".ng-input input\"\n          [disableScrollEnd]=\"\n            arrangementList?.items?.length >= arrangementList?.count\n          \"\n          (scrollToEnd)=\"onScrollToEnd()\"\n          [searchFunc]=\"options.searchFn\"\n          [minTermLength]=\"options.minTermLength || 0\"\n          [typeToSearchText]=\"\n            options.typeToSearchText || defaultTypeToSearchText\n          \"\n          [typeahead]=\"options.disableTypeahead ? undefined : typeahead$\"\n          [loading]=\"loading$ | async\"\n        ></bb-account-selector-ui>\n      </div>\n    </label>\n\n    <bb-payord-validation-message\n      [control]=\"control\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label || 'Debit account'\"\n      [id]=\"'payord-debit-account-selector__error'\"\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      id=\"payord-debit-account-selector__desc\"\n      *ngIf=\"options?.description\"\n      [textContent]=\"options?.description\"\n    ></div>\n  </section>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { PaymentFormFieldHooks } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-radio',\n  templateUrl: './payord-radio.component.html',\n})\nexport class PayordRadioComponent\n  extends ActivatableFormField\n  implements OnInit, OnDestroy\n{\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  getDescribedByRefs(id: string) {\n    return {\n      [`${id}__error`]: this.control.touched && this.control.invalid,\n      [`${id}__desc`]: this.options?.description,\n    };\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  *ngIf=\"!config?.hidden\"\n  class=\"bb-dynamic-input form-group\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <label\n    class=\"bb-dynamic-input__label\"\n    [id]=\"inputEl?.id + '__label'\"\n    [for]=\"inputEl?.id\"\n    [textContent]=\"options?.label || ''\"\n    #labelElem\n  ></label>\n  <span\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    *ngIf=\"options?.helperText\"\n    [id]=\"inputEl?.id + '__helper'\"\n    [textContent]=\"options?.helperText\"\n  >\n  </span>\n\n  <bb-input-radio-group-ui\n    [label]=\"options?.label\"\n    [formControlName]=\"config?.name\"\n    (change)=\"toggleDependants()\"\n    [horizontal]=\"options?.horizontal\"\n    [preselect]=\"options?.preselect\"\n    [bbDynamicAriaAttribute]=\"getDescribedByRefs(inputEl.id)\"\n    inputSelector=\".bb-input-radio-group\"\n    [attr.data-role]=\"config?.name\"\n    #inputEl\n  >\n    <bb-input-radio-ui\n      *ngFor=\"let option of options?.options\"\n      [value]=\"option.value\"\n      [label]=\"option.label\"\n      [attr.data-role]=\"option.value\"\n    ></bb-input-radio-ui>\n  </bb-input-radio-group-ui>\n  <bb-payord-validation-message\n    [control]=\"group?.controls[config.name]\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label\"\n    [id]=\"inputEl?.id + '__error'\"\n  ></bb-payord-validation-message>\n\n  <div\n    class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    [attr.aria-hidden]=\"!options?.description\"\n    [hidden]=\"!options?.description\"\n    [id]=\"inputEl?.id + '__desc'\"\n    [textContent]=\"options?.description || ''\"\n    #descElem\n  ></div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport {\n  pastDateValidator,\n  requiredEndDateValidator,\n  requiredEndTypeValidator,\n  requiredAfterValidator,\n} from '@backbase/payment-orders-ang';\nimport {\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  ScheduleFields,\n  PaymentFormFieldHooks,\n  endTypes,\n  ScheduleItem,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-schedule',\n  templateUrl: './payord-schedule.component.html',\n})\nexport class PayordScheduleComponent\n  implements OnInit, PaymentFormField, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  scheduleGroup!: FormGroup;\n  defaultMinOcccurs = 2;\n  defaultMaxOcccurs = 100;\n\n  ngOnInit() {\n    this.registerFields(\n      this.initScheduleFields(this.options.minOccurs, this.options.maxOccurs)\n    );\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  initScheduleFields(minOccurs: number, maxOccurs: number) {\n    return {\n      [ScheduleFields.frequency]: [\n        { value: 'ONCE', every: '1' },\n        [Validators.required],\n      ],\n      [ScheduleFields.startDate]: [\n        new Date().toISOString(),\n        [Validators.required, pastDateValidator],\n      ],\n      [ScheduleFields.endDate]: [\n        new Date(\n          new Date().getFullYear(),\n          new Date().getMonth() + 1,\n          new Date().getDate()\n        ).toISOString(),\n        [requiredEndDateValidator, pastDateValidator],\n      ],\n      [ScheduleFields.repeat]: [\n        minOccurs || this.defaultMinOcccurs,\n        [\n          requiredAfterValidator,\n          Validators.compose([\n            Validators.min(minOccurs || this.defaultMinOcccurs),\n            Validators.max(maxOccurs || this.defaultMaxOcccurs),\n          ]),\n        ],\n      ],\n      [ScheduleFields.endType]: [endTypes.never, [requiredEndTypeValidator]],\n    };\n  }\n\n  registerFields(fields: { [key: string]: any[] }) {\n    for (const key in fields) {\n      if (fields.hasOwnProperty(key)) {\n        registerFormControl(\n          this.group,\n          key,\n          fields[key].pop(),\n          [],\n          fields[key].pop()\n        );\n      }\n    }\n  }\n\n  get scheduleLabelData(): ScheduleItem {\n    const { frequency, endDate, endType, repeat, startDate } = this.group.value;\n    let end = {};\n    switch (endType) {\n      case endTypes.on: {\n        end = { endDate };\n        break;\n      }\n      case endTypes.after: {\n        end = { repeat };\n        break;\n      }\n    }\n    return {\n      frequency,\n      endType,\n      startDate,\n      ...end,\n    };\n  }\n}\n","<ng-container *ngIf=\"!config?.hidden\">\n  <section\n    class=\"payment-schedule flex-row bb-dynamic-input\"\n    [ngClass]=\"options?.cssClasses\"\n  >\n    <fieldset class=\"bb-fieldset\">\n      <ng-container *ngIf=\"!config.options.collapsible; else collapsibleTmpl\">\n        <ng-container *ngTemplateOutlet=\"header\"></ng-container>\n        <hr class=\"mt-0\" />\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </ng-container>\n    </fieldset>\n  </section>\n  <ng-template #collapsibleTmpl>\n    <bb-collapsible-ui data-role=\"schedule-toggle\" #collapse>\n      <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n        <div\n          [attr.aria-expanded]=\"isOpen\"\n          (click)=\"collapse.toggle()\"\n          class=\"bb-stack justify-content-between\"\n        >\n          <ng-container *ngTemplateOutlet=\"header\"></ng-container>\n          <button\n            bbButton\n            color=\"outline\"\n            (click)=\"collapse.toggle(); $event.stopPropagation()\"\n            aria-label=\"Schedule toggle\"\n          >\n            <bb-icon-ui\n              [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"\n            ></bb-icon-ui>\n          </button>\n        </div>\n        <hr class=\"mt-0\" />\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </ng-template>\n    </bb-collapsible-ui>\n  </ng-template>\n  <ng-template #header>\n    <legend>\n      <span class=\"bb-label\">\n        {{ options?.label || 'Schedule' }}\n      </span>\n      <span class=\"bb-text-support\">\n        (<bb-schedule-label-ui [item]=\"scheduleLabelData\"></bb-schedule-label-ui\n        >)\n      </span>\n    </legend>\n  </ng-template>\n\n  <ng-template #content>\n    <bb-schedule-ui\n      [scheduleForm]=\"group\"\n      [frequencies]=\"options?.frequencies\"\n      [minOccurs]=\"options?.minOccurs\"\n      [maxOccurs]=\"options?.maxOccurs\"\n      [formSubmitted]=\"group?.touched\"\n      data-role=\"payment-schedule\"\n    >\n    </bb-schedule-ui>\n  </ng-template>\n</ng-container>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PaymentFormFieldHooks } from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-select',\n  templateUrl: './payord-select.component.html',\n})\nexport class PayordSelectComponent\n  extends ActivatableFormField\n  implements OnInit, OnDestroy\n{\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  *ngIf=\"!config?.hidden\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <label\n    class=\"bb-dynamic-input__label\"\n    [id]=\"inputEl?.id + '__label'\"\n    [for]=\"inputEl?.id\"\n    [textContent]=\"options?.label || ''\"\n    #labelElem\n  ></label>\n  <span\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    *ngIf=\"options?.helperText\"\n    [id]=\"inputEl?.id + '__desc'\"\n    [textContent]=\"options?.helperText\"\n  >\n  </span>\n\n  <bb-dropdown-single-select-ui\n    [formControlName]=\"config.name\"\n    [placeholder]=\"options?.placeholder || ''\"\n    (change)=\"toggleDependants()\"\n    [bbDynamicAriaAttribute]=\"{\n      __error: control?.touched && control?.invalid,\n      __desc: options?.description\n    }\"\n    [attr.data-role]=\"config.name\"\n    #inputEl\n  >\n    <bb-dropdown-single-select-option-ui\n      *ngFor=\"let option of options?.options\"\n      [value]=\"option.value\"\n      [label]=\"option.label\"\n      [attr.data-role]=\"option.value\"\n    >\n    </bb-dropdown-single-select-option-ui>\n  </bb-dropdown-single-select-ui>\n\n  <bb-payord-validation-message\n    [control]=\"group?.controls[config.name]\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label\"\n    [id]=\"inputEl?.id + '__error'\"\n  ></bb-payord-validation-message>\n\n  <div\n    class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    [attr.aria-hidden]=\"!options?.description\"\n    [hidden]=\"!options?.description\"\n    [id]=\"inputEl?.id + '__desc'\"\n    [textContent]=\"options?.description || ''\"\n    #descElem\n  ></div>\n</div>\n","import { Component, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport {\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentFormFieldHooks,\n  focusChildElement,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { isObjectTruthy } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-textarea',\n  templateUrl: './payord-textarea.component.html',\n})\nexport class PayordTextAreaComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  options!: PaymentFormFieldOptions;\n  control!: AbstractControl;\n  isCollapsed = false;\n\n  constructor(private readonly elRef: ElementRef<HTMLElement>) {}\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    if (this.control.value?.content) {\n      this.control.setValue(this.control.value.content);\n    }\n    this.isCollapsed =\n      !this.control.value && isObjectTruthy(this.options.collapseOptions);\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  expand() {\n    this.isCollapsed = false;\n    focusChildElement('textarea', this.elRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<ng-container *ngIf=\"!config?.hidden\">\n  <div\n    *ngIf=\"!isCollapsed\"\n    class=\"bb-dynamic-input form-group\"\n    [formGroup]=\"group\"\n    [ngClass]=\"options?.cssClasses\"\n  >\n    <label\n      class=\"bb-dynamic-input__label\"\n      [id]=\"inputEl?.id + '__label'\"\n      [for]=\"inputEl?.id\"\n      [textContent]=\"options?.label || ''\"\n      #labelElem\n    ></label>\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      *ngIf=\"options?.helperText\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.helperText\"\n    >\n    </span>\n    <bb-textarea-ui\n      [placeholder]=\"options?.placeholder || ''\"\n      [formControlName]=\"config.name\"\n      [showCharCounter]=\"true\"\n      [minLength]=\"options?.minLength\"\n      [maxLength]=\"options?.maxLength\"\n      [rows]=\"options?.rows\"\n      [cols]=\"options?.cols\"\n      [attr.data-role]=\"config.name\"\n      wrap=\"hard\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid,\n        __desc: options?.description\n      }\"\n      #inputEl\n    >\n    </bb-textarea-ui>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #descElem\n    ></div>\n  </div>\n\n  <ng-container *ngIf=\"isCollapsed\">\n    <span class=\"bb-dynamic-input__collapse-btn-container\">\n      <button\n        class=\"bb-dynamic-input__collapse-btn\"\n        bbButton\n        [color]=\"options?.collapseOptions?.btnColor || 'link'\"\n        [buttonSize]=\"options?.collapseOptions?.btnSize\"\n        (click)=\"expand()\"\n      >\n        <bb-icon-ui\n          class=\"bb-dynamic-input__collapse-btn-icon mr-2\"\n          *ngIf=\"!options?.collapseOptions?.hideIcon\"\n          [name]=\"options?.collapseOptions?.icon || 'add'\"\n          [size]=\"options?.collapseOptions?.iconSize\"\n        >\n        </bb-icon-ui>\n        <span class=\"bb-dynamic-input__collapse-btn-label\">\n          {{ options?.collapseOptions?.label || options?.label }}\n        </span>\n      </button>\n      <bb-payord-validation-message\n        [control]=\"group?.controls[config.name]\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label\"\n      ></bb-payord-validation-message>\n    </span>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport {\n  PaymentFormFieldConfig,\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  CounterPartyFields,\n  Scheme,\n  Hideable,\n  PaymentFormFieldHooks,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-text',\n  templateUrl: './payord-text.component.html',\n})\nexport class PayordTextboxComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  control!: AbstractControl;\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n\n    if (this.options.isIban) {\n      const schemeNameControl =\n        this.group.get(CounterPartyFields.schemeName) ||\n        registerFormControl(this.group, CounterPartyFields.schemeName);\n      if (schemeNameControl.value !== Scheme.IBAN) {\n        schemeNameControl.setValue(Scheme.IBAN);\n      }\n    }\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  *ngIf=\"!config?.hidden\"\n  class=\"bb-dynamic-input form-group contextual-alternates-off\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <ng-container *ngIf=\"!options?.isIban; else ibanElem\">\n    <label\n      class=\"bb-dynamic-input__label\"\n      [id]=\"inputEl?.id + '__label'\"\n      [for]=\"inputEl?.id\"\n      #labelElem\n    >\n      {{ options?.label || '' }}\n    </label>\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      [textContent]=\"options?.helperText\"\n      *ngIf=\"options?.helperText\"\n    >\n    </span>\n    <bb-input-text-ui\n      #inputEl\n      [formControlName]=\"config.name\"\n      [disabled]=\"options?.disabled\"\n      [minLength]=\"options?.minLength\"\n      [maxLength]=\"options?.maxLength\"\n      [showCharCounter]=\"options?.showCharCounter\"\n      [id]=\"options?.id\"\n      [placeholder]=\"options?.placeholder || ''\"\n      [autocomplete]=\"options?.autoComplete\"\n      [autofocus]=\"options?.autofocus\"\n      [readonly]=\"options?.readonly\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid,\n        __desc: options?.description\n      }\"\n      [attr.data-role]=\"config.name\"\n    >\n    </bb-input-text-ui>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n      [id]=\"inputEl?.id + '__error'\"\n      #errorElem\n    ></bb-payord-validation-message>\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #descElem\n    ></div>\n  </ng-container>\n\n  <ng-template #ibanElem>\n    <label\n      class=\"bb-dynamic-input__label\"\n      [id]=\"ibanInput?.id + '__label'\"\n      [for]=\"ibanInput?.id\"\n      [textContent]=\"options?.label || ''\"\n      #ibanLabelElem\n    >\n    </label>\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      *ngIf=\"options?.helperText\"\n      [textContent]=\"options?.helperText\"\n    >\n    </span>\n    <bb-input-text-ui\n      [formControlName]=\"config.name\"\n      [disabled]=\"options?.disabled\"\n      [maxLength]=\"options?.maxLength\"\n      [placeholder]=\"options?.placeholder || ''\"\n      [autocomplete]=\"options?.autoComplete\"\n      [autofocus]=\"options?.autofocus\"\n      [minLength]=\"options?.minLength\"\n      [readonly]=\"options?.readonly\"\n      [id]=\"options?.id\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid,\n        __desc: options?.description\n      }\"\n      bbIban\n      #ibanInput\n    >\n    </bb-input-text-ui>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n      [id]=\"ibanInput?.id + '__error'\"\n      #ibanErrorElem\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"ibanInput?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #ibanDescElem\n    ></div>\n  </ng-template>\n</div>\n","import {\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {\n  amountValidator,\n  currencyValidatorFactory,\n  InitiatorFields,\n  PaymentBaseFields,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n  PaymentFormFieldOptions,\n  PaymentOptionFields,\n  RemittanceInfoFields,\n} from '@backbase/payment-orders-ang';\nimport { combineLatest, Subject, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  startWith,\n  tap,\n} from 'rxjs/operators';\nimport { getParentForm, registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\nexport interface CalculatedRate {\n  currencyFrom: string;\n  currencyTo: string;\n  rate: number;\n  calculatedAmount: number;\n}\n\n@Component({\n  selector: 'bb-sanctioned-currency-amount',\n  templateUrl: './payord-sanctioned-currency-amount.component.html',\n})\nexport class PayordSanctionedCurrencyAmountComponent\n  implements OnInit, PaymentFormField, OnDestroy\n{\n  private static _id = 0;\n  readonly sanctionedCurrencyAmountId =\n    PayordSanctionedCurrencyAmountComponent._id++;\n\n  @ViewChild('amountLabel')\n  private amountLabelEl: ElementRef | undefined;\n\n  @ViewChild('helperText')\n  private helperTextEL: ElementRef | undefined;\n\n  /**\n   * Form config\n   */\n  config!: PaymentFormFieldConfig;\n\n  /**\n   * Form group\n   */\n  group!: FormGroup;\n\n  /**\n   * Form field options\n   */\n  options!: PaymentFormFieldOptions;\n\n  /**\n   * Form control\n   */\n  control!: AbstractControl;\n\n  /**\n   * Subscriptio to a value change\n   */\n  valueChangeSubscription?: Subscription;\n\n  /**\n   * Currency control\n   */\n  initiatorCurrencyControl!: AbstractControl;\n\n  /**\n   * Subject for exchange rate\n   */\n  exchangeRate$!: Subject<number>;\n\n  /**\n   * Control for exchange rate\n   */\n  exchangeRateControl!: AbstractControl;\n\n  /**\n   * Parent form group\n   */\n  parentForm!: FormGroup;\n\n  /**\n   * Initial amount value\n   */\n  initialAmount = {\n    [RemittanceInfoFields.amount]: '',\n    [RemittanceInfoFields.currency]: '',\n  };\n\n  /**\n   * Initializes the component.\n   *\n   * @returns\n   */\n  ngOnInit() {\n    this.parentForm = getParentForm(this.group);\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      [\n        Validators.required,\n        amountValidator as ValidatorFn,\n        currencyValidatorFactory(),\n      ],\n      this.options.asyncValidators,\n      this.options.defaultValue || this.initialAmount,\n      this.config\n    );\n\n    this.initiatorCurrencyControl = <AbstractControl>(\n      this.parentForm.get(\n        `${PaymentBaseFields.initiator}.${InitiatorFields.currency}`\n      )\n    );\n    this.exchangeRateControl =\n      this.parentForm.get(PaymentOptionFields.exchangeRate) ||\n      registerFormControl(this.parentForm, PaymentOptionFields.exchangeRate);\n\n    if (\n      this.initiatorCurrencyControl &&\n      this.control &&\n      !this.options.isTemplateMode\n    ) {\n      // Listen for \"from\" and \"to\" currency values\n      this.valueChangeSubscription = combineLatest([\n        this.initiatorCurrencyControl.valueChanges.pipe(\n          startWith(this.initiatorCurrencyControl.value),\n          distinctUntilChanged(),\n          filter((val) => !!val)\n        ),\n        this.control.valueChanges.pipe(\n          startWith(this.control.value),\n          map(({ currency }) => currency),\n          distinctUntilChanged(),\n          filter((val) => !!val)\n        ),\n      ]).subscribe(([fromCurrency, toCurrency]) => {\n        this.options.getExchangeRate$.next({ fromCurrency, toCurrency });\n      });\n    }\n\n    if (this.options.exchangeRate$) {\n      this.exchangeRate$ = this.options.exchangeRate$.pipe(\n        tap((rate) => {\n          this.exchangeRateControl.setValue(rate);\n        })\n      );\n    }\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  /**\n   * Returns the calculated rate\n   *\n   * @param [exchangeRate] Exchange rate\n   */\n  getCalculatedRate(exchangeRate = 0): CalculatedRate | undefined {\n    if (\n      exchangeRate &&\n      this.initiatorCurrencyControl &&\n      this.control.value.amount\n    ) {\n      return {\n        currencyFrom: this.initiatorCurrencyControl.value,\n        currencyTo: this.control.value.currency,\n        rate: exchangeRate,\n        calculatedAmount: this.control.value.amount / exchangeRate,\n      };\n    }\n    return;\n  }\n\n  /**\n   * Cleanups just before Angular destroys the component.\n   *\n   * @returns\n   */\n  ngOnDestroy() {\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  getLabelledbyForSelector(): string {\n    return (\n      this.options?.labelledBy ||\n      `${this.amountLabelEl?.nativeElement.id || ''} ${\n        this.helperTextEL?.nativeElement.id || ''\n      }`.trim()\n    );\n  }\n}\n","<section\n  *ngIf=\"!config?.hidden\"\n  class=\"bb-dynamic-input form-group payment-amount\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div\n    #amountLabel\n    class=\"bb-dynamic-input__label bb-label\"\n    id=\"payment-amount__helper-label-{{ sanctionedCurrencyAmountId }}\"\n    *ngIf=\"options?.label\"\n  >\n    {{ options?.label }}\n  </div>\n\n  <span\n    #helperText\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    id=\"payment-amount__helper-text-{{ sanctionedCurrencyAmountId }}\"\n    *ngIf=\"options?.helperText\"\n    [textContent]=\"options?.helperText\"\n  >\n  </span>\n\n  <div class=\"col-md-8 px-0\">\n    <ng-container *ngIf=\"options?.items$ | async as response; else loading\">\n      <bb-currency-amount-selector\n        [currencies]=\"response.currencies\"\n        [decMinLen]=\"0\"\n        [decMaxLen]=\"options?.decMaxLen\"\n        [allowNegativeValue]=\"options?.allowNegativeValue\"\n        [currencyLabel]=\"options?.currencyLabel || ''\"\n        [decimalLabel]=\"options?.decimalLabel || ''\"\n        [disabled]=\"options?.disabled || false\"\n        [integer]=\"options?.integer\"\n        [integerLabel]=\"options?.integerLabel || ''\"\n        [isRightAligned]=\"options?.isRightAligned\"\n        [labelClasses]=\"options?.labelClasses || ''\"\n        [placeholder]=\"options?.placeholder || 0\"\n        [readonly]=\"options?.readonly\"\n        [aria-describedby]=\"options?.describedBy\"\n        [aria-labelledby]=\"getLabelledbyForSelector()\"\n        [aria-invalid]=\"options?.ariaInvalid\"\n        [formControlName]=\"config.name\"\n        [currencySelectorExtended]=\"true\"\n        [currencySelectorConfig]=\"{\n          dividerIndex: response.dividerIndex,\n          showName: true,\n          isSearchable: true\n        }\"\n        [attr.maxlength]=\"options?.maxLength || 18\"\n        data-role=\"sanctioned-currency-amount-selector\"\n        resultType=\"string\"\n        ngDefaultControl\n      >\n        <div bbValidationMessage>\n          <bb-payord-validation-message\n            [control]=\"group.get('amountGroup')\"\n            [validationMessages]=\"options?.validationMessages\"\n            [label]=\"options?.label || 'Amount'\"\n          ></bb-payord-validation-message>\n        </div>\n      </bb-currency-amount-selector>\n      <bb-input-validation-message-ui [showErrors]=\"response.message\">\n        <span i18n=\"@@load-error-message-curr\"\n          >Something went wrong. Reload the page or contact system\n          administrator.</span\n        >\n      </bb-input-validation-message-ui>\n    </ng-container>\n  </div>\n  <ng-template #loading>\n    <bb-loading-indicator-ui></bb-loading-indicator-ui>\n  </ng-template>\n\n  <ng-container *ngIf=\"exchangeRate$ | async as exchangeRate\">\n    <ng-container *ngIf=\"getCalculatedRate(exchangeRate) as calculatedRate\">\n      <ng-container i18n=\"@@approximatelyPriceLabel\"\n        >You pay approximately:</ng-container\n      >\n      <span class=\"bb-text-bold\">\n        &asymp;\n        <bb-amount-ui\n          [mapCurrency]=\"false\"\n          [amount]=\"calculatedRate.calculatedAmount\"\n          [currency]=\"calculatedRate.currencyFrom\"\n        ></bb-amount-ui>\n      </span>\n      <ng-container i18n=\"@@currency-exchange-rate\">\n        (1 {{ calculatedRate.currencyFrom }} &asymp; {{ calculatedRate.rate }}\n        {{ calculatedRate.currencyTo }})\n      </ng-container>\n    </ng-container>\n  </ng-container>\n\n  <div *ngIf=\"options?.exchangeRateError$ | async\">\n    <span i18n=\"@@load-error-message-rate\"\n      >Exchange rate for this currency pair is unavailable.</span\n    >\n  </div>\n\n  <div\n    class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    *ngIf=\"options?.description\"\n    [textContent]=\"options?.description\"\n  ></div>\n</section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { PaymentFormFieldHooks } from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\n\n@Component({\n  selector: 'bb-payord-country-selector',\n  templateUrl: 'payord-country-selector.component.html',\n})\nexport class PayordCountrySelectorComponent\n  extends ActivatableFormField\n  implements OnInit, OnDestroy\n{\n  /**\n   * Form control\n   */\n  control!: AbstractControl;\n\n  /**\n   * Default country value\n   */\n  defaultCountry!: string;\n\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  /**\n   * Initialize the component.\n   *\n   * @returns\n   */\n  ngOnInit() {\n    this.defaultCountry = this.options.defaultValue || '';\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.defaultCountry,\n      this.config\n    );\n\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  /**\n   * Cleanup just before Angular destroys the component.\n   *\n   * @returns\n   */\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  /**\n   * Selects an item\n   *\n   * @param country Item country\n   * @returns\n   */\n  selectItem(country: string) {\n    this.control.setValue(country);\n    this.toggleDependants();\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  *ngIf=\"!config?.hidden\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <bb-select-country-dropdown\n    [formControlName]=\"config?.name\"\n    [countries]=\"options?.countries\"\n    [label]=\"options?.label\"\n    [helperText]=\"options?.helperText\"\n    [placeholder]=\"options?.placeholder\"\n    [searchPlaceholder]=\"options?.searchPlaceholder\"\n    [dropdownIcon]=\"options?.dropdownIcon\"\n    [selectedCountry]=\"control.value\"\n    (selectCountry)=\"selectItem($event)\"\n    [attr.data-role]=\"config?.name\"\n  ></bb-select-country-dropdown>\n\n  <bb-payord-validation-message\n    [control]=\"group?.controls[config.name]\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label\"\n  ></bb-payord-validation-message>\n\n  <div\n    class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    [attr.aria-hidden]=\"!options?.description\"\n    [hidden]=\"!options?.description\"\n    [textContent]=\"options?.description || ''\"\n    #descElem\n  ></div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  PaymentFormField,\n  PaymentFormFieldHooks,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-switch',\n  templateUrl: './payord-switch.component.html',\n})\nexport class PayordSwitchComponent\n  extends ActivatableFormField\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  class=\"form-group bb-dynamic-input\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div [hidden]=\"config?.hidden\">\n    <bb-switch-ui\n      [formControlName]=\"config?.name\"\n      [label]=\"options?.label\"\n      [labelPosition]=\"options?.labelPosition\"\n      (change)=\"toggleDependants()\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid\n      }\"\n      [inputSelector]=\"'.bb-switch__checkbox'\"\n      [attr.data-role]=\"config?.name\"\n      #inputEl\n    >\n    </bb-switch-ui>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n      [id]=\"inputEl?.id + '__error'\"\n    ></bb-payord-validation-message>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport {\n  PaymentFormFieldConfig,\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  Hideable,\n  PaymentFormFieldHooks,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-date',\n  templateUrl: './payord-date.component.html',\n})\nexport class PayordDateComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  control!: AbstractControl;\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  *ngIf=\"!config?.hidden\"\n  class=\"bb-dynamic-input form-group payord-date-control\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div>\n    <div\n      [class.payord-date-control__no-label]=\"\n        !options?.label && !options?.helperText\n      \"\n    >\n      <label\n        class=\"bb-dynamic-input__label\"\n        *ngIf=\"options?.label\"\n        [id]=\"inputEl?.id + '__label'\"\n        [textContent]=\"options?.label\"\n        #labelElem\n      ></label>\n      <span\n        class=\"bb-dynamic-input__helper-text bb-text-support\"\n        *ngIf=\"options?.helperText\"\n        [textContent]=\"options?.helperText\"\n      >\n      </span>\n    </div>\n    <div class=\"bb-block bb-block--sm\">\n      <bb-input-datepicker-ui\n        [formControlName]=\"config.name\"\n        [minDate]=\"options.minDate\"\n        [maxDate]=\"options.maxDate\"\n        [overrideDateFormat]=\"options.overrideDateFormat\"\n        [placeholder]=\"options.placeholder\"\n        [btnColor]=\"options.btnColor || 'link'\"\n        [clickOpen]=\"options.clickOpen || false\"\n        [focusOpen]=\"options.focusOpen || false\"\n        [icon]=\"options.icon || 'calendar'\"\n        [iconColor]=\"options.iconColor\"\n        [iconSize]=\"options.iconSize || 'md'\"\n        [markDisabled]=\"options.markDisabled\"\n        [navigation]=\"options.navigation || 'arrows'\"\n        [placement]=\"options.placement || 'bottom-left'\"\n        [rangeSelection]=\"options.rangeSelection || false\"\n        [firstDayOfWeek]=\"options.firstDayOfWeek\"\n        [readonly]=\"options.readonly || false\"\n        [bbDynamicAriaAttribute]=\"{\n          __error: control?.touched && control?.invalid,\n          __desc: options?.description\n        }\"\n        [attr.data-role]=\"config.name\"\n        [aria-labelledby]=\"options?.label ? inputEl?.id + '__label' : null\"\n        #inputEl\n      >\n      </bb-input-datepicker-ui>\n    </div>\n\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n      [id]=\"inputEl?.id + '__error'\"\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #descElem\n    ></div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport {\n  PaymentFormFieldConfig,\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  Hideable,\n  PaymentFormFieldHooks,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-number',\n  templateUrl: './payord-number.component.html',\n})\nexport class PayordNumberComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  control!: AbstractControl;\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  *ngIf=\"!config?.hidden\"\n  class=\"bb-dynamic-input form-group\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div>\n    <label\n      class=\"bb-dynamic-input__label\"\n      [id]=\"inputEl?.id + '__label'\"\n      [for]=\"inputEl?.id\"\n      [textContent]=\"options?.label || ''\"\n      #labelElem\n    ></label>\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      *ngIf=\"options?.helperText\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.helperText\"\n    >\n    </span>\n    <bb-input-number-ui\n      [placeholder]=\"options.placeholder || ''\"\n      [formControlName]=\"config.name\"\n      [max]=\"options.max\"\n      [min]=\"options.min\"\n      [step]=\"options.step\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid,\n        __desc: options?.description\n      }\"\n      #inputEl\n    >\n    </bb-input-number-ui>\n\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n      [id]=\"inputEl?.id + '__error'\"\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #descElem\n    ></div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport {\n  PaymentFormFieldConfig,\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  Hideable,\n  PaymentFormFieldHooks,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-phone',\n  templateUrl: './payord-phone.component.html',\n})\nexport class PayordPhoneComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  control!: AbstractControl;\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  *ngIf=\"!config?.hidden\"\n  class=\"bb-dynamic-input form-group\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div>\n    <label\n      class=\"bb-dynamic-input__label\"\n      [id]=\"inputEl?.id + '__label'\"\n      [for]=\"inputEl?.id\"\n      [textContent]=\"options?.label || ''\"\n      #labelElem\n    ></label>\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      *ngIf=\"options?.helperText\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.helperText\"\n    >\n    </span>\n    <bb-input-phone-ui\n      [placeholder]=\"options.placeholder || ''\"\n      [formControlName]=\"config.name\"\n      [minLength]=\"options?.minLength\"\n      [maxLength]=\"options?.maxLength\"\n      [bbDynamicAriaAttribute]=\"{\n        __error: control?.touched && control?.invalid,\n        __desc: options?.description\n      }\"\n      [attr.data-role]=\"config.name\"\n      #inputEl\n    >\n    </bb-input-phone-ui>\n\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n      [id]=\"inputEl?.id + '__error'\"\n    ></bb-payord-validation-message>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-subtitle bb-text-support\"\n      [attr.aria-hidden]=\"!options?.description\"\n      [hidden]=\"!options?.description\"\n      [id]=\"inputEl?.id + '__desc'\"\n      [textContent]=\"options?.description || ''\"\n      #descElem\n    ></div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  PaymentFormFieldHooks,\n  PaymentBaseFields,\n  RemittanceInfoFields,\n  PaymentOptionFields,\n  HiddenFields,\n  isSelectedBeneficiaryModified,\n} from '@backbase/payment-orders-ang';\nimport {\n  getCounterpartyFormGroupDetails,\n  registerFormControl,\n  revertBeneficiaryChanges,\n} from '../../helpers/form-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport {\n  AbstractControl,\n  FormControl,\n  Validators,\n  FormGroup,\n} from '@angular/forms';\nimport { PaymentOption } from '@backbase/payment-orders-ang';\nimport { Observable, of } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport { getDateOnly, isObjectTruthy } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-select-payment-option',\n  templateUrl: './payord-select-payment-option.html',\n})\nexport class PayordSelectPaymentOptionComponent\n  extends ActivatableFormField\n  implements OnInit, OnDestroy\n{\n  remittanceInfoGroup?: AbstractControl | null;\n  paymentOptions!: Array<PaymentOption>;\n  paymentOptions$!: Observable<Array<PaymentOption>>;\n  paymentTypecontrol!: AbstractControl;\n  instructionPriorityControl!: AbstractControl;\n  transferFeeControl!: AbstractControl;\n  chargeBearerOptionsControl!: AbstractControl;\n  paymentTypeNameControl!: AbstractControl;\n  separator = '::';\n  defaultTransFerFee = {\n    amount: '',\n    currencyCode: '',\n  };\n  today = getDateOnly(new Date());\n  showConfirmOptionModal = false;\n  selectedPaymentOptionLabel?: string;\n  private previousPaymentOption?: PaymentOption;\n  private currentPaymentOption?: PaymentOption;\n  private isClosedPaymentControl!: AbstractControl;\n  private isManualEditControl!: AbstractControl;\n\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.paymentTypecontrol = <FormControl>this.group.get('paymentType');\n    this.paymentTypeNameControl = registerFormControl(\n      this.group,\n      PaymentOptionFields.paymentTypeName\n    );\n    this.control = registerFormControl(this.group, this.config.name, [\n      Validators.required,\n    ]);\n    this.transferFeeControl =\n      this.group.get(PaymentOptionFields.transferFee) ||\n      registerFormControl(this.group, PaymentOptionFields.transferFee);\n    this.chargeBearerOptionsControl =\n      this.group.get(PaymentOptionFields.chargeBearerOptions) ||\n      registerFormControl(this.group, PaymentOptionFields.chargeBearerOptions);\n    this.remittanceInfoGroup = this.group.get(PaymentBaseFields.remittanceInfo);\n    this.isClosedPaymentControl = <FormControl>(\n      this.group.get(HiddenFields.isClosedPayment)\n    );\n    this.isManualEditControl = <FormControl>(\n      this.group.get(HiddenFields.isManualEdit)\n    );\n\n    if (this.remittanceInfoGroup) {\n      this.instructionPriorityControl =\n        this.remittanceInfoGroup.get(RemittanceInfoFields.urgent) ||\n        registerFormControl(\n          <FormGroup>this.remittanceInfoGroup,\n          RemittanceInfoFields.urgent\n        );\n    }\n\n    this.paymentOptions$ = (this.options.items$ || of([])).pipe(\n      map((paymentOptions: Array<PaymentOption>) =>\n        paymentOptions.map((paymentOption) => ({\n          ...paymentOption,\n          hasMin:\n            paymentOption.executionTimeFrame &&\n            typeof paymentOption.executionTimeFrame.min === 'number',\n          hasMax:\n            paymentOption.executionTimeFrame &&\n            typeof paymentOption.executionTimeFrame.max === 'number',\n          name:\n            paymentOption.name ||\n            (this.options.optionLabels || {})[paymentOption.paymentType || ''],\n        }))\n      ),\n      tap((paymentOptions: Array<PaymentOption>) => {\n        this.paymentOptions = paymentOptions || [];\n        if (paymentOptions && paymentOptions.length === 1) {\n          const value = this.getValue(paymentOptions[0]);\n          if (value !== this.control.value) {\n            this.control.setValue(value);\n            this.setPaymentOptionDetails(paymentOptions[0]);\n          }\n        }\n        if (this.control?.value && paymentOptions.length) {\n          const [type, instructionPriority] = this.control.value.split(\n            this.separator\n          );\n          const paymentOption = this.getValueByType(type, instructionPriority);\n          if (paymentOption) {\n            this.setPaymentOptionDetails(paymentOption);\n          } else {\n            this.control.reset();\n          }\n        }\n      })\n    );\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  setPaymentOptionDetails(paymentOption: PaymentOption) {\n    if (this.instructionPriorityControl) {\n      this.instructionPriorityControl.setValue(\n        paymentOption.instructionPriority === 'HIGH'\n      );\n    }\n    if (this.options.isWizardMode && this.options.checkClosedPaymentsAccess) {\n      this.isClosedPaymentControl?.setValue(!paymentOption.canEditCounterparty);\n    }\n    this.transferFeeControl.setValue(\n      paymentOption.transferFee || this.defaultTransFerFee\n    );\n    this.chargeBearerOptionsControl.setValue(paymentOption.chargeBearer);\n    this.paymentTypecontrol.patchValue(paymentOption.paymentType);\n    this.paymentTypeNameControl.setValue(paymentOption.name);\n  }\n\n  getValue(option: PaymentOption) {\n    return `${option.paymentType}${this.separator}${\n      option.instructionPriority || ''\n    }`;\n  }\n\n  getValueByType(type: string, priority: string): PaymentOption {\n    return this.paymentOptions.filter(\n      (option: PaymentOption) =>\n        option.paymentType === type && option.instructionPriority === priority\n    )[0];\n  }\n\n  onRadioChange(value: string) {\n    this.toggleDependants();\n    const [type, instructionPriority] = value.split(this.separator);\n    const paymentOption = this.getValueByType(type, instructionPriority);\n    this.selectedPaymentOptionLabel = paymentOption.name;\n    this.previousPaymentOption = this.currentPaymentOption;\n    this.currentPaymentOption = paymentOption;\n    if (type && instructionPriority) {\n      if (\n        this.shouldShowConfirmationModal(!!paymentOption?.canEditCounterparty)\n      ) {\n        this.showConfirmOptionModal = true;\n      } else {\n        this.setPaymentOptionDetails(this.currentPaymentOption);\n      }\n    }\n  }\n\n  private shouldShowConfirmationModal(canEditCounterparty: boolean): boolean {\n    const counterpartyDetails = (<FormGroup>(\n      this.group.get(PaymentBaseFields.counterparty)\n    ))?.getRawValue();\n    const selectedBeneficiary = this.group.get(\n      HiddenFields.selectedBeneficiary\n    )?.value;\n    const filledBeneficiary = getCounterpartyFormGroupDetails(this.group);\n    const isSelectedBeneficiaryChanged =\n      selectedBeneficiary &&\n      isSelectedBeneficiaryModified(counterpartyDetails, selectedBeneficiary);\n    const isClosedPayment =\n      this.options.isWizardMode &&\n      this.options.checkClosedPaymentsAccess &&\n      !canEditCounterparty;\n    const isEdittedManually =\n      isObjectTruthy(filledBeneficiary) && this.isManualEditControl?.value;\n\n    return (\n      isClosedPayment && (isSelectedBeneficiaryChanged || isEdittedManually)\n    );\n  }\n\n  confirmPaymentOption(): void {\n    this.showConfirmOptionModal = false;\n    revertBeneficiaryChanges(this.group);\n    if (this.currentPaymentOption) {\n      this.setPaymentOptionDetails(this.currentPaymentOption);\n    }\n  }\n\n  cancelPaymentOption(): void {\n    this.showConfirmOptionModal = false;\n    let prevPaymentType = '';\n    this.currentPaymentOption = this.previousPaymentOption;\n    if (this.currentPaymentOption) {\n      const instructionPriority = this.instructionPriorityControl.value\n        ? 'HIGH'\n        : 'NORM';\n      prevPaymentType = this.paymentTypecontrol.value;\n      if (prevPaymentType) {\n        this.control.setValue(\n          `${prevPaymentType}${this.separator}${instructionPriority}`\n        );\n      }\n    }\n    if (!prevPaymentType || !this.previousPaymentOption) {\n      this.instructionPriorityControl.reset();\n      this.control.reset();\n    }\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<ng-container *ngIf=\"paymentOptions$ | async as paymentOptions\">\n  <ng-container *ngIf=\"paymentOptions.length\">\n    <div\n      *ngIf=\"!config?.hidden\"\n      class=\"form-group col-12 bb-dynamic-input\"\n      [formGroup]=\"group\"\n      [ngClass]=\"options?.cssClasses\"\n    >\n      <div class=\"bb-select-payment-option\">\n        <div\n          class=\"bb-label\"\n          i18n-label=\"@@payord-select-payment-option.delivery.label\"\n        >\n          Delivery\n        </div>\n        <bb-input-radio-group-ui\n          label=\"Delivery\"\n          i18n-label=\"@@payord-select-payment-option.radiogroup.label\"\n          [formControlName]=\"config?.name\"\n          (change)=\"onRadioChange($event?.target?.value || '')\"\n          [preselect]=\"false\"\n          [bbDynamicAriaAttribute]=\"{\n            select_payment_option__error: control?.touched && control?.invalid\n          }\"\n          [prependInputId]=\"false\"\n          data-role=\"payment-option-radio-group\"\n          inputSelector=\".bb-input-radio-group\"\n          #inputEl\n        >\n          <bb-input-radio-ui\n            *ngFor=\"let option of paymentOptions\"\n            [labelTemplate]=\"labelTemplate\"\n            [labelTemplateContext]=\"option\"\n            [value]=\"getValue(option)\"\n            [attr.data-role]=\"getValue(option)\"\n          ></bb-input-radio-ui>\n        </bb-input-radio-group-ui>\n\n        <bb-input-validation-message-ui\n          data-role=\"input-error\"\n          role=\"alert\"\n          *ngIf=\"control\"\n          [showErrors]=\"control?.touched && control?.invalid\"\n        >\n          <ng-container *ngIf=\"control.errors && control.errors['required']\">\n            <span id=\"select_payment_option__error\" data-role=\"required-error\">\n              <ng-container i18n\n                >Please choose a payment delivery option</ng-container\n              >\n            </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #labelTemplate let-context=\"labelTemplateContext\">\n  <div class=\"row bb-select-payment-option__label\">\n    <div class=\"col-6\">\n      <div>\n        <span>{{context?.name}}</span>\n        <span *ngIf=\"context.showHelperText\">\n          ({ context.instructionPriority, select, HIGH {Urgent} NORM {Standard}\n          })\n        </span>\n      </div>\n      <div\n        class=\"bb-text-support font-weight-normal bb-subtitle\"\n        *ngIf=\"context?.executionTimeFrame\"\n      >\n        <ng-container *ngIf=\"!context?.hasMin && context?.hasMax\" i18n>\n          Delivered {context.executionTimeFrame.max, plural, =0\n          {{context.executionTimeFrame.unit, select, HOUR {instantly}\n          CALENDAR_DAY {same day} BUSINESS_DAY { same business day}}} =1\n          {{context.executionTimeFrame.unit, select, HOUR {within 1 hour}\n          CALENDAR_DAY {within 1 day} BUSINESS_DAY {within 1 business day}}}\n          other {{context.executionTimeFrame.unit, select, HOUR {within\n          {{context.executionTimeFrame.max}} hours} CALENDAR_DAY {within\n          {{context.executionTimeFrame.max}} days} BUSINESS_DAY {within\n          {{context.executionTimeFrame.max}} business days}}}}\n        </ng-container>\n        <ng-container *ngIf=\"context?.hasMin && context?.hasMax\" i18n>\n          Delivered within\n          {{context.executionTimeFrame.min}}-{{context.executionTimeFrame.max}}\n          {context.executionTimeFrame.unit, select, HOUR {hours} CALENDAR_DAY\n          {days} BUSINESS_DAY {business days}}\n        </ng-container>\n        <ng-container *ngIf=\"context?.cutOffTime\" i18n>\n          if received before {{today + ' ' + context?.cutOffTime | date:\n          'HH:mm'}} Hrs\n        </ng-container>\n      </div>\n    </div>\n    <div\n      class=\"col-6 d-flex align-items-center bb-text-support font-weight-normal\"\n    >\n      <bb-icon-ui\n        class=\"bb-select-payment-option__icon\"\n        name=\"data-usage\"\n      ></bb-icon-ui>\n      <span data-role=\"transfer-fee\"\n        >{{context.transferFee.amount | currency:\n        context.transferFee.currencyCode: 'code'}}</span\n      >\n    </div>\n  </div>\n</ng-template>\n\n<bb-confirmation-dialog\n  [isOpen]=\"showConfirmOptionModal\"\n  (cancel)=\"cancelPaymentOption()\"\n  (confirm)=\"confirmPaymentOption()\"\n>\n  <h2\n    title\n    data-role=\"confirm-reset-beneficiary-modal-header\"\n    i18n=\"@@confirm-reset-beneficiary-modal-title\"\n  >\n    'Continue with '{{selectedPaymentOptionLabel}}'?'\n  </h2>\n  <span\n    body\n    i18n=\"@@confirm-reset-beneficiary-modal-content\"\n    data-role=\"confirm-reset-beneficiary-modal-message\"\n  >\n    Changes to beneficiary will be reset.\n  </span>\n  <span\n    confirmActionName\n    data-role=\"continue-action-btn\"\n    i18n=\"@@confirm-reset-beneficiary-modal-discard-btn\"\n  >\n    Continue\n  </span>\n  <span\n    cancelActionName\n    data-role=\"cancel-action-btn\"\n    i18n=\"@@confirm-reset-beneficiary-modal-cancel-btn\"\n  >\n    Cancel\n  </span>\n</bb-confirmation-dialog>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport {\n  Currency,\n  Hideable,\n  InitiatorFields,\n  PaymentBaseFields,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentOptionFields,\n  RemittanceInfoFields,\n} from '@backbase/payment-orders-ang';\nimport { ChargeBearer, PaymentCostInfo } from '@backbase/payment-orders-ang';\nimport BigNumber from 'bignumber.js';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { distinctUntilChanged, startWith } from 'rxjs/operators';\nimport { registerFormControl } from '../../helpers/form-helpers';\n\n@Component({\n  selector: 'bb-payment-cost',\n  templateUrl: './payment-cost.component.html',\n})\nexport class PayordPaymentCostComponent implements OnInit, OnDestroy {\n  readonly defaultCurrency = 'USD';\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  amountControl!: AbstractControl | null;\n  fromCurrencyControl!: AbstractControl | null;\n  chargeBearerControl!: AbstractControl;\n  transferFeeControl!: AbstractControl;\n  exchangeRateControl!: AbstractControl;\n  instructionPriorityControl!: AbstractControl | null;\n  paymentTypeNameControl!: AbstractControl | null;\n\n  paymentCostInfo$ = new BehaviorSubject<PaymentCostInfo | undefined>(\n    undefined\n  );\n\n  amount!: {\n    [RemittanceInfoFields.amount]: string;\n    [RemittanceInfoFields.currency]: string;\n  };\n  subscription?: Subscription;\n  fromCurrency = '';\n  exchangeRate = 0;\n  instructionPriority = false;\n  isTotalAmountDisplayed = true;\n\n  ngOnInit() {\n    this.fromCurrencyControl = this.group.get(\n      `${PaymentBaseFields.initiator}.${InitiatorFields.currency}`\n    );\n    this.amountControl = this.group.get(\n      `${PaymentBaseFields.remittanceInfo}.${RemittanceInfoFields.amountCurrencyGroup}`\n    );\n    this.instructionPriorityControl = this.group.get(\n      `${PaymentBaseFields.remittanceInfo}.${RemittanceInfoFields.urgent}`\n    );\n\n    this.transferFeeControl =\n      this.group.get(PaymentOptionFields.transferFee) ||\n      registerFormControl(this.group, PaymentOptionFields.transferFee);\n\n    this.chargeBearerControl =\n      this.group.get(PaymentOptionFields.chargeBearer) ||\n      registerFormControl(this.group, PaymentOptionFields.chargeBearer);\n\n    this.exchangeRateControl =\n      this.group.get(PaymentOptionFields.exchangeRate) ||\n      registerFormControl(this.group, PaymentOptionFields.exchangeRate);\n\n    this.paymentTypeNameControl = this.group.get(\n      PaymentOptionFields.paymentTypeName\n    );\n\n    this.listenChanges();\n  }\n\n  getTotalCost(transferFee?: Currency, calculatedAmount = 0): string {\n    const fee = new BigNumber(transferFee?.amount || '0');\n    const amount = new BigNumber(calculatedAmount || this.amount.amount || '0');\n    return amount.plus(fee).toString();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  hasForexInfo(fromCurrency = '', toCurrency = '', exchangeRate = 0) {\n    return (\n      !!fromCurrency &&\n      !!toCurrency &&\n      fromCurrency !== toCurrency &&\n      exchangeRate !== 0\n    );\n  }\n\n  listenChanges() {\n    if (\n      this.amountControl &&\n      this.fromCurrencyControl &&\n      this.instructionPriorityControl\n    ) {\n      this.subscription = combineLatest([\n        this.fromCurrencyControl.valueChanges.pipe(\n          startWith(this.fromCurrencyControl.value),\n          distinctUntilChanged()\n        ),\n        this.amountControl.valueChanges.pipe(\n          startWith(this.amountControl.value),\n          distinctUntilChanged()\n        ),\n        this.transferFeeControl.valueChanges.pipe(\n          startWith(this.transferFeeControl.value),\n          distinctUntilChanged()\n        ),\n        this.chargeBearerControl.valueChanges.pipe(\n          startWith(this.chargeBearerControl.value),\n          distinctUntilChanged()\n        ),\n        this.exchangeRateControl.valueChanges.pipe(\n          startWith(this.exchangeRateControl.value),\n          distinctUntilChanged()\n        ),\n        this.instructionPriorityControl.valueChanges.pipe(\n          startWith(this.instructionPriorityControl.value),\n          distinctUntilChanged()\n        ),\n      ]).subscribe(\n        ([\n          fromCurrency,\n          amount,\n          transferFee,\n          chargeBearer,\n          exchangeRate,\n          instructionPriority,\n        ]) => {\n          this.fromCurrency = fromCurrency;\n          this.amount = amount;\n          this.exchangeRate = exchangeRate;\n          this.instructionPriority = instructionPriority;\n\n          this.isTotalAmountDisplayed =\n            !!this.exchangeRate || this.fromCurrency === this.amount.currency;\n\n          const fee = { ...transferFee };\n\n          if (chargeBearer === ChargeBearer.BEN) {\n            // If chargebearer is beneficiary then set transfer fee to 0\n            fee.amount = '0';\n          }\n\n          if (chargeBearer && !this.options?.isTemplateMode) {\n            const _amountByRate = new BigNumber(amount.amount || '0').dividedBy(\n              exchangeRate\n            );\n            const calculatedAmount = !!exchangeRate\n              ? _amountByRate.toString()\n              : amount.amount;\n\n            this.paymentCostInfo$.next({\n              transferFee: fee,\n              hasForexInfo: this.hasForexInfo(\n                fromCurrency,\n                amount.currency,\n                exchangeRate\n              ),\n              rate: exchangeRate,\n              fromCurrency: this.fromCurrency,\n              toCurrency: this.amount.currency,\n              calculatedAmount,\n            });\n          }\n        }\n      );\n    }\n  }\n}\n","<section\n  class=\"bb-block--md col-12 bb-dynamic-input\"\n  *ngIf=\"paymentCostInfo$ | async as paymentCostInfo\"\n>\n  <ng-container *ngIf=\"paymentCostInfo.transferFee?.amount\">\n    <ng-container\n      *ngIf=\"paymentCostInfo?.hasForexInfo; else sameCurrencyTransferTmpl\"\n    >\n      <hr />\n      <div\n        class=\"bb-heading-3 bb-block bb-block--md d-flex justify-content-between\"\n      >\n        <div i18n=\"@@bb-dynamic-input-payment-cost.transfer-amount.title\">\n          Transfer amount\n        </div>\n        <bb-amount-ui\n          data-role=\"transfer-amount\"\n          [mapCurrency]=\"false\"\n          [amount]=\"amount.amount || '0'\"\n          [currency]=\"amount.currency || defaultCurrency\"\n        >\n        </bb-amount-ui>\n      </div>\n\n      <div\n        [hidden]=\"!paymentCostInfo.calculatedAmount\"\n        class=\"bb-block bb-block--md d-flex justify-content-between\"\n      >\n        <div i18n=\"@@bb-dynamic-amount-you-pay-label.title\">\n          Amount you pay\n          <span data-role=\"exchange-rate\"\n            >(1 {{ paymentCostInfo.fromCurrency }} &asymp;\n            {{ paymentCostInfo.rate }} {{ paymentCostInfo.toCurrency }})</span\n          >\n        </div>\n        <div data-role=\"amount-you-pay\">\n          &asymp;\n          <bb-amount-ui\n            [mapCurrency]=\"false\"\n            [amount]=\"paymentCostInfo?.calculatedAmount || '0'\"\n            [currency]=\"paymentCostInfo?.fromCurrency\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-block--md d-flex justify-content-between\">\n        <div\n          *ngIf=\"paymentTypeNameControl?.value\"\n          i18n=\"@@bb-dynamic-input-payment-cost.fee.title\"\n        >\n          Transfer fee - {{ paymentTypeNameControl?.value }}\n        </div>\n        <bb-amount-ui\n          data-role=\"payment-fee\"\n          [mapCurrency]=\"false\"\n          [amount]=\"paymentCostInfo.transferFee?.amount || '0'\"\n          [currency]=\"paymentCostInfo.transferFee?.currencyCode\"\n        >\n        </bb-amount-ui>\n      </div>\n      <div\n        *ngIf=\"isTotalAmountDisplayed\"\n        class=\"bb-text-bold bb-block bb-block--md d-flex justify-content-between\"\n      >\n        <div i18n=\"@@bb-dynamic-input-payment-cost.total.title\">Total</div>\n        <div>\n          &asymp;\n          <bb-amount-ui\n            data-role=\"total-amount-to-pay\"\n            [mapCurrency]=\"false\"\n            [amount]=\"\n              getTotalCost(\n                paymentCostInfo.transferFee,\n                paymentCostInfo.calculatedAmount\n              )\n            \"\n            [currency]=\"paymentCostInfo.fromCurrency\"\n          >\n          </bb-amount-ui>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-template #sameCurrencyTransferTmpl>\n      <div>\n        <hr />\n        <div\n          class=\"bb-heading-3 bb-block bb-block--md d-flex justify-content-between\"\n        >\n          <div i18n=\"@@bb-dynamic-input-payment-cost.amount.title\">Amount</div>\n          <bb-amount-ui\n            data-role=\"amount-you-pay\"\n            [mapCurrency]=\"false\"\n            [amount]=\"amount.amount || '0'\"\n            [currency]=\"amount.currency || defaultCurrency\"\n          ></bb-amount-ui>\n        </div>\n        <div class=\"bb-block bb-block--md d-flex justify-content-between\">\n          <div\n            *ngIf=\"paymentTypeNameControl?.value\"\n            i18n=\"@@bb-dynamic-input-payment-cost.fee.title\"\n          >\n            Transfer fee - {{ paymentTypeNameControl?.value }}\n          </div>\n          <bb-amount-ui\n            data-role=\"payment-fee\"\n            [mapCurrency]=\"false\"\n            [amount]=\"paymentCostInfo.transferFee?.amount || '0'\"\n            [currency]=\"paymentCostInfo.transferFee?.currencyCode\"\n          >\n          </bb-amount-ui>\n        </div>\n        <div\n          *ngIf=\"isTotalAmountDisplayed\"\n          class=\"bb-text-bold bb-block bb-block--md d-flex justify-content-between\"\n        >\n          <div i18n=\"@@bb-dynamic-input-payment-cost.total.title\">Total</div>\n          <bb-amount-ui\n            data-role=\"total-amount\"\n            [mapCurrency]=\"false\"\n            [amount]=\"getTotalCost(paymentCostInfo.transferFee)\"\n            [currency]=\"amount.currency || defaultCurrency\"\n          >\n          </bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </ng-container>\n</section>\n","import { ActivatedRoute } from '@angular/router';\n\nexport function getRouteParams(route: ActivatedRoute) {\n  if (!route) {\n    return {};\n  }\n  let params = route.snapshot.params;\n  params = { ...route.snapshot.queryParams, ...params };\n  if (route.children) {\n    for (const r of route.children) {\n      params = { ...getRouteParams(r), ...params };\n    }\n  }\n  return params;\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  AfterViewInit,\n  Renderer2,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  FormGroup,\n  AbstractControl,\n  Validators,\n  ValidatorFn,\n} from '@angular/forms';\nimport { combineLatest, fromEvent, Observable, of, Subject } from 'rxjs';\nimport { map, take, takeUntil, catchError, shareReplay } from 'rxjs/operators';\nimport {\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n  InitiatorFields,\n  CounterPartyFields,\n  AccountBalances,\n  PaymentBaseFields,\n  BaseObject,\n  ProductKinds,\n  FilterState,\n  ProductKindItem,\n  DisabledCombination,\n  InternalAccountFormItem,\n} from '@backbase/payment-orders-ang';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { ActivatedRoute } from '@angular/router';\nimport { getRouteParams } from '../../helpers/route-helpers';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { ProductSelectorComponent } from '@backbase/ui-ang/product-selector';\n\nconst getDbsValue = (\n  dbsObj: ProductSummaryItem,\n  keys: string\n): number | string | undefined => {\n  const value = keys\n    .split('.')\n    .reduce((obj, key) => (<BaseObject<any>>obj)?.[key], dbsObj);\n  return <number | string | undefined>(\n    (['string', 'number'].includes(typeof value) ? value : undefined)\n  );\n};\n\n@Component({\n  selector: 'bb-payord-internal-account-selector',\n  templateUrl: 'payord-internal-account-selector.component.html',\n})\nexport class PayordInternalAccountSelectorComponent\n  extends ActivatableFormField\n  implements PaymentFormField, OnInit, OnDestroy, AfterViewInit\n{\n  @ViewChild('productSelector') productSelector:\n    | ProductSelectorComponent\n    | undefined;\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  form!: FormGroup;\n  control!: AbstractControl;\n  selectedAccount!: InternalAccountFormItem & { number?: string };\n  disabledAccount: InternalAccountFormItem | undefined;\n  private readonly destroy$ = new Subject<void>();\n  connectedAccounts$: Observable<InternalAccountFormItem[]> = of([]);\n  readonly productKinds = ProductKinds;\n  /**\n   * Id to associate messages to form field for accessibility\n   */\n  validationId = '';\n  /**\n   * Account number fromat used to mask the account numbers in the selector\n   */\n  accountFormat = {\n    length: 0,\n    maskRange: [0, 0],\n    segments: 0,\n  };\n\n  /**\n   * Boolean to show if account selector tab is touched\n   */\n  touched = false;\n  /**\n   * Return other account selector field name\n   */\n  get peerFieldName() {\n    return this.config.name === InitiatorFields.initiatorAccountGroup\n      ? PaymentBaseFields.counterparty\n      : PaymentBaseFields.initiator;\n  }\n  /**\n   * Flag to show if dropdown is open\n   */\n  get isDropdownOpen(): boolean {\n    return !!this.productSelector?.bbDropdown?.isOpen();\n  }\n  /**\n   * Flag to show which account kinds should not be rendered in order to avoid unwanted matches between two account\n   */\n  get disabledProductKinds(): ProductKinds[] {\n    const combinations =\n      this.options.paymentTypeOptions?.disabledCombinations || [];\n    const isInitiator =\n      this.config.name === InitiatorFields.initiatorAccountGroup;\n    const counterParty = this.disabledAccount?.productKindName;\n    const disabledProductKinds = combinations.filter((i: DisabledCombination) =>\n      isInitiator ? i.to === counterParty : i.from === counterParty\n    );\n    return disabledProductKinds.map((i: DisabledCombination) =>\n      isInitiator ? i.from : i.to\n    );\n  }\n\n  constructor(\n    private readonly renderer: Renderer2,\n    private readonly cd: ChangeDetectorRef,\n    private readonly activatedRoute: ActivatedRoute,\n    visibilityService: VisibilityService\n  ) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.validationId = `account-selector-${this.config.name}-error-message`;\n\n    this.form = <FormGroup>(this.group.parent ? this.group.parent : null);\n    this.registerFields();\n    this.control = this.group.controls['name'];\n    const {\n      otherFilters,\n      connectedItems$,\n      items$,\n      productKinds,\n      connectedAccounts,\n      preselect,\n    } = this.options;\n\n    if (connectedAccounts) {\n      this.connectedAccounts$ = connectedItems$.pipe(take(1));\n    }\n\n    this.options.items$ = items$.pipe(\n      take(1),\n      map((accounts: InternalAccountFormItem[]) =>\n        this.options.mapItems && accounts?.length\n          ? this.options.mapItems(accounts)\n          : accounts\n      ),\n      map((accounts: InternalAccountFormItem[]) =>\n        this.filterByProductKind(accounts, productKinds)\n      ),\n      map((accounts: InternalAccountFormItem[]) =>\n        this.filterByOtherProps(accounts, otherFilters)\n      ),\n      map((accounts: InternalAccountFormItem[]) =>\n        accounts.map(this.mapBalance.bind(this))\n      ),\n      shareReplay(1)\n    );\n\n    combineLatest([\n      <Observable<InternalAccountFormItem[]>>this.options.items$.pipe(\n        take(1),\n        catchError(() => of([]))\n      ),\n      <Observable<InternalAccountFormItem[]>>this.connectedAccounts$.pipe(\n        take(1),\n        catchError(() => of([]))\n      ),\n    ]).subscribe(([internals, externals = []]) => {\n      const accounts = [...internals, ...externals];\n      if (!this.group.value['id']) {\n        let selection;\n        const { transferFrom, transferTo } = getRouteParams(\n          this.activatedRoute.root\n        );\n        const { name: configName } = this.config;\n        const idParam =\n          configName === InitiatorFields.initiatorAccountGroup\n            ? transferFrom\n            : transferTo;\n        selection = idParam && accounts.find((acc) => acc.id === idParam);\n        if (preselect && !selection && transferTo !== accounts[0]?.id) {\n          selection = accounts[0];\n        }\n        if (selection) {\n          this.selectItem(selection);\n        }\n      }\n      this.setAccountInEditMode(accounts, this.group, 'id');\n    });\n\n    this.setDisabledAccount(this.form);\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngAfterViewInit() {\n    if (this.productSelector) {\n      const { nativeElement } = this.productSelector.dropdownToggle;\n      fromEvent(nativeElement, 'blur')\n        .pipe(take(1))\n        .subscribe(() => this.setTouched());\n\n      //Here to fix Safari focus issue https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n      fromEvent<any>(nativeElement, 'click')\n        .pipe(take(1))\n        .subscribe((e) => e.currentTarget.focus());\n\n      // Fix accessibility issue (MAINT-10313)\n      this.renderer.setAttribute(\n        nativeElement,\n        'aria-describedby',\n        this.validationId\n      );\n    }\n  }\n\n  /**\n   * Filtering accounts by product kind\n   */\n  filterByProductKind(\n    accounts: InternalAccountFormItem[] = [],\n    productKinds: ProductKindItem[] = []\n  ) {\n    return accounts?.filter((account: InternalAccountFormItem) =>\n      productKinds.length\n        ? productKinds.some((i) => i.productKind === account.productKindName)\n        : true\n    );\n  }\n  /**\n   * Filtering accounts by other filter properties\n   */\n  filterByOtherProps(\n    accounts: InternalAccountFormItem[] = [],\n    otherFilters: FilterState[] = []\n  ) {\n    return accounts.filter((account) =>\n      otherFilters.length\n        ? otherFilters.every(({ key, value }) => {\n            const dbsValue = getDbsValue(\n              <ProductSummaryItem>account?.defaultRecord,\n              key\n            );\n            return value.some((v) => v === dbsValue);\n          })\n        : true\n    );\n  }\n\n  /**\n   * Disable account which is already selected at the counter party selector\n   */\n  setDisabledAccount(form: FormGroup) {\n    if (form?.get(this.peerFieldName)) {\n      this.disabledAccount = (form.get(this.peerFieldName) as FormGroup).value;\n      (form.get(this.peerFieldName) as FormGroup).valueChanges\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((acc) => {\n          this.disabledAccount = acc;\n          this.setPaymentConfig(acc);\n        });\n    }\n  }\n\n  setPaymentConfig(acc: InternalAccountFormItem) {\n    if (\n      this.config.name === CounterPartyFields.counterPartyAccountGroup &&\n      this.form.get(PaymentBaseFields.counterparty)\n    ) {\n      const role =\n        acc.productKindName === ProductKinds.connectedAccounts\n          ? 'DEBTOR'\n          : 'CREDITOR';\n      (this.form.get(PaymentBaseFields.counterparty) as FormGroup).patchValue({\n        role,\n      });\n    }\n  }\n\n  setTouched(isTouched = true) {\n    this.touched = isTouched;\n    if (isTouched) {\n      this.group.markAllAsTouched();\n    }\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Return paymentType regarding to from-to account combination\n   */\n  pickPaymentType(): string | undefined {\n    const initiatorKind = this.form.value.initiator?.productKindName;\n    const counterPartyKind = this.form.value.counterparty?.productKindName;\n    const { paymentTypes } = this.options.paymentTypeOptions || {};\n    const { connectedAccounts } = ProductKinds;\n\n    if (paymentTypes && initiatorKind && counterPartyKind) {\n      return counterPartyKind === connectedAccounts ||\n        initiatorKind === connectedAccounts\n        ? paymentTypes.external\n        : paymentTypes.internal;\n    }\n    return;\n  }\n\n  setAccountInEditMode(\n    accounts: InternalAccountFormItem[],\n    group: FormGroup,\n    key: string\n  ) {\n    if (accounts && group?.value[key]) {\n      const account = accounts.filter((a) => a.id === group.value[key]);\n      this.selectItem(account[0]);\n    }\n  }\n\n  selectAccountGroup(): BaseObject<ValidatorFn[]> | undefined {\n    const fieldsGroup =\n      this.config.name === InitiatorFields.initiatorAccountGroup\n        ? InitiatorFields\n        : CounterPartyFields;\n    return {\n      [fieldsGroup.id]: [Validators.required],\n      [fieldsGroup.name]: [Validators.required],\n      [fieldsGroup.accountNumber]: [Validators.required],\n      [CounterPartyFields.role]: [Validators.required],\n      currency: [],\n      schemeName: [Validators.required],\n      productKindName: [Validators.required],\n      accountData: [],\n    };\n  }\n\n  registerFields() {\n    const accountGroup = this.selectAccountGroup();\n    for (const key in accountGroup) {\n      if (accountGroup.hasOwnProperty(key)) {\n        registerFormControl(this.group, key, accountGroup[key], [], '');\n      }\n    }\n  }\n\n  /**\n   * Set balance and balance label to account regarding to selected balance type in config\n   */\n  mapBalance(account: InternalAccountFormItem): InternalAccountFormItem {\n    const defaultBalanceType = AccountBalances.current;\n    const productKindConfig = this.options?.productKinds?.find(\n      (config) => config.productKind === account.productKindName\n    );\n    const dbsProperty = productKindConfig?.balance?.apiField\n      ? productKindConfig.balance.apiField\n      : defaultBalanceType;\n\n    const balance = getDbsValue(\n      <ProductSummaryItem>account?.defaultRecord,\n      dbsProperty\n    );\n    return {\n      ...account,\n      balance: <number | undefined>balance,\n      balanceLabel: productKindConfig?.balance?.label,\n    };\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  selectItem(account: InternalAccountFormItem) {\n    if (this.group && account?.name) {\n      const { productKindName } = account;\n      const { connectedAccounts } = ProductKinds;\n      const isPeerConnectedAcc =\n        this.disabledAccount?.productKindName === connectedAccounts;\n      const schemeName =\n        productKindName === connectedAccounts ? 'EXTERNAL_ID' : 'ID';\n      const role =\n        this.config.name === CounterPartyFields.counterPartyAccountGroup &&\n        isPeerConnectedAcc\n          ? 'DEBTOR'\n          : 'CREDITOR';\n\n      this.group.patchValue({\n        id: account.id,\n        name: account.name,\n        accountNumber: account.accountNumber,\n        currency: account.currency,\n        schemeName,\n        productKindName: account.productKindName,\n        role,\n        accountData: account,\n      });\n      this.selectedAccount = {\n        ...account,\n      };\n    }\n\n    this.toggleDependants();\n\n    const paymentType = this.pickPaymentType();\n    if (paymentType) {\n      this.form.patchValue({ paymentType });\n    }\n\n    this.group.markAsDirty();\n    this.cd.detectChanges();\n  }\n}\n","<div\n  class=\"form-group bb-dynamic-input\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n>\n  <div *ngIf=\"options?.label\" class=\"bb-label bb-block bb-block--lg\">\n    {{ options?.label }}\n  </div>\n  <section class=\"payment-from\" [formGroup]=\"group\">\n    <label class=\"bb-form-field\">\n      <bb-product-selector-ui\n        [autoClose]=\"true\"\n        [class.bb-product-selector--invalid-border]=\"\n          touched && group.invalid && !isDropdownOpen\n        \"\n        #productSelector\n      >\n        <ng-container bbDropdownToggle>\n          <div\n            *ngIf=\"selectedAccount\"\n            data-role=\"product-selector-selected-product\"\n          >\n            <bb-product-item-basic-account-ui\n              [title]=\"selectedAccount?.name\"\n              [productNumber]=\"selectedAccount?.accountNumber\"\n              [amount]=\"selectedAccount.balance\"\n              [currency]=\"selectedAccount.currency\"\n              [productNumberFormat]=\"\n                options?.productNumberFormat || accountFormat\n              \"\n              [highlight]=\"options?.highlight\"\n              [showCurrencySymbol]=\"options?.showCurrencySymbol !== false\"\n              [active]=\"false\"\n              [balanceLabel]=\"selectedAccount?.balanceLabel\"\n              i18n-balanceLabel=\"\n                Available balance\n                label@@payord-internal-account-selector.amount.available\"\n            ></bb-product-item-basic-account-ui>\n          </div>\n          <div *ngIf=\"!selectedAccount\" class=\"bb-stack\">\n            <span\n              data-role=\"item-empty-state\"\n              class=\"bb-text-support bb-product-selector__placeholder\"\n            >\n              {{ options?.placeholder }}\n            </span>\n          </div>\n        </ng-container>\n        <ng-container bbDropdownMenu>\n          <ng-container\n            *ngIf=\"{\n              internal: options?.items$ | async,\n              external: connectedAccounts$ | async\n            } as accounts\"\n          >\n            <ng-container\n              *ngIf=\"\n                accounts.internal?.length || accounts.external?.length;\n                else notFound\n              \"\n            >\n              <ng-container\n                *ngFor=\"let item of accounts.internal; let i = index\"\n              >\n                <button\n                  *ngIf=\"!disabledProductKinds.includes(item.productKindName)\"\n                  (click)=\"selectItem(item)\"\n                  [disabled]=\"\n                    item.accountNumber === disabledAccount?.accountNumber\n                  \"\n                  bbButton\n                  color=\"unstyled\"\n                  class=\"bb-product-selector__dropdown-item\"\n                  [ngClass]=\"{\n                    selected: item.id === selectedAccount?.id,\n                    'bb-text-support':\n                      item.accountNumber === disabledAccount?.accountNumber\n                  }\"\n                >\n                  <bb-product-item-basic-account-ui\n                    [title]=\"item.name\"\n                    [amount]=\"item.balance\"\n                    [productNumber]=\"item.accountNumber\"\n                    [currency]=\"item.currency\"\n                    [highlight]=\"options?.highlight\"\n                    [active]=\"false\"\n                    [class.bb-dropdown-multi-select--disabled]=\"\n                      item.accountNumber === disabledAccount?.accountNumber\n                    \"\n                    [productNumberFormat]=\"\n                      options?.productNumberFormat || accountFormat\n                    \"\n                    [showCurrencySymbol]=\"options?.showCurrencySymbol !== false\"\n                    [balanceLabel]=\"item?.balanceLabel\"\n                    i18n-balanceLabel=\"\n                      Available balance\n                      label@@payord-internal-account-selector.amount.available\"\n                  ></bb-product-item-basic-account-ui>\n                </button>\n              </ng-container>\n              <ng-container\n                *ngIf=\"\n                  disabledAccount?.productKindName !==\n                  productKinds.connectedAccounts\n                \"\n              >\n                <h4\n                  class=\"bb-subheader bb-text-support bb-block bb-block--no-margin bb-inline-stack bb-internal-account-selector__subheader\"\n                  *ngIf=\"\n                    accounts.external?.length &&\n                    options?.connectedAccountsSubHeader as subheader\n                  \"\n                  tabIndex=\"-1\"\n                >\n                  <bb-icon-ui\n                    name=\"insert-link\"\n                    cropped\n                    class=\"bb-inline-stack__item--spacing-sm\"\n                  ></bb-icon-ui>\n                  <span>{{ subheader }}</span>\n                </h4>\n                <button\n                  *ngFor=\"let item of accounts.external\"\n                  (click)=\"selectItem(item)\"\n                  [disabled]=\"\n                    item.accountNumber === disabledAccount?.accountNumber\n                  \"\n                  bbButton\n                  color=\"unstyled\"\n                  class=\"bb-product-selector__dropdown-item\"\n                  [ngClass]=\"{\n                    selected: item.id === selectedAccount?.id,\n                    'bb-text-support':\n                      item.accountNumber === disabledAccount?.accountNumber\n                  }\"\n                >\n                  <bb-product-item-basic-account-ui\n                    [title]=\"item.name\"\n                    [productNumber]=\"item.accountNumber\"\n                    [highlight]=\"options?.highlight\"\n                    [active]=\"false\"\n                    [class.bb-dropdown-multi-select--disabled]=\"\n                      item.accountNumber === disabledAccount?.accountNumber\n                    \"\n                    [productNumberFormat]=\"\n                      options?.productNumberFormat || accountFormat\n                    \"\n                    [showCurrencySymbol]=\"options?.showCurrencySymbol !== false\"\n                  ></bb-product-item-basic-account-ui>\n                </button>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n          <ng-template #notFound>\n            <bb-empty-state-ui\n              title=\"No items found\"\n              [showIcon]=\"false\"\n            ></bb-empty-state-ui>\n          </ng-template>\n        </ng-container>\n      </bb-product-selector-ui>\n    </label>\n\n    <ng-container *ngIf=\"!selectedAccount\">\n      <bb-payord-validation-message\n        [id]=\"validationId\"\n        [control]=\"group?.controls['name']\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label\"\n      ></bb-payord-validation-message>\n    </ng-container>\n  </section>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  ValidatorFn,\n  AbstractControl,\n} from '@angular/forms';\nimport {\n  amountValidator,\n  InternalAccountFormItem,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  RemittanceInfoFields,\n  PaymentFormFieldHooks,\n  PaymentBaseFields,\n} from '@backbase/payment-orders-ang';\nimport { registerFormGroup } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { Observable } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-payord-compact-amount-ui',\n  templateUrl: './payord-compact-amount.component.html',\n})\nexport class PayordCompactAmountComponent\n  implements OnInit, PaymentFormField, OnDestroy\n{\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  options!: PaymentFormFieldOptions;\n  control!: AbstractControl;\n  fromAccountProduct$!: Observable<InternalAccountFormItem | undefined>;\n  remittanceInfoFields = RemittanceInfoFields;\n  initialAmount = {\n    [RemittanceInfoFields.amount]: '',\n    [RemittanceInfoFields.currency]: '',\n  };\n  amountGroup!: FormGroup;\n  readonly id = new Date().getTime();\n\n  ngOnInit() {\n    this.amountGroup = <FormGroup>registerFormGroup(\n      this.group,\n      this.config.name,\n      {\n        [RemittanceInfoFields.amount]: [\n          this.options.defaultValue?.amount || this.initialAmount.amount,\n        ],\n        [RemittanceInfoFields.currency]: [\n          this.options.defaultValue?.currency || this.initialAmount.currency,\n        ],\n      },\n      [Validators.required, amountValidator as ValidatorFn],\n      this.options.asyncValidators\n    );\n\n    this.fromAccountProduct$ = (<FormGroup>(\n      this.group.parent?.get(PaymentBaseFields.initiator)\n    ))?.valueChanges.pipe(\n      startWith(\n        (<FormGroup>this.group.parent?.get(PaymentBaseFields.initiator))?.value\n      ),\n      tap((initiator) =>\n        this.amountGroup\n          .get(RemittanceInfoFields.currency)\n          ?.patchValue(initiator?.currency || this.options.currency)\n      )\n    );\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<section\n  class=\"form-group bb-dynamic-input\"\n  [formGroup]=\"amountGroup\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n  [class.was-validated]=\"\n    group.get(config.name)?.invalid && group.get(config.name)?.touched\n  \"\n>\n  <label [attr.for]=\"'bb-compact-amount-' + id\" *ngIf=\"options?.label\">{{\n    options?.label\n  }}</label>\n  <div class=\"position-relative\">\n    <bb-amount-input-ui\n      [id]=\"'bb-compact-amount-' + id\"\n      [formControlName]=\"remittanceInfoFields.amount\"\n      [mapCurrency]=\"options?.showCurrencySymbol !== false\"\n      [currency]=\"(fromAccountProduct$ | async)?.currency || options?.currency\"\n      [placeholder]=\"options?.placeholder || '0.00'\"\n      [required]=\"true\"\n      [wrapperClasses]=\"\n        options.wrapperClasses || 'bb-amount-input__field--large'\n      \"\n      [autoDecimal]=\"options.autoDecimal\"\n      [maxLength]=\"options?.maxLength\"\n      [aria-describedby]=\"'compact-amount-error-message-' + id\"\n    ></bb-amount-input-ui>\n  </div>\n  <bb-payord-validation-message\n    [id]=\"'compact-amount-error-message-' + id\"\n    [control]=\"group.get(config.name)\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label || 'Amount'\"\n  ></bb-payord-validation-message>\n</section>\n","import { Component, Optional, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  PaymentDetails,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentMode,\n} from '@backbase/payment-orders-ang';\nimport { RoutableModalService } from '@backbase/payment-orders-ang';\nimport { BehaviorSubject } from 'rxjs';\nimport { isTemplateFormDirty } from '../../helpers/form-helpers';\n\n@Component({\n  selector: 'bb-payord-button-group',\n  templateUrl: './payord-button-group.component.html',\n})\nexport class PayordButtonGroupComponent implements PaymentFormField, OnInit {\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  confirmModalClose$ = new BehaviorSubject(false);\n  paymentMode = PaymentMode;\n  private initialFormValue!: PaymentDetails;\n\n  constructor(\n    @Optional() private readonly modalService: RoutableModalService\n  ) {}\n\n  ngOnInit() {\n    this.initialFormValue = this.group?.value;\n  }\n\n  onCancel() {\n    if (isTemplateFormDirty(this.group.value, this.initialFormValue)) {\n      this.confirmModalClose$.next(true);\n    } else {\n      this.closeModal();\n    }\n  }\n\n  closeModal() {\n    this.confirmModalClose$.next(false);\n    this.modalService?.closeModal();\n  }\n}\n","<div\n  class=\"btn-container bb-dynamic-input bb-button-bar\"\n  [ngClass]=\"{ 'bb-button-bar--reverse': !options?.isModalView }\"\n>\n  <bb-load-button-ui\n    type=\"submit\"\n    class=\"bb-button-bar__button\"\n    [isLoading]=\"options?.submitting$ | async\"\n  >\n    <ng-container\n      *ngIf=\"!options?.isTemplateMode\"\n      i18n=\"@@dynamic-form-field-button-group.continue.label\"\n      >Continue</ng-container\n    >\n    <ng-container\n      *ngIf=\"options?.isTemplateMode\"\n      i18n=\"@@dynamic-form-field-button-group.save.label\"\n      >Save</ng-container\n    >\n  </bb-load-button-ui>\n  <button\n    *ngIf=\"\n      options?.isModalView || options?.paymentMode === paymentMode.COPY_PAYMENT\n    \"\n    bbButton\n    class=\"bb-button-bar__button\"\n    color=\"secondary\"\n    data-role=\"cancel-button\"\n    (click)=\"onCancel()\"\n    [disabled]=\"options?.submitting$ | async\"\n    i18n=\"@@dynamic-form-field-button-group-cancel-label\"\n  >\n    Cancel\n  </button>\n  <button\n    *ngIf=\"\n      options?.paymentMode !== paymentMode.EDIT_TEMPLATE &&\n      options?.paymentMode !== paymentMode.COPY_PAYMENT\n    \"\n    class=\"bb-button-bar__button bb-button-bar__button--across\"\n    bbButton\n    type=\"button\"\n    color=\"link\"\n    (click)=\"options?.reset()\"\n    [disabled]=\"options?.submitting$ | async\"\n  >\n    <ng-container i18n=\"@@dynamic-form-field-button-group.clear.label\"\n      >Clear all fields</ng-container\n    >\n  </button>\n</div>\n\n<bb-modal-ui\n  [isOpen]=\"confirmModalClose$.value\"\n  (cancel)=\"confirmModalClose$.next(false)\"\n  (confirm)=\"closeModal()\"\n  data-role=\"close-discard-modal-dialog\"\n>\n  <bb-modal-header-ui\n    title=\"Discard entered data?\"\n    i18n-title=\"omni-payment-template-discard-modal-title\"\n  ></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <ng-container i18n=\"@@omni-payment-template-discard-modal-content\">\n        Are you sure to exit and discard all changes? Entered data will be lost.\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui #modalFooterRef>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"closeModal()\"\n          data-role=\"discard-action-btn\"\n          i18n=\"@@omni-payment-template-discard-modal-discard-btn\"\n        >\n          Discard\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"link\"\n          (click)=\"confirmModalClose$.next(false)\"\n          data-role=\"cancel-action-btn\"\n          i18n=\"@@omni-payment-template-discard-modal-cancel-btn\"\n        >\n          Cancel\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  Frequencies,\n  PaymentFormFieldConfig,\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  Hideable,\n  PaymentFormFieldHooks,\n  getRelativeDate,\n  getDateOnly,\n  ScheduleEndType,\n} from '@backbase/payment-orders-ang';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-schedule-header',\n  templateUrl: './payord-schedule-header.html',\n})\nexport class PayordScheduleHeaderComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  minOccurrences = 2;\n  dateFormat?: string;\n  endType = ScheduleEndType;\n  frequencies = Frequencies;\n\n  isToday(startDate: Date) {\n    const today = getRelativeDate();\n    const date = getDateOnly(new Date(startDate));\n\n    return date === today;\n  }\n\n  ngOnInit() {\n    this.dateFormat = this.options?.dateFormat || 'd MMM y';\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  class=\"bb-dynamic-input bb-schedule-header bb-fieldset__heading\"\n  *ngIf=\"!config?.hidden\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <ng-container\n    *ngIf=\"(group?.value?.frequency?.value || group?.value?.frequency) as freq\"\n  >\n    <span>\n      <ng-container *ngIf=\"options?.label\">{{options?.label}}</ng-container>\n      <ng-container\n        *ngIf=\"!options?.label\"\n        i18n=\"@@dynamic-form-field-schedule-header.default-title\"\n        >Schedule</ng-container\n      >\n    </span>\n    <span class=\"bb-schedule-header__text\">\n      <span> - </span>\n      <span i18n=\"@@dynamic-form-field-schedule-header.frequency\"\n        >{ freq, select, DAILY {Daily} WEEKLY {Weekly} BIWEEKLY {Bi-Weekly}\n        MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY {Annually} }</span\n      >\n      <ng-container *ngIf=\"freq === frequencies.ONCE\">\n        <span>\n          {{ group?.value?.startDate | date: dateFormat }}\n          <span\n            class=\"bb-schedule-header__relative-text\"\n            *ngIf=\"isToday(group?.value?.startDate)\"\n            i18n=\"@@dynamic-form-field-schedule-header.today\"\n          >\n            (Today)\n          </span>\n        </span>\n      </ng-container>\n\n      <ng-container *ngIf=\"freq !== frequencies.ONCE\">\n        <span class=\"bb-schedule-header__sepatator\">,</span>\n        <span i18n=\"@@dynamic-form-field-schedule-header-from.label\">\n          from\n        </span>\n        <span>{{group?.value?.startDate | date: dateFormat}}</span>\n        <ng-container\n          *ngIf=\"group?.value?.endType === endType.ON && group?.value?.endDate\"\n        >\n          <span> - </span>\n          <span> {{group?.value?.endDate | date: dateFormat}}</span>\n        </ng-container>\n        <ng-container\n          *ngIf=\"group?.value?.endType === endType.AFTER && group?.value?.repeat\"\n        >\n          <span>, </span> <span> {{ group?.value?.repeat }} </span>\n          <span i18n=\"@@dynamic-form-field-schedule-header-occurances.label\">\n            times</span\n          >\n        </ng-container>\n      </ng-container>\n    </span>\n  </ng-container>\n  <hr class=\"bb-schedule-header__sepatator\" />\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  CounterPartyFields,\n  HiddenFields,\n  isAddressTruthy,\n  PaymentBaseFields,\n  PaymentFormFieldHooks,\n  PaymentOptionFields,\n  RemittanceInfoFields,\n} from '@backbase/payment-orders-ang';\nimport { tap, map } from 'rxjs/operators';\nimport { getParentForm, registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport {\n  SanctionedCountry,\n  InputFormField,\n} from '@backbase/data-ang/payment-order-options';\n\n@Component({\n  selector: 'bb-payord-sanctioned-country-selector',\n  templateUrl: 'payord-sanctioned-country-selector.component.html',\n})\nexport class PayordSanctionedCountrySelectorComponent\n  extends ActivatableFormField\n  implements OnInit, OnDestroy\n{\n  control!: AbstractControl;\n  inputFormSettingControl!: AbstractControl;\n  defaultBankCodeSettingControl!: AbstractControl;\n  defaultCountryControl!: AbstractControl;\n  isClosedPaymentControl!: AbstractControl;\n  parentForm!: FormGroup;\n  countries$!: Observable<Array<string>>;\n  countries: Array<string> = [];\n  defaultCountry!: string;\n  inputFormSettings: { [key: string]: Array<InputFormField> } = {};\n  sanctionedCountries: { [key: string]: SanctionedCountry } = {};\n  formSubscription?: Subscription;\n  httpSubscription?: Subscription;\n  counterpartyIdControl!: AbstractControl;\n  private sanctionedCountriesControl!: AbstractControl;\n\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.defaultCountry = this.options.defaultCountry || '';\n    this.parentForm = getParentForm(this.group);\n\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.defaultCountry,\n      this.config\n    );\n\n    this.inputFormSettingControl =\n      this.parentForm.get(PaymentOptionFields.inputFormFromSettings) ||\n      registerFormControl(\n        this.parentForm,\n        PaymentOptionFields.inputFormFromSettings\n      );\n    this.defaultBankCodeSettingControl =\n      this.parentForm.get(HiddenFields.defaultBankCodeSetting) ||\n      registerFormControl(this.parentForm, HiddenFields.defaultBankCodeSetting);\n    this.defaultCountryControl = registerFormControl(\n      this.parentForm,\n      HiddenFields.sanctionedCountries\n    );\n    this.sanctionedCountriesControl = registerFormControl(\n      this.parentForm,\n      HiddenFields.sanctionedCountries\n    );\n\n    if (this.options.items$) {\n      this.httpSubscription = this.options.items$\n        .pipe(\n          map((items: Array<SanctionedCountry>) => this.mapCountries(items)),\n          tap((countryCodes: Array<string>) => {\n            this.countries = this.options.isWizardMode\n              ? countryCodes\n              : countryCodes.filter(\n                  (country) => country !== this.defaultCountry\n                );\n            this.sanctionedCountriesControl.setValue(this.countries);\n            if (\n              !this.control.value &&\n              this.defaultCountry &&\n              this.parentForm.get('isEditMode')?.value\n            ) {\n              this.control.setValue(this.defaultCountry);\n            }\n          })\n        )\n        .subscribe();\n    }\n\n    this.formSubscription = this.control.valueChanges.subscribe((value) =>\n      this.onChange(value)\n    );\n    this.counterpartyIdControl = <AbstractControl>(\n      this.parentForm.get([\n        PaymentBaseFields.counterparty,\n        CounterPartyFields.id,\n      ])\n    );\n\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  mapCountries(sanctionedCountries: Array<SanctionedCountry>) {\n    return sanctionedCountries.map((item) => {\n      if (item.country === this.control.value) {\n        this.inputFormSettingControl.reset();\n        this.inputFormSettingControl.setValue(item);\n      }\n      if (item.inputFormSettings) {\n        this.sanctionedCountries[item.country] = item;\n        this.inputFormSettings[item.country] = item.inputFormSettings;\n      }\n      if (item.isDefault) {\n        this.defaultCountry = item.country;\n        this.defaultCountryControl.setValue(item.country);\n        if (this.inputFormSettings[item.country]) {\n          this.inputFormSettings[item.country].forEach((setting) => {\n            if (setting.key === 'bank-code') {\n              this.defaultBankCodeSettingControl.setValue(setting);\n            }\n          });\n        }\n      }\n      return item.country;\n    });\n  }\n\n  onChange(val: string) {\n    this.inputFormSettingControl.setValue(this.sanctionedCountries[val]);\n    this.toggleDependants();\n  }\n\n  resetAddressGroup() {\n    const addressGroup = <FormGroup>(\n      (this.control && this.control.parent ? this.control.parent : null)\n    );\n    if (isAddressTruthy(addressGroup.value)) {\n      for (const controlName in addressGroup.controls) {\n        if (controlName !== 'country') {\n          addressGroup.controls[controlName].reset();\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.formSubscription) {\n      this.formSubscription.unsubscribe();\n    }\n\n    if (this.httpSubscription) {\n      this.httpSubscription.unsubscribe();\n    }\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  private resetPurposeOfPayment() {\n    const popControl = this.parentForm.get([\n      PaymentBaseFields.remittanceInfo,\n      RemittanceInfoFields.purposeOfPayment,\n    ]);\n    if (popControl?.value) {\n      popControl.reset();\n    }\n  }\n\n  selectItem(country: string) {\n    this.defaultCountry = country;\n    this.control.setValue(country);\n    this.resetAddressGroup();\n    this.resetPurposeOfPayment();\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  *ngIf=\"!config?.hidden\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <bb-select-country-dropdown\n    [formControlName]=\"config?.name\"\n    [countries]=\"countries\"\n    [label]=\"options?.label\"\n    [helperText]=\"options?.helperText\"\n    [placeholder]=\"options?.placeholder\"\n    [searchPlaceholder]=\"options?.searchPlaceholder\"\n    [dropdownIcon]=\"options?.dropdownIcon\"\n    [selectedCountry]=\"control.value\"\n    [isClosedPayment]=\"\n      parentForm.get('isClosedPayment')?.value || counterpartyIdControl?.value\n    \"\n    (selectCountry)=\"selectItem($event)\"\n    data-role=\"sanctioned-country-selector-dropdown\"\n  ></bb-select-country-dropdown>\n\n  <bb-payord-validation-message\n    [control]=\"group?.controls[config.name]\"\n    [validationMessages]=\"options?.validationMessages\"\n    [label]=\"options?.label\"\n  ></bb-payord-validation-message>\n\n  <div\n    class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    [attr.aria-hidden]=\"!options?.description\"\n    [hidden]=\"!options?.description\"\n    [textContent]=\"options?.description || ''\"\n    #descElem\n  ></div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport {\n  PaymentFormFieldHooks,\n  PaymentOptionFields,\n  TemplateModeType,\n} from '@backbase/payment-orders-ang';\nimport { AbstractControl, Validators } from '@angular/forms';\nimport { startWith, tap } from 'rxjs/operators';\nimport { BehaviorSubject, Subscription, Observable } from 'rxjs';\n\n@Component({\n  selector: 'bb-charge-bearer',\n  templateUrl: './charge-bearer.component.html',\n})\nexport class PayordChargeBearerComponent\n  extends ActivatableFormField\n  implements OnInit, OnDestroy\n{\n  chargeBearerOptionsControl?: AbstractControl | null;\n  chargeBearerOptionsSubject$ = new BehaviorSubject<Array<string>>([]);\n  chargeBearerOptions$: Observable<string[]> =\n    this.chargeBearerOptionsSubject$.asObservable();\n  subscription?: Subscription;\n\n  constructor(private readonly visibilityService: VisibilityService) {\n    super(visibilityService);\n  }\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    this.chargeBearerOptionsControl = registerFormControl(\n      this.group,\n      PaymentOptionFields.chargeBearerOptions\n    );\n    if (this.chargeBearerOptionsControl) {\n      this.subscription = this.chargeBearerOptionsControl.valueChanges\n        .pipe(\n          startWith(this.chargeBearerOptionsControl.value),\n          tap((chargeBearerOptions: Array<string> | null) => {\n            chargeBearerOptions = chargeBearerOptions || [];\n            this.control.setValidators(\n              chargeBearerOptions.length ? Validators.required : null\n            );\n            this.control.updateValueAndValidity();\n            if (\n              this.control.value &&\n              chargeBearerOptions.length &&\n              chargeBearerOptions.indexOf(this.control.value) === -1 &&\n              this.options.templateModeType !== TemplateModeType.EDIT\n            ) {\n              this.control.reset();\n            }\n            this.chargeBearerOptionsSubject$.next(chargeBearerOptions);\n          })\n        )\n        .subscribe();\n    }\n    this.toggleDependants();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<ng-container *ngIf=\"chargeBearerOptions$ | async as chargeBearerOptions\">\n  <ng-container *ngIf=\"chargeBearerOptions.length\">\n    <div\n      *ngIf=\"!config?.hidden\"\n      class=\"bb-dynamic-input form-group charge-bearer-options\"\n      [formGroup]=\"group\"\n      [ngClass]=\"options?.cssClasses\"\n    >\n      <div class=\"bb-label\" [textContent]=\"options?.label || ''\"></div>\n      <span\n        class=\"bb-dynamic-input__helper-text bb-text-support\"\n        *ngIf=\"options?.helperText\"\n        [id]=\"inputEl?.id + '__desc'\"\n        [textContent]=\"options?.helperText\"\n      >\n      </span>\n\n      <bb-input-radio-group-ui\n        [label]=\"options?.label\"\n        [formControlName]=\"config?.name\"\n        (change)=\"toggleDependants()\"\n        [horizontal]=\"options?.horizontal\"\n        [preselect]=\"options?.preselect\"\n        data-role=\"charge-bearer-radio-group\"\n        [bbDynamicAriaAttribute]=\"{\n          charge_bearer__error: control?.touched && control?.invalid,\n          charge_bearer__desc: options?.description\n        }\"\n        [prependInputId]=\"false\"\n        inputSelector=\".bb-input-radio-group\"\n        #inputEl\n      >\n        <bb-input-radio-ui\n          *ngFor=\"let option of chargeBearerOptions\"\n          [value]=\"option\"\n          [labelTemplate]=\"paymentOptionTmpl\"\n          [labelTemplateContext]=\"option\"\n          [attr.data-role]=\"option\"\n        ></bb-input-radio-ui>\n      </bb-input-radio-group-ui>\n      <bb-payord-validation-message\n        [control]=\"group?.controls[config.name]\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label\"\n        [id]=\"'charge_bearer__error'\"\n      ></bb-payord-validation-message>\n\n      <div\n        class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n        [attr.aria-hidden]=\"!options?.description\"\n        [hidden]=\"!options?.description\"\n        [id]=\"'charge_bearer__desc'\"\n        [textContent]=\"options?.description || ''\"\n        #descElem\n      ></div>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template let-context=\"labelTemplateContext\" #paymentOptionTmpl>\n  <ng-container [ngSwitch]=\"context\">\n    <div class=\"font-weight-normal\" *ngSwitchCase=\"'OUR'\">\n      I pay all fees (OUR)\n      <div *ngIf=\"control?.value === 'OUR'\" class=\"bb-text-support bb-subtitle\">\n        The beneficiary receives the payment amount in full. You pay the fees\n        charged by our bank initially (fees will be charged separately). You\n        will also pay the fees charged by the payee’s bank, including any\n        correspondent/intermediary fees (this could be days or weeks after you\n        have made the payment).\n      </div>\n    </div>\n    <div class=\"font-weight-normal\" *ngSwitchCase=\"'BEN'\">\n      <div>Beneficiary pays all fees (BEN)</div>\n      <div *ngIf=\"control?.value === 'BEN'\" class=\"bb-text-support bb-subtitle\">\n        The beneficiary pays any fees charged by our bank and/or the recipient\n        bank (including any correspondent/intermediary fees). The beneficiary\n        will typically receive the payment minus the transfer charges.\n      </div>\n    </div>\n    <div class=\"font-weight-normal\" *ngSwitchCase=\"'SHA'\">\n      <div>Fees are shared (SHA)</div>\n      <div *ngIf=\"control?.value === 'SHA'\" class=\"bb-text-support bb-subtitle\">\n        You pay the fees charged by our bank (fees will be charged separately).\n        The beneficiary will pay all fees charged by their bank, including any\n        correspondent/intermediary fees.\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport {\n  CreditDebitMixedIndicator,\n  ErrorItem,\n  InternalAccountFormItem,\n  MultiPaymentCard,\n  parseString,\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n} from '@backbase/payment-orders-ang';\nimport {\n  animationFrameScheduler,\n  asapScheduler,\n  fromEvent,\n  Observable,\n  Subject,\n  BehaviorSubject,\n} from 'rxjs';\nimport {\n  addControlToFormArray,\n  registerFormArray,\n} from '../../helpers/form-helpers';\nimport { auditTime, startWith, take, takeUntil } from 'rxjs/operators';\nimport { BatchPaymentsPutResponse } from '@backbase/data-ang/payment-batch';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport '@angular/localize/init';\n\nconst SCROLL_SCHEDULER =\n  typeof requestAnimationFrame !== 'undefined'\n    ? animationFrameScheduler\n    : asapScheduler;\n\n@Component({\n  selector: 'bb-multi-payment-card',\n  templateUrl: './multi-payment-card.component.html',\n  styles: [\n    `\n      .virtual-scroll__container {\n        position: relative;\n      }\n\n      .virtual-scroll__padding {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 1px;\n        height: 1px;\n        transform-origin: 0 0;\n        opacity: 0;\n      }\n\n      .virtual-scroll__content {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        max-width: 100vw;\n        max-height: 100vh;\n      }\n    `,\n  ],\n})\nexport class MultiPaymentCardComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  fieldOptions: Partial<MultiPaymentCard> = {};\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  paymentArrayControl!: FormArray;\n  count = new EventEmitter();\n  search = new EventEmitter();\n  cardConfig: { name: string; validators?: ValidatorFn[] }[] = [\n    {\n      name: 'counterpartyName',\n      validators: [],\n    },\n    {\n      name: 'counterpartyAccountNumber',\n      validators: [],\n    },\n    {\n      name: 'id',\n      validators: [],\n    },\n    { name: 'bankBranchCode' },\n    { name: 'accountType' },\n    { name: 'balance' },\n    { name: 'currency' },\n    { name: 'description', validators: [] },\n    {\n      name: 'amount',\n      validators: [],\n    },\n  ];\n  readonly hostRef: MultiPaymentCardComponent = this;\n\n  @ViewChild('scroll', { read: ElementRef, static: true }) scroll!: ElementRef;\n  @ViewChild('padding', { read: ElementRef, static: true })\n  padding!: ElementRef;\n  @ViewChild('content', { read: ElementRef, static: true })\n  content!: ElementRef;\n\n  public viewportItems: AbstractControl[] = [];\n\n  public subscription!: Observable<any>;\n\n  private readonly destroy$ = new Subject<void>();\n  private scrollableElement!: HTMLElement;\n\n  private _items: Array<{\n    expanded: boolean;\n    dropdownOpen: boolean;\n    height: number;\n  }> = [];\n  private visibleItemsInViewport = 0;\n  private bufferedItems = 5;\n  private visibleViewport = 0;\n  public firstRenderedItemIndex = 0;\n\n  accounts: {\n    search$: BehaviorSubject<string>;\n    items$: Observable<InternalAccountFormItem[]>;\n  }[] = [];\n\n  defaultConfig: MultiPaymentCard = {\n    counterpartyName: {\n      label: '',\n      validationMessageLabel: $localize`:@@multipayment-card.account.validation-message-label:Account`,\n      placeholder: '',\n      dropdownIcon: 'toggle-down',\n      ariaLabel: $localize`:@@multipayment-card.counterparty-name.aria-label:Toggle beneficiary list`,\n    },\n    amount: {\n      label: $localize`:@@multipayment-card.amount.label:Amount`,\n      validationMessageLabel: $localize`:@@multipayment-card.amount.validation-message-label:Amount`,\n      currency: 'USD',\n      maxLength: 10,\n      placeholder: '0.00',\n    },\n    description: {\n      placeholder: $localize`:@@multipayment-card.description.placeholder:Enter text...`,\n      minLength: 3,\n      maxLength: 140,\n    },\n  };\n\n  private lastBlur = {\n    timeoutId: 0,\n    itemIndex: -1,\n  };\n\n  constructor(\n    private readonly renderer: Renderer2,\n    private readonly ngZone: NgZone,\n    private readonly viewportRuler: ViewportRuler,\n    private readonly changeDetector: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.fieldOptions = {\n      counterpartyName: {\n        ...this.defaultConfig.counterpartyName,\n        ...this.options?.fieldsConfig?.counterpartyName,\n      },\n      amount: {\n        ...this.defaultConfig.amount,\n        ...this.options?.fieldsConfig?.amount,\n      },\n      description: {\n        ...this.defaultConfig.description,\n        ...this.options?.fieldsConfig?.description,\n      },\n    };\n    this._addValidators();\n    this.options.helperText = parseString(\n      this.options?.helperText || '',\n      this.options?.maximumAllowedPayments\n    );\n    this.paymentArrayControl = registerFormArray(\n      this.group,\n      this.config.name,\n      this.options.validators\n    );\n    const controls = this.paymentArrayControl.controls;\n    controls.forEach((control) => this.setupItem(control));\n    const len = Math.min(controls.length, this.bufferedItems * 2);\n    for (let i = 0; i < len; i++) {\n      this.addRenderedItem(controls[i], i);\n    }\n\n    this.scrollableElement = this.config.options.containerRef.nativeElement;\n\n    this.paymentArrayControl.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        while (this.paymentArrayControl.length > this._items.length) {\n          const currentIndex = this._items.length;\n          const control = this.paymentArrayControl.at(currentIndex);\n          this.setupItem(control);\n          this.addRenderedItem(control, currentIndex);\n        }\n        this.onScrollChanged();\n      });\n\n    this.viewportRuler\n      .change()\n      .pipe(startWith(null), takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateViewport();\n        this.onScrollChanged();\n      });\n\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.scrollableElement, 'scroll')\n        .pipe(\n          startWith(null),\n          takeUntil(this.destroy$),\n          auditTime(0, SCROLL_SCHEDULER)\n        )\n        .subscribe(() => this.onScrollChanged());\n    });\n  }\n\n  ngOnDestroy() {\n    this.accounts.forEach((account) => account.search$.complete());\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  addAccount() {\n    this.setupItem();\n    addControlToFormArray(this.paymentArrayControl, this.cardConfig);\n\n    const currentIndex = this.paymentArrayControl.length - 1;\n    const control = this.paymentArrayControl.at(currentIndex);\n\n    this.addRenderedItem(control, currentIndex);\n    this.count.emit(this.paymentArrayControl.length);\n    this.onScrollChanged();\n  }\n\n  removeAccount(index: number) {\n    if (this.options.paymentIdList[index]) {\n      this.config.options\n        .deletePayment(index)\n        .pipe(take(1))\n        .subscribe(() => {\n          this.removeAccountAt(index);\n        });\n    } else {\n      this.removeAccountAt(index);\n    }\n  }\n  /**\n   * will return form with given index in form Array\n   *\n   * @param index - form array index\n   */\n  getForm(index: number): FormGroup {\n    return this.paymentArrayControl.at(index) as FormGroup;\n  }\n\n  /**\n   *  method to get the form details.\n   *\n   * @param index form array index\n   * @param name form field\n   */\n  getControl(index: number, name: string): FormControl {\n    return this.paymentArrayControl.at(index).get(name) as FormControl;\n  }\n  /**\n   * patch value on selecting account\n   *\n   * @param event -  the selected data\n   * @param index - form Array index\n   */\n  onSelectAccount(event: any, index: number) {\n    this.getControl(index, 'id')?.patchValue(event.id, { emitEvent: false });\n    this.getControl(index, 'counterpartyName')?.patchValue(event.name);\n    this.getControl(index, 'counterpartyAccountNumber')?.patchValue(\n      event.accountNumber,\n      { emitEvent: false }\n    );\n    this.getControl(index, 'bankBranchCode')?.patchValue(event.bankBranchCode, {\n      emitEvent: false,\n    });\n    this.getControl(index, 'accountType')?.patchValue(event.accountType, {\n      emitEvent: false,\n    });\n    this.getControl(index, 'balance')?.patchValue(event.balance, {\n      emitEvent: false,\n    });\n    this.getControl(index, 'currency')?.patchValue(event.currency, {\n      emitEvent: false,\n    });\n    this.getControl(index, 'counterpartyName')?.markAllAsTouched();\n    this.getControl(index, 'counterpartyName')?.markAsDirty();\n    this.getControl(index, 'counterpartyName')?.updateValueAndValidity();\n    this.getControl(\n      index,\n      'counterpartyAccountNumber'\n    )?.updateValueAndValidity();\n    this.cardBlur(index);\n  }\n\n  /**\n   * Search query will emit search on account selector\n   *\n   * @param query\n   */\n  onSearch(index: number, query: string) {\n    this.accounts[index].search$.next(query);\n    this.search.emit(query);\n  }\n\n  openDescription(index: number) {\n    this._items[index].expanded = true;\n    this.getControl(index, 'description')?.patchValue('', { onlySelf: true });\n    this.onScrollChanged();\n  }\n\n  isExpanded(index: number) {\n    return Boolean(this._items[index] && this._items[index].expanded);\n  }\n\n  /**\n   * will emit call the blur hook if any\n   *\n   * @param index - form index\n   */\n  cardBlur(index: number) {\n    this.lastBlur.itemIndex = index;\n    this.ngZone.runOutsideAngular(() => {\n      this.lastBlur.timeoutId = setTimeout(() => {\n        const form = this.getForm(index);\n        if (form.dirty && form.valid && this.config.options.paymentBlur) {\n          const formValue = form.value;\n          const payment = {\n            creditDebitIndicator: CreditDebitMixedIndicator.CREDIT,\n            counterpartyArrangementId: formValue.id,\n            counterpartyName: formValue.counterpartyName,\n            counterpartyAccountNumber: formValue.counterpartyAccountNumber,\n            counterpartyBankBranchCode: formValue.bankBranchCode,\n            instructedAmount: {\n              amount: formValue.amount,\n              currencyCode: formValue.currency,\n            },\n\n            description: formValue.description,\n          };\n          this.config.options\n            .paymentBlur(payment, index)\n            .pipe(take(1))\n            .subscribe(\n              (response: BatchPaymentsPutResponse) => {\n                form.markAsPristine();\n                this.changeDetector.detectChanges();\n              },\n              (error: ErrorItem | { type: string }) => {\n                if ('message' in error) {\n                  form.setErrors({\n                    error: { name: 'error', message: error.message },\n                  });\n                }\n                this.changeDetector.detectChanges();\n              }\n            );\n        }\n        if (this.options && this.options.hooks && this.options.hooks.onBlur) {\n          this.options.hooks.onBlur(form);\n        }\n      }) as any;\n    });\n  }\n\n  cardFocus(index: number) {\n    if (this.lastBlur.itemIndex === index) {\n      clearTimeout(this.lastBlur.timeoutId);\n    }\n  }\n\n  deleteDescription(index: number) {\n    if (this.getControl(index, 'description')?.value) {\n      this.getControl(index, 'description')?.markAsDirty();\n    }\n    this.getControl(index, 'description')?.patchValue('');\n    this._items[index].expanded = false;\n    this.onScrollChanged();\n  }\n\n  onDropdownOpenChange(index: number, isOpen: boolean) {\n    this._items[index].dropdownOpen = isOpen;\n  }\n\n  isDropdownOpen(index: number) {\n    return this._items[index].dropdownOpen;\n  }\n\n  private addRenderedItem(control: AbstractControl, index: number) {\n    this.viewportItems.push(control);\n    this.changeDetector.detectChanges();\n    this.cacheItemHeight(\n      this.content.nativeElement.children[\n        this.content.nativeElement.children.length - 1\n      ],\n      index\n    );\n  }\n\n  private removeAccountAt(index: number) {\n    this.paymentArrayControl.removeAt(index);\n    this._items.splice(index, 1);\n    this.updateVisibleItems();\n    this.updateDimensions();\n    this.count.emit(this.paymentArrayControl.length);\n  }\n\n  private calculateAverageItemHeight() {\n    if (this._items.length === 0) {\n      return 0;\n    }\n    return Math.ceil(\n      this._items.reduce((prev, curr) => prev + curr.height, 0) /\n        this._items.length\n    );\n  }\n\n  private cacheItemHeight(item: HTMLElement, index: number) {\n    const currentItemHeight = this.getElementSize(item).height;\n    this._items[index].height = currentItemHeight;\n  }\n\n  private firstVisibleItemIndex() {\n    if (this._items.length === 0) {\n      return 0;\n    }\n\n    const scrollTop = this.scrollableElement.scrollTop;\n    const contentScrollPosition = Math.max(\n      0,\n      scrollTop - this.scroll.nativeElement.offsetTop\n    );\n    let index = 0;\n    let remainingScroll = contentScrollPosition - this._items[index].height;\n    while (remainingScroll > 0 && index < this._items.length) {\n      index += 1;\n      remainingScroll -= this._items[index].height;\n    }\n\n    return index;\n  }\n\n  private invalidateVisibleItemsCache() {\n    const children = this.content.nativeElement.children;\n    const itemsLength = this.content.nativeElement.children.length;\n    for (let i = 0; i < itemsLength; ++i) {\n      const internalIndex = this.firstRenderedItemIndex + i;\n      this.cacheItemHeight(children[i], internalIndex);\n    }\n    this.changeDetector.markForCheck();\n  }\n\n  private onScrollChanged() {\n    this.ngZone.runOutsideAngular(() => {\n      requestAnimationFrame(() => {\n        this.invalidateVisibleItemsCache();\n        this.updateVisibleItems();\n        this.updateDimensions();\n      });\n    });\n  }\n\n  private updateViewport() {\n    this.ngZone.runOutsideAngular(() => {\n      requestAnimationFrame(() => {\n        const topOffset = Math.max(\n          0,\n          this.scroll.nativeElement.offsetTop - this.scrollableElement.scrollTop\n        );\n        /** @TODO get bottom offset dynamically */\n        const bottomOffset = 100;\n        this.visibleViewport =\n          this.scrollableElement.clientHeight - topOffset - bottomOffset;\n      });\n    });\n  }\n\n  private updateVisibleItems() {\n    const averageItemHeight = this.calculateAverageItemHeight();\n    if (averageItemHeight > 0) {\n      this.visibleItemsInViewport = Math.round(\n        this.visibleViewport / this.calculateAverageItemHeight()\n      );\n    } else {\n      this.visibleItemsInViewport = 0;\n    }\n    this.firstRenderedItemIndex = Math.max(\n      0,\n      this.firstVisibleItemIndex() - this.bufferedItems\n    );\n    const renderedItemsLength = Math.min(\n      this.visibleItemsInViewport + this.bufferedItems * 2,\n      this.paymentArrayControl.controls.length\n    );\n    this.viewportItems = this.paymentArrayControl.controls.slice(\n      this.firstRenderedItemIndex,\n      this.firstRenderedItemIndex + renderedItemsLength\n    );\n    this.changeDetector.markForCheck();\n    this.changeDetector.detectChanges();\n  }\n\n  private updateDimensions() {\n    const contentHeight = this.virtualViewportHeight();\n    const padding = this._items\n      .slice(0, this.firstRenderedItemIndex)\n      .reduce((prev, curr) => prev + curr.height, 0);\n\n    this.renderer.setStyle(\n      this.padding.nativeElement,\n      'transform',\n      `scaleY(${contentHeight})`\n    );\n    this.renderer.setStyle(\n      this.scroll.nativeElement,\n      'height',\n      `${contentHeight}px`\n    );\n    this.renderer.setStyle(\n      this.content.nativeElement,\n      'transform',\n      `translateY(${padding}px)`\n    );\n    this.changeDetector.markForCheck();\n    this.changeDetector.detectChanges();\n  }\n\n  private getElementSize(element: HTMLElement): ClientRect {\n    const result = element.getBoundingClientRect();\n    const styles: any = getComputedStyle(element);\n    const marginTop = parseInt(styles['margin-top'], 10) || 0;\n    const marginBottom = parseInt(styles['margin-bottom'], 10) || 0;\n    const marginLeft = parseInt(styles['margin-left'], 10) || 0;\n    const marginRight = parseInt(styles['margin-right'], 10) || 0;\n\n    return {\n      top: result.top + marginTop,\n      bottom: result.bottom + marginBottom,\n      left: result.left + marginLeft,\n      right: result.right + marginRight,\n      width: result.width + marginLeft + marginRight,\n      height: result.height + marginTop + marginBottom,\n    } as ClientRect;\n  }\n\n  private virtualViewportHeight() {\n    return this._items.reduce((prev, curr) => prev + curr.height, 0);\n  }\n\n  private _addValidators() {\n    this.cardConfig.forEach((field) => {\n      const name = field.name as keyof MultiPaymentCard;\n      if (this.fieldOptions[name]) {\n        field.validators = (\n          this.fieldOptions[name] as PaymentFormFieldOptions\n        ).validators;\n      }\n    });\n  }\n\n  private setupItem(control?: AbstractControl) {\n    const expanded = control\n      ? control.get('description')?.value?.trim()\n      : false;\n    this._items.push({\n      height: 0,\n      expanded,\n      dropdownOpen: false,\n    });\n    this.accounts.push(this.config.options.observableAccountsFactory());\n  }\n}\n","<div\n  class=\"form-group bb-dynamic-input\"\n  [formGroup]=\"group\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <div class=\"bb-block bb-block--lg\">\n    <div *ngIf=\"options?.label\" class=\"bb-heading-3\">\n      {{ options?.label }}\n    </div>\n    <div\n      *ngIf=\"options?.helperText\"\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    >\n      {{ options?.helperText }}\n    </div>\n  </div>\n\n  <div\n    class=\"row bb-block bb-block--md bb-subheader bb-subheader--regular bb-text-bold\"\n    *ngIf=\"paymentArrayControl.controls.length\"\n  >\n    <span class=\"col-6\">{{ fieldOptions?.counterpartyName?.header }}</span>\n    <span\n      class=\"col-4 d-none d-md-block\"\n      i18n=\"@@multipayment-card-column-header-ammount-title.label\"\n      >Amount (Credit)</span\n    >\n  </div>\n\n  <div #scroll class=\"virtual-scroll__container\">\n    <div #padding class=\"virtual-scroll__padding\"></div>\n    <div #content class=\"virtual-scroll__content\">\n      <ng-container [formArrayName]=\"hostRef.config?.name\">\n        <div\n          *ngFor=\"let group of viewportItems; let i = index\"\n          class=\"bb-block bb-block--md\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"\n              cardTemplate;\n              context: { group: group, index: firstRenderedItemIndex + i }\n            \"\n          ></ng-container>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n  <div\n    class=\"text-center\"\n    *ngIf=\"\n      paymentArrayControl.controls.length < options?.maximumAllowedPayments\n    \"\n    data-role=\"add-account-card\"\n    [ngClass]=\"{\n      'border border-danger':\n        paymentArrayControl.controls.length === 0 && paymentArrayControl.touched\n    }\"\n  >\n    <button\n      bbButton\n      color=\"link\"\n      buttonSize=\"md\"\n      [attr.data-role]=\"'btn-icon-link-md-def'\"\n      (click)=\"addAccount()\"\n      class=\"m-2\"\n    >\n      <bb-icon-ui color=\"link\" name=\"add\" size=\"md\" cropped></bb-icon-ui>\n      <span\n        data-role=\"add-account\"\n        i18n=\"@@multipayment-card-button-text-add-account.text\"\n        >Add account</span\n      >\n    </button>\n  </div>\n\n  <bb-payord-validation-message\n    [control]=\"hostRef.paymentArrayControl\"\n    [validationMessages]=\"options.validationMessages\"\n    [hideGeneric]=\"true\"\n  ></bb-payord-validation-message>\n\n  <ng-template #cardTemplate let-group=\"group\" let-index=\"index\">\n    <div\n      class=\"card card-sm\"\n      [formGroup]=\"getForm(index)\"\n      (focusout)=\"cardBlur(index)\"\n      (focusin)=\"cardFocus(index)\"\n    >\n      <div class=\"card-body\">\n        <div\n          class=\"bb-block\"\n          [ngClass]=\"{ 'bb-block--sm': getForm(index)?.errors?.error }\"\n        >\n          <div\n            class=\"bb-stack bb-block\"\n            [ngClass]=\"{\n              'bb-block--sm':\n                isExpanded(index) &&\n                !getControl(index, 'counterpartyName')?.value,\n              'bb-block--md':\n                isExpanded(index) &&\n                getControl(index, 'counterpartyName')?.value\n            }\"\n          >\n            <div class=\"bb-stack__item bb-stack__item--fill\">\n              <div class=\"row\">\n                <div class=\"col-md-6 bb-block--md-md-down\">\n                  <bb-beneficiary-selector\n                    [selectedItem]=\"{\n                      name: getControl(index, 'counterpartyName')?.value\n                    }\"\n                    [placeholder]=\"fieldOptions?.counterpartyName?.placeholder\"\n                    [dropdownIcon]=\"\n                      fieldOptions?.counterpartyName?.dropdownIcon\n                    \"\n                    [aria-label]=\"fieldOptions?.counterpartyName?.ariaLabel\"\n                    [title]=\"fieldOptions?.counterpartyName?.label\"\n                    [debounceTime]=\"\n                      fieldOptions?.counterpartyName?.debounceTime\n                    \"\n                    [hasError]=\"\n                      getControl(index, 'counterpartyName')?.touched &&\n                      getControl(index, 'counterpartyName')?.invalid\n                    \"\n                    [helperText]=\"fieldOptions?.counterpartyName?.helperText\"\n                    [selectedItemTemplate]=\"selectedItemtemplate\"\n                    [listItemTemplate]=\"listItemtemplate\"\n                    (searchValue)=\"onSearch(index, $event)\"\n                    (selectedAccount)=\"onSelectAccount($event, index)\"\n                    (searchBlur)=\"\n                      getControl(index, 'counterpartyName').markAsTouched()\n                    \"\n                    (dropdownOpenChange)=\"onDropdownOpenChange(index, $event)\"\n                    [clearSearchOnselect]=\"true\"\n                    #beneficiarySelector\n                  ></bb-beneficiary-selector>\n                  <bb-payord-validation-message\n                    [control]=\"getControl(index, 'counterpartyName')\"\n                    [validationMessages]=\"\n                      fieldOptions?.counterpartyName?.validationMessages\n                    \"\n                    [label]=\"\n                      fieldOptions?.counterpartyName?.validationMessageLabel\n                    \"\n                  ></bb-payord-validation-message>\n                </div>\n                <div class=\"col-md-4\">\n                  <div class=\"bb-block bb-block--sm\">\n                    <bb-amount-input-ui\n                      formControlName=\"amount\"\n                      [mapCurrency]=\"false\"\n                      [currency]=\"fieldOptions?.amount?.currency\"\n                      [required]=\"true\"\n                      [aria-describedby]=\"\n                        'compact-amount-error-message' + index\n                      \"\n                      [maxLength]=\"fieldOptions?.amount?.maxLength\"\n                      [placeholder]=\"fieldOptions?.amount?.placeholder\"\n                    >\n                    </bb-amount-input-ui>\n                    <bb-payord-validation-message\n                      [control]=\"getControl(index, 'amount')\"\n                      [validationMessages]=\"\n                        fieldOptions?.amount?.validationMessages\n                      \"\n                      [label]=\"fieldOptions?.amount?.validationMessageLabel\"\n                    ></bb-payord-validation-message>\n                  </div>\n                  <span\n                    class=\"bb-text-support bb-subtitle\"\n                    [hidden]=\"isExpanded(index)\"\n                  >\n                    <ng-container>Add</ng-container>\n                    <a\n                      role=\"button\"\n                      class=\"ml-1\"\n                      (click)=\"openDescription(index)\"\n                    >\n                      <u class=\"bb-text-support\" data-role=\"description-link\"\n                        >description</u\n                      >\n                    </a>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--align-top d-print-none\"\n            >\n              <button\n                bbButton\n                buttonSize=\"sm\"\n                circle=\"true\"\n                color=\"link-dark\"\n                data-role=\"close-to-account\"\n                (click)=\"removeAccount(index)\"\n              >\n                <span\n                  class=\"sr-only\"\n                  id=\"closeBtn\"\n                  aria-label=\"remove payment card\"\n                  i18n-aria-label=\"\n                    Remove Payment Card@@multi-payment-card.details.remove\"\n                >\n                  Remove account\n                </span>\n                <bb-icon-ui name=\"times\"></bb-icon-ui>\n              </button>\n            </div>\n          </div>\n\n          <div\n            class=\"card card-sm card--highlight card--shadowless\"\n            [hidden]=\"!isExpanded(index)\"\n          >\n            <div class=\"card-body\">\n              <label class=\"bb-label\">\n                {{ fieldOptions?.description?.title }}\n                <span\n                  class=\"bb-text-support bb-text-default\"\n                  i18n=\"@@multipayment-card.description.label.optional\"\n                  >(optional)</span\n                >\n              </label>\n              <div\n                class=\"bb-stack bb-stack--align-top bb-stack--density-sm\"\n                data-role=\"description-input\"\n              >\n                <bb-textarea-ui\n                  formControlName=\"description\"\n                  [placeholder]=\"fieldOptions?.description?.placeholder\"\n                  [showCharCounter]=\"true\"\n                  [minLength]=\"fieldOptions?.description?.minLength\"\n                  [maxLength]=\"fieldOptions?.description?.maxLength\"\n                  [rows]=\"3\"\n                  [cols]=\"50\"\n                  wrap=\"hard\"\n                  class=\"bb-stack__item\"\n                >\n                </bb-textarea-ui>\n                <button\n                  bbButton\n                  buttonSize=\"sm\"\n                  class=\"bb-stack__item\"\n                  circle=\"true\"\n                  color=\"link-dark\"\n                  (click)=\"deleteDescription(index)\"\n                >\n                  <bb-icon-ui\n                    name=\"delete\"\n                    data-role=\"delete-description\"\n                    color=\"secondary-lightest\"\n                  ></bb-icon-ui>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <ng-container *ngIf=\"getForm(index)?.errors?.error\">\n          <bb-payord-validation-message\n            [control]=\"getForm(index)\"\n            [validationMessages]=\"[getForm(index)?.errors?.error]\"\n          ></bb-payord-validation-message>\n        </ng-container>\n      </div>\n    </div>\n\n    <ng-template #listItemtemplate>\n      <ng-container *ngIf=\"isDropdownOpen(index)\" class=\"bb-product-selector\">\n        <div\n          *ngIf=\"\n            accounts[index] && (accounts[index].items$ | async);\n            let accounts;\n            else: loadingAccounts\n          \"\n          class=\"pre-scrollable\"\n          style=\"z-index: 1040\"\n        >\n          <bb-beneficiary-selector-account\n            *ngFor=\"let account of accounts\"\n            [account]=\"account\"\n            size=\"sm\"\n            class=\"px-1 border-bottom bb-product-selector__dropdown-item\"\n            [class.selected]=\"getControl(index, 'id').value === account.id\"\n            ngbDropdownItem\n            (selectedAccount)=\"onSelectAccount($event, index)\"\n          >\n          </bb-beneficiary-selector-account>\n        </div>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #loadingAccounts>\n      <bb-loading-indicator-ui></bb-loading-indicator-ui>\n    </ng-template>\n\n    <ng-template #selectedItemtemplate>\n      <div\n        class=\"rounded border p-3\"\n        [ngClass]=\"{\n          'border-danger': getControl(index, 'counterpartyName').invalid\n        }\"\n      >\n        <div role=\"menuitem\" class=\"\">\n          <div class=\"bb-stack\">\n            <div class=\"bb-stack__item\" data-role=\"selected-to-account\">\n              <span class=\"bb-text-bold\">{{\n                getControl(index, 'counterpartyName')?.value\n              }}</span>\n            </div>\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <bb-icon-ui\n                name=\"perm-contact-calendar\"\n                color=\"dark\"\n              ></bb-icon-ui>\n            </div>\n          </div>\n          <div class=\"bb-subtitle bb-text-support break-word\">\n            <span *ngIf=\"getControl(index, 'bankBranchCode')?.value\"\n              >{{ getControl(index, 'bankBranchCode')?.value }} /</span\n            >\n            {{ getControl(index, 'counterpartyAccountNumber')?.value }}\n          </div>\n          <div class=\"text-right\">\n            <bb-amount-ui\n              [amount]=\"getControl(index, 'balance')?.value\"\n              [currency]=\"getControl(index, 'currency')?.value\"\n              [mapCurrency]=\"false\"\n            ></bb-amount-ui>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\nimport {\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\n@Component({\n  selector: 'bb-payord-credit-debit-selector',\n  templateUrl: './payord-credit-debit-selector.html',\n})\nexport class PayordCreditDebitSelectorComponent implements OnInit {\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  control!: AbstractControl;\n\n  constructor(readonly deprecationsService: DeprecationsService) {\n    /**\n     * @TODO Remove this component in 3.11.0\n     */\n    deprecationsService.logDeprecatedFeature(`\n      bb-payord-credit-debit-selector has been deprecated since 3.10.0, it will be removed in 3.11.0\\n\n      To define credit/debit options use \\`creditDebitOptions\\` property from \\`ManualBatchTypeConfig\\`\n      type defined in \\`@backbase/business-ang/batch\\`\n    `);\n  }\n\n  ngOnInit() {\n    this.control = registerFormControl(\n      this.group,\n      this.config?.name,\n      this.options?.validators,\n      this.options?.asyncValidators,\n      this.options?.defaultValue ||\n        (this.options?.choices && this.options.choices[0]),\n      this.config\n    );\n  }\n}\n","<div class=\"bb-block bb-block--lg\">\n  <div class=\"bb-block bb-block--sm\">\n    <div *ngIf=\"options?.label\" class=\"bb-heading-3\">{{options?.label}}</div>\n    <div\n      *ngIf=\"options?.helperText\"\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n    >\n      {{options?.helperText}}\n    </div>\n  </div>\n  <bb-payord-card-menu [items]=\"options?.choices\"></bb-payord-card-menu>\n</div>\n","import { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport { Component, OnInit, OnDestroy, Inject, LOCALE_ID } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport {\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentFormFieldHooks,\n  PaymentBaseFields,\n  ProductKinds,\n  AmountOption,\n  BaseObject,\n  RemittanceInfoFields,\n  InternalAccountFormItem,\n} from '@backbase/payment-orders-ang';\nimport { StateService, PaymentState } from '@backbase/payment-orders-ang';\nimport BigNumber from 'bignumber.js';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  pluck,\n  tap,\n  startWith,\n  distinctUntilChanged,\n  filter,\n} from 'rxjs/operators';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { mapLocalize } from '../../helpers/generic-utils';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { ActivatableFormField } from '../../models/activatable-form-field';\nimport { VisibilityService } from '../../services/visibility.service';\n\n@Component({\n  selector: 'bb-internal-amount-options',\n  templateUrl: './payord-internal-amount-options.component.html',\n})\nexport class PayordInternalAmountOptionsComponent\n  extends ActivatableFormField\n  implements OnInit, PaymentFormField, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  toAccountProduct$!: Observable<InternalAccountFormItem> | undefined;\n  toAccountDefaultRecord!: ProductSummaryItem | undefined;\n  productKinds = ProductKinds;\n  remittanceInfoFields = RemittanceInfoFields;\n  amountOptions?: AmountOption[];\n  customAmount!: string;\n  touched = false;\n  readonly id = `bb-compact-amount-${new Date().getTime()}`;\n  private subscription$?: Subscription;\n\n  /**\n   * The format used for bignumber;\n   */\n  private readonly format: BigNumber.Format;\n  private readonly groupSeparator: string;\n  private readonly decimalSeparator: string;\n\n  constructor(\n    private readonly stateService: StateService,\n    visibilityService: VisibilityService,\n    @Inject(LOCALE_ID) private readonly locale: string\n  ) {\n    super(visibilityService);\n    this.groupSeparator = getLocaleNumberSymbol(\n      this.locale,\n      NumberSymbol.CurrencyGroup\n    );\n    this.decimalSeparator = getLocaleNumberSymbol(\n      this.locale,\n      NumberSymbol.CurrencyDecimal\n    );\n    this.format = {\n      groupSeparator: this.groupSeparator,\n      decimalSeparator: this.decimalSeparator,\n      groupSize: 3,\n    };\n  }\n  ngOnInit() {\n    this.registerFields();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n    this.control = this.group.controls[this.config.name];\n    this.listenAmountOptionChanges();\n\n    this.toAccountProduct$ = this.group.parent\n      ?.get(PaymentBaseFields.counterparty)\n      ?.valueChanges.pipe(\n        startWith(\n          this.group.parent?.get(PaymentBaseFields.counterparty)?.value\n        ),\n        pluck('accountData'),\n        filter((account) => !!account),\n        distinctUntilChanged((prev, curr) => prev.id === curr.id),\n        tap((account: InternalAccountFormItem) => {\n          const optionValue = this.control?.value;\n          if (optionValue || optionValue === 0) {\n            if (this.stateService.currentState !== PaymentState.EDIT) {\n              this.control?.reset();\n              this.group.controls[\n                RemittanceInfoFields.amountOptionLabel\n              ].reset();\n              this.group.controls[\n                RemittanceInfoFields.amountCurrencyGroup\n              ].reset();\n              this.group.controls['scheduleFrequency'].reset();\n              this.group.controls['showFrequencySwitch'].reset();\n            }\n            this.customAmount = new BigNumber(\n              this.group.controls[\n                RemittanceInfoFields.amountCurrencyGroup\n              ].value?.amount\n            ).toFormat(this.format);\n          }\n\n          this.toggleDependants();\n          this.toAccountDefaultRecord = account.defaultRecord;\n          this.setAmountOptions(account);\n          this.stateService.setPaymentState(PaymentState.INITIAL);\n\n          if (this.options.noBalanceText) {\n            if (this.isAmountOptionsZero(account) && this.control) {\n              this.group.removeControl(this.config.name);\n            } else if (!this.control) {\n              registerFormControl(\n                this.group,\n                this.config.name,\n                [Validators.required],\n                this.options.asyncValidators\n              );\n              this.listenAmountOptionChanges();\n            }\n          }\n\n          if (account.currency) {\n            this.group\n              .get(\n                `${RemittanceInfoFields.amountCurrencyGroup}.${RemittanceInfoFields.currency}`\n              )\n              ?.patchValue(account.currency);\n          }\n        })\n      );\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n    this.subscription$?.unsubscribe();\n  }\n\n  registerFields() {\n    registerFormControl(this.group, RemittanceInfoFields.amountOptionLabel);\n    registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators\n    );\n    registerFormControl(this.group, 'scheduleFrequency');\n    registerFormControl(this.group, 'showFrequencySwitch');\n  }\n\n  /**\n   * Method to handle selecting amount option\n   *\n   * @param [index] index of selected amount option\n   */\n  amountOptionChange(index: number) {\n    const option = this.amountOptions?.[index] || <AmountOption>{};\n    const label = option.label;\n    const currency = this.toAccountDefaultRecord?.currency;\n    const amount = (this.toAccountDefaultRecord as BaseObject<any>)?.[\n      option.amountApiField || ''\n    ]?.toString();\n\n    if (option.hasCustomAmountInput) {\n      this.group.controls[RemittanceInfoFields.amountCurrencyGroup].reset({\n        amount: '',\n        currency,\n      });\n      this.group.controls[RemittanceInfoFields.amountOptionLabel].patchValue(\n        label\n      );\n      this.group.controls['scheduleFrequency'].patchValue(\n        option.scheduleFrequency\n      );\n      this.group.controls['showFrequencySwitch'].patchValue(\n        option.showFrequencySwitch\n      );\n    }\n\n    if (amount) {\n      this.group.patchValue({\n        [RemittanceInfoFields.amountCurrencyGroup]: { amount, currency },\n        [RemittanceInfoFields.amountOptionLabel]: label,\n        scheduleFrequency: option.scheduleFrequency,\n        showFrequencySwitch: option.showFrequencySwitch,\n      });\n    }\n    this.toggleDependants();\n  }\n\n  /**\n   * Set amount options depend on selected product\n   *\n   * @param [product] selected account in counterParty product selector\n   */\n  setAmountOptions(product: InternalAccountFormItem): void {\n    const { creditCard, loan } = this.options?.amountOptions || {};\n\n    switch (product.productKindName) {\n      case ProductKinds.creditCard:\n        this.amountOptions = creditCard?.map(mapLocalize) || [];\n        break;\n      case ProductKinds.loanAccount:\n        this.amountOptions = loan?.map(mapLocalize) || [];\n        break;\n      default:\n        this.amountOptions = [];\n    }\n  }\n\n  isAmountOptionsZero(account: InternalAccountFormItem) {\n    if (!this.amountOptions?.length || !account) {\n      return;\n    }\n    return this.amountOptions?.every((option: AmountOption) =>\n      option?.amountApiField\n        ? Number(\n            (account.defaultRecord as BaseObject<any>)?.[option.amountApiField]\n          ) === 0\n        : true\n    );\n  }\n\n  listenAmountOptionChanges() {\n    this.subscription$ = this.control?.valueChanges\n      .pipe(\n        startWith(this.control?.value),\n        distinctUntilChanged(),\n        filter(\n          (value) =>\n            (value || value === 0) &&\n            this.stateService.currentState !== PaymentState.EDIT\n        )\n      )\n      .subscribe(this.amountOptionChange.bind(this));\n  }\n}\n","<ng-container *ngIf=\"toAccountProduct$ | async as product\">\n  <fieldset\n    class=\"bb-fieldset bb-amount-options\"\n    [ngClass]=\"options?.cssClasses\"\n    [formGroup]=\"group\"\n    *ngIf=\"!config?.hidden\"\n  >\n    <div\n      class=\"bb-block bb-block--md\"\n      *ngIf=\"\n        !(options?.noBalanceText && isAmountOptionsZero(product));\n        else noBalanceMessage\n      \"\n    >\n      <bb-payord-validation-message\n        id=\"amount-option-error-message\"\n        [control]=\"group.get(config.name)\"\n        [validationMessages]=\"options?.validationMessages\"\n        class=\"d-block bb-block bb-block--md\"\n      ></bb-payord-validation-message>\n      <bb-input-radio-group-ui\n        [formControlName]=\"config.name\"\n        [aria-describedby]=\"'amount-option-error-message'\"\n        [preselect]=\"options?.preselect\"\n        [horizontal]=\"options?.horizontal\"\n      >\n        <bb-input-radio-ui\n          *ngFor=\"let option of amountOptions; index as i\"\n          aria-labelledby=\"payord-amount-options-amount-{{\n            i\n          }} payord-amount-options-label-{{ i }}\"\n          aria-describedby=\"payord-amount-options-description-{{ i }}\"\n          [labelTemplate]=\"\n            option.hasCustomAmountInput ? otherTemplate : labelTemplate\n          \"\n          [labelTemplateContext]=\"[option, product, i]\"\n          [value]=\"i\"\n        ></bb-input-radio-ui>\n      </bb-input-radio-group-ui>\n    </div>\n    <ng-template #noBalanceMessage>\n      <div class=\"bb-block bb-block--md bb-amount-options__no-balance-text\">\n        {{ options?.noBalanceText }}\n      </div>\n    </ng-template>\n  </fieldset>\n</ng-container>\n\n<ng-template #labelTemplate let-context=\"labelTemplateContext\">\n  <div\n    class=\"bb-stack bb-stack--wrap\"\n    [ngClass]=\"options?.amountOptions?.cssClasses\"\n  >\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div attr.id=\"payord-amount-options-label-{{ context[2] }}\">\n        {{ context[0].label }}\n      </div>\n      <div *ngIf=\"context[0].description\">\n        <span\n          class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n          attr.id=\"payord-amount-options-description-{{ context[2] }}\"\n        >\n          {{ context[0].description }}\n        </span>\n      </div>\n    </div>\n    <div class=\"bb-stack__item bb-stack__break--sm-down\">\n      <bb-amount-ui\n        attr.id=\"payord-amount-options-amount-{{ context[2] }}\"\n        [amount]=\"context[1].defaultRecord[context[0].amountApiField]\"\n        [currency]=\"context[1].currency\"\n        [mapCurrency]=\"options?.mapCurrency !== false\"\n        [bbHighlight]=\"options?.highlight\"\n        [abbreviate]=\"options?.abbreviate\"\n        [showPlusSign]=\"options?.showPlusSign\"\n        [trailingZeroes]=\"options?.trailingZeroes !== false\"\n      ></bb-amount-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #otherTemplate let-context=\"labelTemplateContext\">\n  <div\n    class=\"bb-amount-input__field--large bb-form-field bb-form-field--md\"\n    [ngClass]=\"options?.amountOptions?.cssClasses\"\n    [class.was-validated]=\"\n      touched &&\n      group.controls[remittanceInfoFields.amountCurrencyGroup].invalid\n    \"\n  >\n    <div>{{ context[0].label }}</div>\n    <div *ngIf=\"context[0].description\" class=\"bb-block bb-block--sm\">\n      <span\n        class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n      >\n        {{ context[0].description }}\n      </span>\n    </div>\n    <ng-container *ngIf=\"group.controls[config.name]?.value === context[2]\">\n      <div\n        class=\"position-relative\"\n        [formGroup]=\"group.controls[remittanceInfoFields.amountCurrencyGroup]\"\n      >\n        <bb-amount-input-ui\n          [formControlName]=\"remittanceInfoFields.amount\"\n          (focusout)=\"touched = true\"\n          [mapCurrency]=\"options?.showCurrencySymbol !== false\"\n          [wrapperClasses]=\"\n            options.wrapperClasses || 'bb-amount-input__field--large'\n          \"\n          [currency]=\"context[1].currency\"\n          [required]=\"true\"\n          [autoDecimal]=\"options.autoDecimal\"\n          [aria-describedby]=\"'compact-amount-error-message'\"\n          [placeholder]=\"options?.placeholder || '0.00'\"\n          [maxLength]=\"options?.maxLength\"\n        ></bb-amount-input-ui>\n      </div>\n      <bb-payord-validation-message\n        [id]=\"'compact-amount-error-message'\"\n        [control]=\"group.controls[remittanceInfoFields.amountCurrencyGroup]\"\n        [validationMessages]=\"options?.validationMessages\"\n      ></bb-payord-validation-message>\n    </ng-container>\n  </div>\n</ng-template>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  OnDestroy,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  Hideable,\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n  PaymentBaseFields,\n  RemittanceInfoFields,\n} from '@backbase/payment-orders-ang';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-header-ui',\n  templateUrl: './payord-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PayordHeaderComponent implements OnInit, OnDestroy {\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  headerAddition$?: Observable<string>;\n\n  ngOnInit() {\n    const remittanceInfoForm = this.group.parent?.get(\n      PaymentBaseFields.remittanceInfo\n    );\n    this.headerAddition$ = remittanceInfoForm?.valueChanges.pipe(\n      pluck(RemittanceInfoFields.amountOptionLabel)\n    );\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div [ngClass]=\"options?.cssClasses\" *ngIf=\"!config?.hidden\">\n  <div class=\"bb-stack\">\n    <bb-header-ui\n      [headingType]=\"options.headingType\"\n      [heading]=\"options.heading\"\n      [headingClasses]=\"options?.headingClasses\"\n    >\n    </bb-header-ui>\n    <span\n      class=\"bb-text-support bb-highlight bb-highlight--regular\"\n      *ngIf=\"headerAddition$ | async as headerAddition\"\n    >\n      &nbsp;- {{ headerAddition }}\n    </span>\n  </div>\n  <hr *ngIf=\"options?.separatorLine\" class=\"bb-schedule-header__sepatator\" />\n</div>\n","import { ElementRef } from '@angular/core';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport {\n  PaymentFormField,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentFormFieldHooks,\n  RemittanceInfoFields,\n  focusChildElement,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-purpose-of-payment',\n  templateUrl: './payord-purpose-of-payment.component.html',\n})\nexport class PayordPurposeOfPaymentComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  options!: PaymentFormFieldOptions;\n  control!: AbstractControl;\n\n  constructor(private readonly elRef: ElementRef<HTMLElement>) {}\n\n  ngOnInit() {\n    this.control =\n      this.group.get(RemittanceInfoFields.purposeOfPayment) ||\n      registerFormControl(\n        this.group,\n        this.config.name,\n        this.options.validators,\n        this.options.asyncValidators,\n        this.options.defaultValue,\n        this.config\n      );\n\n    this.options.isCollapsed = this.control.value\n      ? false\n      : this.options.isCollapsed === undefined\n      ? true\n      : this.options.isCollapsed;\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  expand() {\n    this.options.isCollapsed = false;\n    focusChildElement('.form-control', this.elRef.nativeElement);\n  }\n\n  selectPurpose(purpose: string) {\n    this.control.setValue(purpose);\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<ng-container\n  *ngIf=\"control?.value || !options?.isCollapsed; else collapsedTmpl\"\n>\n  <div\n    class=\"bb-dynamic-input form-group\"\n    [formGroup]=\"group\"\n    [ngClass]=\"options?.cssClasses\"\n  >\n    <div [hidden]=\"config?.hidden\" [attr.aria-hidden]=\"config?.hidden\">\n      <ng-container *ngIf=\"!options?.purposes || !options?.purposes.length\">\n        <label\n          class=\"bb-dynamic-input__label\"\n          data-role=\"purpose-of-payment-label\"\n          [id]=\"inputEl?.id + '__label'\"\n          [for]=\"inputEl?.id\"\n          [textContent]=\"options?.label || ''\"\n        ></label>\n        <span\n          class=\"bb-dynamic-input__helper-text bb-text-support\"\n          data-role=\"purpose-of-payment-optional-label\"\n          *ngIf=\"options?.isOptional && options?.helperText\"\n          [id]=\"inputEl?.id + '__desc'\"\n          [textContent]=\"options?.helperText\"\n        >\n        </span>\n\n        <bb-input-text-ui\n          #inputEl\n          [formControlName]=\"config.name\"\n          [attr.disabled]=\"options?.disabled\"\n          [minLength]=\"options?.minLength\"\n          [maxLength]=\"options?.maxLength\"\n          [showCharCounter]=\"options?.showCharCounter\"\n          [attr.id]=\"options?.id\"\n          [placeholder]=\"options?.placeholder || ''\"\n          [autocomplete]=\"options?.autoComplete\"\n          [attr.autofocus]=\"options?.autofocus\"\n          [attr.readonly]=\"options?.readonly\"\n          [aria-describedby]=\"descElem?.id\"\n          data-role=\"purpose-of-payment-selector\"\n        ></bb-input-text-ui>\n\n        <div\n          #descElem\n          class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n          [attr.aria-hidden]=\"!options?.description\"\n          [hidden]=\"!options?.description\"\n          [id]=\"inputEl?.id + '__desc'\"\n          [textContent]=\"options?.description || ''\"\n        ></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"options?.purposes?.length\">\n        <bb-select-purpose-dropdown\n          [formControlName]=\"config?.name\"\n          [label]=\"options?.label\"\n          [purposes]=\"options?.purposes\"\n          [isOptional]=\"options?.isOptional\"\n          [helperText]=\"options?.helperText\"\n          [placeholder]=\"options?.placeholder\"\n          [searchPlaceholder]=\"options?.searchPlaceholder\"\n          [dropdownIcon]=\"options?.dropdownIcon\"\n          [selectedPurpose]=\"control.value\"\n          (selectPurpose)=\"selectPurpose($event)\"\n          data-role=\"purpose-of-payment-selector-dropdown\"\n        ></bb-select-purpose-dropdown>\n      </ng-container>\n\n      <bb-payord-validation-message\n        [control]=\"group?.controls[config.name]\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label\"\n      ></bb-payord-validation-message>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #collapsedTmpl>\n  <span\n    class=\"bb-dynamic-input__collapse-btn-container\"\n    [hidden]=\"config?.hidden\"\n    [attr.aria-hidden]=\"config?.hidden\"\n  >\n    <button\n      class=\"bb-dynamic-input__collapse-btn\"\n      data-role=\"purpose-of-payment-btn\"\n      bbButton\n      [color]=\"options?.collapseOptions?.btnColor || 'link'\"\n      [buttonSize]=\"options?.collapseOptions?.btnSize\"\n      (click)=\"expand()\"\n    >\n      <bb-icon-ui\n        class=\"bb-dynamic-input__collapse-btn-icon mr-2\"\n        *ngIf=\"!options?.collapseOptions?.hideIcon\"\n        [name]=\"options?.collapseOptions?.icon || 'add'\"\n        [size]=\"options?.collapseOptions?.iconSize\"\n      >\n      </bb-icon-ui>\n      <span class=\"bb-dynamic-input__collapse-btn-label\">\n        {{ options?.collapseOptions?.label || options?.label }}\n      </span>\n    </button>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n    ></bb-payord-validation-message>\n  </span>\n</ng-template>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n} from '@backbase/payment-orders-ang';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-alert',\n  templateUrl: './payord-alert.component.html',\n})\nexport class PayordAlertComponent implements OnInit, OnDestroy {\n  /**\n   * Form config\n   */\n  config!: PaymentFormFieldConfig;\n\n  /**\n   * Form group\n   */\n  group!: FormGroup;\n\n  /**\n   * Form field options\n   */\n  options!: PaymentFormFieldOptions;\n\n  /**\n   * Initializes the component.\n   *\n   * @returns\n   */\n  ngOnInit() {\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  /**\n   * Cleanups just before Angular destroys the component.\n   *\n   * @returns\n   */\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<ng-container *ngIf=\"!config?.hidden\">\n  <div [ngClass]=\"options?.cssClasses\" role=\"alert\">\n    <bb-alert-ui\n      *ngIf=\"options?.title && options?.modifier\"\n      [title]=\"options?.title\"\n      [modifier]=\"options?.modifier\"\n      [dismissible]=\"options?.dismissible\"\n    >\n      <p class=\"bb-block bb-block--no-margin\">{{ options?.description }}</p>\n    </bb-alert-ui>\n  </div>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n  PaymentFormFieldOptions,\n  ScheduleFields,\n} from '@backbase/payment-orders-ang';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-schedule-switch-ui',\n  templateUrl: './payord-schedule-switch.component.html',\n})\nexport class PayordScheduleSwitchComponent implements OnInit, OnDestroy {\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n  private destroy$ = new Subject();\n  readonly id = new Date().getTime();\n\n  ngOnInit() {\n    registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue,\n      this.config\n    );\n    registerFormControl(this.group, ScheduleFields.frequency);\n    registerFormControl(this.group, ScheduleFields.scheduleInfo);\n\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n    this.setValue();\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private setValue() {\n    // listen changes to reset value before hiding this component\n    this.group.controls[this.config.name]?.valueChanges\n      .pipe(distinctUntilChanged(), takeUntil(this.destroy$))\n      .subscribe((switchValue) => {\n        // the condition is added to avoid unnecessary subscriptions when the component is hidden\n        if (!this.config.hidden) {\n          const freqValue = switchValue\n            ? this.options.values?.on\n            : this.options.values?.off;\n          const infoValue = switchValue ? this.options.description : undefined;\n          this.group.controls[ScheduleFields.frequency]?.patchValue(freqValue);\n          this.group.controls[ScheduleFields.scheduleInfo]?.patchValue(\n            infoValue\n          );\n        }\n      });\n  }\n}\n","<ng-container *ngIf=\"!config?.hidden\">\n  <div\n    class=\"form-group bb-dynamic-input bb-schedule-switch\"\n    [formGroup]=\"group\"\n    [ngClass]=\"options?.cssClasses\"\n  >\n    <div class=\"bb-inline-stack bb-stack--align-top\">\n      <div class=\"bb-inline-stack__item--spacing-md\">\n        <bb-switch-ui\n          [id]=\"'bb-payord-schedule-switch-' + id\"\n          [formControlName]=\"config.name\"\n        >\n        </bb-switch-ui>\n      </div>\n      <div>\n        <div class=\"b-block bb-block--xs bb-stack bb-schedule-switch__label\">\n          <label\n            [attr.for]=\"'bb-payord-schedule-switch-' + id\"\n            *ngIf=\"options?.label\"\n            class=\"bb-stack__item bb-stack__item--spacing-xs bb-block bb-block--no-margin\"\n            >{{ options?.label }}</label\n          >\n          <span\n            [bbTooltip]=\"options?.tooltipMessage\"\n            placement=\"bottom\"\n            [triggers]=\"'hover'\"\n          >\n            <bb-icon-ui\n              name=\"info\"\n              color=\"secondary\"\n              size=\"sm\"\n              class=\"\"\n            ></bb-icon-ui>\n          </span>\n        </div>\n        <div\n          class=\"bb-subtitle bb-text-support bb-schedule-switch__description\"\n        >\n          <span\n            *ngIf=\"options?.description && group.controls[config.name]?.value\"\n            >{{ options?.description }}</span\n          >\n        </div>\n      </div>\n    </div>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label\"\n    ></bb-payord-validation-message>\n  </div>\n</ng-container>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport {\n  PaymentFormFieldConfig,\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  Hideable,\n  PaymentFormFieldHooks,\n  resetBeneficiaryDetails,\n  CounterPartyFields,\n  PaymentBaseFields,\n  InitiatorFields,\n  HiddenFields,\n} from '@backbase/payment-orders-ang';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { registerFormControl } from '../../helpers/form-helpers';\n\n@Component({\n  selector: 'bb-payord-beneficiary-header',\n  templateUrl: './payord-beneficiary-group-header.component.html',\n})\nexport class PayordBeneficiaryGroupHeaderComponent\n  implements PaymentFormField, OnInit, OnDestroy\n{\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  iconName = 'clear';\n  hideBeneficiaryFieldsControl!: AbstractControl;\n  private initiatorIdControl!: AbstractControl;\n\n  ngOnInit() {\n    this.hideBeneficiaryFieldsControl = registerFormControl(\n      this.group,\n      HiddenFields.hideBeneficiaryFields\n    );\n    this.initiatorIdControl = <FormControl>(\n      this.group.parent?.get([PaymentBaseFields.initiator, InitiatorFields.id])\n    );\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  onClearValues() {\n    const parentGroup = this.group.parent as FormGroup;\n    const nameControl = <FormControl>(\n      parentGroup.get([PaymentBaseFields.initiator, InitiatorFields.name])\n    );\n    if (nameControl.value) {\n      nameControl.setErrors(null);\n    }\n    if (typeof this.options?.clearOptions?.onClear === 'function') {\n      this.options.clearOptions.onClear(this.group);\n    } else {\n      resetBeneficiaryDetails(this.group);\n    }\n\n    this.hideBeneficiaryFieldsControl?.setValue(true);\n    this.initiatorIdControl?.updateValueAndValidity();\n  }\n\n  showClearBtn() {\n    const accountName = this.group.get(CounterPartyFields.name);\n    const accountNumber = this.group.get(CounterPartyFields.accountNumber);\n    const bankBranchCode = this.group.get([\n      CounterPartyFields.creditorBank,\n      CounterPartyFields.bankBranchCode,\n    ]);\n    const bic = this.group.get([\n      CounterPartyFields.creditorBank,\n      CounterPartyFields.bic,\n    ]);\n    return (\n      accountName?.value ||\n      accountNumber?.value ||\n      bankBranchCode?.value ||\n      bic?.value\n    );\n  }\n\n  ngOnDestroy() {\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  *ngIf=\"config?.options?.label\"\n  class=\"bb-stack\"\n  [ngClass]=\"options?.cssClasses\"\n>\n  <legend class=\"bb-inline-stack__item bb-fieldset__heading break-word\">\n    <ng-container *ngIf=\"!group?.value?.name\">{{\n      options?.label\n    }}</ng-container>\n    <ng-container *ngIf=\"group?.value?.name && options?.hasDynamicTitle\">\n      <span>{{ options?.label }}: {{ group?.value?.name }}</span>\n      <span\n        *ngIf=\"\n          group?.value?.selectedContact?.contactId &&\n          group?.value?.beneficiaryAccountName\n        \"\n      >\n        - {{ group?.value?.beneficiaryAccountName }}\n      </span>\n    </ng-container>\n  </legend>\n  <button\n    *ngIf=\"showClearBtn()\"\n    class=\"bb-stack__item--push-right\"\n    bbButton\n    color=\"link\"\n    (click)=\"onClearValues()\"\n    data-role=\"clear-beneficiary-button\"\n  >\n    <bb-icon-ui [name]=\"options?.clearOptions?.icon || iconName\"></bb-icon-ui>\n    <span *ngIf=\"options?.clearOptions?.label\">{{\n      options?.clearOptions?.label\n    }}</span>\n    <span\n      *ngIf=\"!options?.clearOptions?.label\"\n      i18n=\"@@dynamic-form-field-beneficiary-header.label\"\n      >Clear</span\n    >\n  </button>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n  AccountField,\n  PaymentFormFieldHooks,\n  MultiPaymentAccountFormItem,\n} from '@backbase/payment-orders-ang';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';\n\n@Component({\n  selector: 'bb-multi-payment-account-selector',\n  templateUrl: './multipayment-account-selector.component.html',\n})\nexport class MultiPaymentAccountSelectorComponent implements OnInit, OnDestroy {\n  private _selectedAccount!: MultiPaymentAccountFormItem;\n  private items!: Array<MultiPaymentAccountFormItem>;\n  private gc$$ = new Subject<void>();\n\n  public get selectedAccount() {\n    return this._selectedAccount;\n  }\n\n  public set selectedAccount(account: MultiPaymentAccountFormItem) {\n    this._selectedAccount = account;\n    this.group?.patchValue(account);\n    this.group?.markAsTouched();\n    this.group?.markAsDirty();\n  }\n\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig;\n  group!: FormGroup;\n\n  items$!: Observable<Array<MultiPaymentAccountFormItem>>;\n\n  accountFormat: PaymentCardNumberFormat = {\n    length: 0,\n    maskRange: [0, 0],\n    segments: 0,\n  };\n\n  accountGroup = {\n    [AccountField.id]: [''],\n    [AccountField.name]: [''],\n    [AccountField.accountNumber]: [''],\n    [AccountField.number]: [''],\n    [AccountField.accountType]: [''],\n    [AccountField.currency]: [''],\n    [AccountField.balance]: [''],\n    [AccountField.bankBranchCode]: [''],\n  };\n\n  ngOnInit() {\n    this.registerFields();\n    this.items$ = this.options?.items$.pipe(\n      tap((items: MultiPaymentAccountFormItem[]) => {\n        this.items = items;\n        if (this.group?.get('id')?.value) {\n          this.selectedAccount = this.findAccount(this.group?.get('id')?.value);\n        }\n      })\n    );\n    const initiator = this.group?.parent?.get('initiator');\n    initiator?.valueChanges.pipe(takeUntil(this.gc$$)).subscribe({\n      next: (account: MultiPaymentAccountFormItem) => {\n        this._selectedAccount = this.findAccount(account.id);\n      },\n    });\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n  }\n\n  ngOnDestroy() {\n    this.gc$$.next();\n    this.gc$$.complete();\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n\n  registerFields() {\n    for (const key in this.accountGroup) {\n      if (this.accountGroup.hasOwnProperty(key)) {\n        const validators = [];\n        if (key === AccountField.id || key === AccountField.name) {\n          validators.push(Validators.required);\n        }\n        registerFormControl(this.group, key, validators, [], '');\n      }\n    }\n  }\n\n  selectItem(account: MultiPaymentAccountFormItem) {\n    this.selectedAccount = account;\n    if (this.options?.accountSelected) {\n      this.options?.accountSelected(account);\n    }\n    this.options?.searchTerm$.next('');\n  }\n\n  onBlur() {\n    if (this.options?.required) {\n      this.group?.markAllAsTouched();\n    }\n  }\n\n  onSearch($event: string) {\n    if (this.options?.searchTerm$) {\n      this.options?.searchTerm$.next($event);\n    }\n  }\n\n  private findAccount(id: string) {\n    return this.items.find((item) => item.id === id) || this.group?.value;\n  }\n}\n","<div\n  class=\"bb-dynamic-input form-group\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n>\n  <section class=\"payment-from\" [formGroup]=\"group\">\n    <label class=\"bb-form-field\">\n      <div *ngIf=\"options?.label\" class=\"bb-dynamic-input__label bb-label\">\n        <span>\n          {{ options?.label }}\n        </span>\n        <span\n          class=\"bb-dynamic-input__helper-text bb-text-support\"\n          *ngIf=\"options?.helperText\"\n          [textContent]=\"options?.helperText\"\n        >\n        </span>\n      </div>\n      <bb-account-selector-ui\n        [markFirst]=\"true\"\n        [highlight]=\"false\"\n        [filterItems]=\"options?.filterItems\"\n        [internalFiltering]=\"false\"\n        [closeOnSelect]=\"true\"\n        [dropdownPosition]=\"'bottom'\"\n        [items]=\"items$ | async\"\n        [selectedItems]=\"selectedAccount\"\n        [searchFunc]=\"options?.searchFunc\"\n        (change)=\"selectItem($event)\"\n        (blur)=\"onBlur()\"\n        (search)=\"onSearch($event)\"\n        (filterChange)=\"onSearch($event)\"\n        [placeholder]=\"options?.placeholder || ''\"\n        [attr.aria-label]=\"options?.label\"\n        [required]=\"options?.required\"\n        [attr.data-role]=\"'debit-account-selector'\"\n        [showCurrencySymbol]=\"options?.showCurrencySymbol\"\n        [showBankBranchCode]=\"options?.showBankBranchCode\"\n        [productNumberFormat]=\"accountFormat\"\n      ></bb-account-selector-ui>\n    </label>\n\n    <ng-container *ngIf=\"!selectedAccount\">\n      <bb-payord-validation-message\n        [control]=\"group?.controls['id']\"\n        [validationMessages]=\"options?.validationMessages\"\n        [label]=\"options?.label || 'Account'\"\n      ></bb-payord-validation-message>\n    </ng-container>\n\n    <div\n      class=\"bb-dynamic-input__desc bb-text-support bb-subtitle\"\n      *ngIf=\"options?.description\"\n      [textContent]=\"options?.description\"\n    ></div>\n  </section>\n</div>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { SchemeNames } from '@backbase/data-ang/payment-order';\nimport {\n  BeneficiaryList,\n  ContactItem,\n  ContactScheme,\n  CounterPartyFields,\n  FetchCreditorItemsParams,\n  HiddenFields,\n  Hideable,\n  ListState,\n  PaymentFormFieldConfig,\n  PaymentFormFieldHooks,\n  PaymentFormFieldOptions,\n} from '@backbase/payment-orders-ang';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime, map, takeUntil, tap } from 'rxjs/operators';\nimport { registerFormControl } from '../../helpers/form-helpers';\nimport { triggerHook } from '../../helpers/hooks-helpers';\n\n@Component({\n  selector: 'bb-payord-contact-selector',\n  templateUrl: './payord-contact-selector.component.html',\n})\nexport class PayordContactSelectorComponent implements OnInit, OnDestroy {\n  options!: PaymentFormFieldOptions;\n  config!: PaymentFormFieldConfig & Hideable;\n  group!: FormGroup;\n  contacts$!: Observable<Array<ContactItem> | null>;\n  @ViewChild('dd') dropdownItem?: NgbDropdown;\n  listState?: ListState;\n  listStateType = ListState;\n  private inputFocused = false;\n  private destroy$ = new Subject();\n  private searchQuery = '';\n  defaultEmptyStateTitle = $localize`:@@payord.contact.selector.ui.contacts.nothing-found.label:No contacts`;\n  defaultEmptyStateSubtitle = $localize`:@@payord.contact.selector.ui.contacts.nothing-found.subtitle:You don't have any contacts to be displayed.`;\n  defaultErrorStateTitle = $localize`:@@payord.contact.selector.ui.contacts.error.label:Oops! Something went wrong`;\n  defaultErrorStateSubtitle = $localize`:@@payord.contact.selector.ui.contacts.error.subtitle:We are unable to load your contacts Please try again.`;\n\n  ngOnInit() {\n    this.registerFields();\n    triggerHook(PaymentFormFieldHooks.onInit, this);\n    this.listState = ListState.LOADING;\n\n    this.contacts$ = this.options.items$.pipe(\n      map((response) =>\n        response instanceof HttpErrorResponse ? null : response\n      ),\n      map((contacts: ContactItem[]) =>\n        this.options.mapItems && contacts?.length\n          ? this.options.mapItems(contacts)\n          : contacts\n      ),\n      map((contacts: ContactItem[]) =>\n        contacts?.map((contact) => ({\n          ...contact,\n          transferKey: this.getTransferEntry(contact),\n        }))\n      ),\n      tap((contacts: ContactItem[]) => {\n        this.setStatus(contacts);\n        // Close dropdown if there is no result by search\n        if (this.inputFocused && this.searchQuery) {\n          contacts && contacts.length\n            ? this.dropdownItem?.open()\n            : this.dropdownItem?.close();\n        }\n      })\n    );\n\n    // Sets schemeName on value change in accountNumber field\n    this.group.valueChanges\n      .pipe(\n        takeUntil(this.destroy$),\n        debounceTime(1000),\n        map(({ accountNumber }) => accountNumber)\n      )\n      .subscribe(this.setScheme.bind(this));\n  }\n\n  private registerFields() {\n    registerFormControl(\n      this.group,\n      this.config.name,\n      this.options.validators,\n      this.options.asyncValidators,\n      this.options.defaultValue\n    );\n    registerFormControl(\n      this.group,\n      CounterPartyFields.role,\n      [],\n      [],\n      'CREDITOR'\n    );\n    registerFormControl(this.group, CounterPartyFields.selectedContact, [], []);\n    registerFormControl(this.group, CounterPartyFields.schemeName);\n    registerFormControl(this.group, HiddenFields.selectedBeneficiary);\n  }\n\n  private fetchCreditorItems(params: FetchCreditorItemsParams) {\n    if (this.options?.fetchItems$) {\n      this.options.fetchItems$.next(params);\n    }\n  }\n\n  onSelectContact(_event: EventTarget, contact: ContactItem) {\n    this.group.get(this.config.name)?.patchValue(contact.name);\n    this.group\n      .get(CounterPartyFields.accountNumber)\n      ?.patchValue(this.getTransferEntry(contact)?.value);\n    this.group.get([HiddenFields.selectedBeneficiary])?.patchValue(contact);\n    this.dropdownItem?.close();\n    this.setContactId(contact);\n  }\n\n  handleSearch(query: string) {\n    if (this.inputFocused) {\n      this.searchQuery = query;\n      this.fetchCreditorItems({\n        params: { query },\n        type: BeneficiaryList.CONTACTS,\n      });\n      if (!query) {\n        this.dropdownItem?.close();\n      }\n    }\n  }\n\n  setStatus(contacts?: ContactItem[]) {\n    if (!contacts) {\n      this.listState = ListState.ERROR;\n    } else if (!contacts.length) {\n      this.listState = ListState.EMPTY;\n    } else if (contacts.length) {\n      this.listState = ListState.LIST;\n    }\n  }\n\n  onClear() {\n    this.group.get(this.config.name)?.reset();\n    this.fetchCreditorItems({ type: BeneficiaryList.CONTACTS });\n  }\n\n  focusHandler() {\n    this.inputFocused = true;\n  }\n\n  onBlur() {\n    this.inputFocused = false;\n  }\n\n  private setContactId(contact: ContactItem) {\n    this.group\n      .get([CounterPartyFields.selectedContact])\n      ?.patchValue({ contactId: contact?.id });\n  }\n\n  /**\n   * Sets schemeName for payment order request payload\n   * Checks entered value with regex pattern to detect if it is email, phone number or accountNumber\n   */\n  private setScheme(counterPartyIdentification?: string) {\n    if (!counterPartyIdentification) return;\n    const scheme = this.options.contactSchemes?.find(({ regex }) =>\n      regex?.test(counterPartyIdentification)\n    );\n    let schemeValue: SchemeNames | undefined;\n    switch (scheme?.name) {\n      case ContactScheme.email:\n        schemeValue = SchemeNames.EMAIL;\n        break;\n      case ContactScheme.phoneNumber:\n        schemeValue = SchemeNames.MOBILE;\n        break;\n      case ContactScheme.accountNumber:\n        schemeValue = SchemeNames.BBAN;\n        break;\n    }\n    if (schemeValue) {\n      this.group.controls[CounterPartyFields.schemeName].patchValue(\n        schemeValue,\n        { emitEvent: false }\n      );\n    }\n  }\n\n  /**\n   * Return first scheme value of contact. That allows customer to prioritize either email, phone number or account number for a contact.\n   * For instance [email, phoneNumber] will return mail if there is a mail value in contact item, otherwise will check phoneNumber.\n   * This is\n   */\n  private getTransferEntry(contact: ContactItem): {\n    scheme: ContactScheme;\n    value: string | undefined;\n  } {\n    const defaultScheme = ContactScheme.accountNumber;\n    const firstScheme =\n      this.options.contactSchemes?.find(\n        (scheme) => !!contact.accounts[0][scheme.name]\n      )?.name || defaultScheme;\n    return { scheme: firstScheme, value: contact.accounts[0][firstScheme] };\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    triggerHook(PaymentFormFieldHooks.onDestroy, this);\n  }\n}\n","<div\n  class=\"form-group bb-dynamic-input\"\n  [ngClass]=\"options?.cssClasses\"\n  *ngIf=\"!config?.hidden\"\n>\n  <label *ngIf=\"options?.label\" [for]=\"'payord-contact-selector-search-box'\"\n    >{{ options?.label }}\n  </label>\n\n  <div\n    ngbDropdown\n    #dd=\"ngbDropdown\"\n    class=\"full-width-typeahead bb-payment-card-state bb-block bb-block--md\"\n  >\n    <span\n      class=\"bb-dynamic-input__helper-text bb-text-support\"\n      *ngIf=\"options?.helperText\"\n      [attr.id]=\"'payord-contact-selector__helper-text'\"\n      [textContent]=\"options?.helperText\"\n    >\n    </span>\n\n    <bb-search-box-ui\n      ngbDropdownAnchor\n      (clear)=\"onClear()\"\n      (focus)=\"focusHandler()\"\n      (blur)=\"onBlur()\"\n      [formControl]=\"group.controls[config.name]\"\n      [placeholder]=\"options?.placeholder\"\n      [squareBorder]=\"options?.squareBorder\"\n      [autocomplete]=\"options?.autocomplete || 'off'\"\n      (ngModelChange)=\"handleSearch(group.controls[config.name].value)\"\n      [showClear]=\"true\"\n      [id]=\"'payord-contact-selector-search-box'\"\n      [attr.data-role]=\"'contact-selector-search-box'\"\n    >\n      <button\n        bbButton\n        ngbDropdownToggle\n        color=\"unstyled\"\n        [attr.aria-label]=\"'contact dropdown button'\"\n      >\n        <bb-icon-ui name=\"contacts\"></bb-icon-ui>\n      </button>\n    </bb-search-box-ui>\n\n    <div\n      ngbDropdownMenu\n      class=\"dropdown-menu bb-product-selector__dropdown-menu dropdown-menu-right pre-scrollable-typeahead\"\n    >\n      <div class=\"dropdown-menu-inner-container\">\n        <!-- CONTACTS -->\n        <ng-container *ngIf=\"contacts$ | async as contacts\">\n          <ng-container *ngIf=\"listState === listStateType.LIST\">\n            <ng-container *ngFor=\"let contact of contacts\">\n              <ng-container\n                *ngTemplateOutlet=\"contactTemp; context: { $implicit: contact }\"\n              >\n              </ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n        <!-- TODO UPDATE EMPTY AND ERROR STATES -->\n        <ng-container *ngIf=\"listState === listStateType.ERROR\">\n          <ng-container *ngTemplateOutlet=\"errorState\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"listState === listStateType.EMPTY\">\n          <ng-container *ngTemplateOutlet=\"emptyState\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"listState === listStateType.LOADING\">\n          <ng-container *ngTemplateOutlet=\"loading\"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <bb-payord-validation-message\n      [control]=\"group?.controls[config.name]\"\n      [validationMessages]=\"options?.validationMessages\"\n      [label]=\"options?.label || 'Beneficiary name'\"\n    ></bb-payord-validation-message>\n  </div>\n</div>\n\n<ng-template #contactTemp let-contact>\n  <button\n    role=\"menuitem\"\n    type=\"button\"\n    class=\"bb-stack\"\n    (click)=\"onSelectContact($event, contact)\"\n    ngbDropdownItem\n  >\n    <div class=\"bb-stack__item\">\n      <span class=\"sr-only\" i18n=\"@@payord.contact.selector.ui.group.contacts\"\n        >Contact</span\n      >\n      <bb-icon-ui\n        size=\"xl\"\n        class=\"bb-stack text-muted\"\n        name=\"account-box\"\n      ></bb-icon-ui>\n    </div>\n\n    <div\n      class=\"text-left bb-stack__item\"\n      *ngIf=\"contact?.transferKey as transferKey\"\n    >\n      <span\n        class=\"sr-only\"\n        i18n=\"@@payord.contact.selector.ui.contact.account.name.label\"\n        id=\"contact_accountNameLabel\"\n      >\n        Contact name:\n      </span>\n      <div attr.aria-labelledby=\"contact_accountNameLabel\" class=\"bb-text-bold\">\n        {{ contact?.name }}\n      </div>\n      <span\n        class=\"sr-only\"\n        i18n=\"@@payord.contact.selector.ui.contact.account.number.label\"\n        id=\"contact_accountNumberLabel\"\n      >\n        { transferKey.scheme, select, accountNumber { Account Number } email {\n        Email } phoneNumber { Phone Number } }\n      </span>\n      <div\n        class=\"text-dark\"\n        *ngIf=\"contact?.accounts[0]?.accountNumber\"\n        attr.aria-labelledby=\"contact_accountNumberLabel\"\n        class=\"bb-subtitle bb-text-support\"\n      >\n        {{ transferKey.value }}\n      </div>\n    </div>\n  </button>\n</ng-template>\n\n<ng-template #emptyState>\n  <bb-empty-state-ui\n    data-role=\"contacts-empty-state\"\n    iconSize=\"xxl\"\n    class=\"bb-state-container\"\n    iconModifier=\"contacts\"\n    [title]=\"options?.emptyStateTitle || defaultEmptyStateTitle\"\n    [subtitle]=\"options?.emptyStateSubtitle || defaultEmptyStateSubtitle\"\n  >\n  </bb-empty-state-ui>\n</ng-template>\n<ng-template #errorState>\n  <bb-empty-state-ui\n    data-role=\"contacts-error-state\"\n    iconSize=\"xxl\"\n    class=\"bb-state-container\"\n    iconModifier=\"error-outline\"\n    [title]=\"options?.errorStateTitle || defaultErrorStateTitle\"\n    [subtitle]=\"options?.errorStateSubtitle || defaultErrorStateSubtitle\"\n  >\n  </bb-empty-state-ui>\n</ng-template>\n\n<ng-template #loading>\n  <div class=\"bb-state-container\">\n    <bb-loading-indicator-ui loaderSize=\"md\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n","import {\n  PaymentComponents,\n  PaymentFormField,\n} from '@backbase/payment-orders-ang';\nimport { PayordTextAreaComponent } from '../components/textarea/payord-textarea.component';\nimport { PayordAddressComponent } from '../components/address/payord-address.component';\nimport { PayordSelectComponent } from '../components/select/payord-select.component';\nimport { PayordRadioComponent } from '../components/radio/payord-radio.component';\nimport { PayordBeneficiarySelectorComponent } from '../components/beneficiary-selector/payord-beneficiary-selector.component';\nimport { PayordScheduleComponent } from '../components/schedule/payord-schedule.component';\nimport { PayordAmountComponent } from '../components/amount/payord-amount.component';\nimport { PayordSanctionedCurrencyAmountComponent } from '../components/sanctioned-currency-input/payord-sanctioned-currency-amount.component';\nimport { PayordCountrySelectorComponent } from '../components/country-selector/payord-country-selector.component';\nimport { PayordCheckboxComponent } from '../components/checkbox/payord-checkbox.component';\nimport { PayordDebitAccountSelectorComponent } from '../components/debit-account-selector/payord-debit-account-selector.component';\nimport { PayordTextboxComponent } from '../components/textbox/payord-text.component';\nimport { PayordSwitchComponent } from '../components/switch/payord-switch.component';\nimport { PayordDateComponent } from '../components/date/payord-date.component';\nimport { PayordNumberComponent } from '../components/number/payord-number.component';\nimport { PayordPhoneComponent } from '../components/phone/payord-phone.component';\nimport { PayordSelectPaymentOptionComponent } from '../components/select-payment-option/payord-select-payment-option';\nimport { PayordPaymentCostComponent } from '../components/payment-cost/payment-cost.component';\nimport { PayordInternalAccountSelectorComponent } from '../components/internal-account-selector/payord-internal-account-selector.component';\nimport { PayordCompactAmountComponent } from '../components/compact-amount/payord-compact-amount.component';\nimport { PayordButtonGroupComponent } from '../components/button-group/payord-button-group.component';\nimport { PayordScheduleHeaderComponent } from '../components/schedule-header/payord-schedule-header';\nimport { PayordSanctionedCountrySelectorComponent } from '../components/sanctioned-country-selector/payord-sanctioned-country-selector.component';\nimport { PayordChargeBearerComponent } from '../components/charge-bearer/charge-bearer.component';\nimport { MultiPaymentCardComponent } from '../components/multi-payment-card/multi-payment-card.component';\nimport { PayordCreditDebitSelectorComponent } from '../components/credit-debit-selector/payord-credit-debit-selector';\nimport { PayordInternalAmountOptionsComponent } from '../components/internal-amount-options/payord-internal-amount-options.component';\nimport { PayordHeaderComponent } from '../components/header/payord-header.component';\nimport { PayordPurposeOfPaymentComponent } from '../components/purpose-of-payment/payord-purpose-of-payment.component';\nimport { PayordAlertComponent } from '../components/alert/payord-alert.component';\nimport { PayordScheduleSwitchComponent } from '../components/schedule-switch/payord-schedule-switch.component';\nimport { PayordBeneficiaryGroupHeaderComponent } from '../components/beneficiary-group-header/beneficiary-group-header.component';\nimport { MultiPaymentAccountSelectorComponent } from '../components/account-selector/multipayment-account-selector.component';\nimport { PayordContactSelectorComponent } from '../components/contact-selector/payord-contact-selector.component';\n\n/**\n * Payment component types\n */\nexport type ComponentsMap = Record<PaymentComponents, PaymentFormField>;\n\n/**\n * Payment component field types\n */\nexport const PaymentComponentsMap: any = {\n  [PaymentComponents.text]: PayordTextboxComponent,\n  [PaymentComponents.textarea]: PayordTextAreaComponent,\n  [PaymentComponents.address]: PayordAddressComponent,\n  [PaymentComponents.select]: PayordSelectComponent,\n  [PaymentComponents.radio]: PayordRadioComponent,\n  [PaymentComponents.debitAccountSelector]: PayordDebitAccountSelectorComponent,\n  [PaymentComponents.beneficiarySelector]: PayordBeneficiarySelectorComponent,\n  [PaymentComponents.schedule]: PayordScheduleComponent,\n  [PaymentComponents.amount]: PayordAmountComponent,\n  [PaymentComponents.sanctionedCurrencyAmount]:\n    PayordSanctionedCurrencyAmountComponent,\n  [PaymentComponents.checkbox]: PayordCheckboxComponent,\n  [PaymentComponents.switch]: PayordSwitchComponent,\n  [PaymentComponents.date]: PayordDateComponent,\n  [PaymentComponents.number]: PayordNumberComponent,\n  [PaymentComponents.phone]: PayordPhoneComponent,\n  [PaymentComponents.selectPaymentOption]: PayordSelectPaymentOptionComponent,\n  [PaymentComponents.paymentCost]: PayordPaymentCostComponent,\n  [PaymentComponents.chargeBearer]: PayordChargeBearerComponent,\n  [PaymentComponents.internalAccountSelector]:\n    PayordInternalAccountSelectorComponent,\n  [PaymentComponents.compactAmount]: PayordCompactAmountComponent,\n  [PaymentComponents.scheduleHeader]: PayordScheduleHeaderComponent,\n  [PaymentComponents.buttonGroup]: PayordButtonGroupComponent,\n  [PaymentComponents.countrySelector]: PayordCountrySelectorComponent,\n  [PaymentComponents.sanctionedCountrySelector]:\n    PayordSanctionedCountrySelectorComponent,\n  [PaymentComponents.multiPaymentCard]: MultiPaymentCardComponent,\n  /** @depreacted Will be removed in widget collection v3.11.0 */\n  [PaymentComponents.creditDebitSelector]: PayordCreditDebitSelectorComponent,\n  [PaymentComponents.internalAmountOptions]:\n    PayordInternalAmountOptionsComponent,\n  [PaymentComponents.header]: PayordHeaderComponent,\n  [PaymentComponents.purposeOfPayment]: PayordPurposeOfPaymentComponent,\n  [PaymentComponents.alert]: PayordAlertComponent,\n  [PaymentComponents.scheduleSwitch]: PayordScheduleSwitchComponent,\n  [PaymentComponents.beneficiaryGroupHeader]:\n    PayordBeneficiaryGroupHeaderComponent,\n  [PaymentComponents.multiPaymentAccountSelector]:\n    MultiPaymentAccountSelectorComponent,\n  [PaymentComponents.contactSelector]: PayordContactSelectorComponent,\n  [PaymentComponents.accountSelector]: PayordDebitAccountSelectorComponent,\n};\n","import { PaymentComponentsMap } from '../models/components-map.model';\nimport { PayordTextboxComponent } from '../components/textbox/payord-text.component';\nimport { Injectable } from '@angular/core';\nimport { PaymentTypeConfig } from '@backbase/payment-orders-ang';\n\n@Injectable()\nexport class ComponentsFactoryService {\n  private componentsMap = { ...PaymentComponentsMap };\n\n  /**\n   * Registers custom fields\n   *\n   * @param components Payment components\n   * @returns\n   */\n  registerCustomFields(components: typeof PaymentComponentsMap = {}) {\n    for (const key in components) {\n      if (components.hasOwnProperty(key)) {\n        this.componentsMap[key] = components[key];\n      }\n    }\n  }\n\n  /**\n   * Registers custom fields for payment configs\n   *\n   * @param paymentConfigs Payment configurations\n   * @returns\n   */\n  registerCustomFieldsForPaymentConfigs(\n    paymentConfigs: Array<PaymentTypeConfig>\n  ) {\n    for (const config of paymentConfigs) {\n      if (config.customFields) {\n        this.registerCustomFields(config.customFields);\n      }\n    }\n  }\n\n  /**\n   * Gets a form field\n   *\n   * @param formFieldType Type of the form field\n   * @returns\n   */\n  getFormField(formFieldType: string) {\n    return this.componentsMap[formFieldType] || PayordTextboxComponent;\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { takeUntil, map } from 'rxjs/operators';\nimport {\n  AbstractControl,\n  FormGroup,\n  Validators,\n  FormArray,\n} from '@angular/forms';\nimport {\n  PaymentFormGroup,\n  Hideable,\n  PaymentFormFieldConfig,\n} from '@backbase/payment-orders-ang';\nimport { mapDependentItems } from '../../helpers/generic-utils';\n\n@Component({\n  selector: 'bb-payord-group',\n  templateUrl: './payord-group.component.html',\n})\nexport class PayordGroupComponent implements OnInit, OnDestroy {\n  /**\n   * The config of the form group\n   */\n  @Input() config!: PaymentFormGroup & Hideable;\n  /**\n   * The parent formgroup\n   */\n  @Input() group!: FormGroup;\n  gc$ = new EventEmitter();\n  eventName!: string;\n\n  constructor(private readonly visibilityService: VisibilityService) {}\n\n  ngOnInit() {\n    this.eventName = this.config.parent\n      ? `${this.config.parent}.${this.config.name}`\n      : this.config.name;\n    this.visibilityService.show$\n      .pipe(\n        map(({ name, items }) =>\n          mapDependentItems(items, name).find(\n            (dep) => dep.parent === this.eventName\n          )\n        ),\n        takeUntil(this.gc$)\n      )\n      .subscribe((data) => {\n        if (data?.items?.length) {\n          this.showFields(data.items);\n        }\n      });\n\n    this.visibilityService.hide$\n      .pipe(\n        map(({ name, items }) =>\n          mapDependentItems(items, name).find(\n            (dep) => dep.parent === this.eventName\n          )\n        ),\n        takeUntil(this.gc$)\n      )\n      .subscribe((data) => {\n        if (data?.items?.length) {\n          this.hideFields(data.items);\n        }\n      });\n  }\n\n  scanHideableItems(items: string[]) {\n    const hideableFields: { [key: string]: boolean } = {};\n    items.forEach((itemName: string) => {\n      hideableFields[itemName] = true;\n    });\n    return hideableFields;\n  }\n\n  showFields(fieldsNames: string[]) {\n    const hideableFields = this.scanHideableItems(fieldsNames);\n    let control: AbstractControl | null;\n    this.config.fields.forEach(\n      (field: (PaymentFormFieldConfig | PaymentFormGroup) & Hideable) => {\n        if (hideableFields[field.name]) {\n          field.hidden = false;\n          control = this.group.get(`${this.config.name}.${field.name}`);\n          if (control && field?.options?.isConditionalMandatory) {\n            control.setValidators([\n              Validators.required,\n              ...(field.options.validators || []),\n            ]);\n            control.setAsyncValidators([\n              ...(field.options.asyncValidators || []),\n            ]);\n            control.updateValueAndValidity();\n          }\n        }\n      }\n    );\n  }\n\n  hideFields(fieldsNames: string[]) {\n    const hideableFields = this.scanHideableItems(fieldsNames);\n    let control: AbstractControl | null;\n\n    this.config.fields.forEach(\n      (field: (PaymentFormFieldConfig | PaymentFormGroup) & Hideable) => {\n        if (hideableFields[field.name]) {\n          field.hidden = true;\n          control = field?.options?.mapToField\n            ? this.getMappedField(field.name, field.options.mapToField)\n            : this.group.get(`${this.config.name}.${field.name}`);\n\n          if (control && !field?.options?.keepValueOnHidden) {\n            if (field?.options?.isConditionalMandatory) {\n              control.setValidators(null);\n              control.setAsyncValidators(null);\n              control.updateValueAndValidity();\n            }\n            control.reset();\n            if (field?.options?.defaultValue) {\n              control.patchValue(field.options.defaultValue);\n            }\n          }\n          this.hideNestedField(field);\n\n          if ((<PaymentFormGroup>field)?.fields?.length) {\n            (<PaymentFormGroup>field)?.fields?.forEach((nestedField) =>\n              this.hideNestedField(nestedField)\n            );\n          }\n        }\n      }\n    );\n  }\n\n  private hideNestedField(field: PaymentFormFieldConfig | PaymentFormGroup) {\n    if (field?.options?.dependants && !field?.options?.keepDependantsOnHide) {\n      mapDependentItems(field.options.dependants, field.parent).forEach(\n        ({ parent, items }) => {\n          this.visibilityService.hideItems(parent, items);\n        }\n      );\n    }\n  }\n\n  private getMappedField(\n    fieldName: string,\n    mapToField: string\n  ): AbstractControl | null {\n    let parent: FormGroup | FormArray | null = this.group;\n    let control: AbstractControl | null;\n\n    while (parent) {\n      control = parent.get(`${mapToField}.${fieldName}`);\n      if (control) {\n        return control;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n}\n","<ng-container *ngIf=\"!config?.hidden\">\n  <div\n    *ngIf=\"config?.cssClasses?.length; else defaultTmpl\"\n    [ngClass]=\"config?.cssClasses\"\n  >\n    <ng-container *ngTemplateOutlet=\"defaultTmpl\"></ng-container>\n  </div>\n</ng-container>\n\n<ng-template #defaultTmpl>\n  <ng-container *ngIf=\"!config.collapsible; else collapsibleTmpl\">\n    <bb-fieldset-ui\n      *ngIf=\"config?.title; else subGroup\"\n      [heading]=\"config?.title\"\n    >\n      <div *ngIf=\"config.subTitle\" class=\"bb-fieldset\">\n        {{ config?.subTitle }}\n      </div>\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </bb-fieldset-ui>\n    <ng-container *ngIf=\"config?.separator\">\n      <bb-separator\n        [options]=\"config.separator\"\n        class=\"d-block mt-5\"\n      ></bb-separator>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template #subGroup>\n  <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n</ng-template>\n\n<ng-template #collapsibleTmpl>\n  <fieldset class=\"bb-fieldset\">\n    <bb-collapsible-ui data-role=\"schedule-toggle\" #collapse>\n      <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n        <div\n          (click)=\"collapse.toggle()\"\n          [attr.aria-expanded]=\"isOpen\"\n          class=\"bb-stack justify-content-between col-12\"\n        >\n          <legend>\n            <span class=\"bb-label\">{{ config?.title }}</span>\n          </legend>\n          <button\n            bbButton\n            color=\"outline\"\n            [attr.aria-label]=\"config?.title\"\n            [attr.aria-expanded]=\"isOpen\"\n            (click)=\"collapse.toggle(); $event.stopPropagation()\"\n          >\n            <bb-icon-ui\n              [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"\n            ></bb-icon-ui>\n          </button>\n        </div>\n        <hr class=\"mt-0 mx-3\" />\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </ng-template>\n    </bb-collapsible-ui>\n  </fieldset>\n</ng-template>\n\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n","import {\n  Directive,\n  Input,\n  OnInit,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ComponentRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  PaymentFormField,\n  PaymentFormFieldOptions,\n  PaymentFormFieldConfig,\n} from '@backbase/payment-orders-ang';\nimport { ComponentsFactoryService } from '../services/components-factory.service';\n\n@Directive({\n  selector: '[bbPaymentFormField]',\n})\nexport class PaymentFormFieldDirective implements PaymentFormField, OnInit {\n  /**\n   * The data of the form field\n   */\n  @Input() options!: PaymentFormFieldOptions;\n\n  /**\n   * The config of form field\n   */\n  @Input() config!: PaymentFormFieldConfig;\n\n  /**\n   * The parent form group of the form field\n   */\n  @Input() group!: FormGroup;\n\n  component!: ComponentRef<PaymentFormField>;\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    private readonly componentsFactory: ComponentsFactoryService\n  ) {}\n\n  ngOnInit() {\n    const component = this.componentsFactory.getFormField(this.config.type);\n    const factory = this.resolver.resolveComponentFactory<any>(component);\n    this.component = this.container.createComponent(factory);\n    this.component.instance.config = this.config;\n    this.component.instance.group = this.group;\n    this.component.instance.options = this.options;\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentFormItem,\n  PaymentTypeConfig,\n  PaymentComponents,\n  PaymentOptionFields,\n  PaymentTemplateFields,\n  TemplateModeType,\n  getIconByPaymnentType,\n  focusErrorElement,\n  PaymentMode,\n  HiddenFields,\n} from '@backbase/payment-orders-ang';\nimport {\n  applyInputFormSettingForCountry,\n  applyPurposeOfPaymentSettings,\n  registerFormControl,\n  setAdditionalBankDetails,\n} from '../../helpers/form-helpers';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { ComponentsFactoryService } from '../../services/components-factory.service';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  shareReplay,\n  startWith,\n} from 'rxjs/operators';\nimport { SanctionedCountry } from '@backbase/data-ang/payment-order-options';\n\n@Component({\n  selector: 'bb-payord-form',\n  templateUrl: './payord-form.component.html',\n  providers: [VisibilityService, ComponentsFactoryService],\n})\nexport class PayordFormComponent implements OnInit, OnDestroy {\n  /**\n   * The payment type config. Containas the details of all the fields and details of a payment type.\n   */\n  @Input() config!: PaymentTypeConfig;\n  /**\n   * Event emitted when the form is submitted.\n   */\n  @Output() submitted = new EventEmitter();\n  /**\n   * Event emitted when the form is reset.\n   */\n  @Output() clear = new EventEmitter();\n  /**\n   * The flag to denote if the widget is rendered inside a modal.\n   */\n  @Input() isModalView = false;\n  /**\n   * The flag to denote if the widget is rendered in payment template mode.\n   */\n  @Input() isTemplateMode = false;\n  /**\n   * The flag to denote if it is a debit payment.\n   */\n  @Input() isDebitPayment = false;\n  /**\n   * The flag to denote if the widget is rendered in payment edit mode.\n   */\n  @Input() isEditPaymentModal = false;\n  /**\n   * The flag to denote if widget should be render the template is edit or create mode.\n   */\n  @Input() templateModeType?: TemplateModeType;\n  /**\n   * The actual formgroup item.\n   */\n  @Input() formItem?: FormGroup;\n  /**\n   * Flag that denotes if form is being submitted\n   */\n  @Input() set submitting(isSubmitting: boolean) {\n    this.isSubmitting$.next(isSubmitting);\n  }\n  /**\n   * Payment mode type.\n   */\n  @Input() paymentMode = PaymentMode.CREATE_PAYMENT;\n  /**\n   * Event emitter when we cancel payment editing (sends form to check if it's not changed)\n   */\n  @Output() editPaymentCancel = new EventEmitter<FormGroup>();\n  /**\n   * Event emitter when we submit editing payment (sends form)\n   */\n  @Output() editPaymentSubmit = new EventEmitter<FormGroup>();\n\n  private isSubmitting$ = new BehaviorSubject<boolean>(false);\n  isSubmittingShared$ = this.isSubmitting$.asObservable().pipe(shareReplay(1));\n  form!: FormGroup;\n\n  controls: Array<PaymentFormGroup> = [];\n  inputFormSettingControl!: AbstractControl;\n  templateNameControl!: AbstractControl;\n  defaultBankCodeSettingControl!: AbstractControl;\n  defaultBankCodeSettingSubscription?: Subscription;\n  inputFormSettingSubscription?: Subscription;\n\n  buttonGroupConfig!: PaymentFormFieldConfig;\n  paymentModeType = PaymentMode;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly componentsFactory: ComponentsFactoryService,\n    private readonly formEl: ElementRef\n  ) {}\n\n  private scrollToError() {\n    focusErrorElement(\n      this.formEl?.nativeElement,\n      'small.bb-input-validation-message'\n    );\n  }\n\n  ngOnInit() {\n    this.form = this.formItem || this.fb.group({});\n    this.buttonGroupConfig = this.getButtonGroupConfig();\n    this.componentsFactory.registerCustomFields(this.config.customFields);\n    this.createFormFields(this.config.fields, this.form, this.controls);\n    registerFormControl(\n      this.form,\n      'paymentType',\n      [],\n      [],\n      this.config.paymentType\n    );\n    this.defaultBankCodeSettingControl = registerFormControl(\n      this.form,\n      'defaultBankCodeSetting'\n    );\n\n    this.inputFormSettingControl =\n      this.form.get(PaymentOptionFields.inputFormFromSettings) ||\n      registerFormControl(this.form, PaymentOptionFields.inputFormFromSettings);\n    if (this.isTemplateMode) {\n      this.templateNameControl = registerFormControl(\n        this.form,\n        PaymentTemplateFields.templateName,\n        [Validators.required]\n      );\n      if (this.paymentMode === PaymentMode.EDIT_TEMPLATE) {\n        registerFormControl(this.form, PaymentTemplateFields.paymentTemplateId);\n      }\n    }\n\n    if (this.isDebitPayment) {\n      registerFormControl(this.form, HiddenFields.isDebitPayment, [], [], true);\n    }\n\n    this.listenDefaultBankCodeSettingChange();\n    this.listenFormSettingChange();\n  }\n\n  ngOnDestroy() {\n    if (this.inputFormSettingSubscription) {\n      this.inputFormSettingSubscription.unsubscribe();\n    }\n    if (this.defaultBankCodeSettingSubscription) {\n      this.defaultBankCodeSettingSubscription.unsubscribe();\n    }\n  }\n\n  createFormFields(\n    arr: Array<PaymentFormFieldConfig | PaymentFormGroup>,\n    _group: FormGroup,\n    controlsArr: Array<PaymentFormItem>,\n    parentName?: string\n  ) {\n    arr.forEach((control: PaymentFormFieldConfig | PaymentFormGroup) => {\n      const mappedField = control.options && control.options.mapToField;\n      const group = mappedField\n        ? <FormGroup>this.form.get(mappedField)\n        : _group;\n      const parent = mappedField || parentName;\n      const subArray: Array<PaymentFormItem> = [];\n\n      if ((<PaymentFormGroup>control).fields instanceof Array) {\n        const subGroup =\n          <FormGroup>group.get(control.name) || this.fb.group({});\n        this.createFormFields(\n          (<PaymentFormGroup>control).fields,\n          subGroup,\n          subArray,\n          parent ? `${parent}.${control.name}` : control.name\n        );\n        group.addControl(control.name, subGroup);\n        controlsArr.push({ ...control, fields: subArray, parent: parentName });\n      } else {\n        controlsArr.push({ ...control, parent });\n      }\n    });\n  }\n\n  getFormGroup(field: PaymentFormItem): FormGroup {\n    return <FormGroup>this.form.get(field.parent as string) || this.form;\n  }\n\n  getButtonGroupConfig() {\n    return {\n      type: PaymentComponents.buttonGroup,\n      name: PaymentComponents.buttonGroup,\n      options: {\n        submitting$: this.isSubmitting$,\n        isModalView: this.isModalView,\n        isTemplateMode: this.isTemplateMode,\n        templateModeType: this.templateModeType,\n        paymentMode: this.paymentMode,\n        submit: this.onSubmit.bind(this),\n        reset: this.resetForm.bind(this),\n      },\n    };\n  }\n\n  getIcon() {\n    return getIconByPaymnentType(this.config.paymentType);\n  }\n\n  onSubmit() {\n    this.form.markAsDirty();\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (!this.form.valid) {\n      this.scrollToError();\n    } else if (this.form.valid && !this.submitting) {\n      this.submitted.emit(this.form);\n    }\n  }\n\n  onEditionSubmit() {\n    this.form.markAllAsTouched();\n    if (this.form.valid) {\n      this.editPaymentSubmit.emit(this.form);\n    } else {\n      this.scrollToError();\n    }\n  }\n\n  onEditionCancel() {\n    this.editPaymentCancel.emit(this.form);\n  }\n\n  listenDefaultBankCodeSettingChange() {\n    this.defaultBankCodeSettingSubscription =\n      this.defaultBankCodeSettingControl.valueChanges.subscribe(() => {\n        setAdditionalBankDetails(this.form, this.config);\n      });\n  }\n\n  listenFormSettingChange() {\n    this.inputFormSettingSubscription =\n      this.inputFormSettingControl.valueChanges\n        .pipe(\n          startWith(this.inputFormSettingControl.value),\n          distinctUntilChanged(),\n          filter((value) => !!value)\n        )\n        .subscribe((value: SanctionedCountry | any) => {\n          for (const inputFormSetting of value.inputFormSettings || []) {\n            applyInputFormSettingForCountry({\n              inputFormSetting,\n              form: this.form,\n              config: this.config,\n            });\n          }\n          applyPurposeOfPaymentSettings({\n            form: this.form,\n            config: this.config,\n          });\n        });\n  }\n\n  resetForm() {\n    this.clear.emit();\n  }\n}\n","<form class=\"dynamic-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <!-- show template name control when template mode is true-->\n  <div\n    class=\"bb-stack bb-stack--density-sm bb-text-support bb-block bb-block--lg col-12\"\n    *ngIf=\"\n      paymentMode === paymentModeType.EDIT_TEMPLATE ||\n      paymentMode === paymentModeType.COPY_PAYMENT\n    \"\n  >\n    <bb-icon-ui\n      *ngIf=\"getIcon() as icon\"\n      class=\"bb-stack__item\"\n      [name]=\"icon\"\n    ></bb-icon-ui>\n    <div class=\"bb-stack__item\" data-role=\"payment-type-label\">\n      {{ config?.name }}\n    </div>\n  </div>\n  <div class=\"form-group col-12\" *ngIf=\"isTemplateMode && templateNameControl\">\n    <bb-input-text-ui\n      label=\"Name of the template\"\n      i18n-label=\"@@payord-form.template-name.label\"\n      [formControl]=\"templateNameControl\"\n      [maxLength]=\"50\"\n      autocomplete=\"off\"\n      [showCharCounter]=\"true\"\n    >\n    </bb-input-text-ui>\n\n    <bb-input-validation-message-ui\n      [showErrors]=\"templateNameControl.touched && templateNameControl?.invalid\"\n    >\n      <ng-container\n        *ngIf=\"\n          templateNameControl.errors && templateNameControl.errors['required']\n        \"\n      >\n        <span\n          data-role=\"required-template-name-error\"\n          i18n=\"@@payment-form-template-name.validation.required-error\"\n        >\n          Template name is required\n        </span>\n      </ng-container>\n    </bb-input-validation-message-ui>\n  </div>\n\n  <!-- Render form controls  -->\n  <ng-container *ngFor=\"let field of controls\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        field.fields ? formGroupTmpl : formControlTmpl;\n        context: { $implicit: field }\n      \"\n    >\n    </ng-container>\n  </ng-container>\n\n  <!--Render button group -->\n  <ng-container\n    *ngIf=\"paymentMode !== paymentModeType.EDIT_PAYMENT; else editButtonGroup\"\n  >\n    <ng-container\n      *ngTemplateOutlet=\"\n        formControlTmpl;\n        context: { $implicit: buttonGroupConfig }\n      \"\n    ></ng-container>\n  </ng-container>\n\n  <ng-template #editButtonGroup>\n    <div class=\"btn-container bb-button-bar\">\n      <bb-load-button-ui\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        [isLoading]=\"isSubmittingShared$ | async\"\n        (click)=\"onEditionSubmit()\"\n        data-role=\"submit-button\"\n        i18n=\"@@omni-edit-payment-next-btn\"\n      >\n        Next\n      </bb-load-button-ui>\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        color=\"link\"\n        data-role=\"cancel-button\"\n        (click)=\"onEditionCancel()\"\n        [disabled]=\"isSubmittingShared$ | async\"\n        i18n=\"@@omni-edit-payment-cancel-btn\"\n      >\n        Cancel\n      </button>\n    </div>\n  </ng-template>\n\n  <ng-template let-config #formGroupTmpl>\n    <bb-payord-group [config]=\"config\" [group]=\"getFormGroup(config)\">\n      <ng-container *ngFor=\"let control of config.fields\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            control.fields ? formGroupTmpl : formControlTmpl;\n            context: { $implicit: control }\n          \"\n        >\n        </ng-container>\n      </ng-container>\n    </bb-payord-group>\n  </ng-template>\n\n  <ng-template let-config #formControlTmpl>\n    <ng-container\n      bbPaymentFormField\n      [config]=\"config\"\n      [options]=\"config.options\"\n      [group]=\"getFormGroup(config)\"\n    ></ng-container>\n  </ng-template>\n</form>\n","import { FormGroup } from '@angular/forms';\nimport { PaymentOption as PaymentOptionResponse } from '@backbase/data-ang/payment-order-options';\nimport {\n  PaymentComponents,\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentFormItem,\n  PaymentOptionFields,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\nimport { Observable } from 'rxjs';\n\nexport const filterPaymentConfigs = (\n  paymentOptions: PaymentOptionResponse[],\n  paymentTypes: Array<PaymentTypeConfig>\n): PaymentTypeConfig[] =>\n  paymentOptions.map(\n    (paymentOption) =>\n      paymentTypes.filter(\n        (paymentConfig) =>\n          paymentOption.paymentType === paymentConfig.paymentType\n      )[0]\n  );\n\nexport const getPaymentCostFieldConfig = () => ({\n  name: PaymentOptionFields.paymentCost,\n  type: PaymentComponents.paymentCost,\n  options: {\n    isWizardMode: true,\n  },\n});\n\nexport const getSelectPaymentOptionFieldConfig = (\n  items$: Observable<Array<PaymentOptionResponse>>,\n  paymentTypes: Array<PaymentTypeConfig>,\n  checkClosedPaymentsAccess = false\n) => {\n  const optionLabels = paymentTypes.reduce(\n    (nameMap: { [key: string]: string }, paymentConfig: PaymentTypeConfig) => {\n      nameMap[paymentConfig.paymentType] = paymentConfig.name;\n      return nameMap;\n    },\n    {}\n  );\n  return {\n    name: PaymentOptionFields.selectPaymentOption,\n    type: PaymentComponents.selectPaymentOption,\n    options: {\n      items$,\n      optionLabels,\n      isWizardMode: true,\n      checkClosedPaymentsAccess,\n    },\n  };\n};\n\nexport const getChargeBearerFieldConfig = () => ({\n  name: PaymentOptionFields.chargeBearer,\n  type: PaymentComponents.chargeBearer,\n  options: {\n    label: 'How fees are paid',\n    isWizardMode: true,\n  },\n});\n\nexport const getRelatedPaymentConfig = (\n  paymentConfigs: PaymentTypeConfig[]\n): PaymentTypeConfig | undefined =>\n  paymentConfigs.filter(\n    (paymentConfig) => paymentConfig && !!paymentConfig.relatedPaymentTypes\n  )[0];\n\nexport const getMappedGroup = (\n  mappedGroupName: string,\n  form: FormGroup\n): FormGroup => {\n  let mappedGroup = form.get(mappedGroupName);\n  let parent = form;\n  const subGroups = mappedGroupName.split('.');\n\n  if (mappedGroup) return <FormGroup>mappedGroup;\n\n  for (const subGroup of subGroups) {\n    if (!parent.get(subGroup)) {\n      parent.addControl(subGroup, new FormGroup({}));\n    }\n    mappedGroup = <FormGroup>parent.get(subGroup);\n    parent = <FormGroup>mappedGroup;\n  }\n\n  return <FormGroup>mappedGroup;\n};\n\n/**\n * Tags each form field in a payment config to the corresponding parent form Group.\n */\nexport const tagFormGroupToFormFields = (\n  arr: Array<PaymentFormFieldConfig | PaymentFormGroup>,\n  _group: FormGroup,\n  controlsArr: Array<PaymentFormItem>,\n  form: FormGroup,\n  parentName = ''\n) => {\n  arr.forEach((control: PaymentFormFieldConfig | PaymentFormGroup) => {\n    const mappedField = control.options && control.options.mapToField;\n    const group = mappedField ? getMappedGroup(mappedField, form) : _group;\n    const parent = mappedField || parentName;\n    const subArray: Array<PaymentFormItem> = [];\n\n    if ((<PaymentFormGroup>control).fields instanceof Array) {\n      const subGroup = <FormGroup>group.get(control.name) || new FormGroup({});\n      tagFormGroupToFormFields(\n        (<PaymentFormGroup>control).fields,\n        subGroup,\n        subArray,\n        form,\n        parent ? `${parent}.${control.name}` : control.name\n      );\n      group.addControl(control.name, subGroup);\n      controlsArr.push({ ...control, fields: subArray, parent: parentName });\n    } else {\n      controlsArr.push({ ...control, parent });\n    }\n  });\n};\n\nexport const hasSameFields = (paymentConfigs: PaymentTypeConfig[]) => {\n  let similar = false;\n  const relatedTypeConfig = getRelatedPaymentConfig(paymentConfigs);\n  if (relatedTypeConfig && relatedTypeConfig.relatedPaymentTypes) {\n    const relatedPaymentTypes = [\n      relatedTypeConfig.paymentType,\n      ...relatedTypeConfig.relatedPaymentTypes,\n    ];\n    similar = paymentConfigs.every(\n      (config) => relatedPaymentTypes.indexOf(config.paymentType) !== -1\n    );\n  } else {\n    similar = paymentConfigs.every(\n      (config) => config.paymentType === paymentConfigs[0].paymentType\n    );\n  }\n  return similar;\n};\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport {\n  CounterPartyFields,\n  FetchPaymentOptionsListenerFn,\n  focusErrorElement,\n  getConfig,\n  HiddenFields,\n  InitiatorFields,\n  isFormGroupConfig,\n  PaymentBaseFields,\n  PaymentComponents,\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentFormItem,\n  PaymentOption,\n  PaymentOptionFields,\n  PaymentState,\n  PaymentTypeConfig,\n  RemittanceInfoFields,\n} from '@backbase/payment-orders-ang';\nimport { BehaviorSubject, Observable, pipe, Subject } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  skipWhile,\n  startWith,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\n\nimport {\n  filterPaymentConfigs,\n  getChargeBearerFieldConfig,\n  getPaymentCostFieldConfig,\n  getSelectPaymentOptionFieldConfig,\n  hasSameFields,\n  tagFormGroupToFormFields,\n} from '../../helpers/payment-config-helpers';\nimport {\n  addAddressFields,\n  applyInputFormSettingForCountry,\n  applyPurposeOfPaymentSettings,\n  createControlsMap,\n  registerFormControl,\n  setAdditionalBankDetails,\n} from '../../helpers/form-helpers';\nimport {\n  PaymentOption as PaymentOptionResponse,\n  SanctionedCountry,\n} from '@backbase/data-ang/payment-order-options';\n\n@Component({\n  selector: 'bb-adaptive-form',\n  templateUrl: './adaptive-form.component.html',\n})\nexport class AdaptiveFormComponent implements OnInit, AfterViewInit, OnDestroy {\n  /**\n   * The actual formgroup item.\n   */\n  @Input() formItem!: FormGroup;\n  /**\n   * The initial set of fields rendered on the form.\n   * These fields are static for all payment types.\n   */\n  @Input() baseFields: Array<PaymentFormFieldConfig | PaymentFormGroup> = [];\n  /**\n   * Array of payment configs that are needs to be supported by the wizard.\n   */\n  @Input() paymentTypes: Array<PaymentTypeConfig> = [];\n  /**\n   * The current state of the payment. Defaults to INITIAL\n   */\n  @Input() paymentState: PaymentState = PaymentState.INITIAL;\n  /**\n   * The flag to denote if it is a debit payment.\n   */\n  @Input() isDebitPayment = false;\n  /**\n   * The current selected payment config\n   */\n  @Input() selectedPaymentConfig?: PaymentTypeConfig;\n  /**\n   * The current selected payment option\n   */\n  @Input() selectedPaymentOption?: PaymentOption;\n  /**\n   * Flag to display when not payment option is avaialble\n   */\n  @Input() paymentOptionsError = false;\n\n  /**\n   * Flag to check closed payment access\n   */\n  @Input() checkClosedPaymentsAccess = false;\n  /**\n   * An Observable containing the list of payment options\n   */\n  @Input() paymentOptions$!: Observable<Array<PaymentOptionResponse>>;\n\n  /**\n   * Apply a payment template event emitter\n   */\n  @Output() applyPaymentTemplate = new EventEmitter<FormGroup>();\n\n  /**\n   * A subject that emit s a flag to denote if we are in the process of fetching the payment options\n   */\n  @Input() set fetchingOptions(isFetchingOptions: boolean) {\n    this.fetchingOptions$.next(!!isFetchingOptions);\n  }\n\n  /**\n   * An optional listener that can be used be trigger the payment options api.\n   * This will replace call to listenCriticalFieldChanges function.\n   */\n  @Input() fetchPaymentOptionsListener?: FetchPaymentOptionsListenerFn;\n\n  /**\n   * Flag that denotes if form is being submitted\n   */\n  @Input() set submitting(isSubmitting: boolean) {\n    this.isSubmitting$.next(isSubmitting);\n  }\n\n  /**\n   * A subject that emits when payment options has to be fetched\n   */\n  @Input() fetchOptions$!: Subject<FormGroup>;\n  /**\n   * Flag that indicates wether should apply a template\n   * Default value is `false`\n   */\n  @Input() shouldApplyTemplate = false;\n  /**\n   * The flag to denote if the widget is rendered inside a modal.\n   */\n  @Input() isModalView = false;\n  /**\n   * Event emitted when the form is submitted.\n   */\n  @Output() submitted = new EventEmitter();\n  /**\n   *  Event emitted when a payment option is selected\n   */\n  @Output() selectPaymentOption = new EventEmitter();\n  /**\n   * Event emitted when the form is reset.\n   */\n  @Output() clear = new EventEmitter();\n  /**\n   * Event emitted when a payment config is selected based on the form details.\n   */\n  @Output() selectConfig = new EventEmitter();\n\n  isSubmitting$ = new BehaviorSubject<boolean>(false);\n  fetchingOptions$ = new BehaviorSubject<boolean>(false);\n\n  gc$ = new Subject();\n  currentControls: Array<PaymentFormFieldConfig | PaymentFormGroup> = [];\n  form!: FormGroup;\n  shouldResetPaymentOptions = false;\n  currentDebitAccount?: string;\n  debounceInput = pipe(\n    takeUntil(this.gc$),\n    debounceTime(500),\n    distinctUntilChanged()\n  );\n\n  controls$ = new BehaviorSubject<Array<any>>([]);\n  paymentOptionControls$ = new BehaviorSubject<\n    Array<PaymentFormFieldConfig> | undefined\n  >(undefined);\n  paymentOptionsSubject$ = new BehaviorSubject<\n    Array<Array<PaymentOption & { name: string }>> | undefined\n  >(undefined);\n  paymentTypeControl!: AbstractControl;\n  selectPaymentOptionControl!: AbstractControl;\n  inputFormSettingControl!: AbstractControl;\n  chargeBearerControl!: AbstractControl;\n  chargeBearerOptionsControl!: AbstractControl;\n  transferFeeControl!: AbstractControl;\n  baseControls$ = new BehaviorSubject<Array<any>>([]);\n  taggedBaseFields: Array<PaymentFormFieldConfig | PaymentFormGroup> = [];\n  listenChanges!: Function;\n  retainableFields = [\n    `${PaymentBaseFields.counterparty}.${CounterPartyFields.postalAddress}`,\n    `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`,\n    `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}.${CounterPartyFields.bic}`,\n    `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}.${CounterPartyFields.bankName}`,\n  ];\n  buttonGroupConfig!: PaymentFormFieldConfig;\n\n  constructor(private readonly formEl: ElementRef) {}\n\n  ngOnInit() {\n    this.form = this.formItem || new FormGroup({});\n    this.paymentTypeControl = registerFormControl(this.form, 'paymentType');\n    this.registerPaymentOptionControls();\n\n    this.listenPaymentOptionsChange();\n    this.listenFormSettingChange();\n    // tagging the base fields is required to find the delta between the base fields and others\n    tagFormGroupToFormFields(\n      this.baseFields,\n      this.form,\n      this.taggedBaseFields,\n      this.form\n    );\n    this.baseControls$.next(this.taggedBaseFields);\n    this.currentControls = this.baseFields;\n\n    this.listenChanges =\n      this.fetchPaymentOptionsListener || this.listenCriticalFieldChanges;\n    this.registerPostalAddressFormGroups();\n    registerFormControl(\n      this.form,\n      'isEditMode',\n      [],\n      [],\n      this.paymentState === PaymentState.EDIT\n    );\n\n    if (this.paymentState === PaymentState.EDIT && this.selectedPaymentConfig) {\n      this.listenPaymentType(this.selectedPaymentConfig.paymentType);\n    }\n\n    if (this.isDebitPayment) {\n      registerFormControl(this.form, HiddenFields.isDebitPayment, [], [], true);\n    }\n\n    this.buttonGroupConfig = this.getButtonGroupConfig();\n    this.renderPaymentOptionControls();\n  }\n\n  ngAfterViewInit() {\n    this.listenChanges(this.form, this.fetchOptions$);\n    this.listenPaymentTypeChanges();\n    if (this.shouldApplyTemplate) {\n      this.applyPaymentTemplate.emit(this.form);\n    }\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n    this.controls$.complete();\n    this.paymentOptionControls$.next([]);\n    this.paymentOptionControls$.complete();\n  }\n\n  private getButtonGroupConfig() {\n    return {\n      type: PaymentComponents.buttonGroup,\n      name: PaymentComponents.buttonGroup,\n      options: {\n        submitting$: this.isSubmitting$,\n        isLoading$: this.fetchingOptions$,\n        submit: this.onSubmit.bind(this),\n        reset: this.resetForm.bind(this),\n        isModalView: this.isModalView,\n      },\n    };\n  }\n\n  registerPaymentOptionControls() {\n    this.chargeBearerControl = registerFormControl(\n      this.form,\n      PaymentOptionFields.chargeBearer\n    );\n    this.chargeBearerOptionsControl = registerFormControl(\n      this.form,\n      PaymentOptionFields.chargeBearerOptions\n    );\n    this.transferFeeControl = registerFormControl(\n      this.form,\n      PaymentOptionFields.transferFee\n    );\n    this.selectPaymentOptionControl = registerFormControl(\n      this.form,\n      PaymentOptionFields.selectPaymentOption\n    );\n    this.inputFormSettingControl = registerFormControl(\n      this.form,\n      PaymentOptionFields.inputFormFromSettings\n    );\n  }\n\n  registerPostalAddressFormGroups() {\n    const counterpartyGroup = <FormGroup>(\n      this.form.get(PaymentBaseFields.counterparty)\n    );\n    let creditorBankGroup = <FormGroup>(\n      counterpartyGroup.get(CounterPartyFields.creditorBank)\n    );\n\n    if (!creditorBankGroup) {\n      creditorBankGroup = new FormGroup({});\n      counterpartyGroup.addControl(\n        CounterPartyFields.creditorBank,\n        creditorBankGroup\n      );\n    }\n\n    let creditorAddressGroup = <FormGroup>(\n      creditorBankGroup.get(CounterPartyFields.postalAddress)\n    );\n    let creditorBankAddressGroup = <FormGroup>(\n      creditorBankGroup.get(CounterPartyFields.postalAddress)\n    );\n\n    if (!creditorAddressGroup) {\n      creditorAddressGroup = new FormGroup({});\n      counterpartyGroup.addControl(\n        CounterPartyFields.postalAddress,\n        creditorAddressGroup\n      );\n    }\n\n    if (!creditorBankAddressGroup) {\n      creditorBankAddressGroup = new FormGroup({});\n      creditorBankGroup.addControl(\n        CounterPartyFields.postalAddress,\n        creditorBankAddressGroup\n      );\n    }\n\n    addAddressFields(creditorAddressGroup);\n    addAddressFields(creditorBankAddressGroup);\n  }\n\n  /**\n   * Renders the provided payment config\n   */\n  renderPaymentConfig(paymentConfig: PaymentTypeConfig) {\n    const newControls: Array<PaymentFormFieldConfig | PaymentFormGroup> = [];\n    let deltaFields: Array<PaymentFormFieldConfig | PaymentFormGroup> = [];\n    tagFormGroupToFormFields(\n      paymentConfig.fields,\n      this.form,\n      newControls,\n      this.form\n    );\n    setAdditionalBankDetails(this.form, paymentConfig);\n\n    if (this.currentControls.length) {\n      deltaFields = this.deleteControls(this.currentControls, newControls);\n    }\n    const groupedDelta = this.groupDeltaFields(newControls, deltaFields);\n    this.currentControls = newControls;\n\n    this.controls$.next(groupedDelta);\n\n    if (this.paymentTypeControl) {\n      this.paymentTypeControl.patchValue(paymentConfig.paymentType);\n    }\n  }\n\n  /**\n   * The activate depandants feature is based on groups so we need to group delta fields in order to toggle dependatants.\n   * This function is used to group sibling delta fields into groups, so that the toggle dependatants feature is retained.\n   */\n  groupDeltaFields(\n    currentControls: Array<PaymentFormItem>,\n    delta: Array<PaymentFormItem>\n  ) {\n    const groupedFields: Array<any> = [];\n    for (const deltaField of delta) {\n      if (Array.isArray(groupedFields[groupedFields.length - 1])) {\n        const prevParent = groupedFields[groupedFields.length - 1][0].parent;\n        if (\n          deltaField.parent !== PaymentBaseFields.counterparty &&\n          prevParent === deltaField.parent\n        ) {\n          groupedFields[groupedFields.length - 1].push(deltaField);\n        } else {\n          groupedFields.push(deltaField);\n        }\n      } else if (\n        deltaField.parent !== PaymentBaseFields.counterparty &&\n        groupedFields.length &&\n        groupedFields[groupedFields.length - 1].parent === deltaField.parent\n      ) {\n        const prevElem = groupedFields.pop();\n        groupedFields.push([prevElem, deltaField]);\n      } else {\n        groupedFields.push(deltaField);\n      }\n    }\n    return this.mapGroupedFields(groupedFields, currentControls);\n  }\n\n  /**\n   * This function is fetches the grouped delta fields and encloses them with their appropriate parent group config.\n   * Doing so ensures the toggle dependants feature works as expected\n   */\n  mapGroupedFields(\n    groupedFields: Array<PaymentFormItem>,\n    currentControls: Array<PaymentFormItem>\n  ) {\n    const configs: Array<PaymentFormItem> = groupedFields.map(\n      (groupedField) => {\n        if (Array.isArray(groupedField)) {\n          const anccestorArray = groupedField[0].parent.split('.');\n          const parent = anccestorArray.pop();\n          const ancestor = anccestorArray.length\n            ? anccestorArray.length === 1\n              ? anccestorArray[0]\n              : anccestorArray.join('.')\n            : '';\n          const ancestorConfig = getConfig(ancestor, currentControls);\n          const parentConfig = getConfig(\n            parent,\n            <PaymentFormGroup>ancestorConfig || currentControls\n          );\n\n          return {\n            ...parentConfig,\n            fields: groupedField,\n            //reset the group title since it will be added in payment information group\n            title: '',\n          } as PaymentFormItem;\n        } else return groupedField;\n      }\n    );\n\n    return this.organiseConfigs(configs);\n  }\n\n  /**\n   * This function encloses the non counterparty and non schedule delta fields inside payment information group.\n   */\n  organiseConfigs(configs: Array<PaymentFormItem>) {\n    const counterPartyConfigs = [];\n    const paymentInfoConfigs = [];\n    const scheduleConfigs = [];\n    for (const config of configs) {\n      config.parent = config.parent || '';\n      if (\n        config.name === CounterPartyFields.remittanceInformation ||\n        config.name === CounterPartyFields.messageToBank\n      ) {\n        paymentInfoConfigs.push(config);\n      } else if (\n        config.parent === PaymentBaseFields.counterparty ||\n        config.parent.indexOf(`${PaymentBaseFields.counterparty}`) === 0\n      ) {\n        counterPartyConfigs.push(config);\n      } else if (\n        config.name === PaymentBaseFields.schedule ||\n        config.parent === PaymentBaseFields.schedule\n      ) {\n        if (isFormGroupConfig(config)) {\n          scheduleConfigs.push(...(config as PaymentFormGroup).fields);\n        } else {\n          scheduleConfigs.push(config);\n        }\n      } else {\n        paymentInfoConfigs.push(config);\n      }\n    }\n    const paymentInfo: PaymentFormGroup = {\n      name: 'paymentInfo',\n      title: 'Payment Infomation',\n      fields: [...paymentInfoConfigs],\n    };\n    const schedule: PaymentFormGroup = {\n      name: PaymentBaseFields.schedule,\n      fields: [...scheduleConfigs],\n    };\n    return [...counterPartyConfigs, paymentInfo, schedule];\n  }\n\n  /**\n   * Renders the provided array of fields in the form\n   */\n  renderFields(\n    fields: Array<PaymentFormFieldConfig | PaymentFormGroup>,\n    flatArray: Array<PaymentFormFieldConfig | PaymentFormGroup>\n  ) {\n    tagFormGroupToFormFields(fields, this.form, flatArray, this.form);\n    this.controls$.next([...flatArray]);\n  }\n\n  /**\n   * Deletes form controls in current array that are absent in the new array and returns the delta fields\n   */\n  deleteControls(\n    currentControls: Array<PaymentFormFieldConfig | PaymentFormGroup>,\n    newControls: Array<PaymentFormFieldConfig | PaymentFormGroup>\n  ) {\n    const baseControlsMap = createControlsMap(this.taggedBaseFields);\n    const currentControlsMap = createControlsMap(currentControls);\n    const newControlsMap = createControlsMap(newControls);\n    const deltaControls = [];\n\n    // Get new configs that are not rendered in the form\n    for (const key in newControlsMap) {\n      if (\n        !baseControlsMap.hasOwnProperty(key) &&\n        !PaymentOptionFields[<PaymentOptionFields>key] &&\n        key !==\n          `${PaymentBaseFields.counterparty}.${CounterPartyFields.counterPartyAccountGroup}`\n      ) {\n        deltaControls.push(newControlsMap[key]);\n      }\n    }\n\n    // Remove existing controls from the form that are not present in the newe config\n    for (const key in currentControlsMap) {\n      if (currentControlsMap.hasOwnProperty(key)) {\n        const controlName = <string>key.split('.').pop();\n        const control = this.form.get(key) || this.form.get(controlName);\n        if (\n          !baseControlsMap.hasOwnProperty(key) &&\n          !PaymentOptionFields[<PaymentOptionFields>key] &&\n          !newControlsMap.hasOwnProperty(key) &&\n          this.retainableFields.indexOf(key) === -1 &&\n          control &&\n          control.parent\n        ) {\n          (<FormGroup>control.parent).removeControl(controlName);\n        }\n        // reset validators from retainable controls\n        else if (this.retainableFields.indexOf(key) !== -1) {\n          control?.setValidators(null);\n          control?.updateValueAndValidity();\n        }\n      }\n    }\n\n    return deltaControls;\n  }\n\n  /**\n   * Listens to the form for changes in debit account number, credit account number, amount and currency\n   */\n  private listenCriticalFieldChanges(\n    form: FormGroup,\n    fetchOptions$: Subject<FormGroup>\n  ) {\n    // Cache the critical form controls\n    const debitAccount = <FormControl>(\n      form.get([PaymentBaseFields.initiator, InitiatorFields.accountNumber])\n    );\n    const creditAccount = <FormControl>(\n      form.get([\n        PaymentBaseFields.counterparty,\n        CounterPartyFields.accountNumber,\n      ])\n    );\n    const counterpartyCountry = <FormControl>(\n      form.get([\n        PaymentBaseFields.counterparty,\n        CounterPartyFields.creditorBank,\n        CounterPartyFields.postalAddress,\n        CounterPartyFields.country,\n      ])\n    );\n    const amountInfo = <FormControl>(\n      form.get([\n        PaymentBaseFields.remittanceInfo,\n        RemittanceInfoFields.amountCurrencyGroup,\n      ])\n    );\n\n    this.currentDebitAccount = debitAccount.value;\n\n    // subscribe for value changes in the critical form controls and trigger payment options endpoint\n    if (debitAccount && creditAccount && amountInfo) {\n      this.debounceInput(debitAccount.valueChanges)\n        .pipe(\n          skipWhile((val) => this.currentDebitAccount === val),\n          tap(() => {\n            this.currentDebitAccount = debitAccount.value;\n          })\n        )\n        .subscribe(this.fetchPaymentOptions.bind(this, form, fetchOptions$));\n      this.debounceInput(creditAccount.valueChanges).subscribe(\n        this.fetchPaymentOptions.bind(this, form, fetchOptions$)\n      );\n      this.debounceInput(amountInfo.valueChanges).subscribe(\n        this.fetchPaymentOptions.bind(this, form, fetchOptions$)\n      );\n\n      if (counterpartyCountry) {\n        this.debounceInput(counterpartyCountry.valueChanges).subscribe(\n          this.fetchPaymentOptions.bind(this, form, fetchOptions$)\n        );\n      }\n    }\n  }\n\n  /**\n   * Listen to the select payment option component and render the fields fo the selected payment type.\n   */\n  private listenPaymentTypeChanges() {\n    this.paymentTypeControl.valueChanges\n      .pipe(distinctUntilChanged(), takeUntil(this.gc$))\n      .subscribe(() => {\n        this.listenPaymentType(this.paymentTypeControl.value);\n      });\n  }\n\n  /**\n   * Listens to changes to the payment type in the form\n   */\n  private listenPaymentType(paymentType: string) {\n    if (paymentType) {\n      const selectedPaymentTypeConfig = this.paymentTypes.filter(\n        (paymentConfig) => paymentType === paymentConfig.paymentType\n      )[0];\n      this.selectConfig.next(selectedPaymentTypeConfig);\n      this.renderPaymentConfig(selectedPaymentTypeConfig);\n    }\n  }\n\n  private getPaymentConfigByType(\n    paymentType: string,\n    paymentConfigs: PaymentTypeConfig[]\n  ): PaymentTypeConfig | undefined {\n    return paymentConfigs.filter(\n      (paymentConfig) => paymentType === paymentConfig.paymentType\n    )[0];\n  }\n\n  private listenPaymentOptionsChange() {\n    if (this.paymentOptions$) {\n      this.paymentOptions$\n        .pipe(\n          takeUntil(this.gc$),\n          tap((options: Array<PaymentOptionResponse>) => {\n            this.onPaymentOptionsChange(options);\n            this.applyCountrySpecificSettings(\n              this.inputFormSettingControl.value\n            );\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  private listenFormSettingChange() {\n    this.inputFormSettingControl.valueChanges\n      .pipe(\n        startWith(this.inputFormSettingControl.value),\n        takeUntil(this.gc$),\n        distinctUntilChanged(),\n        filter((value) => !!value)\n      )\n      .subscribe((value: SanctionedCountry) =>\n        this.applyCountrySpecificSettings(value)\n      );\n  }\n\n  private applyCountrySpecificSettings(value: SanctionedCountry) {\n    const currentConfig = this.getPaymentConfigByType(\n      this.paymentTypeControl.value,\n      this.paymentTypes\n    );\n    if (value) {\n      for (const inputFormSetting of value.inputFormSettings || []) {\n        applyInputFormSettingForCountry({\n          inputFormSetting,\n          form: this.form,\n          config: { fields: this.baseFields, name: '', paymentType: '' },\n        });\n        if (currentConfig) {\n          applyInputFormSettingForCountry({\n            inputFormSetting,\n            form: this.form,\n            config: currentConfig,\n          });\n        }\n      }\n      if (currentConfig) {\n        applyPurposeOfPaymentSettings({\n          form: this.form,\n          config: currentConfig,\n        });\n      }\n    }\n  }\n\n  private renderPaymentOptionControls() {\n    const paymentOptionControls = [];\n    paymentOptionControls.push(\n      getSelectPaymentOptionFieldConfig(\n        this.paymentOptions$,\n        this.paymentTypes,\n        this.checkClosedPaymentsAccess\n      )\n    );\n    paymentOptionControls.push(getChargeBearerFieldConfig());\n    paymentOptionControls.push(getPaymentCostFieldConfig());\n    this.paymentOptionControls$.next(paymentOptionControls);\n  }\n\n  /**\n   * Resets the existing payment options\n   */\n  resetPaymentOptions(paymentOptions: Array<PaymentOptionResponse>) {\n    if (this.shouldResetPaymentOptions) {\n      if (this.shouldResetSelectedPaymentOption(paymentOptions)) {\n        this.selectPaymentOptionControl.reset();\n      }\n      this.chargeBearerOptionsControl.reset();\n      this.transferFeeControl.reset();\n    }\n  }\n\n  private shouldResetSelectedPaymentOption(\n    paymentOptions: Array<PaymentOptionResponse>\n  ): boolean {\n    const selectedPaymentType = (\n      this.selectPaymentOptionControl.value || ''\n    ).split('::')[0];\n    if (selectedPaymentType) {\n      return !paymentOptions.some(\n        (option) => option.paymentType === selectedPaymentType\n      );\n    }\n\n    return false;\n  }\n\n  /**\n   * Callback triggered when the payment type changes\n   */\n  private onPaymentOptionsChange(\n    paymentOptions: Array<PaymentOptionResponse> = []\n  ) {\n    this.resetPaymentOptions(paymentOptions);\n    this.shouldResetPaymentOptions = true;\n    if (!paymentOptions || !paymentOptions.length) {\n      return;\n    }\n\n    const paymentConfigs = filterPaymentConfigs(\n      paymentOptions,\n      this.paymentTypes\n    );\n    if (paymentOptions.length === 1 || hasSameFields(paymentConfigs)) {\n      this.renderPaymentConfig(paymentConfigs[0]);\n      this.selectConfig.next(paymentConfigs[0]);\n    } else if (this.shouldResetSelectedPaymentOption(paymentOptions)) {\n      this.controls$.next([]);\n    }\n  }\n\n  /**\n   * Fetches the payment options for provided payment details\n   */\n\n  fetchPaymentOptions(form: FormGroup, fetchOptions$: Subject<FormGroup>) {\n    const debitAccount = <FormControl>(\n      form.get(\n        `${PaymentBaseFields.initiator}.${InitiatorFields.accountNumber}`\n      )\n    );\n    const creditAccount = <FormControl>(\n      form.get(\n        `${PaymentBaseFields.counterparty}.${CounterPartyFields.accountNumber}`\n      )\n    );\n    const amountInfo = <FormControl>(\n      form.get(\n        `${PaymentBaseFields.remittanceInfo}.${RemittanceInfoFields.amountCurrencyGroup}`\n      )\n    );\n    const bankCountry = <FormControl>(\n      form.get([\n        PaymentBaseFields.counterparty,\n        CounterPartyFields.creditorBank,\n        CounterPartyFields.postalAddress,\n        CounterPartyFields.country,\n      ])\n    );\n    const closedPayment = form.get(HiddenFields.isClosedPayment);\n    const arrangementId = form.get([\n      PaymentBaseFields.counterparty,\n      CounterPartyFields.id,\n    ]);\n    const skipCreditAccountValidityCheck =\n      closedPayment?.value || arrangementId?.value;\n\n    if (\n      debitAccount &&\n      creditAccount &&\n      amountInfo &&\n      bankCountry &&\n      bankCountry.valid &&\n      debitAccount.value &&\n      (creditAccount.valid || skipCreditAccountValidityCheck) &&\n      amountInfo.valid\n    ) {\n      fetchOptions$.next(form);\n    }\n  }\n\n  /**\n   * Returns the form group for the provided form field config\n   */\n  getFormGroup(field: PaymentFormItem): FormGroup {\n    return <FormGroup>this.form.get(field.parent as string) || this.form;\n  }\n\n  /**\n   * Submits the payment form\n   */\n  onSubmit() {\n    this.form.markAsDirty();\n    this.form.markAllAsTouched();\n    if (!this.form.valid) {\n      focusErrorElement(this.formEl?.nativeElement);\n    } else if (this.form.valid && !this.submitting) {\n      this.submitted.next(this.form);\n      this.selectPaymentOption.next(this.selectedPaymentOption);\n    }\n  }\n\n  /**\n   * Resets the payment form\n   */\n  resetForm() {\n    this.selectConfig.next(undefined);\n    this.selectPaymentOption.next(undefined);\n    this.gc$.next(); // Clear listeners\n    this.clear.next();\n  }\n}\n","<form class=\"payment-wizard-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <ng-container *ngFor=\"let field of baseControls$ | async\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        field.fields ? formGroupTmpl : formControlTmpl;\n        context: { $implicit: field }\n      \"\n    >\n    </ng-container>\n  </ng-container>\n\n  <div class=\"position-relative\">\n    <div class=\"delta-container\">\n      <ng-container *ngFor=\"let field of controls$ | async\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            field.fields ? formGroupTmpl : formControlTmpl;\n            context: { $implicit: field }\n          \"\n        >\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <ng-container *ngFor=\"let controlConfig of paymentOptionControls$ | async\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          controlConfig.fields ? formGroupTmpl : formControlTmpl;\n          context: { $implicit: controlConfig }\n        \"\n      >\n      </ng-container>\n    </ng-container>\n\n    <div\n      *ngIf=\"fetchingOptions$ | async\"\n      class=\"wizard-loader-container position-absolute w-100 h-100 top-0 fixed-top bg-white\"\n      [style.opacity]=\"0.8\"\n    >\n      <bb-loading-indicator-ui\n        loaderSize=\"lg\"\n        class=\"absolute-center\"\n      ></bb-loading-indicator-ui>\n    </div>\n  </div>\n\n  <ng-template let-config #formGroupTmpl>\n    <bb-payord-group [config]=\"config\" [group]=\"getFormGroup(config)\">\n      <ng-container *ngFor=\"let control of config.fields\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            control.fields ? formGroupTmpl : formControlTmpl;\n            context: { $implicit: control }\n          \"\n        >\n        </ng-container>\n      </ng-container>\n    </bb-payord-group>\n  </ng-template>\n\n  <ng-template let-config #formControlTmpl>\n    <ng-container\n      bbPaymentFormField\n      [config]=\"config\"\n      [options]=\"config.options\"\n      [group]=\"getFormGroup(config)\"\n    ></ng-container>\n  </ng-template>\n\n  <div\n    class=\"text-danger bb-block--md col-12\"\n    *ngIf=\"paymentOptionsError\"\n    i18n=\"@@adaptive-form-no-payment-option-error\"\n  >\n    A Payment transfer is not possible with provided details. Please update the\n    details and try again.\n  </div>\n\n  <!--Render button group -->\n  <ng-container\n    *ngTemplateOutlet=\"\n      formControlTmpl;\n      context: { $implicit: buttonGroupConfig }\n    \"\n  ></ng-container>\n\n  <ng-template #fetchingOptions>\n    <bb-loading-indicator-ui\n      loaderSize=\"sm\"\n      class=\"bb-load-button__loading-indicator\"\n    ></bb-loading-indicator-ui>\n  </ng-template>\n</form>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MultiPaymentService {\n  totalAmount$ = new BehaviorSubject<number>(0);\n  totalTransfers$ = new BehaviorSubject<number>(0);\n\n  get paymentTotalAmount$(): Observable<number> {\n    return this.totalAmount$.asObservable().pipe(distinctUntilChanged());\n  }\n\n  get paymentTotalTransfers$(): Observable<number> {\n    return this.totalTransfers$.asObservable().pipe(distinctUntilChanged());\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport {\n  PaymentFormGroup,\n  PaymentFormItem,\n  PaymentTypeConfig,\n  StepperConfig,\n  PaymentFormFieldConfig,\n  MultipleFormGroup,\n  MultiPaymentHooksConfig,\n  MultiPaymentHooks,\n  StepperAction,\n  PaymentBaseFields,\n  InitiatorFields,\n  ManualBatchTypeConfig,\n} from '@backbase/payment-orders-ang';\nimport { Subject, Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { triggerStepperHook } from '../../helpers/hooks-helpers';\nimport { ComponentsFactoryService } from '../../services/components-factory.service';\nimport { MultiPaymentService } from '../../services/multi-payment.service';\nimport { VisibilityService } from '../../services/visibility.service';\nimport { BatchOrderStateService } from '@backbase/payment-orders-ang';\nimport '@angular/localize/init';\n\n@Component({\n  selector: 'bb-multi-payment-form',\n  templateUrl: './multi-payment-form.component.html',\n  providers: [VisibilityService, ComponentsFactoryService],\n})\nexport class MultiPaymentFormComponent implements OnInit, OnDestroy {\n  /**\n   * stepper Config for showing stepper details\n   */\n  @Input() stepperConfig!: StepperConfig[];\n  /**\n   * existing form\n   */\n  @Input() formItem?: FormGroup;\n  /**\n   * Manual batches configuration\n   */\n  @Input() config!: ManualBatchTypeConfig;\n  /**\n   * errorList to be displayed in the component.\n   */\n  @Input() errorList: Array<any> = [];\n  /**\n   * Event emitter when form is submitted\n   */\n  @Output() submitted = new EventEmitter();\n  /**\n   * Event Emitter when step is next.\n   */\n  @Output() stepNext = new EventEmitter();\n  /**\n   * Event Emitter when step is back.\n   */\n  @Output() back = new EventEmitter();\n  /**\n   * Event emitter when alert is hidden.\n   */\n  @Output() hideError = new EventEmitter<{ id: number; stepName: string }>();\n\n  form!: FormGroup;\n\n  controls: Array<MultipleFormGroup> = [];\n  stepData: { [key: string]: any } = {};\n\n  private destroy$ = new Subject<void>();\n\n  totalTransfers$ = this.multiPaymentService.paymentTotalTransfers$;\n  totalAmount$ = this.multiPaymentService.paymentTotalAmount$;\n  currentTypeConfig!: PaymentTypeConfig;\n  currentStepForm: Array<Observable<any> | undefined> = [];\n  currentForm = {};\n  subscription!: Observable<any>;\n  formVal = new Subject();\n  currency!: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private readonly componentsFactory: ComponentsFactoryService,\n    private multiPaymentService: MultiPaymentService,\n    public stateService: BatchOrderStateService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formItem || this.fb.group({});\n\n    if (this.config) {\n      this.componentsFactory.registerCustomFields(this.config.customFields);\n      this.createFormFields(this.config.fields, this.form, this.controls);\n      this._listenFormChanges(this.form);\n    }\n\n    for (const step in this.stepperConfig) {\n      if (this.stepperConfig.hasOwnProperty(step)) {\n        this.stepData[this.stepperConfig[step].stepName] = {};\n      }\n    }\n  }\n\n  updateStepperDetails(currentStep: StepperConfig, action?: StepperAction) {\n    switch (action) {\n      case StepperAction.NEXT:\n        this.stateService.resetErrors();\n        if (this.isStepValid(currentStep.stepName)) {\n          this.onStepSubmit();\n        } else {\n          this.stateService.addError(currentStep.stepName, {\n            message: $localize`:@@bb-multi-payment-widget.form-error:Form error: Check entered data before proceeding to the next step.`,\n          });\n        }\n        break;\n      case StepperAction.BACK:\n        this.stateService.resetErrors();\n        this.back.emit();\n        break;\n      case StepperAction.SUBMIT:\n        if (this.isStepValid(currentStep.stepName)) {\n          this.stateService.resetErrors();\n          this.onSubmit();\n        }\n        break;\n    }\n  }\n\n  createFormFields(\n    arr: Array<PaymentFormFieldConfig | PaymentFormGroup>,\n    _group: FormGroup,\n    controlsArr: Array<PaymentFormItem>,\n    parentName?: string\n  ) {\n    arr.forEach((control: PaymentFormFieldConfig | PaymentFormGroup) => {\n      const mappedField = control.options && control.options.mapToField;\n      const group = mappedField\n        ? <FormGroup>this.form.get(mappedField)\n        : _group;\n      const parent = mappedField || parentName;\n      const subArray: Array<PaymentFormItem> = [];\n      if (control.options?.fieldsConfig) {\n        this.currency = control.options.fieldsConfig.amount.currency;\n      }\n      if ((<PaymentFormGroup>control).fields instanceof Array) {\n        const subGroup =\n          <FormGroup>group.get(control.name) || this.fb.group({});\n        this.createFormFields(\n          (<PaymentFormGroup>control).fields,\n          subGroup,\n          subArray,\n          parent ? `${parent}.${control.name}` : control.name\n        );\n        group.addControl(control.name, subGroup);\n        controlsArr.push({ ...control, fields: subArray, parent: parentName });\n      } else {\n        controlsArr.push({ ...control, parent });\n      }\n    });\n  }\n\n  isStepValid(currentStepName: string): boolean {\n    const currentStepFields: Array<MultipleFormGroup> = this.controls.filter(\n      (control) => control.stepName === currentStepName\n    );\n    this.currentStepForm = [];\n    this.currentForm = {};\n\n    const isValidArray: Array<boolean | undefined> = currentStepFields.reduce(\n      (acc: Array<boolean | undefined>, steps: MultipleFormGroup) => {\n        this.form.get(steps.name)?.markAllAsTouched();\n\n        this.currentForm = {\n          ...this.currentForm,\n          ...this.form.get(steps.name)?.value,\n        };\n        acc.push(this.form.get(steps.name)?.valid);\n        return acc;\n      },\n      []\n    );\n    return isValidArray.every(Boolean);\n  }\n\n  onSubmit() {\n    this.form.markAsDirty();\n    this.form.markAllAsTouched();\n\n    if (this.form.valid) {\n      this.submitted.emit(this.form);\n    }\n  }\n\n  onStepSubmit() {\n    if (\n      JSON.stringify(\n        this.stepData[this.stateService.currentStep?.stepName || '']\n      ) !== JSON.stringify(this.currentForm)\n    ) {\n      this.stepData[this.stateService.currentStep?.stepName || ''] = this\n        .stepData[this.stateService.currentStep?.stepName || '']\n        ? this.currentForm\n        : {};\n    }\n    this.stepNext.emit({\n      form: this.currentForm,\n      stepName: this.stateService.currentStep?.stepName,\n    });\n  }\n\n  triggerButtonEvent(\n    hooks: MultiPaymentHooksConfig | undefined,\n    action: StepperAction,\n    currentStep: StepperConfig\n  ) {\n    if (hooks) {\n      triggerStepperHook(\n        MultiPaymentHooks.onClick,\n        hooks,\n        this.updateStepperDetails.bind(this, currentStep, action),\n        this.stateService.currentStep,\n        action\n      );\n    } else {\n      this.updateStepperDetails(currentStep, action);\n    }\n  }\n\n  private _listenFormChanges(form: FormGroup) {\n    const counterpartyControl = <FormArray>(\n      form.get([PaymentBaseFields.counterparty])\n    );\n    counterpartyControl.valueChanges\n      .pipe(distinctUntilChanged(), takeUntil(this.destroy$))\n      .subscribe(() => {\n        let amount = 0;\n        let totalTransfers = 0;\n\n        const formArray = form.get([\n          PaymentBaseFields.counterparty,\n          InitiatorFields.initiatorAccountGroup,\n        ]);\n\n        if (formArray) {\n          const transferControls = (formArray as FormArray).controls;\n          totalTransfers = transferControls.length;\n          transferControls.forEach((control) => {\n            if (control.get('amount')?.valid) {\n              amount = +amount + +control.get('amount')?.value;\n            }\n          });\n        }\n\n        this.multiPaymentService.totalTransfers$.next(totalTransfers);\n        this.multiPaymentService.totalAmount$.next(amount);\n      });\n    const initiatorControl = <FormControl>(\n      form.get([PaymentBaseFields.initiator])\n    );\n    initiatorControl.valueChanges\n      .pipe(debounceTime(500), distinctUntilChanged(), takeUntil(this.destroy$))\n      .subscribe(() => {\n        const formArray = form.get([\n          PaymentBaseFields.counterparty,\n          InitiatorFields.initiatorAccountGroup,\n        ]);\n        if (formArray) {\n          (formArray as FormArray).controls.forEach((control) => {\n            if (control.get('counterpartyName')?.touched) {\n              control.get('counterpartyName')?.updateValueAndValidity();\n              control.get('counterpartyName')?.markAllAsTouched();\n            }\n          });\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  hideAlert(id: number) {\n    this.hideError.emit({\n      id,\n      stepName: this.stateService.currentStep?.stepName || '',\n    });\n  }\n\n  getFormGroup(field: PaymentFormItem): FormGroup {\n    return <FormGroup>this.form.get(field.parent as string) || this.form;\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <ng-container *ngIf=\"stateService.step$ | async as step; else allControls\">\n    <div [ngClass]=\"step.cssClasses\">\n      <ng-container *ngFor=\"let field of controls\">\n        <div *ngIf=\"field['stepName'] === step['stepName']\">\n          <ng-container\n            *ngTemplateOutlet=\"controlTempl; context: { $implicit: field }\"\n          ></ng-container>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"(stateService.state$ | async) !== 'VALID'\">\n        <div [ngClass]=\"step.buttonClass\">\n          <div\n            class=\"bb-stack\"\n            [ngClass]=\"{\n              'container container--fixed-width': step.footerDetail\n            }\"\n            data-role=\"payment-footer\"\n          >\n            <div *ngIf=\"step.footerDetail\" class=\"bb-stack__item\">\n              <div\n                *ngIf=\"step.footerDetail.totalCount\"\n                i18n=\"@@multipayment-form-footer-text-total-transfers.text\"\n                data-role=\"total-transfers\"\n              >\n                {{ totalTransfers$ | async }} {totalTransfers$ | async, plural,\n                =1 {Transfer} other {Transfers}} (Credit)\n              </div>\n              <div\n                *ngIf=\"step.footerDetail.totalAmount\"\n                class=\"bb-highlight\"\n                i18n=\"@@multipayment-form-footer-text-total-amount.text\"\n                data-role=\"total-amount\"\n              >\n                Total: {{ currency\n                }}{{ totalAmount$ | async | number: '1.2-2' }}\n              </div>\n            </div>\n\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <div class=\"bb-button-bar bb-button-bar--reverse\">\n                <button\n                  bbButton\n                  *ngFor=\"let buttonDetail of step.buttonConfig\"\n                  class=\"bb-button-bar__button\"\n                  [color]=\"buttonDetail.type\"\n                  [attr.data-role]=\"'multi-payment-' + buttonDetail.action\"\n                  (click)=\"\n                    triggerButtonEvent(\n                      buttonDetail?.hooks,\n                      buttonDetail.action,\n                      step\n                    )\n                  \"\n                >\n                  {{ buttonDetail.text }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </ng-container>\n\n  <ng-template #allControls>\n    <div>\n      <div *ngFor=\"let field of controls\">\n        <ng-container\n          *ngTemplateOutlet=\"controlTempl; context: { $implicit: field }\"\n        ></ng-container>\n      </div>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          (click)=\"onSubmit()\"\n          color=\"primary\"\n          data-role=\"multi-payment-submit-button\"\n          i18n=\"\n            Submit button|Body text of the button that allows the user to go to\n            submit step @@bb-multi-payment-widget.submit\"\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #controlTempl let-field>\n    <ng-container\n      *ngTemplateOutlet=\"\n        field.fields ? formGroupTmpl : formControlTmpl;\n        context: { $implicit: field }\n      \"\n    >\n    </ng-container>\n  </ng-template>\n\n  <ng-template let-config #formGroupTmpl>\n    <bb-payord-group [config]=\"config\" [group]=\"getFormGroup(config)\">\n      <ng-container *ngFor=\"let control of config.fields\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            control.fields ? formGroupTmpl : formControlTmpl;\n            context: { $implicit: control }\n          \"\n        >\n        </ng-container>\n      </ng-container>\n    </bb-payord-group>\n  </ng-template>\n\n  <ng-template let-config #formControlTmpl>\n    <ng-container\n      bbPaymentFormField\n      [config]=\"config\"\n      [options]=\"config.options\"\n      [group]=\"getFormGroup(config)\"\n    >\n    </ng-container>\n  </ng-template>\n</form>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n} from '@angular/core';\nimport { ErrorItem } from '@backbase/data-ang/payment-order';\n\n@Component({\n  selector: 'bb-error-alert',\n  templateUrl: './error-alert.component.html',\n})\nexport class ErrorAlertComponent implements OnChanges {\n  /**\n   * Collection of errors to show in alerts\n   */\n  @Input() errorList!: ErrorItem[];\n\n  /**\n   * Emitted when an alert has been closed\n   */\n  @Output() hideAlert = new EventEmitter<number>();\n\n  readonly hostRef = this;\n\n  ngOnChanges() {\n    if (this.errorList && this.errorList.length > 0) {\n      this.errorList.forEach((error) => {\n        for (const context in error.context) {\n          if (error.message && error.context?.hasOwnProperty(context)) {\n            const regEx = new RegExp('{{' + context + '}}', 'g');\n            const replacedValue = (<any>error.context)[context];\n            error.message = error.message.replace(regEx, replacedValue);\n          }\n        }\n      });\n    }\n  }\n\n  hideError(index: number) {\n    this.hideAlert.emit(index);\n  }\n}\n","<div class=\"sticky-top pt-2\">\n  <div\n    class=\"bb-block bb-block--md\"\n    *ngFor=\"let error of errorList; let ind = index\"\n    role=\"alert\"\n  >\n    <ng-content\n      *ngTemplateOutlet=\"notification; context: { error: error, id: ind }\"\n    ></ng-content>\n  </div>\n</div>\n\n<ng-template #notification let-error=\"error\" let-id=\"id\">\n  <bb-alert-ui [title]=\"''\" [dismissible]=\"true\" (close)=\"hideError(id)\">\n    <p class=\"bb-block bb-block--no-margin\">{{ error?.message }}</p>\n  </bb-alert-ui>\n</ng-template>\n","import { CommonModule, DatePipe, CurrencyPipe } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { PayordAddressComponent } from './components/address/payord-address.component';\nimport { PayordAmountComponent } from './components/amount/payord-amount.component';\nimport { PayordBeneficiarySelectorComponent } from './components/beneficiary-selector/payord-beneficiary-selector.component';\nimport { PayordCheckboxComponent } from './components/checkbox/payord-checkbox.component';\nimport { PayordDebitAccountSelectorComponent } from './components/debit-account-selector/payord-debit-account-selector.component';\nimport { PayordRadioComponent } from './components/radio/payord-radio.component';\nimport { PayordScheduleComponent } from './components/schedule/payord-schedule.component';\nimport { PayordSelectComponent } from './components/select/payord-select.component';\nimport { PayordTextAreaComponent } from './components/textarea/payord-textarea.component';\nimport { PayordTextboxComponent } from './components/textbox/payord-text.component';\nimport { PayordFormComponent } from './containers/payord-form/payord-form.component';\nimport { PaymentFormFieldDirective } from './directives/form-field.directive';\nimport { PayordGroupComponent } from './components/group/payord-group.component';\nimport { PayordSwitchComponent } from './components/switch/payord-switch.component';\nimport { PaymentOrdersUiModule } from '@backbase/payment-orders-ang';\nimport { PayordDateComponent } from './components/date/payord-date.component';\nimport { PayordNumberComponent } from './components/number/payord-number.component';\nimport { ValidationMessageComponent } from './components/validation-message/validation-message.component';\nimport { PayordPhoneComponent } from './components/phone/payord-phone.component';\nimport { PayordSelectPaymentOptionComponent } from './components/select-payment-option/payord-select-payment-option';\nimport { PayordPaymentCostComponent } from './components/payment-cost/payment-cost.component';\nimport { AdaptiveFormComponent } from './containers/adaptive-form/adaptive-form.component';\nimport { PayordInternalAccountSelectorComponent } from './components/internal-account-selector/payord-internal-account-selector.component';\nimport { PayordCompactAmountComponent } from './components/compact-amount/payord-compact-amount.component';\nimport { PayordButtonGroupComponent } from './components/button-group/payord-button-group.component';\nimport { PayordScheduleHeaderComponent } from './components/schedule-header/payord-schedule-header';\nimport { PayordSanctionedCurrencyAmountComponent } from './components/sanctioned-currency-input/payord-sanctioned-currency-amount.component';\nimport { PayordCountrySelectorComponent } from './components/country-selector/payord-country-selector.component';\nimport { PayordChargeBearerComponent } from './components/charge-bearer/charge-bearer.component';\nimport { PayordSanctionedCountrySelectorComponent } from './components/sanctioned-country-selector/payord-sanctioned-country-selector.component';\nimport { MultiPaymentCardComponent } from './components/multi-payment-card/multi-payment-card.component';\nimport { MultiPaymentFormComponent } from './containers/multi-payment-form/multi-payment-form.component';\nimport { PayordCreditDebitSelectorComponent } from './components/credit-debit-selector/payord-credit-debit-selector';\nimport { PayordInternalAmountOptionsComponent } from './components/internal-amount-options/payord-internal-amount-options.component';\nimport { PayordHeaderComponent } from './components/header/payord-header.component';\nimport { PayordPurposeOfPaymentComponent } from './components/purpose-of-payment/payord-purpose-of-payment.component';\nimport { PayordAlertComponent } from './components/alert/payord-alert.component';\nimport { ErrorAlertComponent } from './components/error-alert/error-alert.component';\nimport { PayordScheduleSwitchComponent } from './components/schedule-switch/payord-schedule-switch.component';\nimport { PayordBeneficiaryGroupHeaderComponent } from './components/beneficiary-group-header/beneficiary-group-header.component';\nimport { MultiPaymentAccountSelectorComponent } from './components/account-selector/multipayment-account-selector.component';\nimport { PayordContactSelectorComponent } from './components/contact-selector/payord-contact-selector.component';\nimport { DynamicAriaAttributeDirective } from './directives/dynamic-aria-attribute.directive';\nimport { VisibilityService } from './services/visibility.service';\nimport { ComponentsFactoryService } from './services/components-factory.service';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { CurrencyInputModule } from '@backbase/ui-ang/currency-input';\nimport { TextareaModule } from '@backbase/ui-ang/textarea';\nimport { SwitchModule } from '@backbase/ui-ang/switch';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { AccountSelectorModule } from '@backbase/ui-ang/account-selector';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { FieldsetModule } from '@backbase/ui-ang/fieldset';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { InputNumberModule } from '@backbase/ui-ang/input-number';\nimport { InputPhoneModule } from '@backbase/ui-ang/input-phone';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ProductSelectorModule } from '@backbase/ui-ang/product-selector';\nimport { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { StepperModule } from '@backbase/ui-ang/stepper';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { AmountInputModule } from '@backbase/ui-ang/amount-input';\n\nconst entryComponents = [\n  PayordAddressComponent,\n  PayordAmountComponent,\n  PayordBeneficiarySelectorComponent,\n  PayordCheckboxComponent,\n  PayordDebitAccountSelectorComponent,\n  PayordRadioComponent,\n  PayordScheduleComponent,\n  PayordSelectComponent,\n  PayordTextAreaComponent,\n  PayordTextboxComponent,\n  PayordSwitchComponent,\n  PayordDateComponent,\n  PayordNumberComponent,\n  PayordPhoneComponent,\n  ValidationMessageComponent,\n  PayordSelectPaymentOptionComponent,\n  PayordPaymentCostComponent,\n  PayordInternalAccountSelectorComponent,\n  PayordCompactAmountComponent,\n  PayordButtonGroupComponent,\n  PayordScheduleHeaderComponent,\n  PayordSanctionedCurrencyAmountComponent,\n  PayordCountrySelectorComponent,\n  PayordChargeBearerComponent,\n  PayordSanctionedCountrySelectorComponent,\n  PayordChargeBearerComponent,\n  MultiPaymentCardComponent,\n  MultiPaymentFormComponent,\n  PayordCreditDebitSelectorComponent,\n  PayordInternalAmountOptionsComponent,\n  PayordHeaderComponent,\n  PayordPurposeOfPaymentComponent,\n  PayordAlertComponent,\n  ErrorAlertComponent,\n  PayordScheduleSwitchComponent,\n  PayordBeneficiaryGroupHeaderComponent,\n  MultiPaymentAccountSelectorComponent,\n  PayordContactSelectorComponent,\n];\n\nconst modules = [\n  InputTextModule,\n  InputRadioGroupModule,\n  InputCheckboxModule,\n  InputDatepickerModule,\n  InputNumberModule,\n  InputPhoneModule,\n  CurrencyInputModule,\n  TextareaModule,\n  SwitchModule,\n  DropdownSingleSelectModule,\n  FormsModule,\n  ReactiveFormsModule,\n  InputRadioGroupModule,\n  AccountSelectorModule,\n  CollapsibleModule,\n  AlertModule,\n  PaymentOrdersUiModule,\n  AmountModule,\n  FieldsetModule,\n  LoadButtonModule,\n  LoadingIndicatorModule,\n  ProductSelectorModule,\n  ProductItemBasicAccountModule,\n  ButtonModule,\n  IconModule,\n  EmptyStateModule,\n  StepperModule,\n  TooltipModule,\n  AmountInputModule,\n];\n\nconst components = [\n  PayordFormComponent,\n  PayordGroupComponent,\n  AdaptiveFormComponent,\n  ...entryComponents,\n];\n\nconst directives = [PaymentFormFieldDirective, DynamicAriaAttributeDirective];\n/**\n * Exports the UI components, directives and modules for the form builder\n */\n@NgModule({\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...modules],\n  entryComponents,\n  imports: [CommonModule, BackbaseCoreModule, ...modules],\n  providers: [\n    DatePipe,\n    CurrencyPipe,\n    VisibilityService,\n    ComponentsFactoryService,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class PayordFormBuilderAngModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2","i1","i2.ValidationMessageComponent","i3","i4","i1.VisibilityService","i4.ValidationMessageComponent","i5","i6","i7","i3.ValidationMessageComponent","i6.DynamicAriaAttributeDirective","i5.DynamicAriaAttributeDirective","i8.DynamicAriaAttributeDirective","i2.VisibilityService","i7.ValidationMessageComponent","i8","i9","i10","i11","i1.ComponentsFactoryService","i2.ComponentsFactoryService","i7.PayordGroupComponent","i10.PaymentFormFieldDirective","i2.PayordGroupComponent","i5.PaymentFormFieldDirective","i3.MultiPaymentService","i5.PayordGroupComponent","i8.PaymentFormFieldDirective"],"mappings":"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"}