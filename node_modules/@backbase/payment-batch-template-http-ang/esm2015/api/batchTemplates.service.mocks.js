import { createMocks } from '@backbase/foundation-ang/data-http';
export const BatchTemplatesHttpServiceCreateBatchOrderFromTemplateMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-order",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06",
                    "name": "Europe branches cash distribution",
                    "type": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                    "status": "DRAFT",
                    "creditDebitMixedIndicator": "CREDIT",
                    "totalCreditTransactionsCount": 120,
                    "totalCreditInstructedAmount": {
                        "amount": "322038.00",
                        "currencyCode": "USD"
                    },
                    "entryClass": "CCD",
                    "account": {
                        "name": "Main Current",
                        "identification": {
                            "identification": "4902331374",
                            "schemeName": "BBAN"
                        }
                    },
                    "companyId": "1800948594",
                    "companyName": "Your Company",
                    "bankBranchCode": "113105452"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServiceDeleteBatchTemplateByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServiceDeleteBatchTemplatePaymentByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 404,
                body: {
                    "message": "Batch template not found",
                    "errors": []
                }
            },
            {
                status: 404,
                body: {
                    "message": "Batch template payment not found",
                    "errors": []
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServiceGetBatchTemplatePaymentsByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "batchTemplatePayments": [{
                            "id": "6c357c28-6714-11e7-907b-a6006ad3dcd0",
                            "counterpartyName": "A. Hamers",
                            "counterpartyAccountNumber": "5802354374",
                            "counterpartyBankBranchCode": "214105452",
                            "creditDebitIndicator": "DEBIT",
                            "instructedAmount": {
                                "amount": "4102.00",
                                "currencyCode": "USD"
                            },
                            "description": "Salary Mar 2021 empl.no:902713"
                        }],
                    "totalBatchTemplatePayments": 1,
                    "batchTemplate": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "createdAt": "2019-05-10T10:29:10Z",
                        "createdBy": "U00243",
                        "canApply": true,
                        "canDelete": true,
                        "canEdit": true,
                        "canDuplicate": true,
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "4102.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServiceGetBatchTemplatesMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "batchTemplates": [{
                            "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                            "name": "Internal transfers Acme corp",
                            "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                            "createdAt": "2019-05-10T10:29:10Z",
                            "createdBy": "Ulli Ulrich",
                            "updatedAt": "2021-05-10T10:29:10Z",
                            "updatedBy": "Jinnu Ulrich",
                            "canApply": true,
                            "canDelete": true,
                            "canEdit": true,
                            "canDuplicate": true,
                            "details": {
                                "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                                "batchName": "Europe branches cash distribution",
                                "creditDebitMixedIndicator": "CREDIT",
                                "totalCreditTransactionsCount": 120,
                                "totalCreditInstructedAmount": {
                                    "amount": "322038.00",
                                    "currencyCode": "USD"
                                },
                                "entryClass": "CCD",
                                "originatorAccount": {
                                    "name": "Main Current",
                                    "identification": {
                                        "identification": "4902331374",
                                        "schemeName": "BBAN"
                                    }
                                },
                                "companyId": "1800948594",
                                "companyName": "Your Company",
                                "bankBranchCode": "113105452"
                            }
                        }],
                    "totalBatchTemplates": 1,
                    "creditDebitMixedIndicator": "CREDIT"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServicePostBatchTemplatePaymentsMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "6c357c28-6714-11e7-907b-a6006ad3dcd0"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Batch template not found",
                    "errors": []
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServicePostBatchTemplatesMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "batchTemplate": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "AVAILABLE",
                        "createdAt": "2019-05-10T10:29:10Z",
                        "createdBy": "Uli Ulrich",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 201,
                body: {
                    "batchTemplate": {
                        "id": "7c341c49-6344-22e7-907b-b6006ad3ecd0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "DRAFT",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServicePostBatchTemplatesFromAttributesMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/from-attributes",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "7c341c49-6344-22e7-907b-b6006ad3ecd0",
                    "status": "DRAFT"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServicePutBatchTemplatePaymentByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "6c357c28-6714-11e7-907b-a6006ad3dcd0",
                    "counterpartyName": "A. Hamers",
                    "counterpartyAccountNumber": "5802354374",
                    "counterpartyBankBranchCode": "214105452",
                    "creditDebitIndicator": "CREDIT",
                    "instructedAmount": {
                        "amount": "4102.00",
                        "currencyCode": "USD"
                    },
                    "description": "Salary Mar 2021 empl.no:902713"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Batch template not found",
                    "errors": []
                }
            },
            {
                status: 404,
                body: {
                    "message": "Batch template payment not found",
                    "errors": []
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServiceUpdateBatchTemplateByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "batchTemplate": {
                        "id": "7c341c49-6344-22e7-907b-b6006ad3ecd0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "DRAFT",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 200,
                body: {
                    "batchTemplate": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "AVAILABLE",
                        "createdAt": "2019-05-10T10:29:10Z",
                        "createdBy": "Ulli Ulrich",
                        "updatedAt": "2021-05-10T10:29:10Z",
                        "updatedBy": "Jinnu Ulrich",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServiceUpdateBatchTemplateStatusByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/status",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "batchTemplate": {
                        "id": "7c341c49-6344-22e7-907b-b6006ad3ecd0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "DRAFT",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServiceValidateBatchTemplateMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/validation-errors",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "message": "Total credit transactions count {{totalCreditTransactionsCount}} does not match the intended total credit transactions count {{intendedTotalCreditTransactionsCount}}.",
                        "key": "TotalCreditTransactionsCountMismatch",
                        "context": {
                            "intendedTotalCreditTransactionsCount": "10000",
                            "totalCreditTransactionsCount": "2"
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    }]);
export const BatchTemplatesHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-order",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06",
                    "name": "Europe branches cash distribution",
                    "type": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                    "status": "DRAFT",
                    "creditDebitMixedIndicator": "CREDIT",
                    "totalCreditTransactionsCount": 120,
                    "totalCreditInstructedAmount": {
                        "amount": "322038.00",
                        "currencyCode": "USD"
                    },
                    "entryClass": "CCD",
                    "account": {
                        "name": "Main Current",
                        "identification": {
                            "identification": "4902331374",
                            "schemeName": "BBAN"
                        }
                    },
                    "companyId": "1800948594",
                    "companyName": "Your Company",
                    "bankBranchCode": "113105452"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 404,
                body: {
                    "message": "Batch template not found",
                    "errors": []
                }
            },
            {
                status: 404,
                body: {
                    "message": "Batch template payment not found",
                    "errors": []
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "batchTemplatePayments": [{
                            "id": "6c357c28-6714-11e7-907b-a6006ad3dcd0",
                            "counterpartyName": "A. Hamers",
                            "counterpartyAccountNumber": "5802354374",
                            "counterpartyBankBranchCode": "214105452",
                            "creditDebitIndicator": "DEBIT",
                            "instructedAmount": {
                                "amount": "4102.00",
                                "currencyCode": "USD"
                            },
                            "description": "Salary Mar 2021 empl.no:902713"
                        }],
                    "totalBatchTemplatePayments": 1,
                    "batchTemplate": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "createdAt": "2019-05-10T10:29:10Z",
                        "createdBy": "U00243",
                        "canApply": true,
                        "canDelete": true,
                        "canEdit": true,
                        "canDuplicate": true,
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "4102.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "batchTemplates": [{
                            "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                            "name": "Internal transfers Acme corp",
                            "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                            "createdAt": "2019-05-10T10:29:10Z",
                            "createdBy": "Ulli Ulrich",
                            "updatedAt": "2021-05-10T10:29:10Z",
                            "updatedBy": "Jinnu Ulrich",
                            "canApply": true,
                            "canDelete": true,
                            "canEdit": true,
                            "canDuplicate": true,
                            "details": {
                                "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                                "batchName": "Europe branches cash distribution",
                                "creditDebitMixedIndicator": "CREDIT",
                                "totalCreditTransactionsCount": 120,
                                "totalCreditInstructedAmount": {
                                    "amount": "322038.00",
                                    "currencyCode": "USD"
                                },
                                "entryClass": "CCD",
                                "originatorAccount": {
                                    "name": "Main Current",
                                    "identification": {
                                        "identification": "4902331374",
                                        "schemeName": "BBAN"
                                    }
                                },
                                "companyId": "1800948594",
                                "companyName": "Your Company",
                                "bankBranchCode": "113105452"
                            }
                        }],
                    "totalBatchTemplates": 1,
                    "creditDebitMixedIndicator": "CREDIT"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "6c357c28-6714-11e7-907b-a6006ad3dcd0"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Batch template not found",
                    "errors": []
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "batchTemplate": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "AVAILABLE",
                        "createdAt": "2019-05-10T10:29:10Z",
                        "createdBy": "Uli Ulrich",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 201,
                body: {
                    "batchTemplate": {
                        "id": "7c341c49-6344-22e7-907b-b6006ad3ecd0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "DRAFT",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates/from-attributes",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "7c341c49-6344-22e7-907b-b6006ad3ecd0",
                    "status": "DRAFT"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "6c357c28-6714-11e7-907b-a6006ad3dcd0",
                    "counterpartyName": "A. Hamers",
                    "counterpartyAccountNumber": "5802354374",
                    "counterpartyBankBranchCode": "214105452",
                    "creditDebitIndicator": "CREDIT",
                    "instructedAmount": {
                        "amount": "4102.00",
                        "currencyCode": "USD"
                    },
                    "description": "Salary Mar 2021 empl.no:902713"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Batch template not found",
                    "errors": []
                }
            },
            {
                status: 404,
                body: {
                    "message": "Batch template payment not found",
                    "errors": []
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "batchTemplate": {
                        "id": "7c341c49-6344-22e7-907b-b6006ad3ecd0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "DRAFT",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 200,
                body: {
                    "batchTemplate": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "AVAILABLE",
                        "createdAt": "2019-05-10T10:29:10Z",
                        "createdBy": "Ulli Ulrich",
                        "updatedAt": "2021-05-10T10:29:10Z",
                        "updatedBy": "Jinnu Ulrich",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/status",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "batchTemplate": {
                        "id": "7c341c49-6344-22e7-907b-b6006ad3ecd0",
                        "name": "Internal transfers Acme corp",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "status": "DRAFT",
                        "details": {
                            "batchType": "INTRACOMPANY_PAYMENT_CREDIT_USA",
                            "batchName": "Europe branches cash distribution",
                            "creditDebitMixedIndicator": "CREDIT",
                            "totalCreditTransactionsCount": 120,
                            "totalCreditInstructedAmount": {
                                "amount": "322038.00",
                                "currencyCode": "USD"
                            },
                            "entryClass": "CCD",
                            "originatorAccount": {
                                "name": "Main Current",
                                "identification": {
                                    "identification": "4902331374",
                                    "schemeName": "BBAN"
                                }
                            },
                            "companyId": "1800948594",
                            "companyName": "Your Company",
                            "bankBranchCode": "113105452"
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/batch-templates/{batchTemplateId}/validation-errors",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "message": "Total credit transactions count {{totalCreditTransactionsCount}} does not match the intended total credit transactions count {{intendedTotalCreditTransactionsCount}}.",
                        "key": "TotalCreditTransactionsCountMismatch",
                        "context": {
                            "intendedTotalCreditTransactionsCount": "10000",
                            "totalCreditTransactionsCount": "2"
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,