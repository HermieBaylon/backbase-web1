{"version":3,"file":"backbase-loans-http-ang.umd.js","sources":["../../model/presentationAmortizationPaymentStatus.ts","../../model/presentationFrequency.ts","../../model/presentationLoanStatus.ts","../../model/presentationOperationType.ts","../../model/presentationPaymentAmountCalculationType.ts","../../model/presentationTermUnit.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/loans.service.ts","../../api/loans.service.mocks.ts","../../api/payment.service.ts","../../api/payment.service.mocks.ts","../../api/paymentOptions.service.ts","../../api/paymentOptions.service.mocks.ts"],"sourcesContent":["/**\n * Loans\n * View loans and loan\\'s details\n *\n * The version of the OpenAPI document: 0.0.33\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Amortization payment status\n */\nexport type PresentationAmortizationPaymentStatus = 'Scheduled' | 'Overdue';\n\nexport const PresentationAmortizationPaymentStatus = {\n    Scheduled: 'Scheduled' as PresentationAmortizationPaymentStatus,\n    Overdue: 'Overdue' as PresentationAmortizationPaymentStatus\n};\n\n","/**\n * Loans\n * View loans and loan\\'s details\n *\n * The version of the OpenAPI document: 0.0.33\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Frequency\n */\nexport type PresentationFrequency = 'Weekly' | 'Biweekly' | 'Twicemonthly' | 'Monthly' | 'Fourweeks' | 'Bimonthly' | 'Quarterly' | 'Semiannually' | 'Annually' | 'Maturity';\n\nexport const PresentationFrequency = {\n    Weekly: 'Weekly' as PresentationFrequency,\n    Biweekly: 'Biweekly' as PresentationFrequency,\n    Twicemonthly: 'Twicemonthly' as PresentationFrequency,\n    Monthly: 'Monthly' as PresentationFrequency,\n    Fourweeks: 'Fourweeks' as PresentationFrequency,\n    Bimonthly: 'Bimonthly' as PresentationFrequency,\n    Quarterly: 'Quarterly' as PresentationFrequency,\n    Semiannually: 'Semiannually' as PresentationFrequency,\n    Annually: 'Annually' as PresentationFrequency,\n    Maturity: 'Maturity' as PresentationFrequency\n};\n\n","/**\n * Loans\n * View loans and loan\\'s details\n *\n * The version of the OpenAPI document: 0.0.33\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Status of a loan\n */\nexport type PresentationLoanStatus = 'Active' | 'Inactive' | 'Pending';\n\nexport const PresentationLoanStatus = {\n    Active: 'Active' as PresentationLoanStatus,\n    Inactive: 'Inactive' as PresentationLoanStatus,\n    Pending: 'Pending' as PresentationLoanStatus\n};\n\n","/**\n * Loans\n * View loans and loan\\'s details\n *\n * The version of the OpenAPI document: 0.0.33\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of an operation on a Loan\n */\nexport type PresentationOperationType = 'Credit' | 'Debit';\n\nexport const PresentationOperationType = {\n    Credit: 'Credit' as PresentationOperationType,\n    Debit: 'Debit' as PresentationOperationType\n};\n\n","/**\n * Loans\n * View loans and loan\\'s details\n *\n * The version of the OpenAPI document: 0.0.33\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of a payment amount calculation.\n */\nexport type PresentationPaymentAmountCalculationType = 'CustomAmount' | 'PayOffAmount';\n\nexport const PresentationPaymentAmountCalculationType = {\n    CustomAmount: 'CustomAmount' as PresentationPaymentAmountCalculationType,\n    PayOffAmount: 'PayOffAmount' as PresentationPaymentAmountCalculationType\n};\n\n","/**\n * Loans\n * View loans and loan\\'s details\n *\n * The version of the OpenAPI document: 0.0.33\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Term unit of a loan\n */\nexport type PresentationTermUnit = 'Day' | 'Week' | 'Month' | 'Year';\n\nexport const PresentationTermUnit = {\n    Day: 'Day' as PresentationTermUnit,\n    Week: 'Week' as PresentationTermUnit,\n    Month: 'Month' as PresentationTermUnit,\n    Year: 'Year' as PresentationTermUnit\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const LOANS_BASE_PATH = new InjectionToken<string>('LOANS_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface LoansConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class LoansConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: LoansConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link LoansConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link LoansConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module LoansConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { LoansConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class LoansApiModule {\n    public static forRoot(configurationFactory: () => LoansConfiguration): ModuleWithProviders<LoansApiModule> {\n        return {\n            ngModule: LoansApiModule,\n            providers: [ { provide: LoansConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: LoansApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: LoansConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('LoansApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Loans\n * View loans and loan\\'s details\n *\n * The version of the OpenAPI document: 0.0.33\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationAmortizationPayment } from '../model/models';\nimport { PresentationAmortizationSchedule } from '../model/models';\nimport { PresentationLoan } from '../model/models';\nimport { PresentationLoans } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { LOANS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { LoansConfiguration }                                     from '../configuration';\n\n\nexport interface DownloadDocumentByLoanIdAndDocumentIdRequestParams {\n    /** An id of a loan */\n    [\"loanId\"]: string;\n    /** An id of a document */\n    [\"documentId\"]: string;\n    /** Content-Disposition header will include \\&quot;attachment\\&quot; when this parameter is false. Else \\&quot;inline\\&quot;. */\n    [\"inline\"]?: boolean;\n}\n\nexport interface GetAmortizationPaymentRequestParams {\n    /** An id of a loan */\n    [\"loanId\"]: string;\n    /** An id of an amortization payment */\n    [\"amortizationPaymentId\"]: string;\n}\n\nexport interface GetAmortizationScheduleRequestParams {\n    /** An id of a loan */\n    [\"loanId\"]: string;\n    /** Case insensetive filter of status for payments in the schedule */\n    [\"status\"]?: string;\n    /** Inclusive lower bound filter for paymentAmount for payments in the schedule */\n    [\"fromAmount\"]?: string;\n    /** Inclusive upper bound filter for paymentAmount for payments in the schedule */\n    [\"toAmount\"]?: string;\n    /** Inclusive lower bound filter for paymentDate for payments in the schedule */\n    [\"fromDate\"]?: string;\n    /** Inclusive upper bound filter for paymentDate for payments in the schedule */\n    [\"toDate\"]?: string;\n    /** Represents an offset of the first result that is to be included into a response. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** Represents a maximum number of elements that are to be included into a response. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n    /** Represents comma separated field names. Each name is to be used for sorting. The order of the names is important as it determines the order in which the fields are utilized. That is, Nth field name is used if and only if a value of a (N-1) field is found more than once. The sorting may be either ascending or descending. This can be controlled by utilizing a special prefix. The prefix is a dash symbol (i.e., \\&quot;-\\&quot;). If the prefix is provided, a result list will be ordered in a descending fashion, otherwise it is going to sorted in an ascending fashion. Fields available for sorting: paymentDate.  */\n    [\"sort\"]?: string;\n}\n\nexport interface GetLoanByIdRequestParams {\n    /** An id of a loan */\n    [\"loanId\"]: string;\n}\n\nexport interface GetLoansRequestParams {\n    /** Represents an offset of the first result that is to be included into a response. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** Represents a maximum number of elements that are to be included into a response. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoansHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new LoansConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(LOANS_BASE_PATH) basePath: string, @Optional() configuration: LoansConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'binary/octet-stream'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'binary/octet-stream'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'binary/octet-stream'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/pdf'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/pdf'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/pdf'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/plain'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/plain'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/plain'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/rtf'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/rtf'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/rtf'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/msword'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/msword'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/msword'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.ms-excel'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.ms-excel'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.ms-excel'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/xml'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/xml'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/xml'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/png'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/png'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/png'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/jpeg'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/jpeg'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/jpeg'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/gif'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/gif'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/gif'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/tiff'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/tiff'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'image/tiff'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<string>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<string>>;\n    /**\n     * Downloads a loan document for the given file UID. Supported document types:   * binary/octet-stream   * application/pdf   * text/plain   * text/csv   * application/rtf   * application/msword   * application/vnd.openxmlformats-officedocument.wordprocessingml.document   * application/vnd.ms-excel   * application/vnd.openxmlformats-officedocument.spreadsheetml.sheet   * application/xml   * image/png   * image/jpeg   * image/gif   * image/tiff \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public downloadDocumentByLoanIdAndDocumentId(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'binary/octet-stream' | 'application/pdf' | 'text/plain' | 'text/csv' | 'application/rtf' | 'application/msword' | 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' | 'application/vnd.ms-excel' | 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' | 'application/xml' | 'image/png' | 'image/jpeg' | 'image/gif' | 'image/tiff' | 'application/json'}): Observable<any> {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n        }\n        const _documentId = requestParameters[\"documentId\"];\n        if (_documentId === null || _documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n        }\n        const _inline = requestParameters[\"inline\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_inline !== undefined && _inline !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_inline, 'inline');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'binary/octet-stream',\n                'application/pdf',\n                'text/plain',\n                'text/csv',\n                'application/rtf',\n                'application/msword',\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n                'application/vnd.ms-excel',\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                'application/xml',\n                'image/png',\n                'image/jpeg',\n                'image/gif',\n                'image/tiff',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/documents/${encodeURIComponent(String(_documentId))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public downloadDocumentByLoanIdAndDocumentIdUrl(requestParameters: DownloadDocumentByLoanIdAndDocumentIdRequestParams): string {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n        }\n        const _documentId = requestParameters[\"documentId\"];\n        if (_documentId === null || _documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n        }\n        const _inline = requestParameters[\"inline\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_inline !== undefined && _inline !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_inline, 'inline');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/documents/${encodeURIComponent(String(_documentId))}${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve loan amortization payment\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAmortizationPayment(requestParameters: GetAmortizationPaymentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationAmortizationPayment>;\n    /**\n     * Retrieve loan amortization payment\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAmortizationPayment(requestParameters: GetAmortizationPaymentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationAmortizationPayment>>;\n    /**\n     * Retrieve loan amortization payment\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAmortizationPayment(requestParameters: GetAmortizationPaymentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationAmortizationPayment>>;\n    /**\n     * Retrieve loan amortization payment\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAmortizationPayment(requestParameters: GetAmortizationPaymentRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getAmortizationPayment.');\n        }\n        const _amortizationPaymentId = requestParameters[\"amortizationPaymentId\"];\n        if (_amortizationPaymentId === null || _amortizationPaymentId === undefined) {\n            throw new Error('Required parameter amortizationPaymentId was null or undefined when calling getAmortizationPayment.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationAmortizationPayment>(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule/${encodeURIComponent(String(_amortizationPaymentId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAmortizationPaymentUrl(requestParameters: GetAmortizationPaymentRequestParams): string {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getAmortizationPayment.');\n        }\n        const _amortizationPaymentId = requestParameters[\"amortizationPaymentId\"];\n        if (_amortizationPaymentId === null || _amortizationPaymentId === undefined) {\n            throw new Error('Required parameter amortizationPaymentId was null or undefined when calling getAmortizationPayment.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule/${encodeURIComponent(String(_amortizationPaymentId))}`;\n    }\n\n    /**\n     * Retrieve loan amortization schedule\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAmortizationSchedule(requestParameters: GetAmortizationScheduleRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationAmortizationSchedule>;\n    /**\n     * Retrieve loan amortization schedule\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAmortizationSchedule(requestParameters: GetAmortizationScheduleRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationAmortizationSchedule>>;\n    /**\n     * Retrieve loan amortization schedule\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAmortizationSchedule(requestParameters: GetAmortizationScheduleRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationAmortizationSchedule>>;\n    /**\n     * Retrieve loan amortization schedule\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAmortizationSchedule(requestParameters: GetAmortizationScheduleRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getAmortizationSchedule.');\n        }\n        const _status = requestParameters[\"status\"];\n        const _fromAmount = requestParameters[\"fromAmount\"];\n        const _toAmount = requestParameters[\"toAmount\"];\n        const _fromDate = requestParameters[\"fromDate\"];\n        const _toDate = requestParameters[\"toDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _sort = requestParameters[\"sort\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_status !== undefined && _status !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_status, 'status');\n        }\n        if (_fromAmount !== undefined && _fromAmount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromAmount, 'fromAmount');\n        }\n        if (_toAmount !== undefined && _toAmount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toAmount, 'toAmount');\n        }\n        if (_fromDate !== undefined && _fromDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toDate, 'toDate');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_sort !== undefined && _sort !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_sort, 'sort');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationAmortizationSchedule>(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAmortizationScheduleUrl(requestParameters: GetAmortizationScheduleRequestParams): string {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getAmortizationSchedule.');\n        }\n        const _status = requestParameters[\"status\"];\n        const _fromAmount = requestParameters[\"fromAmount\"];\n        const _toAmount = requestParameters[\"toAmount\"];\n        const _fromDate = requestParameters[\"fromDate\"];\n        const _toDate = requestParameters[\"toDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _sort = requestParameters[\"sort\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_status !== undefined && _status !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_status, 'status');\n        }\n        if (_fromAmount !== undefined && _fromAmount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromAmount, 'fromAmount');\n        }\n        if (_toAmount !== undefined && _toAmount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toAmount, 'toAmount');\n        }\n        if (_fromDate !== undefined && _fromDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toDate, 'toDate');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_sort !== undefined && _sort !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_sort, 'sort');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve a loan by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLoanById(requestParameters: GetLoanByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationLoan>;\n    /**\n     * Retrieve a loan by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLoanById(requestParameters: GetLoanByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationLoan>>;\n    /**\n     * Retrieve a loan by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLoanById(requestParameters: GetLoanByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationLoan>>;\n    /**\n     * Retrieve a loan by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLoanById(requestParameters: GetLoanByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getLoanById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationLoan>(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLoanByIdUrl(requestParameters: GetLoanByIdRequestParams): string {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getLoanById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}`;\n    }\n\n    /**\n     * Retrieve list of loans\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLoans(requestParameters: GetLoansRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationLoans>;\n    /**\n     * Retrieve list of loans\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLoans(requestParameters: GetLoansRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationLoans>>;\n    /**\n     * Retrieve list of loans\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLoans(requestParameters: GetLoansRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationLoans>>;\n    /**\n     * Retrieve list of loans\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLoans(requestParameters: GetLoansRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationLoans>(`${this.configuration.basePath}/client-api/v1/loans`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLoansUrl(requestParameters: GetLoansRequestParams): string {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/loans${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve metadata for loans. Available metadata includes: X-Total-Count header - total amount of user\\&#39;s loans. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public headLoans(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Retrieve metadata for loans. Available metadata includes: X-Total-Count header - total amount of user\\&#39;s loans. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public headLoans(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Retrieve metadata for loans. Available metadata includes: X-Total-Count header - total amount of user\\&#39;s loans. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public headLoans(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Retrieve metadata for loans. Available metadata includes: X-Total-Count header - total amount of user\\&#39;s loans. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public headLoans(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.head<any>(`${this.configuration.basePath}/client-api/v1/loans`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public headLoansUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/loans`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/loans/{loanId}/documents/{documentId} URL pattern\n*/\nexport const LoansHttpServiceDownloadDocumentByLoanIdAndDocumentIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/documents/{documentId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/loans/{loanId}/amortization-schedule/{amortizationPaymentId} URL pattern\n*/\nexport const LoansHttpServiceGetAmortizationPaymentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule/{amortizationPaymentId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$schema\" : \"../schemas/amortization-payment.yaml\",\n  \"id\" : \"829d1713-8c65-4366-98c2-65a518255365\",\n  \"paymentDate\" : \"2020-07-24T00:00:00Z\",\n  \"currencyCode\" : \"USD\",\n  \"paymentAmount\" : \"40000.00000\",\n  \"interest\" : \"0.00000\",\n  \"principal\" : \"4000.00000\",\n  \"endingPrincipalBalance\" : \"40000.00000\",\n  \"status\" : \"Overdue\",\n  \"paymentType\" : \"principal-only\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"principal\" : \"principal\",\n  \"interest\" : \"interest\",\n  \"endingPrincipalBalance\" : \"endingPrincipalBalance\",\n  \"id\" : \"id\",\n  \"paymentDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"paymentAmount\" : \"paymentAmount\",\n  \"currencyCode\" : \"currencyCode\",\n  \"paymentType\" : \"paymentType\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/loans/{loanId}/amortization-schedule URL pattern\n*/\nexport const LoansHttpServiceGetAmortizationScheduleMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$schema\" : \"../schemas/amortization-schedule.yaml\",\n  \"payments\" : [ {\n    \"id\" : \"829d1713-8c65-4366-98c2-65a518255365\",\n    \"paymentDate\" : \"2020-07-24T00:00:00Z\",\n    \"currencyCode\" : \"USD\",\n    \"paymentAmount\" : \"40000.00000\",\n    \"interest\" : \"0.00000\",\n    \"principal\" : \"4000.00000\",\n    \"endingPrincipalBalance\" : \"40000.00000\",\n    \"status\" : \"Overdue\",\n    \"paymentType\" : \"principal-only\"\n  }, {\n    \"id\" : \"522c5077-8fdc-43c0-bc71-d59bb66ea8ce\",\n    \"paymentDate\" : \"2020-08-24T00:00:00Z\",\n    \"currencyCode\" : \"USD\",\n    \"paymentAmount\" : \"8000.00000\",\n    \"endingPrincipalBalance\" : \"32000.00000\",\n    \"status\" : \"Scheduled\",\n    \"paymentType\" : \"interest-only\"\n  }, {\n    \"id\" : \"9f4c565d-ffab-4ca1-9094-ee0d53a08782\",\n    \"paymentDate\" : \"2020-09-24T00:00:00Z\",\n    \"currencyCode\" : \"USD\",\n    \"paymentAmount\" : \"32001.00000\",\n    \"interest\" : \"1\",\n    \"principal\" : \"32000.00000\",\n    \"endingPrincipalBalance\" : \"0.00000\",\n    \"status\" : \"Scheduled\",\n    \"paymentType\" : \"principal-and-interest\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/loans/{loanId} URL pattern\n*/\nexport const LoansHttpServiceGetLoanByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$schema\" : \"../schemas/loan.yaml\",\n  \"id\" : \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n  \"loanType\" : \"LineOfCredit\",\n  \"name\" : \"AnyBank Credit Line 1\",\n  \"accountNumber\" : \"096010415 000789 CL01\",\n  \"contractNumber\" : \"ATV-676097\",\n  \"loanStatus\" : \"Active\",\n  \"currencyCode\" : \"USD\",\n  \"nextRepaymentDate\" : \"2021-09-13T17:00:00.000Z\",\n  \"nextRepaymentAmount\" : \"200.00000\",\n  \"availableBalance\" : \"690.37000\",\n  \"outstandingAmount\" : \"1954.94000\",\n  \"creditLimit\" : \"2456.98000\",\n  \"drawnAmount\" : \"1766.61000\",\n  \"feesDue\" : \"100.00000\",\n  \"interestDue\" : \"88.33000\",\n  \"interestRate\" : \"5.00000\",\n  \"isOverdue\" : false,\n  \"overduePaymentsCount\" : 0,\n  \"branchCode\" : \"001\",\n  \"startDate\" : \"1996-10-23T17:00:00.000Z\",\n  \"endDate\" : \"2022-04-16T17:00:00.000Z\",\n  \"borrower\" : [ \"John a. Doen\", \"M. Joaveni\", \"Robert Kan\", \"Kamal Terrell\" ],\n  \"defaultSettlementAccountId\" : \"801b785e-c063-457c-bc12-82386f3ebc2d\",\n  \"defaultSettlementAccountNumber\" : \"•••• •••• ••• 4568\",\n  \"defaultSettlementAccountName\" : \"Prestige Operating Account\",\n  \"documents\" : [ {\n    \"documentId\" : \"uid_00001\",\n    \"name\" : \"Loan Contract\",\n    \"contentType\" : \"application/pdf\"\n  } ],\n  \"isFullyRepaid\" : false,\n  \"termUnit\" : \"Year\",\n  \"termCount\" : 26,\n  \"paymentFrequency\" : \"Bimonthly\",\n  \"interestPaymentFrequency\" : \"Biweekly\",\n  \"collateral\" : [ {\n    \"type\" : \"Real estate\",\n    \"currentValue\" : \"100\",\n    \"currencyCode\" : \"EUR\",\n    \"specification\" : \"300 Park Avenue 15th Floor, New York, NY 10022\",\n    \"nextRevaluationDate\" : \"2021-02-28\"\n  } ],\n  \"escrow\" : {\n    \"totalAmount\" : \"100\",\n    \"insurance\" : \"50\",\n    \"fees\" : \"30\",\n    \"tax\" : \"20\",\n    \"pmi\" : \"10\",\n    \"other\" : \"5\"\n  },\n  \"paymentOptions\" : {\n    \"paymentOptions\" : [ {\n      \"name\" : \"LoanPayment\",\n      \"operationType\" : \"Credit\",\n      \"allowed\" : true,\n      \"errorCodes\" : [ ]\n    }, {\n      \"name\" : \"LoanAdvance\",\n      \"operationType\" : \"Debit\",\n      \"allowed\" : true,\n      \"errorCodes\" : [ ]\n    } ]\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"nextRepaymentAmount\" : \"nextRepaymentAmount\",\n  \"defaultSettlementAccountId\" : \"defaultSettlementAccountId\",\n  \"loanType\" : \"loanType\",\n  \"outstandingAmount\" : \"outstandingAmount\",\n  \"inArrearsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"documents\" : [ {\n    \"name\" : \"name\",\n    \"documentId\" : \"documentId\",\n    \"contentType\" : \"contentType\"\n  }, {\n    \"name\" : \"name\",\n    \"documentId\" : \"documentId\",\n    \"contentType\" : \"contentType\"\n  } ],\n  \"termCount\" : 6,\n  \"availableBalance\" : \"availableBalance\",\n  \"drawnAmount\" : \"drawnAmount\",\n  \"paymentOptions\" : {\n    \"paymentOptions\" : [ {\n      \"allowed\" : true,\n      \"errorCodes\" : [ \"errorCodes\", \"errorCodes\" ],\n      \"name\" : \"name\"\n    }, {\n      \"allowed\" : true,\n      \"errorCodes\" : [ \"errorCodes\", \"errorCodes\" ],\n      \"name\" : \"name\"\n    } ]\n  },\n  \"defaultSettlementAccountName\" : \"defaultSettlementAccountName\",\n  \"nextRepaymentDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"alias\" : \"alias\",\n  \"creditLimit\" : \"creditLimit\",\n  \"escrow\" : {\n    \"insurance\" : \"insurance\",\n    \"totalAmount\" : \"totalAmount\",\n    \"fees\" : \"fees\",\n    \"other\" : \"other\",\n    \"tax\" : \"tax\",\n    \"pmi\" : \"pmi\"\n  },\n  \"isFullyRepaid\" : true,\n  \"id\" : \"id\",\n  \"overduePaymentsCount\" : 0,\n  \"feesDue\" : \"feesDue\",\n  \"defaultSettlementAccountNumber\" : \"defaultSettlementAccountNumber\",\n  \"interestRate\" : \"interestRate\",\n  \"borrower\" : [ \"borrower\", \"borrower\" ],\n  \"contractNumber\" : \"contractNumber\",\n  \"accountNumber\" : \"accountNumber\",\n  \"inArrearsAmount\" : \"inArrearsAmount\",\n  \"branchCode\" : \"branchCode\",\n  \"isOverdue\" : true,\n  \"interestDue\" : \"interestDue\",\n  \"name\" : \"name\",\n  \"collateral\" : [ {\n    \"specification\" : \"specification\",\n    \"nextRevaluationDate\" : \"2000-01-23\",\n    \"type\" : \"type\",\n    \"currencyCode\" : \"currencyCode\",\n    \"currentValue\" : \"currentValue\"\n  }, {\n    \"specification\" : \"specification\",\n    \"nextRevaluationDate\" : \"2000-01-23\",\n    \"type\" : \"type\",\n    \"currencyCode\" : \"currencyCode\",\n    \"currentValue\" : \"currentValue\"\n  } ],\n  \"currencyCode\" : \"currencyCode\",\n  \"paidAmount\" : \"paidAmount\",\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/loans URL pattern\n*/\nexport const LoansHttpServiceGetLoansMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/loans\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$schema\" : \"../schemas/loans.yaml\",\n  \"loans\" : [ {\n    \"id\" : \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n    \"loanType\" : \"LineOfCredit\",\n    \"name\" : \"Line of credit 1\",\n    \"accountNumber\" : \"NL98RABO5242052503\",\n    \"loanStatus\" : \"Pending\",\n    \"currencyCode\" : \"EUR\",\n    \"paymentOptions\" : {\n      \"paymentOptions\" : [ {\n        \"name\" : \"LoanPayment\",\n        \"operationType\" : \"Credit\",\n        \"allowed\" : true,\n        \"errorCodes\" : [ ]\n      }, {\n        \"name\" : \"LoanAdvance\",\n        \"operationType\" : \"Debit\",\n        \"allowed\" : true,\n        \"errorCodes\" : [ ]\n      } ]\n    }\n  }, {\n    \"id\" : \"764ac5bb-f462-412f-8aee-a218737e1d2a\",\n    \"name\" : \"Term loan 1\",\n    \"loanType\" : \"TermLoan\",\n    \"accountNumber\" : \"NL88ABNA4242739303\",\n    \"loanStatus\" : \"Active\",\n    \"currencyCode\" : \"EUR\",\n    \"paidAmount\" : \"55567.23\",\n    \"outstandingAmount\" : \"54432.77\",\n    \"paymentOptions\" : {\n      \"paymentOptions\" : [ {\n        \"name\" : \"LoanPayment\",\n        \"operationType\" : \"Credit\",\n        \"allowed\" : true,\n        \"errorCodes\" : [ ]\n      } ]\n    }\n  }, {\n    \"id\" : \"7688bd60-dfad-45ba-b1ce-abc6e9ea5208\",\n    \"loanType\" : \"Mortgage\",\n    \"name\" : \"Mortgage 1\",\n    \"accountNumber\" : \"MR3731835513862558214883344\",\n    \"loanStatus\" : \"Inactive\",\n    \"currencyCode\" : \"MRU\",\n    \"paymentOptions\" : {\n      \"paymentOptions\" : [ {\n        \"name\" : \"LoanPayment\",\n        \"operationType\" : \"Credit\",\n        \"allowed\" : false,\n        \"errorCodes\" : [ \"not.allowed.for.inactive.loan\" ]\n      }, {\n        \"name\" : \"LoanAdvance\",\n        \"operationType\" : \"Debit\",\n        \"allowed\" : false,\n        \"errorCodes\" : [ \"not.allowed.for.inactive.loan\" ]\n      } ]\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/loans URL pattern\n*/\nexport const LoansHttpServiceHeadLoansMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/loans\",\n        method: \"HEAD\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const LoansHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/documents/{documentId}\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule/{amortizationPaymentId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$schema\" : \"../schemas/amortization-payment.yaml\",\n  \"id\" : \"829d1713-8c65-4366-98c2-65a518255365\",\n  \"paymentDate\" : \"2020-07-24T00:00:00Z\",\n  \"currencyCode\" : \"USD\",\n  \"paymentAmount\" : \"40000.00000\",\n  \"interest\" : \"0.00000\",\n  \"principal\" : \"4000.00000\",\n  \"endingPrincipalBalance\" : \"40000.00000\",\n  \"status\" : \"Overdue\",\n  \"paymentType\" : \"principal-only\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"principal\" : \"principal\",\n  \"interest\" : \"interest\",\n  \"endingPrincipalBalance\" : \"endingPrincipalBalance\",\n  \"id\" : \"id\",\n  \"paymentDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"paymentAmount\" : \"paymentAmount\",\n  \"currencyCode\" : \"currencyCode\",\n  \"paymentType\" : \"paymentType\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$schema\" : \"../schemas/amortization-schedule.yaml\",\n  \"payments\" : [ {\n    \"id\" : \"829d1713-8c65-4366-98c2-65a518255365\",\n    \"paymentDate\" : \"2020-07-24T00:00:00Z\",\n    \"currencyCode\" : \"USD\",\n    \"paymentAmount\" : \"40000.00000\",\n    \"interest\" : \"0.00000\",\n    \"principal\" : \"4000.00000\",\n    \"endingPrincipalBalance\" : \"40000.00000\",\n    \"status\" : \"Overdue\",\n    \"paymentType\" : \"principal-only\"\n  }, {\n    \"id\" : \"522c5077-8fdc-43c0-bc71-d59bb66ea8ce\",\n    \"paymentDate\" : \"2020-08-24T00:00:00Z\",\n    \"currencyCode\" : \"USD\",\n    \"paymentAmount\" : \"8000.00000\",\n    \"endingPrincipalBalance\" : \"32000.00000\",\n    \"status\" : \"Scheduled\",\n    \"paymentType\" : \"interest-only\"\n  }, {\n    \"id\" : \"9f4c565d-ffab-4ca1-9094-ee0d53a08782\",\n    \"paymentDate\" : \"2020-09-24T00:00:00Z\",\n    \"currencyCode\" : \"USD\",\n    \"paymentAmount\" : \"32001.00000\",\n    \"interest\" : \"1\",\n    \"principal\" : \"32000.00000\",\n    \"endingPrincipalBalance\" : \"0.00000\",\n    \"status\" : \"Scheduled\",\n    \"paymentType\" : \"principal-and-interest\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$schema\" : \"../schemas/loan.yaml\",\n  \"id\" : \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n  \"loanType\" : \"LineOfCredit\",\n  \"name\" : \"AnyBank Credit Line 1\",\n  \"accountNumber\" : \"096010415 000789 CL01\",\n  \"contractNumber\" : \"ATV-676097\",\n  \"loanStatus\" : \"Active\",\n  \"currencyCode\" : \"USD\",\n  \"nextRepaymentDate\" : \"2021-09-13T17:00:00.000Z\",\n  \"nextRepaymentAmount\" : \"200.00000\",\n  \"availableBalance\" : \"690.37000\",\n  \"outstandingAmount\" : \"1954.94000\",\n  \"creditLimit\" : \"2456.98000\",\n  \"drawnAmount\" : \"1766.61000\",\n  \"feesDue\" : \"100.00000\",\n  \"interestDue\" : \"88.33000\",\n  \"interestRate\" : \"5.00000\",\n  \"isOverdue\" : false,\n  \"overduePaymentsCount\" : 0,\n  \"branchCode\" : \"001\",\n  \"startDate\" : \"1996-10-23T17:00:00.000Z\",\n  \"endDate\" : \"2022-04-16T17:00:00.000Z\",\n  \"borrower\" : [ \"John a. Doen\", \"M. Joaveni\", \"Robert Kan\", \"Kamal Terrell\" ],\n  \"defaultSettlementAccountId\" : \"801b785e-c063-457c-bc12-82386f3ebc2d\",\n  \"defaultSettlementAccountNumber\" : \"•••• •••• ••• 4568\",\n  \"defaultSettlementAccountName\" : \"Prestige Operating Account\",\n  \"documents\" : [ {\n    \"documentId\" : \"uid_00001\",\n    \"name\" : \"Loan Contract\",\n    \"contentType\" : \"application/pdf\"\n  } ],\n  \"isFullyRepaid\" : false,\n  \"termUnit\" : \"Year\",\n  \"termCount\" : 26,\n  \"paymentFrequency\" : \"Bimonthly\",\n  \"interestPaymentFrequency\" : \"Biweekly\",\n  \"collateral\" : [ {\n    \"type\" : \"Real estate\",\n    \"currentValue\" : \"100\",\n    \"currencyCode\" : \"EUR\",\n    \"specification\" : \"300 Park Avenue 15th Floor, New York, NY 10022\",\n    \"nextRevaluationDate\" : \"2021-02-28\"\n  } ],\n  \"escrow\" : {\n    \"totalAmount\" : \"100\",\n    \"insurance\" : \"50\",\n    \"fees\" : \"30\",\n    \"tax\" : \"20\",\n    \"pmi\" : \"10\",\n    \"other\" : \"5\"\n  },\n  \"paymentOptions\" : {\n    \"paymentOptions\" : [ {\n      \"name\" : \"LoanPayment\",\n      \"operationType\" : \"Credit\",\n      \"allowed\" : true,\n      \"errorCodes\" : [ ]\n    }, {\n      \"name\" : \"LoanAdvance\",\n      \"operationType\" : \"Debit\",\n      \"allowed\" : true,\n      \"errorCodes\" : [ ]\n    } ]\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"nextRepaymentAmount\" : \"nextRepaymentAmount\",\n  \"defaultSettlementAccountId\" : \"defaultSettlementAccountId\",\n  \"loanType\" : \"loanType\",\n  \"outstandingAmount\" : \"outstandingAmount\",\n  \"inArrearsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"documents\" : [ {\n    \"name\" : \"name\",\n    \"documentId\" : \"documentId\",\n    \"contentType\" : \"contentType\"\n  }, {\n    \"name\" : \"name\",\n    \"documentId\" : \"documentId\",\n    \"contentType\" : \"contentType\"\n  } ],\n  \"termCount\" : 6,\n  \"availableBalance\" : \"availableBalance\",\n  \"drawnAmount\" : \"drawnAmount\",\n  \"paymentOptions\" : {\n    \"paymentOptions\" : [ {\n      \"allowed\" : true,\n      \"errorCodes\" : [ \"errorCodes\", \"errorCodes\" ],\n      \"name\" : \"name\"\n    }, {\n      \"allowed\" : true,\n      \"errorCodes\" : [ \"errorCodes\", \"errorCodes\" ],\n      \"name\" : \"name\"\n    } ]\n  },\n  \"defaultSettlementAccountName\" : \"defaultSettlementAccountName\",\n  \"nextRepaymentDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"alias\" : \"alias\",\n  \"creditLimit\" : \"creditLimit\",\n  \"escrow\" : {\n    \"insurance\" : \"insurance\",\n    \"totalAmount\" : \"totalAmount\",\n    \"fees\" : \"fees\",\n    \"other\" : \"other\",\n    \"tax\" : \"tax\",\n    \"pmi\" : \"pmi\"\n  },\n  \"isFullyRepaid\" : true,\n  \"id\" : \"id\",\n  \"overduePaymentsCount\" : 0,\n  \"feesDue\" : \"feesDue\",\n  \"defaultSettlementAccountNumber\" : \"defaultSettlementAccountNumber\",\n  \"interestRate\" : \"interestRate\",\n  \"borrower\" : [ \"borrower\", \"borrower\" ],\n  \"contractNumber\" : \"contractNumber\",\n  \"accountNumber\" : \"accountNumber\",\n  \"inArrearsAmount\" : \"inArrearsAmount\",\n  \"branchCode\" : \"branchCode\",\n  \"isOverdue\" : true,\n  \"interestDue\" : \"interestDue\",\n  \"name\" : \"name\",\n  \"collateral\" : [ {\n    \"specification\" : \"specification\",\n    \"nextRevaluationDate\" : \"2000-01-23\",\n    \"type\" : \"type\",\n    \"currencyCode\" : \"currencyCode\",\n    \"currentValue\" : \"currentValue\"\n  }, {\n    \"specification\" : \"specification\",\n    \"nextRevaluationDate\" : \"2000-01-23\",\n    \"type\" : \"type\",\n    \"currencyCode\" : \"currencyCode\",\n    \"currentValue\" : \"currentValue\"\n  } ],\n  \"currencyCode\" : \"currencyCode\",\n  \"paidAmount\" : \"paidAmount\",\n  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/loans\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$schema\" : \"../schemas/loans.yaml\",\n  \"loans\" : [ {\n    \"id\" : \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n    \"loanType\" : \"LineOfCredit\",\n    \"name\" : \"Line of credit 1\",\n    \"accountNumber\" : \"NL98RABO5242052503\",\n    \"loanStatus\" : \"Pending\",\n    \"currencyCode\" : \"EUR\",\n    \"paymentOptions\" : {\n      \"paymentOptions\" : [ {\n        \"name\" : \"LoanPayment\",\n        \"operationType\" : \"Credit\",\n        \"allowed\" : true,\n        \"errorCodes\" : [ ]\n      }, {\n        \"name\" : \"LoanAdvance\",\n        \"operationType\" : \"Debit\",\n        \"allowed\" : true,\n        \"errorCodes\" : [ ]\n      } ]\n    }\n  }, {\n    \"id\" : \"764ac5bb-f462-412f-8aee-a218737e1d2a\",\n    \"name\" : \"Term loan 1\",\n    \"loanType\" : \"TermLoan\",\n    \"accountNumber\" : \"NL88ABNA4242739303\",\n    \"loanStatus\" : \"Active\",\n    \"currencyCode\" : \"EUR\",\n    \"paidAmount\" : \"55567.23\",\n    \"outstandingAmount\" : \"54432.77\",\n    \"paymentOptions\" : {\n      \"paymentOptions\" : [ {\n        \"name\" : \"LoanPayment\",\n        \"operationType\" : \"Credit\",\n        \"allowed\" : true,\n        \"errorCodes\" : [ ]\n      } ]\n    }\n  }, {\n    \"id\" : \"7688bd60-dfad-45ba-b1ce-abc6e9ea5208\",\n    \"loanType\" : \"Mortgage\",\n    \"name\" : \"Mortgage 1\",\n    \"accountNumber\" : \"MR3731835513862558214883344\",\n    \"loanStatus\" : \"Inactive\",\n    \"currencyCode\" : \"MRU\",\n    \"paymentOptions\" : {\n      \"paymentOptions\" : [ {\n        \"name\" : \"LoanPayment\",\n        \"operationType\" : \"Credit\",\n        \"allowed\" : false,\n        \"errorCodes\" : [ \"not.allowed.for.inactive.loan\" ]\n      }, {\n        \"name\" : \"LoanAdvance\",\n        \"operationType\" : \"Debit\",\n        \"allowed\" : false,\n        \"errorCodes\" : [ \"not.allowed.for.inactive.loan\" ]\n      } ]\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/loans\",\n        method: \"HEAD\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Loans\n * View loans and loan\\'s details\n *\n * The version of the OpenAPI document: 0.0.33\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationCalculatePaymentAmountRequest } from '../model/models';\nimport { PresentationCalculatedPaymentAmount } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { LOANS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { LoansConfiguration }                                     from '../configuration';\n\n\nexport interface CalculatePaymentAmountRequestParams {\n    /** An id of a loan. */\n    [\"loanId\"]: string;\n    [\"presentationCalculatePaymentAmountRequest\"]: PresentationCalculatePaymentAmountRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new LoansConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(LOANS_BASE_PATH) basePath: string, @Optional() configuration: LoansConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Calculate payment amount with all applied fees.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public calculatePaymentAmount(requestParameters: CalculatePaymentAmountRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationCalculatedPaymentAmount>;\n    /**\n     * Calculate payment amount with all applied fees.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public calculatePaymentAmount(requestParameters: CalculatePaymentAmountRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationCalculatedPaymentAmount>>;\n    /**\n     * Calculate payment amount with all applied fees.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public calculatePaymentAmount(requestParameters: CalculatePaymentAmountRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationCalculatedPaymentAmount>>;\n    /**\n     * Calculate payment amount with all applied fees.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public calculatePaymentAmount(requestParameters: CalculatePaymentAmountRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling calculatePaymentAmount.');\n        }\n        const _presentationCalculatePaymentAmountRequest = requestParameters[\"presentationCalculatePaymentAmountRequest\"];\n        if (_presentationCalculatePaymentAmountRequest === null || _presentationCalculatePaymentAmountRequest === undefined) {\n            throw new Error('Required parameter presentationCalculatePaymentAmountRequest was null or undefined when calling calculatePaymentAmount.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationCalculatedPaymentAmount>(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/calculate-payment-amount`,\n            _presentationCalculatePaymentAmountRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public calculatePaymentAmountUrl(requestParameters: CalculatePaymentAmountRequestParams): string {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling calculatePaymentAmount.');\n        }\n        const _presentationCalculatePaymentAmountRequest = requestParameters[\"presentationCalculatePaymentAmountRequest\"];\n        if (_presentationCalculatePaymentAmountRequest === null || _presentationCalculatePaymentAmountRequest === undefined) {\n            throw new Error('Required parameter presentationCalculatePaymentAmountRequest was null or undefined when calling calculatePaymentAmount.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/calculate-payment-amount`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/loans/{loanId}/calculate-payment-amount URL pattern\n*/\nexport const PaymentHttpServiceCalculatePaymentAmountMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/calculate-payment-amount\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$schema\" : \"../schemas/calculated-payment-amount.yaml\",\n  \"paymentOption\" : \"LOAN_PAYMENT\",\n  \"paymentDate\" : \"2021-12-22\",\n  \"currentPaymentAmount\" : \"100.00000\",\n  \"fees\" : [ {\n    \"feeType\" : \"Transaction fee\",\n    \"amount\" : \"11.00000\",\n    \"sameTransaction\" : false\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const PaymentHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/calculate-payment-amount\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$schema\" : \"../schemas/calculated-payment-amount.yaml\",\n  \"paymentOption\" : \"LOAN_PAYMENT\",\n  \"paymentDate\" : \"2021-12-22\",\n  \"currentPaymentAmount\" : \"100.00000\",\n  \"fees\" : [ {\n    \"feeType\" : \"Transaction fee\",\n    \"amount\" : \"11.00000\",\n    \"sameTransaction\" : false\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Loans\n * View loans and loan\\'s details\n *\n * The version of the OpenAPI document: 0.0.33\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationPaymentOptions } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { LOANS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { LoansConfiguration }                                     from '../configuration';\n\n\nexport interface GetPaymentOptionsRequestParams {\n    /** An id of a Loan */\n    [\"loanId\"]: string;\n    /** A case insensetive operation type filter */\n    [\"operationType\"]?: Array<string>;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentOptionsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new LoansConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(LOANS_BASE_PATH) basePath: string, @Optional() configuration: LoansConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve a list of Payment Options for a Loan by loan id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentOptions(requestParameters: GetPaymentOptionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationPaymentOptions>;\n    /**\n     * Retrieve a list of Payment Options for a Loan by loan id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentOptions(requestParameters: GetPaymentOptionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationPaymentOptions>>;\n    /**\n     * Retrieve a list of Payment Options for a Loan by loan id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentOptions(requestParameters: GetPaymentOptionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationPaymentOptions>>;\n    /**\n     * Retrieve a list of Payment Options for a Loan by loan id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentOptions(requestParameters: GetPaymentOptionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getPaymentOptions.');\n        }\n        const _operationType = requestParameters[\"operationType\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_operationType) {\n            _operationType.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'operationType');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationPaymentOptions>(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/payment-options`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPaymentOptionsUrl(requestParameters: GetPaymentOptionsRequestParams): string {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getPaymentOptions.');\n        }\n        const _operationType = requestParameters[\"operationType\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_operationType) {\n            _operationType.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'operationType');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/payment-options${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/loans/{loanId}/payment-options URL pattern\n*/\nexport const PaymentOptionsHttpServiceGetPaymentOptionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/payment-options\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$schema\" : \"../schemas/payment-options.yaml\",\n  \"paymentOptions\" : [ {\n    \"name\" : \"LoanPayment\",\n    \"operationType\" : \"Credit\",\n    \"allowed\" : true\n  }, {\n    \"name\" : \"LoanAdvance\",\n    \"operationType\" : \"Debit\",\n    \"allowed\" : false,\n    \"errorCodes\" : [ \"draw.amount.is.not.allowed\" ]\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"paymentOptions\" : [ {\n    \"allowed\" : true,\n    \"errorCodes\" : [ \"errorCodes\", \"errorCodes\" ],\n    \"name\" : \"name\"\n  }, {\n    \"allowed\" : true,\n    \"errorCodes\" : [ \"errorCodes\", \"errorCodes\" ],\n    \"name\" : \"name\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const PaymentOptionsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/payment-options\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$schema\" : \"../schemas/payment-options.yaml\",\n  \"paymentOptions\" : [ {\n    \"name\" : \"LoanPayment\",\n    \"operationType\" : \"Credit\",\n    \"allowed\" : true\n  }, {\n    \"name\" : \"LoanAdvance\",\n    \"operationType\" : \"Debit\",\n    \"allowed\" : false,\n    \"errorCodes\" : [ \"draw.amount.is.not.allowed\" ]\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"paymentOptions\" : [ {\n    \"allowed\" : true,\n    \"errorCodes\" : [ \"errorCodes\", \"errorCodes\" ],\n    \"name\" : \"name\"\n  }, {\n    \"allowed\" : true,\n    \"errorCodes\" : [ \"errorCodes\", \"errorCodes\" ],\n    \"name\" : \"name\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}