import { createMocks } from '@backbase/foundation-ang/data-http';
export const LoansHttpServiceDownloadDocumentByLoanIdAndDocumentIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/loans/{loanId}/documents/{documentId}",
        method: "GET",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LoansHttpServiceGetAmortizationPaymentMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/loans/{loanId}/amortization-schedule/{amortizationPaymentId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$schema": "../schemas/amortization-payment.yaml",
                    "id": "829d1713-8c65-4366-98c2-65a518255365",
                    "paymentDate": "2020-07-24T00:00:00Z",
                    "currencyCode": "USD",
                    "paymentAmount": "40000.00000",
                    "interest": "0.00000",
                    "principal": "4000.00000",
                    "endingPrincipalBalance": "40000.00000",
                    "status": "Overdue",
                    "paymentType": "principal-only"
                }
            },
            {
                status: 200,
                body: {
                    "principal": "principal",
                    "interest": "interest",
                    "endingPrincipalBalance": "endingPrincipalBalance",
                    "id": "id",
                    "paymentDate": "2000-01-23T04:56:07.000+00:00",
                    "paymentAmount": "paymentAmount",
                    "currencyCode": "currencyCode",
                    "paymentType": "paymentType"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LoansHttpServiceGetAmortizationScheduleMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/loans/{loanId}/amortization-schedule",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$schema": "../schemas/amortization-schedule.yaml",
                    "payments": [{
                            "id": "829d1713-8c65-4366-98c2-65a518255365",
                            "paymentDate": "2020-07-24T00:00:00Z",
                            "currencyCode": "USD",
                            "paymentAmount": "40000.00000",
                            "interest": "0.00000",
                            "principal": "4000.00000",
                            "endingPrincipalBalance": "40000.00000",
                            "status": "Overdue",
                            "paymentType": "principal-only"
                        }, {
                            "id": "522c5077-8fdc-43c0-bc71-d59bb66ea8ce",
                            "paymentDate": "2020-08-24T00:00:00Z",
                            "currencyCode": "USD",
                            "paymentAmount": "8000.00000",
                            "endingPrincipalBalance": "32000.00000",
                            "status": "Scheduled",
                            "paymentType": "interest-only"
                        }, {
                            "id": "9f4c565d-ffab-4ca1-9094-ee0d53a08782",
                            "paymentDate": "2020-09-24T00:00:00Z",
                            "currencyCode": "USD",
                            "paymentAmount": "32001.00000",
                            "interest": "1",
                            "principal": "32000.00000",
                            "endingPrincipalBalance": "0.00000",
                            "status": "Scheduled",
                            "paymentType": "principal-and-interest"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LoansHttpServiceGetLoanByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/loans/{loanId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$schema": "../schemas/loan.yaml",
                    "id": "9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9",
                    "loanType": "LineOfCredit",
                    "name": "AnyBank Credit Line 1",
                    "accountNumber": "096010415 000789 CL01",
                    "contractNumber": "ATV-676097",
                    "loanStatus": "Active",
                    "currencyCode": "USD",
                    "nextRepaymentDate": "2021-09-13T17:00:00.000Z",
                    "nextRepaymentAmount": "200.00000",
                    "availableBalance": "690.37000",
                    "outstandingAmount": "1954.94000",
                    "creditLimit": "2456.98000",
                    "drawnAmount": "1766.61000",
                    "feesDue": "100.00000",
                    "interestDue": "88.33000",
                    "interestRate": "5.00000",
                    "isOverdue": false,
                    "overduePaymentsCount": 0,
                    "branchCode": "001",
                    "startDate": "1996-10-23T17:00:00.000Z",
                    "endDate": "2022-04-16T17:00:00.000Z",
                    "borrower": ["John a. Doen", "M. Joaveni", "Robert Kan", "Kamal Terrell"],
                    "defaultSettlementAccountId": "801b785e-c063-457c-bc12-82386f3ebc2d",
                    "defaultSettlementAccountNumber": "•••• •••• ••• 4568",
                    "defaultSettlementAccountName": "Prestige Operating Account",
                    "documents": [{
                            "documentId": "uid_00001",
                            "name": "Loan Contract",
                            "contentType": "application/pdf"
                        }],
                    "isFullyRepaid": false,
                    "termUnit": "Year",
                    "termCount": 26,
                    "paymentFrequency": "Bimonthly",
                    "interestPaymentFrequency": "Biweekly",
                    "collateral": [{
                            "type": "Real estate",
                            "currentValue": "100",
                            "currencyCode": "EUR",
                            "specification": "300 Park Avenue 15th Floor, New York, NY 10022",
                            "nextRevaluationDate": "2021-02-28"
                        }],
                    "escrow": {
                        "totalAmount": "100",
                        "insurance": "50",
                        "fees": "30",
                        "tax": "20",
                        "pmi": "10",
                        "other": "5"
                    },
                    "paymentOptions": {
                        "paymentOptions": [{
                                "name": "LoanPayment",
                                "operationType": "Credit",
                                "allowed": true,
                                "errorCodes": []
                            }, {
                                "name": "LoanAdvance",
                                "operationType": "Debit",
                                "allowed": true,
                                "errorCodes": []
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "nextRepaymentAmount": "nextRepaymentAmount",
                    "defaultSettlementAccountId": "defaultSettlementAccountId",
                    "loanType": "loanType",
                    "outstandingAmount": "outstandingAmount",
                    "inArrearsDate": "2000-01-23T04:56:07.000+00:00",
                    "endDate": "2000-01-23T04:56:07.000+00:00",
                    "documents": [{
                            "name": "name",
                            "documentId": "documentId",
                            "contentType": "contentType"
                        }, {
                            "name": "name",
                            "documentId": "documentId",
                            "contentType": "contentType"
                        }],
                    "termCount": 6,
                    "availableBalance": "availableBalance",
                    "drawnAmount": "drawnAmount",
                    "paymentOptions": {
                        "paymentOptions": [{
                                "allowed": true,
                                "errorCodes": ["errorCodes", "errorCodes"],
                                "name": "name"
                            }, {
                                "allowed": true,
                                "errorCodes": ["errorCodes", "errorCodes"],
                                "name": "name"
                            }]
                    },
                    "defaultSettlementAccountName": "defaultSettlementAccountName",
                    "nextRepaymentDate": "2000-01-23T04:56:07.000+00:00",
                    "alias": "alias",
                    "creditLimit": "creditLimit",
                    "escrow": {
                        "insurance": "insurance",
                        "totalAmount": "totalAmount",
                        "fees": "fees",
                        "other": "other",
                        "tax": "tax",
                        "pmi": "pmi"
                    },
                    "isFullyRepaid": true,
                    "id": "id",
                    "overduePaymentsCount": 0,
                    "feesDue": "feesDue",
                    "defaultSettlementAccountNumber": "defaultSettlementAccountNumber",
                    "interestRate": "interestRate",
                    "borrower": ["borrower", "borrower"],
                    "contractNumber": "contractNumber",
                    "accountNumber": "accountNumber",
                    "inArrearsAmount": "inArrearsAmount",
                    "branchCode": "branchCode",
                    "isOverdue": true,
                    "interestDue": "interestDue",
                    "name": "name",
                    "collateral": [{
                            "specification": "specification",
                            "nextRevaluationDate": "2000-01-23",
                            "type": "type",
                            "currencyCode": "currencyCode",
                            "currentValue": "currentValue"
                        }, {
                            "specification": "specification",
                            "nextRevaluationDate": "2000-01-23",
                            "type": "type",
                            "currencyCode": "currencyCode",
                            "currentValue": "currentValue"
                        }],
                    "currencyCode": "currencyCode",
                    "paidAmount": "paidAmount",
                    "startDate": "2000-01-23T04:56:07.000+00:00"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LoansHttpServiceGetLoansMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/loans",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$schema": "../schemas/loans.yaml",
                    "loans": [{
                            "id": "9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9",
                            "loanType": "LineOfCredit",
                            "name": "Line of credit 1",
                            "accountNumber": "NL98RABO5242052503",
                            "loanStatus": "Pending",
                            "currencyCode": "EUR",
                            "paymentOptions": {
                                "paymentOptions": [{
                                        "name": "LoanPayment",
                                        "operationType": "Credit",
                                        "allowed": true,
                                        "errorCodes": []
                                    }, {
                                        "name": "LoanAdvance",
                                        "operationType": "Debit",
                                        "allowed": true,
                                        "errorCodes": []
                                    }]
                            }
                        }, {
                            "id": "764ac5bb-f462-412f-8aee-a218737e1d2a",
                            "name": "Term loan 1",
                            "loanType": "TermLoan",
                            "accountNumber": "NL88ABNA4242739303",
                            "loanStatus": "Active",
                            "currencyCode": "EUR",
                            "paidAmount": "55567.23",
                            "outstandingAmount": "54432.77",
                            "paymentOptions": {
                                "paymentOptions": [{
                                        "name": "LoanPayment",
                                        "operationType": "Credit",
                                        "allowed": true,
                                        "errorCodes": []
                                    }]
                            }
                        }, {
                            "id": "7688bd60-dfad-45ba-b1ce-abc6e9ea5208",
                            "loanType": "Mortgage",
                            "name": "Mortgage 1",
                            "accountNumber": "MR3731835513862558214883344",
                            "loanStatus": "Inactive",
                            "currencyCode": "MRU",
                            "paymentOptions": {
                                "paymentOptions": [{
                                        "name": "LoanPayment",
                                        "operationType": "Credit",
                                        "allowed": false,
                                        "errorCodes": ["not.allowed.for.inactive.loan"]
                                    }, {
                                        "name": "LoanAdvance",
                                        "operationType": "Debit",
                                        "allowed": false,
                                        "errorCodes": ["not.allowed.for.inactive.loan"]
                                    }]
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LoansHttpServiceHeadLoansMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/loans",
        method: "HEAD",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LoansHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/loans/{loanId}/documents/{documentId}",
        method: "GET",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/loans/{loanId}/amortization-schedule/{amortizationPaymentId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$schema": "../schemas/amortization-payment.yaml",
                    "id": "829d1713-8c65-4366-98c2-65a518255365",
                    "paymentDate": "2020-07-24T00:00:00Z",
                    "currencyCode": "USD",
                    "paymentAmount": "40000.00000",
                    "interest": "0.00000",
                    "principal": "4000.00000",
                    "endingPrincipalBalance": "40000.00000",
                    "status": "Overdue",
                    "paymentType": "principal-only"
                }
            },
            {
                status: 200,
                body: {
                    "principal": "principal",
                    "interest": "interest",
                    "endingPrincipalBalance": "endingPrincipalBalance",
                    "id": "id",
                    "paymentDate": "2000-01-23T04:56:07.000+00:00",
                    "paymentAmount": "paymentAmount",
                    "currencyCode": "currencyCode",
                    "paymentType": "paymentType"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/loans/{loanId}/amortization-schedule",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$schema": "../schemas/amortization-schedule.yaml",
                    "payments": [{
                            "id": "829d1713-8c65-4366-98c2-65a518255365",
                            "paymentDate": "2020-07-24T00:00:00Z",
                            "currencyCode": "USD",
                            "paymentAmount": "40000.00000",
                            "interest": "0.00000",
                            "principal": "4000.00000",
                            "endingPrincipalBalance": "40000.00000",
                            "status": "Overdue",
                            "paymentType": "principal-only"
                        }, {
                            "id": "522c5077-8fdc-43c0-bc71-d59bb66ea8ce",
                            "paymentDate": "2020-08-24T00:00:00Z",
                            "currencyCode": "USD",
                            "paymentAmount": "8000.00000",
                            "endingPrincipalBalance": "32000.00000",
                            "status": "Scheduled",
                            "paymentType": "interest-only"
                        }, {
                            "id": "9f4c565d-ffab-4ca1-9094-ee0d53a08782",
                            "paymentDate": "2020-09-24T00:00:00Z",
                            "currencyCode": "USD",
                            "paymentAmount": "32001.00000",
                            "interest": "1",
                            "principal": "32000.00000",
                            "endingPrincipalBalance": "0.00000",
                            "status": "Scheduled",
                            "paymentType": "principal-and-interest"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/loans/{loanId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$schema": "../schemas/loan.yaml",
                    "id": "9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9",
                    "loanType": "LineOfCredit",
                    "name": "AnyBank Credit Line 1",
                    "accountNumber": "096010415 000789 CL01",
                    "contractNumber": "ATV-676097",
                    "loanStatus": "Active",
                    "currencyCode": "USD",
                    "nextRepaymentDate": "2021-09-13T17:00:00.000Z",
                    "nextRepaymentAmount": "200.00000",
                    "availableBalance": "690.37000",
                    "outstandingAmount": "1954.94000",
                    "creditLimit": "2456.98000",
                    "drawnAmount": "1766.61000",
                    "feesDue": "100.00000",
                    "interestDue": "88.33000",
                    "interestRate": "5.00000",
                    "isOverdue": false,
                    "overduePaymentsCount": 0,
                    "branchCode": "001",
                    "startDate": "1996-10-23T17:00:00.000Z",
                    "endDate": "2022-04-16T17:00:00.000Z",
                    "borrower": ["John a. Doen", "M. Joaveni", "Robert Kan", "Kamal Terrell"],
                    "defaultSettlementAccountId": "801b785e-c063-457c-bc12-82386f3ebc2d",
                    "defaultSettlementAccountNumber": "•••• •••• ••• 4568",
                    "defaultSettlementAccountName": "Prestige Operating Account",
                    "documents": [{
                            "documentId": "uid_00001",
                            "name": "Loan Contract",
                            "contentType": "application/pdf"
                        }],
                    "isFullyRepaid": false,
                    "termUnit": "Year",
                    "termCount": 26,
                    "paymentFrequency": "Bimonthly",
                    "interestPaymentFrequency": "Biweekly",
                    "collateral": [{
                            "type": "Real estate",
                            "currentValue": "100",
                            "currencyCode": "EUR",
                            "specification": "300 Park Avenue 15th Floor, New York, NY 10022",
                            "nextRevaluationDate": "2021-02-28"
                        }],
                    "escrow": {
                        "totalAmount": "100",
                        "insurance": "50",
                        "fees": "30",
                        "tax": "20",
                        "pmi": "10",
                        "other": "5"
                    },
                    "paymentOptions": {
                        "paymentOptions": [{
                                "name": "LoanPayment",
                                "operationType": "Credit",
                                "allowed": true,
                                "errorCodes": []
                            }, {
                                "name": "LoanAdvance",
                                "operationType": "Debit",
                                "allowed": true,
                                "errorCodes": []
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "nextRepaymentAmount": "nextRepaymentAmount",
                    "defaultSettlementAccountId": "defaultSettlementAccountId",
                    "loanType": "loanType",
                    "outstandingAmount": "outstandingAmount",
                    "inArrearsDate": "2000-01-23T04:56:07.000+00:00",
                    "endDate": "2000-01-23T04:56:07.000+00:00",
                    "documents": [{
                            "name": "name",
                            "documentId": "documentId",
                            "contentType": "contentType"
                        }, {
                            "name": "name",
                            "documentId": "documentId",
                            "contentType": "contentType"
                        }],
                    "termCount": 6,
                    "availableBalance": "availableBalance",
                    "drawnAmount": "drawnAmount",
                    "paymentOptions": {
                        "paymentOptions": [{
                                "allowed": true,
                                "errorCodes": ["errorCodes", "errorCodes"],
                                "name": "name"
                            }, {
                                "allowed": true,
                                "errorCodes": ["errorCodes", "errorCodes"],
                                "name": "name"
                            }]
                    },
                    "defaultSettlementAccountName": "defaultSettlementAccountName",
                    "nextRepaymentDate": "2000-01-23T04:56:07.000+00:00",
                    "alias": "alias",
                    "creditLimit": "creditLimit",
                    "escrow": {
                        "insurance": "insurance",
                        "totalAmount": "totalAmount",
                        "fees": "fees",
                        "other": "other",
                        "tax": "tax",
                        "pmi": "pmi"
                    },
                    "isFullyRepaid": true,
                    "id": "id",
                    "overduePaymentsCount": 0,
                    "feesDue": "feesDue",
                    "defaultSettlementAccountNumber": "defaultSettlementAccountNumber",
                    "interestRate": "interestRate",
                    "borrower": ["borrower", "borrower"],
                    "contractNumber": "contractNumber",
                    "accountNumber": "accountNumber",
                    "inArrearsAmount": "inArrearsAmount",
                    "branchCode": "branchCode",
                    "isOverdue": true,
                    "interestDue": "interestDue",
                    "name": "name",
                    "collateral": [{
                            "specification": "specification",
                            "nextRevaluationDate": "2000-01-23",
                            "type": "type",
                            "currencyCode": "currencyCode",
                            "currentValue": "currentValue"
                        }, {
                            "specification": "specification",
                            "nextRevaluationDate": "2000-01-23",
                            "type": "type",
                            "currencyCode": "currencyCode",
                            "currentValue": "currentValue"
                        }],
                    "currencyCode": "currencyCode",
                    "paidAmount": "paidAmount",
                    "startDate": "2000-01-23T04:56:07.000+00:00"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/loans",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$schema": "../schemas/loans.yaml",
                    "loans": [{
                            "id": "9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9",
                            "loanType": "LineOfCredit",
                            "name": "Line of credit 1",
                            "accountNumber": "NL98RABO5242052503",
                            "loanStatus": "Pending",
                            "currencyCode": "EUR",
                            "paymentOptions": {
                                "paymentOptions": [{
                                        "name": "LoanPayment",
                                        "operationType": "Credit",
                                        "allowed": true,
                                        "errorCodes": []
                                    }, {
                                        "name": "LoanAdvance",
                                        "operationType": "Debit",
                                        "allowed": true,
                                        "errorCodes": []
                                    }]
                            }
                        }, {
                            "id": "764ac5bb-f462-412f-8aee-a218737e1d2a",
                            "name": "Term loan 1",
                            "loanType": "TermLoan",
                            "accountNumber": "NL88ABNA4242739303",
                            "loanStatus": "Active",
                            "currencyCode": "EUR",
                            "paidAmount": "55567.23",
                            "outstandingAmount": "54432.77",
                            "paymentOptions": {
                                "paymentOptions": [{
                                        "name": "LoanPayment",
                                        "operationType": "Credit",
                                        "allowed": true,
                                        "errorCodes": []
                                    }]
                            }
                        }, {
                            "id": "7688bd60-dfad-45ba-b1ce-abc6e9ea5208",
                            "loanType": "Mortgage",
                            "name": "Mortgage 1",
                            "accountNumber": "MR3731835513862558214883344",
                            "loanStatus": "Inactive",
                            "currencyCode": "MRU",
                            "paymentOptions": {
                                "paymentOptions": [{
                                        "name": "LoanPayment",
                                        "operationType": "Credit",
                                        "allowed": false,
                                        "errorCodes": ["not.allowed.for.inactive.loan"]
                                    }, {
                                        "name": "LoanAdvance",
                                        "operationType": "Debit",
                                        "allowed": false,
                                        "errorCodes": ["not.allowed.for.inactive.loan"]
                                    }]
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/loans",
        method: "HEAD",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,