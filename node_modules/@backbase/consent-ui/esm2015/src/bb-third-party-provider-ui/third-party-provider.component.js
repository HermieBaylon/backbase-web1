import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/avatar";
import * as i2 from "@backbase/ui-ang/icon";
import * as i3 from "@angular/common";
import * as i4 from "@backbase/ui-ang/tooltip-directive";
export class ThirdPartyProviderComponent {
    constructor() {
        /**
         * Showing if the provider is verified.
         * Default is false
         */
        this.verified = false;
        /**
         * Position of the icon.
         * If condensed then it's next to the title, otherwise to the far right.
         * Default is false
         */
        this.condensed = false;
        /**
         * Flag to show expire section.
         * Be default hidden.
         */
        this.showExpire = false;
    }
}
ThirdPartyProviderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ThirdPartyProviderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ThirdPartyProviderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ThirdPartyProviderComponent, selector: "bb-third-party-provider-ui", inputs: { name: "name", image: "image", url: "url", verified: "verified", condensed: "condensed", expiryDate: "expiryDate", expired: "expired", showExpire: "showExpire" }, ngImport: i0, template: "<div class=\"bb-stack\" data-role=\"third-party-provider-condensed-icon-container\">\n  <div>\n    <bb-avatar-ui *ngIf=\"image\" class=\"bb-third-party-provider__avatar bb-avatar\" [image]=\"image\"> </bb-avatar-ui>\n  </div>\n\n  <div>\n    <div>\n      <div class=\"bb-third-party-provider__name-icon\">\n        <span class=\"bb-third-party-provider__name break-word\">{{ name }}</span>\n        <bb-icon-ui\n          *ngIf=\"verified\"\n          (click)=\"$event.stopPropagation()\"\n          container=\"body\"\n          bbTooltip=\"\n    The third party is known to the bank and trusted.\"\n          i18n-bbTooltip=\"\n            Verified provider| The third party is known to the bank and trusted. @@thirdPartyProvider.thirdPartyVerified\"\n          name=\"verified-user\"\n          color=\"success\"\n          [size]=\"condensed ? 'sm' : 'md'\">\n        </bb-icon-ui>\n        <bb-icon-ui\n          *ngIf=\"!verified\"\n          (click)=\"$event.stopPropagation()\"\n          container=\"body\"\n          bbTooltip=\"\n    The third party is unknown to the bank.\n    Make sure you know whom you grant access to.\"\n          i18n-bbTooltip=\"\n            Unverified provider| The third party is unknown to the bank. @@thirdPartyProvider.thirdPartyUnverified\"\n          name=\"help\"\n          color=\"secondary\"\n          [size]=\"condensed ? 'sm' : 'md'\">\n        </bb-icon-ui>\n      </div>\n      <a class=\"break-word\" [href]=\"url\" target=\"_blank\" rel=\"noopener noreferrer\" (click)=\"$event.stopPropagation()\">\n        {{ url }}\n      </a>\n    </div>\n    <div class=\"d-block d-md-none\" *ngIf=\"showExpire\" data-role=\"third-party-provider-expire-container\">\n      <div\n        i18n=\"Expired on|Consent is expired@@consent-list.date.expiredOn\"\n        class=\"bb-consent-item__date-header\"\n        data-role=\"third-party-provider-expire-on\"\n        *ngIf=\"expired\">\n        Expired on\n      </div>\n      <div\n        data-role=\"third-party-provider-expire-date\"\n        i18n=\"Expiry Date|Expiry Date of Consent@@consent-list.date.expiryDate\"\n        class=\"bb-consent-item__date-header\"\n        *ngIf=\"!expired\">\n        Expire date\n      </div>\n      <div data-role=\"third-party-provider-expire-value\">\n        {{ expiryDate }}\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.AvatarComponent, selector: "bb-avatar-ui", inputs: ["image", "name", "imgAlt", "size"] }, { type: i2.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ThirdPartyProviderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-third-party-provider-ui',
                    templateUrl: './third-party-provider.component.html',
                }]
        }], propDecorators: { name: [{
                type: Input
            }], image: [{
                type: Input
            }], url: [{
                type: Input
            }], verified: [{
                type: Input
            }], condensed: [{
                type: Input
            }], expiryDate: [{
                type: Input
            }], expired: [{
                type: Input
            }], showExpire: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhpcmQtcGFydHktcHJvdmlkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jb25zZW50LXVpL3NyYy9iYi10aGlyZC1wYXJ0eS1wcm92aWRlci11aS90aGlyZC1wYXJ0eS1wcm92aWRlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbnNlbnQtdWkvc3JjL2JiLXRoaXJkLXBhcnR5LXByb3ZpZGVyLXVpL3RoaXJkLXBhcnR5LXByb3ZpZGVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFNakQsTUFBTSxPQUFPLDJCQUEyQjtJQUp4QztRQWlCRTs7O1dBR0c7UUFDTSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQzFCOzs7O1dBSUc7UUFDTSxjQUFTLEdBQUcsS0FBSyxDQUFDO1FBUzNCOzs7V0FHRztRQUNNLGVBQVUsR0FBRyxLQUFLLENBQUM7S0FDN0I7O3lIQXJDWSwyQkFBMkI7NkdBQTNCLDJCQUEyQiw4T0NOeEMsdXpFQTREQTs0RkR0RGEsMkJBQTJCO2tCQUp2QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw0QkFBNEI7b0JBQ3RDLFdBQVcsRUFBRSx1Q0FBdUM7aUJBQ3JEOzhCQUtVLElBQUk7c0JBQVosS0FBSztnQkFJRyxLQUFLO3NCQUFiLEtBQUs7Z0JBSUcsR0FBRztzQkFBWCxLQUFLO2dCQUtHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBTUcsU0FBUztzQkFBakIsS0FBSztnQkFJRyxVQUFVO3NCQUFsQixLQUFLO2dCQUlHLE9BQU87c0JBQWYsS0FBSztnQkFLRyxVQUFVO3NCQUFsQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi10aGlyZC1wYXJ0eS1wcm92aWRlci11aScsXG4gIHRlbXBsYXRlVXJsOiAnLi90aGlyZC1wYXJ0eS1wcm92aWRlci5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFRoaXJkUGFydHlQcm92aWRlckNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBUaGUgVFBQIE5hbWUuIERlZmF1bHQgaXMgZW1wdHkgc3RyaW5nXG4gICAqL1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBUaGUgVFBQIGltYWdlLiBEZWZhdWx0IGlzIG5vIGltYWdlXG4gICAqL1xuICBASW5wdXQoKSBpbWFnZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogVGhlIFRQUCB1cmwuIERlZmF1bHQgaXMgZW1wdHkgc3RyaW5nXG4gICAqL1xuICBASW5wdXQoKSB1cmw6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFNob3dpbmcgaWYgdGhlIHByb3ZpZGVyIGlzIHZlcmlmaWVkLlxuICAgKiBEZWZhdWx0IGlzIGZhbHNlXG4gICAqL1xuICBASW5wdXQoKSB2ZXJpZmllZCA9IGZhbHNlO1xuICAvKipcbiAgICogUG9zaXRpb24gb2YgdGhlIGljb24uXG4gICAqIElmIGNvbmRlbnNlZCB0aGVuIGl0J3MgbmV4dCB0byB0aGUgdGl0bGUsIG90aGVyd2lzZSB0byB0aGUgZmFyIHJpZ2h0LlxuICAgKiBEZWZhdWx0IGlzIGZhbHNlXG4gICAqL1xuICBASW5wdXQoKSBjb25kZW5zZWQgPSBmYWxzZTtcbiAgLyoqXG4gICAqIEV4cGlyZSBkYXRlLlxuICAgKi9cbiAgQElucHV0KCkgZXhwaXJ5RGF0ZT86IHN0cmluZyB8IG51bGw7XG4gIC8qKlxuICAgKiBJcyBkYXRlIGV4cGlyZWQgZmxhZy5cbiAgICovXG4gIEBJbnB1dCgpIGV4cGlyZWQ/OiBib29sZWFuO1xuICAvKipcbiAgICogRmxhZyB0byBzaG93IGV4cGlyZSBzZWN0aW9uLlxuICAgKiBCZSBkZWZhdWx0IGhpZGRlbi5cbiAgICovXG4gIEBJbnB1dCgpIHNob3dFeHBpcmUgPSBmYWxzZTtcbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi1zdGFja1wiIGRhdGEtcm9sZT1cInRoaXJkLXBhcnR5LXByb3ZpZGVyLWNvbmRlbnNlZC1pY29uLWNvbnRhaW5lclwiPlxuICA8ZGl2PlxuICAgIDxiYi1hdmF0YXItdWkgKm5nSWY9XCJpbWFnZVwiIGNsYXNzPVwiYmItdGhpcmQtcGFydHktcHJvdmlkZXJfX2F2YXRhciBiYi1hdmF0YXJcIiBbaW1hZ2VdPVwiaW1hZ2VcIj4gPC9iYi1hdmF0YXItdWk+XG4gIDwvZGl2PlxuXG4gIDxkaXY+XG4gICAgPGRpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi10aGlyZC1wYXJ0eS1wcm92aWRlcl9fbmFtZS1pY29uXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiYmItdGhpcmQtcGFydHktcHJvdmlkZXJfX25hbWUgYnJlYWstd29yZFwiPnt7IG5hbWUgfX08L3NwYW4+XG4gICAgICAgIDxiYi1pY29uLXVpXG4gICAgICAgICAgKm5nSWY9XCJ2ZXJpZmllZFwiXG4gICAgICAgICAgKGNsaWNrKT1cIiRldmVudC5zdG9wUHJvcGFnYXRpb24oKVwiXG4gICAgICAgICAgY29udGFpbmVyPVwiYm9keVwiXG4gICAgICAgICAgYmJUb29sdGlwPVwiXG4gICAgVGhlIHRoaXJkIHBhcnR5IGlzIGtub3duIHRvIHRoZSBiYW5rIGFuZCB0cnVzdGVkLlwiXG4gICAgICAgICAgaTE4bi1iYlRvb2x0aXA9XCJcbiAgICAgICAgICAgIFZlcmlmaWVkIHByb3ZpZGVyfCBUaGUgdGhpcmQgcGFydHkgaXMga25vd24gdG8gdGhlIGJhbmsgYW5kIHRydXN0ZWQuIEBAdGhpcmRQYXJ0eVByb3ZpZGVyLnRoaXJkUGFydHlWZXJpZmllZFwiXG4gICAgICAgICAgbmFtZT1cInZlcmlmaWVkLXVzZXJcIlxuICAgICAgICAgIGNvbG9yPVwic3VjY2Vzc1wiXG4gICAgICAgICAgW3NpemVdPVwiY29uZGVuc2VkID8gJ3NtJyA6ICdtZCdcIj5cbiAgICAgICAgPC9iYi1pY29uLXVpPlxuICAgICAgICA8YmItaWNvbi11aVxuICAgICAgICAgICpuZ0lmPVwiIXZlcmlmaWVkXCJcbiAgICAgICAgICAoY2xpY2spPVwiJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXCJcbiAgICAgICAgICBjb250YWluZXI9XCJib2R5XCJcbiAgICAgICAgICBiYlRvb2x0aXA9XCJcbiAgICBUaGUgdGhpcmQgcGFydHkgaXMgdW5rbm93biB0byB0aGUgYmFuay5cbiAgICBNYWtlIHN1cmUgeW91IGtub3cgd2hvbSB5b3UgZ3JhbnQgYWNjZXNzIHRvLlwiXG4gICAgICAgICAgaTE4bi1iYlRvb2x0aXA9XCJcbiAgICAgICAgICAgIFVudmVyaWZpZWQgcHJvdmlkZXJ8IFRoZSB0aGlyZCBwYXJ0eSBpcyB1bmtub3duIHRvIHRoZSBiYW5rLiBAQHRoaXJkUGFydHlQcm92aWRlci50aGlyZFBhcnR5VW52ZXJpZmllZFwiXG4gICAgICAgICAgbmFtZT1cImhlbHBcIlxuICAgICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgICAgICBbc2l6ZV09XCJjb25kZW5zZWQgPyAnc20nIDogJ21kJ1wiPlxuICAgICAgICA8L2JiLWljb24tdWk+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxhIGNsYXNzPVwiYnJlYWstd29yZFwiIFtocmVmXT1cInVybFwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIiAoY2xpY2spPVwiJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXCI+XG4gICAgICAgIHt7IHVybCB9fVxuICAgICAgPC9hPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJkLWJsb2NrIGQtbWQtbm9uZVwiICpuZ0lmPVwic2hvd0V4cGlyZVwiIGRhdGEtcm9sZT1cInRoaXJkLXBhcnR5LXByb3ZpZGVyLWV4cGlyZS1jb250YWluZXJcIj5cbiAgICAgIDxkaXZcbiAgICAgICAgaTE4bj1cIkV4cGlyZWQgb258Q29uc2VudCBpcyBleHBpcmVkQEBjb25zZW50LWxpc3QuZGF0ZS5leHBpcmVkT25cIlxuICAgICAgICBjbGFzcz1cImJiLWNvbnNlbnQtaXRlbV9fZGF0ZS1oZWFkZXJcIlxuICAgICAgICBkYXRhLXJvbGU9XCJ0aGlyZC1wYXJ0eS1wcm92aWRlci1leHBpcmUtb25cIlxuICAgICAgICAqbmdJZj1cImV4cGlyZWRcIj5cbiAgICAgICAgRXhwaXJlZCBvblxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2XG4gICAgICAgIGRhdGEtcm9sZT1cInRoaXJkLXBhcnR5LXByb3ZpZGVyLWV4cGlyZS1kYXRlXCJcbiAgICAgICAgaTE4bj1cIkV4cGlyeSBEYXRlfEV4cGlyeSBEYXRlIG9mIENvbnNlbnRAQGNvbnNlbnQtbGlzdC5kYXRlLmV4cGlyeURhdGVcIlxuICAgICAgICBjbGFzcz1cImJiLWNvbnNlbnQtaXRlbV9fZGF0ZS1oZWFkZXJcIlxuICAgICAgICAqbmdJZj1cIiFleHBpcmVkXCI+XG4gICAgICAgIEV4cGlyZSBkYXRlXG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgZGF0YS1yb2xlPVwidGhpcmQtcGFydHktcHJvdmlkZXItZXhwaXJlLXZhbHVlXCI+XG4gICAgICAgIHt7IGV4cGlyeURhdGUgfX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19