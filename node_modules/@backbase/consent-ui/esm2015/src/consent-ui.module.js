import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { AvatarModule } from '@backbase/ui-ang/avatar';
import { IconModule } from '@backbase/ui-ang/icon';
import { TooltipModule } from '@backbase/ui-ang/tooltip-directive';
import { ThirdPartyProviderComponent } from './bb-third-party-provider-ui/third-party-provider.component';
import * as i0 from "@angular/core";
const uiModules = [AvatarModule, IconModule, TooltipModule];
export class ConsentUiModule {
}
ConsentUiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentUiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ConsentUiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentUiModule, declarations: [ThirdPartyProviderComponent], imports: [CommonModule, AvatarModule, IconModule, TooltipModule], exports: [ThirdPartyProviderComponent, AvatarModule, IconModule, TooltipModule] });
ConsentUiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentUiModule, imports: [[CommonModule, ...uiModules], AvatarModule, IconModule, TooltipModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentUiModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...uiModules],
                    declarations: [ThirdPartyProviderComponent],
                    exports: [ThirdPartyProviderComponent, ...uiModules],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc2VudC11aS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL2NvbnNlbnQtdWkvc3JjL2NvbnNlbnQtdWkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDZEQUE2RCxDQUFDOztBQUUxRyxNQUFNLFNBQVMsR0FBRyxDQUFDLFlBQVksRUFBRSxVQUFVLEVBQUUsYUFBYSxDQUFDLENBQUM7QUFPNUQsTUFBTSxPQUFPLGVBQWU7OzZHQUFmLGVBQWU7OEdBQWYsZUFBZSxpQkFIWCwyQkFBMkIsYUFEaEMsWUFBWSxFQUhMLFlBQVksRUFBRSxVQUFVLEVBQUUsYUFBYSxhQUs5QywyQkFBMkIsRUFMcEIsWUFBWSxFQUFFLFVBQVUsRUFBRSxhQUFhOzhHQU83QyxlQUFlLFlBSmpCLENBQUMsWUFBWSxFQUFFLEdBQUcsU0FBUyxDQUFDLEVBSHBCLFlBQVksRUFBRSxVQUFVLEVBQUUsYUFBYTs0RkFPN0MsZUFBZTtrQkFMM0IsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxTQUFTLENBQUM7b0JBQ3JDLFlBQVksRUFBRSxDQUFDLDJCQUEyQixDQUFDO29CQUMzQyxPQUFPLEVBQUUsQ0FBQywyQkFBMkIsRUFBRSxHQUFHLFNBQVMsQ0FBQztpQkFDckQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEF2YXRhck1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvYXZhdGFyJztcbmltcG9ydCB7IEljb25Nb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2ljb24nO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvdG9vbHRpcC1kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGhpcmRQYXJ0eVByb3ZpZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9iYi10aGlyZC1wYXJ0eS1wcm92aWRlci11aS90aGlyZC1wYXJ0eS1wcm92aWRlci5jb21wb25lbnQnO1xuXG5jb25zdCB1aU1vZHVsZXMgPSBbQXZhdGFyTW9kdWxlLCBJY29uTW9kdWxlLCBUb29sdGlwTW9kdWxlXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgLi4udWlNb2R1bGVzXSxcbiAgZGVjbGFyYXRpb25zOiBbVGhpcmRQYXJ0eVByb3ZpZGVyQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW1RoaXJkUGFydHlQcm92aWRlckNvbXBvbmVudCwgLi4udWlNb2R1bGVzXSxcbn0pXG5leHBvcnQgY2xhc3MgQ29uc2VudFVpTW9kdWxlIHt9XG4iXX0=