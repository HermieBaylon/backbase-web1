import * as i0 from '@angular/core';
import { Component, Input, NgModule } from '@angular/core';
import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i1 from '@backbase/ui-ang/avatar';
import { AvatarModule } from '@backbase/ui-ang/avatar';
import * as i2 from '@backbase/ui-ang/icon';
import { IconModule } from '@backbase/ui-ang/icon';
import * as i4 from '@backbase/ui-ang/tooltip-directive';
import { TooltipModule } from '@backbase/ui-ang/tooltip-directive';

class ThirdPartyProviderComponent {
    constructor() {
        /**
         * Showing if the provider is verified.
         * Default is false
         */
        this.verified = false;
        /**
         * Position of the icon.
         * If condensed then it's next to the title, otherwise to the far right.
         * Default is false
         */
        this.condensed = false;
        /**
         * Flag to show expire section.
         * Be default hidden.
         */
        this.showExpire = false;
    }
}
ThirdPartyProviderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ThirdPartyProviderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ThirdPartyProviderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ThirdPartyProviderComponent, selector: "bb-third-party-provider-ui", inputs: { name: "name", image: "image", url: "url", verified: "verified", condensed: "condensed", expiryDate: "expiryDate", expired: "expired", showExpire: "showExpire" }, ngImport: i0, template: "<div class=\"bb-stack\" data-role=\"third-party-provider-condensed-icon-container\">\n  <div>\n    <bb-avatar-ui *ngIf=\"image\" class=\"bb-third-party-provider__avatar bb-avatar\" [image]=\"image\"> </bb-avatar-ui>\n  </div>\n\n  <div>\n    <div>\n      <div class=\"bb-third-party-provider__name-icon\">\n        <span class=\"bb-third-party-provider__name break-word\">{{ name }}</span>\n        <bb-icon-ui\n          *ngIf=\"verified\"\n          (click)=\"$event.stopPropagation()\"\n          container=\"body\"\n          bbTooltip=\"\n    The third party is known to the bank and trusted.\"\n          i18n-bbTooltip=\"\n            Verified provider| The third party is known to the bank and trusted. @@thirdPartyProvider.thirdPartyVerified\"\n          name=\"verified-user\"\n          color=\"success\"\n          [size]=\"condensed ? 'sm' : 'md'\">\n        </bb-icon-ui>\n        <bb-icon-ui\n          *ngIf=\"!verified\"\n          (click)=\"$event.stopPropagation()\"\n          container=\"body\"\n          bbTooltip=\"\n    The third party is unknown to the bank.\n    Make sure you know whom you grant access to.\"\n          i18n-bbTooltip=\"\n            Unverified provider| The third party is unknown to the bank. @@thirdPartyProvider.thirdPartyUnverified\"\n          name=\"help\"\n          color=\"secondary\"\n          [size]=\"condensed ? 'sm' : 'md'\">\n        </bb-icon-ui>\n      </div>\n      <a class=\"break-word\" [href]=\"url\" target=\"_blank\" rel=\"noopener noreferrer\" (click)=\"$event.stopPropagation()\">\n        {{ url }}\n      </a>\n    </div>\n    <div class=\"d-block d-md-none\" *ngIf=\"showExpire\" data-role=\"third-party-provider-expire-container\">\n      <div\n        i18n=\"Expired on|Consent is expired@@consent-list.date.expiredOn\"\n        class=\"bb-consent-item__date-header\"\n        data-role=\"third-party-provider-expire-on\"\n        *ngIf=\"expired\">\n        Expired on\n      </div>\n      <div\n        data-role=\"third-party-provider-expire-date\"\n        i18n=\"Expiry Date|Expiry Date of Consent@@consent-list.date.expiryDate\"\n        class=\"bb-consent-item__date-header\"\n        *ngIf=\"!expired\">\n        Expire date\n      </div>\n      <div data-role=\"third-party-provider-expire-value\">\n        {{ expiryDate }}\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.AvatarComponent, selector: "bb-avatar-ui", inputs: ["image", "name", "imgAlt", "size"] }, { type: i2.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ThirdPartyProviderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-third-party-provider-ui',
                    templateUrl: './third-party-provider.component.html',
                }]
        }], propDecorators: { name: [{
                type: Input
            }], image: [{
                type: Input
            }], url: [{
                type: Input
            }], verified: [{
                type: Input
            }], condensed: [{
                type: Input
            }], expiryDate: [{
                type: Input
            }], expired: [{
                type: Input
            }], showExpire: [{
                type: Input
            }] } });

const uiModules = [AvatarModule, IconModule, TooltipModule];
class ConsentUiModule {
}
ConsentUiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentUiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ConsentUiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentUiModule, declarations: [ThirdPartyProviderComponent], imports: [CommonModule, AvatarModule, IconModule, TooltipModule], exports: [ThirdPartyProviderComponent, AvatarModule, IconModule, TooltipModule] });
ConsentUiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentUiModule, imports: [[CommonModule, ...uiModules], AvatarModule, IconModule, TooltipModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentUiModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...uiModules],
                    declarations: [ThirdPartyProviderComponent],
                    exports: [ThirdPartyProviderComponent, ...uiModules],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { ConsentUiModule, ThirdPartyProviderComponent as ӨThirdPartyProviderComponent };
//# sourceMappingURL=backbase-consent-ui.js.map
