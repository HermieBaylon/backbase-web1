import { createMocks } from '@backbase/foundation-ang/data-http';
export const SanctionedCountriesHttpServiceGetSanctionedCountriesMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/sanctioned-countries",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "countries": [{
                            "country": "AE",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "IBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification",
                                    "regex": "/^[a-zA-Z0-9]{23}$/"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["AED", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "AU",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "bsb": "BSB code"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{6}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["AUD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "BR",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "IBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification",
                                    "regex": "/^[a-zA-Z0-9]{29}$/"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["BRL", "EUR", "GBP", "USD"]
                                }, {
                                    "key": "purpose-of-payment",
                                    "mandatory": true
                                }]
                        }, {
                            "country": "CA",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "routing-number": "Routing number"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{9}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["CAD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "CN",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["EUR", "GBP", "USD"]
                                }, {
                                    "key": "purpose-of-payment",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "predefinedValues": true
                                }],
                            "purposesOfPayment": [{
                                    "code": "PAYT/02123",
                                    "description": "Individual Payment"
                                }, {
                                    "code": "PAYT/02112",
                                    "description": "Trade related Payment"
                                }, {
                                    "code": "PAYT/02114",
                                    "description": "Service related Payment"
                                }]
                        }, {
                            "country": "GB",
                            "isDefault": true,
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "sort-code": "Sort code"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{6}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "HK",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "clearing": "Clearing code"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{3}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["HKD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "IN",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "ifsc": "IFSC"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[a-zA-Z0-9]{3}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["INR", "EUR", "GBP", "USD"]
                                }, {
                                    "key": "purpose-of-payment",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "predefinedValues": true
                                }],
                            "purposesOfPayment": [{
                                    "code": "P1004",
                                    "description": "Legal services"
                                }, {
                                    "code": "P0401",
                                    "description": "Postal services"
                                }, {
                                    "code": "P0402",
                                    "description": "Courier services"
                                }]
                        }, {
                            "country": "JO",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "IBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification",
                                    "regex": "/^[a-zA-Z0-9]{30}$/"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["JOD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "JP",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["JPY", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "NL",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "IBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification",
                                    "regex": "/^[a-zA-Z0-9]{18}$/"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "RU",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "bik": "BIK"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{9}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["RUB", "EUR", "GBP", "USD"]
                                }, {
                                    "key": "purpose-of-payment",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "predefinedValues": true
                                }],
                            "purposesOfPayment": [{
                                    "code": "01010",
                                    "description": "Selling by Residents of foreign currencies for Russian Roubles"
                                }, {
                                    "code": "99010",
                                    "description": "The return to Residents, of erroneously debited (credited) funds"
                                }, {
                                    "code": "01030",
                                    "description": "Purchases by Residents of foreign currencies for Russian Roubles"
                                }]
                        }, {
                            "country": "SA",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "za-code": "ZA code"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{6}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["ZAR", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "SG",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["SGD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "US",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "routing-number": "Routing transit number (ABA)"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{9}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["EUR", "GBP", "USD"]
                                }]
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const SanctionedCountriesHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/sanctioned-countries",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "countries": [{
                            "country": "AE",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "IBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification",
                                    "regex": "/^[a-zA-Z0-9]{23}$/"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["AED", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "AU",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "bsb": "BSB code"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{6}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["AUD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "BR",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "IBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification",
                                    "regex": "/^[a-zA-Z0-9]{29}$/"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["BRL", "EUR", "GBP", "USD"]
                                }, {
                                    "key": "purpose-of-payment",
                                    "mandatory": true
                                }]
                        }, {
                            "country": "CA",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "routing-number": "Routing number"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{9}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["CAD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "CN",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["EUR", "GBP", "USD"]
                                }, {
                                    "key": "purpose-of-payment",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "predefinedValues": true
                                }],
                            "purposesOfPayment": [{
                                    "code": "PAYT/02123",
                                    "description": "Individual Payment"
                                }, {
                                    "code": "PAYT/02112",
                                    "description": "Trade related Payment"
                                }, {
                                    "code": "PAYT/02114",
                                    "description": "Service related Payment"
                                }]
                        }, {
                            "country": "GB",
                            "isDefault": true,
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "sort-code": "Sort code"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{6}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "HK",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "clearing": "Clearing code"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{3}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["HKD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "IN",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "ifsc": "IFSC"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[a-zA-Z0-9]{3}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["INR", "EUR", "GBP", "USD"]
                                }, {
                                    "key": "purpose-of-payment",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "predefinedValues": true
                                }],
                            "purposesOfPayment": [{
                                    "code": "P1004",
                                    "description": "Legal services"
                                }, {
                                    "code": "P0401",
                                    "description": "Postal services"
                                }, {
                                    "code": "P0402",
                                    "description": "Courier services"
                                }]
                        }, {
                            "country": "JO",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "IBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification",
                                    "regex": "/^[a-zA-Z0-9]{30}$/"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["JOD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "JP",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["JPY", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "NL",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "IBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification",
                                    "regex": "/^[a-zA-Z0-9]{18}$/"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "RU",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "bik": "BIK"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{9}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["RUB", "EUR", "GBP", "USD"]
                                }, {
                                    "key": "purpose-of-payment",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "predefinedValues": true
                                }],
                            "purposesOfPayment": [{
                                    "code": "01010",
                                    "description": "Selling by Residents of foreign currencies for Russian Roubles"
                                }, {
                                    "code": "99010",
                                    "description": "The return to Residents, of erroneously debited (credited) funds"
                                }, {
                                    "code": "01030",
                                    "description": "Purchases by Residents of foreign currencies for Russian Roubles"
                                }]
                        }, {
                            "country": "SA",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "za-code": "ZA code"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{6}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["ZAR", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "SG",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "notApplicable": true,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["SGD", "EUR", "GBP", "USD"]
                                }]
                        }, {
                            "country": "US",
                            "inputFormSettings": [{
                                    "key": "account-number",
                                    "format": "BBAN",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyAccount.identification.identification"
                                }, {
                                    "key": "bank-code",
                                    "label": {
                                        "routing-number": "Routing transit number (ABA)"
                                    },
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.counterpartyBank.bankBranchCode",
                                    "regex": "/^[0-9]{9}$/"
                                }, {
                                    "key": "currency",
                                    "mandatory": true,
                                    "notApplicable": false,
                                    "apiField": "transferTransactionInformation.instructedAmount.currencyCode",
                                    "values": ["EUR", "GBP", "USD"]
                                }]
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuY3Rpb25lZENvdW50cmllcy5zZXJ2aWNlLm1vY2tzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vYXBpL3NhbmN0aW9uZWRDb3VudHJpZXMuc2VydmljZS5tb2Nrcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFNakUsTUFBTSxDQUFDLE1BQU0saUVBQWlFLEdBQWEsV0FBVyxDQUFDLENBQUM7UUFDaEcsVUFBVSxFQUFFLHFDQUFxQztRQUNqRCxNQUFNLEVBQUUsS0FBSztRQUNiLFNBQVMsRUFBRTtZQUNIO2dCQUNJLE1BQU0sRUFBRSxHQUFHO2dCQUNYLElBQUksRUFBRTtvQkFDeEIsV0FBVyxFQUFHLENBQUU7NEJBQ2QsU0FBUyxFQUFHLElBQUk7NEJBQ2hCLG1CQUFtQixFQUFHLENBQUU7b0NBQ3RCLEtBQUssRUFBRyxnQkFBZ0I7b0NBQ3hCLFFBQVEsRUFBRyxNQUFNO29DQUNqQixXQUFXLEVBQUcsSUFBSTtvQ0FDbEIsZUFBZSxFQUFHLEtBQUs7b0NBQ3ZCLFVBQVUsRUFBRyxrRkFBa0Y7b0NBQy9GLE9BQU8sRUFBRyxxQkFBcUI7aUNBQ2hDLEVBQUU7b0NBQ0QsS0FBSyxFQUFHLFdBQVc7b0NBQ25CLGVBQWUsRUFBRyxJQUFJO29DQUN0QixVQUFVLEVBQUcsZ0VBQWdFO2lDQUM5RSxFQUFFO29DQUNELEtBQUssRUFBRyxVQUFVO29DQUNsQixXQUFXLEVBQUcsSUFBSTtvQ0FDbEIsZUFBZSxFQUFHLEtBQUs7b0NBQ3ZCLFVBQVUsRUFBRyw4REFBOEQ7b0NBQzNFLFFBQVEsRUFBRyxDQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBRTtpQ0FDMUMsQ0FBRTt5QkFDSixFQUFFOzRCQUNELFNBQVMsRUFBRyxJQUFJOzRCQUNoQixtQkFBbUIsRUFBRyxDQUFFO29DQUN0QixLQUFLLEVBQUcsZ0JBQWdCO29DQUN4QixR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OzRCQUNELFNBQVMsRUFBRyxJQUFJOzRCQUNoQixtQkFBbUIsRUFBRyxDQUFFO29DQUN0QixLQUFLLEVBQUcsZ0JBQWdCO29DQUN4QixRQUFRLEVBQUcsTUFBTTtvQ0FDakIsV0FBVyxFQUFHLElBQUk7b0NBQ2xCLGVBQWUsRUFBRyxLQUFLO29DQUN2QixVQUFVLEVBQUcsa0ZBQWtGO2lDQUNoRyxFQUFFO29DQUNELEtBQUssRUFBRyxXQUFXO29DQUNuQixPQUFPLEVBQUc7d0NBQ1IsZ0JBQWdCLEVBQUcsOEJBQThCO3FDQUNsRDtvQ0FDRCxXQUFXLEVBQUcsSUFBSTtvQ0FDbEIsZUFBZSxFQUFHLEtBQUs7b0NBQ3ZCLFVBQVUsRUFBRyxnRUFBZ0U7b0NBQzdFLE9BQU8sRUFBRyxjQUFjO2lDQUN6QixFQUFFO29DQUNELEtBQUssRUFBRyxVQUFVO29DQUNsQixXQUFXLEVBQUcsSUFBSTtvQ0FDbEIsZUFBZSxFQUFHLEtBQUs7b0NBQ3ZCLFVBQVUsRUFBRyw4REFBOEQ7b0NBQzNFLFFBQVEsRUFBRyxDQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFFO2lDQUNuQyxDQUFFO3lCQUNKLENBQUU7aUJBQ0o7YUFDWTtZQUVEO2dCQUNJLE1BQU0sRUFBRSxHQUFHO2dCQUNYLElBQUksRUFBRTtvQkFDcEIsU0FBUyxFQUFHLHNCQUFzQjtpQkFDbkM7YUFDWTtTQUNSO0tBQ0o7Q0FDQSxDQUNBLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVNb2NrcyB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9kYXRhLWh0dHAnO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4qIE1vY2tzIHByb3ZpZGVyIGZvciAvY2xpZW50LWFwaS92MS9zYW5jdGlvbmVkLWNvdW50cmllcyBVUkwgcGF0dGVyblxuKi9cbmV4cG9ydCBjb25zdCBTYW5jdGlvbmVkQ291bnRyaWVzSHR0cFNlcnZpY2VHZXRTYW5jdGlvbmVkQ291bnRyaWVzTW9ja3NQcm92aWRlcjogUHJvdmlkZXIgPSBjcmVhdGVNb2Nrcyhbe1xuICAgICAgICB1cmxQYXR0ZXJuOiBcIi9jbGllbnQtYXBpL3YxL3NhbmN0aW9uZWQtY291bnRyaWVzXCIsXG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgcmVzcG9uc2VzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgYm9keToge1xuICBcImNvdW50cmllc1wiIDogWyB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkFFXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiSUJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiLFxuICAgICAgXCJyZWdleFwiIDogXCIvXlthLXpBLVowLTldezIzfSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogdHJ1ZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImN1cnJlbmN5XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5pbnN0cnVjdGVkQW1vdW50LmN1cnJlbmN5Q29kZVwiLFxuICAgICAgXCJ2YWx1ZXNcIiA6IFsgXCJBRURcIiwgXCJFVVJcIiwgXCJHQlBcIiwgXCJVU0RcIiBdXG4gICAgfSBdXG4gIH0sIHtcbiAgICBcImNvdW50cnlcIiA6IFwiQVVcIixcbiAgICBcImlucHV0Rm9ybVNldHRpbmdzXCIgOiBbIHtcbiAgICAgIFwia2V5XCIgOiBcImFjY291bnQtbnVtYmVyXCIsXG4gICAgICBcImZvcm1hdFwiIDogXCJCQkFOXCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlBY2NvdW50LmlkZW50aWZpY2F0aW9uLmlkZW50aWZpY2F0aW9uXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibGFiZWxcIiA6IHtcbiAgICAgICAgXCJic2JcIiA6IFwiQlNCIGNvZGVcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXs2fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiQVVEXCIsIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkJSXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiSUJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiLFxuICAgICAgXCJyZWdleFwiIDogXCIvXlthLXpBLVowLTldezI5fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogdHJ1ZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImN1cnJlbmN5XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5pbnN0cnVjdGVkQW1vdW50LmN1cnJlbmN5Q29kZVwiLFxuICAgICAgXCJ2YWx1ZXNcIiA6IFsgXCJCUkxcIiwgXCJFVVJcIiwgXCJHQlBcIiwgXCJVU0RcIiBdXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwicHVycG9zZS1vZi1wYXltZW50XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZVxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkNBXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiQkJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiYmFuay1jb2RlXCIsXG4gICAgICBcImxhYmVsXCIgOiB7XG4gICAgICAgIFwicm91dGluZy1udW1iZXJcIiA6IFwiUm91dGluZyBudW1iZXJcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXs5fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiQ0FEXCIsIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkNOXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiQkJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJwdXJwb3NlLW9mLXBheW1lbnRcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwicHJlZGVmaW5lZFZhbHVlc1wiIDogdHJ1ZVxuICAgIH0gXSxcbiAgICBcInB1cnBvc2VzT2ZQYXltZW50XCIgOiBbIHtcbiAgICAgIFwiY29kZVwiIDogXCJQQVlULzAyMTIzXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIkluZGl2aWR1YWwgUGF5bWVudFwiXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIlBBWVQvMDIxMTJcIixcbiAgICAgIFwiZGVzY3JpcHRpb25cIiA6IFwiVHJhZGUgcmVsYXRlZCBQYXltZW50XCJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiUEFZVC8wMjExNFwiLFxuICAgICAgXCJkZXNjcmlwdGlvblwiIDogXCJTZXJ2aWNlIHJlbGF0ZWQgUGF5bWVudFwiXG4gICAgfSBdXG4gIH0sIHtcbiAgICBcImNvdW50cnlcIiA6IFwiR0JcIixcbiAgICBcImlzRGVmYXVsdFwiIDogdHJ1ZSxcbiAgICBcImlucHV0Rm9ybVNldHRpbmdzXCIgOiBbIHtcbiAgICAgIFwia2V5XCIgOiBcImFjY291bnQtbnVtYmVyXCIsXG4gICAgICBcImZvcm1hdFwiIDogXCJCQkFOXCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlBY2NvdW50LmlkZW50aWZpY2F0aW9uLmlkZW50aWZpY2F0aW9uXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibGFiZWxcIiA6IHtcbiAgICAgICAgXCJzb3J0LWNvZGVcIiA6IFwiU29ydCBjb2RlXCJcbiAgICAgIH0sXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlCYW5rLmJhbmtCcmFuY2hDb2RlXCIsXG4gICAgICBcInJlZ2V4XCIgOiBcIi9eWzAtOV17Nn0kL1wiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9IF1cbiAgfSwge1xuICAgIFwiY291bnRyeVwiIDogXCJIS1wiLFxuICAgIFwiaW5wdXRGb3JtU2V0dGluZ3NcIiA6IFsge1xuICAgICAgXCJrZXlcIiA6IFwiYWNjb3VudC1udW1iZXJcIixcbiAgICAgIFwiZm9ybWF0XCIgOiBcIkJCQU5cIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUFjY291bnQuaWRlbnRpZmljYXRpb24uaWRlbnRpZmljYXRpb25cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJsYWJlbFwiIDoge1xuICAgICAgICBcImNsZWFyaW5nXCIgOiBcIkNsZWFyaW5nIGNvZGVcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXszfSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiSEtEXCIsIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIklOXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiQkJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiYmFuay1jb2RlXCIsXG4gICAgICBcImxhYmVsXCIgOiB7XG4gICAgICAgIFwiaWZzY1wiIDogXCJJRlNDXCJcbiAgICAgIH0sXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlCYW5rLmJhbmtCcmFuY2hDb2RlXCIsXG4gICAgICBcInJlZ2V4XCIgOiBcIi9eW2EtekEtWjAtOV17M30kL1wiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIklOUlwiLCBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJwdXJwb3NlLW9mLXBheW1lbnRcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwicHJlZGVmaW5lZFZhbHVlc1wiIDogdHJ1ZVxuICAgIH0gXSxcbiAgICBcInB1cnBvc2VzT2ZQYXltZW50XCIgOiBbIHtcbiAgICAgIFwiY29kZVwiIDogXCJQMTAwNFwiLFxuICAgICAgXCJkZXNjcmlwdGlvblwiIDogXCJMZWdhbCBzZXJ2aWNlc1wiXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIlAwNDAxXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIlBvc3RhbCBzZXJ2aWNlc1wiXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIlAwNDAyXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIkNvdXJpZXIgc2VydmljZXNcIlxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkpPXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiSUJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiLFxuICAgICAgXCJyZWdleFwiIDogXCIvXlthLXpBLVowLTldezMwfSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogdHJ1ZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImN1cnJlbmN5XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5pbnN0cnVjdGVkQW1vdW50LmN1cnJlbmN5Q29kZVwiLFxuICAgICAgXCJ2YWx1ZXNcIiA6IFsgXCJKT0RcIiwgXCJFVVJcIiwgXCJHQlBcIiwgXCJVU0RcIiBdXG4gICAgfSBdXG4gIH0sIHtcbiAgICBcImNvdW50cnlcIiA6IFwiSlBcIixcbiAgICBcImlucHV0Rm9ybVNldHRpbmdzXCIgOiBbIHtcbiAgICAgIFwia2V5XCIgOiBcImFjY291bnQtbnVtYmVyXCIsXG4gICAgICBcImZvcm1hdFwiIDogXCJCQkFOXCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlBY2NvdW50LmlkZW50aWZpY2F0aW9uLmlkZW50aWZpY2F0aW9uXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogdHJ1ZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImN1cnJlbmN5XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5pbnN0cnVjdGVkQW1vdW50LmN1cnJlbmN5Q29kZVwiLFxuICAgICAgXCJ2YWx1ZXNcIiA6IFsgXCJKUFlcIiwgXCJFVVJcIiwgXCJHQlBcIiwgXCJVU0RcIiBdXG4gICAgfSBdXG4gIH0sIHtcbiAgICBcImNvdW50cnlcIiA6IFwiTkxcIixcbiAgICBcImlucHV0Rm9ybVNldHRpbmdzXCIgOiBbIHtcbiAgICAgIFwia2V5XCIgOiBcImFjY291bnQtbnVtYmVyXCIsXG4gICAgICBcImZvcm1hdFwiIDogXCJJQkFOXCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlBY2NvdW50LmlkZW50aWZpY2F0aW9uLmlkZW50aWZpY2F0aW9uXCIsXG4gICAgICBcInJlZ2V4XCIgOiBcIi9eW2EtekEtWjAtOV17MTh9JC9cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiB0cnVlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QmFuay5iYW5rQnJhbmNoQ29kZVwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9IF1cbiAgfSwge1xuICAgIFwiY291bnRyeVwiIDogXCJSVVwiLFxuICAgIFwiaW5wdXRGb3JtU2V0dGluZ3NcIiA6IFsge1xuICAgICAgXCJrZXlcIiA6IFwiYWNjb3VudC1udW1iZXJcIixcbiAgICAgIFwiZm9ybWF0XCIgOiBcIkJCQU5cIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUFjY291bnQuaWRlbnRpZmljYXRpb24uaWRlbnRpZmljYXRpb25cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJsYWJlbFwiIDoge1xuICAgICAgICBcImJpa1wiIDogXCJCSUtcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXs5fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiUlVCXCIsIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcInB1cnBvc2Utb2YtcGF5bWVudFwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJwcmVkZWZpbmVkVmFsdWVzXCIgOiB0cnVlXG4gICAgfSBdLFxuICAgIFwicHVycG9zZXNPZlBheW1lbnRcIiA6IFsge1xuICAgICAgXCJjb2RlXCIgOiBcIjAxMDEwXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIlNlbGxpbmcgYnkgUmVzaWRlbnRzIG9mIGZvcmVpZ24gY3VycmVuY2llcyBmb3IgUnVzc2lhbiBSb3VibGVzXCJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiOTkwMTBcIixcbiAgICAgIFwiZGVzY3JpcHRpb25cIiA6IFwiVGhlIHJldHVybiB0byBSZXNpZGVudHMsIG9mIGVycm9uZW91c2x5IGRlYml0ZWQgKGNyZWRpdGVkKSBmdW5kc1wiXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIjAxMDMwXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIlB1cmNoYXNlcyBieSBSZXNpZGVudHMgb2YgZm9yZWlnbiBjdXJyZW5jaWVzIGZvciBSdXNzaWFuIFJvdWJsZXNcIlxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIlNBXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiQkJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiYmFuay1jb2RlXCIsXG4gICAgICBcImxhYmVsXCIgOiB7XG4gICAgICAgIFwiemEtY29kZVwiIDogXCJaQSBjb2RlXCJcbiAgICAgIH0sXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlCYW5rLmJhbmtCcmFuY2hDb2RlXCIsXG4gICAgICBcInJlZ2V4XCIgOiBcIi9eWzAtOV17Nn0kL1wiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIlpBUlwiLCBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9IF1cbiAgfSwge1xuICAgIFwiY291bnRyeVwiIDogXCJTR1wiLFxuICAgIFwiaW5wdXRGb3JtU2V0dGluZ3NcIiA6IFsge1xuICAgICAgXCJrZXlcIiA6IFwiYWNjb3VudC1udW1iZXJcIixcbiAgICAgIFwiZm9ybWF0XCIgOiBcIkJCQU5cIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUFjY291bnQuaWRlbnRpZmljYXRpb24uaWRlbnRpZmljYXRpb25cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiB0cnVlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QmFuay5iYW5rQnJhbmNoQ29kZVwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIlNHRFwiLCBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9IF1cbiAgfSwge1xuICAgIFwiY291bnRyeVwiIDogXCJVU1wiLFxuICAgIFwiaW5wdXRGb3JtU2V0dGluZ3NcIiA6IFsge1xuICAgICAgXCJrZXlcIiA6IFwiYWNjb3VudC1udW1iZXJcIixcbiAgICAgIFwiZm9ybWF0XCIgOiBcIkJCQU5cIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUFjY291bnQuaWRlbnRpZmljYXRpb24uaWRlbnRpZmljYXRpb25cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJsYWJlbFwiIDoge1xuICAgICAgICBcInJvdXRpbmctbnVtYmVyXCIgOiBcIlJvdXRpbmcgdHJhbnNpdCBudW1iZXIgKEFCQSlcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXs5fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0gXVxuICB9IF1cbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkRlc2NyaXB0aW9uIG9mIGVycm9yXCJcbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgIF1cbn1dKTtcblxuZXhwb3J0IGNvbnN0IFNhbmN0aW9uZWRDb3VudHJpZXNIdHRwU2VydmljZU1vY2tzUHJvdmlkZXI6IFByb3ZpZGVyID0gY3JlYXRlTW9ja3MoXG4gICAgW1xuICAgIHtcbiAgICAgICAgdXJsUGF0dGVybjogXCIvY2xpZW50LWFwaS92MS9zYW5jdGlvbmVkLWNvdW50cmllc1wiLFxuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgIHJlc3BvbnNlczogW1xuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcImNvdW50cmllc1wiIDogWyB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkFFXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiSUJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiLFxuICAgICAgXCJyZWdleFwiIDogXCIvXlthLXpBLVowLTldezIzfSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogdHJ1ZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImN1cnJlbmN5XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5pbnN0cnVjdGVkQW1vdW50LmN1cnJlbmN5Q29kZVwiLFxuICAgICAgXCJ2YWx1ZXNcIiA6IFsgXCJBRURcIiwgXCJFVVJcIiwgXCJHQlBcIiwgXCJVU0RcIiBdXG4gICAgfSBdXG4gIH0sIHtcbiAgICBcImNvdW50cnlcIiA6IFwiQVVcIixcbiAgICBcImlucHV0Rm9ybVNldHRpbmdzXCIgOiBbIHtcbiAgICAgIFwia2V5XCIgOiBcImFjY291bnQtbnVtYmVyXCIsXG4gICAgICBcImZvcm1hdFwiIDogXCJCQkFOXCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlBY2NvdW50LmlkZW50aWZpY2F0aW9uLmlkZW50aWZpY2F0aW9uXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibGFiZWxcIiA6IHtcbiAgICAgICAgXCJic2JcIiA6IFwiQlNCIGNvZGVcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXs2fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiQVVEXCIsIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkJSXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiSUJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiLFxuICAgICAgXCJyZWdleFwiIDogXCIvXlthLXpBLVowLTldezI5fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogdHJ1ZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImN1cnJlbmN5XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5pbnN0cnVjdGVkQW1vdW50LmN1cnJlbmN5Q29kZVwiLFxuICAgICAgXCJ2YWx1ZXNcIiA6IFsgXCJCUkxcIiwgXCJFVVJcIiwgXCJHQlBcIiwgXCJVU0RcIiBdXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwicHVycG9zZS1vZi1wYXltZW50XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZVxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkNBXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiQkJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiYmFuay1jb2RlXCIsXG4gICAgICBcImxhYmVsXCIgOiB7XG4gICAgICAgIFwicm91dGluZy1udW1iZXJcIiA6IFwiUm91dGluZyBudW1iZXJcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXs5fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiQ0FEXCIsIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkNOXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiQkJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJwdXJwb3NlLW9mLXBheW1lbnRcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwicHJlZGVmaW5lZFZhbHVlc1wiIDogdHJ1ZVxuICAgIH0gXSxcbiAgICBcInB1cnBvc2VzT2ZQYXltZW50XCIgOiBbIHtcbiAgICAgIFwiY29kZVwiIDogXCJQQVlULzAyMTIzXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIkluZGl2aWR1YWwgUGF5bWVudFwiXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIlBBWVQvMDIxMTJcIixcbiAgICAgIFwiZGVzY3JpcHRpb25cIiA6IFwiVHJhZGUgcmVsYXRlZCBQYXltZW50XCJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiUEFZVC8wMjExNFwiLFxuICAgICAgXCJkZXNjcmlwdGlvblwiIDogXCJTZXJ2aWNlIHJlbGF0ZWQgUGF5bWVudFwiXG4gICAgfSBdXG4gIH0sIHtcbiAgICBcImNvdW50cnlcIiA6IFwiR0JcIixcbiAgICBcImlzRGVmYXVsdFwiIDogdHJ1ZSxcbiAgICBcImlucHV0Rm9ybVNldHRpbmdzXCIgOiBbIHtcbiAgICAgIFwia2V5XCIgOiBcImFjY291bnQtbnVtYmVyXCIsXG4gICAgICBcImZvcm1hdFwiIDogXCJCQkFOXCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlBY2NvdW50LmlkZW50aWZpY2F0aW9uLmlkZW50aWZpY2F0aW9uXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibGFiZWxcIiA6IHtcbiAgICAgICAgXCJzb3J0LWNvZGVcIiA6IFwiU29ydCBjb2RlXCJcbiAgICAgIH0sXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlCYW5rLmJhbmtCcmFuY2hDb2RlXCIsXG4gICAgICBcInJlZ2V4XCIgOiBcIi9eWzAtOV17Nn0kL1wiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9IF1cbiAgfSwge1xuICAgIFwiY291bnRyeVwiIDogXCJIS1wiLFxuICAgIFwiaW5wdXRGb3JtU2V0dGluZ3NcIiA6IFsge1xuICAgICAgXCJrZXlcIiA6IFwiYWNjb3VudC1udW1iZXJcIixcbiAgICAgIFwiZm9ybWF0XCIgOiBcIkJCQU5cIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUFjY291bnQuaWRlbnRpZmljYXRpb24uaWRlbnRpZmljYXRpb25cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJsYWJlbFwiIDoge1xuICAgICAgICBcImNsZWFyaW5nXCIgOiBcIkNsZWFyaW5nIGNvZGVcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXszfSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiSEtEXCIsIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIklOXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiQkJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiYmFuay1jb2RlXCIsXG4gICAgICBcImxhYmVsXCIgOiB7XG4gICAgICAgIFwiaWZzY1wiIDogXCJJRlNDXCJcbiAgICAgIH0sXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlCYW5rLmJhbmtCcmFuY2hDb2RlXCIsXG4gICAgICBcInJlZ2V4XCIgOiBcIi9eW2EtekEtWjAtOV17M30kL1wiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIklOUlwiLCBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJwdXJwb3NlLW9mLXBheW1lbnRcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwicHJlZGVmaW5lZFZhbHVlc1wiIDogdHJ1ZVxuICAgIH0gXSxcbiAgICBcInB1cnBvc2VzT2ZQYXltZW50XCIgOiBbIHtcbiAgICAgIFwiY29kZVwiIDogXCJQMTAwNFwiLFxuICAgICAgXCJkZXNjcmlwdGlvblwiIDogXCJMZWdhbCBzZXJ2aWNlc1wiXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIlAwNDAxXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIlBvc3RhbCBzZXJ2aWNlc1wiXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIlAwNDAyXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIkNvdXJpZXIgc2VydmljZXNcIlxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIkpPXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiSUJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiLFxuICAgICAgXCJyZWdleFwiIDogXCIvXlthLXpBLVowLTldezMwfSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogdHJ1ZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImN1cnJlbmN5XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5pbnN0cnVjdGVkQW1vdW50LmN1cnJlbmN5Q29kZVwiLFxuICAgICAgXCJ2YWx1ZXNcIiA6IFsgXCJKT0RcIiwgXCJFVVJcIiwgXCJHQlBcIiwgXCJVU0RcIiBdXG4gICAgfSBdXG4gIH0sIHtcbiAgICBcImNvdW50cnlcIiA6IFwiSlBcIixcbiAgICBcImlucHV0Rm9ybVNldHRpbmdzXCIgOiBbIHtcbiAgICAgIFwia2V5XCIgOiBcImFjY291bnQtbnVtYmVyXCIsXG4gICAgICBcImZvcm1hdFwiIDogXCJCQkFOXCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlBY2NvdW50LmlkZW50aWZpY2F0aW9uLmlkZW50aWZpY2F0aW9uXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJiYW5rLWNvZGVcIixcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogdHJ1ZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImN1cnJlbmN5XCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5pbnN0cnVjdGVkQW1vdW50LmN1cnJlbmN5Q29kZVwiLFxuICAgICAgXCJ2YWx1ZXNcIiA6IFsgXCJKUFlcIiwgXCJFVVJcIiwgXCJHQlBcIiwgXCJVU0RcIiBdXG4gICAgfSBdXG4gIH0sIHtcbiAgICBcImNvdW50cnlcIiA6IFwiTkxcIixcbiAgICBcImlucHV0Rm9ybVNldHRpbmdzXCIgOiBbIHtcbiAgICAgIFwia2V5XCIgOiBcImFjY291bnQtbnVtYmVyXCIsXG4gICAgICBcImZvcm1hdFwiIDogXCJJQkFOXCIsXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlBY2NvdW50LmlkZW50aWZpY2F0aW9uLmlkZW50aWZpY2F0aW9uXCIsXG4gICAgICBcInJlZ2V4XCIgOiBcIi9eW2EtekEtWjAtOV17MTh9JC9cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiB0cnVlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QmFuay5iYW5rQnJhbmNoQ29kZVwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9IF1cbiAgfSwge1xuICAgIFwiY291bnRyeVwiIDogXCJSVVwiLFxuICAgIFwiaW5wdXRGb3JtU2V0dGluZ3NcIiA6IFsge1xuICAgICAgXCJrZXlcIiA6IFwiYWNjb3VudC1udW1iZXJcIixcbiAgICAgIFwiZm9ybWF0XCIgOiBcIkJCQU5cIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUFjY291bnQuaWRlbnRpZmljYXRpb24uaWRlbnRpZmljYXRpb25cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJsYWJlbFwiIDoge1xuICAgICAgICBcImJpa1wiIDogXCJCSUtcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXs5fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiUlVCXCIsIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcInB1cnBvc2Utb2YtcGF5bWVudFwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJwcmVkZWZpbmVkVmFsdWVzXCIgOiB0cnVlXG4gICAgfSBdLFxuICAgIFwicHVycG9zZXNPZlBheW1lbnRcIiA6IFsge1xuICAgICAgXCJjb2RlXCIgOiBcIjAxMDEwXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIlNlbGxpbmcgYnkgUmVzaWRlbnRzIG9mIGZvcmVpZ24gY3VycmVuY2llcyBmb3IgUnVzc2lhbiBSb3VibGVzXCJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiOTkwMTBcIixcbiAgICAgIFwiZGVzY3JpcHRpb25cIiA6IFwiVGhlIHJldHVybiB0byBSZXNpZGVudHMsIG9mIGVycm9uZW91c2x5IGRlYml0ZWQgKGNyZWRpdGVkKSBmdW5kc1wiXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIjAxMDMwXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIlB1cmNoYXNlcyBieSBSZXNpZGVudHMgb2YgZm9yZWlnbiBjdXJyZW5jaWVzIGZvciBSdXNzaWFuIFJvdWJsZXNcIlxuICAgIH0gXVxuICB9LCB7XG4gICAgXCJjb3VudHJ5XCIgOiBcIlNBXCIsXG4gICAgXCJpbnB1dEZvcm1TZXR0aW5nc1wiIDogWyB7XG4gICAgICBcImtleVwiIDogXCJhY2NvdW50LW51bWJlclwiLFxuICAgICAgXCJmb3JtYXRcIiA6IFwiQkJBTlwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QWNjb3VudC5pZGVudGlmaWNhdGlvbi5pZGVudGlmaWNhdGlvblwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiYmFuay1jb2RlXCIsXG4gICAgICBcImxhYmVsXCIgOiB7XG4gICAgICAgIFwiemEtY29kZVwiIDogXCJaQSBjb2RlXCJcbiAgICAgIH0sXG4gICAgICBcIm1hbmRhdG9yeVwiIDogdHJ1ZSxcbiAgICAgIFwibm90QXBwbGljYWJsZVwiIDogZmFsc2UsXG4gICAgICBcImFwaUZpZWxkXCIgOiBcInRyYW5zZmVyVHJhbnNhY3Rpb25JbmZvcm1hdGlvbi5jb3VudGVycGFydHlCYW5rLmJhbmtCcmFuY2hDb2RlXCIsXG4gICAgICBcInJlZ2V4XCIgOiBcIi9eWzAtOV17Nn0kL1wiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIlpBUlwiLCBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9IF1cbiAgfSwge1xuICAgIFwiY291bnRyeVwiIDogXCJTR1wiLFxuICAgIFwiaW5wdXRGb3JtU2V0dGluZ3NcIiA6IFsge1xuICAgICAgXCJrZXlcIiA6IFwiYWNjb3VudC1udW1iZXJcIixcbiAgICAgIFwiZm9ybWF0XCIgOiBcIkJCQU5cIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUFjY291bnQuaWRlbnRpZmljYXRpb24uaWRlbnRpZmljYXRpb25cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiB0cnVlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uY291bnRlcnBhcnR5QmFuay5iYW5rQnJhbmNoQ29kZVwiXG4gICAgfSwge1xuICAgICAgXCJrZXlcIiA6IFwiY3VycmVuY3lcIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmluc3RydWN0ZWRBbW91bnQuY3VycmVuY3lDb2RlXCIsXG4gICAgICBcInZhbHVlc1wiIDogWyBcIlNHRFwiLCBcIkVVUlwiLCBcIkdCUFwiLCBcIlVTRFwiIF1cbiAgICB9IF1cbiAgfSwge1xuICAgIFwiY291bnRyeVwiIDogXCJVU1wiLFxuICAgIFwiaW5wdXRGb3JtU2V0dGluZ3NcIiA6IFsge1xuICAgICAgXCJrZXlcIiA6IFwiYWNjb3VudC1udW1iZXJcIixcbiAgICAgIFwiZm9ybWF0XCIgOiBcIkJCQU5cIixcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUFjY291bnQuaWRlbnRpZmljYXRpb24uaWRlbnRpZmljYXRpb25cIlxuICAgIH0sIHtcbiAgICAgIFwia2V5XCIgOiBcImJhbmstY29kZVwiLFxuICAgICAgXCJsYWJlbFwiIDoge1xuICAgICAgICBcInJvdXRpbmctbnVtYmVyXCIgOiBcIlJvdXRpbmcgdHJhbnNpdCBudW1iZXIgKEFCQSlcIlxuICAgICAgfSxcbiAgICAgIFwibWFuZGF0b3J5XCIgOiB0cnVlLFxuICAgICAgXCJub3RBcHBsaWNhYmxlXCIgOiBmYWxzZSxcbiAgICAgIFwiYXBpRmllbGRcIiA6IFwidHJhbnNmZXJUcmFuc2FjdGlvbkluZm9ybWF0aW9uLmNvdW50ZXJwYXJ0eUJhbmsuYmFua0JyYW5jaENvZGVcIixcbiAgICAgIFwicmVnZXhcIiA6IFwiL15bMC05XXs5fSQvXCJcbiAgICB9LCB7XG4gICAgICBcImtleVwiIDogXCJjdXJyZW5jeVwiLFxuICAgICAgXCJtYW5kYXRvcnlcIiA6IHRydWUsXG4gICAgICBcIm5vdEFwcGxpY2FibGVcIiA6IGZhbHNlLFxuICAgICAgXCJhcGlGaWVsZFwiIDogXCJ0cmFuc2ZlclRyYW5zYWN0aW9uSW5mb3JtYXRpb24uaW5zdHJ1Y3RlZEFtb3VudC5jdXJyZW5jeUNvZGVcIixcbiAgICAgIFwidmFsdWVzXCIgOiBbIFwiRVVSXCIsIFwiR0JQXCIsIFwiVVNEXCIgXVxuICAgIH0gXVxuICB9IF1cbn1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJEZXNjcmlwdGlvbiBvZiBlcnJvclwiXG59XG4gICAgICAgICAgICB9LFxuICAgIF1cbn0sXG5dXG4pO1xuXG5cbiJdfQ==