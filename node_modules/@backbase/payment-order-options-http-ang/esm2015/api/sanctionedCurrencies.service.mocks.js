import { createMocks } from '@backbase/foundation-ang/data-http';
export const SanctionedCurrenciesHttpServiceGetSanctionedCurrenciesMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/sanctioned-currencies",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "default": {
                        "code": "GBP",
                        "decimals": 2
                    },
                    "labeled": {
                        "normal": [{
                                "code": "AED",
                                "decimals": 2
                            }, {
                                "code": "AUD",
                                "decimals": 2
                            }, {
                                "code": "BRL",
                                "decimals": 2
                            }, {
                                "code": "CAD",
                                "decimals": 2
                            }, {
                                "code": "CNY",
                                "decimals": 2
                            }, {
                                "code": "HKD",
                                "decimals": 2
                            }, {
                                "code": "INR",
                                "decimals": 2
                            }, {
                                "code": "JPY",
                                "decimals": 0
                            }, {
                                "code": "JOD",
                                "decimals": 3
                            }, {
                                "code": "RUB",
                                "decimals": 2
                            }, {
                                "code": "SGD",
                                "decimals": 2
                            }, {
                                "code": "ZAR",
                                "decimals": 2
                            }],
                        "popular": [{
                                "code": "EUR",
                                "decimals": 2
                            }, {
                                "code": "GBP",
                                "decimals": 2
                            }, {
                                "code": "USD",
                                "decimals": 2
                            }]
                    }
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const SanctionedCurrenciesHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/sanctioned-currencies",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "default": {
                        "code": "GBP",
                        "decimals": 2
                    },
                    "labeled": {
                        "normal": [{
                                "code": "AED",
                                "decimals": 2
                            }, {
                                "code": "AUD",
                                "decimals": 2
                            }, {
                                "code": "BRL",
                                "decimals": 2
                            }, {
                                "code": "CAD",
                                "decimals": 2
                            }, {
                                "code": "CNY",
                                "decimals": 2
                            }, {
                                "code": "HKD",
                                "decimals": 2
                            }, {
                                "code": "INR",
                                "decimals": 2
                            }, {
                                "code": "JPY",
                                "decimals": 0
                            }, {
                                "code": "JOD",
                                "decimals": 3
                            }, {
                                "code": "RUB",
                                "decimals": 2
                            }, {
                                "code": "SGD",
                                "decimals": 2
                            }, {
                                "code": "ZAR",
                                "decimals": 2
                            }],
                        "popular": [{
                                "code": "EUR",
                                "decimals": 2
                            }, {
                                "code": "GBP",
                                "decimals": 2
                            }, {
                                "code": "USD",
                                "decimals": 2
                            }]
                    }
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuY3Rpb25lZEN1cnJlbmNpZXMuc2VydmljZS5tb2Nrcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FwaS9zYW5jdGlvbmVkQ3VycmVuY2llcy5zZXJ2aWNlLm1vY2tzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQU1qRSxNQUFNLENBQUMsTUFBTSxtRUFBbUUsR0FBYSxXQUFXLENBQUMsQ0FBQztRQUNsRyxVQUFVLEVBQUUsc0NBQXNDO1FBQ2xELE1BQU0sRUFBRSxLQUFLO1FBQ2IsU0FBUyxFQUFFO1lBQ0g7Z0JBQ0ksTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsSUFBSSxFQUFFO29CQUN4QixTQUFTLEVBQUc7d0JBQ1YsTUFBTSxFQUFHLEtBQUs7d0JBQ2QsVUFBVSxFQUFHLENBQUM7cUJBQ2Y7b0JBQ0QsU0FBUyxFQUFHO3dCQUNWLFFBQVEsRUFBRyxDQUFFO2dDQUNYLE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixFQUFFO2dDQUNELE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixFQUFFO2dDQUNELE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixFQUFFO2dDQUNELE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixDQUFFO3dCQUNILFNBQVMsRUFBRyxDQUFFO2dDQUNaLE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixDQUFFO3FCQUNKO2lCQUNGO2FBQ2dCO1lBQ0Q7Z0JBQ0ksTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsSUFBSSxFQUFFO29CQUN4QixTQUFTLEVBQUcsc0JBQXNCO2lCQUNuQzthQUNnQjtTQUNaO0tBQ0osQ0FBQyxDQUFDLENBQUM7QUFFSixNQUFNLENBQUMsTUFBTSw0Q0FBNEMsR0FBYSxXQUFXLENBQzdFO0lBQ0E7UUFDSSxVQUFVLEVBQUUsc0NBQXNDO1FBQ2xELE1BQU0sRUFBRSxLQUFLO1FBQ2IsU0FBUyxFQUFFO1lBRVA7Z0JBQ0ksTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsSUFBSSxFQUFFO29CQUNwQixTQUFTLEVBQUc7d0JBQ1YsTUFBTSxFQUFHLEtBQUs7d0JBQ2QsVUFBVSxFQUFHLENBQUM7cUJBQ2Y7b0JBQ0QsU0FBUyxFQUFHO3dCQUNWLFFBQVEsRUFBRyxDQUFFO2dDQUNYLE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixFQUFFO2dDQUNELE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixFQUFFO2dDQUNELE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixFQUFFO2dDQUNELE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixDQUFFO3dCQUNILFNBQVMsRUFBRyxDQUFFO2dDQUNaLE1BQU0sRUFBRyxLQUFLO2dDQUNkLFVBQVUsRUFBRyxDQUFDOzZCQUNmLEVBQUU7Z0NBQ0QsTUFBTSxFQUFHLEtBQUs7Z0NBQ2QsVUFBVSxFQUFHLENBQUM7NkJBQ2YsRUFBRTtnQ0FDRCxNQUFNLEVBQUcsS0FBSztnQ0FDZCxVQUFVLEVBQUcsQ0FBQzs2QkFDZixDQUFFO3FCQUNKO2lCQUNGO2FBQ1k7WUFFRDtnQkFDSSxNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUU7b0JBQ3BCLFNBQVMsRUFBRyxzQkFBc0I7aUJBQ25DO2FBQ1k7U0FDUjtLQUNKO0NBQ0EsQ0FDQSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTW9ja3MgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvZGF0YS1odHRwJztcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuKiBNb2NrcyBwcm92aWRlciBmb3IgL2NsaWVudC1hcGkvdjEvc2FuY3Rpb25lZC1jdXJyZW5jaWVzIFVSTCBwYXR0ZXJuXG4qL1xuZXhwb3J0IGNvbnN0IFNhbmN0aW9uZWRDdXJyZW5jaWVzSHR0cFNlcnZpY2VHZXRTYW5jdGlvbmVkQ3VycmVuY2llc01vY2tzUHJvdmlkZXI6IFByb3ZpZGVyID0gY3JlYXRlTW9ja3MoW3tcbiAgICAgICAgdXJsUGF0dGVybjogXCIvY2xpZW50LWFwaS92MS9zYW5jdGlvbmVkLWN1cnJlbmNpZXNcIixcbiAgICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgICByZXNwb25zZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwiZGVmYXVsdFwiIDoge1xuICAgIFwiY29kZVwiIDogXCJHQlBcIixcbiAgICBcImRlY2ltYWxzXCIgOiAyXG4gIH0sXG4gIFwibGFiZWxlZFwiIDoge1xuICAgIFwibm9ybWFsXCIgOiBbIHtcbiAgICAgIFwiY29kZVwiIDogXCJBRURcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiQVVEXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAyXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIkJSTFwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogMlxuICAgIH0sIHtcbiAgICAgIFwiY29kZVwiIDogXCJDQURcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiQ05ZXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAyXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIkhLRFwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogMlxuICAgIH0sIHtcbiAgICAgIFwiY29kZVwiIDogXCJJTlJcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiSlBZXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAwXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIkpPRFwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogM1xuICAgIH0sIHtcbiAgICAgIFwiY29kZVwiIDogXCJSVUJcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiU0dEXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAyXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIlpBUlwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogMlxuICAgIH0gXSxcbiAgICBcInBvcHVsYXJcIiA6IFsge1xuICAgICAgXCJjb2RlXCIgOiBcIkVVUlwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogMlxuICAgIH0sIHtcbiAgICAgIFwiY29kZVwiIDogXCJHQlBcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiVVNEXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAyXG4gICAgfSBdXG4gIH1cbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkRlc2NyaXB0aW9uIG9mIGVycm9yXCJcbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgIF1cbn1dKTtcblxuZXhwb3J0IGNvbnN0IFNhbmN0aW9uZWRDdXJyZW5jaWVzSHR0cFNlcnZpY2VNb2Nrc1Byb3ZpZGVyOiBQcm92aWRlciA9IGNyZWF0ZU1vY2tzKFxuICAgIFtcbiAgICB7XG4gICAgICAgIHVybFBhdHRlcm46IFwiL2NsaWVudC1hcGkvdjEvc2FuY3Rpb25lZC1jdXJyZW5jaWVzXCIsXG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgcmVzcG9uc2VzOiBbXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwiZGVmYXVsdFwiIDoge1xuICAgIFwiY29kZVwiIDogXCJHQlBcIixcbiAgICBcImRlY2ltYWxzXCIgOiAyXG4gIH0sXG4gIFwibGFiZWxlZFwiIDoge1xuICAgIFwibm9ybWFsXCIgOiBbIHtcbiAgICAgIFwiY29kZVwiIDogXCJBRURcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiQVVEXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAyXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIkJSTFwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogMlxuICAgIH0sIHtcbiAgICAgIFwiY29kZVwiIDogXCJDQURcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiQ05ZXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAyXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIkhLRFwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogMlxuICAgIH0sIHtcbiAgICAgIFwiY29kZVwiIDogXCJJTlJcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiSlBZXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAwXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIkpPRFwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogM1xuICAgIH0sIHtcbiAgICAgIFwiY29kZVwiIDogXCJSVUJcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiU0dEXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAyXG4gICAgfSwge1xuICAgICAgXCJjb2RlXCIgOiBcIlpBUlwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogMlxuICAgIH0gXSxcbiAgICBcInBvcHVsYXJcIiA6IFsge1xuICAgICAgXCJjb2RlXCIgOiBcIkVVUlwiLFxuICAgICAgXCJkZWNpbWFsc1wiIDogMlxuICAgIH0sIHtcbiAgICAgIFwiY29kZVwiIDogXCJHQlBcIixcbiAgICAgIFwiZGVjaW1hbHNcIiA6IDJcbiAgICB9LCB7XG4gICAgICBcImNvZGVcIiA6IFwiVVNEXCIsXG4gICAgICBcImRlY2ltYWxzXCIgOiAyXG4gICAgfSBdXG4gIH1cbn1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJEZXNjcmlwdGlvbiBvZiBlcnJvclwiXG59XG4gICAgICAgICAgICB9LFxuICAgIF1cbn0sXG5dXG4pO1xuXG5cbiJdfQ==