import { createMocks } from '@backbase/foundation-ang/data-http';
export const PaymentOptionsHttpServiceGetPaymentOptionsByPaymentTypeMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/payment-options/{paymentType}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "paymentType": "US_FOREIGN_WIRE",
                    "canEditCounterparty": true,
                    "paymentOptions": [{
                            "instructionPriority": "NORM",
                            "transferFee": {
                                "amount": "15.29",
                                "currencyCode": "USD"
                            },
                            "chargeBearer": ["OUR", "SHA"],
                            "executionTimeFrame": {
                                "unit": "BUSINESS_DAY",
                                "max": 1
                            },
                            "cutOffTime": "16:00"
                        }, {
                            "instructionPriority": "HIGH",
                            "transferFee": {
                                "amount": "20.00",
                                "currencyCode": "USD"
                            },
                            "chargeBearer": ["OUR", "SHA"],
                            "executionTimeFrame": {
                                "unit": "HOUR",
                                "min": 1,
                                "max": 2
                            },
                            "cutOffTime": "16:00"
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const PaymentOptionsHttpServicePostPaymentOptionsMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/payment-options",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "options": [{
                            "paymentType": "US_FOREIGN_WIRE",
                            "paymentOptions": [{
                                    "instructionPriority": "NORM",
                                    "transferFee": {
                                        "amount": "15.29",
                                        "currencyCode": "USD"
                                    },
                                    "chargeBearer": ["OUR", "SHA"],
                                    "executionTimeFrame": {
                                        "unit": "BUSINESS_DAY",
                                        "max": 1
                                    },
                                    "cutOffTime": "16:00"
                                }, {
                                    "instructionPriority": "HIGH",
                                    "transferFee": {
                                        "amount": "20.00",
                                        "currencyCode": "USD"
                                    },
                                    "chargeBearer": ["OUR", "SHA"],
                                    "executionTimeFrame": {
                                        "unit": "HOUR",
                                        "min": 1,
                                        "max": 2
                                    },
                                    "cutOffTime": "16:00"
                                }]
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    }]);
export const PaymentOptionsHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/payment-options/{paymentType}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "paymentType": "US_FOREIGN_WIRE",
                    "canEditCounterparty": true,
                    "paymentOptions": [{
                            "instructionPriority": "NORM",
                            "transferFee": {
                                "amount": "15.29",
                                "currencyCode": "USD"
                            },
                            "chargeBearer": ["OUR", "SHA"],
                            "executionTimeFrame": {
                                "unit": "BUSINESS_DAY",
                                "max": 1
                            },
                            "cutOffTime": "16:00"
                        }, {
                            "instructionPriority": "HIGH",
                            "transferFee": {
                                "amount": "20.00",
                                "currencyCode": "USD"
                            },
                            "chargeBearer": ["OUR", "SHA"],
                            "executionTimeFrame": {
                                "unit": "HOUR",
                                "min": 1,
                                "max": 2
                            },
                            "cutOffTime": "16:00"
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/payment-options",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "options": [{
                            "paymentType": "US_FOREIGN_WIRE",
                            "paymentOptions": [{
                                    "instructionPriority": "NORM",
                                    "transferFee": {
                                        "amount": "15.29",
                                        "currencyCode": "USD"
                                    },
                                    "chargeBearer": ["OUR", "SHA"],
                                    "executionTimeFrame": {
                                        "unit": "BUSINESS_DAY",
                                        "max": 1
                                    },
                                    "cutOffTime": "16:00"
                                }, {
                                    "instructionPriority": "HIGH",
                                    "transferFee": {
                                        "amount": "20.00",
                                        "currencyCode": "USD"
                                    },
                                    "chargeBearer": ["OUR", "SHA"],
                                    "executionTimeFrame": {
                                        "unit": "HOUR",
                                        "min": 1,
                                        "max": 2
                                    },
                                    "cutOffTime": "16:00"
                                }]
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,