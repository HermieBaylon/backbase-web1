{"version":3,"file":"backbase-actions-mocks-provider-ang.umd.js","sources":["../../../../libs/actions-mocks-provider-ang/src/error-responses.ts","../../../../libs/actions-mocks-provider-ang/src/helpers.ts","../../../../libs/actions-mocks-provider-ang/src/actions-interceptor.ts","../../../../libs/actions-mocks-provider-ang/backbase-actions-mocks-provider-ang.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\n\nexport const unhandledError = new HttpErrorResponse({\n  status: 500,\n  statusText: 'Unhandled Exception',\n});\n","import { ActionParent, Action } from '@backbase/data-ang/actions';\n\nexport const generateId = () => Math.random().toString(16).slice(2);\n\nexport const actionItemsToResponse = (items: ActionParent[]): Action[] =>\n  ['notification', 'email', 'sms'].map(type => ({\n    type,\n    enabled: items.findIndex(item => item.type === type) !== -1,\n  }));\n","import {\n  HTTP_INTERCEPTORS,\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable, Provider } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay, map, tap } from 'rxjs/operators';\nimport { unhandledError } from './error-responses';\nimport { actionItemsToResponse, generateId } from './helpers';\n\nexport const ACCOUNT_IDS_ERRORS: { [key: string]: HttpErrorResponse } = {\n  // 2nd account from top\n  '1cdb2224-8926-4b4d-a99f-1c9dfbbb4692': unhandledError,\n};\n\n@Injectable()\nexport class ActionsInterceptor implements HttpInterceptor {\n  private readonly actionsGetErrorCode = parseInt(localStorage.getItem('actionsGetErrorCode') || '', 10);\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (localStorage.getItem('enableMocks') !== 'true') {\n      return next.handle(req);\n    }\n\n    // empty response in mocks data module causes error\n    // PUT for /action-recipes, excluding /action-recipes/batch\n    if (req.url.match(/\\/action-recipes\\/(?!batch).*$/) && req.method === 'PUT') {\n      const response = new HttpResponse({\n        status: 202,\n      });\n\n      return of(response).pipe(\n        delay(500),\n        tap(() => console.log('CUSTOM INTERCEPTOR:', req, response)),\n      );\n    }\n\n    if (req.url.match(/\\/action-recipes\\/batch$/) && req.method === 'PUT') {\n      return next.handle(req).pipe(\n        map((event: HttpEvent<any>) => {\n          if (event instanceof HttpResponse) {\n            if (!req.body || !req.body.actionRecipes) return event;\n\n            const recipe = req.body.actionRecipes[0];\n\n            if (ACCOUNT_IDS_ERRORS[recipe.arrangementId]) {\n              const errorResponse = ACCOUNT_IDS_ERRORS[recipe.arrangementId];\n\n              console.log('[ACTIONS INTERCEPTOR]', req, errorResponse);\n              throw errorResponse;\n            }\n\n            const response = event.clone({\n              body: {\n                actionRecipes: [\n                  {\n                    id: generateId(),\n                    ...recipe,\n                    actions: actionItemsToResponse(recipe.actions),\n                    recurrence: {\n                      daysOfWeek: recipe?.recurrence?.daysOfWeek,\n                      hoursOfDay: recipe?.recurrence?.hoursOfDay\n                        ?.map((hour: string) => Number(hour))\n                        .sort((a: number, b: number) => a - b),\n                    },\n                  },\n                ],\n              },\n            });\n\n            console.log('[ACTIONS INTERCEPTOR]', req, response);\n\n            return response;\n          }\n\n          return event;\n        }),\n      );\n    }\n\n    if (req.url.match(/\\/action-recipes$/) && req.method === 'GET') {\n      return next.handle(req).pipe(\n        map((event: HttpEvent<any>) => {\n          if (this.actionsGetErrorCode) {\n            const errorResponse = new HttpErrorResponse({\n              status: this.actionsGetErrorCode,\n            });\n\n            console.log('[ACTIONS INTERCEPTOR]', req, errorResponse);\n            throw errorResponse;\n          }\n\n          return event;\n        }),\n      );\n    }\n\n    return next.handle(req);\n  }\n}\n\nexport const ActionsMocksProvider: Provider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ActionsInterceptor,\n  multi: true,\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {ActionsInterceptor as Éµa} from './src/actions-interceptor';"],"names":["HttpErrorResponse","HttpResponse","of","delay","tap","map","Injectable","HTTP_INTERCEPTORS"],"mappings":"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"}