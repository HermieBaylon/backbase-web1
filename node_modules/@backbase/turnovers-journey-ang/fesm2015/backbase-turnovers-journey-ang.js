import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { InjectionToken, Injectable, Optional, Inject, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import * as i1 from '@angular/router';
import { provideRoutes, RouterModule } from '@angular/router';
import * as i1$1 from '@backbase/foundation-ang/core';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import * as i4 from '@backbase/product-summary-account-selector-widget-ang';
import { ProductSummaryAccountSelectorWidgetModule } from '@backbase/product-summary-account-selector-widget-ang';
import * as i5 from '@backbase/turnovers-widget-ang';
import { TurnoversWidgetModule } from '@backbase/turnovers-widget-ang';
import * as i3 from '@backbase/ui-ang/header';
import { HeaderModule } from '@backbase/ui-ang/header';

// eslint-disable-next-line
const TurnoversJourneyConfigurationToken = new InjectionToken('TurnoversJourneyConfiguration injection token');
const configDefaults = {
    showForecast: true,
};
class TurnoversJourneyService {
    constructor(config) {
        config = config || {};
        this._config = Object.assign(Object.assign({}, configDefaults), config);
    }
    get defaults() {
        return configDefaults;
    }
    get showForecast() {
        return this._config.showForecast;
    }
}
TurnoversJourneyService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyService, deps: [{ token: TurnoversJourneyConfigurationToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
TurnoversJourneyService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TurnoversJourneyConfigurationToken]
                }] }]; } });

class TurnoversJourneyComponent {
}
TurnoversJourneyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TurnoversJourneyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TurnoversJourneyComponent, selector: "bb-turnovers-journey", providers: [TurnoversJourneyService], ngImport: i0, template: '<router-outlet></router-outlet>', isInline: true, directives: [{ type: i1.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-turnovers-journey',
                    template: '<router-outlet></router-outlet>',
                    providers: [TurnoversJourneyService],
                }]
        }] });

// TODO: remove utility classes
class TurnoversViewComponent {
    constructor(router, route, config) {
        this.router = router;
        this.route = route;
        this.config = config;
    }
    onItemSelect(selectedAccount) {
        this.router.navigate(['.', { selectedAccount }], { relativeTo: this.route });
    }
}
TurnoversViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversViewComponent, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }, { token: TurnoversJourneyService }], target: i0.ɵɵFactoryTarget.Component });
TurnoversViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TurnoversViewComponent, selector: "bb-turnovers-view", ngImport: i0, template: `
    <bb-header-ui
      headingType="h1"
      headingClasses="bb-heading-widget__heading px-0 pb-5"
      heading="Cash Flow"
      i18n-heading="Cash flow chart|Heading for Turnovers journey@@turnovers.journey.heading.text"
    ></bb-header-ui>
    <div class="bb-block--xl">
      <bb-product-summary-account-selector-widget
        (selectedAccount)="onItemSelect($event)"
      ></bb-product-summary-account-selector-widget>
    </div>
    <div class="bb-card card-body">
      <bb-turnovers-widget [forecast]="config.showForecast"></bb-turnovers-widget>
    </div>
  `, isInline: true, components: [{ type: i3.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4.ProductSummaryAccountSelectorWidgetComponent, selector: "bb-product-summary-account-selector-widget", inputs: ["event.refreshAccountsList", "multiple", "filterItems", "showAccountState"], outputs: ["selectedAccount", "selectedKind"] }, { type: i5.TurnoversWidgetComponent, selector: "bb-turnovers-widget", inputs: ["forecast"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-turnovers-view',
                    template: `
    <bb-header-ui
      headingType="h1"
      headingClasses="bb-heading-widget__heading px-0 pb-5"
      heading="Cash Flow"
      i18n-heading="Cash flow chart|Heading for Turnovers journey@@turnovers.journey.heading.text"
    ></bb-header-ui>
    <div class="bb-block--xl">
      <bb-product-summary-account-selector-widget
        (selectedAccount)="onItemSelect($event)"
      ></bb-product-summary-account-selector-widget>
    </div>
    <div class="bb-card card-body">
      <bb-turnovers-widget [forecast]="config.showForecast"></bb-turnovers-widget>
    </div>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i1.ActivatedRoute }, { type: TurnoversJourneyService }]; } });

const defaultRoute = {
    path: '',
    component: TurnoversJourneyComponent,
    children: [
        {
            path: '',
            component: TurnoversViewComponent,
            data: { title: 'Turnovers' },
        },
    ],
};
class TurnoversJourneyModule {
    static forRoot(data = { route: defaultRoute }) {
        return {
            ngModule: TurnoversJourneyModule,
            providers: [provideRoutes([data.route])],
        };
    }
}
TurnoversJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TurnoversJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyModule, declarations: [TurnoversJourneyComponent, TurnoversViewComponent], imports: [i1$1.BackbaseCoreModule, CommonModule,
        HeaderModule,
        ProductSummaryAccountSelectorWidgetModule,
        RouterModule,
        TurnoversWidgetModule] });
TurnoversJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyModule, imports: [[
            BackbaseCoreModule.withConfig({
                classMap: { TurnoversJourneyComponent },
            }),
            CommonModule,
            HeaderModule,
            ProductSummaryAccountSelectorWidgetModule,
            RouterModule,
            TurnoversWidgetModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TurnoversJourneyComponent, TurnoversViewComponent],
                    imports: [
                        BackbaseCoreModule.withConfig({
                            classMap: { TurnoversJourneyComponent },
                        }),
                        CommonModule,
                        HeaderModule,
                        ProductSummaryAccountSelectorWidgetModule,
                        RouterModule,
                        TurnoversWidgetModule,
                    ],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TurnoversJourneyComponent, TurnoversJourneyConfigurationToken, TurnoversJourneyModule, TurnoversJourneyService, TurnoversViewComponent };
//# sourceMappingURL=backbase-turnovers-journey-ang.js.map
