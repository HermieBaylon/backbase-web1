import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';
import * as i0 from "@angular/core";
// eslint-disable-next-line
export const TurnoversJourneyConfigurationToken = new InjectionToken('TurnoversJourneyConfiguration injection token');
const configDefaults = {
    showForecast: true,
};
export class TurnoversJourneyService {
    constructor(config) {
        config = config || {};
        this._config = Object.assign(Object.assign({}, configDefaults), config);
    }
    get defaults() {
        return configDefaults;
    }
    get showForecast() {
        return this._config.showForecast;
    }
}
TurnoversJourneyService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyService, deps: [{ token: TurnoversJourneyConfigurationToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
TurnoversJourneyService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TurnoversJourneyService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TurnoversJourneyConfigurationToken]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHVybm92ZXJzLWpvdXJuZXktY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL3R1cm5vdmVycy1qb3VybmV5L3NyYy90dXJub3ZlcnMtam91cm5leS1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVM3RSwyQkFBMkI7QUFDM0IsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQUcsSUFBSSxjQUFjLENBQ2xFLCtDQUErQyxDQUNoRCxDQUFDO0FBRUYsTUFBTSxjQUFjLEdBQWtDO0lBQ3BELFlBQVksRUFBRSxJQUFJO0NBQ25CLENBQUM7QUFHRixNQUFNLE9BQU8sdUJBQXVCO0lBR2xDLFlBR0UsTUFBcUM7UUFFckMsTUFBTSxHQUFHLE1BQU0sSUFBSSxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLE9BQU8sbUNBQVEsY0FBYyxHQUFLLE1BQU0sQ0FBRSxDQUFDO0lBQ2xELENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDVixPQUFPLGNBQWMsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztJQUNuQyxDQUFDOztxSEFsQlUsdUJBQXVCLGtCQUt4QixrQ0FBa0M7eUhBTGpDLHVCQUF1Qjs0RkFBdkIsdUJBQXVCO2tCQURuQyxVQUFVOzswQkFLTixRQUFROzswQkFDUixNQUFNOzJCQUFDLGtDQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSwgSW5qZWN0aW9uVG9rZW4sIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHVybm92ZXJzSm91cm5leUNvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogV2V0aGVyIHRvIHNob3cgdGhlIGZvcmVjYXN0ZWQgZGF0YSBvciBub3RcbiAgICovXG4gIHNob3dGb3JlY2FzdDogYm9vbGVhbjtcbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5leHBvcnQgY29uc3QgVHVybm92ZXJzSm91cm5leUNvbmZpZ3VyYXRpb25Ub2tlbiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxUdXJub3ZlcnNKb3VybmV5Q29uZmlndXJhdGlvbj4oXG4gICdUdXJub3ZlcnNKb3VybmV5Q29uZmlndXJhdGlvbiBpbmplY3Rpb24gdG9rZW4nLFxuKTtcblxuY29uc3QgY29uZmlnRGVmYXVsdHM6IFR1cm5vdmVyc0pvdXJuZXlDb25maWd1cmF0aW9uID0ge1xuICBzaG93Rm9yZWNhc3Q6IHRydWUsXG59O1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVHVybm92ZXJzSm91cm5leVNlcnZpY2Uge1xuICBwcml2YXRlIF9jb25maWc6IFR1cm5vdmVyc0pvdXJuZXlDb25maWd1cmF0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBPcHRpb25hbCgpXG4gICAgQEluamVjdChUdXJub3ZlcnNKb3VybmV5Q29uZmlndXJhdGlvblRva2VuKVxuICAgIGNvbmZpZzogVHVybm92ZXJzSm91cm5leUNvbmZpZ3VyYXRpb24sXG4gICkge1xuICAgIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICB0aGlzLl9jb25maWcgPSB7IC4uLmNvbmZpZ0RlZmF1bHRzLCAuLi5jb25maWcgfTtcbiAgfVxuXG4gIGdldCBkZWZhdWx0cygpOiBUdXJub3ZlcnNKb3VybmV5Q29uZmlndXJhdGlvbiB7XG4gICAgcmV0dXJuIGNvbmZpZ0RlZmF1bHRzO1xuICB9XG5cbiAgZ2V0IHNob3dGb3JlY2FzdCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fY29uZmlnLnNob3dGb3JlY2FzdDtcbiAgfVxufVxuIl19