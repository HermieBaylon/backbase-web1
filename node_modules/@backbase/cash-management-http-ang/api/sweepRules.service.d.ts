import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CreateSweepRuleRequest } from '../model/models';
import { SweepRuleGet } from '../model/models';
import { SweepRuleResponse } from '../model/models';
import { SweepRulesGet } from '../model/models';
import { CashManagementConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetSweepRuleBySweepIdRequestParams {
    ["sweepId"]: string;
}
export interface GetSweeprulesRequestParams {
    ["query"]?: string;
    ["from"]?: number;
    ["cursor"]?: string;
    ["size"]?: number;
}
export interface PostCreateSweepRuleRequestParams {
    ["createSweepRuleRequest"]?: CreateSweepRuleRequest;
}
export interface PostSweepRuleActivationBySweepIdRequestParams {
    ["sweepId"]: string;
}
export interface PostSweepRuleCancelingBySweepIdRequestParams {
    ["sweepId"]: string;
}
export interface PostSweepRulePausingBySweepIdRequestParams {
    ["sweepId"]: string;
}
export declare class SweepRulesHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: CashManagementConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: CashManagementConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getSweepRuleBySweepId(requestParameters: GetSweepRuleBySweepIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<SweepRuleGet>;
    getSweepRuleBySweepId(requestParameters: GetSweepRuleBySweepIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<SweepRuleGet>>;
    getSweepRuleBySweepId(requestParameters: GetSweepRuleBySweepIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<SweepRuleGet>>;
    getSweepRuleBySweepIdUrl(requestParameters: GetSweepRuleBySweepIdRequestParams): string;
    getSweeprules(requestParameters: GetSweeprulesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<SweepRulesGet>;
    getSweeprules(requestParameters: GetSweeprulesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<SweepRulesGet>>;
    getSweeprules(requestParameters: GetSweeprulesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<SweepRulesGet>>;
    getSweeprulesUrl(requestParameters: GetSweeprulesRequestParams): string;
    postCreateSweepRule(requestParameters: PostCreateSweepRuleRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<SweepRuleResponse>;
    postCreateSweepRule(requestParameters: PostCreateSweepRuleRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<SweepRuleResponse>>;
    postCreateSweepRule(requestParameters: PostCreateSweepRuleRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<SweepRuleResponse>>;
    postCreateSweepRuleUrl(requestParameters: PostCreateSweepRuleRequestParams): string;
    postSweepRuleActivationBySweepId(requestParameters: PostSweepRuleActivationBySweepIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<SweepRuleGet>;
    postSweepRuleActivationBySweepId(requestParameters: PostSweepRuleActivationBySweepIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<SweepRuleGet>>;
    postSweepRuleActivationBySweepId(requestParameters: PostSweepRuleActivationBySweepIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<SweepRuleGet>>;
    postSweepRuleActivationBySweepIdUrl(requestParameters: PostSweepRuleActivationBySweepIdRequestParams): string;
    postSweepRuleCancelingBySweepId(requestParameters: PostSweepRuleCancelingBySweepIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<SweepRuleGet>;
    postSweepRuleCancelingBySweepId(requestParameters: PostSweepRuleCancelingBySweepIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<SweepRuleGet>>;
    postSweepRuleCancelingBySweepId(requestParameters: PostSweepRuleCancelingBySweepIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<SweepRuleGet>>;
    postSweepRuleCancelingBySweepIdUrl(requestParameters: PostSweepRuleCancelingBySweepIdRequestParams): string;
    postSweepRulePausingBySweepId(requestParameters: PostSweepRulePausingBySweepIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<SweepRuleGet>;
    postSweepRulePausingBySweepId(requestParameters: PostSweepRulePausingBySweepIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<SweepRuleGet>>;
    postSweepRulePausingBySweepId(requestParameters: PostSweepRulePausingBySweepIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<SweepRuleGet>>;
    postSweepRulePausingBySweepIdUrl(requestParameters: PostSweepRulePausingBySweepIdRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<SweepRulesHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SweepRulesHttpService>;
}
