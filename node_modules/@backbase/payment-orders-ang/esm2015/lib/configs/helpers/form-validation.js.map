{"version":3,"file":"form-validation.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/configs/helpers/form-validation.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,sBAAsB,EAAE,MAAM,2BAA2B,CAAC;AACnE,OAAO,EACL,kBAAkB,EAClB,YAAY,EACZ,iBAAiB,GAClB,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,MAAM,+BAA+B,CAAC;AAE5D,MAAM,UAAU,oBAAoB,CAAC,YAAsB,EAAE;IAC3D,OAAO,CAAC,OAAwB,EAA2B,EAAE;;QAC3D,MAAM,UAAU,GAAG,MAAA,OAAO,CAAC,MAAM,0CAAE,MAAM,CAAC;QAC1C,MAAM,mBAAmB,GAAG,SAAS,CAAC,MAAM;YAC1C,CAAC,CAAC,SAAS;YACX,CAAC,CAAC,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,GAAG,CAAC,YAAY,CAAC,mBAAmB,CAAC,0CAAE,KAAK,CAAC;QAC7D,MAAM,cAAc,GAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,GAAG,CAAC;YACrC,iBAAiB,CAAC,YAAY;YAC9B,kBAAkB,CAAC,YAAY;YAC/B,kBAAkB,CAAC,aAAa;YAChC,kBAAkB,CAAC,OAAO;SAC3B,CAAC,CAAC;QACH,IAAI,CAAC,CAAA,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,MAAM,CAAA;YAAE,OAAO,sBAAsB,CAAC;QAChE,MAAM,aAAa,GAAG,sBAAsB,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,aAAa,EAAE;YACjB,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;SAClD;aAAM;YACL,MAAM,QAAQ,GAAG,CAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,KAAK,KAAI,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACxE,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,QAAQ,OAAO,EAAE,GAAG,CAAC,CAAC;YACpD,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAC3C,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC,EAAE,kBAAkB,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;SACtD;IACH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { isValidIBANFormControl } from '@backbase/ui-ang/iban-lib';\nimport {\n  CounterPartyFields,\n  HiddenFields,\n  PaymentBaseFields,\n} from '../models/form-item-names.model';\nimport { stripSpaces } from '../../ui/helpers/type-helpers';\n\nexport function ibanCountryValidator(countries: string[] = []): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const parentForm = control.parent?.parent;\n    const sanctionedCountries = countries.length\n      ? countries\n      : parentForm?.get(HiddenFields.sanctionedCountries)?.value;\n    const countryControl = parentForm?.get([\n      PaymentBaseFields.counterparty,\n      CounterPartyFields.creditorBank,\n      CounterPartyFields.postalAddress,\n      CounterPartyFields.country,\n    ]);\n    if (!sanctionedCountries?.length) return isValidIBANFormControl;\n    const isInvalidIban = isValidIBANFormControl(control);\n    if (isInvalidIban) {\n      return { invalidIban: { value: control.value } };\n    } else {\n      const regexStr = countryControl?.value || sanctionedCountries.join('|');\n      const regex = new RegExp(`^(${regexStr})\\\\w+`, 'i');\n      return regex.test(stripSpaces(control.value))\n        ? null\n        : { invalidIbanCountry: { value: control.value } };\n    }\n  };\n}\n"]}