{"version":3,"file":"form-item-names.model.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/configs/models/form-item-names.model.ts"],"names":[],"mappings":"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","sourcesContent":["export enum PaymentBaseFields {\n  initiator = 'initiator',\n  counterparty = 'counterparty',\n  remittanceInfo = 'remittanceInfo',\n  schedule = 'schedule',\n  additions = 'additions',\n}\n\nexport enum PaymentOptionFields {\n  selectPaymentOption = 'selectPaymentOption',\n  paymentCost = 'paymentCost',\n  chargeBearer = 'chargeBearer',\n  chargeBearerOptions = 'chargeBearerOptions',\n  transferFee = 'transferFee',\n  exchangeRate = 'exchangeRate',\n  inputFormFromSettings = 'inputFormFromSettings',\n  paymentTypeName = 'paymentTypeName',\n}\n\nexport enum InitiatorFields {\n  initiatorAccountGroup = 'debitorAccount',\n  id = 'id',\n  name = 'name',\n  alias = 'alias',\n  accountNumber = 'accountNumber',\n  accountType = 'accountType',\n  currency = 'currency',\n}\n\nexport enum AccountField {\n  id = 'id',\n  name = 'name',\n  accountNumber = 'accountNumber',\n  accountType = 'accountType',\n  currency = 'currency',\n  bankBranchCode = 'bankBranchCode',\n  balance = 'balance',\n  number = 'number',\n}\n\nexport enum CounterPartyFields {\n  counterPartyAccountGroup = 'creditorAccount',\n  standardEntryClass = 'entryClass',\n  creditor = 'creditor',\n  creditorBank = 'creditorBank',\n  bankName = 'bankName',\n  bic = 'bic',\n  bankBranchCode = 'bankBranchCode',\n  correspondentBank = 'correspondentBank',\n  intermediaryBank = 'intermediaryBank',\n  schemeName = 'schemeName',\n  recipientId = 'recipientId',\n  accountType = 'accountType',\n  accountNumber = 'accountNumber',\n  name = 'name',\n  alias = 'alias',\n  id = 'id',\n  postalAddress = 'postalAddress',\n  messageToBank = 'messageToBank',\n  remittanceInformation = 'remittanceInformation',\n  targetCurrency = 'targetCurrency',\n  endToEndIdentification = 'endToEndIdentification',\n  mandateIdentifier = 'mandateIdentifier',\n  role = 'role',\n  selectedContact = 'selectedContact',\n  counterpartyAccountAdditions = 'counterpartyAccountAdditions',\n  additions = 'additions',\n  country = 'country',\n  saveNewContact = 'saveNewContact',\n  enableAdditionalBankDetails = 'enableAdditionalBankDetails',\n}\n\nexport enum PaymentTemplateFields {\n  templateName = 'templateName',\n  paymentTemplateId = 'paymentTemplateId',\n}\n\nexport enum RemittanceInfoFields {\n  amountCurrencyGroup = 'amountGroup',\n  amount = 'amount',\n  currency = 'currency',\n  urgent = 'urgent',\n  paymentReference = 'paymentReference',\n  description = 'description',\n  amountOptions = 'amountOptions',\n  amountOptionLabel = 'amountOptionLabel',\n  purposeOfPayment = 'purposeOfPayment',\n}\n\nexport enum ScheduleFields {\n  scheduleGroup = 'scheduleGroup',\n  frequency = 'frequency',\n  endType = 'endType',\n  every = 'every',\n  on = 'on',\n  startDate = 'startDate',\n  endDate = 'endDate',\n  repeat = 'repeat',\n  frequencySwitch = 'frequencySwitch',\n  scheduleInfo = 'scheduleInfo',\n}\n\nexport enum HiddenFields {\n  isManualEdit = 'isManualEdit',\n  isClosedPayment = 'isClosedPayment',\n  enableBeneficiary = 'enableBeneficiary',\n  beneficiaryAccountName = 'beneficiaryAccountName',\n  showSaveNewContact = 'showSaveNewContact',\n  selectedBeneficiary = 'selectedBeneficiary',\n  hideBeneficiaryFields = 'hideBeneficiaryFields',\n  defaultCountry = 'defaultCountry',\n  isPaymentCopy = 'isPaymentCopy',\n  isDebitPayment = 'isDebitPayment',\n  defaultBankCodeSetting = 'defaultBankCodeSetting',\n  sanctionedCountries = 'sanctionedCountries',\n}\n\nexport enum PaymentFormFieldHooks {\n  onInit = 'onInit',\n  onDestroy = 'onDestroy',\n}\n\nexport enum PaymentHooks {\n  onInit = 'onInit',\n  onDestroy = 'onDestroy',\n  onSave = 'onSave',\n  onSubmit = 'onSubmit',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum MultiPaymentHooks {\n  onClick = 'onClick',\n  onBlur = 'onBlur',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum StepperAction {\n  NEXT = 'next',\n  BACK = 'back',\n  SUBMIT = 'submit',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum MultiPaymentFormCardFields {\n  counterpartyName = 'counterpartyName',\n  amount = 'amount',\n  description = 'description',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum MultiPaymentEvents {\n  paymentBlur = 'payment-blur',\n  deletePayment = 'delete-payment',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum multiPaymnetValidationRules {\n  batchNameIsMandatory = 'batchInfo.name',\n  requestedExecutionDateIsMandatory = 'batchInfo.requestedExecutionDate',\n  requestedExecutionDateIsValid = 'batchInfo.requestedExecutionDate',\n  batchhasatleastonecredittransaction = 'counterparty.debitorAccount',\n  totalcredittransactionscountisequaltointendedtransactionscount = 'counterparty.debitorAccount',\n  totalcreditamountisequaltototalintendedcreditamount = 'counterparty.debitorAccount',\n  originatoraccountnumberismandatory = 'initiator',\n  userhasaccesstooriginatoraccount = 'initiator',\n  originatoraccountisallowedtodebit = 'initiator',\n  counterpartyaccountnumberismandatory = 'counterpartyAccountNumber',\n  userhasaccesstocounterpartyaccount = 'counterpartyAccountNumber',\n  counterpartyaccountnumberisnotsameasoriginatoraccount = 'counterpartyAccountNumber',\n  counterpartyaccountisallowedtocredit = 'counterpartyAccountNumber',\n  batchpaymentiscredit = 'counterpartyAccountNumber',\n  batchpaymentamountisgreaterthanzero = 'amount',\n  batchpaymentcurrencyisvalid = 'amount.currency',\n}\n"]}