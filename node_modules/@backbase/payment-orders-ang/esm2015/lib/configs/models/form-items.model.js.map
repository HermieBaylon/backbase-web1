{"version":3,"file":"form-items.model.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/configs/models/form-items.model.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AbstractControl,\n  AsyncValidatorFn,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport {\n  CounterPartyFields,\n  InitiatorFields,\n  MultiPaymentFormCardFields,\n  MultiPaymentHooks,\n  PaymentBaseFields,\n  PaymentFormFieldHooks,\n  PaymentHooks,\n  RemittanceInfoFields,\n  StepperAction,\n} from './form-item-names.model';\nimport { Subject } from 'rxjs';\nimport { PurposeOfPayment } from '@backbase/data-ang/payment-order-options';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { ScheduleItem } from '../../ui/components/schedule/schedule.component';\nimport {\n  Address,\n  ContactItem,\n  FormSeparatorConfig,\n  InternalAccountFormItem,\n} from '../../ui/models/types';\n\nexport enum AccessContextScope {\n  USER = 'USER',\n  SA = 'SA',\n  LE = 'LE',\n}\n\nexport enum PaymentComponents {\n  text = 'text',\n  date = 'date',\n  phone = 'phone',\n\n  number = 'number',\n  textarea = 'textarea',\n  address = 'address',\n  select = 'select',\n  radio = 'radio',\n  checkbox = 'checkbox',\n  debitAccountSelector = 'debitAccountSelector',\n  countrySelector = 'countrySelector',\n  sanctionedCountrySelector = 'sanctionedCountrySelector',\n  beneficiarySelector = 'beneficiarySelector',\n  selectPaymentOption = 'selectPaymentOption',\n  paymentCost = 'paymentCost',\n  chargeBearer = 'chargeBearer',\n  schedule = 'schedule',\n  amount = 'amount',\n  sanctionedCurrencyAmount = 'sanctionedCurrencyAmount',\n  switch = 'switch',\n  internalAccountSelector = 'internalAccountSelector',\n  compactAmount = 'compactAmount',\n  scheduleHeader = 'scheduleHeader',\n  buttonGroup = 'buttonGroup',\n  multiPaymentCard = 'multiPaymentCard',\n  creditDebitSelector = 'creditDebitSelector',\n  internalAmountOptions = 'internalAmountOptions',\n  header = 'header',\n  purposeOfPayment = 'purposeOfPayment',\n  alert = 'alert',\n  scheduleSwitch = 'scheduleSwitch',\n  beneficiaryGroupHeader = 'beneficiaryGroupHeader',\n  multiPaymentAccountSelector = 'multiPaymentAccountSelector',\n  contactSelector = 'contactSelector',\n  accountSelector = 'accountSelector',\n}\n\nexport interface BaseObject<T> {\n  [key: string]: T;\n}\n\nexport interface Hideable {\n  hidden?: boolean;\n}\n\nexport interface Extendable {\n  parent?: string;\n}\n\nexport enum AddressType {\n  'beneficiary' = 'beneficiary',\n  'beneficiary bank' = 'beneficiary bank',\n  'correspondent bank' = 'correspondent bank',\n  'intermediary bank' = 'intermediary bank',\n}\n\nexport type AddressTypeValue = keyof typeof AddressType;\n\nexport interface PaymentFormGroup extends Hideable, Extendable {\n  fields: Array<PaymentFormFieldConfig | PaymentFormGroup>;\n  name: string;\n  title?: string;\n  subTitle?: string;\n  collapsible?: boolean;\n  cssClasses?: Array<string>;\n  options?: PaymentFormFieldOptions;\n  separator?: FormSeparatorConfig;\n  hasDynamicTitle?: boolean;\n  clearOptions?: ClearOptions;\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport interface MultipleFormGroup extends PaymentFormGroup {\n  stepName?: string;\n}\n\nexport interface OmniPaymentConfigItem {\n  paymentType: PaymentTypeConfig;\n  businessFunction: string;\n  classId?: string;\n  options?: OmniPaymentWidgetOptions;\n}\n\nexport enum TemplateModeType {\n  CREATE = 'CREATE',\n  EDIT = 'EDIT',\n}\n\nexport enum EditModeTypes {\n  EDIT_TEMPLATE = 'EDIT_TEMPLATE',\n  EDIT_PAYMENT = 'EDIT_PAYMENT',\n}\n\nexport enum PaymentMode {\n  EDIT_PAYMENT = 'EDIT_PAYMENT',\n  CREATE_PAYMENT = 'CREATE_PAYMENT',\n  COPY_PAYMENT = 'COPY_PAYMENT',\n  EDIT_TEMPLATE = 'EDIT_TEMPLATE',\n  CREATE_TEMPLATE = 'CREATE_TEMPLATE',\n}\n\nexport interface InitiatePaymentOptions {\n  enableApprovals?: boolean;\n  defaultScheme?: 'BBAN' | 'IBAN';\n  templateModeType?: TemplateModeType;\n  successEventName?: string;\n  checkClosedPaymentsAccess?: boolean;\n  isDebitPayment?: boolean;\n  reviewScreenType?: ReviewScreens;\n  isModalView?: boolean;\n  isTemplateMode?: boolean;\n  isEditPaymentModal?: boolean;\n  paymentMode?: PaymentMode;\n  isOneOffToRecurrentAllowed?: boolean;\n  isRecurrentToOneOffAllowed?: boolean;\n  defaultCountry?: string;\n  pollInterval?: number;\n  accessContextScope?: AccessContextScope;\n  enablePaymentTemplateSelector?: boolean;\n  enableSavePaymentAsTemplate?: boolean;\n  /**\n   * Hides new payment button if \"false\", displays button otherwise\n   */\n  enableNewPaymentButton?: boolean;\n  isErrorTitleDisplayed?: boolean;\n  pageSize?: number;\n  header?(data: InitiatePaymentHeaderData): string;\n}\n\n/**\n * @deprecated Type has been renamed into `PaymentConfigOptions`\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OmniPaymentWidgetOptions extends InitiatePaymentOptions {}\n\n/**\n * @deprecated Type has been moved to `@backbase/batch-common-ang` and renamed to `ManualBatchOptions`\n * Will be removed in widget collection v3.11.0\n */\nexport interface MultiPaymentWidgetOptions {\n  debounceTime?: number;\n  createTemplates?: boolean;\n  viewTemplates?: boolean;\n  successEventName?: string;\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport interface InternalTransferPaymentTypes\n  extends BaseObject<string | undefined> {\n  currentToSaving?: string;\n  savingToCurrent?: string;\n  currentToCurrent?: string;\n  savingToSaving?: string;\n  cashAdvanceToCurrent?: string;\n  cashAdvanceToSaving?: string;\n  loanAdvanceToCurrent?: string;\n  loanAdvanceToSaving?: string;\n  connectedToOther?: string;\n}\n\nexport interface PaymentTypeConfig {\n  fields: Array<PaymentFormFieldConfig | PaymentFormGroup>;\n  name: string;\n  paymentType: string;\n  description?: string;\n  businessFunction?: string;\n  relatedPaymentTypes?: Array<string>;\n  customFields?: PaymentComponentsMap;\n  options?: PaymentTypeOptions;\n  hooks?: PaymentHooksOptions;\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport interface ManualBatchTypeConfig extends PaymentTypeConfig {\n  resourceName?: string;\n}\n\nexport interface PaymentTypeOptions extends Options {\n  paymentTypes?: InternalTransferCustomPaymentTypes;\n  disabledCombinations?: Array<DisabledCombination>;\n  closedPaymentBusFns?: Array<string>;\n}\n\nexport interface PaymentFormFieldConfig extends Hideable, Extendable {\n  name: string;\n  type: PaymentComponents | string;\n  options: PaymentFormFieldOptions;\n  hooks?: PaymentFormFieldHooksOptions;\n}\n\nexport type PaymentHooksCallbackFn = (params?: PaymentHooksParams) => void;\nexport type FetchPaymentOptionsListenerFn = (\n  form: FormGroup,\n  fetchOptions: Subject<FormGroup>\n) => void;\nexport type PaymentClearGroupCallbackFn = (\n  params?: PaymentClearFormGroupParams\n) => void;\n\nexport type FormFieldHooksCallbackFn = (params: FormFieldHooksParams) => void;\n\nexport interface PaymentClearFormGroupParams {\n  formGroup?: FormGroup;\n  config?: PaymentFormGroup;\n}\n\nexport interface ClearOptions {\n  label?: string;\n  icon?: string;\n  onClear: PaymentClearGroupCallbackFn;\n}\n\nexport interface PaymentHooksParams {\n  doneFn: (success?: boolean) => void;\n  form: FormGroup;\n}\n\nexport interface FormFieldHooksParams {\n  component: any;\n  control: FormControl;\n  group: FormGroup;\n}\n\nexport type PaymentFormFieldHooksOptions = {\n  [key in PaymentFormFieldHooks]?: FormFieldHooksCallbackFn;\n};\n\nexport type PaymentHooksOptions = {\n  [key in PaymentHooks]?: PaymentHooksCallbackFn;\n};\n\nexport interface PaymentFormField {\n  config: PaymentFormFieldConfig;\n  group: FormGroup;\n  options: PaymentFormFieldOptions;\n}\n\nexport interface Options {\n  [key: string]: any;\n}\n\nexport interface HorizontalListItem {\n  value: string;\n  label: string;\n  description?: string;\n}\n\nexport type ActivateFn = (\n  value: any,\n  control?: AbstractControl\n) => Array<string | DependantItem> | undefined;\n\nexport interface ErrorMessage {\n  name: string;\n  message: string;\n}\n\nexport interface CollapseOptions {\n  btnColor?: string;\n  btnSize?: string;\n  hideIcon?: boolean;\n  icon?: string;\n  iconSize?: string;\n  label?: string;\n}\n\nexport interface PaymentFormFieldOptions extends Options {\n  label?: string;\n  placeholder?: string;\n  cssClasses?: Array<string>;\n  validators?: Array<ValidatorFn>;\n  asyncValidators?: Array<AsyncValidatorFn>;\n  validationMessages?: Array<ErrorMessage>;\n  collapseOptions?: CollapseOptions;\n  defaultValue?: any;\n  dependants?: Array<string | DependantItem>;\n  activateDependantsOn?: boolean | string | ActivateFn;\n  mapToField?: PaymentBaseFields | string;\n  isIban?: boolean;\n  isConditionalMandatory?: boolean;\n  helperText?: string;\n  description?: string;\n  productKinds?: Array<ProductKindItem>;\n  fieldsConfig?: MultiPaymentCard;\n  amountOptions?: AmountOptions;\n  connectedAccounts?: boolean;\n  preselect?: boolean;\n  header?: string;\n  maximumNumberOfPayments?: number;\n  validationMessageLabel?: string;\n  contactSchemes?: Array<{ name: ContactScheme; regex?: RegExp }>;\n  mapItems?: (\n    contacts: Array<ContactItem | InternalAccountFormItem>\n  ) => Array<InternalAccountFormItem | ContactItem>;\n  /** @deprecated Will be removed in widget collection v3.11.0, use `contactSchemes` instead*/\n  contactScheme?: ContactScheme[];\n  /** @deprecated Will be removed in widget collection v3.11.0, use `mapItems` instead*/\n  otherFilters?: Array<FilterState>;\n  /** @deprecated Will be removed in widget collection v3.11.0 */\n  choices?: CreditDebitSelector[];\n}\n\nexport enum ContactScheme {\n  accountNumber = 'accountNumber',\n  phoneNumber = 'phoneNumber',\n  email = 'email',\n}\n\n/** @deprecated Will be removed in widget collection v3.11.0 */\nexport interface CreditDebitSelector {\n  type: 'CREDIT' | 'DEBIT';\n  name: string;\n  description: string;\n  addressType?: AddressTypeValue;\n  keepValueOnHidden?: boolean;\n  maxLength?: number;\n}\n\nexport interface AmountOption extends BaseObject<any> {\n  label: string;\n  description?: string;\n  amountApiField?: string;\n  hasCustomAmountInput?: boolean;\n  scheduleFrequency?: Array<Options>;\n  showFrequencySwitch?: boolean;\n}\n\nexport interface AmountOptions {\n  creditCard?: Array<AmountOption>;\n  loan?: Array<AmountOption>;\n  IRA?: Array<AmountOption>;\n  cssClasses?: Array<string>;\n}\n\nexport type MultiPaymentCard = {\n  [key in MultiPaymentFormCardFields]: PaymentFormFieldOptions;\n};\n\nexport interface ProductKindItem {\n  productKind: ProductKinds | string;\n  balance?: { apiField?: AccountBalances | string; label?: string };\n}\n\nexport interface FilterState\n  extends BaseObject<Array<string | number | boolean> | string> {\n  key: string;\n  value: Array<string | number | boolean>;\n}\n\nexport interface DisabledCombination {\n  from: ProductKinds;\n  to: ProductKinds;\n}\n\nexport interface InternalTransferCustomPaymentTypes {\n  internal?: string;\n  external?: string;\n}\n\nexport interface PaymentComponentsMap {\n  [key: string]: any;\n}\n\nexport interface AmountData extends PaymentFormFieldOptions {\n  currencies: Array<string>;\n}\n\nexport type PaymentFormItem = (PaymentFormFieldConfig | PaymentFormGroup) & {\n  parent?: string;\n};\n\nexport interface PaymentDetails extends Options {\n  [PaymentBaseFields.initiator]: InitiatorDetails;\n  [PaymentBaseFields.counterparty]: CounterPartyDetails;\n  [PaymentBaseFields.schedule]: ScheduleItem;\n  [PaymentBaseFields.remittanceInfo]: RemittanceDetails;\n  [PaymentBaseFields.additions]?: any;\n  paymentOption?: string;\n  paymentType?: string;\n  messageToBank?: string;\n  isIntraLegalEntity?: boolean;\n  approved?: boolean;\n  paymentCost?: string;\n  chargeBearer?: string;\n  paymentOrderId?: string;\n}\n\nexport interface InitiatorDetails {\n  [InitiatorFields.id]: string;\n  [InitiatorFields.name]: string;\n  [InitiatorFields.accountNumber]: string;\n  [InitiatorFields.currency]: string;\n  [InitiatorFields.alias]?: string;\n  [InitiatorFields.accountType]?: string;\n  [InitiatorFields.initiatorAccountGroup]?: InitiatorDetails;\n  [PaymentBaseFields.additions]?: any;\n}\n\nexport interface RemittanceDetails {\n  [RemittanceInfoFields.amountCurrencyGroup]: AmountGroup;\n  [RemittanceInfoFields.urgent]?: boolean;\n  [RemittanceInfoFields.paymentReference]?: string;\n  [RemittanceInfoFields.description]?: string;\n  [RemittanceInfoFields.amountOptionLabel]?: string;\n  [RemittanceInfoFields.purposeOfPayment]?: string;\n}\n\nexport interface AmountGroup {\n  [RemittanceInfoFields.currency]: string;\n  [RemittanceInfoFields.amount]: string;\n}\n\nexport interface CounterPartyDetails {\n  [CounterPartyFields.standardEntryClass]?: string;\n  [CounterPartyFields.creditorBank]?: BankDetails;\n  [CounterPartyFields.bankName]?: string;\n  [CounterPartyFields.correspondentBank]?: BankDetails;\n  [CounterPartyFields.intermediaryBank]?: BankDetails;\n  [CounterPartyFields.schemeName]?:\n    | 'IBAN'\n    | 'BBAN'\n    | 'ID'\n    | 'EXTERNAL_ID'\n    | 'EMAIL'\n    | 'MOBILE';\n  [CounterPartyFields.recipientId]?: string;\n  [CounterPartyFields.accountType]?: string;\n  [CounterPartyFields.accountNumber]: string;\n  [CounterPartyFields.name]: string;\n  [CounterPartyFields.alias]?: string;\n  [CounterPartyFields.id]: string;\n  [CounterPartyFields.postalAddress]?: Address;\n  [CounterPartyFields.messageToBank]?: string;\n  [CounterPartyFields.targetCurrency]?: string;\n  [CounterPartyFields.remittanceInformation]?: string;\n  [CounterPartyFields.endToEndIdentification]?: string;\n  [CounterPartyFields.mandateIdentifier]?: string;\n  [CounterPartyFields.saveNewContact]?: boolean;\n  [CounterPartyFields.role]?: string;\n  [CounterPartyFields.selectedContact]?: {\n    contactId?: string;\n    accountId?: string;\n  };\n  [CounterPartyFields.additions]?: any;\n  [CounterPartyFields.counterpartyAccountAdditions]?: any;\n}\n\nexport interface BankDetails {\n  [CounterPartyFields.bankBranchCode]?: string;\n  [CounterPartyFields.bic]?: string;\n  [CounterPartyFields.postalAddress]?: Address;\n  [CounterPartyFields.bankName]?: string;\n  [CounterPartyFields.additions]?: any;\n}\n\nexport interface PayordOmniPaymentConfig {\n  businessConfig: {\n    functionName: string;\n    resourceName: string;\n  };\n}\n\nexport interface PayordPaymentError {\n  errorData: [\n    {\n      key: string;\n      message: string;\n    }\n  ];\n}\n\nexport enum ReviewScreens {\n  ADAPTED,\n  DEFAULT,\n}\n\nexport enum Scheme {\n  IBAN = 'IBAN',\n  BBAN = 'BBAN',\n  ID = 'ID',\n}\n\nexport enum ProductKinds {\n  currentAccount = 'Current Account',\n  savingsAccount = 'Savings Account',\n  creditCard = 'Credit Card',\n  debitCard = 'Debit Card',\n  loanAccount = 'Loan',\n  connectedAccounts = 'Connected Account',\n  investmentAccount = 'Investment Account',\n}\n\nexport enum AccountBalances {\n  available = 'availableBalance',\n  current = 'bookedBalance',\n  creditLimit = 'creditLimit',\n  outstandingPrincipalAmount = 'outstandingPrincipalAmount',\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport type StepName = string;\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface StepperConfig {\n  stepName: StepName;\n  stepDisplayValue: string;\n  isActive: boolean;\n  isChecked: boolean;\n  buttonClass: string[];\n  buttonConfig: StepperButtonConfig[];\n  title?: string;\n  subtitle?: string;\n  cssClasses?: Array<string>;\n  footerDetail?: MultiPaymentFooterOptions;\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface MultiPaymentFooterOptions {\n  totalCount: boolean;\n  totalAmount: boolean;\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface StepDetails {\n  currentStep?: StepperConfig;\n  previousStep?: StepperConfig;\n  nextStep?: StepperConfig;\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface StepperButtonConfig {\n  type: string;\n  text: string;\n  action: StepperAction;\n  hooks?: MultiPaymentHooksConfig;\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport type MultiPaymentHooksConfig = {\n  [key in MultiPaymentHooks]?: MultipaymentHooksCallbackFn;\n};\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport type MultipaymentHooksCallbackFn = (\n  params: MultipaymentHooksParams\n) => void;\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport interface MultipaymentHooksParams {\n  doneFn?: (stepperConfig?: StepperConfig, action?: StepperAction) => void;\n  stepperConfig?: StepperConfig;\n  action?: StepperAction;\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface ManualBatchesConfig {\n  availableTypes: Array<ManualBatchTypeConfig>;\n  enableTypeSelection: boolean | Array<StepName>;\n  steps?: StepperConfig[];\n  options?: MultiPaymentWidgetOptions;\n}\n\nexport interface DependantItem {\n  parent: string;\n  items: string[];\n}\n\nexport interface PurposeInfo {\n  isOptional: boolean;\n  purposes?: Array<PurposeOfPayment>;\n}\n\nexport interface WizardPaymentOptions {\n  customFields?: PaymentComponentsMap;\n  fetchPaymentOptionsListener?: FetchPaymentOptionsListenerFn;\n}\n\nexport interface TriggerInitiatePaymentPayload {\n  payment?: IdentifiedPaymentOrder;\n  template?: PaymentTemplate;\n  options?: InitiatePaymentOptions;\n}\n\nexport enum InitiatePaymentHeaderStates {\n  FORM = 'FORM',\n  REVIEW = 'REVIEW',\n  SUBMITTED = 'SUBMITTED',\n}\n\nexport interface InitiatePaymentHeaderData {\n  paymentType: string;\n  state: InitiatePaymentHeaderStates;\n  paymentMode?: PaymentMode;\n  isDebit?: boolean;\n}\n\nexport type InitiatePaymentHeader = (data: InitiatePaymentHeaderData) => string;\n"]}