{"version":3,"file":"us-domestic-wire.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/configs/payment-types/us-domestic-wire.ts"],"names":[],"mappings":"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","sourcesContent":["import '@angular/localize/init';\nimport { Validators } from '@angular/forms';\nimport { routingTransitNumberValidator } from '../../ui/helpers/form-validation';\nimport { US_States } from '../constants';\nimport {\n  CounterPartyFields,\n  InitiatorFields,\n  RemittanceInfoFields,\n  PaymentBaseFields,\n} from '../models/form-item-names.model';\nimport {\n  PaymentComponents,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n} from '../models/form-items.model';\nimport { defaultScheduleConfig as schedule } from './default-config';\n\nconst countriesList = [\n  {\n    label: 'United States',\n    value: 'US',\n  },\n];\n\nconst initiator: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  title: $localize`:@@wire-config.initiator-title:From account`,\n  fields: [\n    {\n      type: PaymentComponents.debitAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        placeholder: $localize`:@@wire-config.initiator-placeholder:Select an account`,\n        cssClasses: ['col-12', 'mb-0'],\n        validationMessages: [\n          {\n            message: $localize`:@@wire-config.invalid-account-message:Debit account is invalid`,\n            name: 'missingInList',\n          },\n          {\n            message: $localize`:@@wire-config.closed-permission-error-message:You can not do payments to new beneficiary from this account.`,\n            name: 'hasOnlyClosedPaymentPermission',\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@wire-config.beneficiary.header-label:Transfer to`,\n        hasDynamicTitle: true,\n        clearOptions: {\n          onClear: () => {\n            console.log('clear');\n          },\n        },\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        label: $localize`:@@wire-config.beneficiary-selector-label:Beneficiary name`,\n        placeholder: $localize`:@@wire-config.beneficiary-selector-placeholder:Select a beneficiary`,\n        cssClasses: ['col-12'],\n        saveNewContactLabel: $localize`:@@wire-config.new-contact-label:Save as a new contact`,\n        isManualEditDisabled: true,\n        dependants: [\n          CounterPartyFields.accountNumber,\n          CounterPartyFields.bankBranchCode,\n          CounterPartyFields.postalAddress,\n          CounterPartyFields.creditorBank,\n          CounterPartyFields.correspondentBank,\n        ],\n        validationMessages: [\n          {\n            message: $localize`:@@wire-config.same-accounts-selected-error-message:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@wire-config.beneficiary.account-number-label:Account number`,\n        maxLength: 34,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n      },\n    },\n    {\n      name: CounterPartyFields.bankBranchCode,\n      type: PaymentComponents.text,\n      options: {\n        label: $localize`:@@wire-config.branch-code-label:Routing transit number (ABA)`,\n        maxLength: 9,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, routingTransitNumberValidator],\n        mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}`,\n      },\n    },\n    {\n      name: CounterPartyFields.postalAddress,\n      type: PaymentComponents.address,\n      options: {\n        addressType: 'beneficiary',\n        countries: countriesList,\n        states: US_States,\n        cssClasses: ['col-12'],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.bankName,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@wire-config.creditor-bank-name-label:Bank name`,\n            helperText: $localize`:@@wire-config.creditor-bank-name-placeholder: (optional)`,\n            maxLength: 140,\n            cssClasses: ['d-block', 'align-top', 'col-md-8'],\n          },\n        },\n        {\n          name: CounterPartyFields.postalAddress,\n          type: PaymentComponents.address,\n          options: {\n            addressType: 'beneficiary bank',\n            countries: countriesList,\n            states: US_States,\n            cssClasses: ['col-12'],\n          },\n        },\n      ],\n    },\n    {\n      name: CounterPartyFields.correspondentBank,\n      fields: [\n        {\n          name: CounterPartyFields.enableAdditionalBankDetails,\n          type: PaymentComponents.switch,\n          options: {\n            label: $localize`:@@wire-config.correspondent-bank-label:Transfer through correspondent bank`,\n            cssClasses: ['col-12', 'align-top'],\n            labelPosition: 'right',\n            dependants: [\n              CounterPartyFields.bankName,\n              CounterPartyFields.bankBranchCode,\n              CounterPartyFields.postalAddress,\n            ],\n            activateDependantsOn: true,\n          },\n        },\n        {\n          name: CounterPartyFields.bankBranchCode,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@wire-config.correspondent-bank-branch-code-label:Routing Transit Number (ABA)`,\n            maxLength: 9,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n            validators: [routingTransitNumberValidator],\n            isConditionalMandatory: true,\n          },\n        },\n        {\n          name: CounterPartyFields.bankName,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@wire-config.correspondent-bank-name-label:Bank name`,\n            maxLength: 140,\n            helperText: $localize`:@@wire-config.correspondent-bank-name-placeholder: (optional)`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n          },\n        },\n        {\n          name: CounterPartyFields.postalAddress,\n          type: PaymentComponents.address,\n          options: {\n            addressType: 'correspondent bank',\n            countries: countriesList,\n            states: US_States,\n            cssClasses: ['mb-0', 'col-12'],\n          },\n        },\n      ],\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  title: $localize`:@@wire-config.remittance-info-title:Payment details`,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@wire-config.amount-label:Amount`,\n        cssClasses: ['col-md-8', 'large-label'],\n        currencies: ['USD'],\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: $localize`:@@wire-config.invalid-amount-message:Amount is required`,\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst additionalMessage: PaymentFormGroup = {\n  name: 'additionalMessage',\n  title: $localize`:@@wire-config.additional-message-title:Add message`,\n  collapsible: true,\n  fields: [\n    {\n      name: CounterPartyFields.remittanceInformation,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@wire-config.additional-message-label:Message to beneficiary`,\n        helperText: $localize`:@@wire-config.additional-message-helper-text: (optional)`,\n        placeholder: $localize`:@@wire-config.additional-message-placeholder:Type your message here`,\n        showCharCounter: true,\n        minLength: 0,\n        maxLength: 140,\n        rows: 3,\n        cols: 50,\n        cssClasses: ['col-12'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n    {\n      name: CounterPartyFields.messageToBank,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@wire-config.message-to-bank-label:Message to beneficiary bank`,\n        helperText: $localize`:@@wire-config.message-to-bank-helper-text: (optional)`,\n        placeholder: $localize`:@@wire-config.message-to-bank-placeholder:Type your message here`,\n        showCharCounter: true,\n        minLength: 0,\n        rows: 3,\n        maxLength: 140,\n        cols: 50,\n        cssClasses: ['col-12'],\n        mapToField: `${PaymentBaseFields.counterparty}`,\n      },\n    },\n  ],\n};\n\nexport const US_DOMESTIC_WIRE: PaymentTypeConfig = {\n  fields: [\n    initiator,\n    remittanceInfo,\n    counterParty,\n    schedule,\n    additionalMessage,\n  ],\n  name: $localize`:@@wire-config.name:Wire Transfer`,\n  paymentType: 'US_DOMESTIC_WIRE',\n  businessFunction: 'US Domestic Wire',\n  options: {\n    closedPaymentBusFns: ['US Domestic Wire - Intracompany'],\n  },\n};\n"]}