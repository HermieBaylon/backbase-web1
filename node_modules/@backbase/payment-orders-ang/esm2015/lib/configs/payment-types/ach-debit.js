import '@angular/localize/init';
import { Validators } from '@angular/forms';
import { PaymentComponents, } from '../models/form-items.model';
import { CounterPartyFields, HiddenFields, InitiatorFields, PaymentBaseFields, RemittanceInfoFields, } from '../models/form-item-names.model';
import { defaultScheduleConfig as schedule } from './default-config';
import { BeneficiaryList } from '../../ui/constants';
import { US_States } from '../constants';
import { routingTransitNumberValidator } from '../../ui/helpers/form-validation';
const initiator = {
    name: PaymentBaseFields.initiator,
    title: $localize `:@@ach-debit-config.initiator-label:Transfer to`,
    fields: [
        {
            type: PaymentComponents.accountSelector,
            name: InitiatorFields.initiatorAccountGroup,
            options: {
                placeholder: 'Select an account',
                cssClasses: ['col-12', 'mb-0'],
                validationMessages: [
                    {
                        message: $localize `:@@ach-debit-config.account-missing-error-message:Account is invalid`,
                        name: 'missingInList',
                    },
                    {
                        message: $localize `:@@ach-debit-config.required-message:Please select an account`,
                        name: 'required',
                    },
                    {
                        message: $localize `:@@ach-debit-config.closed-permission-error-message:You can not do payments to new beneficiary from this account.`,
                        name: 'hasOnlyClosedPaymentPermission',
                    },
                ],
            },
        },
    ],
};
const counterparty = {
    name: PaymentBaseFields.counterparty,
    fields: [
        {
            name: PaymentComponents.beneficiaryGroupHeader,
            type: PaymentComponents.beneficiaryGroupHeader,
            options: {
                label: $localize `:@@ach-debit-config.beneficiary.header-label:Collect from`,
                hasDynamicTitle: true,
            },
        },
        {
            name: CounterPartyFields.name,
            type: PaymentComponents.beneficiarySelector,
            options: {
                placeholder: $localize `:@@ach-debit-config.beneficiary-selector-placeholder:Select a client`,
                cssClasses: ['col-12', 'mb-0'],
                saveNewContactLabel: 'Save as a new contact',
                validationMessages: [
                    {
                        message: $localize `:@@ach-debit-config.new-contact-label:Beneficiary is same as selected Debit account`,
                        name: 'sameDebitCreditAccountsSelected',
                    },
                ],
                dependants: [
                    CounterPartyFields.creditorBank,
                    CounterPartyFields.accountNumber,
                    CounterPartyFields.postalAddress,
                    CounterPartyFields.bankBranchCode,
                ],
                tabs: [BeneficiaryList.CONTACTS],
            },
        },
        {
            name: CounterPartyFields.accountNumber,
            type: PaymentComponents.text,
            options: {
                validators: [Validators.required],
                label: $localize `:@@ach-debit-config.beneficiary.account-number-label:Account number`,
                maxLength: 36,
                cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],
            },
        },
        {
            name: CounterPartyFields.creditorBank,
            fields: [
                {
                    name: CounterPartyFields.bankBranchCode,
                    type: PaymentComponents.text,
                    options: {
                        validators: [Validators.required, routingTransitNumberValidator],
                        label: $localize `:@@ach-debit-config.bank-code-label:Routing transit number (ABA)`,
                        maxLength: 20,
                        mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}`,
                        cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],
                    },
                },
            ],
        },
        {
            name: CounterPartyFields.postalAddress,
            type: PaymentComponents.address,
            options: {
                addressType: 'client',
                cssClasses: ['col-12'],
                states: US_States,
                countries: [
                    {
                        label: 'United States',
                        value: 'US',
                    },
                ],
            },
        },
        {
            name: CounterPartyFields.creditorBank,
            fields: [
                {
                    name: CounterPartyFields.bankName,
                    type: PaymentComponents.text,
                    options: {
                        label: $localize `:@@ach-debit-config.creditor-bank-name-label:Bank name`,
                        helperText: $localize `:@@ach-debit-config.bank-name-helper-text: (optional)`,
                        maxLength: 140,
                        cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],
                    },
                },
                {
                    name: CounterPartyFields.postalAddress,
                    type: PaymentComponents.address,
                    options: {
                        addressType: 'client bank',
                        cssClasses: ['col-12'],
                        states: US_States,
                        countries: [
                            {
                                label: 'United States',
                                value: 'US',
                            },
                        ],
                    },
                },
            ],
        },
    ],
};
const remittanceInfo = {
    name: PaymentBaseFields.remittanceInfo,
    fields: [
        {
            type: PaymentComponents.amount,
            name: RemittanceInfoFields.amountCurrencyGroup,
            options: {
                label: $localize `:@@ach-debit-config.amount-label:Amount`,
                cssClasses: ['col-md-8', 'large-label', 'mt-4'],
                currencies: ['USD'],
                validationMessages: [
                    {
                        message: $localize `:@@ach-debit-config.invalid-amount-message:Enter amount`,
                        name: 'invalidAmount',
                    },
                ],
            },
        },
    ],
};
const additionalMessage = {
    name: 'additionalMessage',
    fields: [
        {
            name: CounterPartyFields.mandateIdentifier,
            type: PaymentComponents.text,
            options: {
                label: $localize `:@@ach-debit-config.mandate-identifier-label:Mandate identifier`,
                placeholder: $localize `:@@ach-debit-config.mandate-identifier-placeholder:Enter mandate identifier`,
                helperText: $localize `:@@ach-debit-config.mandate-identifier-helper-text: (optional)`,
                minLength: 0,
                maxLength: 35,
                cssClasses: ['d-block', 'col-md-8'],
                mapToField: PaymentBaseFields.counterparty,
            },
        },
        {
            name: CounterPartyFields.remittanceInformation,
            type: PaymentComponents.textarea,
            options: {
                label: $localize `:@@ach-debit-config.remittance-info-label:Message to client`,
                helperText: $localize `:@@ach-debit-config.remittance-info-helper-text: (optional)`,
                showCharCounter: true,
                collapseOptions: {
                    label: $localize `:@@ach-debit-config.collapsed.remittance-info-label:Add message to client`,
                },
                minLength: 0,
                rows: 3,
                maxLength: 140,
                cols: 50,
                cssClasses: ['d-block', 'col-md-8'],
                mapToField: PaymentBaseFields.counterparty,
            },
        },
        {
            name: CounterPartyFields.messageToBank,
            type: PaymentComponents.textarea,
            options: {
                label: $localize `:@@ach-debit-config.message-to-bank-label:Message to client bank`,
                helperText: $localize `:@@ach-debit-config.message-to-bank-helper-text: (optional)`,
                showCharCounter: true,
                collapseOptions: {
                    label: $localize `:@@ach-debit-config.message-to-bank-collapsed-label:Add message to client bank`,
                },
                maxLength: 140,
                cssClasses: ['d-block', 'col-md-8'],
                mapToField: PaymentBaseFields.counterparty,
            },
        },
    ],
};
const isDebitPayment = {
    name: HiddenFields.isDebitPayment,
    type: PaymentComponents.checkbox,
    options: {
        cssClasses: ['d-none'],
        defaultValue: true,
    },
};
export const ACH_DEBIT = {
    fields: [
        initiator,
        remittanceInfo,
        counterparty,
        additionalMessage,
        schedule,
        isDebitPayment,
    ],
    name: $localize `:@@ach-debit-config.name:ACH Debit`,
    businessFunction: 'ACH Debit',
    paymentType: 'ACH_DEBIT',
};
//# sourceMappingURL=ach-debit.js.map