{"version":3,"file":"multipayment.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/configs/payment-types/multipayment.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  MultipleFormGroup,\n  PaymentComponents,\n  StepperConfig,\n  MultipaymentHooksParams,\n  ManualBatchesConfig,\n  ManualBatchTypeConfig,\n  ProductKinds,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  InitiatorFields,\n  StepperAction,\n} from '../models/form-item-names.model';\nimport { FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport {\n  accountsValidation,\n  amountGreaterThanZero,\n  minimumOneAccount,\n  noWhitespaceValidator,\n  pastDateValidator,\n} from '../../ui/helpers/form-validation';\n\nconst batchInfo: MultipleFormGroup = {\n  name: 'batchInfo',\n  title: 'Internal transfers',\n  subTitle: 'Add the main batch information',\n  fields: [\n    {\n      type: PaymentComponents.text,\n      name: 'name',\n      options: {\n        validators: [Validators.required, noWhitespaceValidator as ValidatorFn],\n        validationMessages: [\n          { message: 'Batch name is required', name: 'required' },\n        ],\n        label: 'Batch name',\n        showCharCounter: true,\n        maxLength: 25,\n        cssClasses: ['w-50'],\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: 'requestedExecutionDate',\n      options: {\n        validators: [pastDateValidator as ValidatorFn, Validators.required],\n        validationMessages: [\n          { message: 'Execution date cannot be in past', name: 'pastDate' },\n        ],\n        label: 'Execution date',\n        cssClasses: ['w-50'],\n      },\n    },\n  ],\n  stepName: 'batchInfo',\n};\n\nconst creditDebitSelection: MultipleFormGroup = {\n  name: 'creditDebitSelection',\n  fields: [\n    {\n      type: PaymentComponents.creditDebitSelector,\n      name: 'creditDebitIndicator',\n      options: {\n        label: 'Internal transfers',\n        choices: [\n          {\n            type: 'CREDIT',\n            name: 'Send',\n            description: 'Send funds to multiple own accounts',\n          },\n          // { type: 'DEBIT', name: 'Receive', description: 'Receive funds from multiple own accounts' },\n        ],\n      },\n    },\n  ],\n  stepName: 'transferDetails',\n};\n\nconst initiator: MultipleFormGroup = {\n  name: PaymentBaseFields.initiator,\n  cssClasses: ['bb-block', 'bb-block--xl'],\n  fields: [\n    {\n      type: PaymentComponents.multiPaymentAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: 'From',\n        placeholder: 'Select an account',\n        validators: [Validators.required],\n        validationMessages: [\n          { message: 'Account is required', name: 'required' },\n        ],\n        arrangements: {\n          privilege: 'create',\n          ignoredProductKindNames: [\n            ProductKinds.creditCard,\n            ProductKinds.debitCard,\n          ],\n        },\n        cssClasses: ['w-75'],\n        filterItems: false,\n        required: true,\n        showBankBranchCode: true,\n      },\n    },\n  ],\n  stepName: 'transferDetails',\n  separator: {\n    icon: { name: 'arrow-downward', color: 'dark' },\n  },\n};\n\nconst verifyOnBlur = (form: FormGroup) => {};\n\nconst payments: MultipleFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  cssClasses: ['bb-block', 'bb-block--xl'],\n  fields: [\n    {\n      type: PaymentComponents.multiPaymentCard,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: 'To',\n        helperText: 'You can add up to %s transfers',\n        validators: [minimumOneAccount as ValidatorFn],\n        maximumNumberOfPayments: 100,\n        validationMessages: [\n          { message: 'Minimum one transfer is required', name: 'empty' },\n        ],\n        arrangements: {\n          privilege: 'view',\n          ignoredProductKindNames: [\n            ProductKinds.creditCard,\n            ProductKinds.debitCard,\n            ProductKinds.loanAccount,\n          ],\n        },\n        fieldsConfig: {\n          counterpartyName: {\n            header: 'Own account',\n            validators: [\n              Validators.required,\n              accountsValidation(PaymentBaseFields.initiator),\n            ],\n            placeholder: 'Enter or select account',\n            dropdownIcon: '',\n            ariaLabel: '',\n            validationMessages: [\n              { message: 'Account is required', name: 'required' },\n              { message: 'Account is same as from', name: 'sameAccount' },\n            ],\n          },\n          amount: {\n            validators: [\n              Validators.required,\n              amountGreaterThanZero as ValidatorFn,\n            ],\n            placeholder: '0.00',\n            ariaLabel: '',\n            currency: 'USD',\n            maxLength: 10,\n            validationMessages: [\n              { message: 'Amount is required', name: 'required' },\n              { message: 'Amount is required', name: 'invalidAmount' },\n            ],\n          },\n          description: {\n            validators: [],\n            placeholder: 'Enter Description',\n            label: 'Add Description',\n            helperText: 'Optional',\n            title: 'Description',\n          },\n        },\n        hooks: {\n          onBlur: verifyOnBlur,\n        },\n      },\n    },\n  ],\n  stepName: 'transferDetails',\n};\n\n/**\n * @deprecated Use `INTRACOMPANY_PAYMENT_CREDIT_USA` from `@backbase/batch-common-ang`.\n * Will be removed in widget collection v.3.11.0\n */\nexport const BATCH_INTERNAL_TRANSFERS: ManualBatchTypeConfig = {\n  fields: [batchInfo, creditDebitSelection, initiator, payments],\n  name: 'Internal transfers',\n  description: 'Send funds to multiple own accounts',\n  paymentType: 'INTRACOMPANY_PAYMENT_CREDIT_USA',\n  resourceName: 'Batch',\n  businessFunction: 'Batch - Intracompany Payments',\n  customFields: {},\n  options: {},\n};\n\nexport const STEPPER_CONFIG: Array<StepperConfig> = [\n  {\n    stepName: 'batchInfo',\n    stepDisplayValue: 'Batch info',\n    cssClasses: ['card', 'card-body'],\n    isActive: true,\n    isChecked: false,\n    buttonClass: [],\n    buttonConfig: [\n      {\n        type: 'primary',\n        text: 'Next: Transfer details',\n        action: StepperAction.NEXT,\n        hooks: {\n          onClick: onClickEvent,\n        },\n      },\n    ],\n  },\n  {\n    stepName: 'transferDetails',\n    stepDisplayValue: 'Transfer details',\n    isActive: false,\n    isChecked: false,\n    cssClasses: ['pb-5', 'mb-5'],\n    buttonClass: ['py-4', 'fixed-bottom', 'bb-button-bar--sticky', 'px-sm-3'],\n    footerDetail: { totalAmount: true, totalCount: true },\n    buttonConfig: [\n      {\n        type: 'secondary',\n        text: 'Back',\n        action: StepperAction.BACK,\n      },\n      {\n        type: 'primary',\n        text: 'Next: Review',\n        action: StepperAction.NEXT,\n      },\n    ],\n  },\n  {\n    stepName: 'review',\n    stepDisplayValue: 'Review',\n    cssClasses: ['card', 'card-body', 'bb-block', 'bb-block--lg'],\n    isActive: false,\n    isChecked: false,\n    buttonClass: [],\n    buttonConfig: [\n      {\n        type: 'secondary',\n        text: 'Edit',\n        action: StepperAction.BACK,\n      },\n      {\n        type: 'primary',\n        text: 'Submit',\n        action: StepperAction.SUBMIT,\n      },\n    ],\n  },\n];\n\nexport function onClickEvent({\n  doneFn,\n  stepperConfig,\n  action,\n}: MultipaymentHooksParams) {\n  if (doneFn) {\n    doneFn(stepperConfig, action);\n  }\n}\n\n/**\n * @deprecated Use `MANUAL_BATCH` from `@backbase/batch-common-ang`.\n * Will be removed in widget collection v.3.11.0\n */\nexport const MULTIPLE_PAYMENT: ManualBatchesConfig = {\n  availableTypes: [BATCH_INTERNAL_TRANSFERS],\n  enableTypeSelection: ['batchInfo'],\n  steps: STEPPER_CONFIG,\n  options: {\n    successEventName: 'bb.event.batch.create.success',\n    createTemplates: true,\n  },\n};\n"]}