{"version":3,"file":"date-helpers.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/helpers/date-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { Frequencies } from '../constants';\n\nexport const getDateOnly = (dateArg = new Date()): string => {\n  const date = new Date(dateArg);\n  const month = String(date.getMonth() + 1);\n  const day = String(date.getDate());\n  const year = String(date.getFullYear());\n\n  return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n};\n\nexport const getRelativeDate = (\n  next?: number,\n  ISOStringFormat?: boolean\n): string => {\n  const date = new Date();\n\n  if (next) {\n    date.setDate(date.getDate() + next);\n  }\n\n  return ISOStringFormat ? date.toISOString() : getDateOnly(date);\n};\n\nexport const datePart = (date?: Date | string): string => {\n  let normalisedDate = new Date();\n\n  if (date) {\n    if (typeof date === 'string') {\n      normalisedDate = new Date(date);\n    } else if (date instanceof Date) {\n      normalisedDate = date;\n    }\n  }\n\n  return getDateOnly(normalisedDate);\n};\n\nexport const scheduleOn = (frequency: string, date: Date): number => {\n  switch (frequency) {\n    case 'YEARLY':\n      return date.getMonth() + 1;\n    case 'MONTHLY':\n      return date.getDate();\n    default:\n      return date.getDay() + 1;\n  }\n};\n\nexport const getEndDate = (\n  frequency: Frequencies | any,\n  startDate?: string\n) => {\n  const freq = (frequency && (frequency as any).value) || frequency;\n  const today = startDate ? new Date(startDate) : new Date();\n  switch (freq) {\n    case Frequencies.ONCE:\n      return undefined;\n    case Frequencies.WEEKLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 7\n      ).toISOString();\n    }\n    case Frequencies.BIWEEKLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 14\n      ).toISOString();\n    }\n    case Frequencies.MONTHLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth() + 1,\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.QUARTERLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth() + 3,\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.YEARLY: {\n      return new Date(\n        today.getFullYear() + 1,\n        today.getMonth(),\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.DAILY:\n    default: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 1\n      ).toISOString();\n    }\n  }\n};\n"]}