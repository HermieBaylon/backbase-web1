{"version":3,"file":"currency-helpers.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/helpers/currency-helpers.ts"],"names":[],"mappings":"AACA,OAAO,SAAS,MAAM,cAAc,CAAC;AAUrC,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAClC,UAAwC,EACnC,EAAE;IACP,MAAM,GAAG,GAAgB,EAAiB,CAAC;IAE3C,MAAM,OAAO,GAAG,UAAU,CAAC,OAA4B,CAAC;IACxD,IAAI,OAAO,EAAE;QACX,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;QACtC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACpC,MAAM,sBAAsB,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtD,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACnE,GAAG,CAAC,UAAU,GAAG,sBAAsB,CAAC,GAAG,CACzC,CAAC,IAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CACjC,CAAC;QACF,GAAG,CAAC,QAAQ,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACxD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC;YAC7B,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAiB,CAAC,CAAC;QAEtB,IAAI,UAAU,CAAC,OAAO,EAAE;YACtB,MAAM,WAAW,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;YAC5C,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9D,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACrC;KACF;IAED,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,0BAA0B,GAAG,CACxC,OAAuB,EACY,EAAE;IACrC,MAAM,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC;IAClC,MAAM,WAAW,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7E,MAAM,gBAAgB,GAAG,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;IAEhE,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE;QACtB,OAAO;YACL,YAAY,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ;YACxC,UAAU,EAAE,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ;YACvD,gBAAgB;YAChB,IAAI;SACL,CAAC;KACH;IACD,OAAO;QACL,YAAY,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ;QACxC,UAAU,EAAE,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ;KACxD,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { SanctionedCurrenciesResponse } from '@backbase/data-ang/payment-order-options/';\nimport BigNumber from 'bignumber.js';\nimport { PaymentDetails } from '../../configs/models/form-items.model';\nimport {\n  ForexDetails,\n  CurrencyObj,\n  CurrencySet,\n  DecimalsSet,\n  LabeledCurrencies,\n} from '../models';\n\nexport const handleCurrenciesList = (\n  currencies: SanctionedCurrenciesResponse\n): any => {\n  const res: CurrencySet = {} as CurrencySet;\n\n  const labeled = currencies.labeled as LabeledCurrencies;\n  if (labeled) {\n    const popular = labeled.popular || [];\n    const normal = labeled.normal || [];\n    const currenciesExtendedList = popular.concat(normal);\n    res.dividerIndex = popular.length ? popular.length - 1 : undefined;\n    res.currencies = currenciesExtendedList.map(\n      (item: CurrencyObj) => item.code\n    );\n    res.decimals = currenciesExtendedList.reduce((acc, val) => {\n      acc[val.code] = val.decimals;\n      return acc;\n    }, {} as DecimalsSet);\n\n    if (currencies.default) {\n      const defaultCode = currencies.default.code;\n      res.currencies.splice(res.currencies.indexOf(defaultCode), 1);\n      res.currencies.unshift(defaultCode);\n    }\n  }\n\n  return res;\n};\n\nexport const getForexDetailsFromPayment = (\n  payment: PaymentDetails\n): Partial<ForexDetails> | undefined => {\n  const rate = payment.exchangeRate;\n  const amountValue = new BigNumber(payment.remittanceInfo.amountGroup.amount);\n  const calculatedAmount = amountValue.dividedBy(rate).toString();\n\n  if (rate && rate !== 0) {\n    return {\n      fromCurrency: payment.initiator.currency,\n      toCurrency: payment.remittanceInfo.amountGroup.currency,\n      calculatedAmount,\n      rate,\n    };\n  }\n  return {\n    fromCurrency: payment.initiator.currency,\n    toCurrency: payment.remittanceInfo.amountGroup.currency,\n  };\n};\n"]}