{"version":3,"file":"form-validation.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/helpers/form-validation.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AbstractControl,\n  FormArray,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nimport { InputFormField } from '@backbase/data-ang/payment-order-options';\n\nimport { today } from './../constants';\n\nexport function amountValidator(control: AbstractControl) {\n  return control.value &&\n    control.value.amount > 0 &&\n    control.value.currency.length > 0\n    ? undefined\n    : { invalidAmount: { value: control.value } };\n}\n\nexport function missingInListValidator(getIdsFn: () => string[]): ValidatorFn {\n  return function (control: AbstractControl) {\n    return getIdsFn().includes(control.value) || !control.value\n      ? null\n      : { missingInList: { value: control.value } };\n  };\n}\n\nexport function pastDateValidator(control: AbstractControl) {\n  const selectedDate = new Date(control.value);\n  return control.value &&\n    today > selectedDate &&\n    today.toDateString() !== selectedDate.toDateString()\n    ? { pastDate: { value: control.value } }\n    : null;\n}\n\nexport function maxValueTwoHundredValidator(control: AbstractControl) {\n  const value = parseFloat(control.value);\n  return !isNaN(value) && value > 200\n    ? { max: { max: 200, actual: control.value } }\n    : null;\n}\n\nexport function minValueTwoValidator(control: AbstractControl) {\n  const value = parseFloat(control.value);\n  return !isNaN(value) && value < 2\n    ? { min: { min: 2, actual: control.value } }\n    : null;\n}\n\nexport function endDateAfterStartDateValidator(control: AbstractControl) {\n  if (control.parent) {\n    const parentControl = control.parent;\n    const startDateControl = <AbstractControl>parentControl.get('startDate');\n    const startDate = new Date(startDateControl.value);\n    const endDate = new Date(control.value);\n    return control.value &&\n      startDate > endDate &&\n      startDate.toDateString() !== endDate.toDateString()\n      ? { lessThanStartDate: true }\n      : undefined;\n  }\n\n  return;\n}\n\nexport function sameAccountsValidator(config?: {\n  creditAccountId?: string;\n  debitAccountId?: string;\n}): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const parentForm = control?.parent?.parent;\n    const debitAccountId = parentForm?.get(['initiator', 'id'])?.value;\n    const creditAccountId = parentForm?.get(['counterparty', 'id'])?.value;\n    if (control.value && debitAccountId && debitAccountId === creditAccountId) {\n      return { sameDebitCreditAccountsSelected: true };\n    }\n    return null;\n  };\n}\n\nexport function scheduledPaymentValidationMethod(\n  control: AbstractControl,\n  _endType: string\n): { required: boolean } | undefined {\n  if (control.parent) {\n    const parentControl = control.parent;\n    const { endType, frequency } = parentControl && parentControl.value;\n    return frequency.value !== 'ONCE' &&\n      endType &&\n      !control.value &&\n      endType === _endType\n      ? { required: true }\n      : undefined;\n  }\n\n  return;\n}\n\nexport function requiredEndDateValidator(control: AbstractControl) {\n  return scheduledPaymentValidationMethod(control, 'on');\n}\n\nexport function requiredAfterValidator(control: AbstractControl) {\n  return scheduledPaymentValidationMethod(control, 'after');\n}\n\nexport function requiredEndTypeValidator(\n  control: AbstractControl\n): { required: boolean } | undefined {\n  if (control.parent) {\n    const parentControl = control.parent;\n    const {\n      frequency: { value: _value },\n    } = parentControl && parentControl.value;\n    return !control.value && _value && _value !== 'ONCE'\n      ? { required: true }\n      : undefined;\n  }\n\n  return;\n}\n\nexport function routingTransitNumberValidator(\n  control: AbstractControl\n): ValidationErrors | null {\n  let { value } = control;\n  const errors: ValidationErrors = {\n    pattern: false,\n    size: false,\n  };\n\n  if (value) {\n    value = value.toString(10);\n    const p = (str: string) => parseInt(str, 10);\n\n    if (value.length !== 9) {\n      errors.size = true;\n    }\n\n    const left = 3 * (p(value[0]) + p(value[3]) + p(value[6]));\n    const mid = 7 * (p(value[1]) + p(value[4]) + p(value[7]));\n    const right = p(value[2]) + p(value[5]) + p(value[8]);\n\n    if ((left + mid + right) % 10 !== 0 && value.length >= 9) {\n      errors.pattern = true;\n    }\n  }\n\n  return errors.size || errors.pattern ? errors : null;\n}\n\nexport function noWhitespaceValidator(control: AbstractControl) {\n  const isWhitespace = (control.value || '').trim().length === 0;\n  const isValid = !isWhitespace;\n  return isValid ? null : { required: true };\n}\n\nfunction getSanctionedCurrencies(control: AbstractControl): Array<string> {\n  const { inputFormSettings } =\n    control?.parent?.parent?.get('inputFormFromSettings')?.value || {};\n\n  return (\n    inputFormSettings?.find(\n      (setting: InputFormField) => setting.key === 'currency'\n    )?.values || []\n  );\n}\n\nexport function currencyValidatorFactory(\n  currencies: Array<string> = []\n): ValidatorFn {\n  return (control: AbstractControl) => {\n    const sanctionedCurrencies = currencies.length\n      ? currencies\n      : getSanctionedCurrencies(control);\n    if (!sanctionedCurrencies.length) {\n      return null;\n    }\n    const pattern = `(${sanctionedCurrencies.join('|')})`;\n    const regex = new RegExp(pattern);\n\n    const isValid = regex.test(control.value && control.value.currency);\n    return isValid ? null : { invalidCurrency: true };\n  };\n}\n\nexport function accountsValidation(rootControlName: string): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (control.root && control.parent) {\n      const rootControl = control.root;\n      const fromControl = <FormGroup>rootControl.get(rootControlName);\n      const fromAccount = <AbstractControl>fromControl?.get('id')?.value;\n      const selectedAccount = control.parent.get('id')?.value;\n      return control.parent.value && fromAccount === selectedAccount\n        ? { sameAccount: true }\n        : null;\n    }\n    return null;\n  };\n}\n\nexport function minimumOneAccount(control: FormArray) {\n  return control.controls.length > 0 ? null : { empty: true };\n}\n\nexport function amountGreaterThanZero(control: AbstractControl) {\n  return control.value > 0\n    ? undefined\n    : { invalidAmount: { value: control.value } };\n}\n"]}