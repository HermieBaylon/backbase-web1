{"version":3,"file":"payment-config-helpers.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/helpers/payment-config-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  CounterPartyDetails,\n  Options,\n  PaymentDetails,\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n} from '../../configs/models/form-items.model';\nimport { INTERNAL_TRANSFER } from '../../configs/payment-types/internal-transfer';\nimport { CHAPS } from '../../configs/payment-types/chaps';\nimport { INTERNATIONAL_TRANSFER } from '../../configs/payment-types/international-transfer';\nimport { INTRABANK_TRANSFER } from '../../configs/payment-types/intrabank-transfer';\nimport { SEPA } from '../../configs/payment-types/sepa';\nimport { UK_FASTER_PAYMENT } from '../../configs/payment-types/uk-faster-payment';\nimport { US_ACH_CREDIT } from '../../configs/payment-types/us-ach-credit';\nimport { US_DOMESTIC_WIRE } from '../../configs/payment-types/us-domestic-wire';\nimport {\n  CounterPartyFields,\n  PaymentBaseFields,\n  ScheduleFields,\n} from '../../configs/models/form-item-names.model';\nimport { PaymentTypeIcon } from '../constants';\nimport { Action, PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport {\n  IdentifiedPaymentOrder,\n  PaymentAction,\n  SchemeNames,\n} from '@backbase/data-ang/payment-order';\nimport { isObjectTruthy, stripSpaces } from './type-helpers';\nimport {\n  ArrangementItem,\n  ContactItem,\n  PaymentTemplateAction,\n} from '../models/types';\n\nexport const getConfig = (\n  configName: string,\n  parent?:\n    | PaymentTypeConfig\n    | PaymentFormGroup\n    | Array<PaymentFormGroup | PaymentFormFieldConfig>\n): PaymentFormGroup | PaymentFormFieldConfig | undefined => {\n  let fields: Array<PaymentFormGroup | PaymentFormFieldConfig> = [];\n  if (!configName) {\n    return;\n  }\n  if (Array.isArray(parent)) {\n    fields = [...parent];\n  } else if (parent?.name === configName) {\n    return parent;\n  } else {\n    fields = parent ? [...parent.fields] : [];\n  }\n  let config: PaymentFormGroup | PaymentFormFieldConfig | undefined;\n  while (fields.length) {\n    config = fields.shift();\n    if (config) {\n      if (config.name === configName) {\n        return config;\n      } else if ((config as PaymentFormGroup).fields) {\n        fields.push(...((<PaymentFormGroup>config) as PaymentFormGroup).fields);\n      }\n    }\n  }\n\n  return;\n};\n\nexport const isFormGroupConfig = (\n  config: PaymentFormGroup | PaymentFormFieldConfig\n) => Array.isArray((<PaymentFormGroup>config).fields);\n\nexport const isAdditionsGroup = (group: PaymentFormGroup) =>\n  group.name === PaymentBaseFields.additions ||\n  group.name === CounterPartyFields.counterpartyAccountAdditions;\n\nexport function getLabelFromPaymentConfig(\n  name: string,\n  paymentConfig: PaymentTypeConfig,\n  parentName = ''\n): string {\n  const parentConfig = parentName\n    ? <PaymentFormGroup>getConfig(parentName, paymentConfig)\n    : paymentConfig;\n  const config = getConfig(name, parentConfig);\n  let label = '';\n  if (config) {\n    if (isFormGroupConfig(config)) {\n      label = (<PaymentFormGroup>config).title || '';\n    } else if (config.options) {\n      label = config.options.label || '';\n    }\n  }\n  return label;\n}\n\nexport const cloneFormFieldOptions = (options: { [key: string]: any } = {}) => {\n  const newOptions = { ...options };\n  for (const key in newOptions) {\n    if (Array.isArray(newOptions[key])) {\n      newOptions[key] = [...newOptions[key]];\n    } else if (typeof newOptions[key] === 'object') {\n      newOptions[key] = { ...newOptions[key] };\n    }\n  }\n  return newOptions;\n};\n\nexport const clonePaymentFormItem = (\n  formItemConfig: PaymentFormGroup | PaymentFormFieldConfig\n): PaymentFormGroup | PaymentFormFieldConfig => {\n  const configItem: PaymentFormGroup | PaymentFormFieldConfig = {\n    ...formItemConfig,\n  };\n  if ((formItemConfig as PaymentFormGroup)?.fields?.length) {\n    (configItem as PaymentFormGroup).fields = (\n      formItemConfig as PaymentFormGroup\n    ).fields.map(clonePaymentFormItem);\n  } else {\n    configItem.options = cloneFormFieldOptions(formItemConfig.options);\n  }\n\n  return configItem;\n};\n\nexport const clonePaymentConfig = (\n  config: PaymentTypeConfig\n): PaymentTypeConfig => ({\n  ...config,\n  fields: config.fields.map(clonePaymentFormItem),\n});\n\nexport function setFrequencyOptionsPerConfig(\n  config: PaymentTypeConfig,\n  isRecurring = false,\n  scheduleConfigOptions: {\n    isOneOffToRecurrentAllowed?: boolean;\n    isRecurrentToOneOffAllowed?: boolean;\n  }\n): PaymentTypeConfig {\n  const clonedConfig = clonePaymentConfig(config);\n\n  const schedule = getConfig(\n    PaymentBaseFields.schedule,\n    clonedConfig\n  ) as PaymentFormGroup;\n  const frequencyFieldOptions = getConfig(ScheduleFields.frequency, schedule)\n    ?.options as PaymentFormFieldConfig['options'];\n\n  if (isRecurring && !scheduleConfigOptions.isRecurrentToOneOffAllowed) {\n    frequencyFieldOptions?.options.shift();\n  } else if (\n    !isRecurring &&\n    !scheduleConfigOptions.isOneOffToRecurrentAllowed\n  ) {\n    frequencyFieldOptions.options = [frequencyFieldOptions?.options[0]];\n  }\n\n  return { ...clonedConfig };\n}\n\nexport function removeScheduleFromConfig(\n  config: PaymentTypeConfig\n): PaymentTypeConfig {\n  const clonedConfig = clonePaymentConfig(config);\n  return {\n    ...clonedConfig,\n    // Schedule is on the top level so we can skip deep nested checks.\n    fields: clonedConfig.fields.filter(\n      (field) => field.name !== PaymentBaseFields.schedule\n    ),\n  };\n}\n\nexport const shouldLoadTabContent = (tab: string, options: Options): boolean =>\n  !options.tabs || (Array.isArray(options.tabs) && options.tabs.includes(tab));\n\nexport function getIconByPaymnentType(paymentType: string): string {\n  const type = normalizePaymentType(paymentType);\n\n  switch (type) {\n    case INTERNAL_TRANSFER.paymentType:\n    case INTRABANK_TRANSFER.paymentType:\n      return PaymentTypeIcon.INTERNAL;\n\n    case INTERNATIONAL_TRANSFER.paymentType:\n    case 'US_FOREIGN_WIRE':\n      return PaymentTypeIcon.INTERNATIONAL;\n\n    case SEPA.paymentType:\n    case 'SEPA_CT':\n    case US_DOMESTIC_WIRE.paymentType:\n    case US_ACH_CREDIT.paymentType:\n    case CHAPS.paymentType:\n    case UK_FASTER_PAYMENT.paymentType:\n      return PaymentTypeIcon.DOMESTIC;\n  }\n  return '';\n}\n\nexport function normalizePaymentType(\n  paymentType: string | undefined\n): string | undefined {\n  const paymentTypeSuffixes = ['_ILE', '_CLOSED'];\n  if (paymentType) {\n    let normalisedPaymentType = paymentType;\n    paymentTypeSuffixes.forEach((suffix) => {\n      if (paymentType.endsWith(suffix)) {\n        normalisedPaymentType = paymentType.replace(suffix, '');\n      }\n    });\n\n    return normalisedPaymentType;\n  }\n  return;\n}\n\nexport function hasCreatePermission(\n  item: PaymentTemplate | Array<Action | PaymentAction> | undefined\n): boolean {\n  const actions = (item as PaymentTemplate)?.actions || (item as Array<Action>);\n  return !!actions?.find((action) => action === PaymentTemplateAction.CREATE);\n}\n\nexport function canCopyPayment(\n  item: IdentifiedPaymentOrder | undefined\n): boolean {\n  return !!item?.permissibleActions?.create;\n}\n\nfunction isModified(currentValue = '', expectedValue = ''): boolean {\n  if (!currentValue) {\n    return false;\n  }\n  return currentValue !== expectedValue;\n}\n\nfunction getBeneficairyDetails(\n  beneficiary?: Partial<ContactItem | ArrangementItem>\n): Partial<ArrangementItem> {\n  return {\n    bankBranchCode:\n      (<ContactItem>beneficiary)?.accounts?.[0]?.bankCode ||\n      (<ArrangementItem>beneficiary)?.bankBranchCode,\n    accountNumber:\n      (<ContactItem>beneficiary)?.accounts?.[0]?.accountNumber ||\n      (<ArrangementItem>beneficiary)?.accountNumber,\n    name: beneficiary?.name,\n    BIC:\n      (<ContactItem>beneficiary)?.accounts?.[0]?.BIC ||\n      (<ArrangementItem>beneficiary)?.BIC,\n  };\n}\n\nexport function isSelectedBeneficiaryModified(\n  counterparty?: CounterPartyDetails,\n  selectedBeneficiary?: Partial<ContactItem | ArrangementItem>\n): boolean {\n  const beneficiaryDetails = getBeneficairyDetails(selectedBeneficiary);\n  return (\n    (isObjectTruthy(beneficiaryDetails) &&\n      isModified(counterparty?.name, beneficiaryDetails.name)) ||\n    isModified(\n      stripSpaces(counterparty?.accountNumber),\n      stripSpaces(beneficiaryDetails.accountNumber)\n    ) ||\n    isModified(\n      counterparty?.creditorBank?.bankBranchCode,\n      beneficiaryDetails.bankBranchCode\n    ) ||\n    isModified(counterparty?.creditorBank?.bic, beneficiaryDetails.BIC)\n  );\n}\n\nexport const getCounterpartySchemeName = (\n  paymentItem: PaymentDetails\n): SchemeNames => {\n  const { counterparty, selectedBeneficiary } = paymentItem;\n  const isBeneficiaryModified = isSelectedBeneficiaryModified(\n    counterparty,\n    selectedBeneficiary\n  );\n  let creditorScheme = counterparty.schemeName || SchemeNames.BBAN;\n  const beneficiarySchemes = [SchemeNames.BBAN, SchemeNames.IBAN];\n  const isOwnAccountTransfer =\n    selectedBeneficiary?.isArrangement &&\n    beneficiarySchemes.includes(creditorScheme);\n\n  // Set scheme to ID when payment template has counterparty id\n  if (\n    !selectedBeneficiary &&\n    counterparty.id &&\n    creditorScheme !== SchemeNames.EXTERNALID\n  ) {\n    creditorScheme = SchemeNames.ID;\n  }\n\n  return isOwnAccountTransfer && !isBeneficiaryModified\n    ? SchemeNames.ID\n    : creditorScheme;\n};\n"]}