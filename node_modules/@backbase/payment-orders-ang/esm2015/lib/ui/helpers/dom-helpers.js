import { ScrollToElementBehavior, ScrollToElementBlock, ScrollToElementInline, } from '../models';
export function scrollToElement(elem, selector, options) {
    const defaultOptions = {
        behavior: ScrollToElementBehavior.SMOOTH,
        block: ScrollToElementBlock.CENTER,
        inline: ScrollToElementInline.NEAREST,
    };
    setTimeout(() => {
        const errorElems = elem === null || elem === void 0 ? void 0 : elem.querySelectorAll(selector);
        if (errorElems === null || errorElems === void 0 ? void 0 : errorElems.length) {
            errorElems[0].scrollIntoView(Object.assign(defaultOptions, options || {}));
        }
    });
}
export function focusChildElement(selector, parent) {
    setTimeout(() => {
        const child = parent === null || parent === void 0 ? void 0 : parent.querySelector(selector);
        child === null || child === void 0 ? void 0 : child.focus();
    });
}
export function focusErrorElement(parent, selector = 'small.bb-input-validation-message') {
    toggleTabIndex(selector, parent);
    scrollToElement(parent, selector);
    focusChildElement(selector, parent);
}
export function toggleTabIndex(selector, parent, focusable = true) {
    const child = parent === null || parent === void 0 ? void 0 : parent.querySelector(selector);
    child === null || child === void 0 ? void 0 : child.setAttribute('tabindex', focusable ? '0' : '-1');
}
//# sourceMappingURL=dom-helpers.js.map