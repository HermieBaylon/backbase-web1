{"version":3,"file":"dom-helpers.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/helpers/dom-helpers.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,uBAAuB,EACvB,oBAAoB,EAEpB,qBAAqB,GACtB,MAAM,WAAW,CAAC;AAEnB,MAAM,UAAU,eAAe,CAC7B,IAAiB,EACjB,QAAgB,EAChB,OAAsC;IAEtC,MAAM,cAAc,GAAiC;QACnD,QAAQ,EAAE,uBAAuB,CAAC,MAAM;QACxC,KAAK,EAAE,oBAAoB,CAAC,MAAM;QAClC,MAAM,EAAE,qBAAqB,CAAC,OAAO;KACtC,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,UAAU,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,EAAE;YACtB,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,CAC1B,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,OAAO,IAAI,EAAE,CAAC,CAC7C,CAAC;SACH;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,QAAgB,EAAE,MAAoB;IACtE,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,KAAK,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,aAAa,CAAC,QAAQ,CAAgB,CAAC;QAC7D,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,EAAE,CAAC;IACjB,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,iBAAiB,CAC/B,MAAmB,EACnB,QAAQ,GAAG,mCAAmC;IAE9C,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACjC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACtC,CAAC;AAED,MAAM,UAAU,cAAc,CAC5B,QAAgB,EAChB,MAAoB,EACpB,SAAS,GAAG,IAAI;IAEhB,MAAM,KAAK,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,aAAa,CAAC,QAAQ,CAAgB,CAAC;IAC7D,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC1D,CAAC","sourcesContent":["import {\n  ScrollToElementBehavior,\n  ScrollToElementBlock,\n  ScrollToElementConfigOptions,\n  ScrollToElementInline,\n} from '../models';\n\nexport function scrollToElement(\n  elem: HTMLElement,\n  selector: string,\n  options?: ScrollToElementConfigOptions\n) {\n  const defaultOptions: ScrollToElementConfigOptions = {\n    behavior: ScrollToElementBehavior.SMOOTH,\n    block: ScrollToElementBlock.CENTER,\n    inline: ScrollToElementInline.NEAREST,\n  };\n\n  setTimeout(() => {\n    const errorElems = elem?.querySelectorAll(selector);\n    if (errorElems?.length) {\n      errorElems[0].scrollIntoView(\n        Object.assign(defaultOptions, options || {})\n      );\n    }\n  });\n}\n\nexport function focusChildElement(selector: string, parent?: HTMLElement) {\n  setTimeout(() => {\n    const child = parent?.querySelector(selector) as HTMLElement;\n    child?.focus();\n  });\n}\n\nexport function focusErrorElement(\n  parent: HTMLElement,\n  selector = 'small.bb-input-validation-message'\n) {\n  toggleTabIndex(selector, parent);\n  scrollToElement(parent, selector);\n  focusChildElement(selector, parent);\n}\n\nexport function toggleTabIndex(\n  selector: string,\n  parent?: HTMLElement,\n  focusable = true\n) {\n  const child = parent?.querySelector(selector) as HTMLElement;\n  child?.setAttribute('tabindex', focusable ? '0' : '-1');\n}\n"]}