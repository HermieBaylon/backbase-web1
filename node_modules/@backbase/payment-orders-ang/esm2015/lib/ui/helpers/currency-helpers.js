import BigNumber from 'bignumber.js';
export const handleCurrenciesList = (currencies) => {
    const res = {};
    const labeled = currencies.labeled;
    if (labeled) {
        const popular = labeled.popular || [];
        const normal = labeled.normal || [];
        const currenciesExtendedList = popular.concat(normal);
        res.dividerIndex = popular.length ? popular.length - 1 : undefined;
        res.currencies = currenciesExtendedList.map((item) => item.code);
        res.decimals = currenciesExtendedList.reduce((acc, val) => {
            acc[val.code] = val.decimals;
            return acc;
        }, {});
        if (currencies.default) {
            const defaultCode = currencies.default.code;
            res.currencies.splice(res.currencies.indexOf(defaultCode), 1);
            res.currencies.unshift(defaultCode);
        }
    }
    return res;
};
export const getForexDetailsFromPayment = (payment) => {
    const rate = payment.exchangeRate;
    const amountValue = new BigNumber(payment.remittanceInfo.amountGroup.amount);
    const calculatedAmount = amountValue.dividedBy(rate).toString();
    if (rate && rate !== 0) {
        return {
            fromCurrency: payment.initiator.currency,
            toCurrency: payment.remittanceInfo.amountGroup.currency,
            calculatedAmount,
            rate,
        };
    }
    return {
        fromCurrency: payment.initiator.currency,
        toCurrency: payment.remittanceInfo.amountGroup.currency,
    };
};
//# sourceMappingURL=currency-helpers.js.map