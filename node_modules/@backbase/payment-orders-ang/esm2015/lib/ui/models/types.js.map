{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/models/types.ts"],"names":[],"mappings":"AAAA,OAAO,EAQL,wBAAwB,GAOzB,MAAM,kCAAkC,CAAC;AAW1C,OAAO,EAAkB,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAUzE,OAAO,EAIL,wBAAwB,IAAI,oBAAoB,GAKjD,CAAC;AAgXF,MAAM,CAAN,IAAY,QAIX;AAJD,WAAY,QAAQ;IAClB,yBAAa,CAAA;IACb,yBAAa,CAAA;IACb,6BAAiB,CAAA;AACnB,CAAC,EAJW,QAAQ,KAAR,QAAQ,QAInB;AAED,MAAM,OAAO,gBAAgB;IAE3B,YAAqB,WAA8B;QAA9B,gBAAW,GAAX,WAAW,CAAmB;QADnD,SAAI,GAAiC,eAAe,CAAC,YAAY,CAAC;IACZ,CAAC;CACxD;AAiCD,MAAM,CAAN,IAAY,qBAGX;AAHD,WAAY,qBAAqB;IAC/B,0CAAiB,CAAA;IACjB,sCAAa,CAAA;AACf,CAAC,EAHW,qBAAqB,KAArB,qBAAqB,QAGhC;AAoBD,kGAAkG;AAClG,MAAM,CAAN,IAAY,yBAIX;AAJD,WAAY,yBAAyB;IACnC,8CAAiB,CAAA;IACjB,4CAAe,CAAA;IACf,4CAAe,CAAA;AACjB,CAAC,EAJW,yBAAyB,KAAzB,yBAAyB,QAIpC;AASD,MAAM,CAAC,MAAM,sBAAsB,GAAG,aAAa,CAAC","sourcesContent":["import {\n  BulkPaymentOrdersApprovalPutResponse,\n  ErrorItem,\n  BulkPaymentOrdersApprovalPutResponsePaymentOrders,\n  PaymentOrderCancelPostResponse,\n  PaymentOrderGetResponse,\n  AccountIdentification,\n  Bank,\n  PaymentOrdersHttpService,\n  IdentifiedPaymentOrder,\n  InvolvedParty,\n  Schedule,\n  CounterpartyAccount,\n  OriginatorAccount,\n  PaymentForbiddenError,\n} from '@backbase/data-ang/payment-order';\nimport {\n  GetPaymentTemplatesRequestParams,\n  PaymentTemplate,\n} from '@backbase/data-ang/payment-template';\nimport {\n  AdditionalProperties,\n  ProductSummaryItem,\n} from '@backbase/data-ang/arrangements';\n\nimport { PaymentActionsTypes } from './payment-actions-types';\nimport { LoadMoreMethod, BatchOrderError } from '../constants/constants';\n\nexport { ContactsGetResponseBodyItem as ContactBase } from '@backbase/data-ang/contact-manager';\nimport {\n  ContactGetResponseBody,\n  ContactsGetResponseBodyItem,\n} from '@backbase/data-ang/contact-manager';\nimport { CreditDebitMixedIndicator as CreditDebitMixedIndicatorData } from '@backbase/data-ang/payment-batch';\nimport { BaseObject } from '../../configs/models/form-items.model';\nimport { SchemeName } from '@backbase/data-ang/stop-checks';\nexport {\n  BulkPaymentOrdersApprovalPutResponse,\n  IdentifiedPaymentOrder,\n  PaymentOrderGetResponse as PaymentOrderGET,\n  PaymentOrdersHttpService as PaymentOrdersService,\n  BulkPaymentOrdersApprovalPutResponsePaymentOrders,\n  PaymentOrderCancelPostResponse,\n  ErrorItem,\n  PaymentForbiddenError as BatchPaymentForbiddenError,\n};\n\nexport type ContactItem = ContactsGetResponseBodyItem;\nexport type PaymentModeType = 'SINGLE' | 'RECURRING' | 'ALL';\n\nexport interface BeneficiaryContactItem extends ContactItem {\n  accountName: string;\n}\n\nexport interface PaymentsResponse {\n  items: IdentifiedPaymentOrder[];\n  totalCount: number;\n}\n\nexport interface PaymentOrder extends IdentifiedPaymentOrder {\n  isPaymentCopy?: boolean;\n}\n\nexport interface LoadPaymentsParams {\n  status?: Array<\n    | 'ENTERED'\n    | 'READY'\n    | 'ACCEPTED'\n    | 'PROCESSED'\n    | 'REJECTED'\n    | 'CANCELLED'\n    | 'CANCELLATION_PENDING'\n  >;\n  query?: string;\n  amountFrom?: number;\n  amountTo?: number;\n  executionDate?: string;\n  executionDateFrom?: string;\n  executionDateTo?: string;\n  nextExecutionDate?: string;\n  nextExecutionDateFrom?: string;\n  nextExecutionDateTo?: string;\n  paymentMode?: PaymentModeType;\n  paymentSetupId?: string;\n  transferFrequency?:\n    | 'ONCE'\n    | 'DAILY'\n    | 'WEEKLY'\n    | 'BIWEEKLY'\n    | 'MONTHLY'\n    | 'QUARTERLY'\n    | 'YEARLY';\n  from?: number;\n  cursor?: string;\n  size?: number;\n  orderBy?: string;\n  direction?: 'ASC' | 'DESC';\n}\n\nexport interface PaymentActionsState {\n  type?: PaymentActionsTypes;\n  orderBy?: LoadPaymentsParams['orderBy'];\n  direction?: LoadPaymentsParams['direction'];\n  from?: number;\n  query?: string;\n  pageSize?: number;\n  paymentMode?: PaymentModeType;\n  isDebitMode?: boolean;\n}\n\nexport interface BatchState {\n  type?: string;\n  from?: number;\n  query?: string;\n  size?: number;\n  loadMoreMethod?: LoadMoreMethod;\n  id?: string;\n  mergeItems?: boolean;\n}\n\nexport interface BatchOrder {\n  id: string;\n  status: string;\n  name?: string;\n  type: string;\n  creditDebitMixedIndicator: CreditDebitMixedIndicatorData;\n  totalTransactionsCount?: number;\n  totalInstructedAmount?: Currency;\n  totalCreditTransactionsCount?: number;\n  totalCreditInstructedAmount?: Currency;\n  totalDebitTransactionsCount?: number;\n  totalDebitInstructedAmount?: Currency;\n  canDelete?: boolean;\n  canCancel?: boolean;\n  confidentialType?: string;\n  account?: {\n    name?: string;\n    identification?: {\n      identification: string;\n      schemeName: string;\n    };\n  };\n  requestedExecutionDate?: string;\n  fileName?: string;\n  userFullName?: string;\n  uploadCompletedAt?: string;\n  approval?: {\n    id: string;\n    userId: string;\n    userFullName?: string;\n    serviceAgreementId: string;\n    itemId: string;\n    dataAccessItemId?: string;\n    resource: string;\n    function: string;\n    status: any;\n    records?: Array<{\n      id: string;\n      userId: string;\n      userFullName?: string;\n      approvalTypeId: string;\n      status: any;\n      createdAt: string;\n    }>;\n    canApprove?: boolean;\n    canReject?: boolean;\n    finalApprover?: boolean;\n    action?: string;\n    createdAt: string;\n  };\n  companyId?: number | string;\n  companyName?: string;\n  bankBranchCode?: number | string;\n  entryClass?: string;\n  createdBy?: string;\n  createdAt?: string;\n}\n\nexport interface BatchResponse {\n  totalCount: number;\n  items: Array<any>;\n  batchOrder?: BatchOrder;\n}\n\nexport interface BatchActions {\n  id?: string;\n  transformResponse: any;\n  from: number;\n  size: number;\n}\n\nexport interface PaymentFormAdditions {\n  creditAccount?: any;\n  debitAccount?: any;\n  additions?: any;\n}\n\nexport interface Id {\n  id: string;\n}\n\nexport interface AccountInformation extends AdditionalProperties {\n  name?: string;\n  alias?: string;\n  accountNumber?: string;\n  IBAN?: string;\n  BBAN?: string;\n  BIC?: string;\n  bankCode?: string;\n  bankName?: string;\n  bankAddressLine1?: string;\n  bankAddressLine2?: string;\n  bankStreetName?: string;\n  bankTown?: string;\n  bankPostCode?: string;\n  bankCountrySubDivision?: string;\n  bankCountry?: string;\n  accountHolderAddressLine1?: string;\n  accountHolderAddressLine2?: string;\n  accountHolderStreetName?: string;\n  accountHolderTown?: string;\n  accountHolderPostCode?: string;\n  accountHolderCountrySubDivision?: string;\n  accountHolderCountry?: string;\n}\n\nexport interface PaymentOrdersInitiateTransaction {\n  counterparty?: InvolvedParty;\n  counterpartyAccount?: CounterpartyAccount;\n  counterpartyBank?: Bank;\n  correspondentBank?: Bank;\n  intermediaryBank?: Bank;\n  instructedAmount: Currency;\n  messageToBank?: string;\n  targetCurrency?: string;\n  remittanceInformation?: any;\n  endToEndIdentification?: string;\n  mandateIdentifier?: string;\n}\n\nexport interface PaymentOrdersPOST {\n  originatorAccount?: AccountIdentification;\n  batchBooking?: boolean;\n  instructionPriority?: string;\n  requestedExecutionDate: string;\n  paymentMode?: string;\n  paymentType?: string;\n  entryClass?: string;\n  schedule?: Schedule;\n  transferTransactionInformation?: PaymentOrdersInitiateTransaction;\n  approved?: boolean;\n}\n\nexport interface OutputItem {\n  id: string;\n  name: string;\n  displayName?: string;\n  alias?: string;\n  balance?: number;\n  bankBranchCode?: string;\n  currency?: string;\n  accountNumber: string;\n  accountType: string;\n  externalTransferAllowed?: boolean;\n  urgentTransferAllowed?: boolean;\n  productKindName?: string;\n  defaultRecord?: ProductSummaryItem;\n}\n\nexport interface PaymentOrderResponseItem {\n  id: string;\n  status: string;\n  account: string;\n  approvalStatus?: string;\n  exportAllowed: boolean;\n}\n\nexport interface ArrangementItem extends AdditionalProperties {\n  id: string;\n  name: string;\n  displayName?: string;\n  alias?: string;\n  bookedBalance?: number;\n  balance?: number;\n  availableBalance?: number;\n  creditLimit?: number;\n  currency: string;\n  IBAN?: string;\n  BBAN?: string;\n  accountNumber?: string;\n  bankBranchCode?: string;\n  BIC?: string;\n  externalTransferAllowed?: boolean;\n  urgentTransferAllowed?: boolean;\n  productKindName?: string;\n  isArrangement?: boolean;\n  defaultRecord?: ProductSummaryItem;\n}\n\nexport interface ArrangementList {\n  count: number;\n  items: Array<ArrangementItem>;\n  isLoadMore?: boolean;\n  params?: ContactsAndArrangementsGetParams;\n}\n\nexport interface ContactList {\n  count: number;\n  items: Array<ContactGetResponseBody>;\n  itemsCount?: number;\n  isLoadMore?: boolean;\n}\n\nexport interface InternalAccountFormItem extends BaseObject<any> {\n  id: string;\n  name: string;\n  alias?: string;\n  balance?: number;\n  currency?: string;\n  accountNumber?: string;\n  accountType?: string;\n  externalTransferAllowed?: boolean;\n  urgentTransferAllowed?: boolean;\n  productKindName?: string;\n  availableBalance?: number;\n  bookedBalance?: number;\n  creditLimit?: number;\n  defaultRecord?: ProductSummaryItem;\n}\n\nexport interface MultiPaymentAccountFormItem {\n  id: string;\n  name: string;\n  balance?: number;\n  currency?: string;\n  accountNumber?: string;\n  bankBranchCode?: string;\n}\n\nexport interface ExternalAccountAccount {\n  accountNumber?: string;\n}\n\nexport interface ExternalAccountFormItem {\n  name: string;\n  accounts: Array<ExternalAccountAccount>;\n}\n\nexport interface ArrangementsContextParameters {\n  resourceName: string;\n  businessFunction: string;\n  privilege: string;\n}\n\nexport interface ContactsAndArrangementsGetParams {\n  from?: number;\n  creditAccount?: boolean;\n  debitAccount?: boolean;\n  size?: number;\n  query?: string;\n  searchTerm?: string;\n  isLoadMore?: boolean;\n  merge?: boolean;\n}\n\nexport interface AccessControlConfigProvider {\n  currencies: string[];\n  notificationDismissTime: number;\n  checksRangeNumber: number;\n  resourceName: string;\n  businessFunction: string;\n  privilege: string;\n  schemeName: SchemeName;\n}\n\nexport interface Currency {\n  amount: string;\n  currencyCode: string;\n}\n\nexport interface StopCheck {\n  id?: string;\n  originatorAccount: {\n    name?: string;\n    identification: string;\n    schemeName: string;\n  };\n  status: string;\n  reason?: string;\n  checkNumberRange?: {\n    firstNumber: string;\n    lastNumber: string;\n  };\n  check?: {\n    number?: string;\n    amount?: Currency;\n    payeeName?: string;\n    dateIssued?: string;\n  };\n  dateOfRequest: string;\n  expirationDate?: string;\n}\n\nexport interface Address {\n  addressLine1?: string;\n  addressLine2?: string;\n  streetName?: string;\n  town?: string;\n  postCode?: string;\n  countrySubDivision?: string;\n  country?: string;\n}\n\nexport enum ViewType {\n  CARD = 'CARD',\n  FORM = 'FORM',\n  BUTTON = 'BUTTON',\n}\n\nexport class BreachLimitError {\n  kind: BatchOrderError.BREACH_LIMIT = BatchOrderError.BREACH_LIMIT;\n  constructor(readonly reportError: BreachReportError) {}\n}\n\nexport interface BreachReportInfo {\n  breachType: string;\n  breachedLimitType?: string;\n  timeframe: {\n    period: string;\n    startTime: string;\n    endTime: string;\n  };\n  currentConsumption: string;\n  currentThreshold: string;\n}\n\nexport type BreachReportError = Partial<PaymentForbiddenError>;\n\nexport interface BreachReportItem {\n  limitedEntity?: Array<{\n    ref: string;\n    type: string;\n    description: string;\n  }>;\n  shadow?: boolean;\n  currency?: string;\n  'user-BBID'?: string;\n  breachInfo: Array<BreachReportInfo>;\n}\n\nexport interface PaymentTemplatesGetParams\n  extends GetPaymentTemplatesRequestParams {\n  cursor?: string;\n}\n\nexport enum PaymentTemplateAction {\n  CREATE = 'CREATE',\n  VIEW = 'VIEW',\n}\n\nexport interface PaymentTemplatesData {\n  items: PaymentTemplate[];\n  totalCount: number;\n  params: PaymentTemplatesGetParams;\n}\n\nexport interface PaymentTemplatesDetails {\n  paymentType?: string;\n  originatorAccount?: OriginatorAccount;\n  instructionPriority?: string;\n  entryClass?: string;\n  transferTransactionInformation?: PaymentOrdersInitiateTransaction;\n}\n\nexport interface Additions {\n  [key: string]: string;\n}\n\n/** @deprecated Use `CreditDebitMixedIndicator` from `@backbase/data-ang/payment-batch` instead */\nexport enum CreditDebitMixedIndicator {\n  CREDIT = 'CREDIT',\n  DEBIT = 'DEBIT',\n  MIXED = 'MIXED',\n}\n\nexport interface FormSeparatorConfig {\n  cssClasses?: Array<string>;\n  icon?: { name: string; color?: string };\n}\n\nexport type AccountSelectorSize = 'sm' | 'md';\n\nexport const RoutableModalParamName = 'modalOpened';\n"]}