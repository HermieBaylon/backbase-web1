{"version":3,"file":"payment-order.service.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/services/payment-order.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport {\n  ContactsHttpService as ContactsService,\n  ContactsPostRequestBody,\n  ContactsPostResponseBody,\n} from '@backbase/data-ang/contact-manager';\nimport {\n  ApprovalStatus,\n  PaymentOrderGetResponse,\n  PaymentOrderProgressStatusGet,\n  PaymentOrderPut,\n  PaymentOrdersHttpService as PaymentOrdersService,\n  PaymentOrdersPost,\n  PaymentOrdersPostResponse,\n  PaymentOrdersValidatePost,\n  PaymentOrdersValidatePostResponse,\n  RateGet,\n} from '@backbase/data-ang/payment-order';\nimport {\n  PaymentTemplate,\n  PaymentTemplatesHttpService as PaymentTemplatesService,\n  PaymentTemplatesPostRequest,\n  PaymentTemplatesPostResponse,\n} from '@backbase/data-ang/payment-template';\nimport {\n  A2aClientHttpService as A2aClientService,\n  DetailedExternalAccount,\n} from '@backbase/data-ang/payment-order-a2a';\nimport { ProductSummaryHttpService, ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { BehaviorSubject, EMPTY, Observable, of, Subject, throwError, timer } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  debounce,\n  exhaustMap,\n  map,\n  pluck,\n  scan,\n  shareReplay,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport {\n  arrangementsPageSize,\n  BeneficiaryList,\n  contactsPageSize,\n  dataItemPermissionParams,\n  defaultPrivilege,\n  defaultResourceName,\n  paymentTemplatesPageSize,\n} from '../constants';\nimport { arrangementItemFromService, contactListFromService } from '../mappers';\nimport { UsersHttpService } from '@backbase/data-ang/accesscontrol';\nimport { PaymentErrors } from '../models';\nimport { BB_PAYORD_OMNI_PAYMENT_CONFIG_TOKEN } from '../../configs/constants';\nimport { PayordOmniPaymentConfig } from '../../configs/models/form-items.model';\nimport { DeprecationsService } from '@backbase/foundation-ang/core';\nimport { Notification, NotificationService } from '@backbase/ui-ang/notification';\nimport { fromResponse } from '../helpers/http-helpers';\nimport {\n  ArrangementItem,\n  ArrangementList,\n  ArrangementsContextParameters,\n  ContactList,\n  ContactsAndArrangementsGetParams,\n  PaymentOrderResponseItem,\n  PaymentTemplateAction,\n  PaymentTemplatesData,\n  PaymentTemplatesGetParams,\n} from '../models/types';\n\nconst initialTemplatesParams: PaymentTemplatesGetParams = {\n  from: 0,\n  size: paymentTemplatesPageSize,\n  intendedAction: PaymentTemplateAction.CREATE,\n};\n\n@Injectable()\nexport class PaymentOrderHttpService implements OnDestroy {\n  private readonly paymentResponseSubject: Subject<PaymentOrderResponseItem> = new Subject();\n  private readonly contactsGetParams = new BehaviorSubject<ContactsAndArrangementsGetParams>({\n    from: 0,\n    size: contactsPageSize,\n  });\n  private readonly creditAccountsParams = new BehaviorSubject<ContactsAndArrangementsGetParams>({\n    from: 0,\n    creditAccount: true,\n    size: arrangementsPageSize,\n  });\n  private readonly debitAccountsParams$ = new BehaviorSubject<ContactsAndArrangementsGetParams>({\n    from: 0,\n    debitAccount: true,\n    size: arrangementsPageSize,\n  });\n  private readonly paymentTemplateParams = new BehaviorSubject<PaymentTemplatesGetParams>(initialTemplatesParams);\n\n  private readonly creditAccountsParameters$ = this.creditAccountsParams.pipe(\n    map(this.buildArrangementsContextParameters.bind(this)),\n  );\n\n  private readonly dataItemParams$ = new Subject<string>();\n\n  resourceName: string | undefined;\n  businessFunction!: string;\n  arrangementBusFunctions!: string;\n  privilege: string | undefined;\n  paymentType: string | undefined;\n  loading$ = new BehaviorSubject<boolean>(true);\n\n  public readonly dataItemPermissions$ = this.dataItemParams$.pipe(\n    switchMap((id) => this.handleDataItemPermissions(id)),\n  );\n\n  public readonly arrangementUserPermissions$ = this.dataItemParams$.pipe(\n    switchMap((id) => this.getArrangementUserPermission(id)),\n  );\n\n  public readonly createPermission$ = this.settings ? this.getUserPermission() : EMPTY;\n\n  public paymentResponse: Observable<PaymentOrderResponseItem | HttpErrorResponse> =\n    this.paymentResponseSubject.asObservable();\n\n  public debitAccounts: Observable<ArrangementList> = this.debitAccountsParams$.pipe(\n    map(this.buildArrangementsContextParameters.bind(this)),\n    exhaustMap((params) => this.fetchArrangementList(params)),\n    shareReplay(1),\n    scan((acc: ArrangementList, curr: ArrangementList) => {\n      const { merge, from } = this.debitAccountsParams$.value;\n      return this.mergeArrangementList(acc, curr, (from as number) > 0 && !!merge);\n    }),\n  );\n\n  public contacts: Observable<ContactList | HttpErrorResponse> = this.contactsGetParams.pipe(\n    exhaustMap(({ isLoadMore, ...params }) =>\n      this.contactsData.getContacts(params, 'response').pipe(\n        map((response) => contactListFromService(response, isLoadMore)),\n        catchError((err: HttpErrorResponse) => of(err)),\n      ),\n    ),\n    shareReplay(1),\n  );\n\n  public creditAccounts: Observable<ArrangementList | HttpErrorResponse> = this.creditAccountsParameters$.pipe(\n    exhaustMap((params) => this.fetchArrangementList(params)),\n    shareReplay(1),\n    scan((acc: ArrangementList, curr: ArrangementList) => {\n      const { merge, from } = this.creditAccountsParams.value;\n      return this.mergeArrangementList(acc, curr, (from as number) > 0 && !!merge);\n    }),\n    catchError((err: HttpErrorResponse) => of(err)),\n  );\n\n  public connectedAccounts$: Observable<DetailedExternalAccount[] | undefined> = this.paymentOrdersA2ADataHttpService\n    .getAll('response')\n    .pipe(\n      map(fromResponse),\n      map((res) => res.accounts && res.accounts.filter((acc: DetailedExternalAccount) => acc.status === 'Active')),\n      shareReplay(1),\n    );\n\n  public readonly paymentTemplates$: Observable<PaymentTemplatesData> = this.paymentTemplateParams.pipe(\n    tap(() => this.loading$.next(true)),\n    debounce((par) => (par.query ? timer(1000) : EMPTY)),\n    switchMap((params) => this.loadPaymentTemplates({ ...params, paymentType: this.paymentType })),\n    scan((acc: any, curr: any) => this.mergeResults(acc, curr)),\n    tap(() => this.loading$.next(false)),\n  );\n\n  public readonly templatesList$ = (paymentType: string) =>\n    this.paymentTemplateData\n      .getPaymentTemplates({ ...initialTemplatesParams, paymentType }, 'response')\n      .pipe(map((response: HttpResponse<PaymentTemplate[]>) => response.body));\n\n  private buildArrangementsContextParameters(\n    params: ContactsAndArrangementsGetParams,\n  ): ArrangementsContextParameters & ContactsAndArrangementsGetParams {\n    return {\n      resourceName: this.resourceName || defaultResourceName,\n      businessFunction: this.arrangementBusFunctions ?? this.businessFunction,\n      privilege: this.privilege || defaultPrivilege,\n      ...params,\n    };\n  }\n\n  private fetchArrangementList(params: ArrangementsContextParameters): Observable<ArrangementList> {\n    return this.productSummaryData.getArrangementsByBusinessFunction(params, 'response').pipe(\n      map(({ headers, body }: HttpResponse<ProductSummaryItem[]>) => {\n        const totalCount = headers.get('x-total-count') || '0';\n        const items = body || [];\n        return {\n          count: parseInt(totalCount, 10) || items.length,\n          items: items.map(arrangementItemFromService),\n        };\n      }),\n    );\n  }\n\n  constructor(\n    private readonly paymentOrderData: PaymentOrdersService,\n    private readonly paymentTemplateData: PaymentTemplatesService,\n    private readonly contactsData: ContactsService,\n    private readonly productSummaryData: ProductSummaryHttpService,\n    private readonly accessgroupData: UsersHttpService,\n    private readonly notificationService: NotificationService,\n    @Optional()\n    @Inject(BB_PAYORD_OMNI_PAYMENT_CONFIG_TOKEN)\n    readonly settings: PayordOmniPaymentConfig,\n    readonly paymentOrdersA2ADataHttpService: A2aClientService,\n    private readonly deprecationService: DeprecationsService,\n  ) {\n    this.deprecationService.logDeprecatedFeature(\n      '\"handleDataItemPermissions\" method and \"dataItemPermissions$\" property are deprecated and will be removed in next major release',\n    );\n  }\n\n  private getUserPermission() {\n    return this.accessgroupData\n      .getCheckUserPermission(\n        {\n          ...this.settings.businessConfig,\n          privileges: 'create',\n        },\n        'response',\n      )\n      .pipe(shareReplay(1));\n  }\n\n  postPaymentOrder(paymentOrder: PaymentOrdersPost): Observable<PaymentOrdersPostResponse> {\n    return this.paymentOrderData.postPaymentOrders({ paymentOrdersPost: paymentOrder });\n  }\n\n  putPaymentOrder(paymentOrder: PaymentOrderPut, paymentOrderId: string): Observable<PaymentOrdersPostResponse> {\n    return this.paymentOrderData.putPaymentOrderById({\n      paymentOrderId,\n      paymentOrderPut: paymentOrder,\n    });\n  }\n\n  getPayment(id: string): Observable<PaymentOrderGetResponse> {\n    return this.paymentOrderData.getPaymentOrderById({ paymentOrderId: id }, 'response').pipe(map(fromResponse));\n  }\n\n  getPaymentProgressStatus(paymentOrderId: string): Observable<PaymentOrderProgressStatusGet | null> {\n    return this.paymentOrderData\n      .getProgressStatusByPaymentOrderId({ paymentOrderId }, 'response')\n      .pipe(map((response: HttpResponse<PaymentOrderProgressStatusGet>) => response.body));\n  }\n\n  handleDataItemPermissions(dataItemId: string) {\n    return this.accessgroupData\n      .getDataItemPermissionsContext({\n        resourceName: dataItemPermissionParams.resourceName,\n        privilege: dataItemPermissionParams.privilege,\n        dataGroupType: dataItemPermissionParams.dataGroupType,\n        dataItemId,\n      })\n      .pipe(\n        pluck(0, 'permissions'),\n        map((permissions) => permissions?.map((permission) => permission.businessFunction)),\n      );\n  }\n\n  getArrangementUserPermission(id: string) {\n    return this.accessgroupData\n      .getArrangementUserPermissionCheck({\n        id,\n        resource: dataItemPermissionParams.resourceName,\n        function: this.businessFunction,\n        privilege: dataItemPermissionParams.privilege,\n      })\n      .pipe(catchError((error) => of(error)));\n  }\n\n  loadDataItemPermissions(id: string) {\n    this.dataItemParams$.next(id);\n  }\n\n  ngOnDestroy(): void {\n    this.paymentResponseSubject.complete();\n    this.contactsGetParams.complete();\n    this.creditAccountsParams.complete();\n  }\n\n  loadMoreContacts(page = 0, params?: ContactsAndArrangementsGetParams) {\n    this.contactsGetParams.next({\n      from: page,\n      isLoadMore: true,\n      size: contactsPageSize,\n      ...params,\n    });\n  }\n\n  loadMoreCreditAccounts(page = 0, params?: ContactsAndArrangementsGetParams) {\n    this.creditAccountsParams.next({\n      from: page,\n      creditAccount: true,\n      ...(params?.query && { searchTerm: params.query }),\n      isLoadMore: true,\n      size: arrangementsPageSize,\n      ...params,\n    });\n  }\n\n  fetchCreditAccounts(query = '', params?: ContactsAndArrangementsGetParams) {\n    this.contactsGetParams.next({\n      ...(query && { query }),\n      from: 0,\n      ...params,\n    });\n    this.creditAccountsParams.next({\n      ...(query && { searchTerm: query }),\n      from: 0,\n      creditAccount: true,\n      ...params,\n    });\n  }\n\n  loadMoreDebitAccounts(params: ContactsAndArrangementsGetParams): void {\n    this.debitAccountsParams$.next({\n      ...this.debitAccountsParams$.value,\n      ...params,\n    });\n  }\n\n  validatePayment(payment: PaymentOrdersValidatePost): Observable<PaymentOrdersValidatePostResponse> {\n    return this.paymentOrderData\n      .postValidate({ paymentOrdersValidatePost: payment }, 'response')\n      .pipe(map(fromResponse));\n  }\n\n  saveNewContact(contact: ContactsPostRequestBody) {\n    return this.contactsData.postContacts({ contactsPostRequestBody: contact }, 'response').pipe(\n      map((res: HttpResponse<ContactsPostResponseBody>) => res.body),\n      catchError(() => of(null)),\n    );\n  }\n\n  postPaymentTemplate(requestObject: PaymentTemplatesPostRequest): Observable<PaymentTemplatesPostResponse | null> {\n    return this.paymentTemplateData\n      .postPaymentTemplates({ paymentTemplatesPostRequest: requestObject })\n      .pipe(tap(() => this.loadMore(0)));\n  }\n\n  editPaymentTemplate(\n    paymentTemplateId: string,\n    paymentTemplatesPutRequest: PaymentTemplatesPostRequest,\n  ): Observable<PaymentTemplatesPostResponse | null> {\n    return this.paymentTemplateData.putPaymentTemplateById({\n      paymentTemplateId,\n      paymentTemplatesPutRequest,\n    });\n  }\n\n  getCurrencyExchangeRate(currencyFrom: string, currencyTo: string): Observable<RateGet | null> {\n    return this.paymentOrderData.getRate({ currencyFrom, currencyTo }, 'response').pipe(\n      map((response) => response && response.body),\n      catchError(() => of(null)),\n    );\n  }\n\n  getAccountByAccountId(id: string, accountNumber: string): Observable<ArrangementItem> {\n    return this.productSummaryData\n      .getArrangementsByBusinessFunction(\n        {\n          resourceName: this.resourceName || defaultResourceName,\n          businessFunction: this.businessFunction,\n          privilege: this.privilege || defaultPrivilege,\n          searchTerm: accountNumber,\n        },\n        'response',\n      )\n      .pipe(\n        map(fromResponse),\n        map((items: ProductSummaryItem[]) => items.find((item) => item.id === id)),\n        map((item) => {\n          if (item) {\n            return arrangementItemFromService(item);\n          } else {\n            throw new Error('No account found...');\n          }\n        }),\n      );\n  }\n\n  private loadPaymentTemplates(params: PaymentTemplatesGetParams): Observable<PaymentTemplatesData> {\n    return this.paymentTemplateData.getPaymentTemplates(params, 'response').pipe(\n      map((response: HttpResponse<PaymentTemplate[]>) => {\n        const items = response.body || [];\n        return {\n          items,\n          totalCount: parseInt(response.headers.get('x-total-count') || '0', 10) || items.length,\n          params,\n        };\n      }),\n    );\n  }\n\n  private mergeResults(acc: PaymentTemplatesData, curr: PaymentTemplatesData): PaymentTemplatesData {\n    return {\n      totalCount: curr.totalCount || curr.items.length,\n      items: curr.params.from === 0 ? curr.items : [...acc.items, ...curr.items],\n      params: curr.params,\n    };\n  }\n\n  private mergeArrangementList(\n    accumulator: ArrangementList,\n    currentValue: ArrangementList,\n    merge: boolean,\n  ): ArrangementList {\n    return {\n      count: currentValue.count || currentValue.items.length,\n      items: merge ? [...accumulator.items, ...currentValue.items] : currentValue.items,\n    };\n  }\n\n  loadMore(page: number) {\n    const currentPage = this.paymentTemplateParams.value.from || 0;\n    this.paymentTemplateParams.next({\n      ...this.paymentTemplateParams.value,\n      from: currentPage + page,\n    });\n  }\n\n  search(query: string) {\n    this.paymentTemplateParams.next({\n      ...this.paymentTemplateParams.value,\n      from: 0,\n      ...{ query },\n    });\n  }\n\n  manageErrorResponse(response: PaymentErrors) {\n    const notification = {\n      header: response.notificationHeader,\n      headerContext: response.errorResponse,\n      message: '',\n    };\n\n    if (response.errors?.length) {\n      response.errors?.forEach((responseError: { key: string; message: string }) => {\n        response.paymentErrors?.errorData.find((err) => {\n          if (responseError.key === err.key) {\n            responseError.message = err.message;\n          }\n        });\n        if (!responseError.message && response.genericMessage) {\n          responseError.message = response.genericMessage;\n        }\n\n        notification.message = responseError.message;\n\n        this.showNotification(false, notification);\n      });\n    } else {\n      if (response.genericMessage) {\n        notification.message = response.genericMessage;\n      }\n      this.showNotification(false, notification);\n    }\n  }\n\n  showNotification(success: boolean, notification: Partial<Notification>) {\n    this.notificationService.showNotification({\n      dismissible: true,\n      ttl: 5000,\n      modifier: success ? 'success' : 'error',\n      header: '',\n      message: '',\n      ...notification,\n    });\n  }\n\n  getContacts(params?: ContactsAndArrangementsGetParams): Observable<ContactList | HttpErrorResponse> {\n    this.contactsGetParams.next({ ...this.contactsGetParams.value, ...params });\n    return this.contacts;\n  }\n\n  getCreditAccounts(params?: ContactsAndArrangementsGetParams): Observable<ArrangementList | HttpErrorResponse> {\n    this.creditAccountsParams.next({\n      ...this.creditAccountsParams.value,\n      ...(params?.query && { searchTerm: params.query }),\n      ...params,\n    });\n    return this.creditAccounts;\n  }\n\n  getDebitAccounts(params?: ContactsAndArrangementsGetParams): Observable<ArrangementList> {\n    this.debitAccountsParams$.next({\n      ...this.debitAccountsParams$.value,\n      ...params,\n    });\n    return this.debitAccounts.pipe(shareReplay(1));\n  }\n\n  fetchBeneficiaries(params: ContactsAndArrangementsGetParams, type?: BeneficiaryList) {\n    const { from, size, query } = params;\n    switch (type) {\n      case BeneficiaryList.ACCOUNTS:\n        this.loadMoreCreditAccounts(from, { size, query });\n        break;\n      case BeneficiaryList.CONTACTS:\n        this.loadMoreContacts(from, { size, query });\n        break;\n      default:\n        this.fetchCreditAccounts(query, { size });\n        break;\n    }\n  }\n}\n"]}