import { Injectable, Optional } from '@angular/core';
import { ItemModel } from '@backbase/foundation-ang/core';
import { ReplaySubject } from 'rxjs';
import { StopChecksHttpService as StopChecksService, } from '@backbase/data-ang/stop-checks';
import { distinctUntilChanged, finalize, map } from 'rxjs/operators';
import { fromResponse } from '../helpers/http-helpers';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
import * as i2 from "@backbase/data-ang/stop-checks";
export class ChecksService {
    constructor(model, stopChecksDataHttpService) {
        this.model = model;
        this.stopChecksDataHttpService = stopChecksDataHttpService;
        this.loadingSub$ = new ReplaySubject(1);
        this.loading$ = this.loadingSub$.pipe(distinctUntilChanged());
    }
    set loading(val) {
        this.loadingSub$.next(val);
    }
    getStopChecks(params) {
        this.loading = true;
        return this.stopChecksDataHttpService
            .getStopChecks(params, 'response')
            .pipe(map(fromResponse), finalize(() => {
            this.loading = false;
        }));
    }
    postStopChecks(payload) {
        this.loading = true;
        return this.stopChecksDataHttpService
            .postStopChecks({ stopCheckPostRequest: payload }, 'response')
            .pipe(map(fromResponse), finalize(() => {
            this.loading = false;
        }));
    }
}
/** @nocollapse */ ChecksService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ChecksService, deps: [{ token: i1.ItemModel, optional: true }, { token: i2.StopChecksHttpService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ ChecksService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ChecksService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ChecksService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ItemModel, decorators: [{
                    type: Optional
                }] }, { type: i2.StopChecksHttpService }]; } });
//# sourceMappingURL=checks.service.js.map