{"version":3,"file":"arrangement-mappers.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/mappers/arrangement-mappers.ts"],"names":[],"mappings":"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","sourcesContent":["import { DetailedExternalAccount } from '@backbase/data-ang/payment-order-a2a';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProductKinds } from '../../configs/models/form-items.model';\nimport { ArrangementItem, ArrangementList, OutputItem } from '../models/types';\n\nexport function arrangementItemFromService(\n  record: ProductSummaryItem\n): ArrangementItem {\n  return {\n    id: record.id,\n    name: record.displayName || record.bankAlias || record.name || '',\n    alias: (record.userPreferences || {}).alias || record.bankAlias,\n    balance: record.bookedBalance || record.availableBalance,\n    bookedBalance: record.bookedBalance,\n    availableBalance: record.availableBalance,\n    creditLimit: record.creditLimit,\n    currency: record.currency || '',\n    bankBranchCode: record.bankBranchCode || '',\n    BIC: record.BIC,\n    IBAN: record.IBAN || record.number,\n    BBAN: record.BBAN,\n    externalTransferAllowed: record.externalTransferAllowed,\n    urgentTransferAllowed: record.urgentTransferAllowed,\n    additions: record.additions,\n    productKindName: record.productKindName,\n    isArrangement: true,\n    defaultRecord: record,\n  };\n}\n\nexport function arrangementListFromService(\n  response: Array<ProductSummaryItem>,\n  isLoadMore = false,\n  totalCount?: number\n): ArrangementList {\n  return {\n    count: totalCount || response.length,\n    items: response.map(arrangementItemFromService),\n    isLoadMore,\n  };\n}\n\nexport const accMap =\n  (scheme: 'BBAN' | 'IBAN' = 'BBAN') =>\n  (source: Observable<ArrangementList>): Observable<Array<OutputItem>> =>\n    source.pipe(\n      map((arrangements) => mapArrangementList(arrangements, scheme))\n    );\n\nexport const mapArrangementList = (\n  arrangements: ArrangementList,\n  scheme: 'BBAN' | 'IBAN' = 'BBAN'\n) =>\n  arrangements.items.map((arrangement) => ({\n    id: arrangement.id,\n    name: arrangement.name,\n    displayName: arrangement.displayName,\n    alias: arrangement.alias,\n    balance: arrangement.bookedBalance,\n    bookedBalance: arrangement.bookedBalance,\n    availableBalance: arrangement.availableBalance,\n    creditLimit: arrangement.creditLimit,\n    accountNumber:\n      arrangement[scheme] || arrangement.BBAN || arrangement.IBAN || '',\n\n    number: arrangement[scheme] || arrangement.BBAN || arrangement.IBAN || '',\n    bankBranchCode: arrangement.bankBranchCode,\n    BIC: arrangement.BIC,\n    accountType: scheme,\n    currency: arrangement.currency,\n    schemeName: arrangement.IBAN ? 'IBAN' : 'BBAN',\n    externalTransferAllowed: arrangement.externalTransferAllowed,\n    urgentTransferAllowed: arrangement.urgentTransferAllowed,\n    additions: arrangement.additions || {},\n    productKindName: arrangement.productKindName,\n    isArrangement: true,\n    defaultRecord: arrangement.defaultRecord,\n  }));\n\n/**\n * @deprecated\n * This will be removed in the next major version\n * Please use `mapArrangementList` instead\n */\nexport const mapArrangementToCreditAccount = mapArrangementList;\n\nexport const mapConnectedAccounts = (\n  account: DetailedExternalAccount\n): OutputItem => ({\n  id: account.externalAccountId,\n  name: account.accountNickName || account.bankName,\n  accountNumber: account.accountNumber,\n  productKindName: ProductKinds.connectedAccounts,\n  accountType: account.accountType,\n});\n"]}