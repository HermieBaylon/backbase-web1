{"version":3,"file":"payment-option-mappers.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/mappers/payment-option-mappers.ts"],"names":[],"mappings":"AAGA,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,OAAqC,EACrC,eAA0C,EAAE,EAC3B,EAAE;IACnB,MAAM,UAAU,GAAoB,EAAE,CAAC;IACvC,IAAI,cAAc,CAAC;IACnB,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC5B,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,EAAE,CAAC;QAC7C,cAAc,CAAC,OAAO,CAAC,CAAC,aAA4B,EAAE,EAAE;YACtD,UAAU,CAAC,IAAI,iBACb,WAAW,EAAE,MAAM,CAAC,WAAW,EAC/B,mBAAmB,EAAE,MAAM,CAAC,mBAAmB,EAC/C,cAAc,EAAE,cAAc,CAAC,MAAM,GAAG,CAAC,EACzC,IAAI,EAAE,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,IACnC,aAAa,EAChB,CAAC;QACL,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC","sourcesContent":["import { PaymentOption as PaymentOptionResponse } from '@backbase/data-ang/payment-order-options';\nimport { PaymentOption } from '../models';\n\nexport const mapPaymentOptions = (\n  options: Array<PaymentOptionResponse>,\n  optionsLabel: { [key: string]: string } = {}\n): PaymentOption[] => {\n  const optionsArr: PaymentOption[] = [];\n  let paymentOptions;\n  for (const option of options) {\n    paymentOptions = option.paymentOptions || [];\n    paymentOptions.forEach((paymentOption: PaymentOption) => {\n      optionsArr.push({\n        paymentType: option.paymentType,\n        canEditCounterparty: option.canEditCounterparty,\n        showHelperText: paymentOptions.length > 1,\n        name: optionsLabel[option.paymentType],\n        ...paymentOption,\n      });\n    });\n  }\n  return optionsArr;\n};\n"]}