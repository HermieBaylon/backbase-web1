{"version":3,"file":"payment-mappers.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/mappers/payment-mappers.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Schedule,\n  PaymentOrdersValidatePost,\n  SchemeNames,\n  PurposeOfPaymentInfo,\n  IdentifiedPaymentOrder,\n} from '@backbase/data-ang/payment-order';\n\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { PaymentTemplatesPostRequest } from '@backbase/data-ang/payment-template';\nimport {\n  InitiatePaymentOptions,\n  PaymentDetails,\n  PaymentFormFieldConfig,\n  BaseObject,\n} from '../../configs/models/form-items.model';\nimport {\n  CounterPartyFields,\n  HiddenFields,\n  InitiatorFields,\n  PaymentBaseFields,\n  PaymentOptionFields,\n  PaymentTemplateFields,\n  RemittanceInfoFields,\n  ScheduleFields,\n} from '../../configs/models/form-item-names.model';\nimport { TemplateParams } from '../models';\nimport { getCounterpartySchemeName } from '../helpers/payment-config-helpers';\nimport {\n  endTypes,\n  ScheduleItem,\n} from '../components/schedule/schedule.component';\nimport { datePart, scheduleOn } from '../helpers/date-helpers';\nimport { isObjectTruthy, stripSpaces } from '../helpers/type-helpers';\n\nconst normalizePaymentSchedule = (scheduleItem: ScheduleItem): Schedule => {\n  const {\n    frequency,\n    endDate,\n    startDate = '',\n    repeat,\n    endType,\n    every,\n  } = scheduleItem || {};\n  const freq = frequency?.value || frequency;\n  return {\n    transferFrequency: freq as Schedule['transferFrequency'],\n    every: (every || '1') as Schedule['every'],\n    on: scheduleOn(freq as string, new Date(startDate)),\n    startDate: datePart(startDate),\n    ...(endType === 'on' && endDate && { endDate: datePart(endDate) }),\n    ...(endType === 'after' && repeat && { repeat }),\n  };\n};\n\n//nosonar\nexport const toPostRequest = (\n  paymentItem: PaymentDetails\n): PaymentOrdersValidatePost => {\n  if (\n    paymentItem[PaymentBaseFields.counterparty][CounterPartyFields.role] ===\n    'DEBTOR'\n  ) {\n    paymentItem = switchPaymentParties(paymentItem);\n  }\n\n  const {\n    [PaymentBaseFields.counterparty]: {\n      [CounterPartyFields.standardEntryClass]: entryClass,\n      [CounterPartyFields.creditorBank]: creditorBankDetails,\n      [CounterPartyFields.bankName]: bankNameValue,\n      [CounterPartyFields.correspondentBank]: correspondentBankDetails,\n      [CounterPartyFields.intermediaryBank]: intermediaryBankDetails,\n      [CounterPartyFields.recipientId]: recipientId,\n      [CounterPartyFields.accountType]: accountType,\n      [CounterPartyFields.accountNumber]: accountNumber,\n      [CounterPartyFields.name]: counterpartyNameValue,\n      [CounterPartyFields.id]: counterpartyId,\n      [CounterPartyFields.postalAddress]: postalAddress,\n      [CounterPartyFields.messageToBank]: messageToBank,\n      [CounterPartyFields.targetCurrency]: targetCurrency,\n      [CounterPartyFields.remittanceInformation]: remittanceInfo,\n      [CounterPartyFields.endToEndIdentification]: endToEndIdentification,\n      [CounterPartyFields.mandateIdentifier]: mandateIdentifier,\n      [CounterPartyFields.role]: role,\n      [CounterPartyFields.selectedContact]: selectedContact,\n      [CounterPartyFields.additions]: creditorAdditions,\n      [CounterPartyFields.counterpartyAccountAdditions]:\n        counterpartyAccountAdditions,\n    },\n    [PaymentBaseFields.initiator]: debitorAccount,\n    [PaymentBaseFields.remittanceInfo]: {\n      [RemittanceInfoFields.urgent]: urgent,\n      [RemittanceInfoFields.amountCurrencyGroup]: {\n        amount: amountValue,\n        currency,\n      },\n      [RemittanceInfoFields.paymentReference]: paymentReference,\n      [RemittanceInfoFields.purposeOfPayment]: purposeOfPayment,\n      [RemittanceInfoFields.description]: description,\n    },\n    [PaymentBaseFields.schedule]: paymentSchedule,\n    paymentType,\n    approved,\n    chargeBearer,\n    transferFee,\n    [PaymentBaseFields.additions]: additions,\n  } = paymentItem;\n  const scheduleItem: Schedule = normalizePaymentSchedule(paymentSchedule);\n\n  const {\n    [CounterPartyFields.bankBranchCode]: bankBranchCode,\n    [CounterPartyFields.bic]: bankBic,\n    [CounterPartyFields.postalAddress]: bankAddress,\n    [CounterPartyFields.bankName]: creditorBankName,\n    [CounterPartyFields.additions]: creditorBankAdditions,\n  } = creditorBankDetails || ({} as any);\n\n  const bankName = bankNameValue || creditorBankName;\n  const transferFeeValue = transferFee || {};\n  const {\n    [CounterPartyFields.bankBranchCode]: correspondentBankBranchCode,\n    [CounterPartyFields.bic]: correspondentBankBic,\n    [CounterPartyFields.postalAddress]: correspondentBankAddress,\n    [CounterPartyFields.bankName]: correspondentBankName,\n    [CounterPartyFields.additions]: correspondentBankAdditions,\n  } = correspondentBankDetails || ({} as any);\n\n  const counterpartyBank = {\n    ...(bankBranchCode ? { bankBranchCode } : null),\n    ...(bankBic ? { bic: bankBic } : null),\n    ...(isObjectTruthy(bankAddress) ? { postalAddress: bankAddress } : null),\n    ...(bankName ? { name: bankName } : null),\n    ...(isObjectTruthy(creditorBankAdditions)\n      ? { additions: creditorBankAdditions }\n      : null),\n  };\n\n  const {\n    [CounterPartyFields.bankBranchCode]: intermediaryBankBranchCode,\n    [CounterPartyFields.bic]: intermediaryBankBic,\n    [CounterPartyFields.postalAddress]: intermediaryBankAddress,\n    [CounterPartyFields.bankName]: intermediaryBankName,\n    [CounterPartyFields.additions]: intermediaryBankAdditions,\n  } = intermediaryBankDetails || ({} as any);\n\n  const correspondentBank = {\n    ...(correspondentBankBranchCode\n      ? { bankBranchCode: correspondentBankBranchCode }\n      : null),\n    ...(correspondentBankBic ? { bic: correspondentBankBic } : null),\n    ...(isObjectTruthy(correspondentBankAddress)\n      ? { postalAddress: correspondentBankAddress }\n      : null),\n    ...(correspondentBankName ? { name: correspondentBankName } : null),\n    ...(isObjectTruthy(correspondentBankAdditions)\n      ? { additions: correspondentBankAdditions }\n      : null),\n  };\n\n  const intermediaryBank = {\n    ...(intermediaryBankBranchCode\n      ? { bankBranchCode: intermediaryBankBranchCode }\n      : null),\n    ...(intermediaryBankBic ? { bic: intermediaryBankBic } : null),\n    ...(isObjectTruthy(intermediaryBankAddress)\n      ? { postalAddress: intermediaryBankAddress }\n      : null),\n    ...(intermediaryBankName ? { name: intermediaryBankName } : null),\n    ...(isObjectTruthy(intermediaryBankAdditions)\n      ? { additions: intermediaryBankAdditions }\n      : null),\n  };\n\n  const remittanceInformation = remittanceInfo || description;\n\n  const scheduledPayment =\n    scheduleItem && scheduleItem.transferFrequency !== 'ONCE'\n      ? { paymentMode: 'RECURRING', schedule: { schedule: scheduleItem } }\n      : { paymentMode: 'SINGLE', schedule: {} };\n\n  const purposeType = paymentItem.inputFormFromSettings?.purposesOfPayment\n    ?.length\n    ? 'code'\n    : 'freeText';\n  const creditorScheme = getCounterpartySchemeName(paymentItem);\n\n  return {\n    paymentType,\n    ...(approved ? { approved } : {}),\n    originatorAccount: {\n      identification: {\n        identification: debitorAccount.id,\n        schemeName: 'ID',\n      },\n      name: debitorAccount.name,\n      ...(debitorAccount.additions\n        ? { additions: debitorAccount.additions }\n        : {}),\n    },\n    requestedExecutionDate: datePart(paymentSchedule?.startDate),\n    paymentMode:\n      scheduledPayment.paymentMode as PaymentOrdersValidatePost['paymentMode'],\n    ...(entryClass ? { entryClass } : {}),\n    instructionPriority: urgent ? 'HIGH' : 'NORM',\n    ...scheduledPayment.schedule,\n    transferTransactionInformation: {\n      instructedAmount: {\n        amount: amountValue,\n        currencyCode: currency,\n      },\n      counterparty: {\n        name: counterpartyNameValue,\n        ...(recipientId ? { recipientId } : {}),\n        ...(isObjectTruthy(postalAddress) ? { postalAddress } : {}),\n        ...(role ? { role } : {}),\n        ...(isObjectTruthy(creditorAdditions)\n          ? { additions: creditorAdditions }\n          : {}),\n        ...(paymentItem.isDebitPayment ? { role: 'DEBTOR' } : {}),\n      },\n      counterpartyAccount: {\n        identification: {\n          identification:\n            creditorScheme === 'ID' || creditorScheme === 'EXTERNAL_ID'\n              ? stripSpaces(counterpartyId)\n              : stripSpaces(accountNumber),\n          schemeName: creditorScheme || 'BBAN',\n        },\n        ...(accountType ? { accountType } : {}),\n        ...(isObjectTruthy(selectedContact) ? { selectedContact } : {}),\n        ...(isObjectTruthy(counterpartyAccountAdditions)\n          ? { additions: counterpartyAccountAdditions }\n          : {}),\n      },\n      ...(isObjectTruthy(counterpartyBank) ? { counterpartyBank } : {}),\n      ...(isObjectTruthy(correspondentBank) ? { correspondentBank } : {}),\n      ...(isObjectTruthy(intermediaryBank) ? { intermediaryBank } : {}),\n      ...(targetCurrency ? { targetCurrency } : {}),\n      ...(mandateIdentifier ? { mandateIdentifier } : {}),\n      ...(endToEndIdentification ? { endToEndIdentification } : {}),\n      ...(remittanceInformation ? { remittanceInformation } : {}),\n      ...(messageToBank ? { messageToBank } : {}),\n      ...(paymentReference ? { messageToBank: paymentReference } : {}),\n      ...(purposeOfPayment\n        ? { purposeOfPayment: { [purposeType]: purposeOfPayment } }\n        : {}),\n      ...(chargeBearer ? { chargeBearer } : {}),\n      ...(isObjectTruthy(transferFeeValue)\n        ? { transferFee: { ...transferFeeValue } }\n        : {}),\n    } as PaymentOrdersValidatePost['transferTransactionInformation'],\n    ...(isObjectTruthy(additions) ? { additions } : {}),\n  };\n};\n\nexport const toPostPaymentTemplate = (\n  paymentItem: PaymentDetails\n): PaymentTemplatesPostRequest => {\n  const name = paymentItem[PaymentTemplateFields.templateName];\n  const {\n    paymentType,\n    originatorAccount,\n    instructionPriority,\n    transferTransactionInformation,\n    entryClass,\n    additions,\n  } = toPostRequest(paymentItem);\n\n  return {\n    name,\n    paymentType,\n    originatorAccount,\n    transferTransactionInformation,\n    ...(instructionPriority ? { instructionPriority } : {}),\n    ...(entryClass ? { entryClass } : {}),\n    ...(isObjectTruthy(additions) ? { additions } : {}),\n  };\n};\n\nconst setMainFormDetails = (form: FormGroup, paymentResponse: any) => {\n  const initiator = form.get(PaymentBaseFields.initiator);\n  const counterparty = form.get(PaymentBaseFields.counterparty);\n\n  const remittanceInfo = form.get(PaymentBaseFields.remittanceInfo);\n  const additions = form.get(PaymentBaseFields.additions);\n  const selectPaymentOption = form.get(PaymentOptionFields.selectPaymentOption);\n  const chargeBearer = form.get(PaymentOptionFields.chargeBearer);\n  const defaultAddress = {\n    addressLine1: '',\n    addressLine2: '',\n    streetName: '',\n    postCode: '',\n    town: '',\n    countrySubDivision: '',\n    country: '',\n  };\n\n  const transferTransactionInformation =\n    paymentResponse.transferTransactionInformation || {};\n  const counterpartyAccount =\n    transferTransactionInformation.counterpartyAccount || {};\n  const counterpartyDetails = transferTransactionInformation.counterparty || {};\n  const counterPartyIdentification = counterpartyAccount.identification || {};\n  const counterpartyAddress = isObjectTruthy(counterpartyDetails.postalAddress)\n    ? counterpartyDetails.postalAddress\n    : defaultAddress;\n\n  const originatorAccount = paymentResponse.originatorAccount || {};\n  const instructedAmount =\n    transferTransactionInformation.instructedAmount || {};\n\n  const counterpartyBank =\n    transferTransactionInformation.counterpartyBank || {};\n  const counterpartyBankDetails = {\n    ...counterpartyBank,\n    ...(counterpartyBank.name ? { bankName: counterpartyBank.name } : null),\n    ...{\n      postalAddress: isObjectTruthy(counterpartyBank.postalAddress)\n        ? counterpartyBank.postalAddress\n        : defaultAddress,\n    },\n  };\n\n  const alphabetRegex = /^[a-zA-Z]*$/;\n  const isIbanTransfer =\n    counterPartyIdentification[CounterPartyFields.schemeName] ===\n      SchemeNames.IBAN &&\n    alphabetRegex.test(\n      counterPartyIdentification.identification.substring(0, 2)\n    );\n\n  if (!counterpartyBankDetails.postalAddress.country) {\n    counterpartyBankDetails.postalAddress.country = isIbanTransfer\n      ? counterPartyIdentification.identification.substring(0, 2)\n      : form.get(HiddenFields.defaultCountry)?.value;\n  }\n\n  const correspondentBank =\n    transferTransactionInformation.correspondentBank || {};\n  const correspondentBankDetails = {\n    ...correspondentBank,\n    ...(correspondentBank.name ? { bankName: correspondentBank.name } : null),\n    isCorrespondentBankTransfer: isObjectTruthy(correspondentBank),\n    ...(correspondentBank.bankBranchCode\n      ? { selectAdditionalBankCodeType: 'BRANCH_CODE' }\n      : null),\n    [CounterPartyFields.enableAdditionalBankDetails]:\n      isObjectTruthy(correspondentBank),\n  };\n\n  const intermediaryBank =\n    transferTransactionInformation.intermediaryBank || {};\n  const intermediaryBankDetails = {\n    ...intermediaryBank,\n    ...(intermediaryBank.name ? { bankName: intermediaryBank.name } : null),\n    ...(intermediaryBank.bankBranchCode\n      ? { selectAdditionalBankCodeType: 'BRANCH_CODE' }\n      : null),\n    [CounterPartyFields.enableAdditionalBankDetails]:\n      isObjectTruthy(intermediaryBank),\n  };\n\n  const counterPartyDetails = {\n    [CounterPartyFields.standardEntryClass]: paymentResponse.entryClass,\n    [CounterPartyFields.creditorBank]: counterpartyBankDetails,\n    [CounterPartyFields.correspondentBank]: correspondentBankDetails,\n    [CounterPartyFields.intermediaryBank]: intermediaryBankDetails,\n    [CounterPartyFields.schemeName]: counterPartyIdentification.schemeName,\n    [CounterPartyFields.recipientId]: counterpartyDetails.recipientId,\n    [CounterPartyFields.accountType]: counterpartyAccount.accountType,\n    [CounterPartyFields.accountNumber]:\n      counterPartyIdentification.identification,\n    [CounterPartyFields.name]: counterpartyDetails.name,\n    [CounterPartyFields.postalAddress]: counterpartyAddress,\n    [CounterPartyFields.messageToBank]:\n      transferTransactionInformation.messageToBank || '',\n    [CounterPartyFields.targetCurrency]:\n      transferTransactionInformation.targetCurrency,\n    [CounterPartyFields.remittanceInformation]: transferTransactionInformation\n      .remittanceInformation?.content\n      ? transferTransactionInformation.remittanceInformation?.content\n      : transferTransactionInformation.remittanceInformation || '',\n    [CounterPartyFields.endToEndIdentification]:\n      transferTransactionInformation.endToEndIdentification,\n    [CounterPartyFields.mandateIdentifier]:\n      transferTransactionInformation.mandateIdentifier,\n    [CounterPartyFields.role]: counterpartyDetails.role,\n    [CounterPartyFields.selectedContact]:\n      counterpartyAccount.selectedContact || {},\n    [CounterPartyFields.id]:\n      counterpartyAccount.arrangementId ||\n      counterpartyAccount.externalArrangementId,\n  };\n\n  const initiatorDetails = {\n    [InitiatorFields.id]: originatorAccount.arrangementId,\n    [InitiatorFields.name]: originatorAccount.name,\n    [InitiatorFields.accountNumber]:\n      originatorAccount.identification &&\n      originatorAccount.identification.identification,\n    currency:\n      originatorAccount.currency || paymentResponse.originatorAccountCurrency,\n    balance: originatorAccount.balance,\n  };\n\n  const decimalIndex = instructedAmount.amount?.indexOf('.');\n\n  const purposeOfPayment: PurposeOfPaymentInfo =\n    transferTransactionInformation.purposeOfPayment || {};\n\n  const description = transferTransactionInformation.remittanceInformation\n    ?.content\n    ? transferTransactionInformation.remittanceInformation?.content\n    : transferTransactionInformation.remittanceInformation || '';\n\n  const remittanceInfoDetails = {\n    [RemittanceInfoFields.urgent]:\n      paymentResponse.instructionPriority === 'HIGH',\n    [RemittanceInfoFields.amountCurrencyGroup]: {\n      amount: instructedAmount.amount?.slice(0, decimalIndex + 3),\n      currency: instructedAmount.currencyCode,\n    },\n    [RemittanceInfoFields.paymentReference]:\n      transferTransactionInformation.messageToBank || '',\n    [RemittanceInfoFields.description]:\n      paymentResponse.paymentReference || description,\n    [RemittanceInfoFields.purposeOfPayment]:\n      purposeOfPayment.code || purposeOfPayment.freeText || '',\n  };\n\n  const setValues = (control: AbstractControl | null, obj: BaseObject<any>) => {\n    if (control) {\n      control.patchValue(obj);\n    }\n  };\n  setValues(initiator, initiatorDetails);\n  setValues(counterparty, counterPartyDetails);\n  setValues(remittanceInfo, remittanceInfoDetails);\n  setValues(additions, paymentResponse.additions);\n  selectPaymentOption?.patchValue(\n    `${paymentResponse.paymentType}::${paymentResponse.instructionPriority}`\n  );\n  chargeBearer?.patchValue(transferTransactionInformation.chargeBearer);\n\n  return form;\n};\n\nexport const setFormDetailsFromService = (\n  form: FormGroup,\n  payment: IdentifiedPaymentOrder\n) => {\n  const scheduleControl = form.get(PaymentBaseFields.schedule);\n  const startDateControl = scheduleControl?.get(ScheduleFields.startDate);\n  const isPaymentCopyControl = form.get(HiddenFields.isPaymentCopy);\n\n  if (payment.schedule && !isPaymentCopyControl?.value) {\n    const schedule = payment.schedule;\n    const freqControl = scheduleControl?.get(ScheduleFields.frequency);\n    const endTypeControl = scheduleControl?.get(ScheduleFields.endType);\n    const endDateControl = scheduleControl?.get(ScheduleFields.endDate);\n    const repeatControl = scheduleControl?.get(ScheduleFields.repeat);\n\n    startDateControl?.patchValue(\n      new Date(datePart(schedule.startDate)).toISOString()\n    );\n    freqControl?.patchValue(schedule.transferFrequency);\n    endTypeControl?.patchValue(\n      schedule.repeat\n        ? endTypes.after\n        : schedule.endDate\n        ? endTypes.on\n        : endTypes.never\n    );\n    repeatControl?.patchValue(schedule.repeat || 2);\n    if (schedule.endDate) {\n      startDateControl?.markAsPristine(); // to prevent overwriting endDate with calculated value\n      endDateControl?.patchValue(new Date(schedule.endDate).toISOString());\n    }\n  } else if (!payment.schedule && !isPaymentCopyControl?.value) {\n    startDateControl?.patchValue(\n      new Date(payment.requestedExecutionDate || '').toISOString()\n    );\n  }\n\n  return setMainFormDetails(form, payment);\n};\n\nexport const setFormDetailsFromResponse = (\n  form: FormGroup,\n  paymentResponse: any,\n  { id, name }: Partial<TemplateParams> = {}\n) => {\n  const paymentTemplateName = form.get(PaymentTemplateFields.templateName);\n  const paymentTemplateId = form.get(PaymentTemplateFields.paymentTemplateId);\n\n  paymentTemplateName?.patchValue(name);\n  paymentTemplateId?.patchValue(id);\n\n  return setMainFormDetails(form, paymentResponse);\n};\n\nexport const switchPaymentParties = (\n  paymentData: PaymentDetails\n): PaymentDetails => {\n  const { role } = CounterPartyFields;\n  const { currency } = InitiatorFields;\n  const { initiator, counterparty } = PaymentBaseFields;\n  const { [currency]: currencyValue } = paymentData[initiator];\n\n  const initiatorValue = {\n    ...paymentData[counterparty],\n    ...(currencyValue ? { [currency]: currencyValue } : { [currency]: '' }),\n  };\n  const counterPartyValue = {\n    ...paymentData[initiator],\n    [role]: paymentData[counterparty][role],\n  };\n  return {\n    ...paymentData,\n    [initiator]: initiatorValue,\n    [counterparty]: counterPartyValue,\n  };\n};\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport const updateFreqFieldOptions = (\n  field: PaymentFormFieldConfig,\n  isRecurrent: boolean,\n  widgetOptions: InitiatePaymentOptions\n): PaymentFormFieldConfig => {\n  const options = [...field.options.options];\n  const { isOneOffToRecurrentAllowed, isRecurrentToOneOffAllowed } =\n    widgetOptions;\n  if (isRecurrent && !isRecurrentToOneOffAllowed) {\n    options.shift();\n    field = {\n      ...field,\n      options: { ...field.options, options, defaultValue: options[0].value },\n    };\n  } else if (!isRecurrent && !isOneOffToRecurrentAllowed) {\n    field = { ...field, options: { ...field.options, options: [options[0]] } };\n  }\n\n  return field;\n};\n"]}