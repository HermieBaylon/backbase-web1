{"version":3,"file":"bb-list-payments.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/bb-list-payments-component/bb-list-payments.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/bb-list-payments-component/bb-list-payments.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { BehaviorSubject } from 'rxjs';\nimport { Template } from '../../models';\nimport {\n  IdentifiedPaymentOrder,\n  IdentifiedTransaction,\n  PaymentAction,\n} from '@backbase/data-ang/payment-order';\nimport {\n  canCopyPayment,\n  hasCreatePermission,\n} from '../../helpers/payment-config-helpers';\nimport { PaymentConfigService } from '../../../configs/services/payment-config.service';\nimport { getRelativeDate } from '../../helpers/date-helpers';\nimport { PaymentModeType, PaymentOrder } from '../../models/types';\nimport { AvailableActions } from '../../constants/constants';\n\n@Component({\n  selector: 'bb-list-payments-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'bb-list-payments.component.html',\n})\nexport class PaymentsListComponent {\n  readonly hostRef = this;\n\n  constructor(private readonly paymentConfigService: PaymentConfigService) {}\n\n  /**\n   * Items to be displayed\n   */\n  @Input() items!: PaymentTemplate[] | IdentifiedPaymentOrder[];\n\n  /**\n   * Search term value.\n   */\n  @Input() searchTerm?: string;\n\n  /**\n   * Response error on payment templates list.\n   */\n  @Input() responseError?: BehaviorSubject<any>;\n\n  /**\n   * Flag indicates if the user has delete permission.\n   * Default value is `false`.\n   */\n  @Input() canDelete = false;\n\n  /**\n   * Flag indicates if the user has edit permission.\n   * Default value is `false`.\n   */\n  @Input() canEdit = false;\n\n  /**\n   * Flag indicates whether called from Manage transfers\n   */\n  @Input() isManageTransfersMode = false;\n\n  /**\n   * Number of payment items shown per page.\n   */\n  @Input() size = 0;\n\n  /**\n   * Payment mode\n   * Default is `SINGLE`.\n   */\n  @Input() paymentMode: PaymentModeType = 'SINGLE';\n\n  /**\n   * The flag to denote if it is a debit payment.\n   */\n  @Input() isDebitMode = false;\n\n  /**\n   * Click delete event emitter.\n   */\n  @Output() triggerDeleteTemplate = new EventEmitter<Template>();\n\n  /**\n   * Click template event emitter.\n   */\n  @Output() templateItemClick = new EventEmitter<PaymentTemplate>();\n\n  /**\n   * Select template event emitter\n   */\n  @Output() selectTemplate = new EventEmitter<PaymentTemplate>();\n\n  /**\n   * Edit template event emitter.\n   */\n  @Output() editTemplate = new EventEmitter<Template>();\n\n  /**\n   * Changes will be triggered on paymentItemClick event emit.\n   */\n  @Output() paymentItemClick = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Approval event emitter\n   */\n  @Output() approvePayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Rejection event emitter\n   */\n  @Output() rejectPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Cancel event emitter\n   */\n  @Output() cancelPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Edit event emitter\n   */\n  @Output() editPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Copy payment event emitter\n   */\n  @Output() copyPayment = new EventEmitter<PaymentOrder>();\n\n  /**\n   * Selection set\n   */\n  @Output() selectionSet = new EventEmitter<Set<string>>();\n\n  mapPaymentType(item: PaymentTemplate) {\n    return this.paymentConfigService.mapPaymentType(item);\n  }\n\n  onSelectItem(item: PaymentTemplate) {\n    this.selectTemplate.emit(item);\n  }\n\n  onEditTemplate(template: PaymentTemplate) {\n    this.editTemplate.emit({ ...template, query: this.searchTerm });\n  }\n\n  openDeleteTemplateModal(item: PaymentTemplate) {\n    this.triggerDeleteTemplate.emit({ ...item, query: this.searchTerm });\n  }\n\n  onTemplateClick(template: PaymentTemplate) {\n    this.templateItemClick.emit(template);\n  }\n\n  onPaymentItemClick(paymentItem?: IdentifiedPaymentOrder) {\n    this.paymentItemClick.emit(paymentItem);\n  }\n\n  isApprovalProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(\n      paymentItem?.actions,\n      AvailableActions.APPROVE\n    );\n  }\n\n  onApprovePayment(payment: IdentifiedPaymentOrder, event?: Event) {\n    event?.stopPropagation();\n    if (!this.isApprovalProhibited(payment)) {\n      this.approvePayment.emit(payment);\n    }\n  }\n\n  isRejectionProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.REJECT);\n  }\n\n  onRejectPayment(payment: IdentifiedPaymentOrder, event?: Event) {\n    event?.stopPropagation();\n    if (!this.isRejectionProhibited(payment)) {\n      this.rejectPayment.emit(payment);\n    }\n  }\n\n  onCancelPayment(payment: IdentifiedPaymentOrder) {\n    if (!this.isCancelProhibited(payment)) {\n      this.cancelPayment.emit(payment);\n    }\n  }\n\n  onEditPayment(payment: IdentifiedPaymentOrder) {\n    if (!this.isEditProhibited(payment)) {\n      this.editPayment.emit(payment);\n    }\n  }\n\n  onCopyPayment(payment: IdentifiedPaymentOrder) {\n    if (this.canCopyPayment(payment)) {\n      this.copyPayment.emit({ ...payment, isPaymentCopy: true });\n    }\n  }\n\n  canCopyPayment(payment: IdentifiedPaymentOrder): boolean {\n    return canCopyPayment(payment);\n  }\n\n  isEditProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.EDIT);\n  }\n\n  isCancelProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.CANCEL);\n  }\n\n  hasCreatePermission(item: PaymentTemplate | IdentifiedPaymentOrder): boolean {\n    return hasCreatePermission(item.actions);\n  }\n\n  formatExecutionDate(date: string): string {\n    let result = date;\n\n    if (result === getRelativeDate()) {\n      result = 'today';\n    } else if (result === getRelativeDate(1)) {\n      result = 'tomorrow';\n    }\n\n    return result;\n  }\n\n  stopPropagation(event: Event) {\n    event.stopPropagation();\n  }\n\n  transactionInformation(\n    payment: IdentifiedPaymentOrder | undefined\n  ): IdentifiedTransaction | undefined {\n    return payment?.transferTransactionInformation;\n  }\n\n  private isActionDisabled(\n    actions: Array<PaymentAction> | undefined,\n    actionType: PaymentAction\n  ): boolean {\n    return !actions || actions.indexOf(actionType) === -1;\n  }\n}\n","<div class=\"bb-block bb-block--xl\"></div>\n<div class=\"col-12 bb-list bb-block bb-block--xl px-3\">\n  <div *ngIf=\"items?.length && !responseError\">\n    <div *ngFor=\"let item of items\" class=\"bb-list__item\" tabindex=\"0\">\n      <div\n        (click)=\"\n          isManageTransfersMode || isDebitMode\n            ? onPaymentItemClick(item)\n            : onTemplateClick(item)\n        \"\n      >\n        <div\n          class=\"bb-stack bb-block bb-block--md\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n        >\n          <ng-container>\n            <bb-icon-ui\n              class=\"bb-text-disabled bb-stack__item bb-stack__item--spacing-xl\"\n              name=\"insert-drive-file\"\n            >\n            </bb-icon-ui>\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-text-bold break-word\">\n                {{ item.name }}\n              </div>\n              <div class=\"bb-text-support\" data-role=\"payment-type\">\n                <div #paymentTypeHeading class=\"d-none\" aria-hidden=\"true\">\n                  <ng-container i18n=\"manage-payment-templates.payment-types\">\n                    {item?.details?.paymentType, select, US_FOREIGN_WIRE {US\n                    Foreign Wire Payment} US_FOREIGN_WIRE_ILE {US Foreign Wire\n                    Payment} SEPA_CT_CLOSED {SEPA CT Transfer} SEPA_CT {SEPA CT\n                    Transfer} SEPA_CT_ILE {SEPA CT Transfer}}\n                  </ng-container>\n                </div>\n                {{\n                  mapPaymentType(item)\n                    ? mapPaymentType(item)\n                    : paymentTypeHeading.textContent\n                }}\n              </div>\n            </div>\n          </ng-container>\n\n          <div\n            class=\"bb-stack__item bb-stack__item--push-right\"\n            *ngIf=\"\n              hasCreatePermission(item) &&\n              !(isManageTransfersMode || isDebitMode)\n            \"\n          >\n            <div class=\"bb-stack\">\n              <button\n                bbButton\n                class=\"bb-stack__item\"\n                buttonSize=\"md\"\n                color=\"unstyled\"\n                aria-label=\"Create payment\"\n                i18n-aria-label=\"\n                  Button for create payment from\n                  template@@manage-payment-templates.create-payment.button\"\n                data-role=\"create-payment-button\"\n                bbTooltip=\"Create new payment from this template\"\n                triggers=\"hover focus\"\n                i18n-bbTooltip=\"\n                  Tooltip for create payment from\n                  template@@manage-payment-templates.create-payment.tooltip\"\n                (click)=\"stopPropagation($event); onSelectItem(item)\"\n              >\n                <bb-icon-ui name=\"payments\" class=\"bb-stack__item\">\n                </bb-icon-ui>\n              </button>\n\n              <ng-container *ngIf=\"!(isManageTransfersMode || isDebitMode)\">\n                <span\n                  class=\"sr-only\"\n                  i18n=\"@@manage-transfers.bb-list-templates.more-actions\"\n                  >More actions</span\n                >\n                <bb-dropdown-menu-ui\n                  class=\"bb-button-bar__button\"\n                  btnColor=\"unstyled\"\n                  btnCircle=\"true\"\n                  container=\"body\"\n                  data-role=\"more-options\"\n                  ariaLabel=\"More actions\"\n                  i18n-ariaLabel=\"\n                    @@manage-templates.bb-list-payments.more-actions.label\"\n                  (bbKeyboardClick)=\"$event.stopPropagation()\"\n                  *ngIf=\"canDelete || canEdit\"\n                >\n                  <ng-template bbDropdownLabel>\n                    <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n                  </ng-template>\n                  <ng-template bbDropdownMenuItem>\n                    <button\n                      *ngIf=\"canEdit\"\n                      role=\"menuitem\"\n                      type=\"button\"\n                      class=\"dropdown-item\"\n                      (bbKeyboardClick)=\"onEditTemplate(item)\"\n                      i18n=\"manage-payment-templates.edit.template\"\n                      data-role=\"edit-template-dropdown-item\"\n                    >\n                      Edit\n                    </button>\n                    <button\n                      *ngIf=\"canDelete\"\n                      [attr.aria-label]=\"'Delete ' + item.name\"\n                      role=\"menuitem\"\n                      type=\"button\"\n                      class=\"dropdown-item\"\n                      (bbKeyboardClick)=\"openDeleteTemplateModal(item)\"\n                      i18n=\"manage-payment-templates.remove.account\"\n                      data-role=\"delete-template-dropdown\"\n                    >\n                      Delete\n                    </button>\n                  </ng-template>\n                </bb-dropdown-menu-ui>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-stack bb-block bb-block--md\">\n          <div class=\"bb-stack__item bb-stack__item--spacing-md bb-text-bold\">\n            From\n          </div>\n          <div class=\"bb-stack__item\">\n            <div data-role=\"payment-debitor-name\" class=\"break-word\">\n              {{\n                isDebitMode ||\n                transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                  ? transactionInformation(item)?.counterparty?.name\n                  : isManageTransfersMode\n                  ? item.originator?.name\n                  : item.details.originatorAccount.name\n              }}\n            </div>\n            <div\n              class=\"bb-text-support break-word\"\n              data-role=\"payment-debitor-account\"\n            >\n              {{\n                isDebitMode ||\n                transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                  ? (transactionInformation(item)?.counterpartyAccount\n                      ?.identification | accountFormatter)\n                  : isManageTransfersMode\n                  ? (item.originatorAccount?.identification | accountFormatter)\n                  : (item.details.originatorAccount.identification\n                    | accountFormatter)\n              }}\n            </div>\n          </div>\n          <ng-container *ngIf=\"isManageTransfersMode || isDebitMode\">\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <div class=\"bb-stack\">\n                <bb-payord-status-badge\n                  class=\"d-md-none\"\n                  [status]=\"item.status\"\n                ></bb-payord-status-badge>\n\n                <span\n                  class=\"sr-only\"\n                  i18n=\"@@manage-transfers.bb-list-payments.more-actions\"\n                  >More actions</span\n                >\n                <bb-dropdown-menu-ui\n                  class=\"bb-button-bar__button\"\n                  btnColor=\"unstyled\"\n                  btnCircle=\"true\"\n                  container=\"body\"\n                  data-role=\"more-options\"\n                  (bbKeyboardClick)=\"$event.stopPropagation()\"\n                  i18n-ariaLabel=\"\n                    @@manage-transfers.bb-list-payments.more-actions.label\"\n                >\n                  <ng-template bbDropdownLabel>\n                    <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n                  </ng-template>\n                  <ng-template bbDropdownMenuItem>\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      *ngIf=\"!isApprovalProhibited(item)\"\n                      (bbKeyboardClick)=\"onApprovePayment(item, $event)\"\n                      i18n=\"\n                        Approve payment|Approve selected\n                        payment@@manage-payments.payment.list.action.approve\"\n                    >\n                      Approve\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      *ngIf=\"!isRejectionProhibited(item)\"\n                      (bbKeyboardClick)=\"onRejectPayment(item, $event)\"\n                      i18n=\"\n                        Reject payment|Reject selected\n                        payment@@manage-payments.payment.list.action.reject\"\n                    >\n                      Reject\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      *ngIf=\"canCopyPayment(item)\"\n                      (bbKeyboardClick)=\"onCopyPayment(item)\"\n                      i18n=\"\n                        copy payment|transfer selected\n                        payment@@manage-payments.payment.list.action.transfer\"\n                    >\n                      Transfer\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      data-role=\"edit-payment-order-dropdown\"\n                      i18n=\"@@manage-payments.payment.list.action.edit\"\n                      *ngIf=\"!isEditProhibited(item)\"\n                      (bbKeyboardClick)=\"onEditPayment(item)\"\n                    >\n                      Edit\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      triggers=\"hover\"\n                      placement=\"left\"\n                      class=\"dropdown-item\"\n                      (bbKeyboardClick)=\"onCancelPayment(item)\"\n                      [class.disabled]=\"isCancelProhibited(item)\"\n                      [bbTooltip]=\"\n                        isCancelProhibited(item) && actionNotAvailable\n                      \"\n                      i18n=\"\n                        cancel payment|cancel selected\n                        payment@@manage-payments.payment.list.action.cancel\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      data-role=\"export-payment-order-dropdown\"\n                      i18n=\"@@manage-payments.payment.list.action.export-pdf\"\n                      *ngIf=\"item.permissibleActions?.export\"\n                      [bbExportPdf]=\"item.id\"\n                    >\n                      Export PDF\n                    </button>\n                  </ng-template>\n                </bb-dropdown-menu-ui>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n\n        <div class=\"bb-stack bb-block bb-block--md\">\n          <div class=\"bb-stack__item bb-stack__item--spacing-xl bb-text-bold\">\n            To\n          </div>\n          <div class=\"bb-stack__item\">\n            <div data-role=\"payment-creditor-name\" class=\"break-word\">\n              {{\n                isDebitMode ||\n                transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                  ? item.originator?.name\n                  : isManageTransfersMode\n                  ? transactionInformation(item)?.counterparty?.name\n                  : item.details.transferTransactionInformation.counterparty\n                      .name\n              }}\n            </div>\n            <div\n              class=\"bb-text-support break-word\"\n              data-role=\"payment-creditor-account\"\n            >\n              {{\n                isDebitMode ||\n                transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                  ? (item.originatorAccount?.identification | accountFormatter)\n                  : isManageTransfersMode\n                  ? (transactionInformation(item)?.counterpartyAccount\n                      ?.identification | accountFormatter)\n                  : (item.details.transferTransactionInformation\n                      .counterpartyAccount.identification | accountFormatter)\n              }}\n            </div>\n          </div>\n          <div\n            class=\"bb-stack__item bb-stack__item--push-right\"\n            *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n          >\n            <bb-amount-ui\n              [amount]=\"\n                item.details.transferTransactionInformation.instructedAmount\n                  .amount\n              \"\n              [currency]=\"\n                item.details.transferTransactionInformation.instructedAmount\n                  .currencyCode\n              \"\n              [mapCurrency]=\"false\"\n            ></bb-amount-ui>\n          </div>\n        </div>\n\n        <div\n          class=\"bb-stack bb-block bb-block--md\"\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n        >\n          <div class=\"bb-stack__item bb-stack__item--spacing-xl bb-text-bold\">\n            Exec. date\n          </div>\n          <div class=\"bb-stack__item\">\n            <div\n              data-role=\"payment-exec-date\"\n              *ngIf=\"item.schedule?.nextExecutionDate\"\n              i18n=\"@@manage-payments.payment.list.execution-date-value\"\n            >\n              {formatExecutionDate(item.schedule?.nextExecutionDate), select,\n              today {Today} tomorrow {Tomorrow} other\n              {{{ item.schedule?.nextExecutionDate | date:'shortDate'}}} }\n            </div>\n            <div *ngIf=\"!item.schedule?.nextExecutionDate\">\n              {{ item.requestedExecutionDate | date: 'shortDate' }}\n            </div>\n          </div>\n          <div class=\"bb-stack__item bb-stack__item--push-right\">\n            <bb-amount-ui\n              [amount]=\"\n                item.transferTransactionInformation?.instructedAmount.amount\n              \"\n              [currency]=\"\n                item.transferTransactionInformation?.instructedAmount\n                  .currencyCode\n              \"\n              [mapCurrency]=\"false\"\n            ></bb-amount-ui>\n          </div>\n        </div>\n        <div\n          class=\"bb-stack\"\n          *ngIf=\"\n            (paymentMode === 'RECURRING' || paymentMode === 'ALL') &&\n            (isManageTransfersMode || isDebitMode)\n          \"\n        >\n          <div class=\"bb-stack__item bb-stack__item--spacing-xl bb-text-bold\">\n            Frequency\n          </div>\n          <div class=\"bb-stack__item\">\n            <div\n              data-role=\"payment-frequency\"\n              i18n=\"@@manage-payments.payment.list.frequency-value\"\n            >\n              {item.schedule?.transferFrequency, select, DAILY {Daily} WEEKLY\n              {Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY {Yearly}\n              other {{{item.schedule?.transferFrequency | titlecase}}}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #actionNotAvailable>\n  <span i18n=\"@@manage-payments.action.not.available\">Not available</span>\n</ng-template>\n"]}