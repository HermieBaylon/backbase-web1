{"version":3,"file":"select-purpose-dropdown.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/select-purpose-dropdown/select-purpose-dropdown.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/select-purpose-dropdown/select-purpose-dropdown.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n} from '@angular/core';\nimport {\n  FormControl,\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { PurposeOfPayment } from '@backbase/data-ang/payment-order-options';\n\n@Component({\n  selector: 'bb-select-purpose-dropdown',\n  templateUrl: './select-purpose-dropdown.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectPurposeDropdownComponent),\n    },\n  ],\n})\nexport class SelectPurposeDropdownComponent implements ControlValueAccessor {\n  _purposes!: Array<PurposeOfPayment>;\n  search = new FormControl();\n  purposeEntries!: Array<[string, string]>;\n  filteredPurposes: Array<PurposeOfPayment> = [];\n\n  /**\n   * Description length to show tooltip along\n   */\n  @Input() longDescription = 150;\n  /**\n   * Array of country iso codes\n   */\n  @Input() set purposes(purposes: Array<PurposeOfPayment>) {\n    this._purposes = purposes || [];\n    this.setupPurposes();\n  }\n  /**\n   * Field options\n   */\n  @Input() isOptional?: boolean;\n  /**\n   * Selected purpose\n   */\n  @Input() selectedPurpose?: string;\n  /**\n   * Helper text for the component. Defaults to empty string.\n   */\n  @Input() helperText = '';\n  /**\n   * Placeholder text. Defaults to empty string.\n   */\n  @Input() placeholder = '';\n  /**\n   * Label of the component. Defaults to empty string.\n   */\n  @Input() label = '';\n  /**\n   * Placeholder fot search. Defaults to empty string.\n   */\n  @Input() searchPlaceholder = '';\n  /**\n   * Icon for the dropdown. Defaults to `toggle-down`\n   */\n  @Input() dropdownIcon = 'toggle-down';\n  /**\n   * Emits value when a country is selected\n   */\n  @Output() selectPurpose = new EventEmitter<string>();\n\n  getSelectedPurposeFull(purposeCode: string): PurposeOfPayment {\n    return (\n      this._purposes.find(\n        (item: PurposeOfPayment) => item?.code === purposeCode\n      ) || {\n        code: purposeCode,\n        description: '',\n      }\n    );\n  }\n\n  setupPurposes() {\n    this.purposeEntries = this._purposes.map((purpose: PurposeOfPayment) => [\n      purpose.code,\n      purpose.description,\n    ]);\n    this.filteredPurposes = [...this._purposes];\n  }\n\n  selectItem(purpose: PurposeOfPayment) {\n    this.selectedPurpose = purpose.code;\n    this.selectPurpose.emit(purpose.code);\n    if (this.search.value) {\n      this.search.reset();\n    }\n  }\n\n  handleSearch(query = '') {\n    if (query) {\n      this.filteredPurposes = this.purposeEntries.reduce(\n        (acc: Array<PurposeOfPayment>, [code, description]) => {\n          if (\n            code.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) > -1 ||\n            description.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) >\n              -1\n          ) {\n            acc.push({ code, description });\n          }\n          return acc;\n        },\n        []\n      );\n    } else {\n      this.filteredPurposes = this._purposes;\n    }\n  }\n\n  onChange() {}\n  onTouched() {}\n  writeValue(): void {}\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","<div\n  class=\"bb-dynamic-input bb-select-purpose-dropdown\"\n  ngbDropdown\n  #dropdown=\"ngbDropdown\"\n  display=\"static\"\n>\n  <div class=\"d-inline-block bb-label\" (click)=\"btn.focus()\" *ngIf=\"label\">\n    {{ label }}\n  </div>\n  <span\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    *ngIf=\"isOptional && helperText\"\n    [id]=\"searchElem?.id + '__helper-text'\"\n    [textContent]=\"helperText\"\n  >\n  </span>\n  <div>\n    <button\n      #btn\n      bbButton\n      ngbDropdownToggle\n      color=\"unstyled\"\n      (blur)=\"onTouched()\"\n      data-role=\"open-purpose-dropdown-list-button\"\n      [attr.aria-label]=\"label\"\n      class=\"bb-select-purpose-dropdown__toggle form-control w-100 pr-5 d-flex justify-content-between bb-text-support\"\n    >\n      <ng-container *ngIf=\"selectedPurpose\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            selectedPurposeTmpl;\n            context: { $implicit: getSelectedPurposeFull(selectedPurpose) }\n          \"\n        ></ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!selectedPurpose\">\n        <ng-container\n          *ngIf=\"placeholder; else defaultPlaceHolder\"\n        ></ng-container>\n        {{ placeholder }}\n      </ng-container>\n      <bb-icon-ui [name]=\"dropdownIcon || 'toggle-down'\"></bb-icon-ui>\n    </button>\n  </div>\n\n  <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right w-100\">\n    <div class=\"bb-block bb-block--md px-3\">\n      <bb-search-box-ui\n        (focus)=\"dropdown.open()\"\n        [formControl]=\"search\"\n        (clear)=\"handleSearch('')\"\n        data-role=\"purpose-search\"\n        (ngModelChange)=\"handleSearch(search.value)\"\n        [placeholder]=\"searchPlaceholder || 'Search'\"\n        [showSearch]=\"true\"\n        [showClear]=\"true\"\n        [autocomplete]=\"'off'\"\n        #searchElem\n      >\n      </bb-search-box-ui>\n    </div>\n\n    <bb-payments-sr-search-result-info [totalNumber]=\"filteredPurposes?.length\">\n    </bb-payments-sr-search-result-info>\n\n    <div\n      *ngIf=\"filteredPurposes?.length\"\n      class=\"pre-scrollable\"\n      data-role=\"list-pop-values\"\n    >\n      <button\n        *ngFor=\"let purpose of filteredPurposes\"\n        role=\"menuitem\"\n        type=\"button\"\n        class=\"d-sm-flex px-3 py-2 d-flex-row align-items-center btn--unstyled\"\n        (bbKeyboardClick)=\"selectItem(purpose)\"\n        ngbDropdownItem\n      >\n        <ng-container\n          *ngTemplateOutlet=\"\n            purpose?.description?.length < longDescription\n              ? purposeTmpl\n              : purposeTmplLong;\n            context: { $implicit: purpose }\n          \"\n        ></ng-container>\n      </button>\n    </div>\n    <ng-container *ngIf=\"!filteredPurposes?.length && search?.value\">\n      <ng-container *ngTemplateOutlet=\"emptySearch\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"!filteredPurposes?.length && !search?.value\">\n      <ng-container *ngTemplateOutlet=\"empty\"></ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template let-purpose #purposeTmplLong>\n  <div\n    class=\"d-flex justify-content-between align-items-center w-100\"\n    data-role=\"long-pop-desc\"\n  >\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--align-top\">\n        {{ purpose.code }}\n      </div>\n      <div\n        class=\"bb-stack__item bb-text-support bb-product-selector__item-content\"\n        [bbTooltip]=\"tipContent\"\n        placement=\"right\"\n        [triggers]=\"'hover'\"\n        [container]=\"'body'\"\n      >\n        <bb-ellipsis-ui [lineClamp]=\"5\">{{\n          purpose.description\n        }}</bb-ellipsis-ui>\n      </div>\n    </div>\n  </div>\n  <ng-template #tipContent\n    ><div class=\"bb-text-align-left\">\n      {{ purpose.description }}\n    </div></ng-template\n  >\n</ng-template>\n\n<ng-template let-purpose #purposeTmpl>\n  <div\n    class=\"d-flex justify-content-between align-items-center w-100\"\n    data-role=\"short-pop-desc\"\n  >\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--align-top\">\n        {{ purpose.code }}\n      </div>\n      <div\n        class=\"bb-stack__item bb-text-support bb-product-selector__item-content\"\n      >\n        {{ purpose.description }}\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template let-purpose #selectedPurposeTmpl>\n  <div class=\"d-flex justify-content-between align-items-center w-100\">\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--align-top\">\n        {{ purpose.code }}\n      </div>\n      <div\n        class=\"bb-stack__item bb-text-support bb-ellipsis bb-ellipsis--single-line\"\n        [bbTooltip]=\"tipContent\"\n        placement=\"bottom\"\n        [triggers]=\"'hover'\"\n        data-role=\"pop-description\"\n      >\n        {{ purpose.description }}\n      </div>\n    </div>\n  </div>\n  <ng-template #tipContent\n    ><div class=\"bb-text-align-left\">\n      {{ purpose.description }}\n    </div></ng-template\n  >\n</ng-template>\n\n<ng-template #emptySearch>\n  <div class=\"card-body\">\n    <bb-empty-state-ui\n      data-role=\"no-templates-found\"\n      title=\"No search results\"\n      i18n-title=\"@@bb-select-purpose-dropdown.empty-state-title\"\n      [showIcon]=\"false\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n\n<ng-template #empty>\n  <div class=\"card-body\">\n    <bb-empty-state-ui\n      data-role=\"no-templates-provided\"\n      title=\"No Purposes Provided\"\n      i18n-title=\"@@bb-select-purpose-dropdown.empty-title\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n\n<ng-template #defaultPlaceHolder>\n  <ng-container i18n=\"@@purpose-selector-default-placeholder\"\n    >- select a purpose -</ng-container\n  >\n</ng-template>\n"]}