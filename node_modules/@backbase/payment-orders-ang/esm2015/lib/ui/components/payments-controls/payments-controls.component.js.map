{"version":3,"file":"payments-controls.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/payments-controls/payments-controls.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/payments-controls/payments-controls.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { PaymentsControlsModel } from '../../models/payments-controls.model';\nimport { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Status } from '../../constants';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-payments-controls',\n  templateUrl: 'payments-controls.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentsControlsComponent implements OnDestroy {\n  /**\n   * Time between each search requests sent by Batch manager (in milliseconds).\n   * Configurable via model property.\n   */\n  @Input() debounceTime: number | undefined;\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * Reference to Status enum\n   */\n  readonly statusesMap = Status;\n  /**\n   * EventEmitter for triggering a filter action.\n   */\n  @Output() readonly applyFilter = new EventEmitter<PaymentsControlsModel>();\n\n  /**\n   * Subject will emit when searchbox from payment-search input changes\n   */\n  private search$ = new BehaviorSubject<string>('');\n\n  /**\n   * Subject that will emit when filters from payments-filter are modified\n   */\n  private filters$ = new BehaviorSubject<\n    Pick<PaymentsControlsModel, 'executionDate' | 'status' | 'amount'>\n  >({\n    executionDate: {},\n    status: [],\n    amount: {},\n  });\n\n  /**\n   * Whether the filter form is shown.\n   */\n  public isFilterOpen = false;\n\n  /**\n   * Whether a filter is applied on the transactions.\n   */\n  public isFilterApplied = false;\n\n  public filterParams$ = new Subject<PaymentsControlsModel>();\n\n  /**\n   * destroy$ should emit only when component is destroyed to\n   * signal subscriptions to unsubscribe.\n   */\n  readonly destroy$ = new Subject();\n\n  constructor() {\n    /**\n     * Subscription will emit for the search to be triggered\n     */\n    combineLatest([this.search$, this.filters$])\n      .pipe(takeUntil(this.destroy$), distinctUntilChanged())\n      .subscribe(([query, filterObject]) => {\n        const retVal: PaymentsControlsModel = {\n          query,\n          ...filterObject,\n        };\n\n        this.applyFilter.emit(retVal);\n      });\n  }\n\n  /**\n   * Search event callback\n   */\n  public onSearch(searchParam: string): void {\n    this.search$.next(searchParam);\n  }\n\n  /**\n   * Filter event callback\n   */\n  public onFilter(\n    filterParams: Pick<\n      PaymentsControlsModel,\n      'executionDate' | 'status' | 'amount'\n    >\n  ): void {\n    this.filters$.next(filterParams);\n    this.isFilterApplied = true;\n  }\n\n  /**\n   * Close event callback to hide the filters controls\n   */\n  public onClose(): void {\n    this.isFilterOpen = false;\n  }\n\n  /**\n   * Toogle method to hide or show the filter form\n   */\n  public toggleFilter(): void {\n    this.isFilterOpen = !this.isFilterOpen;\n  }\n\n  /**\n   * Handle effects when filter is reset\n   */\n  public onFilterReset(event: boolean): void {\n    this.isFilterApplied = event;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.filterParams$.complete();\n    this.search$.complete();\n    this.filters$.complete();\n  }\n}\n\n@Directive({\n  selector: '[bbPaymentsControlsCustomizable]',\n})\nexport class PaymentsControlsCustomizableDirective extends BbTemplate<\n  PaymentsControlsComponent,\n  undefined\n> {}\n","<ng-container\n  bbPaymentsControlsCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template bbPaymentsControlsCustomizable let-hostRef>\n  <div (keydown)=\"$event?.stopPropagation()\">\n    <div class=\"bb-block\" [ngClass]=\"{ 'bb-block--md': hostRef.isFilterOpen }\">\n      <div class=\"bb-stack\">\n        <!-- Search -->\n        <div class=\"bb-stack__item bb-stack__item--fill--lg-down\">\n          <bb-payments-search\n            [debounceTime]=\"hostRef.debounceTime\"\n            (search)=\"hostRef.onSearch($event)\"\n            data-role=\"searchbox\"\n          >\n          </bb-payments-search>\n        </div>\n        <div class=\"bb-stack__item d-none d-xl-block\">\n          <!-- Filter button -->\n          <button\n            bbButton\n            [color]=\"hostRef.isFilterApplied ? 'primary' : 'secondary'\"\n            aria-label=\"Toggle filter\"\n            [attr.aria-expanded]=\"hostRef.isFilterOpen\"\n            i18n-aria-label=\"\n              Filter payments@@payments.ariaLabel.filter.big.button\"\n            (click)=\"hostRef.toggleFilter()\"\n            [attr.data-role]=\"'btn-filter'\"\n          >\n            <bb-icon-ui name=\"filter\"></bb-icon-ui>\n            <ng-container\n              *ngIf=\"!hostRef.isFilterApplied\"\n              i18n=\"Filter toggle button@@transactions.filter.button\"\n            >\n              Filter\n            </ng-container>\n            <ng-container\n              *ngIf=\"hostRef.isFilterApplied\"\n              i18n=\"Filter toggle button@@transactions.filtersApplied.button\"\n            >\n              Filters applied\n            </ng-container>\n          </button>\n        </div>\n        <div class=\"bb-stack__item bb-stack__item--push-right d-xl-none\">\n          <button\n            bbButton\n            [color]=\"hostRef.isFilterApplied ? 'primary' : 'secondary'\"\n            circle=\"true\"\n            aria-label=\"Toggle filter\"\n            i18n-aria-label=\"\n              Filter payments@@payments.ariaLabel.filter.small.button\"\n            (click)=\"hostRef.toggleFilter()\"\n            [attr.data-role]=\"'btn-filter'\"\n          >\n            <bb-icon-ui name=\"filter\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n    </div>\n    <bb-payments-filter\n      [statusBlackList]=\"[hostRef.statusesMap.CANCELLATION_PENDING]\"\n      (filter)=\"hostRef.onFilter($event)\"\n      (isFilterApplied)=\"hostRef.onFilterReset($event)\"\n      (closeFilter)=\"hostRef.onClose()\"\n      (reset)=\"hostRef.onFilter($event)\"\n      [hidden]=\"!hostRef.isFilterOpen\"\n    >\n    </bb-payments-filter>\n  </div>\n</ng-template>\n"]}