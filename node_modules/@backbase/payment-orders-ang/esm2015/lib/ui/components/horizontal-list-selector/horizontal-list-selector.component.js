import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/ellipsis";
import * as i2 from "@angular/common";
import * as i3 from "@backbase/ui-ang/button";
import * as i4 from "@backbase/ui-ang/keyboard-click-directive";
export const ModalContainerParamName = 'modalOpened';
export class HorizontalListSelectorComponent {
    constructor() {
        /**
         * List items
         */
        this.options = [];
        /**
         * Flag to denote if the list is preselected. Defaults to true.
         */
        this.preselect = true;
        /**
         * Event emitted on select of an item
         */
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.select = new EventEmitter();
    }
    ngOnInit() {
        var _a;
        if (this.preselect && !this.activeItem) {
            this.select.emit((_a = this.options[0]) === null || _a === void 0 ? void 0 : _a.value);
        }
    }
    onSelect(value) {
        this.select.emit(value);
    }
}
/** @nocollapse */ HorizontalListSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: HorizontalListSelectorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ HorizontalListSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: HorizontalListSelectorComponent, selector: "bb-horizontal-list-selector", inputs: { options: "options", activeItem: "activeItem", preselect: "preselect" }, outputs: { select: "select" }, ngImport: i0, template: `
    <div class="bb-horizontal-list-selector" role="tablist">
      <ng-container *ngFor="let option of options">
        <button
          class="bb-horizontal-list-selector__item"
          bbButton
          color="unstyled"
          role="tab"
          [attr.aria-selected]="activeItem === option.value"
          [attr.aria-controls]="option.value"
          [ngClass]="{
            'bb-horizontal-list-selector__item--active':
              activeItem === option.value
          }"
          (bbKeyboardClick)="onSelect(option.value)"
        >
          <div #elem>
            {{ option.label }}
          </div>
          <div
            class="bb-subheader bb-subheader--regular text-wrap"
            *ngIf="option.description"
            [style.width.px]="elem.offsetWidth"
          >
            <bb-ellipsis-ui
              [text]="option.description"
              tooltipTriggers="hover"
              [lineClamp]="2"
              class="bb-subheader bb-subheader--regular"
            ></bb-ellipsis-ui>
          </div>
        </button>
      </ng-container>
    </div>
  `, isInline: true, components: [{ type: i1.EllipsisComponent, selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.KeyboardClickDirective, selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: HorizontalListSelectorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-horizontal-list-selector',
                    template: `
    <div class="bb-horizontal-list-selector" role="tablist">
      <ng-container *ngFor="let option of options">
        <button
          class="bb-horizontal-list-selector__item"
          bbButton
          color="unstyled"
          role="tab"
          [attr.aria-selected]="activeItem === option.value"
          [attr.aria-controls]="option.value"
          [ngClass]="{
            'bb-horizontal-list-selector__item--active':
              activeItem === option.value
          }"
          (bbKeyboardClick)="onSelect(option.value)"
        >
          <div #elem>
            {{ option.label }}
          </div>
          <div
            class="bb-subheader bb-subheader--regular text-wrap"
            *ngIf="option.description"
            [style.width.px]="elem.offsetWidth"
          >
            <bb-ellipsis-ui
              [text]="option.description"
              tooltipTriggers="hover"
              [lineClamp]="2"
              class="bb-subheader bb-subheader--regular"
            ></bb-ellipsis-ui>
          </div>
        </button>
      </ng-container>
    </div>
  `,
                }]
        }], propDecorators: { options: [{
                type: Input
            }], activeItem: [{
                type: Input
            }], preselect: [{
                type: Input
            }], select: [{
                type: Output
            }] } });
//# sourceMappingURL=horizontal-list-selector.component.js.map