import { Input, Component, Output, EventEmitter, ChangeDetectionStrategy, } from '@angular/core';
import { PaymentBaseFields } from '../../../configs/models/form-item-names.model';
import { BreachedLimitType, BreachType, Period, } from '../../constants/constants';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/modal";
import * as i2 from "@backbase/ui-ang/icon";
import * as i3 from "@backbase/ui-ang/amount";
import * as i4 from "@angular/common";
export class BreachLimitDetailsModalComponent {
    constructor() {
        /**
         * The flag that controls visibility of the breach limit report.
         * By default is `false`.
         */
        this.isOpen = false;
        /**
         * Event emitted when user clicks on close icon.
         */
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.close = new EventEmitter();
    }
    get breachReportCurrency() {
        var _a, _b, _c;
        return (_c = (_b = (_a = this.error) === null || _a === void 0 ? void 0 : _a.breachReport) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.currency;
    }
    normalizeBreachReportPeriod(breachReportInfo) {
        return breachReportInfo.timeframe
            ? Object.assign(Object.assign({}, breachReportInfo), { timeframe: Object.assign(Object.assign({}, breachReportInfo.timeframe), { period: breachReportInfo.timeframe.period.toUpperCase() }) }) : breachReportInfo;
    }
    flattenBreachReports() {
        if (!this.error || !this.error.breachReport) {
            return [];
        }
        return this.error.breachReport
            .map((report) => report.breachInfo)
            .reduce((prev, current) => prev.concat(...current.map(this.normalizeBreachReportPeriod)), []);
    }
    compareByPeriod(left, right) {
        var _a, _b;
        const leftPeriod = (_a = left.timeframe) === null || _a === void 0 ? void 0 : _a.period;
        const rightPeriod = (_b = right.timeframe) === null || _b === void 0 ? void 0 : _b.period;
        return (Period[leftPeriod] - Period[rightPeriod]);
    }
    get sortedBreaches() {
        const limits = this.flattenBreachReports();
        const transactional = limits.filter((limit, index) => {
            const isTransactional = limit.breachedLimitType === BreachedLimitType.TRANSACTIONAL;
            const hasPeriodicThreshold = limit.breachType === BreachType.THRESHOLD &&
                limit.breachedLimitType === BreachedLimitType.PERIODIC;
            if (isTransactional || hasPeriodicThreshold) {
                limits.splice(index, 1);
            }
            return isTransactional;
        });
        return [...transactional, ...limits.sort(this.compareByPeriod)];
    }
    onClose() {
        this.close.emit();
    }
    print() {
        window.print();
    }
}
/** @nocollapse */ BreachLimitDetailsModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BreachLimitDetailsModalComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ BreachLimitDetailsModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BreachLimitDetailsModalComponent, selector: "bb-breach-limit-details", inputs: { paymentDetails: "paymentDetails", error: "error", isOpen: "isOpen" }, outputs: { close: "close" }, ngImport: i0, template: "<bb-modal-ui [isOpen]=\"isOpen\" (cancel)=\"onClose()\" (confirm)=\"onClose()\">\n  <bb-modal-header-ui role=\"heading\">\n    <ng-template bbCustomModalHeader>\n      <header\n        class=\"bb-stack bb-stack__item--fill\"\n        aria-labelledby=\"headerTitle\"\n      >\n        <bb-icon-ui\n          color=\"danger\"\n          name=\"error-outline\"\n          class=\"bb-stack__item bb-stack__item--spacing-sm\"\n        ></bb-icon-ui>\n\n        <span\n          id=\"headerTitle\"\n          class=\"bb-stack__item highlight text-large\"\n          data-role=\"limit-breach-modal-title\"\n          aria-label=\"Limits breach\"\n          i18n-aria-label=\"@bb-payord-breach-limit-modal-title\"\n        >\n          Limits breach\n        </span>\n        <div class=\"bb-stack__item bb-stack__item--push-right\">\n          <button\n            (click)=\"print()\"\n            type=\"button\"\n            class=\"bb-stack__item btn border-0 btn-circle\"\n          >\n            <!-- ACCESSIBILITY compliance: The style attributes' content is needed for NVDA to read content on hover -->\n            <span\n              class=\"sr-only\"\n              aria-label=\"Print breach limit report\"\n              i18n-aria-label=\"@bb-payord-breach-limit-print-action-aria-label\"\n              style=\"min-width: 10px; min-height: 10px\"\n            >\n              Print breach limit report\n            </span>\n            <bb-icon-ui name=\"print\"></bb-icon-ui>\n          </button>\n          <button\n            (click)=\"onClose()\"\n            type=\"button\"\n            class=\"bb-stack__item btn border-0 btn-circle\"\n          >\n            <span\n              class=\"sr-only\"\n              aria-label=\"Close breach limit report dialog\"\n              i18n-aria-label=\"@bb-payord-breach-limit-close-action-aria-label\"\n              style=\"min-width: 10px; min-height: 10px\"\n            >\n              Close breach limit report dialog\n            </span>\n            <bb-icon-ui name=\"clear\"></bb-icon-ui>\n          </button>\n        </div>\n      </header>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui role=\"main\">\n    <ng-template bbCustomModalBody>\n      <div\n        class=\"bb-block bb-block--lg\"\n        i18n=\"@bb-payord-breach-limit-details-heading\"\n        data-role=\"limit-breach-modal-message\"\n      >\n        Payment could not be submitted due to a limit breach. See details below:\n      </div>\n\n      <div class=\"table-responsive\">\n        <table class=\"table table-hover\">\n          <thead class=\"bb-table__head--highlight\">\n            <tr>\n              <th scope=\"col\" class=\"bb-table--text-start\"></th>\n              <th\n                scope=\"col\"\n                class=\"bb-table--text-end\"\n                data-role=\"breach-currency\"\n              >\n                <ng-container\n                  i18n=\"\n                    @bb-payord-breach-limit-details-breach-currency-table-heading\n                  \"\n                  >Limit</ng-container\n                >\n                <ng-container *ngIf=\"breachReportCurrency\"\n                  >({{ breachReportCurrency }})</ng-container\n                >\n              </th>\n              <th\n                scope=\"col\"\n                class=\"bb-table--text-end\"\n                i18n=\"@bb-payord-breach-limit-details-consumed-table-heading\"\n              >\n                Consumed\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              *ngFor=\"let breachInfo of sortedBreaches\"\n              data-role=\"limit-breach\"\n            >\n              <td class=\"bb-table--text-start\" data-role=\"limit-type\">\n                <span\n                  class=\"highlight\"\n                  *ngIf=\"breachInfo.breachedLimitType === 'TRANSACTIONAL'\"\n                  i18n=\"@bb-payord-breach-limit-details-per-transaction-label\"\n                >\n                  Per transaction\n                </span>\n                <ng-container\n                  *ngIf=\"breachInfo.breachedLimitType !== 'TRANSACTIONAL'\"\n                >\n                  <span\n                    class=\"highlight\"\n                    i18n=\"@bb-payord-breach-limit-details-time-frame\"\n                  >\n                    {breachInfo.timeframe.period, select, DAILY {Daily} WEEKLY\n                    {Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY\n                    {Yearly} other\n                    {{{breachInfo.timeframe.period | titlecase}}}}\n                  </span>\n                  <ng-container *ngIf=\"breachInfo.timeframe.period !== 'DAILY'\">\n                    <div\n                      [ngSwitch]=\"breachInfo.timeframe.period\"\n                      class=\"text-muted\"\n                      data-role=\"period\"\n                    >\n                      <ng-container\n                        *ngSwitchCase=\"'WEEKLY'\"\n                        i18n=\"@@bb-payord-breach-limit-details-timeframe-weekly\"\n                      >\n                        Till\n                        {{ breachInfo.timeframe.endTime | date: 'mediumDate' }}\n                      </ng-container>\n                      <ng-container\n                        *ngSwitchCase=\"'MONTHLY'\"\n                        i18n=\"\n                          @@bb-payord-breach-limit-details-timeframe-monthly\"\n                      >\n                        Till\n                        {{ breachInfo.timeframe.endTime | date: 'mediumDate' }}\n                      </ng-container>\n                      <ng-container\n                        *ngSwitchCase=\"'QUARTERLY'\"\n                        i18n=\"\n                          @@bb-payord-breach-limit-details-timeframe-quarterly\"\n                      >\n                        {{\n                          breachInfo.timeframe.startTime | date: 'mediumDate'\n                        }}\n                        -\n                        {{ breachInfo.timeframe.endTime | date: 'mediumDate' }}\n                      </ng-container>\n                      <ng-container\n                        *ngSwitchCase=\"'YEARLY'\"\n                        i18n=\"@@bb-payord-breach-limit-details-timeframe-yearly\"\n                      >\n                        {{\n                          breachInfo.timeframe.startTime | date: 'mediumDate'\n                        }}\n                        -\n                        {{ breachInfo.timeframe.endTime | date: 'mediumDate' }}\n                      </ng-container>\n                    </div>\n                  </ng-container>\n                </ng-container>\n              </td>\n\n              <td class=\"bb-table--text-end\" data-role=\"limit-amount\">\n                <span class=\"d-md-none bb-text-bold\">\n                  <ng-container\n                    i18n=\"\n                      @bb-payord-breach-limit-details-breach-currency-table-heading.responsive\n                    \"\n                  >\n                    Limit\n                  </ng-container>\n                  <ng-container *ngIf=\"breachReportCurrency\"\n                    >({{ breachReportCurrency }})</ng-container\n                  >&nbsp;\n                </span>\n                <bb-amount-ui\n                  [amount]=\"breachInfo.currentThreshold\"\n                ></bb-amount-ui>\n              </td>\n\n              <td class=\"bb-table--text-end\" data-role=\"limit-consumed\">\n                <span\n                  class=\"d-md-none bb-text-bold\"\n                  i18n=\"\n                    @bb-payord-breach-limit-details-consumed-table-heading.responsive\n                  \"\n                >\n                  Consumed&nbsp;\n                </span>\n                <ng-container\n                  *ngIf=\"breachInfo.breachedLimitType === 'TRANSACTIONAL'\"\n                >\n                  &mdash;\n                </ng-container>\n                <ng-container\n                  *ngIf=\"breachInfo.breachedLimitType !== 'TRANSACTIONAL'\"\n                >\n                  <bb-amount-ui\n                    [amount]=\"breachInfo.currentConsumption\"\n                  ></bb-amount-ui>\n                </ng-container>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div\n        class=\"card card-sm card--highlight card--shadowless\"\n        *ngIf=\"paymentDetails\"\n      >\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-6 bb-block bb-block--md\">\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"@@bb-payord-breach-limit-details-payment-debtor-account\"\n              >\n                From\n              </div>\n              <div>\n                <div class=\"break-word\" data-role=\"debit-account-name\">\n                  {{\n                    paymentDetails.initiator?.alias ||\n                      paymentDetails.initiator?.name\n                  }}\n                </div>\n                <div\n                  class=\"bb-text-support bb-subtitle\"\n                  data-role=\"debit-account-number\"\n                >\n                  {{\n                    paymentDetails.initiator?.accountNumber ||\n                      paymentDetails.initiator?.IBAN\n                  }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-6 bb-block bb-block--md\">\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"\n                  @@bb-payord-breach-limit-details-payment-counterparty-account\"\n              >\n                To\n              </div>\n              <div>\n                <div class=\"break-word\" data-role=\"credit-account-name\">\n                  {{\n                    paymentDetails.counterparty?.alias ||\n                      paymentDetails.counterparty?.name\n                  }}\n                </div>\n                <div\n                  class=\"bb-text-support bb-subtitle\"\n                  data-role=\"credit-account-number\"\n                >\n                  {{\n                    paymentDetails.counterparty?.accountNumber ||\n                      paymentDetails.counterparty?.IBAN\n                  }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-6 bb-block bb-block--md\">\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"@@bb-payord-breach-limit-details-payment-execution-date\"\n              >\n                Execution date\n              </div>\n              <div>\n                {{ paymentDetails.schedule?.startDate | date: 'mediumDate' }}\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"@@bb-payord-breach-limit-details-payment-amount\"\n              >\n                Amount\n              </div>\n              <div class=\"highlight\">\n                <bb-amount-ui\n                  class=\"bb-amount--currency-space\"\n                  data-role=\"total-amount\"\n                  [amount]=\"paymentDetails.remittanceInfo.amountGroup.amount\"\n                  [currency]=\"\n                    paymentDetails.remittanceInfo.amountGroup.currency\n                  \"\n                  [mapCurrency]=\"false\"\n                ></bb-amount-ui>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n</bb-modal-ui>\n", components: [{ type: i1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i1.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i4.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }], pipes: { "titlecase": i4.TitleCasePipe, "date": i4.DatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BreachLimitDetailsModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-breach-limit-details',
                    templateUrl: 'breach-limit-details.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { paymentDetails: [{
                type: Input
            }], error: [{
                type: Input
            }], isOpen: [{
                type: Input
            }], close: [{
                type: Output
            }] } });
//# sourceMappingURL=breach-limit-details.component.js.map