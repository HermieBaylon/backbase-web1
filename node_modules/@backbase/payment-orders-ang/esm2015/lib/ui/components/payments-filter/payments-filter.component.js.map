{"version":3,"file":"payments-filter.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/payments-filter/payments-filter.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/payments-filter/payments-filter.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { PaymentsControlsModel } from '../../models/payments-controls.model';\nimport { Status } from '../../constants';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-payments-filter',\n  templateUrl: 'payments-filter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentsFilterComponent implements OnInit, OnDestroy {\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  /**\n   * Reference to Status enum\n   */\n  readonly statusesMap = Status;\n\n  public paymentsFilterForm: FormGroup = this.fb.group({\n    status: new FormControl(),\n    amount: this.fb.group(\n      {\n        from: ['', Validators.min(0)],\n        to: ['', Validators.min(0)],\n      },\n      { validator: this.amountValidator.bind(this) }\n    ),\n    executionDate: new FormControl(),\n  });\n\n  private readonly gc$ = new Subject<void>();\n  private readonly filterValueChanges =\n    this.paymentsFilterForm.valueChanges.pipe(takeUntil(this.gc$));\n  alreadyApplied = false;\n\n  /**\n   * EventEmitter for triggering a filter action.\n   */\n  @Output() readonly filter = new EventEmitter<PaymentsControlsModel>();\n  /**\n   * EventEmitter for closing filter form\n   */\n  @Output() readonly closeFilter = new EventEmitter();\n  /**\n   * EventEmitter for displaying wether filter was applied or not\n   */\n  @Output() readonly isFilterApplied = new EventEmitter<boolean>();\n  /**\n   * EventEmitter for when form is reset. Search should be executed\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly reset = new EventEmitter();\n  /**\n   * String array with statuses that should not be available in current instance\n   */\n  @Input() statusBlackList = [];\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.onFilterChanges();\n  }\n\n  /**\n   * Emit event to apply filter.\n   *\n   * @param filterParams - Options to filter transactions list with.\n   */\n  public onFilter(filterParams: PaymentsControlsModel): void {\n    if (filterParams.status) {\n      filterParams.status = this.filterStatusMap(filterParams.status);\n    }\n\n    this.filter.emit(this.normalizeFilterValues(filterParams));\n    this.alreadyApplied = true;\n  }\n\n  /**\n   * Clear filter form, reset values to default and emit event to apply filter.\n   */\n  public onClearFilter(): void {\n    this.paymentsFilterForm.reset();\n\n    this.paymentsFilterForm.markAsPristine();\n\n    if (this.alreadyApplied) {\n      this.reset.emit({ ...this.paymentsFilterForm.value });\n    }\n\n    this.isFilterApplied.emit(false);\n    this.alreadyApplied = false;\n  }\n\n  /**\n   * Emit event to close this filter form.\n   */\n  public onCloseFilter(): void {\n    this.closeFilter.emit();\n  }\n\n  isApplyButtonDisabled(): boolean {\n    const amountControl = this.paymentsFilterForm.get('amount');\n    const executionDateControl = this.paymentsFilterForm.get('executionDate');\n    return !!(\n      this.paymentsFilterForm.pristine ||\n      amountControl?.invalid ||\n      executionDateControl?.invalid\n    );\n  }\n\n  private amountValidator(group: FormGroup): void {\n    const amountControls = group.controls;\n    const toControlHasValue =\n      amountControls.to.value || amountControls.to.value === 0;\n\n    this.resetAmountError(amountControls.to);\n    this.resetAmountError(amountControls.from);\n\n    if (\n      toControlHasValue &&\n      amountControls.from.value > amountControls.to.value\n    ) {\n      amountControls.to.setErrors({\n        incorrectAmount: true,\n        ...amountControls.to.errors,\n      });\n\n      amountControls.from.setErrors({\n        incorrectAmount: true,\n        ...amountControls.from.errors,\n      });\n    }\n  }\n\n  private resetAmountError(control: AbstractControl): void {\n    let controlErrors = control.errors;\n    delete controlErrors?.incorrectAmount;\n\n    if (!Object.keys({ ...controlErrors }).length) {\n      controlErrors = null;\n    }\n\n    control.setErrors(controlErrors);\n  }\n\n  get amountToControl(): AbstractControl | null | undefined {\n    return this.paymentsFilterForm.get('amount')?.get('to');\n  }\n\n  /**\n   * filterStatusMap Converts `PROCESSING`status in the array,\n   * to `READY`, `ACKNOWLEDGED`, and `DOWNLOADING` since the server\n   * uses the statuses, but the user should only see them as\n   * `PROCESSING`\n   */\n  private filterStatusMap(statuses: string[]): string[] {\n    const processingStatusMapping = [\n      this.statusesMap.READY,\n      this.statusesMap.ACKNOWLEDGED,\n      this.statusesMap.DOWNLOADING,\n    ];\n\n    const retVal = statuses.includes(this.statusesMap.PROCESSING)\n      ? [\n          ...statuses.filter(\n            (status) => status !== this.statusesMap.PROCESSING\n          ),\n          ...processingStatusMapping,\n        ]\n      : statuses;\n\n    return retVal;\n  }\n\n  private normalizeFilterValues(\n    model: PaymentsControlsModel\n  ): PaymentsControlsModel {\n    if (\n      model.executionDate &&\n      model.executionDate.from &&\n      !model.executionDate.to\n    ) {\n      model.executionDate.to = model.executionDate.from;\n    }\n    return model;\n  }\n\n  /**\n   * onFilterChanges generates the subscription that will\n   * mark the form as pristine if no filter inputs have values\n   */\n  private onFilterChanges(): void {\n    this.filterValueChanges.subscribe((val) => {\n      if (\n        val.status ||\n        val.amount.from ||\n        val.amount.to ||\n        (val.executionDate && val.executionDate.from)\n      ) {\n        return;\n      }\n      this.paymentsFilterForm.markAsPristine();\n\n      if (this.alreadyApplied) {\n        this.reset.emit({ ...this.paymentsFilterForm.value });\n        this.alreadyApplied = false;\n        this.isFilterApplied.emit(false);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n\n  getExecutionDateErrorId(executionDateId: string): string {\n    return `${executionDateId}__error`;\n  }\n\n  getExecutionDateDescribedBy(executionDateId: string): string {\n    return `date-range-header-${executionDateId} ${this.getExecutionDateErrorId(\n      executionDateId\n    )}`;\n  }\n}\n\n@Directive({\n  selector: '[bbPaymentsFilterCustomizable]',\n})\nexport class PaymentsFilterCustomizableDirective extends BbTemplate<\n  PaymentsFilterComponent,\n  undefined\n> {}\n","<ng-container bbPaymentsFilterCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbPaymentsFilterCustomizable let-hostRef>\n  <form class=\"form bg-lighter\" [formGroup]=\"hostRef.paymentsFilterForm\">\n    <div class=\"bb-block bb-block--md\">\n      <div class=\"row\">\n        <!-- Payment Status select -->\n        <div class=\"bb-block bb-block--md col-12 col-md-6 col-xl-4\">\n          <bb-dropdown-multi-select-ui\n            label=\"Status\"\n            i18n-label=\"@@bb-payments-filter.form.label.status\"\n            placeholder=\"All\"\n            i18n-placeholder=\"@@bb-payments-filter.form.label.status.all\"\n            formControlName=\"status\"\n            data-role=\"select-status\"\n          >\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.ENTERED)\n              \"\n              label=\"Entered\"\n              [value]=\"hostRef.statusesMap.ENTERED\"\n              i18n-label=\"@@payments.filter.dropdown.option.entered\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(\n                  hostRef.statusesMap.PROCESSING\n                )\n              \"\n              label=\"Processing\"\n              [value]=\"hostRef.statusesMap.PROCESSING\"\n              i18n-label=\"@@payments.filter.dropdown.option.processing\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.PROCESSED)\n              \"\n              label=\"Processed\"\n              [value]=\"hostRef.statusesMap.PROCESSED\"\n              i18n-label=\"@@payments.filter.dropdown.option.processed\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.ACCEPTED)\n              \"\n              label=\"Accepted\"\n              [value]=\"hostRef.statusesMap.ACCEPTED\"\n              i18n-label=\"@@payments.filter.dropdown.option.accepted\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.REJECTED)\n              \"\n              label=\"Rejected\"\n              [value]=\"hostRef.statusesMap.REJECTED\"\n              i18n-label=\"@@payments.filter.dropdown.option.rejected\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(\n                  hostRef.statusesMap.CANCELLATION_PENDING\n                )\n              \"\n              label=\"Cancellation pending\"\n              [value]=\"hostRef.statusesMap.CANCELLATION_PENDING\"\n              i18n-label=\"\n                @@payments.filter.dropdown.option.cancellation-pending\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.CANCELLED)\n              \"\n              label=\"Cancelled\"\n              [value]=\"hostRef.statusesMap.CANCELLED\"\n              i18n-label=\"@@payments.filter.dropdown.option.cancelled\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n          </bb-dropdown-multi-select-ui>\n        </div>\n        <!-- Amount range -->\n        <fieldset class=\"bb-block bb-block--md col-12 col-md-6 col-xl-4\">\n          <label\n            i18n=\"amount from@@bb-payments-filter.form.label.amount\"\n            [for]=\"'payment-filter-amount' + min.id + '-' + max.id + '-group'\"\n          >\n            Amount\n          </label>\n          <div\n            class=\"row\"\n            [id]=\"'payment-filter-amount' + min.id + '-' + max.id + '-group'\"\n            formGroupName=\"amount\"\n          >\n            <bb-input-number-ui\n              #min\n              class=\"col-6\"\n              formControlName=\"from\"\n              min=\"0\"\n              aria-label=\"Amount From\"\n              placeholder=\"min\"\n              i18n-aria-label=\"\n                amount from aria@@bb-payments-filter.form.ariaLabel.amountFrom\"\n              i18n-placeholder=\"@@bb-payments-filter.form.placeholder.min\"\n              data-role=\"input-amount-from\"\n            >\n            </bb-input-number-ui>\n            <bb-input-number-ui\n              #max\n              [min]=\"min.value || 0\"\n              class=\"col-6\"\n              formControlName=\"to\"\n              placeholder=\"max\"\n              aria-label=\"Amount To\"\n              i18n-aria-label=\"\n                amount to aria@@bb-payments-filter.form.ariaLabel.amountTo\"\n              i18n-placeholder=\"@@bb-payments-filter.form.placeholder.max\"\n              data-role=\"input-amount-to\"\n            >\n              <!-- Do not remove label, placeholder needed for layout not to break -->\n            </bb-input-number-ui>\n            <bb-input-validation-message-ui\n              class=\"col-12\"\n              id=\"amountError\"\n              [showErrors]=\"\n                hostRef.amountToControl?.touched &&\n                hostRef.amountToControl?.errors?.incorrectAmount\n              \"\n            >\n              <span i18n=\"@@payments.filter.invalid-amount-range-error\"\n                >Maximum amount cannot be smaller than the minimum amount</span\n              >\n            </bb-input-validation-message-ui>\n          </div>\n        </fieldset>\n        <!-- Date range -->\n        <div class=\"bb-block bb-block--md col-12 col-md-6 col-xl-4\">\n          <label\n            [for]=\"executionDate.id\"\n            i18n=\"@@bb-payments-filter.form.label.executionDate\"\n            [id]=\"'date-range-header-' + executionDate.id\"\n          >\n            Execution date\n          </label>\n          <bb-input-datepicker-ui\n            name=\"executionDate\"\n            formControlName=\"executionDate\"\n            data-role=\"input-date\"\n            aria-label=\"Execution date range\"\n            i18n-aria-label=\"\n              amount to aria@@bb-payments-filter.form.ariaLabel.executionDate\"\n            overrideDateFormat=\"MM/dd/y\"\n            [placeholder]=\"'MM/DD/YY - MM/DD/YY'\"\n            [rangeSelection]=\"true\"\n            [attr.aria-describedby]=\"\n              getExecutionDateDescribedBy(executionDate?.id)\n            \"\n            #executionDate\n          >\n          </bb-input-datepicker-ui>\n          <bb-input-validation-message-ui\n            *ngIf=\"\n              paymentsFilterForm.get('executionDate') as executionDateControl\n            \"\n            [attr.id]=\"getExecutionDateErrorId(executionDate?.id)\"\n            [showErrors]=\"\n              executionDateControl?.touched && executionDateControl?.invalid\n            \"\n          >\n            <span i18n=\"@@payments.filter.invalid-date-range-error\"\n              >Please provide a valid date range format.</span\n            >\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <!-- Apply -->\n      <button\n        bbButton\n        type=\"submit\"\n        class=\"bb-button-bar__button\"\n        (click)=\"hostRef.onFilter(hostRef.paymentsFilterForm.value)\"\n        color=\"primary\"\n        data-role=\"btn-apply\"\n        [disabled]=\"hostRef.isApplyButtonDisabled()\"\n        i18n=\"@@bb-payments-filter.form.button.apply\"\n      >\n        Apply\n      </button>\n      <!-- Close -->\n      <button\n        bbButton\n        type=\"button\"\n        color=\"secondary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"btn-cancel\"\n        i18n=\"@@bb-payments-filter.form.button.close\"\n        (click)=\"hostRef.onCloseFilter()\"\n      >\n        Close\n      </button>\n      <!-- Clear all -->\n      <button\n        bbButton\n        type=\"reset\"\n        color=\"link\"\n        class=\"bb-button-bar__button\"\n        i18n=\"@@bb-payments-filter.form.button.clearAll\"\n        (click)=\"hostRef.onClearFilter()\"\n        *ngIf=\"hostRef.paymentsFilterForm.dirty\"\n        data-role=\"btn-clear-all\"\n      >\n        Clear All\n      </button>\n    </div>\n  </form>\n</ng-template>\n"]}