import { Component, ElementRef, ViewChild, Input, } from '@angular/core';
import { Subject } from 'rxjs';
import { TableDirective } from '@backbase/ui-ang/table';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/table";
export class TableHeaderCheckboxComponent {
    constructor(parentTable) {
        this.parentTable = parentTable;
        /**
         * Input which sends current selection set to be cleared
         */
        this.clearSelection = new Subject();
    }
    getSelectedItemsCount(list) {
        return list.filter((item) => this.parentTable.isSelected(item)).length;
    }
    get isChecked() {
        const pageList = this.parentTable.dataSource
            ? this.parentTable.dataSource
            : [];
        const selected = this.getSelectedItemsCount(pageList);
        return selected === pageList.length;
    }
    get isIntermediate() {
        const pageList = this.parentTable.dataSource
            ? this.parentTable.dataSource
            : [];
        const selected = this.getSelectedItemsCount(pageList);
        return selected > 0 && selected < pageList.length;
    }
    onClick(event) {
        event.stopPropagation();
        if (this.checkboxInput) {
            const pageList = this.parentTable.dataSource
                ? this.parentTable.dataSource
                : [];
            if (this.isIntermediate) {
                pageList.forEach((item) => {
                    if (this.parentTable.isSelected(item)) {
                        this.parentTable.toggleItem(item, false);
                    }
                });
            }
            else {
                pageList.forEach((item) => {
                    this.parentTable.toggleItem(item, !this.parentTable.isSelected(item));
                });
            }
        }
    }
    ngOnInit() {
        this.clearSelection.subscribe((items) => {
            if (items.size) {
                items.forEach((pid) => {
                    this.parentTable.toggleItem(pid, false);
                });
            }
        });
    }
    ngOnDestroy() {
        this.clearSelection.unsubscribe();
    }
}
/** @nocollapse */ TableHeaderCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TableHeaderCheckboxComponent, deps: [{ token: i1.TableDirective }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ TableHeaderCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TableHeaderCheckboxComponent, selector: "bb-table-header-checkbox", inputs: { clearSelection: "clearSelection" }, viewQueries: [{ propertyName: "checkboxInput", first: true, predicate: ["checkbox"], descendants: true, read: ElementRef, static: true }], ngImport: i0, template: "<div class=\"bb-input-checkbox\" (click)=\"onClick($event)\">\n  <input\n    #checkbox\n    type=\"checkbox\"\n    [checked]=\"isChecked\"\n    aria-label=\"select all items\"\n    [indeterminate]=\"isIntermediate\"\n    class=\"bb-input-checkbox__input\"\n    i18n-aria-label=\"@@bb-table-header-checkbox.aria-label\"\n  />\n  <span class=\"bb-input-checkbox__content bb-block--xs\"></span>\n</div>\n" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TableHeaderCheckboxComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-table-header-checkbox',
                    templateUrl: './table-header-checkbox.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.TableDirective }]; }, propDecorators: { checkboxInput: [{
                type: ViewChild,
                args: ['checkbox', { read: ElementRef, static: true }]
            }], clearSelection: [{
                type: Input
            }] } });
//# sourceMappingURL=table-header-checkbox.component.js.map