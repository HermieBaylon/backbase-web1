{"version":3,"file":"schedule-label.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/bb-schedule-label-ui/schedule-label.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;;;AAuFjD,MAAM,OAAO,sBAAsB;IApFnC;QA0FE,sDAAsD;QAC7C,mBAAc,GAAG,CAAC,CAAC;KAqD7B;IAnDC,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACjD,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAC/B,CAAC,CAAC,SAAS,CAAC;IAChB,CAAC;IAED,IAAI,iBAAiB;QACnB,OAAO,CACL,IAAI,CAAC,IAAI;YACT,IAAI,CAAC,IAAI,CAAC,SAAS;YACnB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK;gBACxB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,EAAE,KAAK,MAAM;gBAC1D,CAAC,CAAC,KAAK,CAAC,CACX,CAAC;IACJ,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YACpE,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAC7B,CAAC,CAAC,SAAS,CAAC;IAChB,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;YAC3B,MAAM,IAAI,KAAK,CACb,8DAA8D,CAC/D,CAAC;SACH;QACD,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC;IAClD,CAAC;IAED,MAAM;QACJ,OAAO,CACL,CAAC,CAAC,IAAI,CAAC,IAAI;YACX,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CACpE,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAClD,CAAC;IAED,mBAAmB;QACjB,OAAO,CACL,CAAC,CAAC,IAAI,CAAC,IAAI;YACX,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS;YAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CACxC,CAAC;IACJ,CAAC;;uIA3DU,sBAAsB;2HAAtB,sBAAsB,sFAlFvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgFT;4FAEU,sBAAsB;kBApFlC,SAAS;mBAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgFT;iBACF;8BAKU,IAAI;sBAAZ,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { ScheduleItem } from '../schedule/schedule.component';\n\n@Component({\n  selector: 'bb-schedule-label-ui',\n  template: `\n    <span\n      i18n=\"\n        Schedule frequency title list|List of titles for available schedule\n        frequencies@@bb-schedule-label-ui.frequency.list\"\n      >{ item?.frequency?.value, select, other {Once} DAILY {Daily} WEEKLY\n      {Weekly} BIWEEKLY {Bi-Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly}\n      YEARLY {Annually} }</span\n    >\n    <span>&nbsp;&minus;</span>\n    <ng-container *ngIf=\"isSingleFrequency\">\n      <span\n        *ngIf=\"isToday()\"\n        i18n=\"\n          Today|Capitalized word for\n          today@@bb-schedule-label-ui.label.today.title\"\n      >\n        Today</span\n      >\n      <span\n        *ngIf=\"!isToday()\"\n        i18n=\"\n          On|Word to be used before a date to indicate that the payment will be\n          executed on that date@@bb-schedule-label-ui.label.on\"\n      >\n        on</span\n      >\n    </ng-container>\n\n    <ng-container *ngIf=\"!isSingleFrequency\">\n      <span\n        i18n=\"\n          Schedule start|Word to be used before a date to indicate that this\n          date is a starting date of the\n          schedule@@bb-schedule-label-ui.label.start\"\n      >\n        from</span\n      >\n      <span *ngIf=\"isToday()\">\n        <ng-container\n          i18n=\"\n            today|Lowercase name for current\n            day@@bb-schedule-label-ui.label.today\"\n        >\n          today</ng-container\n        >{{ hasLimit() && hasEnoughOccurences() ? ';' : '' }}</span\n      >\n    </ng-container>\n\n    <span *ngIf=\"!isToday()\">\n      {{ startDate | date: 'mediumDate'\n      }}{{ hasLimit() && hasEnoughOccurences() ? ';' : '' }}</span\n    >\n\n    <ng-container *ngIf=\"hasLimit() && item?.endDate\">\n      <span\n        i18n=\"\n          Schedule end|Word to be used before a date to indicate that this date\n          is an end date of the schedule@@bb-schedule-label-ui.label.end\"\n      >\n        till</span\n      >\n      <span> {{ endDate | date: 'mediumDate' }}</span>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        hasLimit() &&\n        (item?.repeat || 0) >= minOccurrences &&\n        item?.endType === 'after'\n      \"\n    >\n      <span> {{ item?.repeat }}</span>\n      <span\n        i18n=\"\n          Number of times|Word to be used after number of\n          occurences@@bb-schedule-label-ui.label.repeat\"\n      >\n        times</span\n      >\n    </ng-container>\n  `,\n})\nexport class ScheduleLabelComponent {\n  /**\n   * Object with schedule values\n   */\n  @Input() item: ScheduleItem | undefined;\n\n  // @todo should be configurable and passed from parent\n  readonly minOccurrences = 2;\n\n  get startDate(): Date | undefined {\n    return this.item && Date.parse(this.item.startDate)\n      ? new Date(this.item.startDate)\n      : undefined;\n  }\n\n  get isSingleFrequency(): boolean | undefined {\n    return (\n      this.item &&\n      this.item.frequency &&\n      (this.item.frequency.value\n        ? this.item.frequency.value.toLocaleLowerCase() === 'once'\n        : false)\n    );\n  }\n\n  get endDate(): Date | undefined {\n    return this.item && this.item.endDate && Date.parse(this.item.endDate)\n      ? new Date(this.item.endDate)\n      : undefined;\n  }\n\n  isToday(): boolean {\n    if (this.item === undefined) {\n      throw new Error(\n        '`item` input is required in `bb-schedule-label-ui` component'\n      );\n    }\n    const today = new Date().setHours(0, 0, 0, 0);\n    const startDate = new Date(this.item.startDate);\n    return startDate.setHours(0, 0, 0, 0) === today;\n  }\n\n  hasEnd(): boolean {\n    return (\n      !!this.item &&\n      (this.item.endDate !== undefined || this.item.repeat !== undefined)\n    );\n  }\n\n  hasLimit(): boolean {\n    return this.hasEnd() && !this.isSingleFrequency;\n  }\n\n  hasEnoughOccurences(): boolean {\n    return (\n      !!this.item &&\n      this.item.repeat !== undefined &&\n      this.item.repeat >= this.minOccurrences\n    );\n  }\n}\n"]}