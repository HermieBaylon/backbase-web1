{"version":3,"file":"bb-table-payments.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/bb-table-component/bb-table-payments.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/bb-table-component/bb-table-payments.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { PaymentOrdersData, Template } from '../../models';\nimport { PaymentConfigService } from '../../../configs/services/payment-config.service';\nimport {\n  canCopyPayment,\n  hasCreatePermission,\n} from '../../helpers/payment-config-helpers';\nimport {\n  IdentifiedPaymentOrder,\n  IdentifiedTransaction,\n  PaymentAction,\n} from '@backbase/data-ang/payment-order';\nimport { SortEvent } from '@backbase/ui-ang/table';\nimport { getRelativeDate } from '../../helpers/date-helpers';\nimport {\n  PaymentModeType,\n  PaymentOrder,\n  PaymentTemplatesData,\n} from '../../models/types';\nimport { AvailableActions, Preferences } from '../../constants';\n\n@Component({\n  selector: 'bb-table-payments-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'bb-table-payments.component.html',\n})\nexport class PaymentsTableComponent {\n  readonly hostRef = this;\n\n  constructor(private readonly paymentConfigService: PaymentConfigService) {}\n\n  /**\n   * Items to be displayed\n   */\n  @Input() items!: PaymentTemplatesData | PaymentOrdersData;\n\n  /**\n   * Search term value.\n   */\n  @Input() searchTerm?: string;\n\n  /**\n   * Search query string (if any)\n   */\n  @Input() clearSelection = new Subject<Set<string>>();\n\n  /**\n   * Response error on payment templates list.\n   */\n  @Input() responseError?: BehaviorSubject<any>;\n\n  /**\n   * Flag indicates if the user has delete permission.\n   * Default value is `false`.\n   */\n  @Input() canDelete = false;\n\n  /**\n   * Flag indicates if the user has edit permission.\n   * Default value is `false`.\n   */\n  @Input() canEdit = false;\n\n  /**\n   * Flag indicates whether called from Manage transfers\n   */\n  @Input() isManageTransfersMode = false;\n\n  /**\n   * The flag to denote if it is a debit mode\n   */\n  @Input() isDebitMode = false;\n\n  /**\n   * Payment mode\n   * Default is `SINGLE`.\n   */\n  @Input() paymentMode: PaymentModeType = 'ALL';\n\n  /**\n   * Total count of payment orders.\n   */\n  @Input() totalCount?: number;\n\n  /**\n   * Number of payment orders shown per page.\n   */\n  @Input() pageSize?: number;\n\n  /**\n   * Select template event emitter\n   */\n  @Output() selectTemplate = new EventEmitter<PaymentTemplate>();\n\n  /**\n   * Click template event emitter.\n   */\n  @Output() templateItemClick = new EventEmitter<PaymentTemplate>();\n\n  /**\n   * Changes will be triggered on paymentItemClick event emit.\n   */\n  @Output() paymentItemClick = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Click delete event emitter.\n   */\n  @Output() triggerDeleteTemplate = new EventEmitter<Template>();\n\n  /**\n   * Changes will be triggered on column sorting.\n   */\n  @Output() sort = new EventEmitter<SortEvent>();\n\n  /**\n   * Selection set\n   */\n  @Output() selectionSet = new EventEmitter<Set<string>>();\n\n  /**\n   * Edit template event emitter.\n   */\n  @Output() editTemplate = new EventEmitter<Template>();\n\n  /**\n   * Approval event emitter\n   */\n  @Output() approvePayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Rejection event emitter\n   */\n  @Output() rejectPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Cancel event emitter\n   */\n  @Output() cancelPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Edit event emitter\n   */\n  @Output() editPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Copy payment event emitter\n   */\n  @Output() copyPayment = new EventEmitter<PaymentOrder>();\n\n  private selection: Set<string> = new Set();\n  preferences = Preferences;\n  mapPaymentType = (item: PaymentTemplate) =>\n    this.paymentConfigService.mapPaymentType(item);\n\n  onSelectTemplate(item: PaymentTemplate) {\n    this.selectTemplate.emit(item);\n  }\n\n  onTemplateClick(template: PaymentTemplate) {\n    this.templateItemClick.emit(template);\n  }\n\n  onPaymentItemClick(paymentItem?: IdentifiedPaymentOrder) {\n    this.paymentItemClick.emit(paymentItem);\n  }\n\n  onEditTemplate(template: PaymentTemplate) {\n    this.editTemplate.emit({ ...template, query: this.searchTerm });\n  }\n\n  trackById(_index: number, item: PaymentTemplate): string {\n    return item.id;\n  }\n\n  onSort(event: SortEvent) {\n    this.sort.emit(event);\n  }\n\n  setSelection(selection: Set<string>) {\n    this.selection = selection;\n    this.selectionSet.emit(this.selection);\n  }\n\n  getIds(\n    items?: Array<IdentifiedPaymentOrder | PaymentTemplate>\n  ): Array<string> | undefined {\n    return items?.map((payment) => payment.id);\n  }\n\n  openDeleteTemplateModal(item: PaymentTemplate) {\n    this.triggerDeleteTemplate.emit({ ...item, query: this.searchTerm });\n  }\n\n  formatExecutionDate(date: string): string {\n    let result = date;\n\n    if (result === getRelativeDate()) {\n      result = 'today';\n    } else if (result === getRelativeDate(1)) {\n      result = 'tomorrow';\n    }\n\n    return result;\n  }\n\n  stopPropagation(event: Event) {\n    event.stopPropagation();\n  }\n\n  isApprovalProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(\n      paymentItem?.actions,\n      AvailableActions.APPROVE\n    );\n  }\n\n  onApprovePayment(payment: IdentifiedPaymentOrder, event: Event) {\n    event.stopPropagation();\n    if (!this.isApprovalProhibited(payment)) {\n      this.approvePayment.emit(payment);\n    }\n  }\n\n  isRejectionProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.REJECT);\n  }\n\n  onRejectPayment(payment: IdentifiedPaymentOrder, event: Event) {\n    event.stopPropagation();\n    if (!this.isRejectionProhibited(payment)) {\n      this.rejectPayment.emit(payment);\n    }\n  }\n\n  onCancelPayment(payment: IdentifiedPaymentOrder) {\n    if (!this.isCancelProhibited(payment)) {\n      this.cancelPayment.emit(payment);\n    }\n  }\n\n  onEditPayment(payment: IdentifiedPaymentOrder) {\n    if (!this.isEditProhibited(payment)) {\n      this.editPayment.emit(payment);\n    }\n  }\n\n  onCopyPayment(payment: IdentifiedPaymentOrder) {\n    if (this.canCopyPayment(payment)) {\n      this.copyPayment.emit({ ...payment, isPaymentCopy: true });\n    }\n  }\n\n  canCopyPayment(payment: IdentifiedPaymentOrder): boolean {\n    return canCopyPayment(payment);\n  }\n\n  isEditProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.EDIT);\n  }\n\n  isCancelProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.CANCEL);\n  }\n\n  transactionInformation(\n    payment: IdentifiedPaymentOrder | undefined\n  ): IdentifiedTransaction | undefined {\n    return payment?.transferTransactionInformation;\n  }\n\n  hasCreatePermission(\n    template: PaymentTemplate | IdentifiedPaymentOrder\n  ): boolean {\n    return hasCreatePermission(template.actions);\n  }\n\n  private isActionDisabled(\n    actions: Array<PaymentAction> | undefined,\n    actionType: PaymentAction\n  ): boolean {\n    return !actions || actions.indexOf(actionType) === -1;\n  }\n}\n","<div *ngIf=\"items?.items.length && !responseError\" class=\"table-responsive\">\n  <div class=\"bb-block bb-block--xl\"></div>\n  <div *ngIf=\"searchTerm\">\n    <div class=\"bb-block bb-block--xs\"></div>\n    <div\n      class=\"bb-block bb-block--xs\"\n      data-role=\"results-found\"\n      i18n=\"@@manage-payment-items.results-found\"\n    >\n      {items.totalCount, plural, =1 {1 result found} other\n      {{{items.totalCount}} results found}}\n    </div>\n  </div>\n\n  <table\n    bbTableFocus\n    [bbTable]=\"getIds(items.items)\"\n    class=\"table table-hover bb-table\"\n    (sort)=\"onSort($event)\"\n    (selectRow)=\"setSelection($event)\"\n  >\n    <thead>\n      <tr data-role=\"item-row\">\n        <td\n          data-role=\"selection-checkbox\"\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n        >\n          <bb-table-header-checkbox\n            [clearSelection]=\"clearSelection\"\n          ></bb-table-header-checkbox>\n        </td>\n        <td *ngIf=\"!(isManageTransfersMode || isDebitMode)\"></td>\n        <ng-template #itemStatusHeader>\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payments table header label| Manage payments header label\n              for status@@manage-payments.header.status\"\n          >\n            Status\n          </span>\n        </ng-template>\n        <th\n          data-role=\"header-status\"\n          scope=\"col\"\n          bbSortable=\"status\"\n          tabindex=\"0\"\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n        >\n          <ng-container *ngTemplateOutlet=\"itemStatusHeader\"></ng-container>\n        </th>\n        <ng-template #templateNameHeader>\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payment templates table header label| Manage payment\n              templates header label for\n              status@@manage-payment-templates.header.status\"\n          >\n            Template name\n          </span>\n        </ng-template>\n        <th\n          data-role=\"header-status\"\n          scope=\"col\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n          tabindex=\"0\"\n        >\n          <ng-container *ngTemplateOutlet=\"templateNameHeader\"></ng-container>\n        </th>\n        <th\n          #itemFromHeader\n          data-role=\"header-account-from\"\n          scope=\"col\"\n          bbSortable=\"originatorName\"\n          tabindex=\"0\"\n        >\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payment items table header label| Manage payment items\n              header label for from@@manage-payment-items.header.from\"\n          >\n            From\n          </span>\n        </th>\n        <th\n          #itemToHeader\n          data-role=\"header-account-to\"\n          scope=\"col\"\n          bbSortable=\"counterpartyName\"\n          tabindex=\"0\"\n        >\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payment items table header label| Manage payment items\n              header label for number of\n              payments@@manage-payment-items.header.payments-number\"\n          >\n            To\n          </span>\n        </th>\n        <th\n          #itemCurrencyHeader\n          data-role=\"header-currency\"\n          scope=\"col\"\n          class=\"bb-table--text-end\"\n          bbSortable=\"currency\"\n          tabindex=\"0\"\n        >\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payment items table header label| Manage payment items\n              header label for currency@@manage-payment-items.header.currency\"\n          >\n            Ccy\n          </span>\n        </th>\n        <th\n          #itemAmountHeader\n          scope=\"col\"\n          data-role=\"header-amount\"\n          class=\"bb-table--text-end\"\n          bbSortable=\"amount\"\n          tabindex=\"0\"\n        >\n          <span\n            i18n=\"\n              Manage payment items table header label| Manage payment items\n              header label for amount@@manage-payment-items.header.amount\"\n            class=\"th-content\"\n          >\n            Amount\n          </span>\n        </th>\n\n        <th\n          *ngIf=\"\n            (paymentMode === 'RECURRING' || paymentMode === 'ALL') &&\n            (isManageTransfersMode || isDebitMode)\n          \"\n          scope=\"col\"\n          data-role=\"header-frequency\"\n          tabindex=\"0\"\n        >\n          <span\n            i18n=\"\n              Manage payments table header label| Manage payments header label\n              for frequency@@manage-payments.header.frequency\"\n            class=\"th-content\"\n          >\n            Frequency\n          </span>\n        </th>\n\n        <th\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n          scope=\"col\"\n          data-role=\"header-exec-date\"\n          bbSortable=\"requestedExecutionDate\"\n          tabindex=\"0\"\n        >\n          <span\n            i18n=\"\n              Manage payments table header label| Manage payments header label\n              for execution date@@manage-payments.header.execution-date\"\n            class=\"th-content\"\n          >\n            Exec. date\n          </span>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        *ngFor=\"let item of items?.items; trackBy: trackById\"\n        [bbRow]=\"item\"\n        (bbKeyboardClick)=\"\n          isManageTransfersMode || isDebitMode\n            ? onPaymentItemClick(item)\n            : onTemplateClick(item)\n        \"\n        tabindex=\"0\"\n        data-role=\"payment-row\"\n      >\n        <td\n          data-role=\"payment-col-selection\"\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n        >\n          <bb-table-checkbox\n            class=\"bb-stack\"\n            [rowId]=\"item.id\"\n          ></bb-table-checkbox>\n        </td>\n        <td\n          data-role=\"payment-col-selection\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n        >\n          <bb-icon-ui\n            class=\"bb-text-disabled bb-stack__item\"\n            name=\"insert-drive-file\"\n          >\n          </bb-icon-ui>\n        </td>\n\n        <td\n          data-role=\"payment-col-status\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode); else statusData\"\n        >\n          <span class=\"sr-only\">\n            <ng-container *ngTemplateOutlet=\"templateNameHeader\">\n            </ng-container>\n          </span>\n          <div class=\"bb-text-bold\">\n            {{ item.name }}\n          </div>\n\n          <div #paymentTypeHeading class=\"d-none\" aria-hidden=\"true\">\n            <ng-container i18n=\"manage-payment-templates.payment-types\">\n              {item?.details?.paymentType, select, US_FOREIGN_WIRE {US Foreign\n              Wire Payment} US_FOREIGN_WIRE_ILE {US Foreign Wire Payment}\n              SEPA_CT_CLOSED {SEPA CT Transfer} SEPA_CT {SEPA CT Transfer}\n              SEPA_CT_ILE {SEPA CT Transfer}}\n            </ng-container>\n          </div>\n\n          <div\n            class=\"bb-text-support\"\n            data-role=\"payment-type\"\n            *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n          >\n            {{\n              mapPaymentType(item)\n                ? mapPaymentType(item)\n                : paymentTypeHeading.textContent\n            }}\n          </div>\n        </td>\n\n        <ng-template #statusData>\n          <td data-role=\"payment-col-status\">\n            <span class=\"sr-only\">\n              <ng-container *ngTemplateOutlet=\"itemStatusHeader\">\n              </ng-container>\n            </span>\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\">\n                <bb-payord-status-badge\n                  class=\"d-none d-md-block\"\n                  [status]=\"item.status\"\n                  [showAbbreviated]=\"true\"\n                ></bb-payord-status-badge>\n              </div>\n            </div>\n          </td>\n        </ng-template>\n\n        <td>\n          <bb-badge-ui\n            *ngIf=\"item.edited\"\n            color=\"secondary\"\n            text=\"Edit pending\"\n            data-role=\"edit-pending-label\"\n            i18n-text=\"@@manage-payments.payment.list.editPending.label\"\n          ></bb-badge-ui>\n\n          <span class=\"sr-only\">; {{ itemFromHeader.innerText }}:</span>\n          <div data-role=\"payment-col-debitor-name\">\n            {{\n              isDebitMode ||\n              transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                ? transactionInformation(item)?.counterparty?.name\n                : isManageTransfersMode\n                ? item.originator?.name\n                : item.details.originatorAccount.name\n            }}\n          </div>\n          <div class=\"bb-text-support\" data-role=\"payment-col-debitor-account\">\n            {{\n              isDebitMode ||\n              transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                ? (transactionInformation(item)?.counterpartyAccount\n                    ?.identification | accountFormatter)\n                : isManageTransfersMode\n                ? (item.originatorAccount?.identification | accountFormatter)\n                : (item.details.originatorAccount.identification\n                  | accountFormatter)\n            }}\n          </div>\n        </td>\n\n        <td>\n          <span class=\"sr-only\">; {{ itemToHeader.innerText }}:</span>\n          <div data-role=\"payment-col-creditor-name\">\n            {{\n              isDebitMode ||\n              transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                ? item.originator?.name\n                : isManageTransfersMode\n                ? transactionInformation(item)?.counterparty?.name\n                : item.details.transferTransactionInformation.counterparty.name\n            }}\n          </div>\n          <div class=\"bb-text-support\" data-role=\"payment-col-creditor-account\">\n            {{\n              isDebitMode ||\n              transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                ? (item.originatorAccount?.identification | accountFormatter)\n                : isManageTransfersMode\n                ? (transactionInformation(item)?.counterpartyAccount\n                    ?.identification | accountFormatter)\n                : (item.details.transferTransactionInformation\n                    .counterpartyAccount.identification | accountFormatter)\n            }}\n          </div>\n        </td>\n\n        <td class=\"bb-table--text-end\">\n          <span class=\"sr-only\">; {{ itemCurrencyHeader.innerText }}</span>\n          <span data-role=\"payment-col-currency\">\n            {{\n              isManageTransfersMode || isDebitMode\n                ? item.transferTransactionInformation?.instructedAmount\n                    .currencyCode\n                : item.details.transferTransactionInformation.instructedAmount\n                    .currencyCode\n            }}\n          </span>\n        </td>\n\n        <td data-role=\"payment-col-amount\" class=\"bb-table--text-end\">\n          <span class=\"sr-only\">; {{ itemAmountHeader.innerText }}:</span>\n          <bb-amount-ui\n            [amount]=\"\n              isManageTransfersMode || isDebitMode\n                ? item.transferTransactionInformation?.instructedAmount.amount\n                : item.details.transferTransactionInformation.instructedAmount\n                    .amount\n            \"\n          ></bb-amount-ui>\n        </td>\n\n        <td\n          *ngIf=\"\n            (paymentMode === 'RECURRING' || paymentMode === 'ALL') &&\n            (isManageTransfersMode || isDebitMode)\n          \"\n          data-role=\"payment-col-frequency\"\n        >\n          <span i18n=\"@@@@manage-payments.payment.list.frequency\">\n            {item.schedule?.transferFrequency, select, DAILY {Daily} WEEKLY\n            {Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY {Yearly}\n            other {{{item.schedule?.transferFrequency | titlecase}}}}\n          </span>\n        </td>\n\n        <td data-role=\"payment-col-date\">\n          <span\n            *ngIf=\"item.schedule?.nextExecutionDate\"\n            i18n=\"@@manage-payments.payment.list.execution-date-value\"\n          >\n            {formatExecutionDate(item.schedule?.nextExecutionDate), select,\n            today {Today} tomorrow {Tomorrow} other\n            {{{ item.schedule?.nextExecutionDate | date:'shortDate'}}} }\n          </span>\n\n          <span *ngIf=\"!item.schedule?.nextExecutionDate\">\n            {{ item.requestedExecutionDate | date: 'shortDate' }}\n          </span>\n        </td>\n\n        <td>\n          <div class=\"bb-stack\">\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right d-none d-md-block\"\n            >\n              <div class=\"bb-stack\">\n                <!-- Large screens (Hidden only on xs and sm) -->\n                <ng-container\n                  *ngIf=\"\n                    item &&\n                    item.status === 'ENTERED' &&\n                    (isManageTransfersMode || isDebitMode)\n                  \"\n                >\n                  <div class=\"bb-stack__item\">\n                    <button\n                      bbButton\n                      buttonSize=\"sm\"\n                      [circle]=\"true\"\n                      color=\"success\"\n                      triggers=\"hover focus\"\n                      aria-label=\"Approve payment\"\n                      data-role=\"approve-payment-order\"\n                      (click)=\"onApprovePayment(item, $event)\"\n                      [ngClass]=\"{\n                        'disabled btn-circle--filled':\n                          isApprovalProhibited(item)\n                      }\"\n                      i18n-aria-label=\"\n                        Approve payment@@manage-payments-list.action.approve\"\n                      [bbTooltip]=\"\n                        isApprovalProhibited(item)\n                          ? actionNotAvailable\n                          : actionApprove\n                      \"\n                    >\n                      <bb-icon-ui name=\"check\"></bb-icon-ui>\n                    </button>\n                  </div>\n\n                  <div class=\"bb-stack__item\">\n                    <button\n                      bbButton\n                      buttonSize=\"sm\"\n                      [circle]=\"true\"\n                      color=\"danger\"\n                      triggers=\"hover focus\"\n                      aria-label=\"Reject payment\"\n                      data-role=\"reject-payment-order\"\n                      (click)=\"onRejectPayment(item, $event)\"\n                      [ngClass]=\"{\n                        'disabled btn-circle--filled':\n                          isRejectionProhibited(item)\n                      }\"\n                      i18n-aria-label=\"\n                        Reject payment@@manage-payments-list.action.reject\"\n                      [bbTooltip]=\"\n                        isRejectionProhibited(item)\n                          ? actionNotAvailable\n                          : actionReject\n                      \"\n                    >\n                      <bb-icon-ui name=\"times\"></bb-icon-ui>\n                    </button>\n                  </div>\n                </ng-container>\n\n                <div\n                  class=\"bb-stack__item\"\n                  *ngIf=\"isManageTransfersMode || isDebitMode\"\n                >\n                  <span\n                    class=\"sr-only\"\n                    i18n=\"@@manage-templates.bb-table-payments.more-actions\"\n                    >More actions</span\n                  >\n                  <bb-dropdown-menu-ui\n                    type=\"button\"\n                    buttonSize=\"sm\"\n                    container=\"body\"\n                    btnCircle=\"true\"\n                    icon=\"ellipsis-h\"\n                    btnColor=\"link-dark\"\n                    triggers=\"hover focus\"\n                    data-role=\"more-options\"\n                    ariaLabel=\"More actions\"\n                    bbTooltip=\"More actions\"\n                    (click)=\"stopPropagation($event)\"\n                    (keydown.enter)=\"stopPropagation($event)\"\n                    i18n-ariaLabel=\"\n                      @@manage-transfers.bb-table-payments.more-actions.label\"\n                    i18n-bbTooltip=\"\n                      @@manage-transfers.bb-table-payments.more-actions.tooltip\"\n                  >\n                    <ng-template bbDropdownMenuItem>\n                      <button\n                        type=\"button\"\n                        role=\"menuitem\"\n                        class=\"dropdown-item\"\n                        *ngIf=\"canCopyPayment(item)\"\n                        (bbKeyboardClick)=\"onCopyPayment(item)\"\n                        data-role=\"transfer-payment-order-dropdown\"\n                        i18n=\"@@manage-payments.payment.list.action.transfer\"\n                      >\n                        Transfer\n                      </button>\n                      <button\n                        type=\"button\"\n                        role=\"menuitem\"\n                        class=\"dropdown-item\"\n                        i18n=\"@@manage-payments.payment.list.action.edit\"\n                        data-role=\"edit-payment-order-dropdown\"\n                        *ngIf=\"!isEditProhibited(item)\"\n                        (bbKeyboardClick)=\"onEditPayment(item)\"\n                      >\n                        Edit\n                      </button>\n\n                      <button\n                        type=\"button\"\n                        role=\"menuitem\"\n                        container=\"body\"\n                        placement=\"left\"\n                        class=\"dropdown-item\"\n                        triggers=\"hover focus\"\n                        data-role=\"cancel-payment-order-dropdown\"\n                        (bbKeyboardClick)=\"onCancelPayment(item)\"\n                        [class.disabled]=\"isCancelProhibited(item)\"\n                        [bbTooltip]=\"\n                          isCancelProhibited(item) && actionNotAvailable\n                        \"\n                      >\n                        Cancel\n                      </button>\n\n                      <button\n                        type=\"button\"\n                        role=\"menuitem\"\n                        class=\"dropdown-item\"\n                        data-role=\"export-payment-order-dropdown\"\n                        i18n=\"@@manage-payments.payment.list.action.export-pdf\"\n                        *ngIf=\"item.permissibleActions?.export\"\n                        [bbExportPdf]=\"item.id\"\n                      >\n                        Export PDF\n                      </button>\n                    </ng-template>\n                  </bb-dropdown-menu-ui>\n                </div>\n              </div>\n            </div>\n          </div>\n        </td>\n\n        <td\n          data-role=\"create-payment-col-selection\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n        >\n          <button\n            *ngIf=\"hasCreatePermission(item)\"\n            bbButton\n            buttonSize=\"md\"\n            color=\"unstyled\"\n            aria-label=\"Create payment from template\"\n            i18n-aria-label=\"\n              Button for create payment from\n              template@@manage-payment-templates.create-payment.button\"\n            data-role=\"create-payment-button\"\n            bbTooltip=\"Create new payment from this template\"\n            triggers=\"hover focus\"\n            i18n-bbTooltip=\"\n              Tooltip for create payment from\n              template@@manage-payment-templates.create-payment.tooltip\"\n            (click)=\"stopPropagation($event); onSelectTemplate(item)\"\n          >\n            <bb-icon-ui name=\"payments\" class=\"bb-stack__item\"> </bb-icon-ui>\n          </button>\n        </td>\n        <td\n          class=\"text-right\"\n          *ngIf=\"\n            (canDelete || canEdit) && !(isManageTransfersMode || isDebitMode)\n          \"\n        >\n          <span\n            class=\"sr-only\"\n            i18n=\"@@manage-templates.bb-table-payments.more-actions\"\n            >More actions</span\n          >\n          <bb-dropdown-menu-ui\n            class=\"bb-button-bar__button\"\n            btnColor=\"unstyled\"\n            btnCircle=\"true\"\n            container=\"body\"\n            data-role=\"more-options\"\n            (bbKeyboardClick)=\"$event.stopPropagation()\"\n          >\n            <ng-template bbDropdownLabel>\n              <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n            </ng-template>\n            <ng-template bbDropdownMenuItem>\n              <button\n                [attr.aria-label]=\"'Delete ' + item.name\"\n                *ngIf=\"canEdit\"\n                role=\"menuitem\"\n                type=\"button\"\n                class=\"dropdown-item\"\n                (bbKeyboardClick)=\"onEditTemplate(item)\"\n                i18n=\"manage-payment-templates.edit.template\"\n                data-role=\"edit-template-dropdown-item\"\n              >\n                Edit\n              </button>\n              <button\n                *ngIf=\"canDelete\"\n                [attr.aria-label]=\"'Delete ' + item.name\"\n                role=\"menuitem\"\n                type=\"button\"\n                class=\"dropdown-item\"\n                (bbKeyboardClick)=\"openDeleteTemplateModal(item)\"\n                i18n=\"manage-payment-templates.remove.account\"\n                data-role=\"delete-template-dropdown\"\n              >\n                Delete\n              </button>\n            </ng-template>\n          </bb-dropdown-menu-ui>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<ng-template #actionNotAvailable>\n  <span i18n=\"@@manage-payments.action.not.available\">Not available</span>\n</ng-template>\n\n<ng-template #actionApprove>\n  <span i18n=\"@@manage-payments.action.approve\">Approve</span>\n</ng-template>\n\n<ng-template #actionReject>\n  <span i18n=\"@@manage-payments.action.reject\">Reject</span>\n</ng-template>\n"]}