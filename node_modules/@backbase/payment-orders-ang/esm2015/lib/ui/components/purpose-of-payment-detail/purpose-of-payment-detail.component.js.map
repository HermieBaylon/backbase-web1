{"version":3,"file":"purpose-of-payment-detail.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/purpose-of-payment-detail/purpose-of-payment-detail.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/purpose-of-payment-detail/purpose-of-payment-detail.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;;;;;AAO1E,MAAM,OAAO,+BAA+B;IAL5C;QAME,YAAO,GAAG,IAAI,CAAC;QACf,cAAS,GAAG,KAAK,CAAC;QAClB,0BAAqB,GAAG,KAAK,CAAC;QAE9B;;WAEG;QACM,UAAK,GAAG,EAAE,CAAC;QAEpB;;WAEG;QACM,cAAS,GAAG,KAAK,CAAC;QAE3B;;WAEG;QACM,SAAI,GAAG,EAAE,CAAC;QACnB;;WAEG;QACM,gBAAW,GAAG,EAAE,CAAC;KAe3B;IAbC;;OAEG;IACH,qBAAqB,CAAC,kBAA2B;QAC/C,IAAI,CAAC,qBAAqB,GAAG,kBAAkB,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;;gJApCU,+BAA+B;oIAA/B,+BAA+B,kKCP5C,i3CAkDA;4FD3Ca,+BAA+B;kBAL3C,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,4CAA4C;oBACzD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BASU,KAAK;sBAAb,KAAK;gBAKG,SAAS;sBAAjB,KAAK;gBAKG,IAAI;sBAAZ,KAAK;gBAIG,WAAW;sBAAnB,KAAK","sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-purpose-of-payment-detail',\n  templateUrl: './purpose-of-payment-detail.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PurposeOfPaymentDetailComponent {\n  hostRef = this;\n  isPoPOpen = false;\n  isPoPMessageTruncated = false;\n\n  /**\n   * Label for the pop information.\n   */\n  @Input() label = '';\n\n  /**\n   * Hide label for the pop information.\n   */\n  @Input() hideLabel = false;\n\n  /**\n   * The purpose of payment code.\n   */\n  @Input() code = '';\n  /**\n   * The purpose of payment description.\n   */\n  @Input() description = '';\n\n  /**\n   * Set truncation status of PoP message\n   */\n  setIsContentTruncated(isMessageTruncated: boolean) {\n    this.isPoPMessageTruncated = isMessageTruncated;\n  }\n\n  /**\n   * Toggle PoP message\n   */\n  togglePoP() {\n    this.isPoPOpen = !this.isPoPOpen;\n  }\n}\n","<ng-container *ngIf=\"code || description\">\n  <div\n    class=\"bb-text-bold\"\n    *ngIf=\"label; else defaultPurposeOfPaymentLabelTemplate\"\n  >\n    {{ label }}\n  </div>\n  <ng-template #defaultPurposeOfPaymentLabelTemplate>\n    <div\n      *ngIf=\"!hideLabel\"\n      class=\"bb-text-bold\"\n      i18n=\"@@purpose-of-payment-detail.label\"\n      data-role=\"payment-purpose-of-payment-label\"\n    >\n      Purpose of payment\n    </div>\n  </ng-template>\n\n  <div data-role=\"payment-purpose-of-payment\" *ngIf=\"description\">\n    <bb-ellipsis-ui [lineClamp]=\"isPoPOpen ? description.length : 3\">\n      <div bbIsContentTruncated [hostRef]=\"hostRef\">\n        <ng-container *ngIf=\"code\">{{ code }} - </ng-container>\n\n        {{ description }}\n      </div>\n    </bb-ellipsis-ui>\n\n    <button\n      *ngIf=\"isPoPMessageTruncated\"\n      bbButton\n      color=\"link-text\"\n      (click)=\"togglePoP()\"\n    >\n      <ng-container [ngSwitch]=\"isPoPOpen\">\n        <ng-container\n          *ngSwitchCase=\"true\"\n          i18n=\"@@purpose-of-payment-detail.showLessBtn\"\n        >\n          See less\n        </ng-container>\n        <ng-container\n          *ngSwitchDefault\n          i18n=\"@@purpose-of-payment-detail.showMoreBtn\"\n        >\n          See more\n        </ng-container>\n      </ng-container>\n    </button>\n  </div>\n</ng-container>\n"]}