import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/ellipsis";
import * as i2 from "@angular/common";
import * as i3 from "@backbase/ui-ang/button";
export class PurposeOfPaymentDetailComponent {
    constructor() {
        this.hostRef = this;
        this.isPoPOpen = false;
        this.isPoPMessageTruncated = false;
        /**
         * Label for the pop information.
         */
        this.label = '';
        /**
         * Hide label for the pop information.
         */
        this.hideLabel = false;
        /**
         * The purpose of payment code.
         */
        this.code = '';
        /**
         * The purpose of payment description.
         */
        this.description = '';
    }
    /**
     * Set truncation status of PoP message
     */
    setIsContentTruncated(isMessageTruncated) {
        this.isPoPMessageTruncated = isMessageTruncated;
    }
    /**
     * Toggle PoP message
     */
    togglePoP() {
        this.isPoPOpen = !this.isPoPOpen;
    }
}
/** @nocollapse */ PurposeOfPaymentDetailComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PurposeOfPaymentDetailComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PurposeOfPaymentDetailComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PurposeOfPaymentDetailComponent, selector: "bb-purpose-of-payment-detail", inputs: { label: "label", hideLabel: "hideLabel", code: "code", description: "description" }, ngImport: i0, template: "<ng-container *ngIf=\"code || description\">\n  <div\n    class=\"bb-text-bold\"\n    *ngIf=\"label; else defaultPurposeOfPaymentLabelTemplate\"\n  >\n    {{ label }}\n  </div>\n  <ng-template #defaultPurposeOfPaymentLabelTemplate>\n    <div\n      *ngIf=\"!hideLabel\"\n      class=\"bb-text-bold\"\n      i18n=\"@@purpose-of-payment-detail.label\"\n      data-role=\"payment-purpose-of-payment-label\"\n    >\n      Purpose of payment\n    </div>\n  </ng-template>\n\n  <div data-role=\"payment-purpose-of-payment\" *ngIf=\"description\">\n    <bb-ellipsis-ui [lineClamp]=\"isPoPOpen ? description.length : 3\">\n      <div bbIsContentTruncated [hostRef]=\"hostRef\">\n        <ng-container *ngIf=\"code\">{{ code }} - </ng-container>\n\n        {{ description }}\n      </div>\n    </bb-ellipsis-ui>\n\n    <button\n      *ngIf=\"isPoPMessageTruncated\"\n      bbButton\n      color=\"link-text\"\n      (click)=\"togglePoP()\"\n    >\n      <ng-container [ngSwitch]=\"isPoPOpen\">\n        <ng-container\n          *ngSwitchCase=\"true\"\n          i18n=\"@@purpose-of-payment-detail.showLessBtn\"\n        >\n          See less\n        </ng-container>\n        <ng-container\n          *ngSwitchDefault\n          i18n=\"@@purpose-of-payment-detail.showMoreBtn\"\n        >\n          See more\n        </ng-container>\n      </ng-container>\n    </button>\n  </div>\n</ng-container>\n", components: [{ type: i1.EllipsisComponent, selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.IsContentTruncatedDirective, selector: "[bbIsContentTruncated]", inputs: ["hostRef"] }, { type: i3.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2.NgSwitchDefault, selector: "[ngSwitchDefault]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PurposeOfPaymentDetailComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-purpose-of-payment-detail',
                    templateUrl: './purpose-of-payment-detail.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { label: [{
                type: Input
            }], hideLabel: [{
                type: Input
            }], code: [{
                type: Input
            }], description: [{
                type: Input
            }] } });
//# sourceMappingURL=purpose-of-payment-detail.component.js.map