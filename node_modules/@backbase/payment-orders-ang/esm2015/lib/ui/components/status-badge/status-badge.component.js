import { Component, Directive, Input } from '@angular/core';
import { Status, StatusBadgeColorMap } from '../../constants';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/badge";
import * as i2 from "@angular/common";
export class PayordStatusBadgeComponent {
    constructor() {
        this.hostRef = this;
        this.statusMap = Status;
        /**
         * Map containing the color to apply to each status
         */
        this.statusColorMap = StatusBadgeColorMap;
        /**
         * Sets the default case badge color if not found in the map
         */
        this.statusColorDefault = 'warning';
        /**
         * Sets when to display abbreviated badge text
         */
        this.showAbbreviated = false;
    }
    isKnownStatus() {
        return this.status && this.status in this.statusMap;
    }
}
/** @nocollapse */ PayordStatusBadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStatusBadgeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PayordStatusBadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PayordStatusBadgeComponent, selector: "bb-payord-status-badge", inputs: { status: "status", statusColorMap: "statusColorMap", statusColorDefault: "statusColorDefault", showAbbreviated: "showAbbreviated" }, ngImport: i0, template: "<ng-container\n  bbPayordStatusBadgeCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template bbPayordStatusBadgeCustomizable let-hostRef>\n  <ng-container *ngIf=\"hostRef.isKnownStatus(); else defaultStatus\">\n    <ng-container\n      *ngIf=\"hostRef.showAbbreviated\"\n      bbPayordStatusBadgeAbbreviationCustomizable\n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n    <ng-container\n      *ngIf=\"!hostRef.showAbbreviated\"\n      bbPayordStatusBadgeLabelCustomizable\n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n  </ng-container>\n\n  <ng-template #defaultStatus>\n    <bb-badge-ui\n      *ngIf=\"hostRef.showAbbreviated; else defaultStatusLabel\"\n      [color]=\"hostRef.statusColorDefault\"\n      [abbr]=\"hostRef.status.slice(0, 3)\"\n      [text]=\"hostRef.status | titlecase\"\n    ></bb-badge-ui>\n    <ng-template #defaultStatusLabel>\n      <bb-badge-ui\n        [color]=\"hostRef.statusColorDefault\"\n        [text]=\"hostRef.status | uppercase\"\n      ></bb-badge-ui>\n    </ng-template>\n  </ng-template>\n</ng-template>\n\n<ng-template bbPayordStatusBadgeAbbreviationCustomizable let-hostRef>\n  <span\n    class=\"d-none\"\n    aria-hidden=\"true\"\n    i18n=\"@@payord-status-badge.abbreviation.label\"\n    #abbreviation\n  >\n    {hostRef.status, select, OPEN {Ope} CLOSED {Clo} INVALID {Inv} VALID {Val}\n    ENTERED {Ent} READY {Rea} ACCEPTED {Acc} APPROVED {App} REJECTED {Rej}\n    CANCELLED {Can} CANCELLATION_PENDING {Can} PROCESSED {Pro} ACKNOWLEDGED\n    {Ack} DOWNLOADING {Dow} EXPIRED {Exp} PENDING {Pen} }\n  </span>\n  <span\n    class=\"d-none\"\n    aria-hidden=\"true\"\n    i18n=\"@@payord-status-badge.tooltip.label\"\n    #tooltip\n  >\n    {hostRef.status, select, OPEN {Open} CLOSED {Closed} INVALID {Invalid} VALID\n    {Valid} ENTERED {Entered} READY {Ready} ACCEPTED {Accepted} APPROVED\n    {Approved} REJECTED {Rejected} CANCELLED {Cancelled} CANCELLATION_PENDING\n    {Cancellation pending} PROCESSED {Processed} ACKNOWLEDGED {Acknowledged}\n    DOWNLOADING {Downloading} EXPIRED {Expired} PENDING {Pending} }\n  </span>\n  <bb-badge-ui\n    [color]=\"hostRef.statusColorMap[hostRef.status]\"\n    [abbr]=\"abbreviation.textContent\"\n    [text]=\"tooltip.textContent\"\n  ></bb-badge-ui>\n</ng-template>\n\n<ng-template bbPayordStatusBadgeLabelCustomizable let-hostRef>\n  <span\n    class=\"d-none\"\n    aria-hidden=\"true\"\n    i18n=\"@@payord-status-badge.label\"\n    #label\n  >\n    {hostRef.status, select, OPEN {Open} CLOSED {Closed} INVALID {Invalid} VALID\n    {Valid} ENTERED {Entered} READY {Ready} ACCEPTED {Accepted} APPROVED\n    {Approved} REJECTED {Rejected} CANCELLED {Cancelled} CANCELLATION_PENDING\n    {Cancellation pending} PROCESSED {Processed} ACKNOWLEDGED {Acknowledged}\n    DOWNLOADING {Downloading} EXPIRED {Expired} PENDING {Pending} }\n  </span>\n  <bb-badge-ui\n    [color]=\"hostRef.statusColorMap[hostRef.status]\"\n    [text]=\"label.textContent\"\n  ></bb-badge-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.BadgeComponent; }), selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i0.forwardRef(function () { return PayordStatusBadgeCustomizableDirective; }), selector: "[bbPayordStatusBadgeCustomizable]" }, { type: i0.forwardRef(function () { return i2.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return PayordStatusBadgeAbbreviationCustomizableDirective; }), selector: "[bbPayordStatusBadgeAbbreviationCustomizable]" }, { type: i0.forwardRef(function () { return PayordStatusBadgeLabelCustomizableDirective; }), selector: "[bbPayordStatusBadgeLabelCustomizable]" }], pipes: { "titlecase": i0.forwardRef(function () { return i2.TitleCasePipe; }), "uppercase": i0.forwardRef(function () { return i2.UpperCasePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStatusBadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payord-status-badge',
                    templateUrl: './status-badge.component.html',
                }]
        }], propDecorators: { status: [{
                type: Input
            }], statusColorMap: [{
                type: Input
            }], statusColorDefault: [{
                type: Input
            }], showAbbreviated: [{
                type: Input
            }] } });
export class PayordStatusBadgeCustomizableDirective extends BbTemplate {
}
/** @nocollapse */ PayordStatusBadgeCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStatusBadgeCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ PayordStatusBadgeCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: PayordStatusBadgeCustomizableDirective, selector: "[bbPayordStatusBadgeCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStatusBadgeCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbPayordStatusBadgeCustomizable]',
                }]
        }] });
export class PayordStatusBadgeAbbreviationCustomizableDirective extends BbTemplate {
}
/** @nocollapse */ PayordStatusBadgeAbbreviationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStatusBadgeAbbreviationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ PayordStatusBadgeAbbreviationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: PayordStatusBadgeAbbreviationCustomizableDirective, selector: "[bbPayordStatusBadgeAbbreviationCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStatusBadgeAbbreviationCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbPayordStatusBadgeAbbreviationCustomizable]',
                }]
        }] });
export class PayordStatusBadgeLabelCustomizableDirective extends BbTemplate {
}
/** @nocollapse */ PayordStatusBadgeLabelCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStatusBadgeLabelCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ PayordStatusBadgeLabelCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: PayordStatusBadgeLabelCustomizableDirective, selector: "[bbPayordStatusBadgeLabelCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStatusBadgeLabelCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbPayordStatusBadgeLabelCustomizable]',
                }]
        }] });
//# sourceMappingURL=status-badge.component.js.map