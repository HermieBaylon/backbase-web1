{"version":3,"file":"status-badge.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/status-badge/status-badge.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/status-badge/status-badge.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AAC9D,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;;;;AAM3D,MAAM,OAAO,0BAA0B;IAJvC;QAKW,YAAO,GAAG,IAAI,CAAC;QACf,cAAS,GAAG,MAAM,CAAC;QAM5B;;WAEG;QACM,mBAAc,GAAG,mBAAmB,CAAC;QAC9C;;WAEG;QACM,uBAAkB,GAAG,SAAS,CAAC;QACxC;;WAEG;QACM,oBAAe,GAAG,KAAK,CAAC;KAKlC;IAHC,aAAa;QACX,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC;IACtD,CAAC;;2IAvBU,0BAA0B;+HAA1B,0BAA0B,4MCRvC,g8FAoFA,uOD/Ca,sCAAsC,0NAQtC,kDAAkD,8GAQlD,2CAA2C;4FA7C3C,0BAA0B;kBAJtC,SAAS;mBAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,WAAW,EAAE,+BAA+B;iBAC7C;8BAQU,MAAM;sBAAd,KAAK;gBAIG,cAAc;sBAAtB,KAAK;gBAIG,kBAAkB;sBAA1B,KAAK;gBAIG,eAAe;sBAAvB,KAAK;;AAUR,MAAM,OAAO,sCAAuC,SAAQ,UAG3D;;uJAHY,sCAAsC;2IAAtC,sCAAsC;4FAAtC,sCAAsC;kBAHlD,SAAS;mBAAC;oBACT,QAAQ,EAAE,mCAAmC;iBAC9C;;AASD,MAAM,OAAO,kDAAmD,SAAQ,UAGvE;;mKAHY,kDAAkD;uJAAlD,kDAAkD;4FAAlD,kDAAkD;kBAH9D,SAAS;mBAAC;oBACT,QAAQ,EAAE,+CAA+C;iBAC1D;;AASD,MAAM,OAAO,2CAA4C,SAAQ,UAGhE;;4JAHY,2CAA2C;gJAA3C,2CAA2C;4FAA3C,2CAA2C;kBAHvD,SAAS;mBAAC;oBACT,QAAQ,EAAE,wCAAwC;iBACnD","sourcesContent":["import { Component, Directive, Input } from '@angular/core';\nimport { Status, StatusBadgeColorMap } from '../../constants';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-payord-status-badge',\n  templateUrl: './status-badge.component.html',\n})\nexport class PayordStatusBadgeComponent {\n  readonly hostRef = this;\n  readonly statusMap = Status;\n\n  /**\n   * Status to be displayed in the badge\n   */\n  @Input() status?: string;\n  /**\n   * Map containing the color to apply to each status\n   */\n  @Input() statusColorMap = StatusBadgeColorMap;\n  /**\n   * Sets the default case badge color if not found in the map\n   */\n  @Input() statusColorDefault = 'warning';\n  /**\n   * Sets when to display abbreviated badge text\n   */\n  @Input() showAbbreviated = false;\n\n  isKnownStatus() {\n    return this.status && this.status in this.statusMap;\n  }\n}\n\n@Directive({\n  selector: '[bbPayordStatusBadgeCustomizable]',\n})\nexport class PayordStatusBadgeCustomizableDirective extends BbTemplate<\n  PayordStatusBadgeComponent,\n  void\n> {}\n\n@Directive({\n  selector: '[bbPayordStatusBadgeAbbreviationCustomizable]',\n})\nexport class PayordStatusBadgeAbbreviationCustomizableDirective extends BbTemplate<\n  PayordStatusBadgeComponent,\n  void\n> {}\n\n@Directive({\n  selector: '[bbPayordStatusBadgeLabelCustomizable]',\n})\nexport class PayordStatusBadgeLabelCustomizableDirective extends BbTemplate<\n  PayordStatusBadgeComponent,\n  void\n> {}\n","<ng-container\n  bbPayordStatusBadgeCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template bbPayordStatusBadgeCustomizable let-hostRef>\n  <ng-container *ngIf=\"hostRef.isKnownStatus(); else defaultStatus\">\n    <ng-container\n      *ngIf=\"hostRef.showAbbreviated\"\n      bbPayordStatusBadgeAbbreviationCustomizable\n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n    <ng-container\n      *ngIf=\"!hostRef.showAbbreviated\"\n      bbPayordStatusBadgeLabelCustomizable\n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n  </ng-container>\n\n  <ng-template #defaultStatus>\n    <bb-badge-ui\n      *ngIf=\"hostRef.showAbbreviated; else defaultStatusLabel\"\n      [color]=\"hostRef.statusColorDefault\"\n      [abbr]=\"hostRef.status.slice(0, 3)\"\n      [text]=\"hostRef.status | titlecase\"\n    ></bb-badge-ui>\n    <ng-template #defaultStatusLabel>\n      <bb-badge-ui\n        [color]=\"hostRef.statusColorDefault\"\n        [text]=\"hostRef.status | uppercase\"\n      ></bb-badge-ui>\n    </ng-template>\n  </ng-template>\n</ng-template>\n\n<ng-template bbPayordStatusBadgeAbbreviationCustomizable let-hostRef>\n  <span\n    class=\"d-none\"\n    aria-hidden=\"true\"\n    i18n=\"@@payord-status-badge.abbreviation.label\"\n    #abbreviation\n  >\n    {hostRef.status, select, OPEN {Ope} CLOSED {Clo} INVALID {Inv} VALID {Val}\n    ENTERED {Ent} READY {Rea} ACCEPTED {Acc} APPROVED {App} REJECTED {Rej}\n    CANCELLED {Can} CANCELLATION_PENDING {Can} PROCESSED {Pro} ACKNOWLEDGED\n    {Ack} DOWNLOADING {Dow} EXPIRED {Exp} PENDING {Pen} }\n  </span>\n  <span\n    class=\"d-none\"\n    aria-hidden=\"true\"\n    i18n=\"@@payord-status-badge.tooltip.label\"\n    #tooltip\n  >\n    {hostRef.status, select, OPEN {Open} CLOSED {Closed} INVALID {Invalid} VALID\n    {Valid} ENTERED {Entered} READY {Ready} ACCEPTED {Accepted} APPROVED\n    {Approved} REJECTED {Rejected} CANCELLED {Cancelled} CANCELLATION_PENDING\n    {Cancellation pending} PROCESSED {Processed} ACKNOWLEDGED {Acknowledged}\n    DOWNLOADING {Downloading} EXPIRED {Expired} PENDING {Pending} }\n  </span>\n  <bb-badge-ui\n    [color]=\"hostRef.statusColorMap[hostRef.status]\"\n    [abbr]=\"abbreviation.textContent\"\n    [text]=\"tooltip.textContent\"\n  ></bb-badge-ui>\n</ng-template>\n\n<ng-template bbPayordStatusBadgeLabelCustomizable let-hostRef>\n  <span\n    class=\"d-none\"\n    aria-hidden=\"true\"\n    i18n=\"@@payord-status-badge.label\"\n    #label\n  >\n    {hostRef.status, select, OPEN {Open} CLOSED {Closed} INVALID {Invalid} VALID\n    {Valid} ENTERED {Entered} READY {Ready} ACCEPTED {Accepted} APPROVED\n    {Approved} REJECTED {Rejected} CANCELLED {Cancelled} CANCELLATION_PENDING\n    {Cancellation pending} PROCESSED {Processed} ACKNOWLEDGED {Acknowledged}\n    DOWNLOADING {Downloading} EXPIRED {Expired} PENDING {Pending} }\n  </span>\n  <bb-badge-ui\n    [color]=\"hostRef.statusColorMap[hostRef.status]\"\n    [text]=\"label.textContent\"\n  ></bb-badge-ui>\n</ng-template>\n"]}