{"version":3,"file":"beneficiary-scroll.directive.js","sourceRoot":"","sources":["../../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/directives/beneficiary-scroll.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  QueryList,\n  Self,\n} from '@angular/core';\nimport {\n  CdkVirtualScrollViewport,\n  VIRTUAL_SCROLL_STRATEGY,\n} from '@angular/cdk/scrolling';\nimport { Subject } from 'rxjs';\nimport { defaultBeneficiaryCdkScrollConfig } from '../constants/beneficiary-scroll-config';\nimport { BeneficiaryScrollStrategyService } from '../services/beneficiary-scroll-strategy.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[bbBeneficiaryScrollItem]',\n})\nexport class BeneficiaryScrollItemDirective {}\n\nexport function factoryScroll() {\n  return new BeneficiaryScrollStrategyService();\n}\n\n@Directive({\n  selector: '[bbBeneficiaryScroll]',\n  providers: [\n    {\n      provide: VIRTUAL_SCROLL_STRATEGY,\n      useFactory: factoryScroll,\n    },\n  ],\n})\nexport class BeneficiaryScrollDirective implements OnDestroy, AfterViewInit {\n  private readonly destroy$ = new Subject();\n\n  @ContentChildren(BeneficiaryScrollItemDirective, {\n    descendants: true,\n    read: ElementRef,\n  })\n  private listItems!: QueryList<ElementRef<HTMLElement>>;\n\n  /**\n   * Total items length of the list\n   */\n  @Input() bbBeneficiaryScrollTotalCount: number | undefined;\n\n  /**\n   * Trigger fetching more items\n   */\n  @Output('bbBeneficiaryScroll') loadMore = new EventEmitter<void>();\n\n  constructor(\n    @Self() private readonly viewport: CdkVirtualScrollViewport,\n    @Inject(VIRTUAL_SCROLL_STRATEGY)\n    private readonly scrollStrategy: BeneficiaryScrollStrategyService,\n    private readonly ngZone: NgZone\n  ) {\n    this.viewport.scrolledIndexChange\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        const dataLength = this.viewport.getDataLength();\n        const { end } = this.viewport.getRenderedRange();\n\n        if (\n          dataLength &&\n          end === dataLength &&\n          dataLength !== this.bbBeneficiaryScrollTotalCount\n        ) {\n          // CdkVirtualScrollViewport runs all events outside zone,\n          // to detect changes we need to emit load more event inside zone.\n          this.ngZone.run(() =>\n            Promise.resolve().then(() => {\n              this.loadMore.emit();\n            })\n          );\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    const { minBufferPx, maxBufferPx } = defaultBeneficiaryCdkScrollConfig;\n    const listItemSize =\n      this.listItems?.toArray()[0]?.nativeElement?.clientHeight;\n\n    if (listItemSize) {\n      this.scrollStrategy.updateItemAndBufferSize(\n        listItemSize,\n        minBufferPx,\n        maxBufferPx\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n}\n"]}