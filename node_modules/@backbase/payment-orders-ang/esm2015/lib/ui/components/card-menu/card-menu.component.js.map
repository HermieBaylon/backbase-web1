{"version":3,"file":"card-menu.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/card-menu/card-menu.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/card-menu/card-menu.component.html"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,MAAM,EACN,YAAY,GAEb,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;;;;;;AAY9D,MAAM,OAAO,uBAAuB;IAqBlC,YAAY,MAAwB;QApBpC;;;WAGG;QACM,UAAK,GAAwB,EAAE,CAAC;QAEzC;;;WAGG;QACM,qBAAgB,GAAG,CAAC,CAAC;QAE9B;;WAEG;QACH,4DAA4D;QAClD,WAAM,GAAG,IAAI,YAAY,EAAgB,CAAC;QAEpD,eAAU,GAAG,CAAC,CAAC;QAGb,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC;IAC5B,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACjD,CAAC,CAAC,IAAI,CAAC,gBAAgB;gBACvB,CAAC,CAAC,CAAC,CAAC;SACP;IACH,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,WAAW,CAAC,KAAa,EAAE,IAAkB;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;;wIAxCU,uBAAuB;4HAAvB,uBAAuB,+IAFvB,CAAC,gBAAgB,CAAC,0BCjB/B,qyBAyBA;4FDNa,uBAAuB;kBALnC,SAAS;mBAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,WAAW,EAAE,0BAA0B;oBACvC,SAAS,EAAE,CAAC,gBAAgB,CAAC;iBAC9B;uGAMU,KAAK;sBAAb,KAAK;gBAMG,gBAAgB;sBAAxB,KAAK;gBAMI,MAAM;sBAAf,MAAM","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n} from '@angular/core';\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\n\ninterface CardMenuItem {\n  name: string;\n  description?: string;\n}\n\n@Component({\n  selector: 'bb-payord-card-menu',\n  templateUrl: 'card-menu.component.html',\n  providers: [NgbTooltipConfig],\n})\nexport class PayordCardMenuComponent implements AfterViewInit {\n  /**\n   * List of tab items.\n   * Default is empty list.\n   */\n  @Input() items: Array<CardMenuItem> = [];\n\n  /**\n   * Initial selected tab item.\n   * Default is `0`.\n   */\n  @Input() initialSelection = 0;\n\n  /**\n   * Select event emitted when a new tab item has been selected.\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() select = new EventEmitter<CardMenuItem>();\n\n  activeItem = 0;\n\n  constructor(config: NgbTooltipConfig) {\n    config.container = 'body';\n  }\n\n  ngAfterViewInit() {\n    if (this.items) {\n      this.activeItem = this.items[this.initialSelection]\n        ? this.initialSelection\n        : 0;\n    }\n  }\n\n  onSelect(index: number) {\n    this.activeItem = index;\n    this.select.emit(this.items[index]);\n  }\n\n  trackByName(index: number, item: CardMenuItem): string {\n    return item.name;\n  }\n}\n","<div class=\"bb-card-menu bb-stack manual-batches-type-select overflow-auto\">\n  <div\n    class=\"bb-card-menu__option bb-stack__item manual-batches-type-select__button\"\n    [class.selected]=\"i === activeItem\"\n    role=\"button\"\n    tabindex=\"0\"\n    (bbKeyboardClick)=\"onSelect(i)\"\n    *ngFor=\"let item of items; trackBy: trackByName; let i = index\"\n  >\n    <bb-ellipsis-ui\n      [text]=\"item.name\"\n      tooltipTriggers=\"hover\"\n      class=\"bb-text-bold\"\n    >\n    </bb-ellipsis-ui>\n    <ng-container *ngIf=\"item.description\">\n      <bb-ellipsis-ui\n        [text]=\"item.description\"\n        tooltipTriggers=\"hover\"\n        [lineClamp]=\"2\"\n        class=\"bb-subheader bb-subheader--regular\"\n      ></bb-ellipsis-ui>\n    </ng-container>\n  </div>\n</div>\n"]}