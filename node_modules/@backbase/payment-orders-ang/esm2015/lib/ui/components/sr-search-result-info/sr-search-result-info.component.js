import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { debounceTime } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class PaymentsSrSearchResultInfoComponent {
    constructor() {
        this.debounceTotal = new BehaviorSubject(undefined);
        this.total$ = this.debounceTotal.pipe(debounceTime(1000));
    }
    /**
     * Total count of search result.
     */
    set totalNumber(val) {
        this.debounceTotal.next(val);
    }
    isNumber(val) {
        return typeof val === 'number';
    }
}
/** @nocollapse */ PaymentsSrSearchResultInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PaymentsSrSearchResultInfoComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PaymentsSrSearchResultInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaymentsSrSearchResultInfoComponent, selector: "bb-payments-sr-search-result-info", inputs: { totalNumber: "totalNumber" }, ngImport: i0, template: "<div class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\" role=\"status\">\n  <ng-container *ngIf=\"{ total: total$ | async } as data\">\n    <ng-container *ngIf=\"isNumber(data.total)\">\n      <ng-content></ng-content>\n      <span i18n=\"@@sr-search-result-info-label.someValue\">\n        {data.total, plural, =0 {No results found} =1 {1 result found} other\n        {{{data.total}} results found}}\n      </span>\n    </ng-container>\n  </ng-container>\n</div>\n", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PaymentsSrSearchResultInfoComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payments-sr-search-result-info',
                    templateUrl: 'sr-search-result-info.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { totalNumber: [{
                type: Input
            }] } });
//# sourceMappingURL=sr-search-result-info.component.js.map