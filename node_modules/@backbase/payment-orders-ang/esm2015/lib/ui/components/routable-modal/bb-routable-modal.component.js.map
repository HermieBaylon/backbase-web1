{"version":3,"file":"bb-routable-modal.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/routable-modal/bb-routable-modal.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PUBSUB, Pubsub, Unsubscribe } from '@backbase/foundation-ang/web-sdk';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { RoutableModalParamName } from '../../models/types';\nimport { RoutableModalService } from './bb-routable-modal-service';\n\n@Component({\n  selector: 'bb-routable-modal',\n  template: `\n    <bb-modal-ui\n      class=\"bb-modal-container\"\n      [isOpen]=\"isModalOpen$ | async\"\n      [modalOptions]=\"modalOptions || defaultModalOptions\"\n      (dismissCallback)=\"closeModal()\"\n    >\n      <bb-modal-header-ui *ngIf=\"showHeader\">\n        <ng-template bbCustomModalHeader>\n          <div class=\"bb-stack bb-stack--density-xs\">\n            <div class=\"bb-stack__item\" *ngIf=\"modalTitleIcon\">\n              <bb-icon-ui\n                [name]=\"modalTitleIcon\"\n                class=\"bb-text-disabled bb-modal-container__header-icon\"\n              >\n              </bb-icon-ui>\n            </div>\n\n            <div class=\"bb-stack__item\" *ngIf=\"modalTitle\">\n              <bb-header-ui\n                class=\"bb-modal-container__header-title\"\n                [headingType]=\"modalHeadingType\"\n                [heading]=\"modalTitle\"\n              ></bb-header-ui>\n            </div>\n\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right\"\n              *ngIf=\"closeButton\"\n            >\n              <button\n                bbButton\n                class=\"bb-modal-container__close-btn bb-text-support\"\n                circle=\"true\"\n                buttonSize=\"sm\"\n                color=\"unstyled\"\n                (click)=\"closeModal()\"\n                aria-label=\"Close modal dialog\"\n                i18n-aria-label=\"\n                  Close template detail dialog@@modal-container.close-btn\"\n              >\n                <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n              </button>\n            </div>\n          </div>\n        </ng-template>\n      </bb-modal-header-ui>\n      <bb-modal-body-ui>\n        <ng-template bbCustomModalBody>\n          <ng-content></ng-content>\n        </ng-template>\n      </bb-modal-body-ui>\n    </bb-modal-ui>\n  `,\n})\nexport class RoutableModalComponent implements OnDestroy, OnInit {\n  /**\n   * Modal Options\n   */\n  @Input() modalOptions?: NgbModalOptions;\n  /**\n   * Flag to show close button\n   */\n  @Input() closeButton = false;\n  /**\n   * Modal window name (url friendly, without spaces)\n   */\n  @Input() modalWindowName = '';\n  /**\n   * Flag to show modal header\n   */\n  @Input() showHeader = true;\n  /**\n   * Modal Title\n   */\n  @Input() modalTitle = '';\n  /**\n   * Modal Title Icon\n   */\n  @Input() modalTitleIcon = '';\n  /**\n   * Modal heading type (h1-h6)\n   */\n  @Input() modalHeadingType = 'h2';\n  /**\n   * Event emitted when the modal visibility has changed\n   */\n  @Output() visibilityChange = new EventEmitter();\n\n  isModalOpen$ = new BehaviorSubject(false);\n\n  readonly defaultModalOptions = {\n    backdrop: 'static',\n    keyboard: false,\n    size: 'lg',\n    animation: false,\n    scrollable: false,\n    windowClass: '',\n  };\n  private subscription!: Subscription;\n  unsubscribeEvent!: Unsubscribe;\n\n  constructor(\n    private route: ActivatedRoute,\n    private readonly modalService: RoutableModalService,\n    @Inject(PUBSUB) private readonly eventBus: Pubsub\n  ) {}\n\n  ngOnInit() {\n    this.unsubscribeEvent = this.eventBus.subscribe(\n      this.modalWindowName,\n      () => {\n        this.modalService.openModal(this.modalWindowName);\n      }\n    );\n\n    this.subscription = this.route.queryParams.subscribe((params) => {\n      if (\n        params[RoutableModalParamName] === this.modalWindowName &&\n        !this.isModalOpen$.value\n      ) {\n        this.openModal();\n      } else if (this.isModalOpen$.value) {\n        this.closeModal();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n    this.unsubscribeEvent?.();\n  }\n\n  openModal() {\n    this.isModalOpen$.next(true);\n    this.visibilityChange.emit(true);\n  }\n\n  closeModal() {\n    this.isModalOpen$.next(false);\n    this.visibilityChange.emit(false);\n    this.modalService.closeModal();\n  }\n}\n"]}