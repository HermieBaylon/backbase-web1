{"version":3,"file":"table-checkbox.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/table-checkbox/table-checkbox.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/table-checkbox/table-checkbox.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACxE,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;;;AAMxD,MAAM,OAAO,sBAAsB;IAqBjC,YAA6B,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;IAAG,CAAC;IAR5D,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC;IAC7C,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAID,OAAO,CAAC,KAAY;QAClB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;gBACrD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO;oBACtC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC;aAC7C;YACD,IAAI,CAAC,WAAW,CAAC,UAAU,CACzB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CACzC,CAAC;SACH;IACH,CAAC;;uIAnCU,sBAAsB;2HAAtB,sBAAsB,uLAUF,UAAU,2CCjB3C,2VAWA;4FDJa,sBAAsB;kBAJlC,SAAS;mBAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,WAAW,EAAE,iCAAiC;iBAC/C;qGAKU,GAAG;sBAAX,KAAK;gBAIG,KAAK;sBAAb,KAAK;gBAGN,aAAa;sBADZ,SAAS;uBAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE","sourcesContent":["import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { TableDirective } from '@backbase/ui-ang/table';\n\n@Component({\n  selector: 'bb-table-checkbox',\n  templateUrl: './table-checkbox.component.html',\n})\nexport class TableCheckboxComponent {\n  /**\n   * The data of the parent row\n   */\n  @Input() row?: any;\n  /**\n   * The ID of the parent row\n   */\n  @Input() rowId?: string;\n\n  @ViewChild('checkbox', { read: ElementRef, static: true })\n  checkboxInput?: ElementRef<HTMLInputElement>;\n\n  get rowItem(): any {\n    return this.row || this.rowId || undefined;\n  }\n\n  get isChecked(): boolean {\n    return this.parentTable.isSelected(this.rowItem);\n  }\n\n  constructor(private readonly parentTable: TableDirective) {}\n\n  onClick(event: Event) {\n    event.stopPropagation();\n    if (this.checkboxInput) {\n      if (event.target !== this.checkboxInput.nativeElement) {\n        this.checkboxInput.nativeElement.checked =\n          !this.checkboxInput.nativeElement.checked;\n      }\n      this.parentTable.toggleItem(\n        this.rowItem,\n        this.checkboxInput.nativeElement.checked\n      );\n    }\n  }\n}\n","<div class=\"bb-input-checkbox bb-stack\" (click)=\"onClick($event)\">\n  <input\n    #checkbox\n    type=\"checkbox\"\n    [checked]=\"isChecked\"\n    aria-label=\"select item\"\n    class=\"bb-input-checkbox__input\"\n    i18n-aria-label=\"@@bb-table-checkbox.aria-label\"\n  />\n  <span class=\"bb-input-checkbox__content\"></span>\n</div>\n"]}