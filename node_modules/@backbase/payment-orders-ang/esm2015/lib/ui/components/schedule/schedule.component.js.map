{"version":3,"file":"schedule.component.js","sourceRoot":"","sources":["../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/schedule/schedule.component.ts","../../../../../../../../libs/payment-orders-ang/src/lib/ui/components/schedule/schedule.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  DoCheck,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs';\nimport { distinct, takeUntil } from 'rxjs/operators';\nimport { Frequencies } from '../../constants';\n\nexport interface ScheduleFrequency {\n  value: string;\n  every: string;\n}\n\nexport interface ScheduleItem {\n  frequency: ScheduleFrequency;\n  startDate: string;\n  endDate?: string;\n  repeat?: number;\n  every?: string;\n  endType?: string;\n  scheduleInfo?: string;\n}\n\nexport const endTypes = {\n  never: 'never',\n  on: 'on',\n  after: 'after',\n};\n\nconst endDate = (frequency: ScheduleFrequency, startDate?: string) => {\n  const today = startDate ? new Date(startDate) : new Date();\n  switch (frequency.value) {\n    case Frequencies.ONCE:\n      return undefined;\n    case Frequencies.WEEKLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 7\n      ).toISOString();\n    }\n    case Frequencies.BIWEEKLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 14\n      ).toISOString();\n    }\n    case Frequencies.MONTHLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth() + 1,\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.QUARTERLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth() + 3,\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.YEARLY: {\n      return new Date(\n        today.getFullYear() + 1,\n        today.getMonth(),\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.DAILY:\n    default: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 1\n      ).toISOString();\n    }\n  }\n};\n\n@Component({\n  selector: 'bb-schedule-ui',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnInit, DoCheck, OnDestroy {\n  readonly hostRef: ScheduleComponent = this;\n\n  /**\n   * List of available frequencies\n   */\n  @Input() frequencies: Array<ScheduleFrequency> | undefined;\n  /**\n   * Minimum repeat allowed\n   */\n  @Input() minOccurs: number | undefined;\n  /**\n   * Maximum repeat allowed\n   */\n  @Input() maxOccurs: number | undefined;\n  /**\n   * Form with schedule fields\n   */\n  @Input() scheduleForm: FormGroup | undefined;\n  /**\n   * Whether the submit button is pressed\n   */\n  @Input() formSubmitted: boolean | undefined;\n\n  get endTypes() {\n    return endTypes;\n  }\n\n  get item() {\n    return this.rawItem;\n  }\n\n  get isSingleTransfer(): boolean | undefined {\n    return (\n      this.item &&\n      this.item.frequency &&\n      (this.item.frequency.value\n        ? this.item.frequency.value.toLocaleLowerCase() === 'once'\n        : false)\n    );\n  }\n\n  get today(): NgbDateStruct {\n    const today = new Date();\n    return {\n      year: today.getFullYear(),\n      month: today.getMonth() + 1,\n      day: today.getDate(),\n    };\n  }\n\n  private readonly gc$ = new Subject<void>();\n  private rawItem: ScheduleItem | undefined;\n\n  constructor(private readonly changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck() {\n    if (this.scheduleForm !== undefined) {\n      this.rawItem = this.scheduleForm.getRawValue();\n    }\n  }\n\n  ngOnInit() {\n    if (this.scheduleForm === undefined) {\n      throw new Error(\n        '`scheduleForm` input is required in `bb-schedule-ui` component'\n      );\n    }\n\n    if (this.frequencies === undefined) {\n      throw new Error(\n        '`frequencies` input is required in `bb-schedule-ui` component'\n      );\n    }\n\n    this.rawItem = this.scheduleForm.getRawValue();\n\n    this.onEndTypeChange();\n    this.onFrequencyChange();\n    this.onStartDateChange();\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n\n  private onEndTypeChange() {\n    const endTypeControl =\n      this.scheduleForm && this.scheduleForm.get('endType');\n    const frequencyControl =\n      this.scheduleForm && this.scheduleForm.get('frequency');\n    if (endTypeControl) {\n      endTypeControl.valueChanges\n        .pipe(takeUntil(this.gc$))\n        .subscribe((endTypeValue: string) => {\n          this.setControlsState(endTypeValue);\n          if (frequencyControl) {\n            this.setEndDate(frequencyControl.value);\n          }\n        });\n    }\n  }\n\n  private setControlsState(endTypeValue: string) {\n    if (!this.scheduleForm) {\n      return;\n    }\n    const endDateControl = this.scheduleForm.get('endDate');\n    const repeatControl = this.scheduleForm.get('repeat');\n    if (endDateControl && repeatControl) {\n      if (endDateControl.value) {\n        endDateControl.enable();\n      } else {\n        this.setEndDate({ value: Frequencies.DAILY, every: '1' });\n        endDateControl.disable();\n      }\n      if (repeatControl.value) {\n        repeatControl.enable();\n      } else {\n        repeatControl.disable();\n      }\n      switch (endTypeValue) {\n        case endTypes.after: {\n          repeatControl.enable();\n          endDateControl.disable();\n          break;\n        }\n        case endTypes.on: {\n          endDateControl.enable();\n          repeatControl.disable();\n          break;\n        }\n        case endTypes.never:\n        default: {\n          endDateControl.disable();\n          repeatControl.disable();\n          break;\n        }\n      }\n    }\n  }\n\n  private onStartDateChange() {\n    const startDateControl =\n      this.scheduleForm && this.scheduleForm.get('startDate');\n    const startDate = startDateControl && startDateControl.value;\n\n    if (startDateControl) {\n      startDateControl.valueChanges\n        .pipe(takeUntil(this.gc$), distinct())\n        .subscribe((value) => {\n          const frequency = this.item && this.item.frequency;\n          if (frequency && startDate !== value) {\n            this.setEndDate(frequency);\n          }\n        });\n    }\n  }\n\n  private onFrequencyChange() {\n    if (!this.frequencies) {\n      return;\n    }\n    const frequencyControl =\n      this.scheduleForm && this.scheduleForm.get('frequency');\n    if (frequencyControl) {\n      if (this.isSingleTransfer) {\n        frequencyControl.setValue(this.frequencies[0]);\n      }\n      frequencyControl.valueChanges\n        .pipe(takeUntil(this.gc$))\n        .subscribe((freq) => {\n          this.setEndDate(freq);\n        });\n    }\n  }\n\n  private setEndDate(frequency: ScheduleFrequency) {\n    const endDateControl =\n      this.scheduleForm && this.scheduleForm.get('endDate');\n    const startDateControl =\n      this.scheduleForm && this.scheduleForm.get('startDate');\n    const startDate = startDateControl && startDateControl.value;\n    const endTypeControl =\n      this.scheduleForm && this.scheduleForm.get('endType');\n    if (\n      endDateControl &&\n      endTypeControl &&\n      endTypeControl.value === this.endTypes.on\n    ) {\n      endDateControl.setValue(endDate(frequency, startDate));\n    }\n    this.changeDetectorRef.detectChanges();\n  }\n\n  isInvalidControl(control: FormControl): boolean {\n    if (!this.scheduleForm) {\n      return false;\n    }\n\n    if (!this.formSubmitted) {\n      control.markAsUntouched();\n    }\n\n    return !!this.formSubmitted && control.invalid;\n  }\n}\n\n@Directive({\n  selector:\n    '[bbScheduleCustomizable], [bbPayordInitiatePaymentScheduleCustomizable]',\n})\nexport class ScheduleCustomizableDirective extends BbTemplate<\n  ScheduleComponent,\n  undefined\n> {}\n","<ng-template bbScheduleCustomizable let-hostRef>\n  <div [formGroup]=\"hostRef.scheduleForm\">\n    <div class=\"bb-block bb-block--md\"></div>\n    <div class=\"row bb-block bb-block--md\">\n      <div class=\"col-md-7\">\n        <label class=\"bb-text-bold\" [attr.for]=\"startDatePicker.id\">\n          <ng-container\n            i18n=\"\n              Schedule execution label|Label for an execution date in scheduling\n              component@@bb-schedule-ui.label.execution\"\n            >{hostRef.scheduleForm?.get('frequency')?.value?.value.toUpperCase(),\n            select, ONCE {Execute on} other {Start on}}\n          </ng-container>\n        </label>\n\n        <bb-input-datepicker-ui\n          #startDatePicker\n          [minDate]=\"hostRef.today\"\n          formControlName=\"startDate\"\n          data-role=\"execution-date-calendar\"\n        ></bb-input-datepicker-ui>\n\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"\n            hostRef.isInvalidControl(hostRef.scheduleForm.get('startDate'))\n          \"\n        >\n          <span\n            data-role=\"missing-schedule-execution-date\"\n            *ngIf=\"hostRef.scheduleForm.get('startDate').errors?.required\"\n            i18n=\"\n              Execution date required error text|Error required message for\n              Execution date input field@@bb-schedule.error.required.startDate\"\n          >\n            Execution date is required\n          </span>\n\n          <span\n            data-role=\"past-date-schedule-execution-date\"\n            *ngIf=\"hostRef.scheduleForm.get('startDate').errors?.pastDate\"\n            i18n=\"\n              Execution date past date error text |Error past date message for\n              Execution date input field@@bb-schedule.error.pastDate.startDate\"\n          >\n            Execution date cannot be in the past\n          </span>\n\n          <span\n            data-role=\"invalid-date-schedule-execution-date\"\n            *ngIf=\"\n              hostRef.scheduleForm.get('startDate').errors?.invalidDateFormat\n            \"\n            i18n=\"\n              Execution date invalid date error text |Error invalid date format\n              message for Execution date input\n              field@@bb-schedule.error.invalidDateFormat\"\n          >\n            Invalid date format\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div class=\"row bb-block bb-block--md\">\n      <div class=\"col-md-7\">\n        <label\n          class=\"bb-text-bold\"\n          [attr.for]=\"frequencySelector.id\"\n          i18n=\"Frequency|Label for frequency@@bb-schedule-ui.frequency.label\"\n        >\n          Frequency\n        </label>\n\n        <bb-dropdown-single-select-ui\n          #frequencySelector\n          displayAttributePath=\"value\"\n          formControlName=\"frequency\"\n          data-role=\"frequency-selector\"\n        >\n          <bb-dropdown-single-select-option-ui\n            label=\"Once\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[0]\"\n            i18n-label=\"\n              Once|Once frequency type Label@@bb-schedule-ui.frequency.Once\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Daily\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[1]\"\n            i18n-label=\"\n              Daily|Daily frequency type Label@@bb-schedule-ui.frequency.Daily\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Weekly\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[2]\"\n            i18n-label=\"\n              Weekly|Weekly frequency type\n              Label@@bb-schedule-ui.frequency.Weekly\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Biweekly\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[3]\"\n            i18n-label=\"\n              Biweekly|Biweekly frequency type\n              Label@@bb-schedule-ui.frequency.Biweekly\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Monthly\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[4]\"\n            i18n-label=\"\n              Monthly|Monthly frequency type\n              Label@@bb-schedule-ui.frequency.Monthly\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Quarterly\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[5]\"\n            i18n-label=\"\n              Quarterly|Quarterly frequency type\n              Label@@bb-schedule-ui.frequency.Quarterly\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Annually\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[6]\"\n            i18n-label=\"\n              Annually|Annually frequency type\n              Label@@bb-schedule-ui.frequency.Annually\"\n          ></bb-dropdown-single-select-option-ui>\n        </bb-dropdown-single-select-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-7\" [hidden]=\"hostRef.isSingleTransfer\">\n        <bb-input-radio-group-ui\n          label=\"End\"\n          data-role=\"radio-group\"\n          formControlName=\"endType\"\n          i18n-label=\"\n            Schedule ending section name|Label for the section containing inputs\n            that determine way of ending of the\n            schedule@@bb-schedule-ui.label.ending\"\n        >\n          <bb-input-radio-ui\n            [value]=\"hostRef.endTypes.never\"\n            [labelTemplate]=\"neverEndingSchedule\"\n          ></bb-input-radio-ui>\n\n          <bb-input-radio-ui\n            [value]=\"hostRef.endTypes.on\"\n            [labelTemplate]=\"onDateSchedule\"\n          ></bb-input-radio-ui>\n\n          <bb-input-radio-ui\n            [value]=\"hostRef.endTypes.after\"\n            [labelTemplate]=\"endingAfterSchedule\"\n          ></bb-input-radio-ui>\n        </bb-input-radio-group-ui>\n\n        <ng-template #neverEndingSchedule>\n          <span\n            class=\"bb-text-default\"\n            data-role=\"ending-never-selector\"\n            i18n=\"\n              Schedule never ends|Label for an option to never end the\n              schedule@@bb-schedule-ui.label.ending.never\"\n          >\n            Never\n          </span>\n        </ng-template>\n\n        <ng-template #onDateSchedule>\n          <div data-role=\"ending-on-selector\">\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\">\n                <span\n                  class=\"bb-text-default\"\n                  i18n=\"\n                    Schedule end date|Label for an option to end the schedule on\n                    a specific date@@bb-schedule-ui.label.ending.on\"\n                >\n                  On date\n                </span>\n              </div>\n\n              <div class=\"bb-stack__item bb-stack__item--fill\">\n                <bb-input-datepicker-ui\n                  [minDate]=\"hostRef.today\"\n                  aria-label=\"End date\"\n                  formControlName=\"endDate\"\n                  data-role=\"ending-end-date\"\n                  i18n-aria-label=\"\n                    Schedule end date date picker label|Aria label for end date\n                    schedule control@@bb-schedule-ui.label.end-date\"\n                  *ngIf=\"\n                    hostRef.scheduleForm.get('endDate').enabled &&\n                    hostRef.scheduleForm.get('endType').value ==\n                      hostRef.endTypes.on\n                  \"\n                ></bb-input-datepicker-ui>\n\n                <bb-input-validation-message-ui\n                  role=\"alert\"\n                  *ngIf=\"hostRef.scheduleForm.get('endDate') as control\"\n                  [showErrors]=\"hostRef.isInvalidControl(control)\"\n                >\n                  <span\n                    *ngIf=\"control.errors?.pastDate\"\n                    i18n=\"\n                      End date past date error text |Error past date message for\n                      End date input field@@bb-schedule.error.pastDate.endDate\"\n                    data-role=\"past-date-ending-end-date\"\n                  >\n                    End date cannot be in the past\n                  </span>\n                  <span\n                    *ngIf=\"control.errors?.required\"\n                    i18n=\"\n                      End date required error text|Error required message for\n                      End date input field@@bb-schedule.error.required.endDate\"\n                    data-role=\"missing-schedule-end-date\"\n                  >\n                    End date is required\n                  </span>\n                  <span\n                    *ngIf=\"control.errors?.invalidDateFormat\"\n                    i18n=\"\n                      End date invalid date error text |Error invalid date\n                      format message for End date input\n                      field@@bb-schedule.invalidDateFormat.endDate\"\n                    data-role=\"invalid-date-schedule-end-date\"\n                  >\n                    Invalid date format\n                  </span>\n                </bb-input-validation-message-ui>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n\n        <ng-template #endingAfterSchedule>\n          <div data-role=\"ending-occurrences-selector\">\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\">\n                <span\n                  class=\"bb-text-default\"\n                  i18n=\"\n                    Schedule number of occurrences|Label for an option to end\n                    the schedule after some number of\n                    occurrences@@bb-schedule-ui.label.ending.after\"\n                >\n                  After\n                </span>\n              </div>\n\n              <div class=\"bb-stack__item bb-stack__item--fill\">\n                <div\n                  class=\"bb-stack\"\n                  *ngIf=\"\n                    hostRef.scheduleForm.get('repeat').enabled &&\n                    hostRef.scheduleForm.get('endType').value ==\n                      hostRef.endTypes.after\n                  \"\n                >\n                  <div class=\"bb-stack__item\">\n                    <bb-input-number-ui\n                      id=\"ending-occurrences\"\n                      formControlName=\"repeat\"\n                      [min]=\"hostRef.minOccurs\"\n                      [max]=\"hostRef.maxOccurs\"\n                      data-role=\"ending-occurrences\"\n                    ></bb-input-number-ui>\n                  </div>\n\n                  <div class=\"bb-stack__item\">\n                    <span\n                      class=\"bb-text-default\"\n                      i18n=\"\n                        Schedule occurrences text|Text to be appended after\n                        schedule end after some number of occurrences\n                        input@@bb-schedule-ui.label.ending.occurrences\"\n                    >\n                      occurrences\n                    </span>\n                  </div>\n                </div>\n\n                <bb-input-validation-message-ui\n                  role=\"alert\"\n                  [showErrors]=\"\n                    hostRef.item.endType === hostRef.endTypes.after &&\n                    hostRef.isInvalidControl(hostRef.scheduleForm.get('repeat'))\n                  \"\n                >\n                  <span\n                    data-role=\"ending-occurrences-too-few\"\n                    *ngIf=\"hostRef.scheduleForm.get('repeat').errors?.min\"\n                    i18n=\"\n                      Repeat less then min error text |Error min message for\n                      repeat input field@@bb-schedule.error.min.repeat\"\n                  >\n                    Value is below the minimum allowed occurrences ({{\n                      hostRef.minOccurs\n                    }})\n                  </span>\n\n                  <span\n                    data-role=\"ending-occurrences-too-many\"\n                    *ngIf=\"hostRef.scheduleForm.get('repeat').errors?.max\"\n                    i18n=\"\n                      Repeat more then max error text |Error max message for\n                      repeat input field@@bb-schedule.error.max.repeat\"\n                  >\n                    Value exceeds the maximum allowed occurrences ({{\n                      hostRef.maxOccurs\n                    }})\n                  </span>\n\n                  <span\n                    data-role=\"missing-ending-occurrences\"\n                    *ngIf=\"hostRef.scheduleForm.get('repeat').errors?.required\"\n                    i18n=\"\n                      Repeat required error text |Error required message for\n                      repeat input field@@bb-schedule.error.required.repeat\"\n                  >\n                    Value is required\n                  </span>\n                </bb-input-validation-message-ui>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-container bbScheduleCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n"]}