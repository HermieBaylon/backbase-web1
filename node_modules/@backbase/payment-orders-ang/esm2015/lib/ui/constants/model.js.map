{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../../../../libs/payment-orders-ang/src/lib/ui/constants/model.ts"],"names":[],"mappings":"AAOA,MAAM,CAAC,MAAM,gBAAgB,GAAG,IAAI,CAAC;AACrC,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAG,CAAC;AAExC,MAAM,CAAC,MAAM,wBAAwB,GAAG;IACtC,YAAY,EAAE,UAAU;IACxB,SAAS,EAAE,QAAQ;IACnB,aAAa,EAAE,cAAc;CAC9B,CAAC;AAEF,MAAM,CAAN,IAAY,eAGX;AAHD,WAAY,eAAe;IACzB,wCAAqB,CAAA;IACrB,wCAAqB,CAAA;AACvB,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B;AAED,MAAM,CAAC,MAAM,4BAA4B,GAAG;IAC1C,eAAe,CAAC,QAAQ;IACxB,eAAe,CAAC,QAAQ;CACzB,CAAC;AAMF,MAAM,CAAN,IAAY,SASX;AATD,WAAY,SAAS;IACnB,4BAAe,CAAA;IACf,0BAAa,CAAA;IACb,oCAAuB,CAAA;IACvB,gCAAmB,CAAA;IACnB,kCAAqB,CAAA;IACrB,kDAAqC,CAAA;IACrC,oCAAuB,CAAA;IACvB,4BAAe,CAAA;AACjB,CAAC,EATW,SAAS,KAAT,SAAS,QASpB;AAED,MAAM,CAAN,IAAY,eAIX;AAJD,WAAY,eAAe;IACzB,6CAA0B,CAAA;IAC1B,wCAAqB,CAAA;IACrB,sCAAmB,CAAA;AACrB,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport {\n  ContactsAndArrangementsGetParams,\n  ExternalAccountFormItem,\n  InternalAccountFormItem,\n} from '../models/types';\n\nexport const contactsPageSize = 1000;\nexport const arrangementsPageSize = 100;\n\nexport const dataItemPermissionParams = {\n  resourceName: 'Payments',\n  privilege: 'create',\n  dataGroupType: 'ARRANGEMENTS',\n};\n\nexport enum BeneficiaryList {\n  CONTACTS = 'contacts',\n  ACCOUNTS = 'accounts',\n}\n\nexport const defaultBeneficiaryTabsConfig = [\n  BeneficiaryList.CONTACTS,\n  BeneficiaryList.ACCOUNTS,\n];\n\nexport interface FetchCreditorItemsParams {\n  type?: BeneficiaryList;\n  params?: ContactsAndArrangementsGetParams;\n}\nexport enum ListState {\n  EMPTY = 'empty',\n  LIST = 'list',\n  FULL_LIST = 'full-list',\n  LOADING = 'loading',\n  FETCHING = 'fetching',\n  FETCHING_FAILURE = 'fetching-failure',\n  NO_RESULT = 'no-result',\n  ERROR = 'error',\n}\n\nexport enum PaymentTypeIcon {\n  INTERNATIONAL = 'language',\n  DOMESTIC = 'accounts',\n  INTERNAL = 'domain',\n}\n\nexport interface BeneficiaryListState {\n  accounts: ListState;\n  contacts: ListState;\n}\n\nexport interface BeneficiaryData {\n  accounts: InternalAccountFormItem[] | HttpErrorResponse;\n  contacts: ExternalAccountFormItem[] | HttpErrorResponse;\n  totalCreditAccounts: number;\n  totalContacts: number;\n  totalContactsItemsCount: number;\n}\n\nexport interface BeneficiaryDetailsTitle {\n  beneficiaryTitle: string;\n  addressTitle: string;\n  bankTitle: string;\n}\n"]}