import { HttpResponse } from '@angular/common/http';
import { ContactsPostRequestBody } from '@backbase/data-ang/contact-manager';
import { BankDetails, CounterPartyDetails } from '../../configs/models/form-items.model';
import { ContactItem, ContactList } from '../models/types';
export declare function contactItemFromService(contact: ContactItem): {
    name: string;
    addressLine1: string | undefined;
    addressLine2: string | undefined;
    streetName: string | undefined;
    town: string | undefined;
    postCode: string | undefined;
    countrySubDivision: string | undefined;
    country: string | undefined;
    accounts: {
        accountNumber: string;
        name?: string | undefined;
        alias?: string | undefined;
        accountType?: string | undefined;
        IBAN?: string | undefined;
        phoneNumber?: string | undefined;
        email?: string | undefined;
        BIC?: string | undefined;
        bankCode?: string | undefined;
        bankName?: string | undefined;
        bankAddressLine1?: string | undefined;
        bankAddressLine2?: string | undefined;
        bankStreetName?: string | undefined;
        bankTown?: string | undefined;
        bankPostCode?: string | undefined;
        bankCountrySubDivision?: string | undefined;
        bankCountry?: string | undefined;
        accountHolderAddressLine1?: string | undefined;
        accountHolderAddressLine2?: string | undefined;
        accountHolderStreetName?: string | undefined;
        accountHolderTown?: string | undefined;
        accountHolderPostCode?: string | undefined;
        accountHolderCountrySubDivision?: string | undefined;
        accountHolderCountry?: string | undefined;
        additions?: {
            [key: string]: string;
        } | undefined;
    }[];
    id: string;
};
export declare function mapContactAccounts(contact: ContactItem): {
    addressLine1: string | undefined;
    addressLine2: string | undefined;
    streetName: string | undefined;
    town: string | undefined;
    postCode: string | undefined;
    countrySubDivision: string | undefined;
    country: string | undefined;
    accounts: {
        accountNumber: string;
        email: string | undefined;
        phoneNumber: string | undefined;
        name?: string | undefined;
        alias?: string | undefined;
        accountType?: string | undefined;
        IBAN?: string | undefined;
        BIC?: string | undefined;
        bankCode?: string | undefined;
        bankName?: string | undefined;
        bankAddressLine1?: string | undefined;
        bankAddressLine2?: string | undefined;
        bankStreetName?: string | undefined;
        bankTown?: string | undefined;
        bankPostCode?: string | undefined;
        bankCountrySubDivision?: string | undefined;
        bankCountry?: string | undefined;
        accountHolderAddressLine1?: string | undefined;
        accountHolderAddressLine2?: string | undefined;
        accountHolderStreetName?: string | undefined;
        accountHolderTown?: string | undefined;
        accountHolderPostCode?: string | undefined;
        accountHolderCountrySubDivision?: string | undefined;
        accountHolderCountry?: string | undefined;
        additions?: {
            [key: string]: string;
        } | undefined;
    }[];
    id: string;
    accountName?: string | undefined;
    name: string;
}[];
export declare function contactListFromService(response: HttpResponse<ContactItem[]>, isLoadMore?: boolean): ContactList;
export declare function contactItemToService(counterparty: CounterPartyDetails): ContactsPostRequestBody;
export declare function getBankDetails({ bankBranchCode: bankCode, bic: BIC, bankName, postalAddress, }: BankDetails): {
    bankCode: string | undefined;
    BIC: string | undefined;
    bankName: string | undefined;
    bankAddressLine1: string | undefined;
    bankAddressLine2: string | undefined;
    bankStreetName: string | undefined;
    bankPostCode: string | undefined;
    bankTown: string | undefined;
    bankCountrySubDivision: string | undefined;
    bankCountry: string | undefined;
};
