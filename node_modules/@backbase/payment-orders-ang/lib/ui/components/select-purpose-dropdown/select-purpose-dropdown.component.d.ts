import { EventEmitter } from '@angular/core';
import { FormControl, ControlValueAccessor } from '@angular/forms';
import { PurposeOfPayment } from '@backbase/data-ang/payment-order-options';
import * as i0 from "@angular/core";
export declare class SelectPurposeDropdownComponent implements ControlValueAccessor {
    _purposes: Array<PurposeOfPayment>;
    search: FormControl;
    purposeEntries: Array<[string, string]>;
    filteredPurposes: Array<PurposeOfPayment>;
    /**
     * Description length to show tooltip along
     */
    longDescription: number;
    /**
     * Array of country iso codes
     */
    set purposes(purposes: Array<PurposeOfPayment>);
    /**
     * Field options
     */
    isOptional?: boolean;
    /**
     * Selected purpose
     */
    selectedPurpose?: string;
    /**
     * Helper text for the component. Defaults to empty string.
     */
    helperText: string;
    /**
     * Placeholder text. Defaults to empty string.
     */
    placeholder: string;
    /**
     * Label of the component. Defaults to empty string.
     */
    label: string;
    /**
     * Placeholder fot search. Defaults to empty string.
     */
    searchPlaceholder: string;
    /**
     * Icon for the dropdown. Defaults to `toggle-down`
     */
    dropdownIcon: string;
    /**
     * Emits value when a country is selected
     */
    selectPurpose: EventEmitter<string>;
    getSelectedPurposeFull(purposeCode: string): PurposeOfPayment;
    setupPurposes(): void;
    selectItem(purpose: PurposeOfPayment): void;
    handleSearch(query?: string): void;
    onChange(): void;
    onTouched(): void;
    writeValue(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectPurposeDropdownComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SelectPurposeDropdownComponent, "bb-select-purpose-dropdown", never, { "longDescription": "longDescription"; "purposes": "purposes"; "isOptional": "isOptional"; "selectedPurpose": "selectedPurpose"; "helperText": "helperText"; "placeholder": "placeholder"; "label": "label"; "searchPlaceholder": "searchPlaceholder"; "dropdownIcon": "dropdownIcon"; }, { "selectPurpose": "selectPurpose"; }, never, never>;
}
