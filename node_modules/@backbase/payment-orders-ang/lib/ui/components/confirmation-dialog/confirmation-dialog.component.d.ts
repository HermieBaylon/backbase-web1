import { EventEmitter } from '@angular/core';
import { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';
import * as i0 from "@angular/core";
export declare class ConfirmationDialogComponent {
    readonly modalOptions: NgbModalOptions;
    comment: string;
    /**
     * The button color for confirm button
     * Default value is `primary`.
     */
    confirmButtonColor?: string | undefined;
    /**
     * The button color for cancel button
     * Default value is `link`.
     */
    cancelButtonColor?: string | undefined;
    /**
     * Indicator for confirmation dialog open state.
     * Default value is `false`.
     */
    isOpen: boolean;
    /**
     * Payload data for confirm action
     * Can be any type
     */
    confirmActionPayload?: {
        payload: any;
    };
    /**
     * Changes will be triggered on confirmAction event emit.
     */
    confirm: EventEmitter<any>;
    /**
     * Changes will be triggered on cancel event emit.
     */
    cancel: EventEmitter<any>;
    /**
     * Show the field for the comment
     * Default value is `false`.
     */
    attachComment: boolean;
    /**
     * Text for comment field label,
     * Default value is `Add comment`.
     */
    commentFieldLabel: string;
    private resetComment;
    onCancelAction(): void;
    onConfirmAction(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConfirmationDialogComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ConfirmationDialogComponent, "bb-confirmation-dialog", never, { "confirmButtonColor": "confirmButtonColor"; "cancelButtonColor": "cancelButtonColor"; "isOpen": "isOpen"; "confirmActionPayload": "confirmActionPayload"; "attachComment": "attachComment"; "commentFieldLabel": "commentFieldLabel"; }, { "confirm": "confirm"; "cancel": "cancel"; }, never, ["[title]", "[body]", "[confirmActionName]", "[cancelActionName]"]>;
}
