import { EventEmitter, OnInit } from '@angular/core';
import { ControlValueAccessor, FormControl } from '@angular/forms';
import { CurrencySelectorConfig } from '../../models';
import * as i0 from "@angular/core";
export declare class CurrencySelectorComponent implements ControlValueAccessor, OnInit {
    isDisabled: boolean;
    _currencies: Array<string>;
    search: FormControl;
    currencyEntries: Array<[string, string]>;
    filteredCurrencies: Array<string>;
    currencyToCountryMap: {
        [key: string]: string;
    };
    currenciesMap: {
        [key: string]: {
            symbol: string;
            name: string;
            symbol_native: string;
            decimal_digits: number;
            rounding: number;
            code: string;
            name_plural: string;
        };
    };
    selectedCurrency?: string;
    value?: string;
    change: EventEmitter<any>;
    showFlags?: boolean;
    showName?: boolean;
    isSearchable?: boolean;
    dividerIndex?: number;
    searchPlaceholder?: string;
    dropdownIcon?: string;
    /**
     * List of currencies setter
     */
    set currencies(currencies: Array<string>);
    /**
     * Flag to determine component config
     */
    config: CurrencySelectorConfig;
    /**
     * Input that can be used to specify the `aria-labelledby` attribute.
     */
    ariaLabelledby: string | undefined;
    /**
     * Selected currency output
     */
    selectCurrency: EventEmitter<string>;
    setupCurrencies(): void;
    selectItem(currency: string): void;
    handleSearch(query?: string): void;
    onChange(_value: string): void;
    onTouched(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    writeValue(value: string): void;
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CurrencySelectorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CurrencySelectorComponent, "bb-currency-selector", never, { "currencies": "currencies"; "config": "config"; "ariaLabelledby": "aria-labelledby"; }, { "selectCurrency": "selectCurrency"; }, never, never>;
}
