import { AfterViewInit, EventEmitter, NgZone, OnDestroy } from '@angular/core';
import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { BeneficiaryScrollStrategyService } from '../services/beneficiary-scroll-strategy.service';
import * as i0 from "@angular/core";
export declare class BeneficiaryScrollItemDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<BeneficiaryScrollItemDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BeneficiaryScrollItemDirective, "[bbBeneficiaryScrollItem]", never, {}, {}, never>;
}
export declare function factoryScroll(): BeneficiaryScrollStrategyService;
export declare class BeneficiaryScrollDirective implements OnDestroy, AfterViewInit {
    private readonly viewport;
    private readonly scrollStrategy;
    private readonly ngZone;
    private readonly destroy$;
    private listItems;
    /**
     * Total items length of the list
     */
    bbBeneficiaryScrollTotalCount: number | undefined;
    /**
     * Trigger fetching more items
     */
    loadMore: EventEmitter<void>;
    constructor(viewport: CdkVirtualScrollViewport, scrollStrategy: BeneficiaryScrollStrategyService, ngZone: NgZone);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BeneficiaryScrollDirective, [{ self: true; }, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BeneficiaryScrollDirective, "[bbBeneficiaryScroll]", never, { "bbBeneficiaryScrollTotalCount": "bbBeneficiaryScrollTotalCount"; }, { "loadMore": "bbBeneficiaryScroll"; }, ["listItems"]>;
}
