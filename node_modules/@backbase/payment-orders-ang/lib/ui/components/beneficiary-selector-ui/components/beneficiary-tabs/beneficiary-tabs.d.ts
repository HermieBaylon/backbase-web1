import { EventEmitter, OnInit } from '@angular/core';
import { ProductSummaryItem } from '@backbase/data-ang/arrangements';
import { ContactItem } from '../../../../models/types';
import { BeneficiaryList, BeneficiaryListState, ListState } from '../../../../constants';
import * as i0 from "@angular/core";
export declare class BeneficiaryTabsComponent implements OnInit {
    static _id: number;
    readonly tabsId: string;
    readonly contactsListId: string;
    readonly accountsListId: string;
    /**
     * List of accounts
     */
    accounts: ProductSummaryItem[];
    /**
     * List of contacts
     */
    contacts: ContactItem[];
    /**
     * Total count of accounts
     */
    totalAccounts: number;
    /**
     * Total count of contacts
     */
    totalContacts: number;
    /**
     * Selected account event emitter
     */
    selectedAccount: EventEmitter<ProductSummaryItem>;
    /**
     * Selected contact event emitter
     */
    selectedContact: EventEmitter<import("@backbase/contact-manager-http-ang/model/contactsGetResponseBodyItem").ContactsGetResponseBodyItem>;
    /**
     * Trigger fetching more beneficiary items
     */
    fetchMoreItems: EventEmitter<BeneficiaryList>;
    /**
     * Manual edit event emitter
     */
    manualEdit: EventEmitter<boolean>;
    /**
     * Search state, has truthy value if has search query
     */
    searching: EventEmitter<boolean>;
    /**
     * State of the list from parent component
     */
    listState: BeneficiaryListState;
    /**
     * Tabs configuration
     */
    tabsConfig: Array<BeneficiaryList>;
    /**
     * Dropdown status
     */
    isDropdownOpen: boolean;
    activeTab: BeneficiaryList | undefined;
    /** Flag which determines if we can enter data manually
     * Default value is `true`
     */
    canEditManually: boolean;
    readonly listingState: typeof ListState;
    readonly beneficiaryList: typeof BeneficiaryList;
    private onLoadMore;
    ngOnInit(): void;
    showTabs(): boolean;
    isNoTabsConfigured(): boolean;
    selectAccount(account: ProductSummaryItem): void;
    selectContact(contact: ContactItem): void;
    setActiveTab(event: Event, tabName: BeneficiaryList): void;
    emitManualDetails(): void;
    onRangeChange(): void;
    refreshList(): void;
    trackById(_index: number, item: ProductSummaryItem | ContactItem): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<BeneficiaryTabsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BeneficiaryTabsComponent, "bb-beneficiary-tabs", never, { "accounts": "accounts"; "contacts": "contacts"; "totalAccounts": "totalAccounts"; "totalContacts": "totalContacts"; "listState": "listState"; "tabsConfig": "tabsConfig"; "isDropdownOpen": "isDropdownOpen"; "canEditManually": "canEditManually"; }, { "selectedAccount": "selectedAccount"; "selectedContact": "selectedContact"; "fetchMoreItems": "fetchMoreItems"; "manualEdit": "manualEdit"; "searching": "searching"; }, never, never>;
}
