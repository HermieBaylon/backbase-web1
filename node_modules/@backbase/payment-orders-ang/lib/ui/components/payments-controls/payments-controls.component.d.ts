import { EventEmitter, OnDestroy } from '@angular/core';
import { PaymentsControlsModel } from '../../models/payments-controls.model';
import { Subject } from 'rxjs';
import { Status } from '../../constants';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
export declare class PaymentsControlsComponent implements OnDestroy {
    /**
     * Time between each search requests sent by Batch manager (in milliseconds).
     * Configurable via model property.
     */
    debounceTime: number | undefined;
    /**
     * Reference to instance of customizable component.
     */
    readonly hostRef: this;
    /**
     * Reference to Status enum
     */
    readonly statusesMap: typeof Status;
    /**
     * EventEmitter for triggering a filter action.
     */
    readonly applyFilter: EventEmitter<PaymentsControlsModel>;
    /**
     * Subject will emit when searchbox from payment-search input changes
     */
    private search$;
    /**
     * Subject that will emit when filters from payments-filter are modified
     */
    private filters$;
    /**
     * Whether the filter form is shown.
     */
    isFilterOpen: boolean;
    /**
     * Whether a filter is applied on the transactions.
     */
    isFilterApplied: boolean;
    filterParams$: Subject<PaymentsControlsModel>;
    /**
     * destroy$ should emit only when component is destroyed to
     * signal subscriptions to unsubscribe.
     */
    readonly destroy$: Subject<unknown>;
    constructor();
    /**
     * Search event callback
     */
    onSearch(searchParam: string): void;
    /**
     * Filter event callback
     */
    onFilter(filterParams: Pick<PaymentsControlsModel, 'executionDate' | 'status' | 'amount'>): void;
    /**
     * Close event callback to hide the filters controls
     */
    onClose(): void;
    /**
     * Toogle method to hide or show the filter form
     */
    toggleFilter(): void;
    /**
     * Handle effects when filter is reset
     */
    onFilterReset(event: boolean): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PaymentsControlsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PaymentsControlsComponent, "bb-payments-controls", never, { "debounceTime": "debounceTime"; }, { "applyFilter": "applyFilter"; }, never, never>;
}
export declare class PaymentsControlsCustomizableDirective extends BbTemplate<PaymentsControlsComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<PaymentsControlsCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PaymentsControlsCustomizableDirective, "[bbPaymentsControlsCustomizable]", never, {}, {}, never>;
}
