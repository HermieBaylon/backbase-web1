import { AbstractControl, FormArray, ValidationErrors, ValidatorFn } from '@angular/forms';
export declare function amountValidator(control: AbstractControl): {
    invalidAmount: {
        value: any;
    };
} | undefined;
export declare function missingInListValidator(getIdsFn: () => string[]): ValidatorFn;
export declare function pastDateValidator(control: AbstractControl): {
    pastDate: {
        value: any;
    };
} | null;
export declare function maxValueTwoHundredValidator(control: AbstractControl): {
    max: {
        max: number;
        actual: any;
    };
} | null;
export declare function minValueTwoValidator(control: AbstractControl): {
    min: {
        min: number;
        actual: any;
    };
} | null;
export declare function endDateAfterStartDateValidator(control: AbstractControl): {
    lessThanStartDate: boolean;
} | undefined;
export declare function sameAccountsValidator(config?: {
    creditAccountId?: string;
    debitAccountId?: string;
}): ValidatorFn;
export declare function scheduledPaymentValidationMethod(control: AbstractControl, _endType: string): {
    required: boolean;
} | undefined;
export declare function requiredEndDateValidator(control: AbstractControl): {
    required: boolean;
} | undefined;
export declare function requiredAfterValidator(control: AbstractControl): {
    required: boolean;
} | undefined;
export declare function requiredEndTypeValidator(control: AbstractControl): {
    required: boolean;
} | undefined;
export declare function routingTransitNumberValidator(control: AbstractControl): ValidationErrors | null;
export declare function noWhitespaceValidator(control: AbstractControl): {
    required: boolean;
} | null;
export declare function currencyValidatorFactory(currencies?: Array<string>): ValidatorFn;
export declare function accountsValidation(rootControlName: string): ValidatorFn;
export declare function minimumOneAccount(control: FormArray): {
    empty: boolean;
} | null;
export declare function amountGreaterThanZero(control: AbstractControl): {
    invalidAmount: {
        value: any;
    };
} | undefined;
