import { BehaviorSubject, Observable } from 'rxjs';
import { PaymentOption, PaymentOptionsHttpService as PaymentOrderOptionsDataHttpService, PaymentOptionsRequest, PaymentOptionsResponse, SanctionedCountriesHttpService as SanctionedCountriesServiceHttpService, SanctionedCountry, SanctionedCurrenciesHttpService as SanctionedCurrenciesServiceHttpService, SanctionedCurrenciesResponse } from '@backbase/data-ang/payment-order-options';
import * as i0 from "@angular/core";
export declare class PaymentOptionsService {
    private readonly paymentOptionsData;
    private readonly sanctionedCountriesService;
    private readonly sanctionedCurrenciesService;
    paymentOptionsSubject$: BehaviorSubject<PaymentOption[] | undefined>;
    constructor(paymentOptionsData: PaymentOrderOptionsDataHttpService, sanctionedCountriesService: SanctionedCountriesServiceHttpService, sanctionedCurrenciesService: SanctionedCurrenciesServiceHttpService);
    get paymentOptions$(): Observable<PaymentOption[] | undefined>;
    fetchPaymentOptions(payment: PaymentOptionsRequest): Observable<PaymentOptionsResponse>;
    getPaymentOptionsRecordByPaymentType(paymentType: string): Observable<PaymentOption[]>;
    getSanctionedCurrencies(countryIso?: string): Observable<SanctionedCurrenciesResponse>;
    getSanctionedCountries(countryIso?: string): Observable<Array<SanctionedCountry>>;
    resetPaymentOptions(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PaymentOptionsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<PaymentOptionsService>;
}
