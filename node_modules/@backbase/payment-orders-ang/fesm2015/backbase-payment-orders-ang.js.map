{"version":3,"file":"backbase-payment-orders-ang.js","sources":["../../../../libs/payment-orders-ang/src/lib/configs/models/form-item-names.model.ts","../../../../libs/payment-orders-ang/src/lib/configs/models/form-items.model.ts","../../../../libs/payment-orders-ang/src/lib/ui/constants/model.ts","../../../../libs/payment-orders-ang/src/lib/ui/constants/countries.ts","../../../../libs/payment-orders-ang/src/lib/ui/constants/currencies.ts","../../../../libs/payment-orders-ang/src/lib/ui/constants/constants.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/date-helpers.ts","../../../../libs/payment-orders-ang/src/lib/configs/helpers/schedule-config-helpers.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/form-validation.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/default-config.ts","../../../../libs/payment-orders-ang/src/lib/configs/constants.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/type-helpers.ts","../../../../libs/payment-orders-ang/src/lib/configs/helpers/form-validation.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/sepa.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/internal-transfer.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/us-ach-credit.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/us-domestic-wire.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/chaps.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/uk-faster-payment.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/international-transfer.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/intrabank-transfer.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/internal-transfer-business.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/p2p-transfer.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/ach-debit.ts","../../../../libs/payment-orders-ang/src/lib/configs/payment-types/multipayment.ts","../../../../libs/payment-orders-ang/src/lib/ui/models/types.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/payment-config-helpers.ts","../../../../libs/payment-orders-ang/src/lib/configs/services/payment-config.service.ts","../../../../libs/payment-orders-ang/src/lib/configs/helpers/form-helpers.ts","../../../../libs/payment-orders-ang/src/lib/configs/index.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/sr-search-result-info/sr-search-result-info.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/sr-search-result-info/sr-search-result-info.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/sr-search-result-info/sr-search-result-info.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/models/index.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/dom-helpers.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/country-name/country-name.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/country-name/country-name.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/full-address/full-address.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/address-details/address-details.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/address-details/address-details.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/flag-icon/bb-flag-icon.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/currency-selector/currency-selector.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/currency-selector/currency-selector.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/currency-amount-selector/helpers.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/currency-amount-selector/dom-attributes.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/currency-amount-selector/currency-amount-selector.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/currency-amount-selector/currency-amount-selector.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/dynamic-label/dynamic-label.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/debitor-details-card/debitor-details-card.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/debitor-details-card/debitor-details-card.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/creditor-details-card/creditor-details-card.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/creditor-details-card/creditor-details-card.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/schedule-details/schedule-details.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/schedule-details/schedule-details.component.html","../../../../libs/payment-orders-ang/src/lib/ui/constants/counterparty.i18n.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/counterparty-details/counterparty-details.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/counterparty-details/counterparty-details.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/status-card/status-card.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/status-card/status-card.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/amount-details/amount-details.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/amount-details/amount-details.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/country-selector/country-selector.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/country-selector/country-selector.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/select-country-dropdown/select-country-dropdown.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/select-country-dropdown/select-country-dropdown.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/create-payment-template-modal/create-template-form-modal.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/create-payment-template-modal/create-payment-template-modal.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/breach-limit-details-modal/breach-limit-details.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/breach-limit-details-modal/breach-limit-details.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/card-menu/card-menu.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/card-menu/card-menu.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/select-purpose-dropdown/select-purpose-dropdown.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/select-purpose-dropdown/select-purpose-dropdown.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/routable-modal/bb-routable-modal-service.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/routable-modal/bb-routable-modal.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/horizontal-list-selector/horizontal-list-selector.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/payment-template-selector/payment-template-selector.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/payment-template-selector/payment-template-selector.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/components/beneficiary-account/beneficiary-account.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/components/beneficiary-account/beneficiary-account.html","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/components/beneficiary-contact/beneficiary-contact.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/components/beneficiary-contact/beneficiary-contact.html","../../../../libs/payment-orders-ang/src/lib/ui/directives/bb-keyboard-navigation.directive.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/constants/beneficiary-scroll-config.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/services/beneficiary-scroll-strategy.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/directives/beneficiary-scroll.directive.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/components/beneficiary-tabs/beneficiary-tabs.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/components/beneficiary-tabs/beneficiary-tabs.html","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/beneficiary-selector-ui.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/beneficiary-selector-ui.component.html","../../../../libs/payment-orders-ang/src/lib/ui/directives/bb-keyboard-navigation.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/beneficiary-selector-ui/beneficiary-selector-ui.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/purpose-of-payment-detail/purpose-of-payment-detail.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/purpose-of-payment-detail/purpose-of-payment-detail.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/table-header-checkbox/table-header-checkbox.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/table-header-checkbox/table-header-checkbox.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/table-checkbox/table-checkbox.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/table-checkbox/table-checkbox.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/status-badge/status-badge.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/status-badge/status-badge.component.html","../../../../libs/payment-orders-ang/src/lib/ui/directives/export-pdf/export-pdf.directive.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/iban-helpers.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/account-formatter/account-formatter.pipe.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/bb-table-component/bb-table-payments.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/bb-table-component/bb-table-payments.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/bb-list-payments-component/bb-list-payments.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/bb-list-payments-component/bb-list-payments.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/bb-schedule-label-ui/schedule-label.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/bb-schedule-label-ui/schedule-label.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/confirmation-dialog/confirmation-dialog.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/confirmation-dialog/confirmation-dialog.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/confirmation-dialog/confirmation-dialog.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/payments-search/payments-search.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/payments-search/payments-search.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/payments-filter/payments-filter.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/payments-filter/payments-filter.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/payments-controls/payments-controls.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/payments-controls/payments-controls.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/payments-search/payments-search.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/payments-filter/payments-filter.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/payments-controls/payments-controls.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/schedule/schedule.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/schedule/schedule.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/schedule/schedule.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/separator/separator.component.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/separator/separator.component.html","../../../../libs/payment-orders-ang/src/lib/ui/components/separator/separator.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/status-badge/status-badge.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/table-checkbox/table-checkbox.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/components/table-header-checkbox/table-header-checkbox.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/directives/iban.directive.ts","../../../../libs/payment-orders-ang/src/lib/ui/directives/iban.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/account-formatter/account-formatter.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/bytes-pipe/bytes.pipe.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/bytes-pipe/bytes.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/highlight/highlight.pipe.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/highlight/highlight.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/relative-date/relative-date.pipe.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/relative-date/relative-date.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/directives/export-pdf/export-pdf.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/payment-orders-ui.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/state.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/batch-order-state.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/navigation.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/mappers/arrangement-mappers.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/http-helpers.ts","../../../../libs/payment-orders-ang/src/lib/ui/mappers/contact-mappers.ts","../../../../libs/payment-orders-ang/src/lib/ui/mappers/payment-mappers.ts","../../../../libs/payment-orders-ang/src/lib/ui/mappers/payment-option-mappers.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/payment-order.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/payments-service.stub.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/payment-options.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/multiple-payment.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/object-helpers.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/has-value/has-value.pipe.ts","../../../../libs/payment-orders-ang/src/lib/ui/pipes/has-value/has-value.module.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/address-helpers.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/currency-helpers.ts","../../../../libs/payment-orders-ang/src/lib/ui/helpers/hooks-helpers.ts","../../../../libs/payment-orders-ang/src/lib/ui/models/payment-actions-types.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/checks.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/payment-orders-http.service.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/tokens.ts","../../../../libs/payment-orders-ang/src/lib/ui/services/payments.service.ts","../../../../libs/payment-orders-ang/src/backbase-payment-orders-ang.ts"],"sourcesContent":["export enum PaymentBaseFields {\n  initiator = 'initiator',\n  counterparty = 'counterparty',\n  remittanceInfo = 'remittanceInfo',\n  schedule = 'schedule',\n  additions = 'additions',\n}\n\nexport enum PaymentOptionFields {\n  selectPaymentOption = 'selectPaymentOption',\n  paymentCost = 'paymentCost',\n  chargeBearer = 'chargeBearer',\n  chargeBearerOptions = 'chargeBearerOptions',\n  transferFee = 'transferFee',\n  exchangeRate = 'exchangeRate',\n  inputFormFromSettings = 'inputFormFromSettings',\n  paymentTypeName = 'paymentTypeName',\n}\n\nexport enum InitiatorFields {\n  initiatorAccountGroup = 'debitorAccount',\n  id = 'id',\n  name = 'name',\n  alias = 'alias',\n  accountNumber = 'accountNumber',\n  accountType = 'accountType',\n  currency = 'currency',\n}\n\nexport enum AccountField {\n  id = 'id',\n  name = 'name',\n  accountNumber = 'accountNumber',\n  accountType = 'accountType',\n  currency = 'currency',\n  bankBranchCode = 'bankBranchCode',\n  balance = 'balance',\n  number = 'number',\n}\n\nexport enum CounterPartyFields {\n  counterPartyAccountGroup = 'creditorAccount',\n  standardEntryClass = 'entryClass',\n  creditor = 'creditor',\n  creditorBank = 'creditorBank',\n  bankName = 'bankName',\n  bic = 'bic',\n  bankBranchCode = 'bankBranchCode',\n  correspondentBank = 'correspondentBank',\n  intermediaryBank = 'intermediaryBank',\n  schemeName = 'schemeName',\n  recipientId = 'recipientId',\n  accountType = 'accountType',\n  accountNumber = 'accountNumber',\n  name = 'name',\n  alias = 'alias',\n  id = 'id',\n  postalAddress = 'postalAddress',\n  messageToBank = 'messageToBank',\n  remittanceInformation = 'remittanceInformation',\n  targetCurrency = 'targetCurrency',\n  endToEndIdentification = 'endToEndIdentification',\n  mandateIdentifier = 'mandateIdentifier',\n  role = 'role',\n  selectedContact = 'selectedContact',\n  counterpartyAccountAdditions = 'counterpartyAccountAdditions',\n  additions = 'additions',\n  country = 'country',\n  saveNewContact = 'saveNewContact',\n  enableAdditionalBankDetails = 'enableAdditionalBankDetails',\n}\n\nexport enum PaymentTemplateFields {\n  templateName = 'templateName',\n  paymentTemplateId = 'paymentTemplateId',\n}\n\nexport enum RemittanceInfoFields {\n  amountCurrencyGroup = 'amountGroup',\n  amount = 'amount',\n  currency = 'currency',\n  urgent = 'urgent',\n  paymentReference = 'paymentReference',\n  description = 'description',\n  amountOptions = 'amountOptions',\n  amountOptionLabel = 'amountOptionLabel',\n  purposeOfPayment = 'purposeOfPayment',\n}\n\nexport enum ScheduleFields {\n  scheduleGroup = 'scheduleGroup',\n  frequency = 'frequency',\n  endType = 'endType',\n  every = 'every',\n  on = 'on',\n  startDate = 'startDate',\n  endDate = 'endDate',\n  repeat = 'repeat',\n  frequencySwitch = 'frequencySwitch',\n  scheduleInfo = 'scheduleInfo',\n}\n\nexport enum HiddenFields {\n  isManualEdit = 'isManualEdit',\n  isClosedPayment = 'isClosedPayment',\n  enableBeneficiary = 'enableBeneficiary',\n  beneficiaryAccountName = 'beneficiaryAccountName',\n  showSaveNewContact = 'showSaveNewContact',\n  selectedBeneficiary = 'selectedBeneficiary',\n  hideBeneficiaryFields = 'hideBeneficiaryFields',\n  defaultCountry = 'defaultCountry',\n  isPaymentCopy = 'isPaymentCopy',\n  isDebitPayment = 'isDebitPayment',\n  defaultBankCodeSetting = 'defaultBankCodeSetting',\n  sanctionedCountries = 'sanctionedCountries',\n}\n\nexport enum PaymentFormFieldHooks {\n  onInit = 'onInit',\n  onDestroy = 'onDestroy',\n}\n\nexport enum PaymentHooks {\n  onInit = 'onInit',\n  onDestroy = 'onDestroy',\n  onSave = 'onSave',\n  onSubmit = 'onSubmit',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum MultiPaymentHooks {\n  onClick = 'onClick',\n  onBlur = 'onBlur',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum StepperAction {\n  NEXT = 'next',\n  BACK = 'back',\n  SUBMIT = 'submit',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum MultiPaymentFormCardFields {\n  counterpartyName = 'counterpartyName',\n  amount = 'amount',\n  description = 'description',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum MultiPaymentEvents {\n  paymentBlur = 'payment-blur',\n  deletePayment = 'delete-payment',\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport enum multiPaymnetValidationRules {\n  batchNameIsMandatory = 'batchInfo.name',\n  requestedExecutionDateIsMandatory = 'batchInfo.requestedExecutionDate',\n  requestedExecutionDateIsValid = 'batchInfo.requestedExecutionDate',\n  batchhasatleastonecredittransaction = 'counterparty.debitorAccount',\n  totalcredittransactionscountisequaltointendedtransactionscount = 'counterparty.debitorAccount',\n  totalcreditamountisequaltototalintendedcreditamount = 'counterparty.debitorAccount',\n  originatoraccountnumberismandatory = 'initiator',\n  userhasaccesstooriginatoraccount = 'initiator',\n  originatoraccountisallowedtodebit = 'initiator',\n  counterpartyaccountnumberismandatory = 'counterpartyAccountNumber',\n  userhasaccesstocounterpartyaccount = 'counterpartyAccountNumber',\n  counterpartyaccountnumberisnotsameasoriginatoraccount = 'counterpartyAccountNumber',\n  counterpartyaccountisallowedtocredit = 'counterpartyAccountNumber',\n  batchpaymentiscredit = 'counterpartyAccountNumber',\n  batchpaymentamountisgreaterthanzero = 'amount',\n  batchpaymentcurrencyisvalid = 'amount.currency',\n}\n","import {\n  AbstractControl,\n  AsyncValidatorFn,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport {\n  CounterPartyFields,\n  InitiatorFields,\n  MultiPaymentFormCardFields,\n  MultiPaymentHooks,\n  PaymentBaseFields,\n  PaymentFormFieldHooks,\n  PaymentHooks,\n  RemittanceInfoFields,\n  StepperAction,\n} from './form-item-names.model';\nimport { Subject } from 'rxjs';\nimport { PurposeOfPayment } from '@backbase/data-ang/payment-order-options';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { ScheduleItem } from '../../ui/components/schedule/schedule.component';\nimport {\n  Address,\n  ContactItem,\n  FormSeparatorConfig,\n  InternalAccountFormItem,\n} from '../../ui/models/types';\n\nexport enum AccessContextScope {\n  USER = 'USER',\n  SA = 'SA',\n  LE = 'LE',\n}\n\nexport enum PaymentComponents {\n  text = 'text',\n  date = 'date',\n  phone = 'phone',\n\n  number = 'number',\n  textarea = 'textarea',\n  address = 'address',\n  select = 'select',\n  radio = 'radio',\n  checkbox = 'checkbox',\n  debitAccountSelector = 'debitAccountSelector',\n  countrySelector = 'countrySelector',\n  sanctionedCountrySelector = 'sanctionedCountrySelector',\n  beneficiarySelector = 'beneficiarySelector',\n  selectPaymentOption = 'selectPaymentOption',\n  paymentCost = 'paymentCost',\n  chargeBearer = 'chargeBearer',\n  schedule = 'schedule',\n  amount = 'amount',\n  sanctionedCurrencyAmount = 'sanctionedCurrencyAmount',\n  switch = 'switch',\n  internalAccountSelector = 'internalAccountSelector',\n  compactAmount = 'compactAmount',\n  scheduleHeader = 'scheduleHeader',\n  buttonGroup = 'buttonGroup',\n  multiPaymentCard = 'multiPaymentCard',\n  creditDebitSelector = 'creditDebitSelector',\n  internalAmountOptions = 'internalAmountOptions',\n  header = 'header',\n  purposeOfPayment = 'purposeOfPayment',\n  alert = 'alert',\n  scheduleSwitch = 'scheduleSwitch',\n  beneficiaryGroupHeader = 'beneficiaryGroupHeader',\n  multiPaymentAccountSelector = 'multiPaymentAccountSelector',\n  contactSelector = 'contactSelector',\n  accountSelector = 'accountSelector',\n}\n\nexport interface BaseObject<T> {\n  [key: string]: T;\n}\n\nexport interface Hideable {\n  hidden?: boolean;\n}\n\nexport interface Extendable {\n  parent?: string;\n}\n\nexport enum AddressType {\n  'beneficiary' = 'beneficiary',\n  'beneficiary bank' = 'beneficiary bank',\n  'correspondent bank' = 'correspondent bank',\n  'intermediary bank' = 'intermediary bank',\n}\n\nexport type AddressTypeValue = keyof typeof AddressType;\n\nexport interface PaymentFormGroup extends Hideable, Extendable {\n  fields: Array<PaymentFormFieldConfig | PaymentFormGroup>;\n  name: string;\n  title?: string;\n  subTitle?: string;\n  collapsible?: boolean;\n  cssClasses?: Array<string>;\n  options?: PaymentFormFieldOptions;\n  separator?: FormSeparatorConfig;\n  hasDynamicTitle?: boolean;\n  clearOptions?: ClearOptions;\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport interface MultipleFormGroup extends PaymentFormGroup {\n  stepName?: string;\n}\n\nexport interface OmniPaymentConfigItem {\n  paymentType: PaymentTypeConfig;\n  businessFunction: string;\n  classId?: string;\n  options?: OmniPaymentWidgetOptions;\n}\n\nexport enum TemplateModeType {\n  CREATE = 'CREATE',\n  EDIT = 'EDIT',\n}\n\nexport enum EditModeTypes {\n  EDIT_TEMPLATE = 'EDIT_TEMPLATE',\n  EDIT_PAYMENT = 'EDIT_PAYMENT',\n}\n\nexport enum PaymentMode {\n  EDIT_PAYMENT = 'EDIT_PAYMENT',\n  CREATE_PAYMENT = 'CREATE_PAYMENT',\n  COPY_PAYMENT = 'COPY_PAYMENT',\n  EDIT_TEMPLATE = 'EDIT_TEMPLATE',\n  CREATE_TEMPLATE = 'CREATE_TEMPLATE',\n}\n\nexport interface InitiatePaymentOptions {\n  enableApprovals?: boolean;\n  defaultScheme?: 'BBAN' | 'IBAN';\n  templateModeType?: TemplateModeType;\n  successEventName?: string;\n  checkClosedPaymentsAccess?: boolean;\n  isDebitPayment?: boolean;\n  reviewScreenType?: ReviewScreens;\n  isModalView?: boolean;\n  isTemplateMode?: boolean;\n  isEditPaymentModal?: boolean;\n  paymentMode?: PaymentMode;\n  isOneOffToRecurrentAllowed?: boolean;\n  isRecurrentToOneOffAllowed?: boolean;\n  defaultCountry?: string;\n  pollInterval?: number;\n  accessContextScope?: AccessContextScope;\n  enablePaymentTemplateSelector?: boolean;\n  enableSavePaymentAsTemplate?: boolean;\n  /**\n   * Hides new payment button if \"false\", displays button otherwise\n   */\n  enableNewPaymentButton?: boolean;\n  isErrorTitleDisplayed?: boolean;\n  pageSize?: number;\n  header?(data: InitiatePaymentHeaderData): string;\n}\n\n/**\n * @deprecated Type has been renamed into `PaymentConfigOptions`\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OmniPaymentWidgetOptions extends InitiatePaymentOptions {}\n\n/**\n * @deprecated Type has been moved to `@backbase/batch-common-ang` and renamed to `ManualBatchOptions`\n * Will be removed in widget collection v3.11.0\n */\nexport interface MultiPaymentWidgetOptions {\n  debounceTime?: number;\n  createTemplates?: boolean;\n  viewTemplates?: boolean;\n  successEventName?: string;\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport interface InternalTransferPaymentTypes\n  extends BaseObject<string | undefined> {\n  currentToSaving?: string;\n  savingToCurrent?: string;\n  currentToCurrent?: string;\n  savingToSaving?: string;\n  cashAdvanceToCurrent?: string;\n  cashAdvanceToSaving?: string;\n  loanAdvanceToCurrent?: string;\n  loanAdvanceToSaving?: string;\n  connectedToOther?: string;\n}\n\nexport interface PaymentTypeConfig {\n  fields: Array<PaymentFormFieldConfig | PaymentFormGroup>;\n  name: string;\n  paymentType: string;\n  description?: string;\n  businessFunction?: string;\n  relatedPaymentTypes?: Array<string>;\n  customFields?: PaymentComponentsMap;\n  options?: PaymentTypeOptions;\n  hooks?: PaymentHooksOptions;\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport interface ManualBatchTypeConfig extends PaymentTypeConfig {\n  resourceName?: string;\n}\n\nexport interface PaymentTypeOptions extends Options {\n  paymentTypes?: InternalTransferCustomPaymentTypes;\n  disabledCombinations?: Array<DisabledCombination>;\n  closedPaymentBusFns?: Array<string>;\n}\n\nexport interface PaymentFormFieldConfig extends Hideable, Extendable {\n  name: string;\n  type: PaymentComponents | string;\n  options: PaymentFormFieldOptions;\n  hooks?: PaymentFormFieldHooksOptions;\n}\n\nexport type PaymentHooksCallbackFn = (params?: PaymentHooksParams) => void;\nexport type FetchPaymentOptionsListenerFn = (\n  form: FormGroup,\n  fetchOptions: Subject<FormGroup>\n) => void;\nexport type PaymentClearGroupCallbackFn = (\n  params?: PaymentClearFormGroupParams\n) => void;\n\nexport type FormFieldHooksCallbackFn = (params: FormFieldHooksParams) => void;\n\nexport interface PaymentClearFormGroupParams {\n  formGroup?: FormGroup;\n  config?: PaymentFormGroup;\n}\n\nexport interface ClearOptions {\n  label?: string;\n  icon?: string;\n  onClear: PaymentClearGroupCallbackFn;\n}\n\nexport interface PaymentHooksParams {\n  doneFn: (success?: boolean) => void;\n  form: FormGroup;\n}\n\nexport interface FormFieldHooksParams {\n  component: any;\n  control: FormControl;\n  group: FormGroup;\n}\n\nexport type PaymentFormFieldHooksOptions = {\n  [key in PaymentFormFieldHooks]?: FormFieldHooksCallbackFn;\n};\n\nexport type PaymentHooksOptions = {\n  [key in PaymentHooks]?: PaymentHooksCallbackFn;\n};\n\nexport interface PaymentFormField {\n  config: PaymentFormFieldConfig;\n  group: FormGroup;\n  options: PaymentFormFieldOptions;\n}\n\nexport interface Options {\n  [key: string]: any;\n}\n\nexport interface HorizontalListItem {\n  value: string;\n  label: string;\n  description?: string;\n}\n\nexport type ActivateFn = (\n  value: any,\n  control?: AbstractControl\n) => Array<string | DependantItem> | undefined;\n\nexport interface ErrorMessage {\n  name: string;\n  message: string;\n}\n\nexport interface CollapseOptions {\n  btnColor?: string;\n  btnSize?: string;\n  hideIcon?: boolean;\n  icon?: string;\n  iconSize?: string;\n  label?: string;\n}\n\nexport interface PaymentFormFieldOptions extends Options {\n  label?: string;\n  placeholder?: string;\n  cssClasses?: Array<string>;\n  validators?: Array<ValidatorFn>;\n  asyncValidators?: Array<AsyncValidatorFn>;\n  validationMessages?: Array<ErrorMessage>;\n  collapseOptions?: CollapseOptions;\n  defaultValue?: any;\n  dependants?: Array<string | DependantItem>;\n  activateDependantsOn?: boolean | string | ActivateFn;\n  mapToField?: PaymentBaseFields | string;\n  isIban?: boolean;\n  isConditionalMandatory?: boolean;\n  helperText?: string;\n  description?: string;\n  productKinds?: Array<ProductKindItem>;\n  fieldsConfig?: MultiPaymentCard;\n  amountOptions?: AmountOptions;\n  connectedAccounts?: boolean;\n  preselect?: boolean;\n  header?: string;\n  maximumNumberOfPayments?: number;\n  validationMessageLabel?: string;\n  contactSchemes?: Array<{ name: ContactScheme; regex?: RegExp }>;\n  mapItems?: (\n    contacts: Array<ContactItem | InternalAccountFormItem>\n  ) => Array<InternalAccountFormItem | ContactItem>;\n  /** @deprecated Will be removed in widget collection v3.11.0, use `contactSchemes` instead*/\n  contactScheme?: ContactScheme[];\n  /** @deprecated Will be removed in widget collection v3.11.0, use `mapItems` instead*/\n  otherFilters?: Array<FilterState>;\n  /** @deprecated Will be removed in widget collection v3.11.0 */\n  choices?: CreditDebitSelector[];\n}\n\nexport enum ContactScheme {\n  accountNumber = 'accountNumber',\n  phoneNumber = 'phoneNumber',\n  email = 'email',\n}\n\n/** @deprecated Will be removed in widget collection v3.11.0 */\nexport interface CreditDebitSelector {\n  type: 'CREDIT' | 'DEBIT';\n  name: string;\n  description: string;\n  addressType?: AddressTypeValue;\n  keepValueOnHidden?: boolean;\n  maxLength?: number;\n}\n\nexport interface AmountOption extends BaseObject<any> {\n  label: string;\n  description?: string;\n  amountApiField?: string;\n  hasCustomAmountInput?: boolean;\n  scheduleFrequency?: Array<Options>;\n  showFrequencySwitch?: boolean;\n}\n\nexport interface AmountOptions {\n  creditCard?: Array<AmountOption>;\n  loan?: Array<AmountOption>;\n  IRA?: Array<AmountOption>;\n  cssClasses?: Array<string>;\n}\n\nexport type MultiPaymentCard = {\n  [key in MultiPaymentFormCardFields]: PaymentFormFieldOptions;\n};\n\nexport interface ProductKindItem {\n  productKind: ProductKinds | string;\n  balance?: { apiField?: AccountBalances | string; label?: string };\n}\n\nexport interface FilterState\n  extends BaseObject<Array<string | number | boolean> | string> {\n  key: string;\n  value: Array<string | number | boolean>;\n}\n\nexport interface DisabledCombination {\n  from: ProductKinds;\n  to: ProductKinds;\n}\n\nexport interface InternalTransferCustomPaymentTypes {\n  internal?: string;\n  external?: string;\n}\n\nexport interface PaymentComponentsMap {\n  [key: string]: any;\n}\n\nexport interface AmountData extends PaymentFormFieldOptions {\n  currencies: Array<string>;\n}\n\nexport type PaymentFormItem = (PaymentFormFieldConfig | PaymentFormGroup) & {\n  parent?: string;\n};\n\nexport interface PaymentDetails extends Options {\n  [PaymentBaseFields.initiator]: InitiatorDetails;\n  [PaymentBaseFields.counterparty]: CounterPartyDetails;\n  [PaymentBaseFields.schedule]: ScheduleItem;\n  [PaymentBaseFields.remittanceInfo]: RemittanceDetails;\n  [PaymentBaseFields.additions]?: any;\n  paymentOption?: string;\n  paymentType?: string;\n  messageToBank?: string;\n  isIntraLegalEntity?: boolean;\n  approved?: boolean;\n  paymentCost?: string;\n  chargeBearer?: string;\n  paymentOrderId?: string;\n}\n\nexport interface InitiatorDetails {\n  [InitiatorFields.id]: string;\n  [InitiatorFields.name]: string;\n  [InitiatorFields.accountNumber]: string;\n  [InitiatorFields.currency]: string;\n  [InitiatorFields.alias]?: string;\n  [InitiatorFields.accountType]?: string;\n  [InitiatorFields.initiatorAccountGroup]?: InitiatorDetails;\n  [PaymentBaseFields.additions]?: any;\n}\n\nexport interface RemittanceDetails {\n  [RemittanceInfoFields.amountCurrencyGroup]: AmountGroup;\n  [RemittanceInfoFields.urgent]?: boolean;\n  [RemittanceInfoFields.paymentReference]?: string;\n  [RemittanceInfoFields.description]?: string;\n  [RemittanceInfoFields.amountOptionLabel]?: string;\n  [RemittanceInfoFields.purposeOfPayment]?: string;\n}\n\nexport interface AmountGroup {\n  [RemittanceInfoFields.currency]: string;\n  [RemittanceInfoFields.amount]: string;\n}\n\nexport interface CounterPartyDetails {\n  [CounterPartyFields.standardEntryClass]?: string;\n  [CounterPartyFields.creditorBank]?: BankDetails;\n  [CounterPartyFields.bankName]?: string;\n  [CounterPartyFields.correspondentBank]?: BankDetails;\n  [CounterPartyFields.intermediaryBank]?: BankDetails;\n  [CounterPartyFields.schemeName]?:\n    | 'IBAN'\n    | 'BBAN'\n    | 'ID'\n    | 'EXTERNAL_ID'\n    | 'EMAIL'\n    | 'MOBILE';\n  [CounterPartyFields.recipientId]?: string;\n  [CounterPartyFields.accountType]?: string;\n  [CounterPartyFields.accountNumber]: string;\n  [CounterPartyFields.name]: string;\n  [CounterPartyFields.alias]?: string;\n  [CounterPartyFields.id]: string;\n  [CounterPartyFields.postalAddress]?: Address;\n  [CounterPartyFields.messageToBank]?: string;\n  [CounterPartyFields.targetCurrency]?: string;\n  [CounterPartyFields.remittanceInformation]?: string;\n  [CounterPartyFields.endToEndIdentification]?: string;\n  [CounterPartyFields.mandateIdentifier]?: string;\n  [CounterPartyFields.saveNewContact]?: boolean;\n  [CounterPartyFields.role]?: string;\n  [CounterPartyFields.selectedContact]?: {\n    contactId?: string;\n    accountId?: string;\n  };\n  [CounterPartyFields.additions]?: any;\n  [CounterPartyFields.counterpartyAccountAdditions]?: any;\n}\n\nexport interface BankDetails {\n  [CounterPartyFields.bankBranchCode]?: string;\n  [CounterPartyFields.bic]?: string;\n  [CounterPartyFields.postalAddress]?: Address;\n  [CounterPartyFields.bankName]?: string;\n  [CounterPartyFields.additions]?: any;\n}\n\nexport interface PayordOmniPaymentConfig {\n  businessConfig: {\n    functionName: string;\n    resourceName: string;\n  };\n}\n\nexport interface PayordPaymentError {\n  errorData: [\n    {\n      key: string;\n      message: string;\n    }\n  ];\n}\n\nexport enum ReviewScreens {\n  ADAPTED,\n  DEFAULT,\n}\n\nexport enum Scheme {\n  IBAN = 'IBAN',\n  BBAN = 'BBAN',\n  ID = 'ID',\n}\n\nexport enum ProductKinds {\n  currentAccount = 'Current Account',\n  savingsAccount = 'Savings Account',\n  creditCard = 'Credit Card',\n  debitCard = 'Debit Card',\n  loanAccount = 'Loan',\n  connectedAccounts = 'Connected Account',\n  investmentAccount = 'Investment Account',\n}\n\nexport enum AccountBalances {\n  available = 'availableBalance',\n  current = 'bookedBalance',\n  creditLimit = 'creditLimit',\n  outstandingPrincipalAmount = 'outstandingPrincipalAmount',\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport type StepName = string;\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface StepperConfig {\n  stepName: StepName;\n  stepDisplayValue: string;\n  isActive: boolean;\n  isChecked: boolean;\n  buttonClass: string[];\n  buttonConfig: StepperButtonConfig[];\n  title?: string;\n  subtitle?: string;\n  cssClasses?: Array<string>;\n  footerDetail?: MultiPaymentFooterOptions;\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface MultiPaymentFooterOptions {\n  totalCount: boolean;\n  totalAmount: boolean;\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface StepDetails {\n  currentStep?: StepperConfig;\n  previousStep?: StepperConfig;\n  nextStep?: StepperConfig;\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface StepperButtonConfig {\n  type: string;\n  text: string;\n  action: StepperAction;\n  hooks?: MultiPaymentHooksConfig;\n}\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport type MultiPaymentHooksConfig = {\n  [key in MultiPaymentHooks]?: MultipaymentHooksCallbackFn;\n};\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport type MultipaymentHooksCallbackFn = (\n  params: MultipaymentHooksParams\n) => void;\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport interface MultipaymentHooksParams {\n  doneFn?: (stepperConfig?: StepperConfig, action?: StepperAction) => void;\n  stepperConfig?: StepperConfig;\n  action?: StepperAction;\n}\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport interface ManualBatchesConfig {\n  availableTypes: Array<ManualBatchTypeConfig>;\n  enableTypeSelection: boolean | Array<StepName>;\n  steps?: StepperConfig[];\n  options?: MultiPaymentWidgetOptions;\n}\n\nexport interface DependantItem {\n  parent: string;\n  items: string[];\n}\n\nexport interface PurposeInfo {\n  isOptional: boolean;\n  purposes?: Array<PurposeOfPayment>;\n}\n\nexport interface WizardPaymentOptions {\n  customFields?: PaymentComponentsMap;\n  fetchPaymentOptionsListener?: FetchPaymentOptionsListenerFn;\n}\n\nexport interface TriggerInitiatePaymentPayload {\n  payment?: IdentifiedPaymentOrder;\n  template?: PaymentTemplate;\n  options?: InitiatePaymentOptions;\n}\n\nexport enum InitiatePaymentHeaderStates {\n  FORM = 'FORM',\n  REVIEW = 'REVIEW',\n  SUBMITTED = 'SUBMITTED',\n}\n\nexport interface InitiatePaymentHeaderData {\n  paymentType: string;\n  state: InitiatePaymentHeaderStates;\n  paymentMode?: PaymentMode;\n  isDebit?: boolean;\n}\n\nexport type InitiatePaymentHeader = (data: InitiatePaymentHeaderData) => string;\n","import { HttpErrorResponse } from '@angular/common/http';\nimport {\n  ContactsAndArrangementsGetParams,\n  ExternalAccountFormItem,\n  InternalAccountFormItem,\n} from '../models/types';\n\nexport const contactsPageSize = 1000;\nexport const arrangementsPageSize = 100;\n\nexport const dataItemPermissionParams = {\n  resourceName: 'Payments',\n  privilege: 'create',\n  dataGroupType: 'ARRANGEMENTS',\n};\n\nexport enum BeneficiaryList {\n  CONTACTS = 'contacts',\n  ACCOUNTS = 'accounts',\n}\n\nexport const defaultBeneficiaryTabsConfig = [\n  BeneficiaryList.CONTACTS,\n  BeneficiaryList.ACCOUNTS,\n];\n\nexport interface FetchCreditorItemsParams {\n  type?: BeneficiaryList;\n  params?: ContactsAndArrangementsGetParams;\n}\nexport enum ListState {\n  EMPTY = 'empty',\n  LIST = 'list',\n  FULL_LIST = 'full-list',\n  LOADING = 'loading',\n  FETCHING = 'fetching',\n  FETCHING_FAILURE = 'fetching-failure',\n  NO_RESULT = 'no-result',\n  ERROR = 'error',\n}\n\nexport enum PaymentTypeIcon {\n  INTERNATIONAL = 'language',\n  DOMESTIC = 'accounts',\n  INTERNAL = 'domain',\n}\n\nexport interface BeneficiaryListState {\n  accounts: ListState;\n  contacts: ListState;\n}\n\nexport interface BeneficiaryData {\n  accounts: InternalAccountFormItem[] | HttpErrorResponse;\n  contacts: ExternalAccountFormItem[] | HttpErrorResponse;\n  totalCreditAccounts: number;\n  totalContacts: number;\n  totalContactsItemsCount: number;\n}\n\nexport interface BeneficiaryDetailsTitle {\n  beneficiaryTitle: string;\n  addressTitle: string;\n  bankTitle: string;\n}\n","/* eslint-disable @typescript-eslint/quotes */\nexport const CurrenciesMap: {\n  [key: string]: {\n    symbol: string;\n    name: string;\n    symbol_native: string;\n    decimal_digits: number;\n    rounding: number;\n    code: string;\n    name_plural: string;\n  };\n} = {\n  USD: {\n    symbol: '$',\n    name: 'United States Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'USD',\n    name_plural: 'US dollars',\n  },\n  CAD: {\n    symbol: 'CA$',\n    name: 'Canadian Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CAD',\n    name_plural: 'Canadian dollars',\n  },\n  EUR: {\n    symbol: '€',\n    name: 'Euro',\n    symbol_native: '€',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'EUR',\n    name_plural: 'euros',\n  },\n  AED: {\n    symbol: 'AED',\n    name: 'United Arab Emirates Dirham',\n    symbol_native: 'د.إ.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'AED',\n    name_plural: 'UAE dirhams',\n  },\n  AFN: {\n    symbol: 'Af',\n    name: 'Afghan Afghani',\n    symbol_native: '؋',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'AFN',\n    name_plural: 'Afghan Afghanis',\n  },\n  ALL: {\n    symbol: 'ALL',\n    name: 'Albanian Lek',\n    symbol_native: 'Lek',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'ALL',\n    name_plural: 'Albanian lekë',\n  },\n  AMD: {\n    symbol: 'AMD',\n    name: 'Armenian Dram',\n    symbol_native: 'դր.',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'AMD',\n    name_plural: 'Armenian drams',\n  },\n  ARS: {\n    symbol: 'AR$',\n    name: 'Argentine Peso',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ARS',\n    name_plural: 'Argentine pesos',\n  },\n  AUD: {\n    symbol: 'AU$',\n    name: 'Australian Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'AUD',\n    name_plural: 'Australian dollars',\n  },\n  AZN: {\n    symbol: 'man.',\n    name: 'Azerbaijani Manat',\n    symbol_native: 'ман.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'AZN',\n    name_plural: 'Azerbaijani manats',\n  },\n  BAM: {\n    symbol: 'KM',\n    name: 'Bosnia-Herzegovina Convertible Mark',\n    symbol_native: 'KM',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BAM',\n    name_plural: 'Bosnia-Herzegovina convertible marks',\n  },\n  BDT: {\n    symbol: 'Tk',\n    name: 'Bangladeshi Taka',\n    symbol_native: '৳',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BDT',\n    name_plural: 'Bangladeshi takas',\n  },\n  BGN: {\n    symbol: 'BGN',\n    name: 'Bulgarian Lev',\n    symbol_native: 'лв.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BGN',\n    name_plural: 'Bulgarian leva',\n  },\n  BHD: {\n    symbol: 'BD',\n    name: 'Bahraini Dinar',\n    symbol_native: 'د.ب.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'BHD',\n    name_plural: 'Bahraini dinars',\n  },\n  BIF: {\n    symbol: 'FBu',\n    name: 'Burundian Franc',\n    symbol_native: 'FBu',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'BIF',\n    name_plural: 'Burundian francs',\n  },\n  BND: {\n    symbol: 'BN$',\n    name: 'Brunei Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BND',\n    name_plural: 'Brunei dollars',\n  },\n  BOB: {\n    symbol: 'Bs',\n    name: 'Bolivian Boliviano',\n    symbol_native: 'Bs',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BOB',\n    name_plural: 'Bolivian bolivianos',\n  },\n  BRL: {\n    symbol: 'R$',\n    name: 'Brazilian Real',\n    symbol_native: 'R$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BRL',\n    name_plural: 'Brazilian reals',\n  },\n  BWP: {\n    symbol: 'BWP',\n    name: 'Botswanan Pula',\n    symbol_native: 'P',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BWP',\n    name_plural: 'Botswanan pulas',\n  },\n  BYN: {\n    symbol: 'Br',\n    name: 'Belarusian Ruble',\n    symbol_native: 'руб.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BYN',\n    name_plural: 'Belarusian rubles',\n  },\n  BZD: {\n    symbol: 'BZ$',\n    name: 'Belize Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'BZD',\n    name_plural: 'Belize dollars',\n  },\n  CDF: {\n    symbol: 'CDF',\n    name: 'Congolese Franc',\n    symbol_native: 'FrCD',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CDF',\n    name_plural: 'Congolese francs',\n  },\n  CHF: {\n    symbol: 'CHF',\n    name: 'Swiss Franc',\n    symbol_native: 'CHF',\n    decimal_digits: 2,\n    rounding: 0.05,\n    code: 'CHF',\n    name_plural: 'Swiss francs',\n  },\n  CLP: {\n    symbol: 'CL$',\n    name: 'Chilean Peso',\n    symbol_native: '$',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'CLP',\n    name_plural: 'Chilean pesos',\n  },\n  CNY: {\n    symbol: 'CN¥',\n    name: 'Chinese Yuan',\n    symbol_native: 'CN¥',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CNY',\n    name_plural: 'Chinese yuan',\n  },\n  COP: {\n    symbol: 'CO$',\n    name: 'Colombian Peso',\n    symbol_native: '$',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'COP',\n    name_plural: 'Colombian pesos',\n  },\n  CRC: {\n    symbol: '₡',\n    name: 'Costa Rican Colón',\n    symbol_native: '₡',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'CRC',\n    name_plural: 'Costa Rican colóns',\n  },\n  CVE: {\n    symbol: 'CV$',\n    name: 'Cape Verdean Escudo',\n    symbol_native: 'CV$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CVE',\n    name_plural: 'Cape Verdean escudos',\n  },\n  CZK: {\n    symbol: 'Kč',\n    name: 'Czech Republic Koruna',\n    symbol_native: 'Kč',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'CZK',\n    name_plural: 'Czech Republic korunas',\n  },\n  DJF: {\n    symbol: 'Fdj',\n    name: 'Djiboutian Franc',\n    symbol_native: 'Fdj',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'DJF',\n    name_plural: 'Djiboutian francs',\n  },\n  DKK: {\n    symbol: 'Dkr',\n    name: 'Danish Krone',\n    symbol_native: 'kr',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'DKK',\n    name_plural: 'Danish kroner',\n  },\n  DOP: {\n    symbol: 'RD$',\n    name: 'Dominican Peso',\n    symbol_native: 'RD$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'DOP',\n    name_plural: 'Dominican pesos',\n  },\n  DZD: {\n    symbol: 'DA',\n    name: 'Algerian Dinar',\n    symbol_native: 'د.ج.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'DZD',\n    name_plural: 'Algerian dinars',\n  },\n  EEK: {\n    symbol: 'Ekr',\n    name: 'Estonian Kroon',\n    symbol_native: 'kr',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'EEK',\n    name_plural: 'Estonian kroons',\n  },\n  EGP: {\n    symbol: 'EGP',\n    name: 'Egyptian Pound',\n    symbol_native: 'ج.م.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'EGP',\n    name_plural: 'Egyptian pounds',\n  },\n  ERN: {\n    symbol: 'Nfk',\n    name: 'Eritrean Nakfa',\n    symbol_native: 'Nfk',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ERN',\n    name_plural: 'Eritrean nakfas',\n  },\n  ETB: {\n    symbol: 'Br',\n    name: 'Ethiopian Birr',\n    symbol_native: 'Br',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ETB',\n    name_plural: 'Ethiopian birrs',\n  },\n  GBP: {\n    symbol: '£',\n    name: 'British Pound Sterling',\n    symbol_native: '£',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'GBP',\n    name_plural: 'British pounds sterling',\n  },\n  GEL: {\n    symbol: 'GEL',\n    name: 'Georgian Lari',\n    symbol_native: 'GEL',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'GEL',\n    name_plural: 'Georgian laris',\n  },\n  GHS: {\n    symbol: 'GH₵',\n    name: 'Ghanaian Cedi',\n    symbol_native: 'GH₵',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'GHS',\n    name_plural: 'Ghanaian cedis',\n  },\n  GNF: {\n    symbol: 'FG',\n    name: 'Guinean Franc',\n    symbol_native: 'FG',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'GNF',\n    name_plural: 'Guinean francs',\n  },\n  GTQ: {\n    symbol: 'GTQ',\n    name: 'Guatemalan Quetzal',\n    symbol_native: 'Q',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'GTQ',\n    name_plural: 'Guatemalan quetzals',\n  },\n  HKD: {\n    symbol: 'HK$',\n    name: 'Hong Kong Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'HKD',\n    name_plural: 'Hong Kong dollars',\n  },\n  HNL: {\n    symbol: 'HNL',\n    name: 'Honduran Lempira',\n    symbol_native: 'L',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'HNL',\n    name_plural: 'Honduran lempiras',\n  },\n  HRK: {\n    symbol: 'kn',\n    name: 'Croatian Kuna',\n    symbol_native: 'kn',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'HRK',\n    name_plural: 'Croatian kunas',\n  },\n  HUF: {\n    symbol: 'Ft',\n    name: 'Hungarian Forint',\n    symbol_native: 'Ft',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'HUF',\n    name_plural: 'Hungarian forints',\n  },\n  IDR: {\n    symbol: 'Rp',\n    name: 'Indonesian Rupiah',\n    symbol_native: 'Rp',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'IDR',\n    name_plural: 'Indonesian rupiahs',\n  },\n  ILS: {\n    symbol: '₪',\n    name: 'Israeli New Sheqel',\n    symbol_native: '₪',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ILS',\n    name_plural: 'Israeli new sheqels',\n  },\n  INR: {\n    symbol: 'Rs',\n    name: 'Indian Rupee',\n    symbol_native: 'টকা',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'INR',\n    name_plural: 'Indian rupees',\n  },\n  IQD: {\n    symbol: 'IQD',\n    name: 'Iraqi Dinar',\n    symbol_native: 'د.ع.‏',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'IQD',\n    name_plural: 'Iraqi dinars',\n  },\n  IRR: {\n    symbol: 'IRR',\n    name: 'Iranian Rial',\n    symbol_native: '﷼',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'IRR',\n    name_plural: 'Iranian rials',\n  },\n  ISK: {\n    symbol: 'Ikr',\n    name: 'Icelandic Króna',\n    symbol_native: 'kr',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'ISK',\n    name_plural: 'Icelandic krónur',\n  },\n  JMD: {\n    symbol: 'J$',\n    name: 'Jamaican Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'JMD',\n    name_plural: 'Jamaican dollars',\n  },\n  JOD: {\n    symbol: 'JD',\n    name: 'Jordanian Dinar',\n    symbol_native: 'د.أ.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'JOD',\n    name_plural: 'Jordanian dinars',\n  },\n  JPY: {\n    symbol: '¥',\n    name: 'Japanese Yen',\n    symbol_native: '￥',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'JPY',\n    name_plural: 'Japanese yen',\n  },\n  KES: {\n    symbol: 'Ksh',\n    name: 'Kenyan Shilling',\n    symbol_native: 'Ksh',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'KES',\n    name_plural: 'Kenyan shillings',\n  },\n  KHR: {\n    symbol: 'KHR',\n    name: 'Cambodian Riel',\n    symbol_native: '៛',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'KHR',\n    name_plural: 'Cambodian riels',\n  },\n  KMF: {\n    symbol: 'CF',\n    name: 'Comorian Franc',\n    symbol_native: 'FC',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'KMF',\n    name_plural: 'Comorian francs',\n  },\n  KRW: {\n    symbol: '₩',\n    name: 'South Korean Won',\n    symbol_native: '₩',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'KRW',\n    name_plural: 'South Korean won',\n  },\n  KWD: {\n    symbol: 'KD',\n    name: 'Kuwaiti Dinar',\n    symbol_native: 'د.ك.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'KWD',\n    name_plural: 'Kuwaiti dinars',\n  },\n  KZT: {\n    symbol: 'KZT',\n    name: 'Kazakhstani Tenge',\n    symbol_native: 'тңг.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'KZT',\n    name_plural: 'Kazakhstani tenges',\n  },\n  LBP: {\n    symbol: 'LB£',\n    name: 'Lebanese Pound',\n    symbol_native: 'ل.ل.‏',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'LBP',\n    name_plural: 'Lebanese pounds',\n  },\n  LKR: {\n    symbol: 'SLRs',\n    name: 'Sri Lankan Rupee',\n    symbol_native: 'SL Re',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'LKR',\n    name_plural: 'Sri Lankan rupees',\n  },\n  LTL: {\n    symbol: 'Lt',\n    name: 'Lithuanian Litas',\n    symbol_native: 'Lt',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'LTL',\n    name_plural: 'Lithuanian litai',\n  },\n  LVL: {\n    symbol: 'Ls',\n    name: 'Latvian Lats',\n    symbol_native: 'Ls',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'LVL',\n    name_plural: 'Latvian lati',\n  },\n  LYD: {\n    symbol: 'LD',\n    name: 'Libyan Dinar',\n    symbol_native: 'د.ل.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'LYD',\n    name_plural: 'Libyan dinars',\n  },\n  MAD: {\n    symbol: 'MAD',\n    name: 'Moroccan Dirham',\n    symbol_native: 'د.م.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MAD',\n    name_plural: 'Moroccan dirhams',\n  },\n  MDL: {\n    symbol: 'MDL',\n    name: 'Moldovan Leu',\n    symbol_native: 'MDL',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MDL',\n    name_plural: 'Moldovan lei',\n  },\n  MGA: {\n    symbol: 'MGA',\n    name: 'Malagasy Ariary',\n    symbol_native: 'MGA',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'MGA',\n    name_plural: 'Malagasy Ariaries',\n  },\n  MKD: {\n    symbol: 'MKD',\n    name: 'Macedonian Denar',\n    symbol_native: 'MKD',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MKD',\n    name_plural: 'Macedonian denari',\n  },\n  MMK: {\n    symbol: 'MMK',\n    name: 'Myanma Kyat',\n    symbol_native: 'K',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'MMK',\n    name_plural: 'Myanma kyats',\n  },\n  MOP: {\n    symbol: 'MOP$',\n    name: 'Macanese Pataca',\n    symbol_native: 'MOP$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MOP',\n    name_plural: 'Macanese patacas',\n  },\n  MUR: {\n    symbol: 'MURs',\n    name: 'Mauritian Rupee',\n    symbol_native: 'MURs',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'MUR',\n    name_plural: 'Mauritian rupees',\n  },\n  MXN: {\n    symbol: 'MX$',\n    name: 'Mexican Peso',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MXN',\n    name_plural: 'Mexican pesos',\n  },\n  MYR: {\n    symbol: 'RM',\n    name: 'Malaysian Ringgit',\n    symbol_native: 'RM',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MYR',\n    name_plural: 'Malaysian ringgits',\n  },\n  MZN: {\n    symbol: 'MTn',\n    name: 'Mozambican Metical',\n    symbol_native: 'MTn',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'MZN',\n    name_plural: 'Mozambican meticals',\n  },\n  NAD: {\n    symbol: 'N$',\n    name: 'Namibian Dollar',\n    symbol_native: 'N$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NAD',\n    name_plural: 'Namibian dollars',\n  },\n  NGN: {\n    symbol: '₦',\n    name: 'Nigerian Naira',\n    symbol_native: '₦',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NGN',\n    name_plural: 'Nigerian nairas',\n  },\n  NIO: {\n    symbol: 'C$',\n    name: 'Nicaraguan Córdoba',\n    symbol_native: 'C$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NIO',\n    name_plural: 'Nicaraguan córdobas',\n  },\n  NOK: {\n    symbol: 'Nkr',\n    name: 'Norwegian Krone',\n    symbol_native: 'kr',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NOK',\n    name_plural: 'Norwegian kroner',\n  },\n  NPR: {\n    symbol: 'NPRs',\n    name: 'Nepalese Rupee',\n    symbol_native: 'नेरू',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NPR',\n    name_plural: 'Nepalese rupees',\n  },\n  NZD: {\n    symbol: 'NZ$',\n    name: 'New Zealand Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'NZD',\n    name_plural: 'New Zealand dollars',\n  },\n  OMR: {\n    symbol: 'OMR',\n    name: 'Omani Rial',\n    symbol_native: 'ر.ع.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'OMR',\n    name_plural: 'Omani rials',\n  },\n  PAB: {\n    symbol: 'B/.',\n    name: 'Panamanian Balboa',\n    symbol_native: 'B/.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'PAB',\n    name_plural: 'Panamanian balboas',\n  },\n  PEN: {\n    symbol: 'S/.',\n    name: 'Peruvian Nuevo Sol',\n    symbol_native: 'S/.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'PEN',\n    name_plural: 'Peruvian nuevos soles',\n  },\n  PHP: {\n    symbol: '₱',\n    name: 'Philippine Peso',\n    symbol_native: '₱',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'PHP',\n    name_plural: 'Philippine pesos',\n  },\n  PKR: {\n    symbol: 'PKRs',\n    name: 'Pakistani Rupee',\n    symbol_native: '₨',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'PKR',\n    name_plural: 'Pakistani rupees',\n  },\n  PLN: {\n    symbol: 'zł',\n    name: 'Polish Zloty',\n    symbol_native: 'zł',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'PLN',\n    name_plural: 'Polish zlotys',\n  },\n  PYG: {\n    symbol: '₲',\n    name: 'Paraguayan Guarani',\n    symbol_native: '₲',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'PYG',\n    name_plural: 'Paraguayan guaranis',\n  },\n  QAR: {\n    symbol: 'QR',\n    name: 'Qatari Rial',\n    symbol_native: 'ر.ق.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'QAR',\n    name_plural: 'Qatari rials',\n  },\n  RON: {\n    symbol: 'RON',\n    name: 'Romanian Leu',\n    symbol_native: 'RON',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'RON',\n    name_plural: 'Romanian lei',\n  },\n  RSD: {\n    symbol: 'din.',\n    name: 'Serbian Dinar',\n    symbol_native: 'дин.',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'RSD',\n    name_plural: 'Serbian dinars',\n  },\n  RUB: {\n    symbol: 'RUB',\n    name: 'Russian Ruble',\n    symbol_native: '₽.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'RUB',\n    name_plural: 'Russian rubles',\n  },\n  RWF: {\n    symbol: 'RWF',\n    name: 'Rwandan Franc',\n    symbol_native: 'FR',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'RWF',\n    name_plural: 'Rwandan francs',\n  },\n  SAR: {\n    symbol: 'SR',\n    name: 'Saudi Riyal',\n    symbol_native: 'ر.س.‏',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'SAR',\n    name_plural: 'Saudi riyals',\n  },\n  SDG: {\n    symbol: 'SDG',\n    name: 'Sudanese Pound',\n    symbol_native: 'SDG',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'SDG',\n    name_plural: 'Sudanese pounds',\n  },\n  SEK: {\n    symbol: 'Skr',\n    name: 'Swedish Krona',\n    symbol_native: 'kr',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'SEK',\n    name_plural: 'Swedish kronor',\n  },\n  SGD: {\n    symbol: 'S$',\n    name: 'Singapore Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'SGD',\n    name_plural: 'Singapore dollars',\n  },\n  SOS: {\n    symbol: 'Ssh',\n    name: 'Somali Shilling',\n    symbol_native: 'Ssh',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'SOS',\n    name_plural: 'Somali shillings',\n  },\n  SYP: {\n    symbol: 'SY£',\n    name: 'Syrian Pound',\n    symbol_native: 'ل.س.‏',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'SYP',\n    name_plural: 'Syrian pounds',\n  },\n  THB: {\n    symbol: '฿',\n    name: 'Thai Baht',\n    symbol_native: '฿',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'THB',\n    name_plural: 'Thai baht',\n  },\n  TND: {\n    symbol: 'DT',\n    name: 'Tunisian Dinar',\n    symbol_native: 'د.ت.‏',\n    decimal_digits: 3,\n    rounding: 0,\n    code: 'TND',\n    name_plural: 'Tunisian dinars',\n  },\n  TOP: {\n    symbol: 'T$',\n    name: 'Tongan Paʻanga',\n    symbol_native: 'T$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'TOP',\n    name_plural: 'Tongan paʻanga',\n  },\n  TRY: {\n    symbol: 'TL',\n    name: 'Turkish Lira',\n    symbol_native: 'TL',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'TRY',\n    name_plural: 'Turkish Lira',\n  },\n  TTD: {\n    symbol: 'TT$',\n    name: 'Trinidad and Tobago Dollar',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'TTD',\n    name_plural: 'Trinidad and Tobago dollars',\n  },\n  TWD: {\n    symbol: 'NT$',\n    name: 'New Taiwan Dollar',\n    symbol_native: 'NT$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'TWD',\n    name_plural: 'New Taiwan dollars',\n  },\n  TZS: {\n    symbol: 'TSh',\n    name: 'Tanzanian Shilling',\n    symbol_native: 'TSh',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'TZS',\n    name_plural: 'Tanzanian shillings',\n  },\n  UAH: {\n    symbol: '₴',\n    name: 'Ukrainian Hryvnia',\n    symbol_native: '₴',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'UAH',\n    name_plural: 'Ukrainian hryvnias',\n  },\n  UGX: {\n    symbol: 'USh',\n    name: 'Ugandan Shilling',\n    symbol_native: 'USh',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'UGX',\n    name_plural: 'Ugandan shillings',\n  },\n  UYU: {\n    symbol: '$U',\n    name: 'Uruguayan Peso',\n    symbol_native: '$',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'UYU',\n    name_plural: 'Uruguayan pesos',\n  },\n  UZS: {\n    symbol: 'UZS',\n    name: 'Uzbekistan Som',\n    symbol_native: 'UZS',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'UZS',\n    name_plural: 'Uzbekistan som',\n  },\n  VEF: {\n    symbol: 'Bs.F.',\n    name: 'Venezuelan Bolívar',\n    symbol_native: 'Bs.F.',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'VEF',\n    name_plural: 'Venezuelan bolívars',\n  },\n  VND: {\n    symbol: '₫',\n    name: 'Vietnamese Dong',\n    symbol_native: '₫',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'VND',\n    name_plural: 'Vietnamese dong',\n  },\n  XAF: {\n    symbol: 'FCFA',\n    name: 'CFA Franc BEAC',\n    symbol_native: 'FCFA',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'XAF',\n    name_plural: 'CFA francs BEAC',\n  },\n  XOF: {\n    symbol: 'CFA',\n    name: 'CFA Franc BCEAO',\n    symbol_native: 'CFA',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'XOF',\n    name_plural: 'CFA francs BCEAO',\n  },\n  YER: {\n    symbol: 'YR',\n    name: 'Yemeni Rial',\n    symbol_native: 'ر.ي.‏',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'YER',\n    name_plural: 'Yemeni rials',\n  },\n  ZAR: {\n    symbol: 'R',\n    name: 'South African Rand',\n    symbol_native: 'R',\n    decimal_digits: 2,\n    rounding: 0,\n    code: 'ZAR',\n    name_plural: 'South African rand',\n  },\n  ZMK: {\n    symbol: 'ZK',\n    name: 'Zambian Kwacha',\n    symbol_native: 'ZK',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'ZMK',\n    name_plural: 'Zambian kwachas',\n  },\n  ZWL: {\n    symbol: 'ZWL$',\n    name: 'Zimbabwean Dollar',\n    symbol_native: 'ZWL$',\n    decimal_digits: 0,\n    rounding: 0,\n    code: 'ZWL',\n    name_plural: 'Zimbabwean Dollar',\n  },\n};\n\nexport const paymentTemplatesPageSize = 20;\nexport const defaultResourceName = 'Payments';\nexport const defaultPrivilege = 'create';\nexport const CountriesMap: { [ksy: string]: string } = {\n  AF: 'Afghanistan',\n  AX: 'Aland Islands',\n  AL: 'Albania',\n  DZ: 'Algeria',\n  AS: 'American Samoa',\n  AD: 'Andorra',\n  AO: 'Angola',\n  AI: 'Anguilla',\n  AQ: 'Antarctica',\n  AG: 'Antigua and Barbuda',\n  AR: 'Argentina',\n  AM: 'Armenia',\n  AW: 'Aruba',\n  AU: 'Australia',\n  AT: 'Austria',\n  AZ: 'Azerbaijan',\n  BS: 'Bahamas',\n  BH: 'Bahrain',\n  BD: 'Bangladesh',\n  BB: 'Barbados',\n  BY: 'Belarus',\n  BE: 'Belgium',\n  BZ: 'Belize',\n  BJ: 'Benin',\n  BM: 'Bermuda',\n  BT: 'Bhutan',\n  BO: 'Bolivia, Plurinational State of',\n  BQ: 'Bonaire, Saint Eustatius and Saba',\n  BA: 'Bosnia and Herzegovina',\n  BW: 'Botswana',\n  BV: 'Bouvet Island',\n  BR: 'Brazil',\n  IO: 'British Indian Ocean Territory',\n  BN: 'Brunei Darussalam',\n  BG: 'Bulgaria',\n  BF: 'Burkina Faso',\n  BI: 'Burundi',\n  KH: 'Cambodia',\n  CM: 'Cameroon',\n  CA: 'Canada',\n  CV: 'Cape Verde',\n  KY: 'Cayman Islands',\n  CF: 'Central African Republic',\n  TD: 'Chad',\n  CL: 'Chile',\n  CN: 'China',\n  CX: 'Christmas Island',\n  CC: 'Cocos (Keeling) Islands',\n  CO: 'Colombia',\n  KM: 'Comoros',\n  CG: 'Congo',\n  CD: 'Congo, The Democratic Republic of the',\n  CK: 'Cook Islands',\n  CR: 'Costa Rica',\n  CI: \"Cote d'Ivoire\",\n  HR: 'Croatia',\n  CU: 'Cuba',\n  CW: 'Curacao',\n  CY: 'Cyprus',\n  CZ: 'Czech Republic',\n  DK: 'Denmark',\n  DJ: 'Djibouti',\n  DM: 'Dominica',\n  DO: 'Dominican Republic',\n  EC: 'Ecuador',\n  EG: 'Egypt',\n  SV: 'El Salvador',\n  GQ: 'Equatorial Guinea',\n  ER: 'Eritrea',\n  EE: 'Estonia',\n  ET: 'Ethiopia',\n  FK: 'Falkland Islands (Malvinas',\n  FO: 'Faroe Islands',\n  FJ: 'Fiji',\n  FI: 'Finland',\n  FR: 'France',\n  GF: 'French Guiana',\n  PF: 'French Polynesia',\n  TF: 'French Southern Territories',\n  GA: 'Gabon',\n  GM: 'Gambia',\n  GE: 'Georgia',\n  DE: 'Germany',\n  GH: 'Ghana',\n  GI: 'Gibraltar',\n  GR: 'Greece',\n  GL: 'Greenland',\n  GD: 'Grenada',\n  GP: 'Guadeloupe',\n  GU: 'Guam',\n  GT: 'Guatemala',\n  GG: 'Guernsey',\n  GN: 'Guinea',\n  GW: 'Guinea-Bissau',\n  GY: 'Guyana',\n  HT: 'Haiti',\n  HM: 'Heard Island and McDonald Islands',\n  VA: 'Holy See (Vatican City State',\n  HN: 'Honduras',\n  HK: 'Hong Kong',\n  HU: 'Hungary',\n  IS: 'Iceland',\n  IN: 'India',\n  ID: 'Indonesia',\n  IR: 'Iran, Islamic Republic of',\n  IQ: 'Iraq',\n  IE: 'Ireland',\n  IM: 'Isle of Man',\n  IL: 'Israel',\n  IT: 'Italy',\n  JM: 'Jamaica',\n  JP: 'Japan',\n  JE: 'Jersey',\n  JO: 'Jordan',\n  KZ: 'Kazakhstan',\n  KE: 'Kenya',\n  KI: 'Kiribati',\n  KP: \"Korea, Democratic People's Republic of\",\n  KR: 'Korea, Republic of',\n  KW: 'Kuwait',\n  KG: 'Kyrgyzstan',\n  LA: \"Lao People's Democratic Republic\",\n  LV: 'Latvia',\n  LB: 'Lebanon',\n  LS: 'Lesotho',\n  LR: 'Liberia',\n  LY: 'Libyan Arab Jamahiriya',\n  LI: 'Liechtenstein',\n  LT: 'Lithuania',\n  LU: 'Luxembourg',\n  MO: 'Macao',\n  MK: 'Macedonia, The Former Yugoslav Republic of',\n  MG: 'Madagascar',\n  MW: 'Malawi',\n  MY: 'Malaysia',\n  MV: 'Maldives',\n  ML: 'Mali',\n  MT: 'Malta',\n  MH: 'Marshall Islands',\n  MQ: 'Martinique',\n  MR: 'Mauritania',\n  MU: 'Mauritius',\n  YT: 'Mayotte',\n  MX: 'Mexico',\n  FM: 'Micronesia, Federated States of',\n  MD: 'Moldova, Republic of',\n  MC: 'Monaco',\n  MN: 'Mongolia',\n  ME: 'Montenegro',\n  MS: 'Montserrat',\n  MA: 'Morocco',\n  MZ: 'Mozambique',\n  MM: 'Myanmar',\n  NA: 'Namibia',\n  NR: 'Nauru',\n  NP: 'Nepal',\n  NL: 'Netherlands',\n  NC: 'New Caledonia',\n  NZ: 'New Zealand',\n  NI: 'Nicaragua',\n  NE: 'Niger',\n  NG: 'Nigeria',\n  NU: 'Niue',\n  NF: 'Norfolk Island',\n  MP: 'Northern Mariana Islands',\n  NO: 'Norway',\n  PS: 'Occupied Palestinian Territory',\n  OM: 'Oman',\n  PK: 'Pakistan',\n  PW: 'Palau',\n  PA: 'Panama',\n  PG: 'Papua New Guinea',\n  PY: 'Paraguay',\n  PE: 'Peru',\n  PH: 'Philippines',\n  PN: 'Pitcairn',\n  PL: 'Poland',\n  PT: 'Portugal',\n  PR: 'Puerto Rico',\n  QA: 'Qatar',\n  RE: 'Reunion',\n  RO: 'Romania',\n  RU: 'Russian Federation',\n  RW: 'Rwanda',\n  BL: 'Saint Barthelemy',\n  SH: 'Saint Helena, Ascension and Tristan da Cunha',\n  KN: 'Saint Kitts and Nevis',\n  LC: 'Saint Lucia',\n  MF: 'Saint Martin (French part',\n  PM: 'Saint Pierre and Miquelon',\n  VC: 'Saint Vincent and The Grenadines',\n  WS: 'Samoa',\n  SM: 'San Marino',\n  ST: 'Sao Tome and Principe',\n  SA: 'Saudi Arabia',\n  SN: 'Senegal',\n  RS: 'Serbia',\n  SC: 'Seychelles',\n  SL: 'Sierra Leone',\n  SG: 'Singapore',\n  SX: 'Sint Maarten (Dutch part',\n  SK: 'Slovakia',\n  SI: 'Slovenia',\n  SB: 'Solomon Islands',\n  SO: 'Somalia',\n  ZA: 'South Africa',\n  GS: 'South Georgia and the South Sandwich Islands',\n  ES: 'Spain',\n  LK: 'Sri Lanka',\n  SD: 'Sudan',\n  SR: 'Suriname',\n  SJ: 'Svalbard and Jan Mayen',\n  SZ: 'Swaziland',\n  SE: 'Sweden',\n  CH: 'Switzerland',\n  SY: 'Syrian Arab Republic',\n  TW: 'Taiwan, Province of China',\n  TJ: 'Tajikistan',\n  TZ: 'Tanzania, United Republic of',\n  TH: 'Thailand',\n  TL: 'Timor-Leste',\n  TG: 'Togo',\n  TK: 'Tokelau',\n  TO: 'Tonga',\n  TT: 'Trinidad and Tobago',\n  TN: 'Tunisia',\n  TR: 'Turkey',\n  TM: 'Turkmenistan',\n  TC: 'Turks and Caicos Islands',\n  TV: 'Tuvalu',\n  UG: 'Uganda',\n  UA: 'Ukraine',\n  AE: 'United Arab Emirates',\n  GB: 'United Kingdom',\n  US: 'United States',\n  UY: 'Uruguay',\n  UZ: 'Uzbekistan',\n  VU: 'Vanuatu',\n  VE: 'Venezuela, Bolivarian Republic of',\n  VN: 'Viet Nam',\n  VG: 'Virgin Islands, British',\n  VI: 'Virgin Islands, U.S',\n  WF: 'Wallis and Futuna',\n  EH: 'Western Sahara',\n  YE: 'Yemen',\n  ZM: 'Zambia',\n  ZW: 'Zimbabwe',\n};\n","export const CurrencyToCountryMap: { [key: string]: string } = {\n  BDT: 'BD',\n  EUR: 'EU',\n  XOF: 'TG',\n  BGN: 'BG',\n  BAM: 'BA',\n  BBD: 'BB',\n  XPF: 'NC',\n  BMD: 'BM',\n  BND: 'BN',\n  BOB: 'BO',\n  BHD: 'BH',\n  BIF: 'BI',\n  BTN: 'BT',\n  JMD: 'JM',\n  NOK: 'NO',\n  BWP: 'BW',\n  WST: 'WS',\n  USD: 'US',\n  BRL: 'BR',\n  BSD: 'BS',\n  GBP: 'IM',\n  BYR: 'BY',\n  BZD: 'BZ',\n  RUB: 'RU',\n  RWF: 'RW',\n  RSD: 'RS',\n  TMT: 'TM',\n  TJS: 'TJ',\n  RON: 'RO',\n  NZD: 'CK',\n  GTQ: 'GT',\n  XAF: 'TD',\n  JPY: 'JP',\n  GYD: 'GY',\n  GEL: 'GE',\n  XCD: 'AI',\n  GNF: 'GN',\n  GMD: 'GM',\n  DKK: 'DK',\n  GIP: 'GI',\n  GHS: 'GH',\n  OMR: 'OM',\n  TND: 'TN',\n  JOD: 'JO',\n  HRK: 'HR',\n  HTG: 'HT',\n  HUF: 'HU',\n  HKD: 'HK',\n  HNL: 'HN',\n  AUD: 'AU',\n  VEF: 'VE',\n  ILS: 'IL',\n  PYG: 'PY',\n  IQD: 'IQ',\n  PAB: 'PA',\n  PGK: 'PG',\n  PEN: 'PE',\n  PKR: 'PK',\n  PHP: 'PH',\n  PLN: 'PL',\n  ZMK: 'ZM',\n  MAD: 'MA',\n  EGP: 'EG',\n  ZAR: 'ZA',\n  VND: 'VN',\n  SBD: 'SB',\n  ETB: 'ET',\n  SOS: 'SO',\n  ZWL: 'ZW',\n  SAR: 'SA',\n  ERN: 'ER',\n  MDL: 'MD',\n  MGA: 'MG',\n  UZS: 'UZ',\n  MMK: 'MM',\n  MOP: 'MO',\n  MNT: 'MN',\n  MKD: 'MK',\n  MUR: 'MU',\n  MWK: 'MW',\n  MVR: 'MV',\n  MRO: 'MR',\n  UGX: 'UG',\n  TZS: 'TZ',\n  MYR: 'MY',\n  MXN: 'MX',\n  SHP: 'SH',\n  FJD: 'FJ',\n  FKP: 'FK',\n  NIO: 'NI',\n  NAD: 'NA',\n  VUV: 'VU',\n  NGN: 'NG',\n  NPR: 'NP',\n  CHF: 'LI',\n  COP: 'CO',\n  CNY: 'CN',\n  CLP: 'CL',\n  CAD: 'CA',\n  CDF: 'CD',\n  CZK: 'CZ',\n  CRC: 'CR',\n  ANG: 'SX',\n  CVE: 'CV',\n  CUP: 'CU',\n  SZL: 'SZ',\n  SYP: 'SY',\n  KGS: 'KG',\n  KES: 'KE',\n  SSP: 'SS',\n  SRD: 'SR',\n  KHR: 'KH',\n  KMF: 'KM',\n  STD: 'ST',\n  KRW: 'KR',\n  KPW: 'KP',\n  KWD: 'KW',\n  SLL: 'SL',\n  SCR: 'SC',\n  KZT: 'KZ',\n  KYD: 'KY',\n  SGD: 'SG',\n  SEK: 'SE',\n  SDG: 'SD',\n  DOP: 'DO',\n  DJF: 'DJ',\n  YER: 'YE',\n  DZD: 'DZ',\n  UYU: 'UY',\n  LBP: 'LB',\n  LAK: 'LA',\n  TWD: 'TW',\n  TTD: 'TT',\n  TRY: 'TR',\n  LKR: 'LK',\n  TOP: 'TO',\n  LTL: 'LT',\n  LRD: 'LR',\n  LSL: 'LS',\n  THB: 'TH',\n  LYD: 'LY',\n  AED: 'AE',\n  AFN: 'AF',\n  ISK: 'IS',\n  IRR: 'IR',\n  AMD: 'AM',\n  ALL: 'AL',\n  AOA: 'AO',\n  ARS: 'AR',\n  AWG: 'AW',\n  INR: 'IN',\n  AZN: 'AZ',\n  IDR: 'ID',\n  UAH: 'UA',\n  QAR: 'QA',\n  MZN: 'MZ',\n};\n","import { AvailableFeature } from '@backbase/foundation-ang/core';\n\nexport enum Preferences {\n  PAGE_SIZE = 50,\n  MAX_NAV_SIZE = 3,\n  NOTIFICATION_DISMISS_TIMEOUT = 5000,\n  DEBOUNCE_TIME = 300,\n  INFINITE_SCROLL_OFFSET = 150,\n}\n\nexport enum LoadMoreMethod {\n  PAGINATION = 'pagination',\n  LOAD_MORE = 'load-more',\n}\n\nexport enum StatusBadgeColorMap {\n  OPEN = 'success',\n  CLOSED = 'danger',\n  INVALID = 'danger',\n  VALID = 'success',\n  ENTERED = 'primary',\n  ACCEPTED = 'success',\n  APPROVED = 'success',\n  REJECTED = 'danger',\n  PROCESSED = 'success',\n  CANCELLED = 'danger',\n  CANCELLATION_PENDING = 'danger',\n  READY = 'primary',\n  ACKNOWLEDGED = 'warning',\n  DOWNLOADING = 'warning',\n  EXPIRED = 'secondary',\n  PENDING = 'warning',\n}\nexport enum AvailableActions {\n  APPROVE = 'APPROVE',\n  REJECT = 'REJECT',\n  CANCEL = 'CANCEL',\n  DELETE = 'DELETE',\n  EDIT = 'EDIT',\n  CREATE = 'CREATE',\n}\nexport enum Actions {\n  APPROVE = 'APPROVED',\n  REJECT = 'REJECTED',\n}\n\nexport enum BatchOrderActions {\n  APPROVE = 'APPROVED',\n  REJECT = 'REJECTED',\n  CANCEL = 'CANCELLED',\n  DELETE = 'DELETED',\n}\n\nexport enum Status {\n  OPEN = 'OPEN',\n  CLOSED = 'CLOSED',\n  INVALID = 'INVALID',\n  VALID = 'VALID',\n  ENTERED = 'ENTERED',\n  READY = 'READY',\n  ACCEPTED = 'ACCEPTED',\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n  CANCELLED = 'CANCELLED',\n  CANCELLATION_PENDING = 'CANCELLATION_PENDING',\n  PROCESSED = 'PROCESSED',\n  ACKNOWLEDGED = 'ACKNOWLEDGED',\n  DOWNLOADING = 'DOWNLOADING',\n  EXPIRED = 'EXPIRED',\n  PENDING = 'PENDING',\n  /**\n   * PROCESSING is Front-end only, convert to `READY`, `ACKNOWLEDGED`,\n   * and `DOWNLOADING` before sending to server.\n   */\n  PROCESSING = 'PROCESSING',\n}\n\nexport enum BatchUploadStatus {\n  OPEN = 'OPEN',\n  DUPLICATE = 'DUPLICATE',\n  UPLOADING = 'UPLOADING',\n  DONE = 'DONE',\n}\n\nexport enum ApprovalStatus {\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n  CANCELLED = 'CANCELLED',\n}\n\nexport enum DuplicateBatchAction {\n  SUBMIT = 'SUBMIT',\n  DELETE = 'DELETE',\n}\n\nexport enum ScheduleEndType {\n  NEVER = 'never',\n  ON = 'on',\n  AFTER = 'after',\n}\n\nexport enum Frequencies {\n  ONCE = 'ONCE',\n  DAILY = 'DAILY',\n  WEEKLY = 'WEEKLY',\n  BIWEEKLY = 'BIWEEKLY',\n  MONTHLY = 'MONTHLY',\n  QUARTERLY = 'QUARTERLY',\n  YEARLY = 'YEARLY',\n}\n\nexport enum PaymentModes {\n  SINGLE = 'SINGLE',\n  RECURRING = 'RECURRING',\n  ALL = 'ALL',\n}\n\nexport const DefaultDebounceTime = 300;\nexport const SearchMinLength = 3;\n\nexport const today: Date = new Date();\n\n/**\n * Label for each value is set using Angular recommended approach\n * https://angular.io/guide/i18n#select-among-alternative-text-messages\n * Template example\n * <span i18n=\"Schedule frequency list|List of available schedule frequencies@@bb-schedule-ui.frequency.list\"\n * >{item.frequency.value, select, other {once} DAILY {daily} WEEKLY {weekly}}</span>\n */\nexport const frequencies = [\n  {\n    value: 'ONCE',\n    every: '1',\n  },\n  {\n    value: 'DAILY',\n    every: '1',\n  },\n  {\n    value: 'WEEKLY',\n    every: '1',\n  },\n  {\n    value: 'BIWEEKLY',\n    every: '1',\n  },\n  {\n    value: 'MONTHLY',\n    every: '1',\n  },\n  {\n    value: 'QUARTERLY',\n    every: '1',\n  },\n  {\n    value: 'YEARLY',\n    every: '1',\n  },\n];\n\nexport const USStates = [\n  { id: 'AL', name: 'Alabama' },\n  { id: 'AK', name: 'Alaska' },\n  { id: 'AS', name: 'American Samoa' },\n  { id: 'AZ', name: 'Arizona' },\n  { id: 'AR', name: 'Arkansas' },\n  { id: 'CA', name: 'California' },\n  { id: 'CO', name: 'Colorado' },\n  { id: 'CT', name: 'Connecticut' },\n  { id: 'DE', name: 'Delaware' },\n  { id: 'DC', name: 'District Of Columbia' },\n  { id: 'FM', name: 'Federated States Of Micronesia' },\n  { id: 'FL', name: 'Florida' },\n  { id: 'GA', name: 'Georgia' },\n  { id: 'GU', name: 'Guam' },\n  { id: 'HI', name: 'Hawaii' },\n  { id: 'ID', name: 'Idaho' },\n  { id: 'IL', name: 'Illinois' },\n  { id: 'IN', name: 'Indiana' },\n  { id: 'IA', name: 'Iowa' },\n  { id: 'KS', name: 'Kansas' },\n  { id: 'KY', name: 'Kentucky' },\n  { id: 'LA', name: 'Louisiana' },\n  { id: 'ME', name: 'Maine' },\n  { id: 'MH', name: 'Marshall Islands' },\n  { id: 'MD', name: 'Maryland' },\n  { id: 'MA', name: 'Massachusetts' },\n  { id: 'MI', name: 'Michigan' },\n  { id: 'MN', name: 'Minnesota' },\n  { id: 'MS', name: 'Mississippi' },\n  { id: 'MO', name: 'Missouri' },\n  { id: 'MT', name: 'Montana' },\n  { id: 'NE', name: 'Nebraska' },\n  { id: 'NV', name: 'Nevada' },\n  { id: 'NH', name: 'New Hampshire' },\n  { id: 'NJ', name: 'New Jersey' },\n  { id: 'NM', name: 'New Mexico' },\n  { id: 'NY', name: 'New York' },\n  { id: 'NC', name: 'North Carolina' },\n  { id: 'ND', name: 'North Dakota' },\n  { id: 'MP', name: 'Northern Mariana Islands' },\n  { id: 'OH', name: 'Ohio' },\n  { id: 'OK', name: 'Oklahoma' },\n  { id: 'OR', name: 'Oregon' },\n  { id: 'PW', name: 'Palau' },\n  { id: 'PA', name: 'Pennsylvania' },\n  { id: 'PR', name: 'Puerto Rico' },\n  { id: 'RI', name: 'Rhode Island' },\n  { id: 'SC', name: 'South Carolina' },\n  { id: 'SD', name: 'South Dakota' },\n  { id: 'TN', name: 'Tennessee' },\n  { id: 'TX', name: 'Texas' },\n  { id: 'UT', name: 'Utah' },\n  { id: 'VT', name: 'Vermont' },\n  { id: 'VI', name: 'Virgin Islands' },\n  { id: 'VA', name: 'Virginia' },\n  { id: 'WA', name: 'Washington' },\n  { id: 'WV', name: 'West Virginia' },\n  { id: 'WI', name: 'Wisconsin' },\n  { id: 'WY', name: 'Wyoming' },\n];\nexport enum BatchOrderError {\n  BREACH_LIMIT = 'BREACH_LIMIT',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport enum Period {\n  DAILY,\n  WEEKLY,\n  MONTHLY,\n  QUARTERLY,\n  YEARLY,\n}\n\nexport enum BreachedLimitType {\n  PERIODIC = 'PERIODIC',\n  TRANSACTIONAL = 'TRANSACTIONAL',\n  GLOBAL_PERIODIC = 'GLOBAL_PERIODIC',\n  GLOBAL_TRANSACTIONAL = 'GLOBAL_TRANSACTIONAL',\n}\n\nexport enum BreachType {\n  THRESHOLD = 'THRESHOLD',\n  CONSUMPTION = 'CONSUMPTION',\n}\n\nexport const THEME_V2: AvailableFeature = {\n  name: 'THEME_V2',\n  description: 'Switch to templates that support theme v2',\n};\n\nexport const MANUAL_BATCHES: AvailableFeature = {\n  name: 'MANUAL_BATCHES',\n  description:\n    'Features enabled when whole functionality of Manual Batches is implemented',\n};\n","import { Frequencies } from '../constants';\n\nexport const getDateOnly = (dateArg = new Date()): string => {\n  const date = new Date(dateArg);\n  const month = String(date.getMonth() + 1);\n  const day = String(date.getDate());\n  const year = String(date.getFullYear());\n\n  return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n};\n\nexport const getRelativeDate = (\n  next?: number,\n  ISOStringFormat?: boolean\n): string => {\n  const date = new Date();\n\n  if (next) {\n    date.setDate(date.getDate() + next);\n  }\n\n  return ISOStringFormat ? date.toISOString() : getDateOnly(date);\n};\n\nexport const datePart = (date?: Date | string): string => {\n  let normalisedDate = new Date();\n\n  if (date) {\n    if (typeof date === 'string') {\n      normalisedDate = new Date(date);\n    } else if (date instanceof Date) {\n      normalisedDate = date;\n    }\n  }\n\n  return getDateOnly(normalisedDate);\n};\n\nexport const scheduleOn = (frequency: string, date: Date): number => {\n  switch (frequency) {\n    case 'YEARLY':\n      return date.getMonth() + 1;\n    case 'MONTHLY':\n      return date.getDate();\n    default:\n      return date.getDay() + 1;\n  }\n};\n\nexport const getEndDate = (\n  frequency: Frequencies | any,\n  startDate?: string\n) => {\n  const freq = (frequency && (frequency as any).value) || frequency;\n  const today = startDate ? new Date(startDate) : new Date();\n  switch (freq) {\n    case Frequencies.ONCE:\n      return undefined;\n    case Frequencies.WEEKLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 7\n      ).toISOString();\n    }\n    case Frequencies.BIWEEKLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 14\n      ).toISOString();\n    }\n    case Frequencies.MONTHLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth() + 1,\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.QUARTERLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth() + 3,\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.YEARLY: {\n      return new Date(\n        today.getFullYear() + 1,\n        today.getMonth(),\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.DAILY:\n    default: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 1\n      ).toISOString();\n    }\n  }\n};\n","import { Subject, combineLatest, Observable } from 'rxjs';\nimport {\n  takeUntil,\n  pluck,\n  distinctUntilChanged,\n  startWith,\n  skip,\n  filter,\n} from 'rxjs/operators';\nimport {\n  AmountOption,\n  AmountOptions,\n  DependantItem,\n  FormFieldHooksParams,\n  ProductKinds,\n} from '../models/form-items.model';\nimport {\n  CounterPartyFields,\n  HiddenFields,\n  PaymentBaseFields,\n  RemittanceInfoFields,\n  ScheduleFields,\n} from '../models/form-item-names.model';\nimport { getEndDate } from '../../ui/helpers/date-helpers';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { AbstractControl } from '@angular/forms';\nimport { Frequencies, ScheduleEndType } from '../../ui/constants/constants';\nimport { InternalAccountFormItem } from '../../ui/models/types';\n\nexport function scheduleEndTypeToggleDependants(value: string) {\n  switch (value) {\n    case ScheduleEndType.ON:\n      return [ScheduleFields.endDate];\n    case ScheduleEndType.AFTER:\n      return [ScheduleFields.repeat];\n    default:\n      return;\n  }\n}\n\nexport function scheduleFrequencyToggleDependants(value: string) {\n  return value !== Frequencies.ONCE ? [ScheduleFields.endType] : undefined;\n}\n\nlet onDestroyStartDate$: Subject<void>;\nlet onDestroyEndDate$: Subject<void>;\n\nconst getNgbTime = (date: NgbDate) =>\n  new Date(date.year, date.month - 1, date.day).getTime();\nconst oneDay = 24 * 60 * 60 * 1000;\n\nexport function scheduleStartDateOnDestroyHook() {\n  if (onDestroyStartDate$) {\n    onDestroyStartDate$.next();\n    onDestroyStartDate$.complete();\n  }\n  if (onDestroyEndDate$) {\n    onDestroyEndDate$.next();\n    onDestroyEndDate$.complete();\n  }\n}\n\nexport function scheduleStartDateOnInitHook({\n  control,\n  group,\n  component,\n}: FormFieldHooksParams) {\n  onDestroyStartDate$ = new Subject();\n  if (group) {\n    group.valueChanges\n      .pipe(\n        takeUntil(onDestroyStartDate$),\n        pluck(ScheduleFields.frequency),\n        distinctUntilChanged()\n      )\n      .subscribe((value: Frequencies) => {\n        if (value === Frequencies.ONCE) {\n          component.options.label = 'Execution date';\n        } else {\n          component.options.label = 'Start on';\n        }\n        component.options.markDisabled = (date: NgbDate) =>\n          getNgbTime(date) < new Date().getTime() - oneDay;\n      });\n  }\n}\n\nexport function scheduleEndDateOnInitHook({\n  control,\n  group,\n  component,\n}: FormFieldHooksParams) {\n  onDestroyEndDate$ = new Subject();\n  const startDate = group && group.get(ScheduleFields.startDate);\n  const frequency = group && group.get(ScheduleFields.frequency);\n  const endType = group && group.get(ScheduleFields.endType);\n\n  if (startDate && !startDate.pristine && frequency && control.pristine) {\n    control.patchValue(getEndDate(frequency.value, startDate.value));\n  }\n\n  if (startDate && frequency && endType) {\n    combineLatest([\n      startDate.valueChanges.pipe(\n        startWith(startDate.value),\n        distinctUntilChanged()\n      ),\n      frequency.valueChanges.pipe(\n        startWith(frequency.value),\n        distinctUntilChanged()\n      ),\n      endType.valueChanges.pipe(\n        startWith(endType.value),\n        distinctUntilChanged()\n      ),\n    ])\n      .pipe(takeUntil(onDestroyEndDate$), skip(1))\n      .subscribe(() => {\n        if (control) {\n          const endDate = getEndDate(frequency.value, startDate.value);\n          control.patchValue(endDate);\n          component.options.markDisabled = (date: NgbDate) =>\n            getNgbTime(date) < new Date(endDate || '').getTime();\n        }\n      });\n  }\n}\n\nexport function toggleForAmountOptions(\n  _: any,\n  control?: AbstractControl,\n  amountOptions?: AmountOptions\n): DependantItem[] {\n  const selectedAccKind =\n    control && control.parent ? control.parent.value?.productKindName : null;\n  const product =\n    control && control.parent\n      ? control.parent.value?.accountData?.defaultRecord\n      : null;\n  const isAmountOptionsZero = amountOptions?.creditCard?.every(\n    (option: AmountOption) =>\n      option?.amountApiField\n        ? Number(product?.[<string>option.amountApiField]) === 0\n        : true\n  );\n\n  if (\n    selectedAccKind === ProductKinds.creditCard ||\n    selectedAccKind === ProductKinds.loanAccount\n  ) {\n    const items = [RemittanceInfoFields.amountOptions];\n    if (selectedAccKind === ProductKinds.creditCard && isAmountOptionsZero) {\n      items.push(RemittanceInfoFields.amountCurrencyGroup);\n    }\n    return [\n      {\n        parent: PaymentBaseFields.remittanceInfo,\n        items,\n      },\n    ];\n  }\n  return [\n    {\n      parent: PaymentBaseFields.remittanceInfo,\n      items: [\n        RemittanceInfoFields.description,\n        RemittanceInfoFields.amountCurrencyGroup,\n      ],\n    },\n  ];\n}\n\n// Internal transfer onInit-onDestroy hooks\nlet internalTransferDestroy$: Subject<void>;\nexport function internalTransferScheduleFreqOnInitHook({\n  control,\n  group,\n  component,\n}: FormFieldHooksParams) {\n  internalTransferDestroy$ = new Subject();\n  const initialOptions = component.options.options;\n  const frequencyCtrl = group.parent\n    ?.get(PaymentBaseFields.remittanceInfo)\n    ?.get('scheduleFrequency');\n  const paymentType$ = group.parent?.get('paymentType')?.valueChanges;\n\n  paymentType$\n    ?.pipe(takeUntil(internalTransferDestroy$))\n    .subscribe((paymentType) => {\n      if (paymentType === 'EXTERNAL_A2A') {\n        const optionsWithoutDaily = initialOptions.filter(\n          (opt: { value: string }) => opt.value !== Frequencies.DAILY\n        );\n        component.options.options = optionsWithoutDaily;\n      } else {\n        component.options.options = initialOptions;\n      }\n      component.toggleDependants();\n    });\n\n  frequencyCtrl?.valueChanges\n    .pipe(takeUntil(internalTransferDestroy$), startWith(frequencyCtrl.value))\n    .subscribe((scheduleFrequency) => {\n      const scheduleOptions = scheduleFrequency || initialOptions;\n      component.options.options = scheduleOptions;\n\n      const isFreqExistInOptions = scheduleOptions.find(\n        ({ value }: { label: string; value: Frequencies }) =>\n          value === control.value\n      );\n\n      // Check whether previously selected frequency is in options\n      if (!isFreqExistInOptions) {\n        control.setValue(component.options.defaultValue);\n        component.toggleDependants();\n      }\n    });\n}\n\nexport function internalTransferOnDestroyHook() {\n  if (internalTransferDestroy$) {\n    internalTransferDestroy$.next();\n    internalTransferDestroy$.complete();\n  }\n}\n\nexport function internalTransferScheduleAlertOnInitHook({\n  group,\n  component,\n}: FormFieldHooksParams) {\n  internalTransferDestroy$ = new Subject();\n  const { config, options } = component;\n  group?.parent\n    ?.get(PaymentBaseFields.counterparty)\n    ?.valueChanges.pipe(\n      filter((account) => {\n        const isCreditCardOrLoan = [\n          ProductKinds.creditCard,\n          ProductKinds.loanAccount,\n        ].includes(account?.productKindName);\n        config.hidden = !isCreditCardOrLoan;\n        return isCreditCardOrLoan;\n      }),\n      takeUntil(internalTransferDestroy$)\n    )\n    .subscribe((account) => {\n      const dueDate = new Date(\n        account?.accountData?.defaultRecord?.minimumPaymentDueDate\n      );\n      if (dueDate) {\n        const fullMonth = dueDate.toLocaleDateString('default', {\n          month: 'long',\n        });\n        const formattedDueDate = `${fullMonth} ${dueDate.getDate()}, ${dueDate.getFullYear()}`;\n        const alert =\n          new Date().getTime() >= dueDate.getTime()\n            ? options.alerts?.overdue\n            : options.alerts?.undue;\n\n        if (alert) {\n          alert.description = alert.description?.replace(\n            '@@date',\n            formattedDueDate\n          );\n        }\n\n        component.options = {\n          ...options,\n          ...(alert ? alert : {}),\n        };\n      }\n    });\n}\n\nexport function internalTransAmountOptToggleDependants(\n  _: any,\n  control?: AbstractControl\n) {\n  const showFreqSwitch =\n    control && control.parent\n      ? control.parent.get('showFrequencySwitch')?.value\n      : null;\n  const items = showFreqSwitch\n    ? [ScheduleFields.frequencySwitch]\n    : [ScheduleFields.frequency];\n  return [\n    {\n      parent: PaymentBaseFields.schedule,\n      items,\n    },\n  ];\n}\n\nexport function internalTransScheduleStartDateOnInitHook({\n  control,\n  group,\n  component,\n}: FormFieldHooksParams) {\n  scheduleStartDateOnInitHook({ control, group, component });\n  internalTransferDestroy$ = new Subject();\n  const { options } = component;\n  const defaultDescription = options.description;\n  component.options = { ...options, description: '' }; // No description until an account is selected\n  const date$ = control?.valueChanges.pipe(startWith(control.value));\n  const account$ = group?.parent\n    ?.get(PaymentBaseFields.counterparty)\n    ?.valueChanges.pipe(\n      startWith(group.parent.get(PaymentBaseFields.counterparty)?.value),\n      filter((account) =>\n        [ProductKinds.creditCard, ProductKinds.loanAccount].includes(\n          account?.productKindName\n        )\n      )\n    ) as Observable<InternalAccountFormItem>;\n\n  combineLatest([account$, date$])\n    .pipe(takeUntil(internalTransferDestroy$))\n    .subscribe(([account, date]) => {\n      const dueDate = new Date(\n        account?.accountData?.defaultRecord?.minimumPaymentDueDate\n      ).getTime();\n      const executeDate = new Date(date).getTime();\n      if (dueDate && executeDate) {\n        component.options.description =\n          executeDate >= dueDate && dueDate >= new Date().getTime()\n            ? defaultDescription\n            : '';\n      }\n    });\n}\n\nexport function intrabankCheckboxOnInitHook({\n  control,\n  group,\n  component,\n}: FormFieldHooksParams) {\n  internalTransferDestroy$ = new Subject();\n  const contactNameCtrl = group.parent?.get(\n    `${PaymentBaseFields.counterparty}.${CounterPartyFields.name}`\n  );\n  const contactNumberCtrl = group.parent?.get(\n    `${PaymentBaseFields.counterparty}.${CounterPartyFields.accountNumber}`\n  );\n  const selectedContact = group.parent?.get(\n    `${PaymentBaseFields.counterparty}.${HiddenFields.selectedBeneficiary}`\n  );\n\n  combineLatest([\n    contactNameCtrl?.valueChanges as Observable<any>,\n    contactNumberCtrl?.valueChanges as Observable<any>,\n    selectedContact?.valueChanges as Observable<any>,\n  ])\n    .pipe(takeUntil(internalTransferDestroy$))\n    .subscribe(([typedName, typedAccountNumber, { name, accounts }]) => {\n      const { accountNumber, email, phoneNumber } = accounts[0];\n      const isFormValuesEqualToSavedContact =\n        typedName === name &&\n        [accountNumber, email, phoneNumber].includes(typedAccountNumber);\n      component.options.disabled = isFormValuesEqualToSavedContact;\n      if (isFormValuesEqualToSavedContact) {\n        control.reset();\n      }\n    });\n}\n\nexport function internalTransferEndTypeOnInitHook({\n  group,\n  component,\n}: FormFieldHooksParams) {\n  internalTransferDestroy$ = new Subject();\n  const initialOptions = component.options.options;\n  const initialCssClasses = component.options.cssClasses;\n  const paymentType$ = group.parent?.get('paymentType')?.valueChanges;\n\n  paymentType$\n    ?.pipe(takeUntil(internalTransferDestroy$))\n    .subscribe((paymentType) => {\n      if (paymentType === 'EXTERNAL_A2A') {\n        component.options.options = initialOptions.filter(\n          (opt: { value: string }) => opt.value !== ScheduleEndType.ON\n        );\n        component.options.cssClasses = initialCssClasses.filter(\n          (i: string) => i !== 'bb-schedule__end-type'\n        );\n      } else {\n        component.options.options = initialOptions;\n        component.options.cssClasses = initialCssClasses;\n      }\n    });\n}\n\nexport function internalTransferRepeatOnInitHook({\n  group,\n  component,\n}: FormFieldHooksParams) {\n  internalTransferDestroy$ = new Subject();\n  const initialCssClasses = component.options.cssClasses;\n  const paymentType$ = group.parent?.get('paymentType')?.valueChanges;\n\n  paymentType$\n    ?.pipe(takeUntil(internalTransferDestroy$))\n    .subscribe((paymentType) => {\n      component.options.cssClasses = [\n        ...initialCssClasses,\n        ...(paymentType === 'EXTERNAL_A2A'\n          ? ['bb-schedule__repeat--two-option']\n          : []),\n      ];\n    });\n}\n","import {\n  AbstractControl,\n  FormArray,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nimport { InputFormField } from '@backbase/data-ang/payment-order-options';\n\nimport { today } from './../constants';\n\nexport function amountValidator(control: AbstractControl) {\n  return control.value &&\n    control.value.amount > 0 &&\n    control.value.currency.length > 0\n    ? undefined\n    : { invalidAmount: { value: control.value } };\n}\n\nexport function missingInListValidator(getIdsFn: () => string[]): ValidatorFn {\n  return function (control: AbstractControl) {\n    return getIdsFn().includes(control.value) || !control.value\n      ? null\n      : { missingInList: { value: control.value } };\n  };\n}\n\nexport function pastDateValidator(control: AbstractControl) {\n  const selectedDate = new Date(control.value);\n  return control.value &&\n    today > selectedDate &&\n    today.toDateString() !== selectedDate.toDateString()\n    ? { pastDate: { value: control.value } }\n    : null;\n}\n\nexport function maxValueTwoHundredValidator(control: AbstractControl) {\n  const value = parseFloat(control.value);\n  return !isNaN(value) && value > 200\n    ? { max: { max: 200, actual: control.value } }\n    : null;\n}\n\nexport function minValueTwoValidator(control: AbstractControl) {\n  const value = parseFloat(control.value);\n  return !isNaN(value) && value < 2\n    ? { min: { min: 2, actual: control.value } }\n    : null;\n}\n\nexport function endDateAfterStartDateValidator(control: AbstractControl) {\n  if (control.parent) {\n    const parentControl = control.parent;\n    const startDateControl = <AbstractControl>parentControl.get('startDate');\n    const startDate = new Date(startDateControl.value);\n    const endDate = new Date(control.value);\n    return control.value &&\n      startDate > endDate &&\n      startDate.toDateString() !== endDate.toDateString()\n      ? { lessThanStartDate: true }\n      : undefined;\n  }\n\n  return;\n}\n\nexport function sameAccountsValidator(config?: {\n  creditAccountId?: string;\n  debitAccountId?: string;\n}): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const parentForm = control?.parent?.parent;\n    const debitAccountId = parentForm?.get(['initiator', 'id'])?.value;\n    const creditAccountId = parentForm?.get(['counterparty', 'id'])?.value;\n    if (control.value && debitAccountId && debitAccountId === creditAccountId) {\n      return { sameDebitCreditAccountsSelected: true };\n    }\n    return null;\n  };\n}\n\nexport function scheduledPaymentValidationMethod(\n  control: AbstractControl,\n  _endType: string\n): { required: boolean } | undefined {\n  if (control.parent) {\n    const parentControl = control.parent;\n    const { endType, frequency } = parentControl && parentControl.value;\n    return frequency.value !== 'ONCE' &&\n      endType &&\n      !control.value &&\n      endType === _endType\n      ? { required: true }\n      : undefined;\n  }\n\n  return;\n}\n\nexport function requiredEndDateValidator(control: AbstractControl) {\n  return scheduledPaymentValidationMethod(control, 'on');\n}\n\nexport function requiredAfterValidator(control: AbstractControl) {\n  return scheduledPaymentValidationMethod(control, 'after');\n}\n\nexport function requiredEndTypeValidator(\n  control: AbstractControl\n): { required: boolean } | undefined {\n  if (control.parent) {\n    const parentControl = control.parent;\n    const {\n      frequency: { value: _value },\n    } = parentControl && parentControl.value;\n    return !control.value && _value && _value !== 'ONCE'\n      ? { required: true }\n      : undefined;\n  }\n\n  return;\n}\n\nexport function routingTransitNumberValidator(\n  control: AbstractControl\n): ValidationErrors | null {\n  let { value } = control;\n  const errors: ValidationErrors = {\n    pattern: false,\n    size: false,\n  };\n\n  if (value) {\n    value = value.toString(10);\n    const p = (str: string) => parseInt(str, 10);\n\n    if (value.length !== 9) {\n      errors.size = true;\n    }\n\n    const left = 3 * (p(value[0]) + p(value[3]) + p(value[6]));\n    const mid = 7 * (p(value[1]) + p(value[4]) + p(value[7]));\n    const right = p(value[2]) + p(value[5]) + p(value[8]);\n\n    if ((left + mid + right) % 10 !== 0 && value.length >= 9) {\n      errors.pattern = true;\n    }\n  }\n\n  return errors.size || errors.pattern ? errors : null;\n}\n\nexport function noWhitespaceValidator(control: AbstractControl) {\n  const isWhitespace = (control.value || '').trim().length === 0;\n  const isValid = !isWhitespace;\n  return isValid ? null : { required: true };\n}\n\nfunction getSanctionedCurrencies(control: AbstractControl): Array<string> {\n  const { inputFormSettings } =\n    control?.parent?.parent?.get('inputFormFromSettings')?.value || {};\n\n  return (\n    inputFormSettings?.find(\n      (setting: InputFormField) => setting.key === 'currency'\n    )?.values || []\n  );\n}\n\nexport function currencyValidatorFactory(\n  currencies: Array<string> = []\n): ValidatorFn {\n  return (control: AbstractControl) => {\n    const sanctionedCurrencies = currencies.length\n      ? currencies\n      : getSanctionedCurrencies(control);\n    if (!sanctionedCurrencies.length) {\n      return null;\n    }\n    const pattern = `(${sanctionedCurrencies.join('|')})`;\n    const regex = new RegExp(pattern);\n\n    const isValid = regex.test(control.value && control.value.currency);\n    return isValid ? null : { invalidCurrency: true };\n  };\n}\n\nexport function accountsValidation(rootControlName: string): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (control.root && control.parent) {\n      const rootControl = control.root;\n      const fromControl = <FormGroup>rootControl.get(rootControlName);\n      const fromAccount = <AbstractControl>fromControl?.get('id')?.value;\n      const selectedAccount = control.parent.get('id')?.value;\n      return control.parent.value && fromAccount === selectedAccount\n        ? { sameAccount: true }\n        : null;\n    }\n    return null;\n  };\n}\n\nexport function minimumOneAccount(control: FormArray) {\n  return control.controls.length > 0 ? null : { empty: true };\n}\n\nexport function amountGreaterThanZero(control: AbstractControl) {\n  return control.value > 0\n    ? undefined\n    : { invalidAmount: { value: control.value } };\n}\n","import '@angular/localize/init';\nimport { Validators, ValidatorFn } from '@angular/forms';\nimport {\n  PaymentFormGroup,\n  PaymentComponents,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  CounterPartyFields,\n  InitiatorFields,\n  RemittanceInfoFields,\n  ScheduleFields,\n} from '../models/form-item-names.model';\n\nimport {\n  scheduleFrequencyToggleDependants,\n  scheduleStartDateOnInitHook,\n  scheduleStartDateOnDestroyHook,\n  scheduleEndTypeToggleDependants,\n  scheduleEndDateOnInitHook,\n} from '../helpers/schedule-config-helpers';\nimport {\n  endDateAfterStartDateValidator,\n  minValueTwoValidator,\n  maxValueTwoHundredValidator,\n  pastDateValidator,\n} from '../../ui/helpers/form-validation';\nimport { Frequencies, ScheduleEndType } from '../../ui/constants';\n\nexport const defaultInitiatorConfig: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  title: $localize`:@@default-config.initiator-title:From`,\n  fields: [\n    {\n      type: PaymentComponents.debitAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        placeholder: $localize`:@@default-config.initiator-placeholder:Select an account`,\n        cssClasses: ['col-12'],\n        validationMessages: [\n          {\n            message: $localize`:@@default-config.invalid-account-message:Debit account is invalid`,\n            name: 'missingInList',\n          },\n          {\n            message: $localize`:@@default-config.closed-permission-error-message:You can not do payments to new beneficiary from this account.`,\n            name: 'hasOnlyClosedPaymentPermission',\n          },\n        ],\n      },\n    },\n  ],\n};\n\nexport const defaultCounterPartyConfig: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        label: $localize`:@@default-config.beneficiary-label:To`,\n        placeholder: $localize`:@@default-config.beneficiary-placeholder:Select a beneficiary`,\n        saveNewContactLabel: $localize`:@@default-config.new-contact-label:Save as a new contact`,\n        cssClasses: ['col-12'],\n        validationMessages: [\n          {\n            message: $localize`:@@default-config.same-accounts-selected-error-message:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required, Validators.minLength(6)],\n        label: $localize`:@@default-config.account-number-label:Account number`,\n        validationMessages: [\n          {\n            name: 'minlength',\n            message: $localize`:@@default-config.account-number-min-length-error-message:Account number should have minimum 6 characters`,\n          },\n        ],\n        cssClasses: ['col-12'],\n      },\n    },\n  ],\n};\n\nexport const defaultRemittanceInfoConfig: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@default-config.currency-label:Amount`,\n        currencies: ['GBP', 'EUR', 'USD'],\n        cssClasses: ['col-12'],\n      },\n    },\n  ],\n};\n\nexport const defaultScheduleConfig: PaymentFormGroup = {\n  name: PaymentBaseFields.schedule,\n  fields: [\n    {\n      name: PaymentComponents.scheduleHeader,\n      type: PaymentComponents.scheduleHeader,\n      options: {\n        label: $localize`:@@default-config.schedule-header:Delivery`,\n      },\n    },\n    {\n      name: ScheduleFields.frequency,\n      type: PaymentComponents.select,\n      options: {\n        label: $localize`:@@default-config.frequency-label:Frequency`,\n        validators: [Validators.required],\n        options: [\n          {\n            label: $localize`:@@default-config.once-frequency-label:Once`,\n            value: Frequencies.ONCE,\n          },\n          {\n            label: $localize`:@@default-config.daily-frequency-label:Daily`,\n            value: Frequencies.DAILY,\n          },\n          {\n            label: $localize`:@@default-config.weekly-frequency-label:Weekly`,\n            value: Frequencies.WEEKLY,\n          },\n          {\n            label: $localize`:@@default-config.biweekly-frequency-label:Biweekly`,\n            value: Frequencies.BIWEEKLY,\n          },\n          {\n            label: $localize`:@@default-config.monthly-frequency-label:Monthly`,\n            value: Frequencies.MONTHLY,\n          },\n          {\n            label: $localize`:@@default-config.quarterly-frequency-label:Quarterly`,\n            value: Frequencies.QUARTERLY,\n          },\n          {\n            label: $localize`:@@default-config.annually-frequency-label:Annually`,\n            value: Frequencies.YEARLY,\n          },\n        ],\n        defaultValue: Frequencies.ONCE,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        dependants: [ScheduleFields.endType],\n        activateDependantsOn: scheduleFrequencyToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.startDate,\n      options: {\n        label: $localize`:@@default-config.start-date-label:Start on`,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, pastDateValidator],\n        defaultValue: new Date().toISOString(),\n        validationMessages: [\n          {\n            name: 'pastDate',\n            message: $localize`:@@default-config.past-date-error-message:Start date cannot be in the past`,\n          },\n        ],\n      },\n      hooks: {\n        onInit: scheduleStartDateOnInitHook,\n        onDestroy: scheduleStartDateOnDestroyHook,\n      },\n    },\n    {\n      name: ScheduleFields.endType,\n      type: PaymentComponents.radio,\n      options: {\n        label: $localize`:@@default-config.end-type-label:End`,\n        preselect: true,\n        isConditionalMandatory: true,\n        cssClasses: [\n          'd-inline-block',\n          'col-md-2',\n          'align-top',\n          'bb-schedule__end-type',\n        ],\n        defaultValue: ScheduleEndType.NEVER,\n        options: [\n          {\n            label: $localize`:@@default-config.never-end-type-label:Never`,\n            value: ScheduleEndType.NEVER,\n          },\n          {\n            label: $localize`:@@default-config.on-date-end-type-label:On date`,\n            value: ScheduleEndType.ON,\n          },\n          {\n            label: $localize`:@@default-config.after-end-type-label:After`,\n            value: ScheduleEndType.AFTER,\n          },\n        ],\n        dependants: [ScheduleFields.endDate, ScheduleFields.repeat],\n        activateDependantsOn: scheduleEndTypeToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.endDate,\n      options: {\n        cssClasses: [\n          'd-inline-block',\n          'col-md-10',\n          'align-top',\n          'bb-schedule__end-date',\n        ],\n        validators: [endDateAfterStartDateValidator as ValidatorFn],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@default-config.end-date-required-message:End date is required`,\n          },\n          {\n            name: 'lessThanStartDate',\n            message: $localize`:@@default-config.end-date-less-start-date-message:End date cannot be before start date`,\n          },\n        ],\n        isConditionalMandatory: true,\n      },\n      hooks: {\n        onInit: scheduleEndDateOnInitHook,\n      },\n    },\n    {\n      name: ScheduleFields.repeat,\n      type: PaymentComponents.number,\n      options: {\n        isConditionalMandatory: true,\n        description: $localize`:@@default-config.repeat-schedule-description:times`,\n        min: 2,\n        max: 200,\n        defaultValue: 2,\n        validators: [minValueTwoValidator, maxValueTwoHundredValidator],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@default-config.repeat-schedule-required-message:Value is required`,\n          },\n          {\n            name: 'min',\n            message: $localize`:@@default-config.repeat-schedule-min--ocurrences-message:Value is below the minimum allowed occurrences (2)`,\n          },\n          {\n            name: 'max',\n            message: $localize`:@@default-config.repeat-schedule-max--ocurrences-message:Value exceeds maximum allowed occurances (200)`,\n          },\n        ],\n        cssClasses: [\n          'd-inline-block',\n          'col-md-9',\n          'align-top',\n          'px-0',\n          'bb-schedule__repeat',\n        ],\n      },\n    },\n  ],\n};\n","import { InjectionToken, Provider } from '@angular/core';\nimport { USStates } from '../ui/constants/constants';\nimport {\n  OmniPaymentConfigItem,\n  PaymentTypeConfig,\n  PayordOmniPaymentConfig,\n  PayordPaymentError,\n  ManualBatchesConfig,\n} from './models/form-items.model';\n\nexport const SepaCountries = [\n  'AD',\n  'AT',\n  'BE',\n  'BG',\n  'CH',\n  'CY',\n  'CZ',\n  'DE',\n  'DK',\n  'EE',\n  'ES',\n  'FI',\n  'FR',\n  'GB',\n  'GI',\n  'GR',\n  'HR',\n  'HU',\n  'IE',\n  'IS',\n  'IT',\n  'LI',\n  'LT',\n  'LU',\n  'LV',\n  'MC',\n  'MT',\n  'NL',\n  'NO',\n  'PL',\n  'PT',\n  'RO',\n  'SE',\n  'SI',\n  'SK',\n  'SM',\n  'VA',\n];\n\nexport const BB_PAYMENT_CONFIG: InjectionToken<OmniPaymentConfigItem> =\n  new InjectionToken('BB_PAYMENT_CONFIG');\n\n/**\n * @deprecated Will be removed in widget collection v3.11.0\n */\nexport const BB_MULTI_PAYMENT_CONFIG: InjectionToken<ManualBatchesConfig> =\n  new InjectionToken('BB_MULTI_PAYMENT_CONFIG');\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const US_States = USStates.map(\n  ({ name, id }: { name: string; id: string }) => ({ label: name, value: id })\n);\n\nexport const BB_REGISTERED_PAYMENT_CONFIGS = new InjectionToken<\n  PaymentTypeConfig[]\n>('BB_PAYMENT_REGISTERED_CONFIGS');\n\nexport const BB_PAYORD_OMNI_PAYMENT_CONFIG_TOKEN: InjectionToken<PayordOmniPaymentConfig> =\n  new InjectionToken('BB_PAYORD_OMNI_PAYMENT_CONFIG_TOKEN');\n\nexport const payordOmniPaymentDefaults: PayordOmniPaymentConfig = {\n  businessConfig: {\n    functionName: 'Payment Templates',\n    resourceName: 'Payments',\n  },\n};\n\nexport const PayordOmniPaymentConfigProvider: Provider[] = [\n  {\n    provide: BB_PAYORD_OMNI_PAYMENT_CONFIG_TOKEN,\n    useValue: payordOmniPaymentDefaults,\n  },\n];\n\nexport const DefaultClosedPaymentBusFnSuffix = ' - closed';\nexport const DefaultIntraCompanyPaymentBusFnSuffix = ' - Intracompany';\n\nexport const BB_CLOSED_PAYMENT_BUS_FN_SUFFIX: InjectionToken<string> =\n  new InjectionToken('Suffix for closed payment business functions');\nexport const BB_INTRACOMPANY_PAYMENT_BUS_FN_SUFFIX: InjectionToken<string> =\n  new InjectionToken('Suffix for intracompany payment business functions');\n\nexport const BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN: InjectionToken<PayordPaymentError> =\n  new InjectionToken('BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN');\n\nexport enum P2PLimitErrorKeys {\n  minLimit = 'p2p.payveris.limit_violation.min_payment_amount',\n  maxLimit = 'p2p.payveris.limit_violation.max_payment_amount',\n}\n\nexport const payordMessagesDefaults: PayordPaymentError = {\n  errorData: [\n    {\n      key: 'arrangements.api.invalid.iban',\n      message: 'Entered IBAN is invalid',\n    },\n  ],\n};\n\nexport const PayordPaymentErrorsConfigProvider: Provider[] = [\n  {\n    provide: BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN,\n    useValue: payordMessagesDefaults,\n  },\n];\n\nexport const bicCodeValidationPattern =\n  '^[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?$';\nexport const defaultPaymentSuccessEventName = 'bb.payment.success.event';\nexport const forbiddenStatus = 403;\n","import { Address } from '../models/types';\nimport { Bank } from '@backbase/data-ang/payment-order';\n\nexport const toInteger = (value: any): number => parseInt(value, 10) || 0;\n\nexport const modelItemToBoolean = (value: string | boolean): boolean => {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n  return value === 'true';\n};\n\nexport const isObjectTruthy = <T, K extends keyof T>(obj: T): boolean =>\n  obj && Object.keys(obj).some((key) => !!obj[key as K]);\n\nfunction getKeysWithValue(obj: { [key: string]: any }): string[] {\n  return Object.entries(obj).reduce(\n    (acc: Array<string>, [addrKey, addrValue]) => {\n      if (addrValue) {\n        acc.push(addrKey);\n      }\n      return acc;\n    },\n    []\n  );\n}\n\nfunction shouldRemoveCountryFromBeneficiaryBankAddress(\n  address: Bank['postalAddress'] | undefined\n): boolean {\n  let shouldRemoveCountry = false;\n  if (address) {\n    const keysWithValue = getKeysWithValue(address);\n    shouldRemoveCountry =\n      keysWithValue.length === 1 && keysWithValue.indexOf('country') !== -1;\n  }\n  return shouldRemoveCountry;\n}\n\nexport function isCounterpartyObjectEquals(o1: any, o2: any): boolean {\n  const branchCode1 = o1?.creditorBank?.bankBranchCode;\n  const branchCode2 = o2?.creditorBank?.bankBranchCode;\n\n  if (branchCode1 === undefined || branchCode2 === undefined) {\n    delete o1?.creditorBank?.bankBranchCode;\n    delete o2?.creditorBank?.bankBranchCode;\n  }\n\n  // Remove `selectedContact` from comparison (edited payment doesn't have beneficiary's account id)\n  const { selectedContact: toExclude1, ...rest1 } = o1;\n  const { selectedContact: toExclude2, ...rest2 } = o2;\n\n  o1 = rest1;\n  o2 = rest2;\n\n  if (!o1.hideBeneficiaryFields || !o2.hideBeneficiaryFields) {\n    const { hideBeneficiaryFields: toExclude3, ...rest3 } = o1;\n    const { hideBeneficiaryFields: toExclude4, ...rest4 } = o2;\n\n    o1 = rest3;\n    o2 = rest4;\n  }\n\n  if (\n    shouldRemoveCountryFromBeneficiaryBankAddress(\n      o1.creditorBank?.postalAddress\n    ) ||\n    shouldRemoveCountryFromBeneficiaryBankAddress(\n      o2.creditorBank?.postalAddress\n    )\n  ) {\n    const { country: toExclude5, ...rest5 } = o1.creditorBank.postalAddress;\n    const { country: toExclude6, ...rest6 } = o2.creditorBank.postalAddress;\n\n    o1.creditorBank.postalAddress = rest5;\n    o2.creditorBank.postalAddress = rest6;\n  }\n\n  return (o1.id && o1.id === o2.id) || objectEquals(o1, o2);\n}\n\nexport function objectEquals(o1: object, o2: object) {\n  return (\n    JSON.stringify(o1, falsyValueReplacer) ===\n    JSON.stringify(o2, falsyValueReplacer)\n  );\n}\n\nfunction falsyValueReplacer<T>(_: string, val: T): T | '' {\n  return val || '';\n}\n\nexport const isAddressTruthy = (address?: Address) => {\n  const {\n    addressLine1 = '',\n    addressLine2 = '',\n    postCode = '',\n    town = '',\n  } = address || {};\n  return isObjectTruthy({ addressLine1, addressLine2, postCode, town });\n};\n\nexport const filterObjectValues = <T, K extends keyof T>(obj: T) => {\n  for (const key in obj) {\n    if (!obj[key] || !isObjectTruthy(obj[key])) {\n      delete obj[key];\n    }\n  }\n  return obj;\n};\n\nexport const addressToString = (address: Address) =>\n  [\n    address[`addressLine1`],\n    address[`addressLine2`],\n    address[`streetName`],\n    address[`postCode`],\n    address[`town`],\n    address[`countrySubDivision`],\n  ]\n    .filter(Boolean)\n    .join(', ');\n\nexport function stripSpaces(str = '') {\n  return str?.replace(/\\s/g, '');\n}\n\nexport function toNumber(item: string) {\n  return parseFloat(item) || 0;\n}\n\nexport function parseString(str: string, ...args: any): string {\n  let i = 0;\n  return str.replace(/%s/g, () => args[i++]);\n}\n","import { ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { isValidIBANFormControl } from '@backbase/ui-ang/iban-lib';\nimport {\n  CounterPartyFields,\n  HiddenFields,\n  PaymentBaseFields,\n} from '../models/form-item-names.model';\nimport { stripSpaces } from '../../ui/helpers/type-helpers';\n\nexport function ibanCountryValidator(countries: string[] = []): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const parentForm = control.parent?.parent;\n    const sanctionedCountries = countries.length\n      ? countries\n      : parentForm?.get(HiddenFields.sanctionedCountries)?.value;\n    const countryControl = parentForm?.get([\n      PaymentBaseFields.counterparty,\n      CounterPartyFields.creditorBank,\n      CounterPartyFields.postalAddress,\n      CounterPartyFields.country,\n    ]);\n    if (!sanctionedCountries?.length) return isValidIBANFormControl;\n    const isInvalidIban = isValidIBANFormControl(control);\n    if (isInvalidIban) {\n      return { invalidIban: { value: control.value } };\n    } else {\n      const regexStr = countryControl?.value || sanctionedCountries.join('|');\n      const regex = new RegExp(`^(${regexStr})\\\\w+`, 'i');\n      return regex.test(stripSpaces(control.value))\n        ? null\n        : { invalidIbanCountry: { value: control.value } };\n    }\n  };\n}\n","import '@angular/localize/init';\nimport { Validators } from '@angular/forms';\nimport {\n  PaymentTypeConfig,\n  PaymentFormGroup,\n  PaymentComponents,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  CounterPartyFields,\n  RemittanceInfoFields,\n} from '../models/form-item-names.model';\nimport {\n  defaultInitiatorConfig as initiator,\n  defaultScheduleConfig as schedule,\n} from './default-config';\nimport { SepaCountries } from '../constants';\nimport { ibanCountryValidator } from '../helpers/form-validation';\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@sepa-config.beneficiary.header-label:To`,\n        hasDynamicTitle: true,\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        placeholder: $localize`:@@sepa-config.beneficiary-selector-placeholder:Select a beneficiary`,\n        saveNewContactLabel: $localize`:@@sepa-config.new-contact-label:Save as a new contact`,\n        cssClasses: ['col-12'],\n        validationMessages: [\n          {\n            message: $localize`:@@sepa-config.same-accounts-selected-error-message:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required, ibanCountryValidator(SepaCountries)],\n        label: $localize`:@@sepa-config.beneficiary.iban-label:IBAN`,\n        isIban: true,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        validationMessages: [\n          {\n            message: $localize`:@@sepa-config.iban-country-error-message:Invalid IBAN`,\n            name: 'invalidIbanCountry',\n          },\n        ],\n      },\n    },\n  ],\n};\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  title: $localize`:@@sepa-config.remittance-info-title:Payment details`,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@sepa-config.amount-label:Amount`,\n        currencies: ['EUR'],\n        cssClasses: ['col-12'],\n      },\n    },\n  ],\n};\n\nconst paymentInformation = {\n  name: 'paymentInformation',\n  title: $localize`:@@sepa-config.information-title:Payment information`,\n  fields: [\n    {\n      name: CounterPartyFields.remittanceInformation,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@sepa-config.remittance-info-label:Description`,\n        helperText: $localize`:@@sepa-config.remittance-info-helper-text: (optional)`,\n        placeholder: $localize`:@@sepa-config.remittance-info-placeholder:Enter payment description`,\n        showCharCounter: true,\n        minLength: 0,\n        rows: 3,\n        maxLength: 140,\n        cols: 50,\n        cssClasses: ['d-inline-block', 'col-md-8'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n  ],\n};\n\nexport const SEPA: PaymentTypeConfig = {\n  fields: [\n    initiator,\n    remittanceInfo,\n    counterParty,\n    paymentInformation,\n    schedule,\n  ],\n  name: $localize`:@@sepa-config.name:SEPA CT Transfer`,\n  businessFunction: 'SEPA CT',\n  paymentType: 'SEPA_CREDIT_TRANSFER',\n  options: {\n    closedPaymentBusFns: ['SEPA CT - closed,SEPA CT - Intracompany'],\n  },\n};\n","import '@angular/localize/init';\nimport {\n  PaymentTypeConfig,\n  PaymentFormGroup,\n  PaymentComponents,\n  ProductKinds,\n  AccountBalances,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  InitiatorFields,\n  RemittanceInfoFields,\n  ScheduleFields,\n  CounterPartyFields,\n} from '../models/form-item-names.model';\n\nimport {\n  scheduleFrequencyToggleDependants,\n  scheduleStartDateOnDestroyHook,\n  scheduleEndTypeToggleDependants,\n  scheduleEndDateOnInitHook,\n  toggleForAmountOptions,\n  internalTransferScheduleFreqOnInitHook,\n  internalTransferOnDestroyHook,\n  internalTransferScheduleAlertOnInitHook,\n  internalTransAmountOptToggleDependants,\n  internalTransScheduleStartDateOnInitHook,\n  internalTransferEndTypeOnInitHook,\n  internalTransferRepeatOnInitHook,\n} from '../helpers/schedule-config-helpers';\nimport {\n  endDateAfterStartDateValidator,\n  minValueTwoValidator,\n  maxValueTwoHundredValidator,\n  pastDateValidator,\n} from '../../ui/helpers/form-validation';\nimport { ValidatorFn, Validators } from '@angular/forms';\nimport { InternalAccountFormItem } from '../../ui/models/types';\nimport { Frequencies, ScheduleEndType } from '../../ui/constants/constants';\n\nconst initiator: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: $localize`:@@internal-config.initiator-label:From`,\n        placeholder: $localize`:@@internal-config.initiator-placeholder:Select an account`,\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        productKinds: [\n          {\n            productKind: ProductKinds.savingsAccount,\n            balance: {\n              apiField: AccountBalances.available,\n              label: $localize`:@@internal-config.available-balance-label:Available Balance`,\n            },\n          },\n          {\n            productKind: ProductKinds.currentAccount,\n            balance: {\n              apiField: AccountBalances.current,\n              label: $localize`:@@internal-config.current-balance-label:Current Balance`,\n            },\n          },\n          {\n            productKind: ProductKinds.loanAccount,\n            balance: {\n              label: $localize`:@@internal-config.loan-balance-label:Current Balance`,\n            },\n          },\n        ],\n        mapItems: (accounts) =>\n          accounts.filter((account: InternalAccountFormItem) =>\n            ['EUR', 'AED', 'USD'].includes(account?.currency || '')\n          ),\n        connectedAccounts: true,\n        connectedAccountsSubHeader: $localize`:@@internal-config.initiator-subheader:Connected Accounts`,\n        preselect: true,\n      },\n    },\n  ],\n};\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: CounterPartyFields.counterPartyAccountGroup,\n      options: {\n        label: $localize`:@@internal-config.beneficiary-label:To`,\n        placeholder: $localize`:@@internal-config.beneficiary-placeholder:Select an account`,\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        productKinds: [\n          {\n            productKind: ProductKinds.savingsAccount,\n            balance: {\n              apiField: AccountBalances.available,\n              label: $localize`:@@internal-config.beneficiary.available-balance-label:Available Balance`,\n            },\n          },\n          {\n            productKind: ProductKinds.currentAccount,\n            balance: {\n              apiField: AccountBalances.current,\n              label: $localize`:@@internal-config.beneficiary.current-balance-label:Current Balance`,\n            },\n          },\n          {\n            productKind: ProductKinds.loanAccount,\n            balance: {\n              label: $localize`:@@internal-config.beneficiary.loan-balance-label:Current Balance`,\n            },\n          },\n        ],\n        connectedAccountsSubHeader: $localize`:@@internal-config.beneficiary-subheader:Connected Accounts`,\n        connectedAccounts: true,\n        dependants: [\n          {\n            parent: PaymentBaseFields.remittanceInfo,\n            items: [\n              RemittanceInfoFields.description,\n              RemittanceInfoFields.amountCurrencyGroup,\n              RemittanceInfoFields.amountOptions,\n            ],\n          },\n        ],\n        activateDependantsOn: (value, control) =>\n          toggleForAmountOptions(\n            value,\n            control,\n            remittanceInfo.fields[1]?.options?.amountOptions\n          ),\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@internal-config.beneficiary.account-required-message:Please select an account from the list to transfer to`,\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst scheduleFrequencyForAmountOption = [\n  {\n    label: $localize`:@@internal-config.once-frequency-label:Once`,\n    value: Frequencies.ONCE,\n  },\n  {\n    label: $localize`:@@internal-config.monthly-frequency-label:Monthly`,\n    value: Frequencies.MONTHLY,\n  },\n];\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['col-12', 'pb-0', 'pt-2', 'bb-fieldset__heading'],\n        heading: $localize`:@@internal-config.remittance-info-heading:Payment details `,\n        headingType: 'h2',\n        headingClasses: ['mb-0'],\n        separatorLine: true,\n      },\n    },\n    {\n      type: PaymentComponents.internalAmountOptions,\n      name: RemittanceInfoFields.amountOptions,\n      hidden: true,\n      options: {\n        cssClasses: ['col-12', 'pb-0'],\n        isConditionalMandatory: true,\n        noBalanceText: $localize`:@@internal-config.no-balance-text:You don’t have any amount due on this credit card account.`,\n        amountInputClassName: 'bb-amount-input__field--large',\n        autoDecimal: true,\n        amountOptions: {\n          cssClasses: ['pl-2'],\n          creditCard: [\n            {\n              label: $localize`:@@internal-config.remittance-current-balance-label:Current balance`,\n              description: $localize`:@@internal-config.remittance-current-balance-description:The balance plus any activity since the latest billing cycle`,\n              amountApiField: 'bookedBalance',\n              scheduleFrequency: scheduleFrequencyForAmountOption,\n              showFrequencySwitch: true,\n            },\n            {\n              label: $localize`:@@internal-config.min-payment-label:Minimum payment due`,\n              description: $localize`:@@internal-config.min-payment-description:5% of the outstanding balance`,\n              amountApiField: 'minimumPayment',\n              scheduleFrequency: scheduleFrequencyForAmountOption,\n              showFrequencySwitch: true,\n            },\n            {\n              label: $localize`:@@internal-config.other-amount-label:Other amount`,\n              description: $localize`:@@internal-config.other-amount-description:Enter amount manually`,\n              hasCustomAmountInput: true,\n              scheduleFrequency: scheduleFrequencyForAmountOption,\n              showFrequencySwitch: true,\n            },\n          ],\n          loan: [\n            {\n              label: $localize`:@@internal-config.loan.full-amount-label:Full amount`,\n              description: $localize`:@@internal-config.loan.full-amount-description:The principal plus interests of the loan`,\n              amountApiField: 'bookedBalance',\n              scheduleFrequency: scheduleFrequencyForAmountOption,\n            },\n            {\n              label: $localize`:@@internal-config.loan.other-amount-label:Other amount`,\n              description: $localize`:@@internal-config.loan.other-amount-description:Enter amount manually`,\n              hasCustomAmountInput: true,\n              scheduleFrequency: scheduleFrequencyForAmountOption,\n              showFrequencySwitch: true,\n            },\n          ],\n        },\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: $localize`:@@internal-config.invalid-amount-message:Please select an amount to transfer`,\n          },\n          {\n            name: 'required',\n            message: $localize`:@@internal-config.required-amount-message:Please add amount of this transfer`,\n          },\n        ],\n        dependants: [\n          {\n            parent: PaymentBaseFields.schedule,\n            items: [ScheduleFields.frequency, ScheduleFields.frequencySwitch],\n          },\n        ],\n        keepDependantsOnHide: true,\n        activateDependantsOn: internalTransAmountOptToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.compactAmount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: 'Amount',\n        cssClasses: [\n          'bb-amount-input__field--large',\n          'bb-block',\n          'bb-block--lg',\n          'col-md-6',\n        ],\n        currency: 'USD',\n        autoDecimal: true,\n        keepValueOnHidden: true,\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: $localize`:@@internal-config.invalid.compact-amount-message:Please add amount of this transfer`,\n          },\n        ],\n      },\n    },\n    {\n      type: PaymentComponents.textarea,\n      name: RemittanceInfoFields.description,\n      options: {\n        label: $localize`:@@internal-config.add-memo-label:Add memo`,\n        placeholder: $localize`:@@internal-config.add-memo-placeholder:Enter memo`,\n        showCharCounter: true,\n        minLength: 0,\n        rows: 2,\n        maxLength: 140,\n        helperText: $localize`:@@internal-config.add-memo-helper-text: (Optional)`,\n        cssClasses: ['col-md-6', 'bb-block', 'bb-block--lg'],\n      },\n    },\n  ],\n};\n\nconst schedule: PaymentFormGroup = {\n  name: PaymentBaseFields.schedule,\n  fields: [\n    {\n      type: PaymentComponents.scheduleHeader,\n      name: PaymentComponents.scheduleHeader,\n      options: {\n        cssClasses: ['pb-0', 'bb-schedule-header__relative-text'],\n        label: $localize`:@@internal-config.schedule-label:Schedule`,\n      },\n    },\n    {\n      type: PaymentComponents.alert,\n      name: PaymentComponents.alert,\n      hidden: true,\n      options: {\n        cssClasses: ['col-md-12'],\n        alerts: {\n          undue: {\n            title: $localize`:@@internal-config.undue-alert-label:A payment executed after the due date will incur a  late fee.`,\n            description: $localize`:@@internal-config.undue-alert-description:The due date is @@date. A payment made before may improve your credit score.`,\n            modifier: 'info',\n          },\n          overdue: {\n            title: $localize`:@@internal-config.overdue-alert-label:The due date has passed. This payment will incur a late fee.`,\n            description: $localize`:@@internal-config.overdue-alert-description:The due date was @@date. Late payments will decrease your credit score.`,\n            modifier: 'warning',\n          },\n        },\n      },\n      hooks: {\n        onInit: internalTransferScheduleAlertOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.startDate,\n      options: {\n        label: $localize`:@@internal-config.transfer-date-label:Transfer date`,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, pastDateValidator],\n        defaultValue: new Date().toISOString(),\n        validationMessages: [\n          {\n            name: 'pastDate',\n            message: $localize`:@@internal-config.past-date-error-message:Start date cannot be in the past`,\n          },\n        ],\n        description: $localize`:@@internal-config.transfer-date-description:You selected a date after the due date, this transfer will incur a late fee`,\n      },\n      hooks: {\n        onInit: internalTransScheduleStartDateOnInitHook,\n        onDestroy: scheduleStartDateOnDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: ScheduleFields.frequency,\n      options: {\n        label: $localize`:@@internal-config.frequency-label:Frequency`,\n        validators: [Validators.required],\n        options: [\n          {\n            label: $localize`:@@internal-config.once-frequency-label:Once`,\n            value: Frequencies.ONCE,\n          },\n          {\n            label: $localize`:@@internal-config.daily-frequency-label:Daily`,\n            value: Frequencies.DAILY,\n          },\n          {\n            label: $localize`:@@internal-config.weekly-frequency-label:Weekly`,\n            value: Frequencies.WEEKLY,\n          },\n          {\n            label: $localize`:@@internal-config.biweekly-frequency-label:Biweekly`,\n            value: Frequencies.BIWEEKLY,\n          },\n          {\n            label: $localize`:@@internal-config.monthly-frequency-label:Monthly`,\n            value: Frequencies.MONTHLY,\n          },\n          {\n            label: $localize`:@@internal-config.quarterly-frequency-label:Quarterly`,\n            value: Frequencies.QUARTERLY,\n          },\n          {\n            label: $localize`:@@internal-config.annually-frequency-label:Annually`,\n            value: Frequencies.YEARLY,\n          },\n        ],\n        defaultValue: Frequencies.ONCE,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        dependants: [ScheduleFields.endType],\n        activateDependantsOn: scheduleFrequencyToggleDependants,\n      },\n      hooks: {\n        onInit: internalTransferScheduleFreqOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.radio,\n      name: ScheduleFields.endType,\n      options: {\n        label: $localize`:@@internal-config.end-type-label:End`,\n        preselect: true,\n        isConditionalMandatory: true,\n        cssClasses: [\n          'd-inline-block',\n          'col-md-2',\n          'align-top',\n          'bb-schedule__end-type',\n        ],\n        defaultValue: ScheduleEndType.NEVER,\n        options: [\n          {\n            label: $localize`:@@internal-config.never-end-type-label:Never`,\n            value: ScheduleEndType.NEVER,\n          },\n          {\n            label: $localize`:@@internal-config.on-date-end-type-label:On date`,\n            value: ScheduleEndType.ON,\n          },\n          {\n            label: $localize`:@@internal-config.after-end-type-label:After`,\n            value: ScheduleEndType.AFTER,\n          },\n        ],\n        dependants: [ScheduleFields.endDate, ScheduleFields.repeat],\n        activateDependantsOn: scheduleEndTypeToggleDependants,\n      },\n      hooks: {\n        onInit: internalTransferEndTypeOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.endDate,\n      options: {\n        cssClasses: [\n          'd-inline-block',\n          'col-md-10',\n          'align-top',\n          'bb-schedule__end-date',\n        ],\n        validators: [endDateAfterStartDateValidator as ValidatorFn],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@internal-config.end-date-required-message:End date is required`,\n          },\n          {\n            name: 'lessThanStartDate',\n            message: $localize`:@@internal-config.end-date-less-start-date-message:End date cannot be before start date`,\n          },\n        ],\n        isConditionalMandatory: true,\n      },\n      hooks: {\n        onInit: scheduleEndDateOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.number,\n      name: ScheduleFields.repeat,\n      options: {\n        isConditionalMandatory: true,\n        description: $localize`:@@internal-config.ocurrences-description:occurrences`,\n        min: 2,\n        max: 200,\n        defaultValue: 2,\n        validators: [minValueTwoValidator, maxValueTwoHundredValidator],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@internal-config.ocurrences-required-message:Value is required`,\n          },\n          {\n            name: 'min',\n            message: $localize`:@@internal-config.min-ocurrences-message:Value is below the minimum allowed occurrences (2)`,\n          },\n          {\n            name: 'max',\n            message: $localize`:@@internal-config.max-ocurrences-message:Value exceeds maximum allowed occurances (200)`,\n          },\n        ],\n        cssClasses: [\n          'd-inline-block',\n          'col-md-9',\n          'align-top',\n          'px-0',\n          'bb-schedule__repeat',\n        ],\n      },\n      hooks: {\n        onInit: internalTransferRepeatOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.scheduleSwitch,\n      name: ScheduleFields.frequencySwitch,\n      hidden: true,\n      options: {\n        cssClasses: ['col-12', 'mb-0', 'mt-4'],\n        label: $localize`:@@internal-config.auto-payments-label:Automatic monthly payments`,\n        tooltipMessage: $localize`:@@internal-config.auto-payments-tooltip-message:The amount selected will be automatically paid every month. This amount may change over time.`,\n        description: $localize`:@@internal-config.auto-payments-description:If the execution date falls on a weekend or holiday, we’ll make the payment on the previous business day.`,\n        values: {\n          on: Frequencies.MONTHLY,\n          off: Frequencies.ONCE,\n        },\n        defaultValue: false,\n      },\n    },\n  ],\n};\n\nexport const INTERNAL_TRANSFER: PaymentTypeConfig = {\n  fields: [initiator, counterParty, remittanceInfo, schedule],\n  name: $localize`:@@internal-config.name:Internal Transfer`,\n  paymentType: 'INTERNAL_TRANSFER',\n  businessFunction: 'A2A Transfer',\n  options: {\n    paymentTypes: {\n      internal: 'INTERNAL_TRANSFER',\n      external: 'EXTERNAL_A2A',\n    },\n    disabledCombinations: [\n      { from: ProductKinds.loanAccount, to: ProductKinds.loanAccount },\n      { from: ProductKinds.creditCard, to: ProductKinds.creditCard },\n    ],\n  },\n  hooks: {\n    onDestroy: internalTransferOnDestroyHook,\n  },\n};\n","import '@angular/localize/init';\nimport { Validators } from '@angular/forms';\nimport {\n  PaymentTypeConfig,\n  PaymentFormGroup,\n  PaymentComponents,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  CounterPartyFields,\n  RemittanceInfoFields,\n  InitiatorFields,\n} from '../models/form-item-names.model';\n\nimport { routingTransitNumberValidator } from '../../ui/helpers/form-validation';\nimport { defaultScheduleConfig as schedule } from './default-config';\n\nexport const initiator: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  title: $localize`:@@ach-config.initiator-title:From account`,\n  fields: [\n    {\n      type: PaymentComponents.debitAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        placeholder: $localize`:@@ach-config.initiator-placeholder:Select an account`,\n        cssClasses: ['col-12'],\n        validationMessages: [\n          {\n            message: $localize`:@@ach-config.invalid-account-message:Debit account is invalid`,\n            name: 'missingInList',\n          },\n          {\n            message: $localize`:@@ach-config.closed-permission-error-message:You can not do payments to new beneficiary from this account.`,\n            name: 'hasOnlyClosedPaymentPermission',\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@ach-config.beneficiary.header-label:Transfer to`,\n        hasDynamicTitle: true,\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        placeholder: $localize`:@@ach-config.beneficiary-selector-placeholder:Enter beneficiary's name or account`,\n        cssClasses: ['col-12'],\n        saveNewContactLabel: $localize`:@@ach-config.new-contact-label:Save as a new contact`,\n        label: $localize`:@@ach-config.beneficiary-selector-label:Beneficiary name`,\n        dropdownIcon: 'perm-contact-calendar',\n        dependants: [\n          CounterPartyFields.accountNumber,\n          CounterPartyFields.accountType,\n          CounterPartyFields.creditorBank,\n          CounterPartyFields.standardEntryClass,\n          CounterPartyFields.recipientId,\n        ],\n        validationMessages: [\n          {\n            message: $localize`:@@ach-config.same-accounts-selected-error-message:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@ach-config.beneficiary.account-number-label:Account number`,\n        maxLength: 34,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n      },\n    },\n    {\n      name: CounterPartyFields.accountType,\n      type: PaymentComponents.select,\n      options: {\n        label: $localize`:@@ach-config.beneficiary.account-type-label:Account type`,\n        validators: [Validators.required],\n        options: [\n          {\n            label: $localize`:@@ach-config.beneficiary.savings-account-label:Savings`,\n            value: 'SAVINGS',\n          },\n          {\n            label: $localize`:@@ach-config.beneficiary.checking-account-label:Checking`,\n            value: 'CHECKING',\n          },\n        ],\n        placeholder: $localize`:@@ach-config.beneficiary-account-type-placeholder:Select an account type`,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.bankBranchCode,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@ach-config.branch-code-label:Routing transit number (ABA)`,\n            maxLength: 9,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n            validators: [Validators.required, routingTransitNumberValidator],\n          },\n        },\n        {\n          name: CounterPartyFields.standardEntryClass,\n          type: PaymentComponents.select,\n          options: {\n            label: $localize`:@@ach-config.entry-class-label:Standard entry class (SEC)`,\n            validators: [Validators.required],\n            placeholder: $localize`:@@ach-config.entry-class-placeholder:Select SEC type`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n            mapToField: PaymentBaseFields.counterparty,\n            options: [\n              {\n                label: $localize`:@@ach-config.ppd-class-label:Personal (PPD)`,\n                value: 'PPD',\n              },\n              {\n                label: $localize`:@@ach-config.ccd-class-label:Business (CCD)`,\n                value: 'CCD',\n              },\n            ],\n          },\n        },\n      ],\n    },\n    {\n      name: CounterPartyFields.recipientId,\n      type: PaymentComponents.text,\n      options: {\n        label: $localize`:@@ach-config.recipient-id-label:Recipient ID`,\n        helperText: $localize`:@@ach-config.recipient-id-helper-text: (optional)`,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        maxLength: 15,\n        showCharCounter: true,\n      },\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  title: $localize`:@@ach-config.remittance-info-title:Payment details`,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@ach-config.amount-label:Amount`,\n        currencies: ['USD'],\n        cssClasses: ['col-md-8'],\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: $localize`:@@ach-config.invalid-amount-message:Amount is required`,\n          },\n        ],\n      },\n    },\n    {\n      type: PaymentComponents.checkbox,\n      name: RemittanceInfoFields.urgent,\n      options: {\n        label: $localize`:@@ach-config.urgent-payment-label:This payment is urgent`,\n        cssClasses: ['col-md-8'],\n        hideInWizardMode: true,\n      },\n    },\n    {\n      name: RemittanceInfoFields.paymentReference,\n      type: PaymentComponents.text,\n      options: {\n        label: $localize`:@@ach-config.reference-label:Payment reference`,\n        helperText: $localize`:@@ach-config.reference-placeholder: (optional)`,\n        showCharCounter: true,\n        maxLength: 35,\n        cssClasses: ['d-inline-block', 'col-md-8'],\n      },\n    },\n  ],\n};\n\nexport const US_ACH_CREDIT: PaymentTypeConfig = {\n  fields: [initiator, remittanceInfo, counterParty, schedule],\n  name: $localize`:@@ach-config.name:ACH Transfer`,\n  businessFunction: 'ACH Credit Transfer',\n  paymentType: 'ACH_CREDIT',\n};\n","import '@angular/localize/init';\nimport { Validators } from '@angular/forms';\nimport { routingTransitNumberValidator } from '../../ui/helpers/form-validation';\nimport { US_States } from '../constants';\nimport {\n  CounterPartyFields,\n  InitiatorFields,\n  RemittanceInfoFields,\n  PaymentBaseFields,\n} from '../models/form-item-names.model';\nimport {\n  PaymentComponents,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n} from '../models/form-items.model';\nimport { defaultScheduleConfig as schedule } from './default-config';\n\nconst countriesList = [\n  {\n    label: 'United States',\n    value: 'US',\n  },\n];\n\nconst initiator: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  title: $localize`:@@wire-config.initiator-title:From account`,\n  fields: [\n    {\n      type: PaymentComponents.debitAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        placeholder: $localize`:@@wire-config.initiator-placeholder:Select an account`,\n        cssClasses: ['col-12', 'mb-0'],\n        validationMessages: [\n          {\n            message: $localize`:@@wire-config.invalid-account-message:Debit account is invalid`,\n            name: 'missingInList',\n          },\n          {\n            message: $localize`:@@wire-config.closed-permission-error-message:You can not do payments to new beneficiary from this account.`,\n            name: 'hasOnlyClosedPaymentPermission',\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@wire-config.beneficiary.header-label:Transfer to`,\n        hasDynamicTitle: true,\n        clearOptions: {\n          onClear: () => {\n            console.log('clear');\n          },\n        },\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        label: $localize`:@@wire-config.beneficiary-selector-label:Beneficiary name`,\n        placeholder: $localize`:@@wire-config.beneficiary-selector-placeholder:Select a beneficiary`,\n        cssClasses: ['col-12'],\n        saveNewContactLabel: $localize`:@@wire-config.new-contact-label:Save as a new contact`,\n        isManualEditDisabled: true,\n        dependants: [\n          CounterPartyFields.accountNumber,\n          CounterPartyFields.bankBranchCode,\n          CounterPartyFields.postalAddress,\n          CounterPartyFields.creditorBank,\n          CounterPartyFields.correspondentBank,\n        ],\n        validationMessages: [\n          {\n            message: $localize`:@@wire-config.same-accounts-selected-error-message:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@wire-config.beneficiary.account-number-label:Account number`,\n        maxLength: 34,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n      },\n    },\n    {\n      name: CounterPartyFields.bankBranchCode,\n      type: PaymentComponents.text,\n      options: {\n        label: $localize`:@@wire-config.branch-code-label:Routing transit number (ABA)`,\n        maxLength: 9,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, routingTransitNumberValidator],\n        mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}`,\n      },\n    },\n    {\n      name: CounterPartyFields.postalAddress,\n      type: PaymentComponents.address,\n      options: {\n        addressType: 'beneficiary',\n        countries: countriesList,\n        states: US_States,\n        cssClasses: ['col-12'],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.bankName,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@wire-config.creditor-bank-name-label:Bank name`,\n            helperText: $localize`:@@wire-config.creditor-bank-name-placeholder: (optional)`,\n            maxLength: 140,\n            cssClasses: ['d-block', 'align-top', 'col-md-8'],\n          },\n        },\n        {\n          name: CounterPartyFields.postalAddress,\n          type: PaymentComponents.address,\n          options: {\n            addressType: 'beneficiary bank',\n            countries: countriesList,\n            states: US_States,\n            cssClasses: ['col-12'],\n          },\n        },\n      ],\n    },\n    {\n      name: CounterPartyFields.correspondentBank,\n      fields: [\n        {\n          name: CounterPartyFields.enableAdditionalBankDetails,\n          type: PaymentComponents.switch,\n          options: {\n            label: $localize`:@@wire-config.correspondent-bank-label:Transfer through correspondent bank`,\n            cssClasses: ['col-12', 'align-top'],\n            labelPosition: 'right',\n            dependants: [\n              CounterPartyFields.bankName,\n              CounterPartyFields.bankBranchCode,\n              CounterPartyFields.postalAddress,\n            ],\n            activateDependantsOn: true,\n          },\n        },\n        {\n          name: CounterPartyFields.bankBranchCode,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@wire-config.correspondent-bank-branch-code-label:Routing Transit Number (ABA)`,\n            maxLength: 9,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n            validators: [routingTransitNumberValidator],\n            isConditionalMandatory: true,\n          },\n        },\n        {\n          name: CounterPartyFields.bankName,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@wire-config.correspondent-bank-name-label:Bank name`,\n            maxLength: 140,\n            helperText: $localize`:@@wire-config.correspondent-bank-name-placeholder: (optional)`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n          },\n        },\n        {\n          name: CounterPartyFields.postalAddress,\n          type: PaymentComponents.address,\n          options: {\n            addressType: 'correspondent bank',\n            countries: countriesList,\n            states: US_States,\n            cssClasses: ['mb-0', 'col-12'],\n          },\n        },\n      ],\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  title: $localize`:@@wire-config.remittance-info-title:Payment details`,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@wire-config.amount-label:Amount`,\n        cssClasses: ['col-md-8', 'large-label'],\n        currencies: ['USD'],\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: $localize`:@@wire-config.invalid-amount-message:Amount is required`,\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst additionalMessage: PaymentFormGroup = {\n  name: 'additionalMessage',\n  title: $localize`:@@wire-config.additional-message-title:Add message`,\n  collapsible: true,\n  fields: [\n    {\n      name: CounterPartyFields.remittanceInformation,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@wire-config.additional-message-label:Message to beneficiary`,\n        helperText: $localize`:@@wire-config.additional-message-helper-text: (optional)`,\n        placeholder: $localize`:@@wire-config.additional-message-placeholder:Type your message here`,\n        showCharCounter: true,\n        minLength: 0,\n        maxLength: 140,\n        rows: 3,\n        cols: 50,\n        cssClasses: ['col-12'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n    {\n      name: CounterPartyFields.messageToBank,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@wire-config.message-to-bank-label:Message to beneficiary bank`,\n        helperText: $localize`:@@wire-config.message-to-bank-helper-text: (optional)`,\n        placeholder: $localize`:@@wire-config.message-to-bank-placeholder:Type your message here`,\n        showCharCounter: true,\n        minLength: 0,\n        rows: 3,\n        maxLength: 140,\n        cols: 50,\n        cssClasses: ['col-12'],\n        mapToField: `${PaymentBaseFields.counterparty}`,\n      },\n    },\n  ],\n};\n\nexport const US_DOMESTIC_WIRE: PaymentTypeConfig = {\n  fields: [\n    initiator,\n    remittanceInfo,\n    counterParty,\n    schedule,\n    additionalMessage,\n  ],\n  name: $localize`:@@wire-config.name:Wire Transfer`,\n  paymentType: 'US_DOMESTIC_WIRE',\n  businessFunction: 'US Domestic Wire',\n  options: {\n    closedPaymentBusFns: ['US Domestic Wire - Intracompany'],\n  },\n};\n","import '@angular/localize/init';\nimport { Validators } from '@angular/forms';\nimport {\n  PaymentTypeConfig,\n  PaymentFormGroup,\n  PaymentComponents,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  CounterPartyFields,\n  RemittanceInfoFields,\n} from '../models/form-item-names.model';\nimport {\n  defaultInitiatorConfig as initiator,\n  defaultScheduleConfig as schedule,\n} from './default-config';\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@chaps-config.beneficiary.header-label:To`,\n        hasDynamicTitle: true,\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        placeholder: $localize`:@@chaps-config.beneficiary-selector-placeholder:Select a beneficiary`,\n        saveNewContactLabel: $localize`:@@chaps-config.new-contact-label:Save as a new contact`,\n        cssClasses: ['col-12'],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@chaps-config.beneficiary.account-number-label:Account number`,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.bankBranchCode,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@chaps-config.sort-code-label:Sort code`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n            validators: [Validators.required],\n          },\n        },\n      ],\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  title: $localize`:@@chaps-config.remittance-info-title:Payment details`,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@chaps-config.amount-label:Amount`,\n        currencies: ['GBP'],\n        cssClasses: ['col-12'],\n      },\n    },\n  ],\n};\n\nconst paymentInformation = {\n  name: 'paymentInformation',\n  title: $localize`:@@chaps-config.information-title:Payment information`,\n  fields: [\n    {\n      name: CounterPartyFields.remittanceInformation,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@chaps-config.remittance-info-label:Description`,\n        placeholder: $localize`:@@chaps-config.remittance-info-placeholder:Enter payment description`,\n        showCharCounter: true,\n        minLength: 0,\n        rows: 3,\n        maxLength: 140,\n        cols: 50,\n        cssClasses: ['d-inline-block', 'col-12'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n  ],\n};\n\nexport const CHAPS: PaymentTypeConfig = {\n  fields: [\n    initiator,\n    remittanceInfo,\n    counterParty,\n    paymentInformation,\n    schedule,\n  ],\n  name: $localize`:@@chaps-config.name:CHAPS Transfer`,\n  paymentType: 'CHAPS',\n  businessFunction: 'UK CHAPS',\n  relatedPaymentTypes: ['FASTER_PAYMENT'],\n};\n","import '@angular/localize/init';\nimport { Validators } from '@angular/forms';\nimport {\n  PaymentTypeConfig,\n  PaymentFormGroup,\n  PaymentComponents,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  CounterPartyFields,\n  RemittanceInfoFields,\n} from '../models/form-item-names.model';\nimport {\n  defaultInitiatorConfig as initiator,\n  defaultScheduleConfig as schedule,\n} from './default-config';\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@fps-config.beneficiary.header-label:To`,\n        hasDynamicTitle: true,\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        placeholder: $localize`:@@fps-config.beneficiary-selector-placeholder:Select a beneficiary`,\n        saveNewContactLabel: $localize`:@@fps-config.new-contact-label:Save as a new contact`,\n        cssClasses: ['col-12'],\n        validationMessages: [\n          {\n            message: $localize`:@@fps-config.same-accounts-selected-error-message:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@fps-config.beneficiary.account-number-label:Account number`,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.bankBranchCode,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@fps-config.sort-code-label:Sort code`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n            validators: [Validators.required],\n          },\n        },\n      ],\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  title: $localize`:@@fps-config.remittance-info-title:Payment details`,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@fps-config.amount-label:Amount`,\n        currencies: ['GBP'],\n        cssClasses: ['col-md-8'],\n      },\n    },\n  ],\n};\n\nconst paymentInformation = {\n  name: 'paymentInformation',\n  title: $localize`:@@fps-config.information-title:Payment information`,\n  fields: [\n    {\n      name: CounterPartyFields.remittanceInformation,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@fps-config.remittance-info-label:Description`,\n        placeholder: $localize`:@@fps-config.remittance-info-placeholder:Enter payment description`,\n        showCharCounter: true,\n        minLength: 0,\n        rows: 3,\n        maxLength: 140,\n        cols: 50,\n        cssClasses: ['d-inline-block', 'col-12'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n  ],\n};\n\nexport const UK_FASTER_PAYMENT: PaymentTypeConfig = {\n  fields: [\n    initiator,\n    remittanceInfo,\n    counterParty,\n    paymentInformation,\n    schedule,\n  ],\n  name: $localize`:@@fps-config.name:UK Faster Payment`,\n  paymentType: 'FASTER_PAYMENT',\n  businessFunction: 'UK Faster Payments',\n};\n","import '@angular/localize/init';\nimport { AbstractControl, Validators } from '@angular/forms';\nimport {\n  PaymentComponents,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n} from '../models/form-items.model';\nimport {\n  CounterPartyFields,\n  InitiatorFields,\n  PaymentBaseFields,\n  RemittanceInfoFields,\n  PaymentOptionFields,\n} from '../models/form-item-names.model';\nimport { defaultScheduleConfig as schedule } from './default-config';\n\nimport { BeneficiaryList } from '../../ui/constants';\nimport { bicCodeValidationPattern } from '../constants';\n\nconst countriesList = [\n  {\n    label: $localize`:@@international-config.us-country-label:United States`,\n    value: 'US',\n  },\n  {\n    label: $localize`:@@international-config.au-country-label:Australia`,\n    value: 'AU',\n  },\n  {\n    label: $localize`:@@international-config.ca-country-label:Canada`,\n    value: 'CA',\n  },\n  {\n    label: $localize`:@@international-config.ie-country-label:Ireland`,\n    value: 'IE',\n  },\n  {\n    label: $localize`:@@international-config.nl-country-label:Netherlands`,\n    value: 'NL',\n  },\n  {\n    label: $localize`:@@international-config.nz-country-label:New Zealand`,\n    value: 'NZ',\n  },\n  {\n    label: $localize`:@@international-config.gb-country-label:United Kingdom`,\n    value: 'GB',\n  },\n];\n\nconst initiator: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  title: $localize`:@@international-config.initiator-label:From account`,\n  fields: [\n    {\n      type: PaymentComponents.debitAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'mb-0'],\n        validationMessages: [\n          {\n            message: $localize`:@@international-config.account-missing-error-message:Debit account is invalid`,\n            name: 'missingInList',\n          },\n          {\n            message: $localize`:@@international-config.closed-permission-error-message:You can not do payments to new beneficiary from this account.`,\n            name: 'hasOnlyClosedPaymentPermission',\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst toggleBankID = (value: string, control?: AbstractControl) => {\n  const parentGroup = control && control.parent ? control.parent : null;\n  const enableAdditionalBankDetails =\n    parentGroup && parentGroup.get('enableAdditionalBankDetails');\n  switch (value) {\n    case 'BIC':\n      return enableAdditionalBankDetails && enableAdditionalBankDetails.value\n        ? [CounterPartyFields.bic]\n        : [];\n    case 'BRANCH_CODE':\n      return [CounterPartyFields.bankBranchCode];\n  }\n  return [];\n};\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@international-config.beneficiary.header-label:Transfer to`,\n        hasDynamicTitle: true,\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        label: $localize`:@@international-config.beneficiary-selector-label:Beneficiary name`,\n        placeholder: $localize`:@@international-config.beneficiary-selector-placeholder:Select a beneficiary`,\n        cssClasses: ['col-12', 'mb-0'],\n        saveNewContactLabel: 'Save as a new contact',\n        validationMessages: [\n          {\n            message: $localize`:@@international-config.new-contact-label:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n        dependants: [\n          CounterPartyFields.bic,\n          CounterPartyFields.country,\n          CounterPartyFields.creditorBank,\n          CounterPartyFields.accountNumber,\n          CounterPartyFields.postalAddress,\n          CounterPartyFields.bankBranchCode,\n          CounterPartyFields.intermediaryBank,\n          CounterPartyFields.correspondentBank,\n        ],\n        tabs: [BeneficiaryList.CONTACTS],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.postalAddress,\n          fields: [\n            {\n              name: CounterPartyFields.country,\n              type: PaymentComponents.sanctionedCountrySelector,\n              options: {\n                label: $localize`:@@international-config.sanctioned-country-label:Country`,\n                placeholder: '- select country -',\n                cssClasses: [\n                  'd-inline-block',\n                  'col-md-6',\n                  'align-top',\n                  'pr-md-3',\n                ],\n                validators: [Validators.required],\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@international-config.beneficiary.account-number-label:Account number or IBAN`,\n        maxLength: 36,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],\n        validationMessages: [\n          {\n            message: $localize`:@@international-config.iban-country-error-message:Invalid IBAN`,\n            name: 'invalidIbanCountry',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.bankBranchCode,\n          type: PaymentComponents.text,\n          options: {\n            validators: [Validators.required],\n            label: $localize`:@@international-config.bank-code-label:Bank code`,\n            maxLength: 20,\n            mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],\n          },\n        },\n      ],\n    },\n    {\n      name: CounterPartyFields.postalAddress,\n      type: PaymentComponents.address,\n      options: {\n        addressType: 'beneficiary',\n        countries: countriesList,\n        useSanctionedCountries: true,\n        cssClasses: ['col-12'],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.bic,\n          type: PaymentComponents.text,\n          options: {\n            validators: [\n              Validators.required,\n              Validators.pattern(bicCodeValidationPattern),\n            ],\n            label: $localize`:@@international-config.creditor-bank-bic-label:SWIFT/BIC`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],\n          },\n        },\n        {\n          name: CounterPartyFields.bankName,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@international-config.creditor-bank-name-label:Bank name`,\n            helperText: $localize`:@@international-config.bank-name-helper-text: (optional)`,\n            maxLength: 140,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],\n          },\n        },\n        {\n          name: CounterPartyFields.postalAddress,\n          type: PaymentComponents.address,\n          options: {\n            addressType: 'beneficiary bank',\n            countries: countriesList,\n            cssClasses: ['col-12'],\n            hideCountry: true,\n          },\n        },\n      ],\n    },\n    {\n      name: CounterPartyFields.correspondentBank,\n      cssClasses: ['card--highlight', 'p-3', 'm-3', 'rounded'],\n      fields: [\n        {\n          name: CounterPartyFields.enableAdditionalBankDetails,\n          type: PaymentComponents.switch,\n          options: {\n            label: $localize`:@@international-config.correspondent-bank-label:Transfer through correspondent bank`,\n            cssClasses: ['col-12', 'mb-0'],\n            labelPosition: 'right',\n            dependants: [\n              'selectAdditionalBankCodeType',\n              CounterPartyFields.bic,\n              CounterPartyFields.bankName,\n              CounterPartyFields.postalAddress,\n            ],\n            activateDependantsOn: true,\n          },\n        },\n        {\n          name: 'selectAdditionalBankCodeType',\n          type: PaymentComponents.radio,\n          options: {\n            label: $localize`:@@international-config.additional-correspondent-bank-code-label:Bank ID type`,\n            isConditionalMandatory: true,\n            cssClasses: ['col-12', 'mb-0', 'mt-3'],\n            horizontal: true,\n            options: [\n              {\n                label: $localize`:@@international-config.additional-correspondent-bank-swift-label:SWIFT/BIC`,\n                value: 'BIC',\n              },\n              {\n                label: $localize`:@@international-config.additional-correspondent-bank-sort-code-label:Sort code`,\n                value: 'BRANCH_CODE',\n              },\n            ],\n            defaultValue: 'BIC',\n            dependants: [\n              CounterPartyFields.bic,\n              CounterPartyFields.bankBranchCode,\n            ],\n            activateDependantsOn: toggleBankID,\n          },\n        },\n        {\n          name: CounterPartyFields.bic,\n          type: PaymentComponents.text,\n          options: {\n            isConditionalMandatory: true,\n            validators: [Validators.pattern(bicCodeValidationPattern)],\n            label: $localize`:@@international-config.correspondent-bank-bic-label:SWIFT/BIC`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n          },\n        },\n        {\n          name: CounterPartyFields.bankBranchCode,\n          type: PaymentComponents.text,\n          options: {\n            isConditionalMandatory: true,\n            label: $localize`:@@international-config.correspondent-bank-sort-code-label:Sort code`,\n            maxLength: 20,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n          },\n        },\n        {\n          name: CounterPartyFields.bankName,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@international-config.correspondent-bank-name:Bank name`,\n            maxLength: 140,\n            helperText: $localize`:@@international-config.correspondent-bank-name-helper-text: (optional)`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n          },\n        },\n        {\n          name: CounterPartyFields.postalAddress,\n          type: PaymentComponents.address,\n          options: {\n            addressType: 'correspondent bank',\n            useSanctionedCountries: true,\n            countries: countriesList,\n            cssClasses: ['mb-0'],\n          },\n        },\n      ],\n    },\n    {\n      name: CounterPartyFields.intermediaryBank,\n      cssClasses: ['card--highlight', 'p-3', 'm-3', 'rounded'],\n      fields: [\n        {\n          name: CounterPartyFields.enableAdditionalBankDetails,\n          type: PaymentComponents.switch,\n          options: {\n            label: $localize`:@@international-config.intermediary-bank-label:Transfer through intermediary bank`,\n            cssClasses: ['col-12', 'mb-0'],\n            labelPosition: 'right',\n            dependants: [\n              'selectAdditionalBankCodeType',\n              CounterPartyFields.bic,\n              CounterPartyFields.bankName,\n              CounterPartyFields.postalAddress,\n            ],\n            activateDependantsOn: true,\n          },\n        },\n        {\n          name: 'selectAdditionalBankCodeType',\n          type: PaymentComponents.radio,\n          options: {\n            label: $localize`:@@international-config.additional-intermediary-bank-code-label:Bank ID type`,\n            isConditionalMandatory: true,\n            cssClasses: ['col-12', 'mb-0', 'mt-3'],\n            horizontal: true,\n            options: [\n              {\n                label: $localize`:@@international-config.additional-intermediary-bank-swift-label:SWIFT/BIC`,\n                value: 'BIC',\n              },\n              {\n                label: $localize`:@@international-config.additional-intermediary-bank-sort-code-label:Sort code`,\n                value: 'BRANCH_CODE',\n              },\n            ],\n            defaultValue: 'BIC',\n            dependants: [\n              CounterPartyFields.bic,\n              CounterPartyFields.bankBranchCode,\n            ],\n            activateDependantsOn: toggleBankID,\n          },\n        },\n        {\n          name: CounterPartyFields.bic,\n          type: PaymentComponents.text,\n          options: {\n            isConditionalMandatory: true,\n            validators: [Validators.pattern(bicCodeValidationPattern)],\n            label: $localize`:@@international-config.intermediary-bank-bic-label:SWIFT/BIC`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n          },\n        },\n        {\n          name: CounterPartyFields.bankBranchCode,\n          type: PaymentComponents.text,\n          options: {\n            isConditionalMandatory: true,\n            label: $localize`:@@international-config.intermediary-bank-sort-code-label:Sort code`,\n            maxLength: 20,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n          },\n        },\n        {\n          name: CounterPartyFields.bankName,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@international-config.intermediary-bank-name:Bank name`,\n            maxLength: 140,\n            helperText: $localize`:@@international-config.intermediary-bank-name-helper-text: (optional)`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n          },\n        },\n        {\n          name: CounterPartyFields.postalAddress,\n          type: PaymentComponents.address,\n          options: {\n            addressType: 'intermediary bank',\n            useSanctionedCountries: true,\n            countries: countriesList,\n            cssClasses: ['mb-0'],\n          },\n        },\n      ],\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  title: $localize`:@@international-config.remittance-info-title:Payment details`,\n  fields: [\n    {\n      type: PaymentComponents.sanctionedCurrencyAmount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@international-config.amount-label:Amount`,\n        cssClasses: ['col-12'],\n        validationMessages: [\n          {\n            message: $localize`:@@international-config.invalid-amount-message:Enter amount`,\n            name: 'invalidAmount',\n          },\n          {\n            message: $localize`:@@international-config.invalid-currency-message:Selected country does not allow payments in this currency`,\n            name: 'invalidCurrency',\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst additionalMessage: PaymentFormGroup = {\n  name: 'additionalMessage',\n  title: $localize`:@@international-config.information-title:Payment information`,\n  fields: [\n    {\n      name: CounterPartyFields.remittanceInformation,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@international-config.remittance-info-label:Message to beneficiary`,\n        placeholder: $localize`:@@international-config.remittance-info-placeholder:Type your message here`,\n        showCharCounter: true,\n        collapseOptions: {\n          label: $localize`:@@international-config.collapsed.remittance-info-label:Add message to beneficiary`,\n        },\n        minLength: 0,\n        rows: 3,\n        maxLength: 140,\n        cols: 50,\n        cssClasses: ['d-block', 'col-md-8'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n    {\n      name: RemittanceInfoFields.purposeOfPayment,\n      type: PaymentComponents.purposeOfPayment,\n      options: {\n        label: $localize`:@@international-config.purpose-payment-label:Purpose of payment`,\n        helperText: $localize`:@@international-config.purpose-payment-helper-text: (optional)`,\n        showCharCounter: true,\n        collapseOptions: {\n          label: $localize`:@@international-config.purpose-collapsed-label:Add purpose of payment`,\n        },\n        maxLength: 35,\n        cssClasses: ['d-block', 'col-md-8'],\n        mapToField: PaymentBaseFields.remittanceInfo,\n      },\n    },\n  ],\n};\n\nconst paymentOptions = [\n  {\n    name: PaymentOptionFields.selectPaymentOption,\n    type: PaymentComponents.selectPaymentOption,\n    options: {\n      skipDefaultValue: true,\n    },\n  },\n  {\n    name: PaymentOptionFields.chargeBearer,\n    type: PaymentComponents.chargeBearer,\n    options: {\n      label: $localize`:@@international-config.charge-bearer-label:How fees are paid`,\n    },\n  },\n  {\n    name: PaymentOptionFields.paymentCost,\n    type: PaymentComponents.paymentCost,\n    options: {},\n  },\n];\n\nexport const INTERNATIONAL_TRANSFER: PaymentTypeConfig = {\n  fields: [\n    initiator,\n    remittanceInfo,\n    counterParty,\n    additionalMessage,\n    schedule,\n    ...paymentOptions,\n  ],\n  name: $localize`:@@international-config.name:International Transfer`,\n  businessFunction: 'US Foreign Wire',\n  paymentType: 'INTERNATIONAL_TRANSFER',\n};\n","import '@angular/localize/init';\nimport {\n  PaymentTypeConfig,\n  PaymentFormGroup,\n  PaymentComponents,\n  ContactScheme,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  InitiatorFields,\n  RemittanceInfoFields,\n  ScheduleFields,\n  CounterPartyFields,\n} from '../models/form-item-names.model';\n\nimport { Frequencies, ScheduleEndType } from '../../ui/constants/constants';\nimport {\n  scheduleFrequencyToggleDependants,\n  scheduleStartDateOnDestroyHook,\n  scheduleEndTypeToggleDependants,\n  scheduleEndDateOnInitHook,\n  internalTransferOnDestroyHook,\n  internalTransferScheduleAlertOnInitHook,\n  internalTransScheduleStartDateOnInitHook,\n  intrabankCheckboxOnInitHook,\n} from '../helpers/schedule-config-helpers';\nimport {\n  endDateAfterStartDateValidator,\n  minValueTwoValidator,\n  maxValueTwoHundredValidator,\n  pastDateValidator,\n} from '../../ui/helpers/form-validation';\nimport { ValidatorFn, Validators } from '@angular/forms';\n\nconst initiator: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['px-3', 'mb-3'],\n        heading: $localize`:@@intrabank-config.initiator-label:From`,\n        headingType: 'h3',\n      },\n    },\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        placeholder: $localize`:@@intrabank-config.initiator-placeholder:Select an account`,\n        cssClasses: ['col-12', 'bb-block', 'bb-block--xl'],\n        preselect: true,\n      },\n    },\n  ],\n};\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['px-3', 'mb-3'],\n        heading: $localize`:@@intrabank-config.beneficiary-label:To`,\n        headingType: 'h3',\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.contactSelector,\n      options: {\n        label: $localize`:@@intrabank-config.beneficiary-contact-label:Recipient’s name`,\n        placeholder: $localize`:@@intrabank-config.beneficiary-contact-placeholder:Select contact or enter new`,\n        cssClasses: ['col-md-6'],\n        validators: [Validators.required],\n        mapItems: (contacts) =>\n          contacts.filter(({ accounts }) => !!accounts[0].accountNumber),\n        contactSchemes: [{ name: ContactScheme.accountNumber }],\n        validationMessages: [\n          {\n            message: $localize`:@@intrabank-config.beneficiary-invalid-name-message:Enter a valid name`,\n            name: 'pattern',\n          },\n          {\n            name: 'required',\n            message: $localize`:@@intrabank-config.beneficiary-required-name-message:Enter a recipient name`,\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@intrabank-config.beneficiary-account-number-label:Recipient’s account number`,\n        cssClasses: ['col-md-6', 'bb-block', 'bb-block--md'],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@intrabank-config.beneficiary-account-number-required-message:Enter an account number`,\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.saveNewContact,\n      type: PaymentComponents.checkbox,\n      options: {\n        cssClasses: ['col-md-6', 'bb-block', 'bb-block--lg'],\n        label: $localize`:@@intrabank-config.new-contact-label:Save to contacts`,\n      },\n      hooks: {\n        onInit: intrabankCheckboxOnInitHook,\n      },\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['col-12', 'pb-0', 'pt-2', 'bb-fieldset__heading'],\n        heading: 'Payment details',\n        headingType: 'h2',\n        headingClasses: ['mb-0'],\n        separatorLine: true,\n      },\n    },\n    {\n      type: PaymentComponents.compactAmount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@intrabank-config.amount-label:Amount`,\n        cssClasses: [\n          'bb-amount-input__field--large',\n          'bb-block',\n          'bb-block--lg',\n          'col-md-6',\n        ],\n        currency: 'USD',\n        autoDecimal: true,\n        keepValueOnHidden: true,\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: $localize`:@@intrabank-config.invalid-amount-message:Please add amount of this transfer`,\n          },\n        ],\n      },\n    },\n    {\n      type: PaymentComponents.textarea,\n      name: RemittanceInfoFields.description,\n      options: {\n        label: $localize`:@@intrabank-config.add-memo-label:Add memo`,\n        placeholder: $localize`:@@intrabank-config.add-memo-placeholder:Enter memo`,\n        showCharCounter: true,\n        minLength: 0,\n        rows: 2,\n        maxLength: 140,\n        helperText: $localize`:@@intrabank-config.add-memo-helper-text: (Optional)`,\n        cssClasses: ['col-md-6', 'bb-block', 'bb-block--lg'],\n      },\n    },\n  ],\n};\n\nconst schedule: PaymentFormGroup = {\n  name: PaymentBaseFields.schedule,\n  fields: [\n    {\n      type: PaymentComponents.scheduleHeader,\n      name: PaymentComponents.scheduleHeader,\n      options: {\n        cssClasses: ['pb-0', 'bb-schedule-header__relative-text'],\n        label: $localize`:@@intrabank-config.schedule-label:Schedule`,\n      },\n    },\n    {\n      type: PaymentComponents.alert,\n      name: PaymentComponents.alert,\n      hidden: true,\n      options: {\n        cssClasses: ['col-md-12'],\n        alerts: {\n          undue: {\n            title: $localize`:@@intrabank-config.undue-alert-label:A payment executed after the due date will incur a  late fee.`,\n            description: $localize`:@@intrabank-config.undue-alert-description:The due date is @@date. A payment made before may improve your credit score.`,\n            modifier: 'info',\n          },\n          overdue: {\n            title: $localize`:@@intrabank-config.overdue-alert-label:The due date has passed. This payment will incur a late fee.`,\n            description: $localize`:@@intrabank-config.overdue-alert-description:The due date was @@date. Late payments will decrease your credit score.`,\n            modifier: 'warning',\n          },\n        },\n      },\n      hooks: {\n        onInit: internalTransferScheduleAlertOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.startDate,\n      options: {\n        label: $localize`:@@intrabank-config.transfer-date-label:Transfer date`,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, pastDateValidator],\n        defaultValue: new Date().toISOString(),\n        validationMessages: [\n          {\n            name: 'pastDate',\n            message: $localize`:@@intrabank-config.past-date-error-message:Start date cannot be in the past`,\n          },\n        ],\n        description: $localize`:@@intrabank-config.transfer-date-description:You selected a date after the due date, this transfer will incur a late fee`,\n      },\n      hooks: {\n        onInit: internalTransScheduleStartDateOnInitHook,\n        onDestroy: scheduleStartDateOnDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: ScheduleFields.frequency,\n      options: {\n        label: $localize`:@@intrabank-config.frequency-label:Frequency`,\n        validators: [Validators.required],\n        options: [\n          {\n            label: $localize`:@@intrabank-config.once-frequency-label:Once`,\n            value: Frequencies.ONCE,\n          },\n          {\n            label: $localize`:@@intrabank-config.weekly-frequency-label:Weekly`,\n            value: Frequencies.WEEKLY,\n          },\n          {\n            label: $localize`:@@intrabank-config.biweekly-frequency-label:Biweekly`,\n            value: Frequencies.BIWEEKLY,\n          },\n          {\n            label: $localize`:@@intrabank-config.monthly-frequency-label:Monthly`,\n            value: Frequencies.MONTHLY,\n          },\n          {\n            label: $localize`:@@intrabank-config.quarterly-frequency-label:Quarterly`,\n            value: Frequencies.QUARTERLY,\n          },\n          {\n            label: $localize`:@@intrabank-config.annually-frequency-label:Annually`,\n            value: Frequencies.YEARLY,\n          },\n        ],\n        defaultValue: Frequencies.ONCE,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        dependants: [ScheduleFields.endType],\n        activateDependantsOn: scheduleFrequencyToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.radio,\n      name: ScheduleFields.endType,\n      options: {\n        label: $localize`:@@intrabank-config.end-type-label:End`,\n        preselect: true,\n        isConditionalMandatory: true,\n        cssClasses: ['d-inline-block', 'col-md-2', 'align-top'],\n        defaultValue: ScheduleEndType.NEVER,\n        options: [\n          {\n            label: $localize`:@@intrabank-config.never-end-type-label:Never`,\n            value: ScheduleEndType.NEVER,\n          },\n          {\n            label: $localize`:@@intrabank-config.after-end-type-label:After`,\n            value: ScheduleEndType.AFTER,\n          },\n        ],\n        dependants: [ScheduleFields.endDate, ScheduleFields.repeat],\n        activateDependantsOn: scheduleEndTypeToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.endDate,\n      options: {\n        cssClasses: [\n          'd-inline-block',\n          'col-md-10',\n          'align-top',\n          'bb-schedule__end-date',\n        ],\n        validators: [endDateAfterStartDateValidator as ValidatorFn],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@intrabank-config.end-date-required-message:End date is required`,\n          },\n          {\n            name: 'lessThanStartDate',\n            message: $localize`:@@intrabank-config.end-date-less-start-date-message:End date cannot be before start date`,\n          },\n        ],\n        isConditionalMandatory: true,\n      },\n      hooks: {\n        onInit: scheduleEndDateOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.number,\n      name: ScheduleFields.repeat,\n      options: {\n        isConditionalMandatory: true,\n        description: $localize`:@@intrabank-config.ocurrences-description:occurrences`,\n        min: 2,\n        max: 200,\n        defaultValue: 2,\n        validators: [minValueTwoValidator, maxValueTwoHundredValidator],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@intrabank-config.ocurrences-required-message:Value is required`,\n          },\n          {\n            name: 'min',\n            message: $localize`:@@intrabank-config.min-ocurrences-message:Value is below the minimum allowed occurrences (2)`,\n          },\n          {\n            name: 'max',\n            message: $localize`:@@intrabank-config.max-ocurrences-message:Value exceeds maximum allowed occurances (200)`,\n          },\n        ],\n        cssClasses: [\n          'd-inline-block',\n          'col-md-9',\n          'align-top',\n          'px-0',\n          'bb-schedule__repeat',\n          'bb-schedule__repeat--two-option',\n        ],\n      },\n    },\n  ],\n};\n\nexport const INTRABANK_TRANSFER: PaymentTypeConfig = {\n  fields: [initiator, counterParty, remittanceInfo, schedule],\n  name: $localize`:@@intrabank-config.name:Intrabank Transfer`,\n  paymentType: 'INTRABANK_TRANSFER',\n  businessFunction: 'A2A Transfer',\n  hooks: {\n    onDestroy: internalTransferOnDestroyHook,\n  },\n};\n","import '@angular/localize/init';\nimport {\n  PaymentTypeConfig,\n  PaymentComponents,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  CounterPartyFields,\n  RemittanceInfoFields,\n  InitiatorFields,\n  ScheduleFields,\n} from '../models/form-item-names.model';\nimport { ValidatorFn, Validators } from '@angular/forms';\nimport { Frequencies, ScheduleEndType } from '../../ui/constants/constants';\nimport {\n  scheduleEndDateOnInitHook,\n  scheduleEndTypeToggleDependants,\n  scheduleFrequencyToggleDependants,\n  scheduleStartDateOnDestroyHook,\n  scheduleStartDateOnInitHook,\n} from '../helpers/schedule-config-helpers';\nimport {\n  endDateAfterStartDateValidator,\n  maxValueTwoHundredValidator,\n  minValueTwoValidator,\n  pastDateValidator,\n} from '../../ui/helpers/form-validation';\n\nconst initiator = {\n  name: PaymentBaseFields.initiator,\n  fields: [\n    {\n      type: PaymentComponents.accountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: $localize`:@@internal-bus-config.initiator-label:From`,\n        placeholder: $localize`:@@internal-bus-config.initiator-placeholder:Select an account`,\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@internal-bus-config.initiator-required-error:Please select an account from the list to transfer from`,\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst counterparty = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      type: PaymentComponents.accountSelector,\n      name: CounterPartyFields.counterPartyAccountGroup,\n      options: {\n        label: $localize`:@@internal-bus-config.counterparty-label:To`,\n        placeholder: $localize`:@@internal-bus-config.counterparty-placeholder:Select an account`,\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@internal-bus-config.counterparty-required-err:Please select an account from the list to transfer to`,\n          },\n          {\n            message: $localize`:@@internal-bus-config.counterparty-same-acc-err:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst remittanceInfo = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@internal-bus-config.amount-label:Amount`,\n        currencies: ['USD'],\n        cssClasses: ['col-md-8', 'large-label'],\n      },\n    },\n    {\n      name: CounterPartyFields.remittanceInformation,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@internal-bus-config.remittance-Info-label:Description`,\n        showCharCounter: true,\n        minLength: 0,\n        rows: 3,\n        maxLength: 140,\n        cols: 50,\n        cssClasses: ['col-md-8'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n  ],\n};\n\nexport const schedule = {\n  name: PaymentBaseFields.schedule,\n  fields: [\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.startDate,\n      options: {\n        label: $localize`:@@internal-bus-config.start-date-label:Start on`,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, pastDateValidator],\n        defaultValue: new Date().toISOString(),\n        validationMessages: [\n          {\n            name: 'pastDate',\n            message: $localize`:@@internal-bus-config.start-date-past-err:Start date cannot be in the past`,\n          },\n        ],\n      },\n      hooks: {\n        onInit: scheduleStartDateOnInitHook,\n        onDestroy: scheduleStartDateOnDestroyHook,\n      },\n    },\n    {\n      name: ScheduleFields.frequency,\n      type: PaymentComponents.select,\n      options: {\n        label: 'Frequency',\n        validators: [Validators.required],\n        options: [\n          {\n            label: $localize`:@@internal-bus-config.freq-once-label:Once`,\n            value: Frequencies.ONCE,\n          },\n          {\n            label: $localize`:@@internal-bus-config.freq-daily-label:Daily`,\n            value: Frequencies.DAILY,\n          },\n          {\n            label: $localize`:@@internal-bus-config.freq-weekly-label:Weekly`,\n            value: Frequencies.WEEKLY,\n          },\n          {\n            label: $localize`:@@internal-bus-config.freq-biweekly-label:Biweekly`,\n            value: Frequencies.BIWEEKLY,\n          },\n          {\n            label: $localize`:@@internal-bus-config.freq-monthly-label:Monthly`,\n            value: Frequencies.MONTHLY,\n          },\n          {\n            label: $localize`:@@internal-bus-config.freq-quarterly-label:Quarterly`,\n            value: Frequencies.QUARTERLY,\n          },\n          {\n            label: $localize`:@@internal-bus-config.freq-annually-label:Annually`,\n            value: Frequencies.YEARLY,\n          },\n        ],\n        defaultValue: Frequencies.ONCE,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        dependants: [ScheduleFields.endType],\n        activateDependantsOn: scheduleFrequencyToggleDependants,\n      },\n    },\n    {\n      name: ScheduleFields.endType,\n      type: PaymentComponents.radio,\n      options: {\n        label: 'End',\n        preselect: true,\n        isConditionalMandatory: true,\n        cssClasses: [\n          'd-inline-block',\n          'col-md-2',\n          'align-top',\n          'bb-schedule__end-type',\n        ],\n        defaultValue: ScheduleEndType.NEVER,\n        options: [\n          {\n            label: $localize`:@@internal-bus-config.end-date-type-never-label:Never`,\n            value: ScheduleEndType.NEVER,\n          },\n          {\n            label: $localize`:@@internal-bus-config.end-date-type-on-label:On date`,\n            value: ScheduleEndType.ON,\n          },\n          {\n            label: $localize`:@@internal-bus-config.end-date-type-after-label:After`,\n            value: ScheduleEndType.AFTER,\n          },\n        ],\n        dependants: [ScheduleFields.endDate, ScheduleFields.repeat],\n        activateDependantsOn: scheduleEndTypeToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.endDate,\n      options: {\n        cssClasses: [\n          'd-inline-block',\n          'col-md-10',\n          'align-top',\n          'bb-schedule__end-date',\n        ],\n        validators: [endDateAfterStartDateValidator as ValidatorFn],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@internal-bus-config.end-date-past-err:End date is required`,\n          },\n          {\n            name: 'lessThanStartDate',\n            message: $localize`:@@internal-bus-config.end-date--before-start-err:End date cannot be before start date`,\n          },\n        ],\n        isConditionalMandatory: true,\n      },\n      hooks: {\n        onInit: scheduleEndDateOnInitHook,\n      },\n    },\n    {\n      name: ScheduleFields.repeat,\n      type: PaymentComponents.number,\n      options: {\n        isConditionalMandatory: true,\n        description: $localize`:@@internal-bus-config.repeat-desc:times`,\n        min: 2,\n        max: 200,\n        defaultValue: 2,\n        validators: [minValueTwoValidator, maxValueTwoHundredValidator],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@internal-bus-config.repeat-required-err:Value is required`,\n          },\n          {\n            name: 'min',\n            message: $localize`:@@internal-bus-config.repeat-min-val-err:Value is below the minimum allowed occurrences (2)`,\n          },\n          {\n            name: 'max',\n            message: $localize`:@@internal-bus-config.repeat-max-val-err:Value exceeds maximum allowed occurances (200)`,\n          },\n        ],\n        cssClasses: [\n          'd-inline-block',\n          'col-md-9',\n          'align-top',\n          'px-0',\n          'bb-schedule__repeat',\n        ],\n      },\n    },\n  ],\n};\n\nexport const INTERNAL_TRANSFER_BUSINESS: PaymentTypeConfig = {\n  fields: [initiator, counterparty, remittanceInfo, schedule],\n  name: $localize`:@@internal-bus-config.name:Internal Transfer`,\n  businessFunction: 'A2A Transfer',\n  paymentType: 'INTERNAL_TRANSFER',\n};\n","import '@angular/localize/init';\nimport {\n  PaymentTypeConfig,\n  PaymentFormGroup,\n  PaymentComponents,\n  ContactScheme,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  InitiatorFields,\n  RemittanceInfoFields,\n  ScheduleFields,\n  CounterPartyFields,\n} from '../models/form-item-names.model';\n\nimport { Frequencies, ScheduleEndType } from '../../ui/constants/constants';\nimport {\n  scheduleFrequencyToggleDependants,\n  scheduleStartDateOnDestroyHook,\n  scheduleEndTypeToggleDependants,\n  scheduleEndDateOnInitHook,\n  internalTransferOnDestroyHook,\n  internalTransferScheduleAlertOnInitHook,\n  internalTransScheduleStartDateOnInitHook,\n  intrabankCheckboxOnInitHook,\n} from '../helpers/schedule-config-helpers';\nimport {\n  endDateAfterStartDateValidator,\n  minValueTwoValidator,\n  maxValueTwoHundredValidator,\n  pastDateValidator,\n} from '../../ui/helpers/form-validation';\nimport { ValidatorFn, Validators } from '@angular/forms';\nimport { P2PLimitErrorKeys } from '../constants';\n\nconst emailRegex =\n  /(^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)$/;\nconst phoneNumberRegex =\n  /(^(?:\\+?1[-. ]?)?\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$)$/;\nconst initiator: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['px-3', 'mb-3'],\n        heading: $localize`:@@p2p-config.initiator-label:From`,\n        headingType: 'h3',\n      },\n    },\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        placeholder: $localize`:@@p2p-config.initiator-placeholder:Select an account`,\n        cssClasses: ['col-12', 'bb-block', 'bb-block--xl'],\n        preselect: true,\n      },\n    },\n  ],\n};\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['px-3', 'mb-3'],\n        heading: $localize`:@@p2p-config.beneficiary-label:To`,\n        headingType: 'h3',\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.contactSelector,\n      options: {\n        label: $localize`:@@p2p-config.beneficiary-contact-label:Name`,\n        placeholder: $localize`:@@p2p-config.beneficiary-contact-description:Select contact or enter new`,\n        cssClasses: ['col-md-6'],\n        validators: [Validators.required],\n        mapItems: (contacts) =>\n          contacts.filter(\n            ({ accounts }) => accounts[0]?.email || accounts[0]?.phoneNumber\n          ),\n        contactSchemes: [\n          { name: ContactScheme.email, regex: emailRegex },\n          { name: ContactScheme.phoneNumber, regex: phoneNumberRegex },\n        ],\n        validationMessages: [\n          {\n            message: $localize`:@@p2p-config.beneficiary-invalid-name-message:Enter a valid name`,\n            name: 'pattern',\n          },\n          {\n            name: 'required',\n            message: $localize`:@@p2p-config.beneficiary-required-name-message:Please select a contact or enter a new one manually`,\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [\n          Validators.required,\n          Validators.pattern(\n            new RegExp(phoneNumberRegex.source + '|' + emailRegex.source)\n          ),\n        ],\n        label: $localize`:@@p2p-config.beneficiary-account-number-label:Mobile Number or Email Address`,\n        cssClasses: ['col-md-6', 'bb-block', 'bb-block--md'],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@p2p-config.beneficiary-account-number-required-message:Please enter a valid mobile number or email address`,\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.saveNewContact,\n      type: PaymentComponents.checkbox,\n      options: {\n        cssClasses: ['col-md-6', 'bb-block', 'bb-block--lg'],\n        label: $localize`:@@p2p-config.new-contact-label:Save to contacts`,\n      },\n      hooks: {\n        onInit: intrabankCheckboxOnInitHook,\n      },\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['col-12', 'pb-0', 'pt-2', 'bb-fieldset__heading'],\n        heading: $localize`:@@p2p-config.remittance-info-heading:Payment details`,\n        headingType: 'h2',\n        headingClasses: ['mb-0'],\n        separatorLine: true,\n      },\n    },\n    {\n      type: PaymentComponents.compactAmount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@p2p-config.amount-label:Amount`,\n        cssClasses: [\n          'bb-amount-input__field--large',\n          'bb-block',\n          'bb-block--lg',\n          'col-md-6',\n        ],\n        currency: 'USD',\n        autoDecimal: true,\n        keepValueOnHidden: true,\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: $localize`:@@p2p-config.invalid-amount-message:Please add amount of this transfer`,\n          },\n          {\n            name: P2PLimitErrorKeys.minLimit,\n            message: $localize`:@@p2p-config.amount-limit-min:The amount can't be lower than #amount#. Please enter a higher amount.`,\n          },\n          {\n            name: P2PLimitErrorKeys.maxLimit,\n            message: $localize`:@@p2p-config.amount-limit-max:The amount can't exceed #amount#. Please enter a lower amount.`,\n          },\n        ],\n      },\n    },\n    {\n      type: PaymentComponents.textarea,\n      name: RemittanceInfoFields.description,\n      options: {\n        label: $localize`:@@p2p-config.add-memo-label:Add memo`,\n        placeholder: $localize`:@@p2p-config.add-memo-placeholder:Enter memo`,\n        showCharCounter: true,\n        minLength: 0,\n        rows: 2,\n        maxLength: 140,\n        helperText: $localize`:@@p2p-config.add-memo-helper-text: (Optional)`,\n        cssClasses: ['col-md-6', 'bb-block', 'bb-block--lg'],\n      },\n    },\n  ],\n};\n\nconst schedule: PaymentFormGroup = {\n  name: PaymentBaseFields.schedule,\n  fields: [\n    {\n      type: PaymentComponents.scheduleHeader,\n      name: PaymentComponents.scheduleHeader,\n      options: {\n        cssClasses: ['pb-0', 'bb-schedule-header__relative-text'],\n        label: $localize`:@@p2p-config.schedule-label:Schedule`,\n      },\n    },\n    {\n      type: PaymentComponents.alert,\n      name: PaymentComponents.alert,\n      hidden: true,\n      options: {\n        cssClasses: ['col-md-12'],\n        alerts: {\n          undue: {\n            title: $localize`:@@p2p-config.undue-alert-label:A payment executed after the due date will incur a  late fee.`,\n            description: $localize`:@@p2p-config.undue-alert-description:The due date is @@date. A payment made before may improve your credit score.`,\n            modifier: 'info',\n          },\n          overdue: {\n            title: $localize`:@@p2p-config.overdue-alert-label:The due date has passed. This payment will incur a late fee.`,\n            description: $localize`:@@p2p-config.overdue-alert-description:The due date was @@date. Late payments will decrease your credit score.`,\n            modifier: 'warning',\n          },\n        },\n      },\n      hooks: {\n        onInit: internalTransferScheduleAlertOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.startDate,\n      options: {\n        label: $localize`:@@p2p-config.transfer-date-label:Transfer date`,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, pastDateValidator],\n        defaultValue: new Date().toISOString(),\n        validationMessages: [\n          {\n            name: 'pastDate',\n            message: $localize`:@@p2p-config.past-date-error-message:Start date cannot be in the past`,\n          },\n        ],\n        description: $localize`:@@p2p-config.transfer-date-description:You selected a date after the due date, this transfer will incur a late fee`,\n      },\n      hooks: {\n        onInit: internalTransScheduleStartDateOnInitHook,\n        onDestroy: scheduleStartDateOnDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: ScheduleFields.frequency,\n      options: {\n        label: $localize`:@@p2p-config.frequency-label:Frequency`,\n        validators: [Validators.required],\n        options: [\n          {\n            label: $localize`:@@p2p-config.once-frequency-label:Once`,\n            value: Frequencies.ONCE,\n          },\n          {\n            label: $localize`:@@p2p-config.weekly-frequency-label:Weekly`,\n            value: Frequencies.WEEKLY,\n          },\n          {\n            label: $localize`:@@p2p-config.biweekly-frequency-label:Biweekly`,\n            value: Frequencies.BIWEEKLY,\n          },\n          {\n            label: $localize`:@@p2p-config.monthly-frequency-label:Monthly`,\n            value: Frequencies.MONTHLY,\n          },\n          {\n            label: $localize`:@@p2p-config.quarterly-frequency-label:Quarterly`,\n            value: Frequencies.QUARTERLY,\n          },\n          {\n            label: $localize`:@@p2p-config.annually-frequency-label:Annually`,\n            value: Frequencies.YEARLY,\n          },\n        ],\n        defaultValue: Frequencies.ONCE,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        dependants: [ScheduleFields.endType],\n        activateDependantsOn: scheduleFrequencyToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.radio,\n      name: ScheduleFields.endType,\n      options: {\n        label: $localize`:@@p2p-config.end-type-label:End`,\n        preselect: true,\n        isConditionalMandatory: true,\n        cssClasses: ['d-inline-block', 'col-md-2', 'align-top'],\n        defaultValue: ScheduleEndType.NEVER,\n        options: [\n          {\n            label: $localize`:@@p2p-config.never-end-type-label:Never`,\n            value: ScheduleEndType.NEVER,\n          },\n          {\n            label: $localize`:@@p2p-config.after-end-type-label:After`,\n            value: ScheduleEndType.AFTER,\n          },\n        ],\n        dependants: [ScheduleFields.endDate, ScheduleFields.repeat],\n        activateDependantsOn: scheduleEndTypeToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.endDate,\n      options: {\n        cssClasses: [\n          'd-inline-block',\n          'col-md-10',\n          'align-top',\n          'bb-schedule__end-date',\n        ],\n        validators: [endDateAfterStartDateValidator as ValidatorFn],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@p2p-config.end-date-required-message:End date is required`,\n          },\n          {\n            name: 'lessThanStartDate',\n            message: $localize`:@@p2p-config.end-date-less-start-date-message:End date cannot be before start date`,\n          },\n        ],\n        isConditionalMandatory: true,\n      },\n      hooks: {\n        onInit: scheduleEndDateOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.number,\n      name: ScheduleFields.repeat,\n      options: {\n        isConditionalMandatory: true,\n        description: $localize`:@@p2p-config.ocurrences-description:occurrences`,\n        min: 2,\n        max: 200,\n        defaultValue: 2,\n        validators: [minValueTwoValidator, maxValueTwoHundredValidator],\n        validationMessages: [\n          {\n            name: 'required',\n            message: $localize`:@@p2p-config.ocurrences-required-message:Value is required`,\n          },\n          {\n            name: 'min',\n            message: $localize`:@@p2p-config.min-ocurrences-message:Value is below the minimum allowed occurrences (2)`,\n          },\n          {\n            name: 'max',\n            message: $localize`:@@p2p-config.max-ocurrences-message:Value exceeds maximum allowed occurances (200)`,\n          },\n        ],\n        cssClasses: [\n          'd-inline-block',\n          'col-md-9',\n          'align-top',\n          'px-0',\n          'bb-schedule__repeat',\n          'bb-schedule__repeat--two-option',\n        ],\n      },\n    },\n  ],\n};\n\nexport const P2P_TRANSFER: PaymentTypeConfig = {\n  fields: [initiator, counterParty, remittanceInfo, schedule],\n  name: $localize`:@@p2p-config.name:P2P Transfer`,\n  paymentType: 'P2P_TRANSFER',\n  businessFunction: 'P2P Transfer',\n  hooks: {\n    onDestroy: internalTransferOnDestroyHook,\n  },\n};\n","import '@angular/localize/init';\nimport { Validators } from '@angular/forms';\nimport {\n  PaymentComponents,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n} from '../models/form-items.model';\nimport {\n  CounterPartyFields,\n  HiddenFields,\n  InitiatorFields,\n  PaymentBaseFields,\n  RemittanceInfoFields,\n} from '../models/form-item-names.model';\nimport { defaultScheduleConfig as schedule } from './default-config';\n\nimport { BeneficiaryList } from '../../ui/constants';\nimport { US_States } from '../constants';\nimport { routingTransitNumberValidator } from '../../ui/helpers/form-validation';\n\nconst initiator: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  title: $localize`:@@ach-debit-config.initiator-label:Transfer to`,\n  fields: [\n    {\n      type: PaymentComponents.accountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'mb-0'],\n        validationMessages: [\n          {\n            message: $localize`:@@ach-debit-config.account-missing-error-message:Account is invalid`,\n            name: 'missingInList',\n          },\n          {\n            message: $localize`:@@ach-debit-config.required-message:Please select an account`,\n            name: 'required',\n          },\n          {\n            message: $localize`:@@ach-debit-config.closed-permission-error-message:You can not do payments to new beneficiary from this account.`,\n            name: 'hasOnlyClosedPaymentPermission',\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst counterparty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@ach-debit-config.beneficiary.header-label:Collect from`,\n        hasDynamicTitle: true,\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        placeholder: $localize`:@@ach-debit-config.beneficiary-selector-placeholder:Select a client`,\n        cssClasses: ['col-12', 'mb-0'],\n        saveNewContactLabel: 'Save as a new contact',\n        validationMessages: [\n          {\n            message: $localize`:@@ach-debit-config.new-contact-label:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n        dependants: [\n          CounterPartyFields.creditorBank,\n          CounterPartyFields.accountNumber,\n          CounterPartyFields.postalAddress,\n          CounterPartyFields.bankBranchCode,\n        ],\n        tabs: [BeneficiaryList.CONTACTS],\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@ach-debit-config.beneficiary.account-number-label:Account number`,\n        maxLength: 36,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.bankBranchCode,\n          type: PaymentComponents.text,\n          options: {\n            validators: [Validators.required, routingTransitNumberValidator],\n            label: $localize`:@@ach-debit-config.bank-code-label:Routing transit number (ABA)`,\n            maxLength: 20,\n            mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}`,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],\n          },\n        },\n      ],\n    },\n    {\n      name: CounterPartyFields.postalAddress,\n      type: PaymentComponents.address,\n      options: {\n        addressType: 'client',\n        cssClasses: ['col-12'],\n        states: US_States,\n        countries: [\n          {\n            label: 'United States',\n            value: 'US',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.creditorBank,\n      fields: [\n        {\n          name: CounterPartyFields.bankName,\n          type: PaymentComponents.text,\n          options: {\n            label: $localize`:@@ach-debit-config.creditor-bank-name-label:Bank name`,\n            helperText: $localize`:@@ach-debit-config.bank-name-helper-text: (optional)`,\n            maxLength: 140,\n            cssClasses: ['d-inline-block', 'col-md-6', 'align-top', 'pr-md-3'],\n          },\n        },\n        {\n          name: CounterPartyFields.postalAddress,\n          type: PaymentComponents.address,\n          options: {\n            addressType: 'client bank',\n            cssClasses: ['col-12'],\n            states: US_States,\n            countries: [\n              {\n                label: 'United States',\n                value: 'US',\n              },\n            ],\n          },\n        },\n      ],\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: $localize`:@@ach-debit-config.amount-label:Amount`,\n        cssClasses: ['col-md-8', 'large-label', 'mt-4'],\n        currencies: ['USD'],\n        validationMessages: [\n          {\n            message: $localize`:@@ach-debit-config.invalid-amount-message:Enter amount`,\n            name: 'invalidAmount',\n          },\n        ],\n      },\n    },\n  ],\n};\n\nconst additionalMessage: PaymentFormGroup = {\n  name: 'additionalMessage',\n  fields: [\n    {\n      name: CounterPartyFields.mandateIdentifier,\n      type: PaymentComponents.text,\n      options: {\n        label: $localize`:@@ach-debit-config.mandate-identifier-label:Mandate identifier`,\n        placeholder: $localize`:@@ach-debit-config.mandate-identifier-placeholder:Enter mandate identifier`,\n        helperText: $localize`:@@ach-debit-config.mandate-identifier-helper-text: (optional)`,\n        minLength: 0,\n        maxLength: 35,\n        cssClasses: ['d-block', 'col-md-8'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n    {\n      name: CounterPartyFields.remittanceInformation,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@ach-debit-config.remittance-info-label:Message to client`,\n        helperText: $localize`:@@ach-debit-config.remittance-info-helper-text: (optional)`,\n        showCharCounter: true,\n        collapseOptions: {\n          label: $localize`:@@ach-debit-config.collapsed.remittance-info-label:Add message to client`,\n        },\n        minLength: 0,\n        rows: 3,\n        maxLength: 140,\n        cols: 50,\n        cssClasses: ['d-block', 'col-md-8'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n    {\n      name: CounterPartyFields.messageToBank,\n      type: PaymentComponents.textarea,\n      options: {\n        label: $localize`:@@ach-debit-config.message-to-bank-label:Message to client bank`,\n        helperText: $localize`:@@ach-debit-config.message-to-bank-helper-text: (optional)`,\n        showCharCounter: true,\n        collapseOptions: {\n          label: $localize`:@@ach-debit-config.message-to-bank-collapsed-label:Add message to client bank`,\n        },\n        maxLength: 140,\n        cssClasses: ['d-block', 'col-md-8'],\n        mapToField: PaymentBaseFields.counterparty,\n      },\n    },\n  ],\n};\n\nconst isDebitPayment = {\n  name: HiddenFields.isDebitPayment,\n  type: PaymentComponents.checkbox,\n  options: {\n    cssClasses: ['d-none'],\n    defaultValue: true,\n  },\n};\n\nexport const ACH_DEBIT: PaymentTypeConfig = {\n  fields: [\n    initiator,\n    remittanceInfo,\n    counterparty,\n    additionalMessage,\n    schedule,\n    isDebitPayment,\n  ],\n  name: $localize`:@@ach-debit-config.name:ACH Debit`,\n  businessFunction: 'ACH Debit',\n  paymentType: 'ACH_DEBIT',\n};\n","import {\n  MultipleFormGroup,\n  PaymentComponents,\n  StepperConfig,\n  MultipaymentHooksParams,\n  ManualBatchesConfig,\n  ManualBatchTypeConfig,\n  ProductKinds,\n} from '../models/form-items.model';\nimport {\n  PaymentBaseFields,\n  InitiatorFields,\n  StepperAction,\n} from '../models/form-item-names.model';\nimport { FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport {\n  accountsValidation,\n  amountGreaterThanZero,\n  minimumOneAccount,\n  noWhitespaceValidator,\n  pastDateValidator,\n} from '../../ui/helpers/form-validation';\n\nconst batchInfo: MultipleFormGroup = {\n  name: 'batchInfo',\n  title: 'Internal transfers',\n  subTitle: 'Add the main batch information',\n  fields: [\n    {\n      type: PaymentComponents.text,\n      name: 'name',\n      options: {\n        validators: [Validators.required, noWhitespaceValidator as ValidatorFn],\n        validationMessages: [\n          { message: 'Batch name is required', name: 'required' },\n        ],\n        label: 'Batch name',\n        showCharCounter: true,\n        maxLength: 25,\n        cssClasses: ['w-50'],\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: 'requestedExecutionDate',\n      options: {\n        validators: [pastDateValidator as ValidatorFn, Validators.required],\n        validationMessages: [\n          { message: 'Execution date cannot be in past', name: 'pastDate' },\n        ],\n        label: 'Execution date',\n        cssClasses: ['w-50'],\n      },\n    },\n  ],\n  stepName: 'batchInfo',\n};\n\nconst creditDebitSelection: MultipleFormGroup = {\n  name: 'creditDebitSelection',\n  fields: [\n    {\n      type: PaymentComponents.creditDebitSelector,\n      name: 'creditDebitIndicator',\n      options: {\n        label: 'Internal transfers',\n        choices: [\n          {\n            type: 'CREDIT',\n            name: 'Send',\n            description: 'Send funds to multiple own accounts',\n          },\n          // { type: 'DEBIT', name: 'Receive', description: 'Receive funds from multiple own accounts' },\n        ],\n      },\n    },\n  ],\n  stepName: 'transferDetails',\n};\n\nconst initiator: MultipleFormGroup = {\n  name: PaymentBaseFields.initiator,\n  cssClasses: ['bb-block', 'bb-block--xl'],\n  fields: [\n    {\n      type: PaymentComponents.multiPaymentAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: 'From',\n        placeholder: 'Select an account',\n        validators: [Validators.required],\n        validationMessages: [\n          { message: 'Account is required', name: 'required' },\n        ],\n        arrangements: {\n          privilege: 'create',\n          ignoredProductKindNames: [\n            ProductKinds.creditCard,\n            ProductKinds.debitCard,\n          ],\n        },\n        cssClasses: ['w-75'],\n        filterItems: false,\n        required: true,\n        showBankBranchCode: true,\n      },\n    },\n  ],\n  stepName: 'transferDetails',\n  separator: {\n    icon: { name: 'arrow-downward', color: 'dark' },\n  },\n};\n\nconst verifyOnBlur = (form: FormGroup) => {};\n\nconst payments: MultipleFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  cssClasses: ['bb-block', 'bb-block--xl'],\n  fields: [\n    {\n      type: PaymentComponents.multiPaymentCard,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: 'To',\n        helperText: 'You can add up to %s transfers',\n        validators: [minimumOneAccount as ValidatorFn],\n        maximumNumberOfPayments: 100,\n        validationMessages: [\n          { message: 'Minimum one transfer is required', name: 'empty' },\n        ],\n        arrangements: {\n          privilege: 'view',\n          ignoredProductKindNames: [\n            ProductKinds.creditCard,\n            ProductKinds.debitCard,\n            ProductKinds.loanAccount,\n          ],\n        },\n        fieldsConfig: {\n          counterpartyName: {\n            header: 'Own account',\n            validators: [\n              Validators.required,\n              accountsValidation(PaymentBaseFields.initiator),\n            ],\n            placeholder: 'Enter or select account',\n            dropdownIcon: '',\n            ariaLabel: '',\n            validationMessages: [\n              { message: 'Account is required', name: 'required' },\n              { message: 'Account is same as from', name: 'sameAccount' },\n            ],\n          },\n          amount: {\n            validators: [\n              Validators.required,\n              amountGreaterThanZero as ValidatorFn,\n            ],\n            placeholder: '0.00',\n            ariaLabel: '',\n            currency: 'USD',\n            maxLength: 10,\n            validationMessages: [\n              { message: 'Amount is required', name: 'required' },\n              { message: 'Amount is required', name: 'invalidAmount' },\n            ],\n          },\n          description: {\n            validators: [],\n            placeholder: 'Enter Description',\n            label: 'Add Description',\n            helperText: 'Optional',\n            title: 'Description',\n          },\n        },\n        hooks: {\n          onBlur: verifyOnBlur,\n        },\n      },\n    },\n  ],\n  stepName: 'transferDetails',\n};\n\n/**\n * @deprecated Use `INTRACOMPANY_PAYMENT_CREDIT_USA` from `@backbase/batch-common-ang`.\n * Will be removed in widget collection v.3.11.0\n */\nexport const BATCH_INTERNAL_TRANSFERS: ManualBatchTypeConfig = {\n  fields: [batchInfo, creditDebitSelection, initiator, payments],\n  name: 'Internal transfers',\n  description: 'Send funds to multiple own accounts',\n  paymentType: 'INTRACOMPANY_PAYMENT_CREDIT_USA',\n  resourceName: 'Batch',\n  businessFunction: 'Batch - Intracompany Payments',\n  customFields: {},\n  options: {},\n};\n\nexport const STEPPER_CONFIG: Array<StepperConfig> = [\n  {\n    stepName: 'batchInfo',\n    stepDisplayValue: 'Batch info',\n    cssClasses: ['card', 'card-body'],\n    isActive: true,\n    isChecked: false,\n    buttonClass: [],\n    buttonConfig: [\n      {\n        type: 'primary',\n        text: 'Next: Transfer details',\n        action: StepperAction.NEXT,\n        hooks: {\n          onClick: onClickEvent,\n        },\n      },\n    ],\n  },\n  {\n    stepName: 'transferDetails',\n    stepDisplayValue: 'Transfer details',\n    isActive: false,\n    isChecked: false,\n    cssClasses: ['pb-5', 'mb-5'],\n    buttonClass: ['py-4', 'fixed-bottom', 'bb-button-bar--sticky', 'px-sm-3'],\n    footerDetail: { totalAmount: true, totalCount: true },\n    buttonConfig: [\n      {\n        type: 'secondary',\n        text: 'Back',\n        action: StepperAction.BACK,\n      },\n      {\n        type: 'primary',\n        text: 'Next: Review',\n        action: StepperAction.NEXT,\n      },\n    ],\n  },\n  {\n    stepName: 'review',\n    stepDisplayValue: 'Review',\n    cssClasses: ['card', 'card-body', 'bb-block', 'bb-block--lg'],\n    isActive: false,\n    isChecked: false,\n    buttonClass: [],\n    buttonConfig: [\n      {\n        type: 'secondary',\n        text: 'Edit',\n        action: StepperAction.BACK,\n      },\n      {\n        type: 'primary',\n        text: 'Submit',\n        action: StepperAction.SUBMIT,\n      },\n    ],\n  },\n];\n\nexport function onClickEvent({\n  doneFn,\n  stepperConfig,\n  action,\n}: MultipaymentHooksParams) {\n  if (doneFn) {\n    doneFn(stepperConfig, action);\n  }\n}\n\n/**\n * @deprecated Use `MANUAL_BATCH` from `@backbase/batch-common-ang`.\n * Will be removed in widget collection v.3.11.0\n */\nexport const MULTIPLE_PAYMENT: ManualBatchesConfig = {\n  availableTypes: [BATCH_INTERNAL_TRANSFERS],\n  enableTypeSelection: ['batchInfo'],\n  steps: STEPPER_CONFIG,\n  options: {\n    successEventName: 'bb.event.batch.create.success',\n    createTemplates: true,\n  },\n};\n","import {\n  BulkPaymentOrdersApprovalPutResponse,\n  ErrorItem,\n  BulkPaymentOrdersApprovalPutResponsePaymentOrders,\n  PaymentOrderCancelPostResponse,\n  PaymentOrderGetResponse,\n  AccountIdentification,\n  Bank,\n  PaymentOrdersHttpService,\n  IdentifiedPaymentOrder,\n  InvolvedParty,\n  Schedule,\n  CounterpartyAccount,\n  OriginatorAccount,\n  PaymentForbiddenError,\n} from '@backbase/data-ang/payment-order';\nimport {\n  GetPaymentTemplatesRequestParams,\n  PaymentTemplate,\n} from '@backbase/data-ang/payment-template';\nimport {\n  AdditionalProperties,\n  ProductSummaryItem,\n} from '@backbase/data-ang/arrangements';\n\nimport { PaymentActionsTypes } from './payment-actions-types';\nimport { LoadMoreMethod, BatchOrderError } from '../constants/constants';\n\nexport { ContactsGetResponseBodyItem as ContactBase } from '@backbase/data-ang/contact-manager';\nimport {\n  ContactGetResponseBody,\n  ContactsGetResponseBodyItem,\n} from '@backbase/data-ang/contact-manager';\nimport { CreditDebitMixedIndicator as CreditDebitMixedIndicatorData } from '@backbase/data-ang/payment-batch';\nimport { BaseObject } from '../../configs/models/form-items.model';\nimport { SchemeName } from '@backbase/data-ang/stop-checks';\nexport {\n  BulkPaymentOrdersApprovalPutResponse,\n  IdentifiedPaymentOrder,\n  PaymentOrderGetResponse as PaymentOrderGET,\n  PaymentOrdersHttpService as PaymentOrdersService,\n  BulkPaymentOrdersApprovalPutResponsePaymentOrders,\n  PaymentOrderCancelPostResponse,\n  ErrorItem,\n  PaymentForbiddenError as BatchPaymentForbiddenError,\n};\n\nexport type ContactItem = ContactsGetResponseBodyItem;\nexport type PaymentModeType = 'SINGLE' | 'RECURRING' | 'ALL';\n\nexport interface BeneficiaryContactItem extends ContactItem {\n  accountName: string;\n}\n\nexport interface PaymentsResponse {\n  items: IdentifiedPaymentOrder[];\n  totalCount: number;\n}\n\nexport interface PaymentOrder extends IdentifiedPaymentOrder {\n  isPaymentCopy?: boolean;\n}\n\nexport interface LoadPaymentsParams {\n  status?: Array<\n    | 'ENTERED'\n    | 'READY'\n    | 'ACCEPTED'\n    | 'PROCESSED'\n    | 'REJECTED'\n    | 'CANCELLED'\n    | 'CANCELLATION_PENDING'\n  >;\n  query?: string;\n  amountFrom?: number;\n  amountTo?: number;\n  executionDate?: string;\n  executionDateFrom?: string;\n  executionDateTo?: string;\n  nextExecutionDate?: string;\n  nextExecutionDateFrom?: string;\n  nextExecutionDateTo?: string;\n  paymentMode?: PaymentModeType;\n  paymentSetupId?: string;\n  transferFrequency?:\n    | 'ONCE'\n    | 'DAILY'\n    | 'WEEKLY'\n    | 'BIWEEKLY'\n    | 'MONTHLY'\n    | 'QUARTERLY'\n    | 'YEARLY';\n  from?: number;\n  cursor?: string;\n  size?: number;\n  orderBy?: string;\n  direction?: 'ASC' | 'DESC';\n}\n\nexport interface PaymentActionsState {\n  type?: PaymentActionsTypes;\n  orderBy?: LoadPaymentsParams['orderBy'];\n  direction?: LoadPaymentsParams['direction'];\n  from?: number;\n  query?: string;\n  pageSize?: number;\n  paymentMode?: PaymentModeType;\n  isDebitMode?: boolean;\n}\n\nexport interface BatchState {\n  type?: string;\n  from?: number;\n  query?: string;\n  size?: number;\n  loadMoreMethod?: LoadMoreMethod;\n  id?: string;\n  mergeItems?: boolean;\n}\n\nexport interface BatchOrder {\n  id: string;\n  status: string;\n  name?: string;\n  type: string;\n  creditDebitMixedIndicator: CreditDebitMixedIndicatorData;\n  totalTransactionsCount?: number;\n  totalInstructedAmount?: Currency;\n  totalCreditTransactionsCount?: number;\n  totalCreditInstructedAmount?: Currency;\n  totalDebitTransactionsCount?: number;\n  totalDebitInstructedAmount?: Currency;\n  canDelete?: boolean;\n  canCancel?: boolean;\n  confidentialType?: string;\n  account?: {\n    name?: string;\n    identification?: {\n      identification: string;\n      schemeName: string;\n    };\n  };\n  requestedExecutionDate?: string;\n  fileName?: string;\n  userFullName?: string;\n  uploadCompletedAt?: string;\n  approval?: {\n    id: string;\n    userId: string;\n    userFullName?: string;\n    serviceAgreementId: string;\n    itemId: string;\n    dataAccessItemId?: string;\n    resource: string;\n    function: string;\n    status: any;\n    records?: Array<{\n      id: string;\n      userId: string;\n      userFullName?: string;\n      approvalTypeId: string;\n      status: any;\n      createdAt: string;\n    }>;\n    canApprove?: boolean;\n    canReject?: boolean;\n    finalApprover?: boolean;\n    action?: string;\n    createdAt: string;\n  };\n  companyId?: number | string;\n  companyName?: string;\n  bankBranchCode?: number | string;\n  entryClass?: string;\n  createdBy?: string;\n  createdAt?: string;\n}\n\nexport interface BatchResponse {\n  totalCount: number;\n  items: Array<any>;\n  batchOrder?: BatchOrder;\n}\n\nexport interface BatchActions {\n  id?: string;\n  transformResponse: any;\n  from: number;\n  size: number;\n}\n\nexport interface PaymentFormAdditions {\n  creditAccount?: any;\n  debitAccount?: any;\n  additions?: any;\n}\n\nexport interface Id {\n  id: string;\n}\n\nexport interface AccountInformation extends AdditionalProperties {\n  name?: string;\n  alias?: string;\n  accountNumber?: string;\n  IBAN?: string;\n  BBAN?: string;\n  BIC?: string;\n  bankCode?: string;\n  bankName?: string;\n  bankAddressLine1?: string;\n  bankAddressLine2?: string;\n  bankStreetName?: string;\n  bankTown?: string;\n  bankPostCode?: string;\n  bankCountrySubDivision?: string;\n  bankCountry?: string;\n  accountHolderAddressLine1?: string;\n  accountHolderAddressLine2?: string;\n  accountHolderStreetName?: string;\n  accountHolderTown?: string;\n  accountHolderPostCode?: string;\n  accountHolderCountrySubDivision?: string;\n  accountHolderCountry?: string;\n}\n\nexport interface PaymentOrdersInitiateTransaction {\n  counterparty?: InvolvedParty;\n  counterpartyAccount?: CounterpartyAccount;\n  counterpartyBank?: Bank;\n  correspondentBank?: Bank;\n  intermediaryBank?: Bank;\n  instructedAmount: Currency;\n  messageToBank?: string;\n  targetCurrency?: string;\n  remittanceInformation?: any;\n  endToEndIdentification?: string;\n  mandateIdentifier?: string;\n}\n\nexport interface PaymentOrdersPOST {\n  originatorAccount?: AccountIdentification;\n  batchBooking?: boolean;\n  instructionPriority?: string;\n  requestedExecutionDate: string;\n  paymentMode?: string;\n  paymentType?: string;\n  entryClass?: string;\n  schedule?: Schedule;\n  transferTransactionInformation?: PaymentOrdersInitiateTransaction;\n  approved?: boolean;\n}\n\nexport interface OutputItem {\n  id: string;\n  name: string;\n  displayName?: string;\n  alias?: string;\n  balance?: number;\n  bankBranchCode?: string;\n  currency?: string;\n  accountNumber: string;\n  accountType: string;\n  externalTransferAllowed?: boolean;\n  urgentTransferAllowed?: boolean;\n  productKindName?: string;\n  defaultRecord?: ProductSummaryItem;\n}\n\nexport interface PaymentOrderResponseItem {\n  id: string;\n  status: string;\n  account: string;\n  approvalStatus?: string;\n  exportAllowed: boolean;\n}\n\nexport interface ArrangementItem extends AdditionalProperties {\n  id: string;\n  name: string;\n  displayName?: string;\n  alias?: string;\n  bookedBalance?: number;\n  balance?: number;\n  availableBalance?: number;\n  creditLimit?: number;\n  currency: string;\n  IBAN?: string;\n  BBAN?: string;\n  accountNumber?: string;\n  bankBranchCode?: string;\n  BIC?: string;\n  externalTransferAllowed?: boolean;\n  urgentTransferAllowed?: boolean;\n  productKindName?: string;\n  isArrangement?: boolean;\n  defaultRecord?: ProductSummaryItem;\n}\n\nexport interface ArrangementList {\n  count: number;\n  items: Array<ArrangementItem>;\n  isLoadMore?: boolean;\n  params?: ContactsAndArrangementsGetParams;\n}\n\nexport interface ContactList {\n  count: number;\n  items: Array<ContactGetResponseBody>;\n  itemsCount?: number;\n  isLoadMore?: boolean;\n}\n\nexport interface InternalAccountFormItem extends BaseObject<any> {\n  id: string;\n  name: string;\n  alias?: string;\n  balance?: number;\n  currency?: string;\n  accountNumber?: string;\n  accountType?: string;\n  externalTransferAllowed?: boolean;\n  urgentTransferAllowed?: boolean;\n  productKindName?: string;\n  availableBalance?: number;\n  bookedBalance?: number;\n  creditLimit?: number;\n  defaultRecord?: ProductSummaryItem;\n}\n\nexport interface MultiPaymentAccountFormItem {\n  id: string;\n  name: string;\n  balance?: number;\n  currency?: string;\n  accountNumber?: string;\n  bankBranchCode?: string;\n}\n\nexport interface ExternalAccountAccount {\n  accountNumber?: string;\n}\n\nexport interface ExternalAccountFormItem {\n  name: string;\n  accounts: Array<ExternalAccountAccount>;\n}\n\nexport interface ArrangementsContextParameters {\n  resourceName: string;\n  businessFunction: string;\n  privilege: string;\n}\n\nexport interface ContactsAndArrangementsGetParams {\n  from?: number;\n  creditAccount?: boolean;\n  debitAccount?: boolean;\n  size?: number;\n  query?: string;\n  searchTerm?: string;\n  isLoadMore?: boolean;\n  merge?: boolean;\n}\n\nexport interface AccessControlConfigProvider {\n  currencies: string[];\n  notificationDismissTime: number;\n  checksRangeNumber: number;\n  resourceName: string;\n  businessFunction: string;\n  privilege: string;\n  schemeName: SchemeName;\n}\n\nexport interface Currency {\n  amount: string;\n  currencyCode: string;\n}\n\nexport interface StopCheck {\n  id?: string;\n  originatorAccount: {\n    name?: string;\n    identification: string;\n    schemeName: string;\n  };\n  status: string;\n  reason?: string;\n  checkNumberRange?: {\n    firstNumber: string;\n    lastNumber: string;\n  };\n  check?: {\n    number?: string;\n    amount?: Currency;\n    payeeName?: string;\n    dateIssued?: string;\n  };\n  dateOfRequest: string;\n  expirationDate?: string;\n}\n\nexport interface Address {\n  addressLine1?: string;\n  addressLine2?: string;\n  streetName?: string;\n  town?: string;\n  postCode?: string;\n  countrySubDivision?: string;\n  country?: string;\n}\n\nexport enum ViewType {\n  CARD = 'CARD',\n  FORM = 'FORM',\n  BUTTON = 'BUTTON',\n}\n\nexport class BreachLimitError {\n  kind: BatchOrderError.BREACH_LIMIT = BatchOrderError.BREACH_LIMIT;\n  constructor(readonly reportError: BreachReportError) {}\n}\n\nexport interface BreachReportInfo {\n  breachType: string;\n  breachedLimitType?: string;\n  timeframe: {\n    period: string;\n    startTime: string;\n    endTime: string;\n  };\n  currentConsumption: string;\n  currentThreshold: string;\n}\n\nexport type BreachReportError = Partial<PaymentForbiddenError>;\n\nexport interface BreachReportItem {\n  limitedEntity?: Array<{\n    ref: string;\n    type: string;\n    description: string;\n  }>;\n  shadow?: boolean;\n  currency?: string;\n  'user-BBID'?: string;\n  breachInfo: Array<BreachReportInfo>;\n}\n\nexport interface PaymentTemplatesGetParams\n  extends GetPaymentTemplatesRequestParams {\n  cursor?: string;\n}\n\nexport enum PaymentTemplateAction {\n  CREATE = 'CREATE',\n  VIEW = 'VIEW',\n}\n\nexport interface PaymentTemplatesData {\n  items: PaymentTemplate[];\n  totalCount: number;\n  params: PaymentTemplatesGetParams;\n}\n\nexport interface PaymentTemplatesDetails {\n  paymentType?: string;\n  originatorAccount?: OriginatorAccount;\n  instructionPriority?: string;\n  entryClass?: string;\n  transferTransactionInformation?: PaymentOrdersInitiateTransaction;\n}\n\nexport interface Additions {\n  [key: string]: string;\n}\n\n/** @deprecated Use `CreditDebitMixedIndicator` from `@backbase/data-ang/payment-batch` instead */\nexport enum CreditDebitMixedIndicator {\n  CREDIT = 'CREDIT',\n  DEBIT = 'DEBIT',\n  MIXED = 'MIXED',\n}\n\nexport interface FormSeparatorConfig {\n  cssClasses?: Array<string>;\n  icon?: { name: string; color?: string };\n}\n\nexport type AccountSelectorSize = 'sm' | 'md';\n\nexport const RoutableModalParamName = 'modalOpened';\n","import {\n  CounterPartyDetails,\n  Options,\n  PaymentDetails,\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n} from '../../configs/models/form-items.model';\nimport { INTERNAL_TRANSFER } from '../../configs/payment-types/internal-transfer';\nimport { CHAPS } from '../../configs/payment-types/chaps';\nimport { INTERNATIONAL_TRANSFER } from '../../configs/payment-types/international-transfer';\nimport { INTRABANK_TRANSFER } from '../../configs/payment-types/intrabank-transfer';\nimport { SEPA } from '../../configs/payment-types/sepa';\nimport { UK_FASTER_PAYMENT } from '../../configs/payment-types/uk-faster-payment';\nimport { US_ACH_CREDIT } from '../../configs/payment-types/us-ach-credit';\nimport { US_DOMESTIC_WIRE } from '../../configs/payment-types/us-domestic-wire';\nimport {\n  CounterPartyFields,\n  PaymentBaseFields,\n  ScheduleFields,\n} from '../../configs/models/form-item-names.model';\nimport { PaymentTypeIcon } from '../constants';\nimport { Action, PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport {\n  IdentifiedPaymentOrder,\n  PaymentAction,\n  SchemeNames,\n} from '@backbase/data-ang/payment-order';\nimport { isObjectTruthy, stripSpaces } from './type-helpers';\nimport {\n  ArrangementItem,\n  ContactItem,\n  PaymentTemplateAction,\n} from '../models/types';\n\nexport const getConfig = (\n  configName: string,\n  parent?:\n    | PaymentTypeConfig\n    | PaymentFormGroup\n    | Array<PaymentFormGroup | PaymentFormFieldConfig>\n): PaymentFormGroup | PaymentFormFieldConfig | undefined => {\n  let fields: Array<PaymentFormGroup | PaymentFormFieldConfig> = [];\n  if (!configName) {\n    return;\n  }\n  if (Array.isArray(parent)) {\n    fields = [...parent];\n  } else if (parent?.name === configName) {\n    return parent;\n  } else {\n    fields = parent ? [...parent.fields] : [];\n  }\n  let config: PaymentFormGroup | PaymentFormFieldConfig | undefined;\n  while (fields.length) {\n    config = fields.shift();\n    if (config) {\n      if (config.name === configName) {\n        return config;\n      } else if ((config as PaymentFormGroup).fields) {\n        fields.push(...((<PaymentFormGroup>config) as PaymentFormGroup).fields);\n      }\n    }\n  }\n\n  return;\n};\n\nexport const isFormGroupConfig = (\n  config: PaymentFormGroup | PaymentFormFieldConfig\n) => Array.isArray((<PaymentFormGroup>config).fields);\n\nexport const isAdditionsGroup = (group: PaymentFormGroup) =>\n  group.name === PaymentBaseFields.additions ||\n  group.name === CounterPartyFields.counterpartyAccountAdditions;\n\nexport function getLabelFromPaymentConfig(\n  name: string,\n  paymentConfig: PaymentTypeConfig,\n  parentName = ''\n): string {\n  const parentConfig = parentName\n    ? <PaymentFormGroup>getConfig(parentName, paymentConfig)\n    : paymentConfig;\n  const config = getConfig(name, parentConfig);\n  let label = '';\n  if (config) {\n    if (isFormGroupConfig(config)) {\n      label = (<PaymentFormGroup>config).title || '';\n    } else if (config.options) {\n      label = config.options.label || '';\n    }\n  }\n  return label;\n}\n\nexport const cloneFormFieldOptions = (options: { [key: string]: any } = {}) => {\n  const newOptions = { ...options };\n  for (const key in newOptions) {\n    if (Array.isArray(newOptions[key])) {\n      newOptions[key] = [...newOptions[key]];\n    } else if (typeof newOptions[key] === 'object') {\n      newOptions[key] = { ...newOptions[key] };\n    }\n  }\n  return newOptions;\n};\n\nexport const clonePaymentFormItem = (\n  formItemConfig: PaymentFormGroup | PaymentFormFieldConfig\n): PaymentFormGroup | PaymentFormFieldConfig => {\n  const configItem: PaymentFormGroup | PaymentFormFieldConfig = {\n    ...formItemConfig,\n  };\n  if ((formItemConfig as PaymentFormGroup)?.fields?.length) {\n    (configItem as PaymentFormGroup).fields = (\n      formItemConfig as PaymentFormGroup\n    ).fields.map(clonePaymentFormItem);\n  } else {\n    configItem.options = cloneFormFieldOptions(formItemConfig.options);\n  }\n\n  return configItem;\n};\n\nexport const clonePaymentConfig = (\n  config: PaymentTypeConfig\n): PaymentTypeConfig => ({\n  ...config,\n  fields: config.fields.map(clonePaymentFormItem),\n});\n\nexport function setFrequencyOptionsPerConfig(\n  config: PaymentTypeConfig,\n  isRecurring = false,\n  scheduleConfigOptions: {\n    isOneOffToRecurrentAllowed?: boolean;\n    isRecurrentToOneOffAllowed?: boolean;\n  }\n): PaymentTypeConfig {\n  const clonedConfig = clonePaymentConfig(config);\n\n  const schedule = getConfig(\n    PaymentBaseFields.schedule,\n    clonedConfig\n  ) as PaymentFormGroup;\n  const frequencyFieldOptions = getConfig(ScheduleFields.frequency, schedule)\n    ?.options as PaymentFormFieldConfig['options'];\n\n  if (isRecurring && !scheduleConfigOptions.isRecurrentToOneOffAllowed) {\n    frequencyFieldOptions?.options.shift();\n  } else if (\n    !isRecurring &&\n    !scheduleConfigOptions.isOneOffToRecurrentAllowed\n  ) {\n    frequencyFieldOptions.options = [frequencyFieldOptions?.options[0]];\n  }\n\n  return { ...clonedConfig };\n}\n\nexport function removeScheduleFromConfig(\n  config: PaymentTypeConfig\n): PaymentTypeConfig {\n  const clonedConfig = clonePaymentConfig(config);\n  return {\n    ...clonedConfig,\n    // Schedule is on the top level so we can skip deep nested checks.\n    fields: clonedConfig.fields.filter(\n      (field) => field.name !== PaymentBaseFields.schedule\n    ),\n  };\n}\n\nexport const shouldLoadTabContent = (tab: string, options: Options): boolean =>\n  !options.tabs || (Array.isArray(options.tabs) && options.tabs.includes(tab));\n\nexport function getIconByPaymnentType(paymentType: string): string {\n  const type = normalizePaymentType(paymentType);\n\n  switch (type) {\n    case INTERNAL_TRANSFER.paymentType:\n    case INTRABANK_TRANSFER.paymentType:\n      return PaymentTypeIcon.INTERNAL;\n\n    case INTERNATIONAL_TRANSFER.paymentType:\n    case 'US_FOREIGN_WIRE':\n      return PaymentTypeIcon.INTERNATIONAL;\n\n    case SEPA.paymentType:\n    case 'SEPA_CT':\n    case US_DOMESTIC_WIRE.paymentType:\n    case US_ACH_CREDIT.paymentType:\n    case CHAPS.paymentType:\n    case UK_FASTER_PAYMENT.paymentType:\n      return PaymentTypeIcon.DOMESTIC;\n  }\n  return '';\n}\n\nexport function normalizePaymentType(\n  paymentType: string | undefined\n): string | undefined {\n  const paymentTypeSuffixes = ['_ILE', '_CLOSED'];\n  if (paymentType) {\n    let normalisedPaymentType = paymentType;\n    paymentTypeSuffixes.forEach((suffix) => {\n      if (paymentType.endsWith(suffix)) {\n        normalisedPaymentType = paymentType.replace(suffix, '');\n      }\n    });\n\n    return normalisedPaymentType;\n  }\n  return;\n}\n\nexport function hasCreatePermission(\n  item: PaymentTemplate | Array<Action | PaymentAction> | undefined\n): boolean {\n  const actions = (item as PaymentTemplate)?.actions || (item as Array<Action>);\n  return !!actions?.find((action) => action === PaymentTemplateAction.CREATE);\n}\n\nexport function canCopyPayment(\n  item: IdentifiedPaymentOrder | undefined\n): boolean {\n  return !!item?.permissibleActions?.create;\n}\n\nfunction isModified(currentValue = '', expectedValue = ''): boolean {\n  if (!currentValue) {\n    return false;\n  }\n  return currentValue !== expectedValue;\n}\n\nfunction getBeneficairyDetails(\n  beneficiary?: Partial<ContactItem | ArrangementItem>\n): Partial<ArrangementItem> {\n  return {\n    bankBranchCode:\n      (<ContactItem>beneficiary)?.accounts?.[0]?.bankCode ||\n      (<ArrangementItem>beneficiary)?.bankBranchCode,\n    accountNumber:\n      (<ContactItem>beneficiary)?.accounts?.[0]?.accountNumber ||\n      (<ArrangementItem>beneficiary)?.accountNumber,\n    name: beneficiary?.name,\n    BIC:\n      (<ContactItem>beneficiary)?.accounts?.[0]?.BIC ||\n      (<ArrangementItem>beneficiary)?.BIC,\n  };\n}\n\nexport function isSelectedBeneficiaryModified(\n  counterparty?: CounterPartyDetails,\n  selectedBeneficiary?: Partial<ContactItem | ArrangementItem>\n): boolean {\n  const beneficiaryDetails = getBeneficairyDetails(selectedBeneficiary);\n  return (\n    (isObjectTruthy(beneficiaryDetails) &&\n      isModified(counterparty?.name, beneficiaryDetails.name)) ||\n    isModified(\n      stripSpaces(counterparty?.accountNumber),\n      stripSpaces(beneficiaryDetails.accountNumber)\n    ) ||\n    isModified(\n      counterparty?.creditorBank?.bankBranchCode,\n      beneficiaryDetails.bankBranchCode\n    ) ||\n    isModified(counterparty?.creditorBank?.bic, beneficiaryDetails.BIC)\n  );\n}\n\nexport const getCounterpartySchemeName = (\n  paymentItem: PaymentDetails\n): SchemeNames => {\n  const { counterparty, selectedBeneficiary } = paymentItem;\n  const isBeneficiaryModified = isSelectedBeneficiaryModified(\n    counterparty,\n    selectedBeneficiary\n  );\n  let creditorScheme = counterparty.schemeName || SchemeNames.BBAN;\n  const beneficiarySchemes = [SchemeNames.BBAN, SchemeNames.IBAN];\n  const isOwnAccountTransfer =\n    selectedBeneficiary?.isArrangement &&\n    beneficiarySchemes.includes(creditorScheme);\n\n  // Set scheme to ID when payment template has counterparty id\n  if (\n    !selectedBeneficiary &&\n    counterparty.id &&\n    creditorScheme !== SchemeNames.EXTERNALID\n  ) {\n    creditorScheme = SchemeNames.ID;\n  }\n\n  return isOwnAccountTransfer && !isBeneficiaryModified\n    ? SchemeNames.ID\n    : creditorScheme;\n};\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { BB_PAYMENT_CONFIG, BB_REGISTERED_PAYMENT_CONFIGS } from '../constants';\nimport {\n  OmniPaymentConfigItem,\n  PaymentTypeConfig,\n} from '../models/form-items.model';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { normalizePaymentType } from '../../ui/helpers/payment-config-helpers';\n\nconst DEFAULT_KEY = 'DEFAULT';\n\n@Injectable()\nexport class PaymentConfigService {\n  private readonly paymentConfigRegistry: BehaviorSubject<\n    Map<string, PaymentTypeConfig>\n  >;\n  private readonly configRegistry: BehaviorSubject<\n    Map<string, OmniPaymentConfigItem>\n  >;\n  private readonly classIdRegistry: BehaviorSubject<Map<string, string>>;\n\n  constructor(\n    @Inject(BB_PAYMENT_CONFIG)\n    @Optional()\n    configs: Array<OmniPaymentConfigItem>,\n    @Inject(BB_REGISTERED_PAYMENT_CONFIGS)\n    @Optional()\n    registeredPaymentConfigs: Array<PaymentTypeConfig[]>\n  ) {\n    this.paymentConfigRegistry = new BehaviorSubject(\n      new Map<string, PaymentTypeConfig>(\n        configs\n          ? configs.reduce(\n              (\n                acc: any[],\n                { paymentType, businessFunction }: OmniPaymentConfigItem\n              ) => {\n                const paymentConfig = Object.assign(paymentType, {\n                  businessFunction,\n                });\n                return [...acc, [paymentConfig.paymentType, paymentConfig]];\n              },\n              []\n            )\n          : undefined\n      )\n    );\n\n    this.classIdRegistry = new BehaviorSubject(\n      new Map<string, string>(\n        configs\n          ? configs.reduce(\n              (acc: any[], { classId, paymentType }) => [\n                ...acc,\n                [classId || DEFAULT_KEY, paymentType.paymentType],\n              ],\n              []\n            )\n          : undefined\n      )\n    );\n\n    this.configRegistry = new BehaviorSubject(\n      new Map<string, OmniPaymentConfigItem>(\n        configs\n          ? configs.reduce(\n              (acc: any[], config: OmniPaymentConfigItem) => [\n                ...acc,\n                [config.classId || DEFAULT_KEY, config],\n              ],\n              []\n            )\n          : undefined\n      )\n    );\n\n    if (registeredPaymentConfigs && registeredPaymentConfigs.length) {\n      registeredPaymentConfigs\n        .reduce((acc, val) => acc.concat(val), [])\n        .forEach((config: PaymentTypeConfig) =>\n          this.setPaymentConfigByType(config)\n        );\n    }\n  }\n\n  has(paymentType: string): boolean {\n    return this.paymentConfigRegistry.value.has(paymentType);\n  }\n\n  hasClassId(classId: string): boolean {\n    return this.classIdRegistry.value.has(classId);\n  }\n\n  getPaymentConfigByClassId(classId: string): PaymentTypeConfig | undefined {\n    const paymentConfigType = this.getBaseConfigByClassId(classId);\n    return paymentConfigType && paymentConfigType.paymentType;\n  }\n\n  getPaymentConfigByType(paymentType: string): PaymentTypeConfig | undefined {\n    return this.paymentConfigRegistry.value.get(paymentType);\n  }\n\n  mapPaymentType(item: PaymentTemplate | string): string | undefined {\n    const paymentType =\n      typeof item === 'string'\n        ? item\n        : (item as PaymentTemplate).details.paymentType;\n    const _paymentType = normalizePaymentType(paymentType);\n\n    return _paymentType\n      ? this.getPaymentConfigByType(_paymentType)?.name\n      : undefined;\n  }\n\n  getBaseConfigByClassId(classId: string): OmniPaymentConfigItem | undefined {\n    return (\n      this.configRegistry.value.get(classId) ||\n      this.configRegistry.value.get(DEFAULT_KEY)\n    );\n  }\n\n  setPaymentConfigByType(config: PaymentTypeConfig) {\n    const _value = this.paymentConfigRegistry.value;\n    _value.set(config.paymentType, config);\n    this.paymentConfigRegistry.next(_value);\n  }\n}\n","import { FormGroup } from '@angular/forms';\nimport {\n  CounterPartyFields,\n  HiddenFields,\n} from '../models/form-item-names.model';\n\nexport function resetBeneficiaryDetails(formGroup: FormGroup) {\n  const beneficiaryFormControls = [\n    CounterPartyFields.accountNumber,\n    CounterPartyFields.name,\n    CounterPartyFields.id,\n    CounterPartyFields.postalAddress,\n    CounterPartyFields.creditorBank,\n    CounterPartyFields.selectedContact,\n    CounterPartyFields.saveNewContact,\n    HiddenFields.beneficiaryAccountName,\n  ];\n\n  beneficiaryFormControls.forEach((control) => {\n    formGroup.get(control)?.reset();\n  });\n  formGroup.parent?.get(HiddenFields.selectedBeneficiary)?.reset();\n}\n","import { PaymentTypeConfig } from './models/form-items.model';\nimport { SEPA } from './payment-types/sepa';\nimport { INTERNAL_TRANSFER } from './payment-types/internal-transfer';\nimport { US_ACH_CREDIT } from './payment-types/us-ach-credit';\nimport { US_DOMESTIC_WIRE } from './payment-types/us-domestic-wire';\nimport { CHAPS } from './payment-types/chaps';\nimport { UK_FASTER_PAYMENT } from './payment-types/uk-faster-payment';\nimport { INTERNATIONAL_TRANSFER } from './payment-types/international-transfer';\nimport { INTRABANK_TRANSFER } from './payment-types/intrabank-transfer';\nimport { INTERNAL_TRANSFER_BUSINESS } from './payment-types/internal-transfer-business';\nimport { P2P_TRANSFER } from './payment-types/p2p-transfer';\nimport { ACH_DEBIT } from './payment-types/ach-debit';\n\nexport const OOTB_PAYMENT_CONFIGS: PaymentTypeConfig[] = [\n  SEPA,\n  INTERNAL_TRANSFER,\n  US_ACH_CREDIT,\n  US_DOMESTIC_WIRE,\n  CHAPS,\n  UK_FASTER_PAYMENT,\n  INTERNATIONAL_TRANSFER,\n  INTRABANK_TRANSFER,\n  INTERNAL_TRANSFER_BUSINESS,\n  P2P_TRANSFER,\n  ACH_DEBIT,\n];\n\nexport function OOTBPaymentTypes(): PaymentTypeConfig[] {\n  return OOTB_PAYMENT_CONFIGS;\n}\n\nexport * from './payment-types/default-config';\n\nexport { SEPA } from './payment-types/sepa';\nexport { US_DOMESTIC_WIRE } from './payment-types/us-domestic-wire';\nexport { INTERNATIONAL_TRANSFER } from './payment-types/international-transfer';\nexport { CHAPS } from './payment-types/chaps';\nexport { US_ACH_CREDIT } from './payment-types/us-ach-credit';\nexport { INTERNAL_TRANSFER } from './payment-types/internal-transfer';\nexport { INTRABANK_TRANSFER } from './payment-types/intrabank-transfer';\nexport { P2P_TRANSFER } from './payment-types/p2p-transfer';\nexport { UK_FASTER_PAYMENT } from './payment-types/uk-faster-payment';\nexport {\n  MULTIPLE_PAYMENT,\n  STEPPER_CONFIG,\n  BATCH_INTERNAL_TRANSFERS,\n} from './payment-types/multipayment';\nexport { PaymentConfigService } from './services/payment-config.service';\nexport { INTERNAL_TRANSFER_BUSINESS } from './payment-types/internal-transfer-business';\nexport { ACH_DEBIT } from './payment-types/ach-debit';\n\nexport * from './models/form-item-names.model';\nexport * from './models/form-items.model';\nexport * from './constants';\nexport * from './helpers/schedule-config-helpers';\nexport * from './helpers/form-helpers';\nexport * from './helpers/form-validation';\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-payments-sr-search-result-info',\n  templateUrl: 'sr-search-result-info.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentsSrSearchResultInfoComponent {\n  private readonly debounceTotal = new BehaviorSubject<\n    number | undefined | null\n  >(undefined);\n  readonly total$ = this.debounceTotal.pipe(debounceTime(1000));\n\n  /**\n   * Total count of search result.\n   */\n  @Input()\n  set totalNumber(val: number | undefined | null) {\n    this.debounceTotal.next(val);\n  }\n\n  isNumber(val: number | undefined | null): boolean {\n    return typeof val === 'number';\n  }\n}\n","<div class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\" role=\"status\">\n  <ng-container *ngIf=\"{ total: total$ | async } as data\">\n    <ng-container *ngIf=\"isNumber(data.total)\">\n      <ng-content></ng-content>\n      <span i18n=\"@@sr-search-result-info-label.someValue\">\n        {data.total, plural, =0 {No results found} =1 {1 result found} other\n        {{{data.total}} results found}}\n      </span>\n    </ng-container>\n  </ng-container>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PaymentsSrSearchResultInfoComponent } from './sr-search-result-info.component';\n\n/**\n * Exports UI components and modules for payments common\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PaymentsSrSearchResultInfoComponent],\n  exports: [PaymentsSrSearchResultInfoComponent],\n})\nexport class PaymentsSrSearchResultInfoModule {}\n","import { TemplateRef } from '@angular/core';\nimport {\n  PaymentOrdersPost as PaymentOrdersPOST,\n  OriginatorAccount as PaymentOrdersOriginatorAccount,\n  PaymentMode,\n  IdentifiedPaymentOrder,\n} from '@backbase/data-ang/payment-order';\nimport {\n  PaymentTemplate,\n  InstructionPriority,\n  TransferTransactionInformation,\n} from '@backbase/data-ang/payment-template';\nimport { ErrorItem } from '@backbase/data-ang/payment-batch';\nimport {\n  PaymentDetails,\n  PayordPaymentError,\n} from '../../configs/models/form-items.model';\nimport { Route } from '@angular/router';\nimport {\n  Currency,\n  ExternalAccountFormItem,\n  InternalAccountFormItem,\n} from './types';\n\nexport class PaymentOrdersBadRequest {\n  kind: 'PaymentOrdersBadRequest' = 'PaymentOrdersBadRequest';\n\n  constructor(readonly payment: PaymentOrdersPOST) {}\n}\n\nexport class UnknownError {\n  kind: 'UnknownError' = 'UnknownError';\n\n  constructor(readonly origin: any) {}\n}\n\nexport type PaymentOrdersError = PaymentOrdersBadRequest | UnknownError;\n\nexport enum Routes {\n  FORM = 'form',\n  REVIEW = 'review',\n}\n\nexport enum PaymentState {\n  INITIAL = 'INITIAL',\n  REVIEW = 'REVIEW',\n  EDIT = 'EDIT',\n}\n\nexport interface ReviewTemplateContext {\n  $implicit: PaymentDetails;\n  status?: 'SUCCESS' | 'FAIL';\n}\n\nexport interface BeneficiaryDetails {\n  accounts?: Array<InternalAccountFormItem> | null;\n  contacts?: Array<ExternalAccountFormItem> | null;\n}\n\nexport enum ExecutionTimeFrame {\n  'HOUR' = 'HOUR',\n  'CALENDAR_DAY' = 'CALENDAR_DAY',\n  'BUSINESS_DAY' = 'BUSINESS_DAY',\n}\n\nexport enum ChargeBearer {\n  'OUR' = 'OUR',\n  'BEN' = 'BEN',\n  'SHA' = 'SHA',\n}\n\nexport enum ModalState {\n  Preview,\n  Hidden,\n}\n\nexport interface PaymentTemplateResponse extends PaymentTemplate {\n  id: string;\n  name?: string;\n  createdAt: string;\n  serviceAgreementId: string;\n  details: {\n    paymentType?: string;\n    originator?: {\n      name: string;\n      postalAddress: {\n        addressLine1: string;\n      };\n    };\n    originatorAccount?: PaymentOrdersOriginatorAccount;\n    instructionPriority?: InstructionPriority;\n    entryClass?: string;\n    transferTransactionInformation?: TransferTransactionInformation;\n  };\n}\n\nexport interface PaymentOption {\n  name?: string;\n  paymentType?: string;\n  showHelperText?: boolean;\n  instructionPriority?: string;\n  transferFee?: Currency;\n  chargeBearer?: Array<string>;\n  executionTimeFrame?: {\n    min?: number;\n    max: number;\n    unit: string;\n  };\n  cutOffTime?: string;\n  canEditCounterparty?: boolean;\n}\n\nexport interface CurrencyObj {\n  code: string;\n  decimals: number;\n}\n\nexport interface LabeledCurrencies {\n  popular?: Array<CurrencyObj>;\n  normal?: Array<CurrencyObj>;\n}\n\nexport interface DecimalsSet {\n  [key: string]: number;\n}\n\nexport interface CurrencySet {\n  currencies: Array<string>;\n  decimals: DecimalsSet;\n  dividerIndex?: number;\n}\n\nexport interface ForexDetails {\n  fromCurrency: string;\n  toCurrency: string;\n  rate: number;\n  calculatedAmount: number | string;\n}\n\nexport interface PaymentCostInfo extends ForexDetails {\n  transferFee: Currency;\n  hasForexInfo: boolean;\n}\n\nexport interface CurrencySelectorConfig {\n  showFlags?: boolean;\n  showName?: boolean;\n  isSearchable?: boolean;\n  dividerIndex?: number;\n  searchPlaceholder?: string;\n  dropdownIcon?: string;\n}\n\nexport interface TransactionSigningResponse {\n  amount: string;\n  currency: string;\n  'counter-party-account': string;\n  'counter-party-name': string;\n  'confirmation-type': string;\n  'payment-order-id': string;\n}\n\nexport enum ProgressStatus {\n  CONFIRMATION_PENDING = 'CONFIRMATION_PENDING',\n  USER_DECLINED = 'USER_DECLINED',\n  SYSTEM_DECLINED = 'SYSTEM_DECLINED',\n  PENDING_APPROVAL = 'PENDING_APPROVAL',\n  SENDING = 'SENDING',\n  ACCEPTED = 'ACCEPTED',\n  REJECTED = 'REJECTED',\n  PROCESSED = 'PROCESSED',\n  NO_PROGRESS = 'NO_PROGRESS',\n}\n\nexport interface PaymentProgressStatusResponse {\n  progressStatus: ProgressStatus;\n}\n\nexport interface PaymentErrors {\n  errorResponse: any;\n  genericMessage?: string;\n  errors: Array<{\n    key: string;\n    message: string;\n  }>;\n  paymentErrors: PayordPaymentError;\n  notificationHeader: TemplateRef<any> | string;\n}\n\nexport interface PaymentError {\n  statusText: string;\n  error: {\n    message: string;\n    errors: Array<{\n      key: string;\n      message: string;\n    }>;\n  };\n  reasonCode?: string;\n  reasonText?: string;\n}\n\nexport enum ManualBatchState {\n  CLOSED = 'CLOSED',\n  INITIAL = 'INITIAL',\n  DRAFT = 'DRAFT',\n  REVIEW = 'REVIEW',\n  VALID = 'VALID',\n}\n\nexport enum PaymentSubmitStatuses {\n  SUCCESS = 'success',\n  ERROR = 'error',\n  PENDING = 'pending',\n  PENDING_EDITED = 'pending_edited',\n}\n\nexport interface StepErrors {\n  [stepName: string]: ErrorItem[];\n}\n\nexport interface TemplateParams {\n  name: string;\n  id: string;\n}\n\nexport interface Template extends PaymentTemplate {\n  query?: string;\n}\n\nexport enum ScrollToElementBehavior {\n  AUTO = 'auto',\n  SMOOTH = 'smooth',\n}\n\nexport enum ScrollToElementBlock {\n  START = 'start',\n  CENTER = 'center',\n  END = 'end',\n  NEAREST = 'nearest',\n}\n\nexport enum ScrollToElementInline {\n  START = 'start',\n  CENTER = 'center',\n  END = 'end',\n  NEAREST = 'nearest',\n}\n\nexport interface ScrollToElementConfigOptions {\n  behavior?: ScrollToElementBehavior;\n  block?: ScrollToElementBlock;\n  inline?: ScrollToElementInline;\n}\n\nexport interface PaymentOrdersData {\n  items: IdentifiedPaymentOrder[];\n  totalCount: number;\n}\n\nexport interface DataTypedRoute<T = PaymentsRouteData> extends Route {\n  data: T;\n  path: string;\n}\n\nexport interface PaymentsRouteData {\n  /**\n   * Title for the route tab\n   */\n  title: string;\n  /**\n   * Type of payment orders to load\n   */\n  paymentMode?: PaymentMode;\n}\n\nexport interface PaymentsTab {\n  title: string;\n  route: string;\n}\n","import {\n  ScrollToElementBehavior,\n  ScrollToElementBlock,\n  ScrollToElementConfigOptions,\n  ScrollToElementInline,\n} from '../models';\n\nexport function scrollToElement(\n  elem: HTMLElement,\n  selector: string,\n  options?: ScrollToElementConfigOptions\n) {\n  const defaultOptions: ScrollToElementConfigOptions = {\n    behavior: ScrollToElementBehavior.SMOOTH,\n    block: ScrollToElementBlock.CENTER,\n    inline: ScrollToElementInline.NEAREST,\n  };\n\n  setTimeout(() => {\n    const errorElems = elem?.querySelectorAll(selector);\n    if (errorElems?.length) {\n      errorElems[0].scrollIntoView(\n        Object.assign(defaultOptions, options || {})\n      );\n    }\n  });\n}\n\nexport function focusChildElement(selector: string, parent?: HTMLElement) {\n  setTimeout(() => {\n    const child = parent?.querySelector(selector) as HTMLElement;\n    child?.focus();\n  });\n}\n\nexport function focusErrorElement(\n  parent: HTMLElement,\n  selector = 'small.bb-input-validation-message'\n) {\n  toggleTabIndex(selector, parent);\n  scrollToElement(parent, selector);\n  focusChildElement(selector, parent);\n}\n\nexport function toggleTabIndex(\n  selector: string,\n  parent?: HTMLElement,\n  focusable = true\n) {\n  const child = parent?.querySelector(selector) as HTMLElement;\n  child?.setAttribute('tabindex', focusable ? '0' : '-1');\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'bb-country-name',\n  templateUrl: './country-name.component.html',\n})\nexport class CountryNameComponent implements OnInit {\n  /**\n   * ISO 3166 Alpha-2 country code\n   */\n  @Input() countryCode!: string;\n\n  ngOnInit() {\n    if (!this.countryCode) {\n      console.warn('Please provide a ISO 3166 Alpha-2 country code');\n    }\n  }\n}\n","<ng-container [ngSwitch]=\"countryCode\">\n  <ng-container *ngSwitchCase=\"'AF'\" i18n=\"@@bb-country-name.AF\"\n    >Afghanistan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AX'\" i18n=\"@@bb-country-name.AX\"\n    >Aland Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AL'\" i18n=\"@@bb-country-name.AL\"\n    >Albania</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'DZ'\" i18n=\"@@bb-country-name.DZ\"\n    >Algeria</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AS'\" i18n=\"@@bb-country-name.AS\"\n    >American Samoa</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AD'\" i18n=\"@@bb-country-name.AD\"\n    >Andorra</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AO'\" i18n=\"@@bb-country-name.AO\"\n    >Angola</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AI'\" i18n=\"@@bb-country-name.AI\"\n    >Anguilla</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AQ'\" i18n=\"@@bb-country-name.AQ\"\n    >Antarctica</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AG'\" i18n=\"@@bb-country-name.AG\"\n    >Antigua and Barbuda</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AR'\" i18n=\"@@bb-country-name.AR\"\n    >Argentina</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AM'\" i18n=\"@@bb-country-name.AM\"\n    >Armenia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AW'\" i18n=\"@@bb-country-name.AW\"\n    >Aruba</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AU'\" i18n=\"@@bb-country-name.AU\"\n    >Australia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AT'\" i18n=\"@@bb-country-name.AT\"\n    >Austria</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AZ'\" i18n=\"@@bb-country-name.AZ\"\n    >Azerbaijan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BS'\" i18n=\"@@bb-country-name.BS\"\n    >Bahamas</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BH'\" i18n=\"@@bb-country-name.BH\"\n    >Bahrain</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BD'\" i18n=\"@@bb-country-name.BD\"\n    >Bangladesh</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BB'\" i18n=\"@@bb-country-name.BB\"\n    >Barbados</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BY'\" i18n=\"@@bb-country-name.BY\"\n    >Belarus</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BE'\" i18n=\"@@bb-country-name.BE\"\n    >Belgium</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BZ'\" i18n=\"@@bb-country-name.BZ\"\n    >Belize</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BJ'\" i18n=\"@@bb-country-name.BJ\"\n    >Benin</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BM'\" i18n=\"@@bb-country-name.BM\"\n    >Bermuda</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BT'\" i18n=\"@@bb-country-name.BT\"\n    >Bhutan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BO'\" i18n=\"@@bb-country-name.BO\"\n    >Bolivia, Plurinational State of</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BQ'\" i18n=\"@@bb-country-name.BQ\"\n    >Bonaire, Saint Eustatius and Saba</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BA'\" i18n=\"@@bb-country-name.BA\"\n    >Bosnia and Herzegovina</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BW'\" i18n=\"@@bb-country-name.BW\"\n    >Botswana</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BV'\" i18n=\"@@bb-country-name.BV\"\n    >Bouvet Island</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BR'\" i18n=\"@@bb-country-name.BR\"\n    >Brazil</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'IO'\" i18n=\"@@bb-country-name.IO\"\n    >British Indian Ocean Territory</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BN'\" i18n=\"@@bb-country-name.BN\"\n    >Brunei Darussalam</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BG'\" i18n=\"@@bb-country-name.BG\"\n    >Bulgaria</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BF'\" i18n=\"@@bb-country-name.BF\"\n    >Burkina Faso</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BI'\" i18n=\"@@bb-country-name.BI\"\n    >Burundi</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KH'\" i18n=\"@@bb-country-name.KH\"\n    >Cambodia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CM'\" i18n=\"@@bb-country-name.CM\"\n    >Cameroon</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CA'\" i18n=\"@@bb-country-name.CA\"\n    >Canada</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CV'\" i18n=\"@@bb-country-name.CV\"\n    >Cape Verde</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KY'\" i18n=\"@@bb-country-name.KY\"\n    >Cayman Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CF'\" i18n=\"@@bb-country-name.CF\"\n    >Central African Republic</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TD'\" i18n=\"@@bb-country-name.TD\"\n    >Chad</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CL'\" i18n=\"@@bb-country-name.CL\"\n    >Chile</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CN'\" i18n=\"@@bb-country-name.CN\"\n    >China</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CX'\" i18n=\"@@bb-country-name.CX\"\n    >Christmas Island</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CC'\" i18n=\"@@bb-country-name.CC\"\n    >Cocos (Keeling) Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CO'\" i18n=\"@@bb-country-name.CO\"\n    >Colombia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KM'\" i18n=\"@@bb-country-name.KM\"\n    >Comoros</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CG'\" i18n=\"@@bb-country-name.CG\"\n    >Congo</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CD'\" i18n=\"@@bb-country-name.CD\"\n    >Congo, The Democratic Republic of the</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CK'\" i18n=\"@@bb-country-name.CK\"\n    >Cook Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CR'\" i18n=\"@@bb-country-name.CR\"\n    >Costa Rica</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CI'\" i18n=\"@@bb-country-name.CI\"\n    >Cote d'Ivoire</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'HR'\" i18n=\"@@bb-country-name.HR\"\n    >Croatia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CU'\" i18n=\"@@bb-country-name.CU\"\n    >Cuba</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CW'\" i18n=\"@@bb-country-name.CW\"\n    >Curacao</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CY'\" i18n=\"@@bb-country-name.CY\"\n    >Cyprus</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CZ'\" i18n=\"@@bb-country-name.CZ\"\n    >Czech Republic</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'DK'\" i18n=\"@@bb-country-name.DK\"\n    >Denmark</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'DJ'\" i18n=\"@@bb-country-name.DJ\"\n    >Djibouti</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'DM'\" i18n=\"@@bb-country-name.DM\"\n    >Dominica</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'DO'\" i18n=\"@@bb-country-name.DO\"\n    >Dominican Republic</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'EC'\" i18n=\"@@bb-country-name.EC\"\n    >Ecuador</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'EG'\" i18n=\"@@bb-country-name.EG\"\n    >Egypt</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SV'\" i18n=\"@@bb-country-name.SV\"\n    >El Salvador</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GQ'\" i18n=\"@@bb-country-name.GQ\"\n    >Equatorial Guinea</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ER'\" i18n=\"@@bb-country-name.ER\"\n    >Eritrea</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'EE'\" i18n=\"@@bb-country-name.EE\"\n    >Estonia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ET'\" i18n=\"@@bb-country-name.ET\"\n    >Ethiopia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'FK'\" i18n=\"@@bb-country-name.FK\"\n    >Falkland Islands (Malvinas)</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'FO'\" i18n=\"@@bb-country-name.FO\"\n    >Faroe Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'FJ'\" i18n=\"@@bb-country-name.FJ\"\n    >Fiji</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'FI'\" i18n=\"@@bb-country-name.FI\"\n    >Finland</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'FR'\" i18n=\"@@bb-country-name.FR\"\n    >France</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GF'\" i18n=\"@@bb-country-name.GF\"\n    >French Guiana</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PF'\" i18n=\"@@bb-country-name.PF\"\n    >French Polynesia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TF'\" i18n=\"@@bb-country-name.TF\"\n    >French Southern Territories</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GA'\" i18n=\"@@bb-country-name.GA\"\n    >Gabon</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GM'\" i18n=\"@@bb-country-name.GM\"\n    >Gambia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GE'\" i18n=\"@@bb-country-name.GE\"\n    >Georgia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'DE'\" i18n=\"@@bb-country-name.DE\"\n    >Germany</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GH'\" i18n=\"@@bb-country-name.GH\"\n    >Ghana</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GI'\" i18n=\"@@bb-country-name.GI\"\n    >Gibraltar</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GR'\" i18n=\"@@bb-country-name.GR\"\n    >Greece</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GL'\" i18n=\"@@bb-country-name.GL\"\n    >Greenland</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GD'\" i18n=\"@@bb-country-name.GD\"\n    >Grenada</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GP'\" i18n=\"@@bb-country-name.GP\"\n    >Guadeloupe</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GU'\" i18n=\"@@bb-country-name.GU\"\n    >Guam</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GT'\" i18n=\"@@bb-country-name.GT\"\n    >Guatemala</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GG'\" i18n=\"@@bb-country-name.GG\"\n    >Guernsey</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GN'\" i18n=\"@@bb-country-name.GN\"\n    >Guinea</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GW'\" i18n=\"@@bb-country-name.GW\"\n    >Guinea-Bissau</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GY'\" i18n=\"@@bb-country-name.GY\"\n    >Guyana</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'HT'\" i18n=\"@@bb-country-name.HT\"\n    >Haiti</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'HM'\" i18n=\"@@bb-country-name.HM\"\n    >Heard Island and McDonald Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'VA'\" i18n=\"@@bb-country-name.VA\"\n    >Holy See (Vatican City State)</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'HN'\" i18n=\"@@bb-country-name.HN\"\n    >Honduras</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'HK'\" i18n=\"@@bb-country-name.HK\"\n    >Hong Kong</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'HU'\" i18n=\"@@bb-country-name.HU\"\n    >Hungary</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'IS'\" i18n=\"@@bb-country-name.IS\"\n    >Iceland</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'IN'\" i18n=\"@@bb-country-name.IN\"\n    >India</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ID'\" i18n=\"@@bb-country-name.ID\"\n    >Indonesia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'IR'\" i18n=\"@@bb-country-name.IR\"\n    >Iran, Islamic Republic of</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'IQ'\" i18n=\"@@bb-country-name.IQ\"\n    >Iraq</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'IE'\" i18n=\"@@bb-country-name.IE\"\n    >Ireland</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'IM'\" i18n=\"@@bb-country-name.IM\"\n    >Isle of Man</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'IL'\" i18n=\"@@bb-country-name.IL\"\n    >Israel</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'IT'\" i18n=\"@@bb-country-name.IT\"\n    >Italy</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'JM'\" i18n=\"@@bb-country-name.JM\"\n    >Jamaica</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'JP'\" i18n=\"@@bb-country-name.JP\"\n    >Japan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'JE'\" i18n=\"@@bb-country-name.JE\"\n    >Jersey</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'JO'\" i18n=\"@@bb-country-name.JO\"\n    >Jordan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KZ'\" i18n=\"@@bb-country-name.KZ\"\n    >Kazakhstan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KE'\" i18n=\"@@bb-country-name.KE\"\n    >Kenya</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KI'\" i18n=\"@@bb-country-name.KI\"\n    >Kiribati</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KP'\" i18n=\"@@bb-country-name.KP\"\n    >Korea, Democratic People's Republic of</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KR'\" i18n=\"@@bb-country-name.KR\"\n    >Korea, Republic of</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KW'\" i18n=\"@@bb-country-name.KW\"\n    >Kuwait</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KG'\" i18n=\"@@bb-country-name.KG\"\n    >Kyrgyzstan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LA'\" i18n=\"@@bb-country-name.LA\"\n    >Lao People's Democratic Republic</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LV'\" i18n=\"@@bb-country-name.LV\"\n    >Latvia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LB'\" i18n=\"@@bb-country-name.LB\"\n    >Lebanon</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LS'\" i18n=\"@@bb-country-name.LS\"\n    >Lesotho</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LR'\" i18n=\"@@bb-country-name.LR\"\n    >Liberia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LY'\" i18n=\"@@bb-country-name.LY\"\n    >Libyan Arab Jamahiriya</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LI'\" i18n=\"@@bb-country-name.LI\"\n    >Liechtenstein</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LT'\" i18n=\"@@bb-country-name.LT\"\n    >Lithuania</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LU'\" i18n=\"@@bb-country-name.LU\"\n    >Luxembourg</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MO'\" i18n=\"@@bb-country-name.MO\"\n    >Macao</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MK'\" i18n=\"@@bb-country-name.MK\"\n    >Macedonia, The Former Yugoslav Republic of</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MG'\" i18n=\"@@bb-country-name.MG\"\n    >Madagascar</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MW'\" i18n=\"@@bb-country-name.MW\"\n    >Malawi</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MY'\" i18n=\"@@bb-country-name.MY\"\n    >Malaysia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MV'\" i18n=\"@@bb-country-name.MV\"\n    >Maldives</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ML'\" i18n=\"@@bb-country-name.ML\"\n    >Mali</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MT'\" i18n=\"@@bb-country-name.MT\"\n    >Malta</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MH'\" i18n=\"@@bb-country-name.MH\"\n    >Marshall Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MQ'\" i18n=\"@@bb-country-name.MQ\"\n    >Martinique</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MR'\" i18n=\"@@bb-country-name.MR\"\n    >Mauritania</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MU'\" i18n=\"@@bb-country-name.MU\"\n    >Mauritius</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'YT'\" i18n=\"@@bb-country-name.YT\"\n    >Mayotte</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MX'\" i18n=\"@@bb-country-name.MX\"\n    >Mexico</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'FM'\" i18n=\"@@bb-country-name.FM\"\n    >Micronesia, Federated States of</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MD'\" i18n=\"@@bb-country-name.MD\"\n    >Moldova, Republic of</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MC'\" i18n=\"@@bb-country-name.MC\"\n    >Monaco</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MN'\" i18n=\"@@bb-country-name.MN\"\n    >Mongolia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ME'\" i18n=\"@@bb-country-name.ME\"\n    >Montenegro</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MS'\" i18n=\"@@bb-country-name.MS\"\n    >Montserrat</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MA'\" i18n=\"@@bb-country-name.MA\"\n    >Morocco</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MZ'\" i18n=\"@@bb-country-name.MZ\"\n    >Mozambique</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MM'\" i18n=\"@@bb-country-name.MM\"\n    >Myanmar</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NA'\" i18n=\"@@bb-country-name.NA\"\n    >Namibia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NR'\" i18n=\"@@bb-country-name.NR\"\n    >Nauru</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NP'\" i18n=\"@@bb-country-name.NP\"\n    >Nepal</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NL'\" i18n=\"@@bb-country-name.NL\"\n    >Netherlands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NC'\" i18n=\"@@bb-country-name.NC\"\n    >New Caledonia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NZ'\" i18n=\"@@bb-country-name.NZ\"\n    >New Zealand</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NI'\" i18n=\"@@bb-country-name.NI\"\n    >Nicaragua</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NE'\" i18n=\"@@bb-country-name.NE\"\n    >Niger</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NG'\" i18n=\"@@bb-country-name.NG\"\n    >Nigeria</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NU'\" i18n=\"@@bb-country-name.NU\"\n    >Niue</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NF'\" i18n=\"@@bb-country-name.NF\"\n    >Norfolk Island</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MP'\" i18n=\"@@bb-country-name.MP\"\n    >Northern Mariana Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'NO'\" i18n=\"@@bb-country-name.NO\"\n    >Norway</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PS'\" i18n=\"@@bb-country-name.PS\"\n    >Occupied Palestinian Territory</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'OM'\" i18n=\"@@bb-country-name.OM\"\n    >Oman</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PK'\" i18n=\"@@bb-country-name.PK\"\n    >Pakistan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PW'\" i18n=\"@@bb-country-name.PW\"\n    >Palau</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PA'\" i18n=\"@@bb-country-name.PA\"\n    >Panama</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PG'\" i18n=\"@@bb-country-name.PG\"\n    >Papua New Guinea</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PY'\" i18n=\"@@bb-country-name.PY\"\n    >Paraguay</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PE'\" i18n=\"@@bb-country-name.PE\"\n    >Peru</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PH'\" i18n=\"@@bb-country-name.PH\"\n    >Philippines</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PN'\" i18n=\"@@bb-country-name.PN\"\n    >Pitcairn</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PL'\" i18n=\"@@bb-country-name.PL\"\n    >Poland</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PT'\" i18n=\"@@bb-country-name.PT\"\n    >Portugal</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PR'\" i18n=\"@@bb-country-name.PR\"\n    >Puerto Rico</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'QA'\" i18n=\"@@bb-country-name.QA\"\n    >Qatar</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'RE'\" i18n=\"@@bb-country-name.RE\"\n    >Reunion</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'RO'\" i18n=\"@@bb-country-name.RO\"\n    >Romania</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'RU'\" i18n=\"@@bb-country-name.RU\"\n    >Russian Federation</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'RW'\" i18n=\"@@bb-country-name.RW\"\n    >Rwanda</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'BL'\" i18n=\"@@bb-country-name.BL\"\n    >Saint Barthelemy</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SH'\" i18n=\"@@bb-country-name.SH\"\n    >Saint Helena, Ascension and Tristan da Cunha</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'KN'\" i18n=\"@@bb-country-name.KN\"\n    >Saint Kitts and Nevis</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LC'\" i18n=\"@@bb-country-name.LC\"\n    >Saint Lucia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'MF'\" i18n=\"@@bb-country-name.MF\"\n    >Saint Martin (French part)</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'PM'\" i18n=\"@@bb-country-name.PM\"\n    >Saint Pierre and Miquelon</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'VC'\" i18n=\"@@bb-country-name.VC\"\n    >Saint Vincent and The Grenadines</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'WS'\" i18n=\"@@bb-country-name.WS\"\n    >Samoa</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SM'\" i18n=\"@@bb-country-name.SM\"\n    >San Marino</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ST'\" i18n=\"@@bb-country-name.ST\"\n    >Sao Tome and Principe</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SA'\" i18n=\"@@bb-country-name.SA\"\n    >Saudi Arabia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SN'\" i18n=\"@@bb-country-name.SN\"\n    >Senegal</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'RS'\" i18n=\"@@bb-country-name.RS\"\n    >Serbia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SC'\" i18n=\"@@bb-country-name.SC\"\n    >Seychelles</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SL'\" i18n=\"@@bb-country-name.SL\"\n    >Sierra Leone</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SG'\" i18n=\"@@bb-country-name.SG\"\n    >Singapore</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SX'\" i18n=\"@@bb-country-name.SX\"\n    >Sint Maarten (Dutch part)</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SK'\" i18n=\"@@bb-country-name.SK\"\n    >Slovakia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SI'\" i18n=\"@@bb-country-name.SI\"\n    >Slovenia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SB'\" i18n=\"@@bb-country-name.SB\"\n    >Solomon Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SO'\" i18n=\"@@bb-country-name.SO\"\n    >Somalia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ZA'\" i18n=\"@@bb-country-name.ZA\"\n    >South Africa</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GS'\" i18n=\"@@bb-country-name.GS\"\n    >South Georgia and the South Sandwich Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ES'\" i18n=\"@@bb-country-name.ES\"\n    >Spain</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'LK'\" i18n=\"@@bb-country-name.LK\"\n    >Sri Lanka</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SD'\" i18n=\"@@bb-country-name.SD\"\n    >Sudan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SR'\" i18n=\"@@bb-country-name.SR\"\n    >Suriname</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SJ'\" i18n=\"@@bb-country-name.SJ\"\n    >Svalbard and Jan Mayen</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SZ'\" i18n=\"@@bb-country-name.SZ\"\n    >Swaziland</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SE'\" i18n=\"@@bb-country-name.SE\"\n    >Sweden</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'CH'\" i18n=\"@@bb-country-name.CH\"\n    >Switzerland</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'SY'\" i18n=\"@@bb-country-name.SY\"\n    >Syrian Arab Republic</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TW'\" i18n=\"@@bb-country-name.TW\"\n    >Taiwan, Province of China</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TJ'\" i18n=\"@@bb-country-name.TJ\"\n    >Tajikistan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TZ'\" i18n=\"@@bb-country-name.TZ\"\n    >Tanzania, United Republic of</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TH'\" i18n=\"@@bb-country-name.TH\"\n    >Thailand</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TL'\" i18n=\"@@bb-country-name.TL\"\n    >Timor-Leste</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TG'\" i18n=\"@@bb-country-name.TG\"\n    >Togo</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TK'\" i18n=\"@@bb-country-name.TK\"\n    >Tokelau</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TO'\" i18n=\"@@bb-country-name.TO\"\n    >Tonga</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TT'\" i18n=\"@@bb-country-name.TT\"\n    >Trinidad and Tobago</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TN'\" i18n=\"@@bb-country-name.TN\"\n    >Tunisia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TR'\" i18n=\"@@bb-country-name.TR\"\n    >Turkey</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TM'\" i18n=\"@@bb-country-name.TM\"\n    >Turkmenistan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TC'\" i18n=\"@@bb-country-name.TC\"\n    >Turks and Caicos Islands</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'TV'\" i18n=\"@@bb-country-name.TV\"\n    >Tuvalu</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'UG'\" i18n=\"@@bb-country-name.UG\"\n    >Uganda</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'UA'\" i18n=\"@@bb-country-name.UA\"\n    >Ukraine</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'AE'\" i18n=\"@@bb-country-name.AE\"\n    >United Arab Emirates</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'GB'\" i18n=\"@@bb-country-name.GB\"\n    >United Kingdom</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'US'\" i18n=\"@@bb-country-name.US\"\n    >United States</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'UY'\" i18n=\"@@bb-country-name.UY\"\n    >Uruguay</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'UZ'\" i18n=\"@@bb-country-name.UZ\"\n    >Uzbekistan</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'VU'\" i18n=\"@@bb-country-name.VU\"\n    >Vanuatu</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'VE'\" i18n=\"@@bb-country-name.VE\"\n    >Venezuela, Bolivarian Republic of</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'VN'\" i18n=\"@@bb-country-name.VN\"\n    >Viet Nam</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'VG'\" i18n=\"@@bb-country-name.VG\"\n    >Virgin Islands, British</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'VI'\" i18n=\"@@bb-country-name.VI\"\n    >Virgin Islands, U.S.</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'WF'\" i18n=\"@@bb-country-name.WF\"\n    >Wallis and Futuna</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'EH'\" i18n=\"@@bb-country-name.EH\"\n    >Western Sahara</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'YE'\" i18n=\"@@bb-country-name.YE\"\n    >Yemen</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ZM'\" i18n=\"@@bb-country-name.ZM\"\n    >Zambia</ng-container\n  >\n  <ng-container *ngSwitchCase=\"'ZW'\" i18n=\"@@bb-country-name.ZW\"\n    >Zimbabwe</ng-container\n  >\n</ng-container>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { addressToString } from '../../helpers/type-helpers';\nimport { Address } from '../../models/types';\n\n@Component({\n  selector: 'bb-full-address',\n  template: `\n    <span class=\"break-word\" data-role=\"full-address-details\">\n      {{ hostRef.format() }},\n      <bb-country-name\n        *ngIf=\"address?.country\"\n        [countryCode]=\"address?.country\"\n      ></bb-country-name>\n    </span>\n  `,\n})\nexport class FullAddressComponent implements OnInit {\n  hostRef = this;\n\n  /**\n   * Object containing all the address fields\n   */\n  @Input() address!: Address;\n\n  ngOnInit() {\n    if (!this.address) {\n      console.warn('Please provide a valid `address` input');\n    }\n  }\n\n  format() {\n    return addressToString(this.address);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { AbstractControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { toggleTabIndex } from '../../helpers/dom-helpers';\nimport { isAddressTruthy } from '../../helpers/type-helpers';\nimport { Address, ViewType } from '../../models/types';\n\n@Component({\n  selector: 'bb-address-item-details',\n  templateUrl: './address-details.component.html',\n})\nexport class AddressDetailsComponent implements OnInit, OnDestroy, OnChanges {\n  private static _id = 0;\n  readonly id = AddressDetailsComponent._id++;\n\n  /**\n   * The parent formGroup\n   */\n  @Input() addressForm!: FormGroup;\n\n  /**\n   * Type of address\n   */\n  @Input() addressType!: string;\n\n  /**\n   * Instance that holds the address details\n   */\n  @Input() address: Address = {};\n\n  /**\n   * Flag that denoted if contact address is copied\n   */\n  @Input() isContactAddressCopied = false;\n  /**\n   * List of states in the address group\n   */\n  @Input() states?: Array<{ label: string; value: string | number }>;\n  /**\n   * List of countries in the address group\n   */\n  @Input() countries?: Array<{ label: string; value: string | undefined }>;\n  /**\n   * Flag to hide country input in the address component\n   */\n  @Input() hideCountry = false;\n\n  /**\n   * Type of address view. Possible values `FORM`| `CARD`. Defaults to `FORM`\n   */\n  @Input() viewType = ViewType.BUTTON;\n\n  /**\n   * Flag to denote if the debit account has only closed payment permissions\n   * Default value is `false`\n   */\n  @Input() isClosedPayment = false;\n\n  /**\n   * Event emitted when address is submitted\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() submit = new EventEmitter();\n  /**\n   * Event emitted when address is reset\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() reset = new EventEmitter();\n\n  /**\n   * Event emitted when address is discarded\n   */\n  @Output() discard = new EventEmitter();\n\n  /**\n   * Event emitted when address is deleted\n   */\n  @Output() delete = new EventEmitter();\n\n  /**\n   * Event emitted when address is editted\n   */\n  @Output() edit = new EventEmitter();\n\n  /**\n   * Event emitted when add address action is triggered\n   */\n  @Output() add = new EventEmitter();\n  private valueChangeSubscription?: Subscription;\n  private requiredFields = ['addressLine1', 'postCode', 'town'];\n\n  constructor(private readonly elRef: ElementRef) {}\n\n  ngOnInit() {\n    if (!this.hideCountry) {\n      this.requiredFields.push('country');\n    }\n    this.markFieldsAsPristine();\n    if (!this.isAddressTruthy()) {\n      this.viewType = ViewType.BUTTON;\n      this.reset.emit();\n    }\n\n    this.valueChangeSubscription = this.addressForm.valueChanges.subscribe(\n      () => {\n        this.address = this.addressForm.value;\n        if (this.viewType !== ViewType.FORM) {\n          if (this.isAddressTruthy()) {\n            this.submit.emit();\n          } else if (this.viewType === ViewType.CARD) {\n            this.reset.emit();\n          }\n        }\n      }\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const validator = this.addressForm?.controls['addressLine1']?.validator;\n    const currentView = changes['viewType']?.currentValue;\n\n    if (changes['viewType']) {\n      if (currentView === ViewType.FORM) {\n        if (!validator) {\n          this.toggleValidators(true);\n        }\n      } else {\n        if (currentView === ViewType.CARD && !this.isAddressTruthy()) {\n          this.reset.emit();\n        }\n        if (validator) {\n          this.toggleValidators(false);\n        }\n      }\n    }\n  }\n\n  markFieldsAsPristine() {\n    this.requiredFields.forEach((controlName: string) => {\n      const control: AbstractControl = this.addressForm.controls[controlName];\n      if (control) {\n        control.markAsUntouched();\n        control.markAsPristine();\n      }\n    });\n  }\n\n  addAddress() {\n    if (this.countries?.length === 1) {\n      this.addressForm.patchValue({ country: this.countries[0].value });\n    }\n    if (this.addressForm.touched) {\n      // This prevents address form from showing errors before saving an address\n      this.addressForm.markAsUntouched();\n    }\n    this.add.emit();\n  }\n\n  editAddress() {\n    this.edit.emit();\n  }\n\n  discardAddress() {\n    this.discard.emit();\n  }\n\n  deleteAddress() {\n    this.delete.emit();\n  }\n\n  submitAddress() {\n    if (this.viewType === ViewType.FORM) {\n      this.addressForm.markAsDirty();\n      this.addressForm.markAllAsTouched();\n    }\n    this.submit.emit();\n  }\n\n  toggleValidators(addValidators: boolean) {\n    this.requiredFields.forEach((controlName: string) => {\n      const control: AbstractControl = this.addressForm.controls[controlName];\n      const validators = addValidators ? [Validators.required] : null;\n      if (control) {\n        control.setValidators(validators);\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  selectCountry(country: string) {\n    this.addressForm.patchValue({ country });\n  }\n\n  isAddressTruthy() {\n    return isAddressTruthy(this.addressForm?.value);\n  }\n\n  onFocusout() {\n    toggleTabIndex(\n      '.bb-input-validation-message',\n      this.elRef.nativeElement,\n      false\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"address__view-btn\" [hidden]=\"viewType !== 'BUTTON'\">\n  <button\n    bbButton\n    color=\"link\"\n    (click)=\"addAddress()\"\n    class=\"bb-text-wrap\"\n    data-role=\"control-point\"\n    [disabled]=\"isClosedPayment\"\n  >\n    <bb-icon-ui class=\"mr-2\" name=\"control-point\"></bb-icon-ui>\n    <ng-container i18n=\"@@address-data.add.address.label\"\n      >Add {{ addressType | lowercase }} address</ng-container\n    >\n  </button>\n</div>\n\n<div\n  class=\"address__container--collapsed card card-sm card--highlight card--shadowless\"\n  [hidden]=\"viewType !== 'CARD'\"\n>\n  <div class=\"card-body\">\n    <div class=\"address__container-header bb-stack justify-content-between\">\n      <div class=\"address-label bb-highlight bb-block--md\">\n        <ng-container *ngTemplateOutlet=\"addressTitle\"></ng-container>\n      </div>\n      <div *ngIf=\"!isClosedPayment\">\n        <button\n          bbButton\n          data-role=\"control-point\"\n          color=\"link\"\n          circle=\"true\"\n          (click)=\"editAddress()\"\n          class=\"edit-btn\"\n          bbTooltip=\"Edit address\"\n          [attr.aria-labelledby]=\"'addressInfo_' + id\"\n          triggers=\"hover focus\"\n          i18n-bbTooltip=\"@@address-data.contactaddress.card.buttons.edit.label\"\n        >\n          <bb-icon-ui color=\"dark\" name=\"edit\"></bb-icon-ui>\n        </button>\n        <button\n          bbButton\n          color=\"link\"\n          circle=\"true\"\n          (click)=\"deleteAddress()\"\n          class=\"address__delete-btn\"\n          bbTooltip=\"Delete address\"\n          [attr.aria-labelledby]=\"'addressInfo_' + id\"\n          triggers=\"hover focus\"\n          i18n-bbTooltip=\"\n            @@address-data.contactaddress.card.buttons.delete.label\"\n        >\n          <bb-icon-ui color=\"dark\" name=\"delete\"></bb-icon-ui>\n        </button>\n      </div>\n    </div>\n    <div class=\"address__details--collapsed\" id=\"addressInfo_{{ id }}\">\n      <span class=\"sr-only\"\n        ><ng-container *ngTemplateOutlet=\"addressTitle\"></ng-container\n      ></span>\n      <bb-full-address [address]=\"addressForm?.value\"></bb-full-address>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"address__container card card-sm card--highlight card--shadowless\"\n  *ngIf=\"viewType === 'FORM'\"\n>\n  <div class=\"card-body\">\n    <fieldSet [formGroup]=\"addressForm\">\n      <legend class=\"sr-only\" i18n=\"@@address-data.addressGroup.title\">\n        Address details\n      </legend>\n      <div class=\"form-group\">\n        <div>\n          <div\n            class=\"address-label bb-highlight bb-block--md\"\n            data-role=\"address-label\"\n            i18n=\"@@address-data.contactAddress.label\"\n          >\n            {{ addressType | titlecase }} address\n          </div>\n          <div class=\"form-group\">\n            <bb-input-text-ui\n              label=\"Address line 1\"\n              i18n-label=\"@@address-data.addressLine1.label\"\n              formControlName=\"addressLine1\"\n              data-role=\"addressLine1\"\n              [maxLength]=\"70\"\n              [attr.aria-describedby]=\"addressLine1?.id + '__error'\"\n              #addressLine1\n            >\n            </bb-input-text-ui>\n            <bb-input-validation-message-ui\n              [attr.id]=\"addressLine1?.id + '__error'\"\n              *ngIf=\"addressForm.controls['addressLine1'] as formControl\"\n              [showErrors]=\"formControl?.touched && formControl?.invalid\"\n              (focusout)=\"onFocusout()\"\n            >\n              <ng-container *ngIf=\"formControl?.errors?.required\">\n                <span i18n=\"@@address-data.addressLine1.requiredError\"\n                  >Address is required.</span\n                >\n              </ng-container>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <bb-input-text-ui\n            label=\"Address line 2 (Optional)\"\n            i18n-label=\"@@address-data.addressLine2.label\"\n            formControlName=\"addressLine2\"\n            data-role=\"addressLine2\"\n            [maxLength]=\"70\"\n            #addressLine2\n          >\n          </bb-input-text-ui>\n        </div>\n        <div class=\"form-group\">\n          <bb-input-text-ui\n            label=\"Address line 3 (Optional)\"\n            i18n-label=\"@@address-data.addressLine3.label\"\n            formControlName=\"streetName\"\n            data-role=\"streetName\"\n            [maxLength]=\"70\"\n            #addressLine3\n          >\n          </bb-input-text-ui>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-4 form-group\">\n          <bb-input-text-ui\n            label=\"Postal code\"\n            i18n-label=\"@@address-data.postCode.label\"\n            formControlName=\"postCode\"\n            data-role=\"postCode\"\n            #postCode\n            [maxLength]=\"16\"\n            [attr.aria-describedby]=\"postCode?.id + '__error'\"\n          >\n          </bb-input-text-ui>\n          <bb-input-validation-message-ui\n            [attr.id]=\"postCode?.id + '__error'\"\n            *ngIf=\"addressForm.controls['postCode'] as formControl\"\n            [showErrors]=\"formControl?.touched && formControl?.invalid\"\n            (focusout)=\"onFocusout()\"\n          >\n            <ng-container *ngIf=\"formControl?.errors?.required\">\n              <span i18n=\"@@address-data.postCode.requiredError\"\n                >Postal code is required.</span\n              >\n            </ng-container>\n          </bb-input-validation-message-ui>\n        </div>\n        <div class=\"col-md-8 form-group\">\n          <bb-input-text-ui\n            #contactCity\n            label=\"City\"\n            formControlName=\"town\"\n            data-role=\"town\"\n            [maxLength]=\"35\"\n            [attr.aria-describedby]=\"contactCity?.id + '__error'\"\n          >\n          </bb-input-text-ui>\n          <bb-input-validation-message-ui\n            [attr.id]=\"contactCity?.id + '__error'\"\n            *ngIf=\"addressForm.controls['town'] as formControl\"\n            [showErrors]=\"formControl?.touched && formControl?.invalid\"\n            (focusout)=\"onFocusout()\"\n          >\n            <ng-container *ngIf=\"formControl?.errors?.required\">\n              <span i18n=\"@@address-data.city.requiredError\"\n                >City is required.</span\n              >\n            </ng-container>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6 form-group\">\n          <ng-container *ngIf=\"states?.length > 0; else stateText\">\n            <bb-dropdown-single-select-ui\n              label=\"State or area (Optional)\"\n              i18n-label=\"@@address-data.countrySubDivision.label\"\n              data-role=\"stateOrArea\"\n              formControlName=\"countrySubDivision\"\n              placeholder=\"Select\"\n              i18n-placeholder=\"@@address-data.countrySubDivision.placeholder\"\n            >\n              <bb-dropdown-single-select-option-ui\n                *ngFor=\"let option of states\"\n                [value]=\"option.value\"\n                [label]=\"option.label\"\n              >\n              </bb-dropdown-single-select-option-ui>\n            </bb-dropdown-single-select-ui>\n          </ng-container>\n\n          <ng-template #stateText>\n            <bb-input-text-ui\n              #countrySubDivision\n              label=\"State or area (Optional)\"\n              data-role=\"countrySubDivision\"\n              i18n-label=\"@@address-data.countrySubDivision.label\"\n              formControlName=\"countrySubDivision\"\n              [maxLength]=\"35\"\n            >\n            </bb-input-text-ui>\n          </ng-template>\n        </div>\n        <div\n          class=\"col-md-6 form-group\"\n          data-role=\"country\"\n          *ngIf=\"!hideCountry\"\n        >\n          <ng-container *ngIf=\"countries?.length > 0; else countryText\">\n            <bb-dropdown-single-select-ui\n              label=\"Country\"\n              data-role=\"country\"\n              i18n-label=\"@@address-data.country.label\"\n              formControlName=\"country\"\n              placeholder=\"Select\"\n              i18n-placeholder=\"@@address-data.country.placeholder\"\n              [attr.aria-describedby]=\"countryEl?.id + '__error'\"\n              #countryEl\n            >\n              <bb-dropdown-single-select-option-ui\n                *ngFor=\"let option of countries\"\n                [value]=\"option.value\"\n                [label]=\"option.label\"\n              >\n              </bb-dropdown-single-select-option-ui>\n            </bb-dropdown-single-select-ui>\n            <bb-input-validation-message-ui\n              [attr.id]=\"countryEl?.id + '__error'\"\n              *ngIf=\"addressForm.controls['country'] as formControl\"\n              [showErrors]=\"formControl?.touched && formControl?.invalid\"\n              (focusout)=\"onFocusout()\"\n            >\n              <span i18n=\"@@address-data.country.requiredError\"\n                >Country is required.</span\n              >\n            </bb-input-validation-message-ui>\n          </ng-container>\n          <ng-template #countryText>\n            <bb-input-text-ui\n              label=\"Country\"\n              i18n-label=\"@@address-data.country.label\"\n              formControlName=\"country\"\n              [attr.aria-describedby]=\"countryTextEl?.id + '__error'\"\n              #countryTextEl\n            >\n            </bb-input-text-ui>\n            <bb-input-validation-message-ui\n              [attr.id]=\"countryTextEl?.id + '__error'\"\n              *ngIf=\"addressForm.controls['country'] as formControl\"\n              [showErrors]=\"formControl?.touched && formControl?.invalid\"\n              (focusout)=\"onFocusout()\"\n            >\n              <span i18n=\"@@address-data.country.requiredError\"\n                >Country is required.</span\n              >\n            </bb-input-validation-message-ui>\n          </ng-template>\n        </div>\n        <div class=\"col-md-6 form-group\" *ngIf=\"hideCountry\">\n          <div class=\"bb-label\" i18n=\"@@address-data.country-readonly.label\">\n            Country\n          </div>\n          <div class=\"form-control disabled bg-light\">\n            <bb-country-name\n              *ngIf=\"this.addressForm.get('country')?.value as countryCode\"\n              [countryCode]=\"countryCode\"\n            ></bb-country-name>\n          </div>\n        </div>\n      </div>\n    </fieldSet>\n    <div class=\"address__btn-container bb-button-bar bb-button-bar--reverse\">\n      <button\n        class=\"address__confirm-btn bb-button-bar__button\"\n        bbButton\n        buttonSize=\"sm\"\n        color=\"primary\"\n        data-role=\"confirm-address\"\n        (click)=\"submitAddress()\"\n      >\n        <ng-container i18n=\"@@address-data.submitAddressBtn.label\"\n          >Confirm address</ng-container\n        >\n      </button>\n      <button\n        class=\"address__cancel-btn bb-button-bar__button\"\n        bbButton\n        buttonSize=\"sm\"\n        color=\"link\"\n        (click)=\"discardAddress()\"\n      >\n        <ng-container i18n=\"@@address-data.discardAddressBtn.label\"\n          >Discard</ng-container\n        >\n      </button>\n    </div>\n  </div>\n</div>\n\n<ng-template #addressTitle>\n  <ng-container i18n=\"@@address-data.addressType.label\">\n    { addressType, select, beneficiary {Beneficiary} client {Client} beneficiary\n    bank {Beneficiary Bank} correspondent bank {Correspondent Bank} intermediary\n    bank {Intermediary Bank} client bank {Client Bank} }\n  </ng-container>\n  <ng-container i18n=\"@@address-data.contactaddress.card.label\">\n    address\n  </ng-container>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-flag-icon',\n  template: `\n    <span\n      *ngIf=\"code\"\n      class=\"flag-icon flag-icon-background flag-icon-{{ code }} flag-icon--{{\n        flagSize\n      }}\"\n    ></span>\n  `,\n})\nexport class FlagIconComponent {\n  code!: string;\n  /**\n   * Size of flag icon. Possible values sm | md | lg. Defaults to md.\n   */\n  @Input() flagSize = 'md';\n  /**\n   * Iso code of the country\n   */\n  @Input() set countryCode(code: string) {\n    this.code = code ? code.toLowerCase() : '';\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { CurrenciesMap, CurrencyToCountryMap } from '../../constants';\nimport { CurrencySelectorConfig } from '../../models';\n\n@Component({\n  selector: 'bb-currency-selector',\n  templateUrl: './currency-selector.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => CurrencySelectorComponent),\n    },\n  ],\n})\nexport class CurrencySelectorComponent implements ControlValueAccessor, OnInit {\n  isDisabled = false;\n  _currencies!: Array<string>;\n  search = new FormControl();\n  currencyEntries!: Array<[string, string]>;\n  filteredCurrencies: Array<string> = [];\n  currencyToCountryMap = CurrencyToCountryMap;\n  currenciesMap = CurrenciesMap;\n  selectedCurrency?: string;\n  value?: string;\n  change = new EventEmitter();\n  showFlags?: boolean;\n  showName?: boolean;\n  isSearchable?: boolean;\n  dividerIndex?: number;\n  searchPlaceholder?: string;\n  dropdownIcon?: string;\n\n  /**\n   * List of currencies setter\n   */\n  @Input() set currencies(currencies: Array<string>) {\n    this._currencies = currencies || [];\n    this.setupCurrencies();\n  }\n\n  /**\n   * Flag to determine component config\n   */\n  @Input() config: CurrencySelectorConfig = {};\n\n  /**\n   * Input that can be used to specify the `aria-labelledby` attribute.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | undefined;\n\n  /**\n   * Selected currency output\n   */\n  @Output() selectCurrency = new EventEmitter<string>();\n\n  setupCurrencies() {\n    this.currencyEntries = this._currencies.map((currency: string) => [\n      currency,\n      this.currenciesMap[currency] ? this.currenciesMap[currency].name : '',\n    ]);\n    this.filteredCurrencies = [...this._currencies];\n    this.selectedCurrency = this.selectedCurrency || this._currencies[0];\n    if (this._currencies.length < 2) {\n      this.isDisabled = true;\n    }\n  }\n\n  selectItem(currency: string) {\n    this.selectedCurrency = currency;\n    this.selectCurrency.emit(currency);\n    this.onChange(currency);\n    this.value = currency;\n  }\n\n  handleSearch(query = '') {\n    if (query) {\n      this.filteredCurrencies = this.currencyEntries.reduce(\n        (acc: Array<string>, [currency, currName]) => {\n          if (\n            currency.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) >\n              -1 ||\n            currName.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) > -1\n          ) {\n            acc.push(currency);\n          }\n          return acc;\n        },\n        []\n      );\n    } else {\n      this.filteredCurrencies = this._currencies;\n    }\n  }\n\n  onChange(_value: string) {}\n\n  onTouched() {}\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: string): void {\n    if (value) {\n      this.selectedCurrency = value;\n    }\n    this.value = value;\n  }\n\n  ngOnInit(): void {\n    this.showFlags = this.config.showFlags || false;\n    this.showName = this.config.showName || false;\n    this.isSearchable = this.config.isSearchable || false;\n    this.dividerIndex = this.config.dividerIndex;\n    this.searchPlaceholder = this.config.searchPlaceholder || '';\n    this.dropdownIcon = this.config.dropdownIcon || 'toggle-down';\n  }\n}\n","<div\n  class=\"d-inline-block\"\n  ngbDropdown\n  #dropdown=\"ngbDropdown\"\n  display=\"static\"\n>\n  <div>\n    <button\n      bbButton\n      ngbDropdownToggle\n      color=\"unstyled\"\n      (blur)=\"onTouched()\"\n      [disabled]=\"isDisabled\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      data-role=\"open-currency-dropdown-list-button\"\n      class=\"bb-currency-selector__toggle form-control d-flex justify-content-between bb-text-support\"\n    >\n      <ng-container *ngIf=\"selectedCurrency\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            currencyTmpl;\n            context: { code: selectedCurrency, selected: true }\n          \"\n        ></ng-container>\n      </ng-container>\n      <bb-icon-ui [name]=\"dropdownIcon\"></bb-icon-ui>\n    </button>\n  </div>\n\n  <div\n    ngbDropdownMenu\n    class=\"dropdown-menu\"\n    [ngClass]=\"{ 'bb-currency-selector__dropdown': isSearchable }\"\n  >\n    <div *ngIf=\"isSearchable\" class=\"bb-block bb-block--md px-3\">\n      <bb-search-box-ui\n        (focus)=\"dropdown.open()\"\n        [formControl]=\"search\"\n        (clear)=\"handleSearch('')\"\n        data-role=\"currency-search\"\n        (ngModelChange)=\"handleSearch(search.value)\"\n        [placeholder]=\"searchPlaceholder || 'Search'\"\n        [attr.aria-label]=\"searchPlaceholder || 'Search'\"\n        [showSearch]=\"true\"\n        [showClear]=\"true\"\n        [autocomplete]=\"'off'\"\n      ></bb-search-box-ui>\n    </div>\n\n    <bb-payments-sr-search-result-info\n      [totalNumber]=\"filteredCurrencies?.length || 0\"\n    >\n    </bb-payments-sr-search-result-info>\n\n    <div *ngIf=\"filteredCurrencies?.length\" class=\"pre-scrollable\">\n      <ng-container *ngFor=\"let currency of filteredCurrencies; index as i\">\n        <button\n          role=\"menuitem\"\n          data-role=\"currency-item\"\n          type=\"button\"\n          class=\"d-sm-flex px-3 py-2 d-flex-row align-items-center btn--unstyled\"\n          (bbKeyboardClick)=\"selectItem(currency); dropdown.close()\"\n          ngbDropdownItem\n        >\n          <ng-container\n            *ngTemplateOutlet=\"currencyTmpl; context: { code: currency }\"\n          ></ng-container>\n        </button>\n        <hr *ngIf=\"dividerIndex === i\" />\n      </ng-container>\n    </div>\n    <ng-container *ngIf=\"!filteredCurrencies?.length && search?.value\">\n      <ng-container *ngTemplateOutlet=\"emptySearch\"></ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template let-code=\"code\" let-selected=\"selected\" #currencyTmpl>\n  <div class=\"d-flex align-items-center\" data-role=\"selected-currency\">\n    <bb-flag-icon\n      *ngIf=\"showFlags\"\n      class=\"mr-2 d-flex\"\n      [countryCode]=\"currencyToCountryMap[code]\"\n      [flagSize]=\"'sm'\"\n      data-role=\"flag-icon\"\n    ></bb-flag-icon>\n    {{ code }}\n    <span\n      *ngIf=\"showName && !selected\"\n      class=\"d-inline-block ml-3 bb-text-support\"\n      >{{ currenciesMap[code] && currenciesMap[code].name }}</span\n    >\n  </div>\n</ng-template>\n\n<ng-template #emptySearch>\n  <div class=\"card-body\">\n    <bb-empty-state-ui\n      data-role=\"no-templates-found\"\n      title=\"No search results\"\n      iconSize=\"xl\"\n      i18n-title=\"@@bb-currency-selector.empty-state-title\"\n      iconModifier=\"search\"\n      [showIcon]=\"false\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n","/**\n * Convert a list of ID references for `aria-` attributes to an attribute value\n */\nexport const idListAttr = (...tokens: any[]): string =>\n  tokens.filter(Boolean).join(' ').toString();\n\nlet _nextId = 0;\nexport function getInputNextId() {\n  return `bb_input_${_nextId++}`;\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Utility service for DOM manipulations\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DomAttributesService {\n  static nextId = 0;\n  private idPrefix = 'bb_element_';\n\n  public generateId() {\n    return `${this.idPrefix}${DomAttributesService.nextId++}`;\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n  Self,\n  Optional,\n} from '@angular/core';\nimport {\n  getNumberOfCurrencyDigits,\n  DecimalPipe,\n  getLocaleNumberSymbol,\n  NumberSymbol,\n} from '@angular/common';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { getInputNextId } from './helpers';\nimport BigNumber from 'bignumber.js';\nimport { DomAttributesService } from './dom-attributes.service';\nimport { idListAttr } from './helpers';\nimport { CurrencySelectorConfig } from '../../models';\n\nexport type ResultType = 'string' | 'number';\nconst defaultIntLength = 13;\nconst defaultDecimalPrecision = 2;\nexport interface CurrencyFieldsState {\n  currency: boolean;\n  integer: boolean;\n  decimal: boolean;\n}\n\n/**\n * @name CurrencyInputComponent\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - aria-describedby\n *  - aria-invalid\n *  - aria-labelledby\n *  - integerLabelSrOnly\n *  - decimalLabelSrOnly\n * @description\n * Component for displaying and managing currency and it amount\n *\n */\n@Component({\n  selector: 'bb-currency-amount-selector',\n  templateUrl: './currency-amount-selector.component.html',\n  providers: [DecimalPipe],\n})\nexport class CurrencyAmountSelectorComponent\n  implements ControlValueAccessor, OnInit, OnChanges, AfterViewInit\n{\n  private currencyList: Array<string> = [];\n  private currencyDisabledState: CurrencyFieldsState = {\n    currency: false,\n    integer: false,\n    decimal: false,\n  };\n  private currency: string | undefined;\n  private intMaxLen: number | undefined;\n  readonly decimalSeparator: string = getLocaleNumberSymbol(\n    this.locale,\n    NumberSymbol.CurrencyDecimal\n  );\n\n  private _decMaxLen: number | undefined;\n\n  /**\n   * Configure the maximum number of decimals.\n   *\n   * When greater than the default number of decimals for the specified currency, this value will take precedence.\n   * Configuring this value can affect the input placeholder.\n   */\n  @Input()\n  get decMaxLen(): number | undefined {\n    return typeof this._decMaxLen === 'number'\n      ? this._decMaxLen\n      : this.getDecimalDigits(this.currency || '');\n  }\n\n  set decMaxLen(value: number | undefined) {\n    this._decMaxLen = value;\n  }\n\n  /**\n   * Number of minimum currency precision. Defaults to 2.\n   */\n  @Input() decMinLen = defaultDecimalPrecision;\n\n  /**\n   * Non-configurable placeholder for the decimal input.\n   * Displays a zero digit for every digit that is allowed in the decimal field.\n   */\n  get decPlaceholder(): string {\n    return '0'.repeat(this.decMaxLen || 0);\n  }\n\n  readonly currControl = new FormControl();\n  readonly intControl = new FormControl();\n  readonly decControl = new FormControl();\n\n  /**\n   * The placeholder for the input. Defaults to 0.\n   */\n  @Input() placeholder = '0';\n  /**\n   * For set output type string/number, by default 'number', when  need work with long number\n   * ( bigger than MAX_SAFE_INTEGER = 9,007,199,254,740,993 ) need to use 'string'\n   */\n  @Input() resultType: ResultType = 'number';\n  /**\n   * Whether there should be only the integer part.\n   * You have to keep in mind, that if you have decimal part, even \".00\"\n   * you will not be able to remove it\n   */\n  @Input() integer = false;\n\n  /**\n   * Whether the input is required. Defaults to false.\n   */\n  @Input() required = false;\n\n  /**\n   * Whether the input is read only. Defaults to false.\n   */\n  @Input() readonly = false;\n\n  /**\n   * Whether the input is disabled. Defaults to false.\n   */\n  @Input()\n  set disabled(disabled: boolean | CurrencyFieldsState) {\n    if (typeof disabled === 'boolean') {\n      this.currencyDisabledState = {\n        currency: disabled,\n        integer: disabled,\n        decimal: disabled,\n      };\n    } else {\n      this.currencyDisabledState = disabled;\n    }\n  }\n\n  get disabled() {\n    return this.currencyDisabledState;\n  }\n\n  /**\n   * Whether integer label is only visible for screen readers.\n   * By default is visible if it is needed to hide change this property\n   * to \"true\" and it will have class \"sr-only\"\n   */\n  @Input() integerLabelSrOnly = false;\n  /**\n   * By default is visible if it is needed to hide change this property\n   * to \"true\" and it will have class \"sr-only\"\n   * By default is hidden and accessible only for screen reader\n   */\n  @Input() decimalLabelSrOnly = false;\n\n  /**\n   * Currency list to be displayed in the dropdown.\n   *\n   * Note: Non-empty currency list is required for the currency symbol\n   * field to be shown. Otherwise, only the amount fields will be shown.\n   *\n   * Additionally, If only a single currency provided, the dropdown of\n   * the currency selection will be disabled and its value set to that single currency\n   */\n  @Input()\n  set currencies(list: Array<string>) {\n    this.currencyList = list;\n    if (this.currencyList && this.currencyList.length > 1) {\n      this.currControl.enable();\n    } else {\n      this.currControl.disable();\n    }\n    // if currency is not set, use first item from the list\n    if (\n      this.currencyList &&\n      (this.currency === undefined ||\n        this.currencyList.indexOf(this.currency) === -1)\n    ) {\n      // [FIXME] Nothing guarantees that the currencyList isn't empty\n      this.updateCurrency(this.currencyList[0]);\n    }\n  }\n\n  /**\n   * Flag that denotes if the currency selector is extended. Defaults to false.\n   */\n  @Input() currencySelectorExtended = false;\n  /**\n   * The currency selector config map.\n   */\n  @Input() currencySelectorConfig: CurrencySelectorConfig = {};\n\n  /**\n   * Whether decimal text is aligned to the right.\n   * By default is false\n   */\n  @Input() isRightAligned = false;\n\n  private _integerId = getInputNextId();\n  private _decimalId = getInputNextId();\n\n  public readonly currencyInputId: string;\n  public readonly currencyLabelId: string;\n  public readonly decimalInputId: string;\n  public readonly decimalLabelId: string;\n  public readonly integerInputId: string;\n  public readonly integerLabelId: string;\n  public readonly validationMessagesId: string;\n  public readonly idListAttr = idListAttr;\n\n  protected initialized = false;\n\n  /**\n   * The id for the integer input. Defaults to unique string.\n   * Used to map the label to the input.\n   */\n  @Input()\n  set integerId(value: string) {\n    this._integerId = value;\n  }\n\n  get integerId() {\n    return this._integerId;\n  }\n\n  /**\n   * The id for the decimal input. Defaults to unique string.\n   * Used to map the label to the input.\n   */\n  @Input()\n  set decimalId(value: string) {\n    this._decimalId = value;\n  }\n\n  get decimalId() {\n    return this._decimalId;\n  }\n\n  /**\n   * The label for the integer input.\n   */\n  @Input() integerLabel = '';\n  /**\n   * The label for the decimal input.\n   */\n  @Input() decimalLabel = '';\n  /**\n   * The label for the currency input.\n   */\n  @Input() currencyLabel = '';\n  /**\n   * @deprecated since version 2.81.0\n   */\n  @Input() labelClasses: string | undefined;\n  /**\n   * Flag is used to allow input negative value\n   */\n  @Input() allowNegativeValue = false;\n  /**\n   * Aria label for the currency dropdown.\n   */\n  @Input() currencyListAriaLabel = 'Currency List Dropdown';\n  /**\n   * Aria label for the currency list with one item.\n   */\n  @Input() currencyListWithOnItemAriaLabel = 'Currency';\n\n  /** */\n  @Input('aria-describedby') ariaDescribedby: string | undefined;\n\n  /** */\n  @Input('aria-labelledby') ariaLabelledby: string | undefined;\n\n  /** */\n  @Input('aria-invalid') ariaInvalid: string | undefined;\n\n  /** */\n  @ViewChild('integerInput', { static: true }) intEl: ElementRef | undefined;\n  /** */\n  @ViewChild('decimalsInput', { static: true }) decEl: ElementRef | undefined;\n\n  constructor(\n    private readonly el: ElementRef,\n    @Inject(LOCALE_ID) private readonly locale: string,\n    private domAttributeService: DomAttributesService,\n    @Optional() @Self() public parentFormControl: NgControl\n  ) {\n    this.currencyInputId = this.domAttributeService.generateId();\n    this.currencyLabelId = this.domAttributeService.generateId();\n    this.decimalInputId = this.domAttributeService.generateId();\n    this.decimalLabelId = this.domAttributeService.generateId();\n    this.integerInputId = this.domAttributeService.generateId();\n    this.integerLabelId = this.domAttributeService.generateId();\n    this.validationMessagesId = this.domAttributeService.generateId();\n\n    BigNumber.config({\n      FORMAT: {\n        // grouping separator of the integer part\n        groupSeparator: ',',\n        // primary grouping size of the integer part\n        groupSize: 3,\n      },\n    });\n    if (this.parentFormControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.parentFormControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.initialized = true;\n    if (!this.integerLabel || !this.decimalLabel) {\n      console.warn(\n        `Found an input from '${this.constructor.name}' without 'label' or 'aria-label' attribute, please provide one of them`\n      );\n    }\n    this.setDisabled(this.currencyDisabledState);\n\n    this.formatInteger();\n\n    console.warn(\n      `The default value of \"decMinLen\" will be undefined from version 6 of ui-ang. \\\n      If you would like to keep the current functionality (to force a minimum of 2 decimals), \\\n      please set the decMinLen property to 2.`\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.disabled) {\n      this.setDisabled(this.currencyDisabledState);\n    }\n  }\n\n  get cur() {\n    return this.currency;\n  }\n\n  get curList() {\n    return this.currencyList;\n  }\n\n  ngAfterViewInit(): void {\n    const len = this.el.nativeElement.getAttribute('maxlength');\n    this.intMaxLen = len ? parseInt(len, 10) : defaultIntLength;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onPress($event: any) {\n    this.focusDecEl($event.key);\n\n    const keyCode = $event.keyCode || $event.which;\n    const key = String.fromCharCode(keyCode);\n\n    // allow to enter 'minus' only at the first position and if correspondent flag is enabled\n    const isLeadingMinusPosition =\n      this.allowNegativeValue &&\n      this.intEl &&\n      this.intEl.nativeElement.selectionStart === 0 &&\n      key === '-';\n\n    // regexp is used here to support both of regular keyboard's numbers and numpad's numbers\n    if (\n      !(isLeadingMinusPosition || /^\\d$/.test(key)) &&\n      $event.keyCode !== 8 &&\n      $event.keyCode !== 9\n    ) {\n      $event.preventDefault();\n    }\n  }\n\n  onInput() {\n    const isFormatted = this.formatInteger();\n    if (isFormatted) {\n      this.triggerChange();\n    }\n  }\n\n  updateCurrency(currency?: string) {\n    this.currency = currency || this.currControl.value;\n    this.triggerChange();\n  }\n\n  checkValues() {\n    if (this.currency === undefined) {\n      return true;\n    }\n    if (!this.decControl.value && !this.intControl.value) {\n      this.onChange({\n        currency: this.currency,\n        amount: '',\n      });\n\n      return true;\n    }\n    return false;\n  }\n\n  formatDecimal(decControl: FormControl) {\n    const { value } = decControl;\n    if (value && this.decMaxLen && value.lenght < this.decMaxLen) {\n      const updatedValue = String(value).padEnd(this.decMaxLen, '0');\n      decControl.patchValue(updatedValue);\n    }\n  }\n\n  triggerChange() {\n    if (this.checkValues()) {\n      return;\n    }\n    const int: string = this.intControl.value || '0';\n    if (this.resultType === 'string') {\n      const whole: string = int.replace(/,/g, '');\n      const dec: string = this.decControl.value || '0';\n      const newAmount = whole + (dec !== '0' ? '.' + dec : '');\n      this.onChange({\n        currency: this.currency,\n        amount: newAmount,\n      });\n    } else {\n      const whole: number = parseInt(int.replace(/[^-\\d]/g, ''), 10);\n      const dec = parseFloat('0.' + this.decControl.value) || 0;\n      const sign = whole < 0 ? -1 : 1;\n      const newAmount = (Math.abs(whole) + dec) * sign;\n      this.onChange({\n        currency: this.currency,\n        amount: newAmount,\n      });\n    }\n  }\n\n  checkNumeric(numeric: any): string {\n    // removed all dashes except the first one\n    if (numeric.length > 0) {\n      numeric = numeric[0] + numeric.slice(1).replace(/-/g, '');\n    }\n\n    numeric = this.sanitizeNumericValue(numeric);\n\n    return numeric === '' ? numeric : new BigNumber(numeric || 0).toFormat();\n  }\n\n  /**\n   * Formats integer to user-friendly format\n   *\n   * @returns Returns true in case of successful formatting, otherwise - false.\n   */\n  formatInteger(): boolean {\n    // The behavior of `formatInteger` is dependent on some component inputs,\n    // so don't format anything until the configuration is available.\n\n    if (!this.initialized || !this.intEl) {\n      return false;\n    }\n    if (!this.intControl.value) {\n      this.intControl.setValue('');\n\n      return true;\n    }\n    const offset =\n      this.intEl.nativeElement.selectionStart - this.intControl.value.length;\n\n    const numeric: string = this.intControl.value.replace(\n      this.allowNegativeValue ? /[^-\\d]/g : /\\D/g,\n      ''\n    );\n    if (numeric === '-') {\n      this.intControl.setValue('-', { emitEvent: false });\n\n      return false;\n    }\n    const newVal = this.checkNumeric(numeric);\n    // extend maxlength (if set) with the amount of special chars\n    if (this.intMaxLen) {\n      const specialCount = newVal.replace(/\\d/g, '').length;\n      this.intEl.nativeElement.setAttribute(\n        'maxlength',\n        '' + (this.intMaxLen + specialCount)\n      );\n    }\n\n    this.intControl.setValue(newVal);\n    const newLen = this.intControl.value.length;\n    const newPos = Math.max(offset + newLen, 0);\n    if (newLen > 0 && document.activeElement === this.intEl.nativeElement) {\n      this.intEl.nativeElement.selectionStart = newPos;\n      this.intEl.nativeElement.selectionEnd = newPos;\n    }\n\n    return true;\n  }\n\n  /**\n   * Event handler for backspace key press, and check if correct number is deleted\n   */\n  onBackspace(el: HTMLInputElement) {\n    if (\n      el.selectionStart &&\n      (el.value[el.selectionStart - 1] === ',' ||\n        el.value[el.selectionStart - 1] === '.')\n    ) {\n      el.setSelectionRange(el.selectionStart - 1, el.selectionStart - 1);\n    }\n  }\n\n  // method is used to correct rendered input's value if user entered '-' and left the field\n  correctInputValue() {\n    this.markAsTouched();\n    const numeric = this.intControl.value;\n    if (numeric !== '-') {\n      return;\n    }\n    this.intControl.setValue('', { emitEvent: false });\n  }\n\n  writeValue(model: any | null): void {\n    if (!model) {\n      return;\n    }\n    // currency cannot be set to nothing\n    if (model.currency) {\n      this.currency = model.currency;\n      this.currControl.setValue(model.currency);\n    }\n\n    if (typeof model.amount === 'string' || typeof model.amount === 'number') {\n      const [whole, decimals] = ('' + model.amount).split('.');\n      this.intControl.setValue(whole);\n      this.decControl.setValue(decimals);\n    } else {\n      this.intControl.setValue('');\n      this.decControl.setValue('');\n    }\n\n    this.formatInteger();\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  markAsTouched() {\n    this.onTouched();\n  }\n\n  protected setDisabled(disableState: CurrencyFieldsState) {\n    disableState.currency\n      ? this.currControl.disable()\n      : this.currControl.enable();\n    disableState.integer ? this.intControl.disable() : this.intControl.enable();\n    disableState.decimal ? this.decControl.disable() : this.decControl.enable();\n  }\n\n  private focusDecEl(key: string): void {\n    if (this.decEl && ['.', ','].indexOf(key) !== -1) {\n      this.decEl.nativeElement.focus();\n    }\n  }\n\n  /**\n   * Make sure that numeric value doesn't exceed max length (if set)\n   * this might happen in case value is pasted to input that has extended max length\n   *\n   * @param numeric\n   */\n  private sanitizeNumericValue(numeric: string): string {\n    if (this.intMaxLen && numeric) {\n      return numeric.slice(0, this.intMaxLen);\n    }\n\n    return numeric;\n  }\n  /**\n   * If currency doesn't have decimal part, decimal placeholder\n   * will be set to default decMinLen\n   */\n  private getDecimalDigits(currency: string) {\n    return getNumberOfCurrencyDigits(currency) === 0\n      ? this.decMinLen\n      : getNumberOfCurrencyDigits(currency);\n  }\n}\n","<div class=\"bb-currency-input\">\n  <div class=\"bb-stack bb-stack--align-bottom\">\n    <div\n      *ngIf=\"curList && curList.length\"\n      class=\"bb-currency-input__currency-selector selector bb-stack__item\"\n    >\n      <label\n        class=\"sr-only\"\n        *ngIf=\"currencyListAriaLabel || currencyListWithOnItemAriaLabel\"\n        [ngClass]=\"labelClasses\"\n        [for]=\"currencyInputId\"\n        [attr.aria-label]=\"currencyListWithOnItemAriaLabel\"\n        id=\"{{ currencyLabelId }}\"\n        [attr.data-role]=\"'currency-input-label'\"\n      >\n        <ng-container\n          [ngSwitch]=\"\n            !!currencyListAriaLabel || !!currencyListWithOnItemAriaLabel\n          \"\n        >\n          <ng-container *ngSwitchCase=\"true\">\n            {{\n              curList && curList.length > 1\n                ? currencyListAriaLabel\n                : currencyListWithOnItemAriaLabel\n            }}\n          </ng-container>\n          <ng-container\n            *ngSwitchDefault\n            i18n=\"\n              Currency label | Label for currency code dropdown of the Currency\n              Input component\n              @@bb-currency-input-ui-wrapper-wrapper.currency-input-label\"\n            >Currency</ng-container\n          >\n        </ng-container>\n      </label>\n      <ng-container\n        *ngIf=\"!currencySelectorExtended\"\n        [ngSwitch]=\"readonly || (curList && curList.length === 1)\"\n      >\n        <input\n          *ngSwitchCase=\"true\"\n          [id]=\"currencyInputId\"\n          [readonly]=\"true\"\n          [required]=\"required\"\n          [attr.aria-invalid]=\"ariaInvalid\"\n          [attr.aria-labelledby]=\"idListAttr(ariaLabelledby, currencyLabelId)\"\n          class=\"form-control bb-text-align-center\"\n          value=\"{{ cur }}\"\n          [attr.data-role]=\"'currency-input-currency-readonly'\"\n        />\n        <bb-dropdown-single-select-ui\n          *ngSwitchDefault\n          [id]=\"currencyInputId\"\n          class=\"bb-block\"\n          [placeholder]=\"curList[0]\"\n          [options]=\"curList\"\n          [readonly]=\"readonly\"\n          [required]=\"required\"\n          [aria-invalid]=\"ariaInvalid\"\n          [aria-labelledby]=\"idListAttr(ariaLabelledby, currencyLabelId)\"\n          (change)=\"updateCurrency(); markAsTouched()\"\n          [formControl]=\"currControl\"\n          [attr.data-role]=\"'currency-input-currency-selector'\"\n        ></bb-dropdown-single-select-ui>\n      </ng-container>\n      <ng-container *ngIf=\"currencySelectorExtended\">\n        <bb-currency-selector\n          [aria-labelledby]=\"idListAttr(ariaLabelledby, currencyLabelId)\"\n          [formControl]=\"currControl\"\n          [currencies]=\"curList\"\n          [config]=\"currencySelectorConfig\"\n          (selectCurrency)=\"updateCurrency($event)\"\n        ></bb-currency-selector>\n      </ng-container>\n    </div>\n    <!-- htmllint label-req-for=\"false\" -->\n    <div\n      class=\"bb-currency-input__integer bb-stack__item bb-stack__item--spacing-sm\"\n      [class.ng-touched]=\"\n        intControl.touched || decControl.touched || parentFormControl?.touched\n      \"\n      [class.ng-invalid]=\"intControl.invalid || parentFormControl?.invalid\"\n    >\n      <label\n        [class.sr-only]=\"!integerLabel || integerLabelSrOnly\"\n        [ngClass]=\"labelClasses\"\n        for=\"{{ integerInputId }}\"\n        id=\"{{ integerLabelId }}\"\n        [attr.data-role]=\"'currency-input-integer-label'\"\n      >\n        <ng-container [ngSwitch]=\"!!integerLabel\">\n          <ng-container *ngSwitchCase=\"true\">\n            {{ integerLabel }}\n          </ng-container>\n          <ng-container\n            *ngSwitchDefault\n            i18n=\"\n              Integer label | Label for integer part of the monetary amount of\n              the Currency Input component\n              @@bb-currency-input-ui-wrapper-wrapper.integer-input-label\"\n            >Integer</ng-container\n          >\n        </ng-container>\n      </label>\n      <input\n        id=\"{{ integerInputId }}\"\n        [attr.aria-describedby]=\"\n          idListAttr(ariaDescribedby, validationMessagesId)\n        \"\n        [attr.aria-invalid]=\"ariaInvalid\"\n        [attr.aria-labelledby]=\"idListAttr(ariaLabelledby, integerLabelId)\"\n        name=\"integer\"\n        type=\"text\"\n        size=\"5\"\n        role=\"textbox\"\n        [readOnly]=\"readonly\"\n        [required]=\"required\"\n        (keydown.backspace)=\"onBackspace(integerInput)\"\n        (keypress)=\"onPress($event)\"\n        (input)=\"onInput()\"\n        (blur)=\"correctInputValue()\"\n        [formControl]=\"intControl\"\n        class=\"form-control bb-text-align-right\"\n        placeholder=\"{{ placeholder }}\"\n        #integerInput\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        autocapitalize=\"off\"\n        spellcheck=\"false\"\n        [attr.data-role]=\"'currency-input-integer-input'\"\n      />\n    </div>\n\n    <span\n      *ngIf=\"!integer && decMaxLen\"\n      class=\"bb-stack__item bb-stack__item--spacing-sm\"\n      >{{ decimalSeparator }}</span\n    >\n\n    <div\n      *ngIf=\"!integer && decMaxLen\"\n      class=\"bb-currency-input__decimal\"\n      [class.ng-touched]=\"\n        intControl.touched || decControl.touched || parentFormControl?.touched\n      \"\n      [class.ng-invalid]=\"intControl.invalid || parentFormControl?.invalid\"\n    >\n      <label\n        [class.sr-only]=\"!decimalLabel || decimalLabelSrOnly\"\n        [ngClass]=\"labelClasses\"\n        for=\"{{ decimalInputId }}\"\n        id=\"{{ decimalLabelId }}\"\n        [attr.data-role]=\"'currency-input-decimal-label'\"\n      >\n        <ng-container [ngSwitch]=\"!!decimalLabel\">\n          <ng-container *ngSwitchCase=\"true\">\n            {{ decimalLabel }}\n          </ng-container>\n          <ng-container\n            *ngSwitchDefault\n            i18n=\"\n              Decimal label | Label for decimal part of the monetary amount of\n              the Currency Input component\n              @@bb-currency-input-ui-wrapper-wrapper.decimal-input-label\"\n          >\n            Decimals\n          </ng-container>\n        </ng-container>\n      </label>\n      <input\n        id=\"{{ decimalInputId }}\"\n        [attr.aria-describedby]=\"\n          idListAttr(ariaDescribedby, validationMessagesId)\n        \"\n        [attr.aria-invalid]=\"ariaInvalid\"\n        [attr.aria-labelledby]=\"idListAttr(ariaLabelledby, decimalLabelId)\"\n        name=\"decimals\"\n        type=\"text\"\n        role=\"textbox\"\n        [readOnly]=\"readonly\"\n        [required]=\"required\"\n        (keypress)=\"onPress($event)\"\n        (input)=\"triggerChange()\"\n        (blur)=\"markAsTouched(); formatDecimal(decControl)\"\n        [formControl]=\"decControl\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'bb-text-align-right': isRightAligned }\"\n        maxlength=\"{{ decMaxLen }}\"\n        placeholder=\"{{ decPlaceholder }}\"\n        #decimalsInput\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        autocapitalize=\"off\"\n        spellcheck=\"false\"\n        [attr.data-role]=\"'input-currency-decimals'\"\n      />\n    </div>\n  </div>\n  <div\n    class=\"bb-input-validation-message\"\n    aria-live=\"assertive\"\n    [id]=\"validationMessagesId\"\n    [attr.data-role]=\"'currency-input-validation-message'\"\n  >\n    <ng-content select=\"[bbValidationMessage]\"></ng-content>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PaymentTypeConfig } from '../../../configs/models/form-items.model';\nimport { getLabelFromPaymentConfig } from '../../helpers/payment-config-helpers';\n\n@Component({\n  selector: 'bb-payord-dynamic-label',\n  template: ` <ng-container>{{ label || defaultLabel }}</ng-container> `,\n})\nexport class PayordDynamicLabelComponent implements OnInit {\n  /**\n   * The payment config\n   */\n  @Input() config!: PaymentTypeConfig;\n  /**\n   * Name of the form field\n   */\n  @Input() name!: string;\n  /**\n   * Fallback label name\n   */\n  @Input() defaultLabel = '';\n  /**\n   * Parent group name of the form field\n   */\n  @Input() parentName = '';\n\n  label = '';\n\n  ngOnInit() {\n    this.label = getLabelFromPaymentConfig(\n      this.name,\n      this.config,\n      this.parentName\n    );\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { InternalAccountFormItem } from '../../models/types';\n\n@Component({\n  selector: 'bb-debitor-details-card',\n  templateUrl: './debitor-details-card.component.html',\n})\nexport class PaymentDebitorDetailsCardComponent {\n  /**\n   * Initiator details\n   */\n  @Input() details!: InternalAccountFormItem & { IBAN: string };\n}\n","<div class=\"bb-payment-account-details-card h-100\">\n  <div class=\"bb-payment-account-details-card__header\">\n    <bb-icon-ui\n      backgroundType=\"square\"\n      color=\"secondary\"\n      size=\"sm\"\n      name=\"current-accounts\"\n    ></bb-icon-ui>\n    <div class=\"bb-text-bold break-word\">\n      <bb-amount-ui\n        [mapCurrency]=\"false\"\n        [amount]=\"details?.balance\"\n        [currency]=\"details?.currency\"\n      ></bb-amount-ui>\n    </div>\n  </div>\n  <div class=\"bb-payment-account-details-card__body justify-content-start\">\n    <div class=\"bb-text-bold break-word\" data-role=\"debit-account-name\">\n      {{ details?.alias || details?.name }}\n    </div>\n    <div\n      class=\"bb-text-support bb-subtitle contextual-alternates-off\"\n      data-role=\"debit-account-number\"\n    >\n      {{ details?.accountNumber || details?.IBAN }}\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CounterPartyDetails } from '../../../configs/models/form-items.model';\n\n@Component({\n  selector: 'bb-creditor-details-card',\n  templateUrl: './creditor-details-card.component.html',\n})\nexport class PaymentCreditorDetailsCardComponent {\n  /**\n   * Details of the counterparty\n   */\n  @Input() details!: CounterPartyDetails & { IBAN: string };\n}\n","<div class=\"bb-payment-account-details-card h-100\">\n  <div class=\"bb-payment-account-details-card__header\" aria-hidden=\"true\">\n    <bb-avatar-ui [name]=\"details?.name\"></bb-avatar-ui>\n    <bb-flag-icon\n      [countryCode]=\"details?.creditorBank?.postalAddress?.country\"\n      flagSize=\"lg\"\n    ></bb-flag-icon>\n  </div>\n  <div class=\"bb-payment-account-details-card__body justify-content-start\">\n    <div class=\"bb-text-bold break-word\" data-role=\"creditor-name\">\n      {{ details?.alias || details?.name }}\n    </div>\n    <div class=\"bb-text-support bb-subtitle\" data-role=\"creditor-number\">\n      <ng-container\n        data-role=\"creditor-account-number-with-branch-code\"\n        *ngIf=\"details?.creditorBank?.bankBranchCode\"\n        >{{ details?.creditorBank?.bankBranchCode }} /\n        {{ details?.accountNumber || details?.IBAN }}</ng-container\n      >\n      <ng-container\n        data-role=\"creditor-account-number\"\n        *ngIf=\"!details?.creditorBank?.bankBranchCode\"\n        >{{ details?.accountNumber || details.IBAN }}</ng-container\n      >\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { PaymentTypeConfig } from '../../../configs/models/form-items.model';\nimport { getDateOnly, getRelativeDate } from '../../helpers/date-helpers';\nimport { ScheduleItem } from '../schedule/schedule.component';\n\n@Component({\n  selector: 'bb-payord-schedule-details',\n  templateUrl: './schedule-details.component.html',\n})\nexport class PayordScheduleDetailsComponent {\n  /**\n   * Payment schedule details\n   */\n  @Input() data!: ScheduleItem;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n\n  isRelativeDate(date: string): string {\n    const today = getRelativeDate();\n    const tomorrow = getRelativeDate(1);\n    const _date = getDateOnly(new Date(date));\n    let relativeDate = '';\n\n    if (_date === today) {\n      relativeDate = 'today';\n    } else if (_date === tomorrow) {\n      relativeDate = 'tomorrow';\n    }\n\n    return relativeDate;\n  }\n}\n","<div class=\"row\">\n  <ng-container *ngIf=\"data?.frequency?.value || data?.frequency as freq\">\n    <div class=\"col-md-6 bb-block bb-block--md\" *ngIf=\"data?.startDate\">\n      <div class=\"bb-text-bold\">\n        <bb-payord-dynamic-label\n          *ngIf=\"freq === 'ONCE'\"\n          name=\"startDate\"\n          [config]=\"paymentConfig\"\n          parentName=\"schedule\"\n          defaultLabel=\"Execution date\"\n          i18n-defaultLabel=\"@@schedule-details.execute-on.label\"\n        ></bb-payord-dynamic-label>\n        <bb-payord-dynamic-label\n          *ngIf=\"freq !== 'ONCE'\"\n          name=\"startDate\"\n          [config]=\"paymentConfig\"\n          parentName=\"schedule\"\n          defaultLabel=\"Start on\"\n          i18n-defaultLabel=\"@@schedule-details.start-date.label\"\n        ></bb-payord-dynamic-label>\n      </div>\n      <div data-role=\"execution-date\">\n        {{ data?.startDate | date: 'mediumDate' }}\n        <span i18n=\"@@schedule-details.execution-date.relative-date.label\">\n          {isRelativeDate(data?.startDate), select, today {(Today)} tomorrow\n          {(Tomorrow)}}\n        </span>\n      </div>\n    </div>\n\n    <div class=\"col-md-6 bb-block bb-block--md\" *ngIf=\"freq !== 'ONCE'\">\n      <div class=\"bb-text-bold\">\n        <bb-payord-dynamic-label\n          name=\"frequency\"\n          [config]=\"paymentConfig\"\n          parentName=\"schedule\"\n          defaultLabel=\"Frequency\"\n          i18n-defaultLabel=\"@@schedule-details.frequency.label\"\n        ></bb-payord-dynamic-label>\n      </div>\n\n      <div data-role=\"frequency-value\" i18n=\"@@schedule-details.frequency\">\n        {freq, select, DAILY {Daily} WEEKLY {Weekly} BIWEEKLY {Bi-Weekly}\n        MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY {Annually}}\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"(data?.frequency?.value || data?.frequency) !== 'ONCE'\">\n    <div\n      class=\"col-md-6 bb-block bb-block--md\"\n      *ngIf=\"data?.endType === 'after' && data?.repeat\"\n    >\n      <div class=\"bb-text-bold\" data-role=\"end-after-label\">\n        <bb-payord-dynamic-label\n          name=\"repeat\"\n          [config]=\"paymentConfig\"\n          parentName=\"schedule\"\n          defaultLabel=\"End after\"\n          i18n-defaultLabel=\"@@schedule-details.end-after.label\"\n        ></bb-payord-dynamic-label>\n      </div>\n      <div data-role=\"end-after\">\n        {{ data?.repeat }}\n        <span i18n=\"@@schedule-details.occurrences.label\">occurrences</span>\n      </div>\n    </div>\n    <div\n      class=\"col-md-6 bb-block bb-block--md\"\n      *ngIf=\"data?.endType === 'on' || data?.endType === 'never'\"\n    >\n      <div class=\"bb-text-bold\" data-role=\"end-date-label\">\n        <bb-payord-dynamic-label\n          name=\"endDate\"\n          [config]=\"paymentConfig\"\n          parentName=\"schedule\"\n          defaultLabel=\"End on\"\n          i18n-defaultLabel=\"@@schedule-details.end-date.label\"\n        ></bb-payord-dynamic-label>\n      </div>\n      <div *ngIf=\"data?.endType === 'on'\" data-role=\"end-date\">\n        {{ data?.endDate | date: 'mediumDate' }}\n        <span i18n=\"@@schedule-details-end-date.relative-date.label\">\n          {isRelativeDate(data?.endDate), select, today {(Today)} tomorrow\n          {(Tomorrow)}}\n        </span>\n      </div>\n      <div\n        *ngIf=\"data?.endType === 'never'\"\n        i18n=\"@@manage-payments.payment.details.endDate.never\"\n        data-role=\"payment-recurring-end-date-never-ending\"\n      >\n        Never ending\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import '@angular/localize/init';\n\nexport const counterpartyI18n = {\n  beneficiaryTitle: $localize`:@@counterparty-details.beneficiary-details.title:Beneficiary details`,\n  beneficiaryDebitTitle: $localize`:@@counterparty-details.client-details.title:Client details`,\n  beneficiaryBankTitle: $localize`:@@counterparty-details.beneficiary-address.title:Beneficiary bank details`,\n  beneficiaryBankDebitTitle: $localize`:@@counterparty-details.lient-address.title:Client bank details`,\n  beneficiaryAddressTitle: $localize`:@@counterparty-details.bank-details.title:Beneficiary address`,\n  beneficiaryAddressDebitTitle: $localize`:@@counterparty-details.client-bank-details.title:Client addresss`,\n};\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  CounterPartyDetails,\n  PaymentTypeConfig,\n} from '../../../configs/models/form-items.model';\nimport { BeneficiaryDetailsTitle } from '../../constants';\nimport { counterpartyI18n } from '../../constants/counterparty.i18n';\nimport { isAddressTruthy } from '../../helpers/type-helpers';\nimport { Address } from '../../models/types';\n\n@Component({\n  selector: 'bb-payord-counterparty-details',\n  templateUrl: './counterparty-details.component.html',\n})\nexport class PayordCounterpartyDetailsComponent implements OnInit {\n  /**\n   * The config of current payment type\n   */\n  @Input() config!: PaymentTypeConfig;\n  /**\n   * The details of beneficiary\n   */\n  @Input() details!: CounterPartyDetails;\n  /**\n   * Flag to denote debit payment\n   */\n  @Input() isDebitPayment = false;\n  beneficiaryDetailsTitles?: BeneficiaryDetailsTitle;\n\n  hasPostalAddress(address?: Address): boolean {\n    return isAddressTruthy(address);\n  }\n\n  ngOnInit() {\n    this.beneficiaryDetailsTitles = this.isDebitPayment\n      ? {\n          beneficiaryTitle: counterpartyI18n.beneficiaryDebitTitle,\n          bankTitle: counterpartyI18n.beneficiaryBankDebitTitle,\n          addressTitle: counterpartyI18n.beneficiaryAddressDebitTitle,\n        }\n      : {\n          beneficiaryTitle: counterpartyI18n.beneficiaryTitle,\n          bankTitle: counterpartyI18n.beneficiaryBankTitle,\n          addressTitle: counterpartyI18n.beneficiaryAddressTitle,\n        };\n  }\n}\n","<div\n  class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n  *ngIf=\"\n    details?.entryClass ||\n    details?.accountType ||\n    details?.recipientId ||\n    hasPostalAddress(details?.postalAddress)\n  \"\n>\n  <div class=\"card-body\">\n    <div class=\"bb-text-bold bb-block bb-block--md\">\n      {{ beneficiaryDetailsTitles?.beneficiaryTitle }}\n    </div>\n    <div\n      class=\"row bb-block bb-block--md\"\n      *ngIf=\"details?.entryClass || details?.accountType\"\n    >\n      <div\n        class=\"col-md-6 bb-block bb-block--md\"\n        *ngIf=\"\n          details?.accountType &&\n          (details?.accountType === 'SAVINGS' ||\n            details?.accountType === 'CHECKING')\n        \"\n      >\n        <div class=\"bb-text-bold\">\n          <bb-payord-dynamic-label\n            name=\"accountType\"\n            [config]=\"config\"\n            parentName=\"counterparty\"\n            defaultLabel=\"Account type\"\n            i18n-defaultLabel=\"\n              @@counterparty-details.account-type-default-label\"\n          ></bb-payord-dynamic-label>\n        </div>\n        <div\n          [ngSwitch]=\"details?.accountType\"\n          data-role=\"beneficiary-account-type\"\n        >\n          <ng-container\n            i18n=\"@@counterparty-details.account-type-savings\"\n            *ngSwitchCase=\"'SAVINGS'\"\n          >\n            Savings\n          </ng-container>\n          <ng-container\n            i18n=\"@@counterparty-details.account-type-checking\"\n            *ngSwitchCase=\"'CHECKING'\"\n          >\n            Checking\n          </ng-container>\n        </div>\n      </div>\n\n      <div class=\"col-md-6 bb-block bb-block--md\" *ngIf=\"details?.entryClass\">\n        <div class=\"bb-text-bold\">\n          <bb-payord-dynamic-label\n            name=\"entryClass\"\n            [config]=\"config\"\n            parentName=\"counterparty\"\n            defaultLabel=\"Standard entry class (SEC Type)\"\n            i18n-defaultLabel=\"@@counterparty-details.entryClass-default-label\"\n          ></bb-payord-dynamic-label>\n        </div>\n        <div\n          [ngSwitch]=\"details?.entryClass\"\n          data-role=\"beneficiary-standard-entry-class\"\n        >\n          <ng-container\n            i18n=\"@@counterparty-details.entryClass-ppd\"\n            *ngSwitchCase=\"'PPD'\"\n          >\n            Personal (PPD)\n          </ng-container>\n          <ng-container\n            i18n=\"@@counterparty-details.entryClass-ccd\"\n            *ngSwitchCase=\"'CCD'\"\n          >\n            Business (CCD)\n          </ng-container>\n        </div>\n      </div>\n    </div>\n\n    <div\n      class=\"row\"\n      *ngIf=\"details?.recipientId\"\n      [ngClass]=\"{\n        'bb-block bb-block--md': hasPostalAddress(details?.postalAddress)\n      }\"\n    >\n      <div class=\"col-md-6 bb-block bb-block--md\">\n        <div\n          class=\"bb-text-bold break-word\"\n          data-role=\"payment-counterparty-recipient-id-label\"\n        >\n          <bb-payord-dynamic-label\n            name=\"recipientId\"\n            [config]=\"config\"\n            parentName=\"counterparty\"\n            defaultLabel=\"Recipient ID\"\n            i18n-defaultLabel=\"@@counterparty-details.recipientId-default-label\"\n          ></bb-payord-dynamic-label>\n        </div>\n        <div data-role=\"payment-counterparty-recipient-id\">\n          {{ details?.recipientId }}\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"hasPostalAddress(details?.postalAddress)\">\n      <div class=\"bb-text-bold\">\n        {{ beneficiaryDetailsTitles?.addressTitle }}\n      </div>\n      <div class=\"break-word\">\n        <bb-full-address [address]=\"details?.postalAddress\"></bb-full-address>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div>\n  <div\n    class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n    data-role=\"beneficiary-bank-details\"\n    *ngIf=\"\n      details?.creditorBank?.bankName ||\n      details?.creditorBank?.bic ||\n      hasPostalAddress(details?.creditorBank?.postalAddress)\n    \"\n  >\n    <div class=\"card-body\">\n      <div class=\"bb-text-bold bb-block bb-block--md\">\n        {{ beneficiaryDetailsTitles?.bankTitle }}\n      </div>\n\n      <div\n        [ngClass]=\"{\n          'bb-block bb-block--md': hasPostalAddress(\n            details?.creditorBank?.postalAddress\n          )\n        }\"\n        *ngIf=\"details?.creditorBank?.bankName || details?.creditorBank?.bic\"\n      >\n        <div class=\"row\">\n          <div\n            class=\"col-6\"\n            [class.col-12]=\"!details?.creditorBank?.bic\"\n            *ngIf=\"details?.creditorBank?.bankName\"\n          >\n            <div class=\"bb-text-bold\">\n              <bb-payord-dynamic-label\n                name=\"bankName\"\n                [config]=\"config\"\n                parentName=\"creditorBank\"\n                defaultLabel=\"Bank name\"\n                i18n-defaultLabel=\"\n                  @@counterparty-details.creditor-bank-name-default-label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div class=\"break-word\" data-role=\"beneficiary-bank-name\">\n              {{ details?.creditorBank?.bankName }}\n            </div>\n          </div>\n\n          <div class=\"col-6\" *ngIf=\"details?.creditorBank?.bic\">\n            <div class=\"bb-text-bold\">\n              <bb-payord-dynamic-label\n                name=\"bic\"\n                [config]=\"config\"\n                defaultLabel=\"SWIFT/BIC code\"\n                i18n-defaultLabel=\"\n                  @@counterparty-details.creditor-bank-bic-default-label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div\n              class=\"break-word\"\n              *ngIf=\"details?.creditorBank?.bic\"\n              data-role=\"counterparty-bic-code\"\n            >\n              {{ details?.creditorBank?.bic }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"hasPostalAddress(details?.creditorBank?.postalAddress)\">\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"@@counterparty-details.bank-address.title\"\n        >\n          Bank address\n        </div>\n        <div class=\"break-word\" data-role=\"beneficiary-bank-address\">\n          <bb-full-address\n            [address]=\"details?.creditorBank?.postalAddress\"\n          ></bb-full-address>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n    data-role=\"correspondant-bank-details\"\n    *ngIf=\"\n      details?.correspondentBank?.bankName ||\n      details?.correspondentBank?.bankBranchCode ||\n      details?.correspondentBank?.bic ||\n      hasPostalAddress(details?.correspondentBank?.postalAddress)\n    \"\n  >\n    <div class=\"card-body\">\n      <div\n        class=\"bb-text-bold bb-block bb-block--md\"\n        i18n=\"@@counterparty-details.correspondant-bank-details.title\"\n      >\n        Correspondent bank details\n      </div>\n\n      <div\n        [ngClass]=\"{\n          'bb-block bb-block--md': hasPostalAddress(\n            details?.correspondentBank?.postalAddress\n          )\n        }\"\n        *ngIf=\"\n          details?.correspondentBank?.bankName ||\n          details?.correspondentBank?.bankBranchCode ||\n          details?.correspondentBank?.bic\n        \"\n      >\n        <div class=\"row\">\n          <div class=\"col-6\" *ngIf=\"details?.correspondentBank?.bankName\">\n            <div class=\"bb-text-bold\">\n              <bb-payord-dynamic-label\n                name=\"bankName\"\n                [config]=\"config\"\n                parentName=\"correspondentBank\"\n                defaultLabel=\"Bank name\"\n                i18n-defaultLabel=\"\n                  @@counterparty-details.correspondent.bank-name-default-label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div class=\"break-word\" data-role=\"correspondant-bank-name\">\n              {{ details?.correspondentBank?.bankName }}\n            </div>\n          </div>\n\n          <div class=\"col-6\" *ngIf=\"details?.correspondentBank?.bankBranchCode\">\n            <div class=\"bb-text-bold\">\n              <bb-payord-dynamic-label\n                name=\"bankBranchCode\"\n                [config]=\"config\"\n                parentName=\"correspondentBank\"\n                defaultLabel=\"Routing transit number (ABA)\"\n                i18n-defaultLabel=\"\n                  @@counterparty-details.routing-transit-number-default-label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div class=\"bb-text-support\" data-role=\"correspondant-bank-code\">\n              {{ details?.correspondentBank?.bankBranchCode }}\n            </div>\n          </div>\n\n          <div class=\"col-6\" *ngIf=\"details?.correspondentBank?.bic\">\n            <div class=\"bb-text-bold\">\n              <bb-payord-dynamic-label\n                name=\"bic\"\n                [config]=\"config\"\n                parentName=\"correspondentBank\"\n                defaultLabel=\"SWIFT/BIC code\"\n                i18n-defaultLabel=\"\n                  @@counterparty-details.correspondentBank.bic-default-label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div\n              class=\"break-word\"\n              *ngIf=\"details?.correspondentBank?.bic\"\n              data-role=\"correspondent-bic-code\"\n            >\n              {{ details?.correspondentBank?.bic }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"hasPostalAddress(details?.correspondentBank?.postalAddress)\">\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"@@counterparty-details.correspondant-bank-address.title\"\n        >\n          Bank address\n        </div>\n        <div class=\"break-word\" data-role=\"correspondant-bank-address\">\n          <bb-full-address\n            [address]=\"details?.correspondentBank?.postalAddress\"\n          ></bb-full-address>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n    data-role=\"intermediary-bank-details\"\n    *ngIf=\"\n      details?.intermediaryBank?.bankName ||\n      details?.intermediaryBank?.bankBranchCode ||\n      details?.intermediaryBank?.bic ||\n      hasPostalAddress(details?.intermediaryBank?.postalAddress)\n    \"\n  >\n    <div class=\"card-body\">\n      <div\n        class=\"bb-text-bold bb-block bb-block--md\"\n        i18n=\"@@counterparty-details.intermediary-bank-details.title\"\n      >\n        Intermediary bank details\n      </div>\n\n      <div\n        [ngClass]=\"{\n          'bb-block bb-block--md': hasPostalAddress(\n            details?.intermediaryBank?.postalAddress\n          )\n        }\"\n        *ngIf=\"\n          details?.intermediaryBank?.bankName ||\n          details?.intermediaryBank?.bankBranchCode ||\n          details?.intermediaryBank?.bic\n        \"\n      >\n        <div class=\"row\">\n          <div class=\"col-6\" *ngIf=\"details?.intermediaryBank?.bankName\">\n            <div class=\"bb-text-bold\">\n              <bb-payord-dynamic-label\n                name=\"bankName\"\n                [config]=\"config\"\n                parentName=\"intermediaryBank\"\n                defaultLabel=\"Bank name\"\n                i18n-defaultLabel=\"\n                  @@counterparty-details.intermediaryBank-bank-name-default-label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div class=\"break-word\" data-role=\"intermediary-bank-name\">\n              {{ details?.intermediaryBank?.bankName }}\n            </div>\n          </div>\n\n          <div class=\"col-6\" *ngIf=\"details?.intermediaryBank?.bankBranchCode\">\n            <div class=\"bb-text-bold\">\n              <bb-payord-dynamic-label\n                name=\"bankBranchCode\"\n                [config]=\"config\"\n                parentName=\"intermediaryBank\"\n                defaultLabel=\"Routing transit number (ABA)\"\n                i18n-defaultLabel=\"\n                  @@counterparty-details.intermediary-routing-transit-number-default-label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div class=\"bb-text-support\" data-role=\"intermediary-bank-code\">\n              {{ details?.intermediaryBank?.bankBranchCode }}\n            </div>\n          </div>\n\n          <div class=\"col-6\" *ngIf=\"details?.intermediaryBank?.bic\">\n            <div class=\"bb-text-bold\">\n              <bb-payord-dynamic-label\n                name=\"bic\"\n                [config]=\"config\"\n                parentName=\"intermediaryBank\"\n                defaultLabel=\"SWIFT/BIC code\"\n                i18n-defaultLabel=\"\n                  @@counterparty-details.intermediaryBank-bic-default-label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div\n              class=\"break-word\"\n              *ngIf=\"details?.intermediaryBank?.bic\"\n              data-role=\"intermediaryBank-bic-code\"\n            >\n              {{ details?.intermediaryBank?.bic }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"hasPostalAddress(details?.intermediaryBank?.postalAddress)\">\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"@@counterparty-details.intermediary-bank-address.title\"\n        >\n          Bank address\n        </div>\n        <div class=\"break-word\" data-role=\"intermediary-bank-address\">\n          <bb-full-address\n            [address]=\"details?.intermediaryBank?.postalAddress\"\n          ></bb-full-address>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { PaymentSubmitStatuses } from '../../models';\n\n@Component({\n  selector: 'bb-payord-status-card',\n  templateUrl: './status-card.component.html',\n})\nexport class PayordStatusComponent {\n  /**\n   * Status of the payment. Defaults to success.\n   */\n  @Input() status: PaymentSubmitStatuses = PaymentSubmitStatuses.SUCCESS;\n  /**\n   * Message to be displayed. Defaults to empty string.\n   */\n  @Input() message = '';\n  /**\n   * Flag to denote debit mode.\n   */\n  @Input() isDebitPayment = false;\n}\n","<div\n  class=\"bb-payment-status-card\"\n  [ngClass]=\"\n    status === 'error'\n      ? 'bb-payment-status-card--danger'\n      : 'bb-payment-status-card--success'\n  \"\n>\n  <bb-icon-ui\n    class=\"bb-payment-status-card__icon\"\n    size=\"xxl\"\n    [color]=\"status === 'error' ? 'danger' : 'success'\"\n    [name]=\"status === 'error' ? 'error-outline' : 'success'\"\n  ></bb-icon-ui>\n  <div\n    class=\"break-word col-12 bb-text-align-center\"\n    *ngIf=\"message\"\n    data-role=\"payment-status-msg\"\n  >\n    {{ message }}\n  </div>\n  <div\n    class=\"break-word col-12 bb-text-align-center\"\n    *ngIf=\"!message\"\n    data-role=\"payment-status-msg\"\n  >\n    <ng-container\n      *ngIf=\"!isDebitPayment\"\n      i18n=\"@@bb-payment-status-card-payment-status-message\"\n    >\n      { status, select, error {Failed to submit payment. Please try again later}\n      pending {Payment is submitted successfully, and pending further\n      approval(s)} pending_edited {Edited payment submitted successfully} other\n      {Payment submitted successfully} }\n    </ng-container>\n    <ng-container\n      *ngIf=\"isDebitPayment\"\n      i18n=\"@@bb-payment-status-card-debit-status-message\"\n    >\n      { status, select, error {Failed to submit debit request. Please try again\n      later} pending {Debit request is submitted successfully, and pending\n      further approval(s)} pending_edited {Edited debit request submitted\n      successfully} other {Debit request submitted successfully} }\n    </ng-container>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport BigNumber from 'bignumber.js';\nimport {\n  PaymentTypeConfig,\n  RemittanceDetails,\n} from '../../../configs/models/form-items.model';\nimport { ChargeBearer, ForexDetails } from '../../models';\nimport { Currency } from '../../models/types';\n\n@Component({\n  selector: 'bb-payord-amount-details',\n  templateUrl: './amount-details.component.html',\n})\nexport class PayordAmountDetailsComponent implements OnInit {\n  /**\n   * The config of current payment type\n   */\n  @Input() config!: PaymentTypeConfig;\n  /**\n   * Remittance Details\n   */\n  @Input() details!: RemittanceDetails;\n  /**\n   * Transfer fee details\n   */\n  @Input() transferFee?: Currency;\n  /**\n   * Charge bearer type\n   */\n  @Input() chargeBearer?: ChargeBearer;\n  /**\n   * The currency exchange details of the payment\n   */\n  @Input() forexDetails?: ForexDetails;\n\n  totalAmount!: number | string;\n  hasTransferFee = false;\n  exchangeRateError = false;\n\n  ngOnInit() {\n    const transferFee = this.transferFee || { amount: '0', currencyCode: '' };\n    const amount = this.details?.amountGroup?.amount;\n    this.hasTransferFee = !!transferFee.amount;\n    const calculatedAmount = new BigNumber(\n      this.forexDetails?.calculatedAmount || amount || '0'\n    )\n      .plus(transferFee.amount)\n      .toString();\n    this.exchangeRateError = this.hasForexError();\n    this.totalAmount =\n      this.hasTransferFee && this.chargeBearer !== 'BEN'\n        ? calculatedAmount\n        : amount;\n  }\n\n  private hasForexError() {\n    return !!(\n      this.forexDetails?.fromCurrency !== this.forexDetails?.toCurrency &&\n      !this.forexDetails?.rate\n    );\n  }\n}\n","<div class=\"bb-block bb-block--md\">\n  <div class=\"bb-text-bold\">\n    <bb-payord-dynamic-label\n      name=\"amountGroup\"\n      [config]=\"config\"\n      defaultLabel=\"Amount\"\n      i18n-defaultLabel\n    ></bb-payord-dynamic-label>\n  </div>\n  <div\n    class=\"bb-highlight break-word bb-block bb-block--xs\"\n    data-role=\"transfer-amount\"\n  >\n    <bb-amount-ui\n      [amount]=\"details?.amountGroup?.amount\"\n      [currency]=\"details?.amountGroup?.currency\"\n      [mapCurrency]=\"false\"\n    ></bb-amount-ui>\n  </div>\n  <ng-container *ngIf=\"forexDetails?.calculatedAmount\">\n    <div class=\"bb-block bb-block--xs\">\n      <span i18n=\"amount-details.payment.details.amount-you-pay-label\"\n        >Amount you pay</span\n      >:\n      <span data-role=\"amount-you-pay\">\n        &asymp;\n        <bb-amount-ui\n          [mapCurrency]=\"false\"\n          [amount]=\"forexDetails?.calculatedAmount\"\n          [currency]=\"forexDetails?.fromCurrency\"\n        ></bb-amount-ui>\n      </span>\n    </div>\n    <div class=\"bb-block bb-block--xs\" data-role=\"indicative-rate\">\n      <span i18n=\"amount-details.payment.details.indicative-fee-label\"\n        >Indicative rate</span\n      >: 1 {{ forexDetails?.fromCurrency }} &asymp; {{ forexDetails?.rate }}\n      {{ forexDetails?.toCurrency }}\n    </div>\n  </ng-container>\n\n  <div class=\"bb-block bb-block--md\" *ngIf=\"transferFee\">\n    <div class=\"bb-block bb-block--xs\" data-role=\"transfer-fee\">\n      <span\n        *ngIf=\"config?.name\"\n        i18n=\"@@standard-transfer-fee-label\"\n        data-role=\"transfer-fee-label\"\n        >Transfer fee - {{ config.name }}:\n      </span>\n\n      <bb-amount-ui\n        [amount]=\"transferFee?.amount\"\n        [currency]=\"transferFee?.currencyCode || details?.amountGroup?.currency\"\n        [mapCurrency]=\"false\"\n        data-role=\"transfer-fee\"\n      ></bb-amount-ui>\n    </div>\n\n    <div class=\"bb-block bb-block--xs\" data-role=\"charge-bearer\">\n      <ng-container *ngIf=\"chargeBearer\" [ngSwitch]=\"chargeBearer\">\n        <ng-container i18n=\"@@charge-bearer-value-our\" *ngSwitchCase=\"'OUR'\">\n          I pay all fees (OUR)\n        </ng-container>\n        <ng-container i18n=\"@@charge-bearer-value-ben\" *ngSwitchCase=\"'BEN'\">\n          Beneficiary pays all fees (BEN)\n        </ng-container>\n        <ng-container i18n=\"@@charge-bearer-value-sha\" *ngSwitchCase=\"'SHA'\">\n          Fee is shared between you and beneficiary (SHA)\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <div *ngIf=\"!exchangeRateError\" class=\"bb-text-bold\">\n      <span i18n=\"@@total-label\">Total: </span>\n      <ng-container\n        i18n=\"@@total-approximate-sign\"\n        *ngIf=\"forexDetails?.calculatedAmount\"\n        >&asymp;\n      </ng-container>\n      <bb-amount-ui\n        [amount]=\"totalAmount\"\n        [currency]=\"\n          forexDetails?.fromCurrency || details?.amountGroup?.currency\n        \"\n        [mapCurrency]=\"false\"\n        [attr.data-role]=\"'transfer-total'\"\n      ></bb-amount-ui>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { CountriesMap } from '../../constants';\n\n@Component({\n  selector: 'bb-country-selector',\n  templateUrl: './country-selector.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => CountrySelectorComponent),\n    },\n  ],\n})\nexport class CountrySelectorComponent implements ControlValueAccessor {\n  _countries!: Array<string>;\n  _selectedCountry = '';\n  search = new FormControl();\n  countryEntries!: Array<[string, string]>;\n  filteredCountries: Array<string> = [];\n\n  /** */\n  @Input() set countries(countries: Array<string>) {\n    this._countries = countries || [];\n    this.setupCountries();\n  }\n  /** */\n  @Input() selectedCountry = '';\n  /** */\n  @Input() helperText = '';\n  /** */\n  @Input() placeholder = '';\n  /** */\n  @Input() label = '';\n  /** */\n  @Input() searchPlaceholder = '';\n  /** */\n  @Input() dropdownIcon = 'toggle-down';\n  /** */\n  @Output() selectCountry = new EventEmitter<string>();\n\n  setupCountries() {\n    this.countryEntries = this._countries.map((country: string) => [\n      country,\n      CountriesMap[country],\n    ]);\n    this.filteredCountries = [...this._countries];\n  }\n\n  selectItem(country: string) {\n    this.selectedCountry = country;\n    this.selectCountry.emit(country);\n  }\n\n  handleSearch(query = '') {\n    if (query) {\n      this.filteredCountries = this.countryEntries.reduce(\n        (acc: Array<string>, [key, country]) => {\n          if (\n            key.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) > -1 ||\n            country.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) > -1\n          ) {\n            acc.push(key);\n          }\n          return acc;\n        },\n        []\n      );\n    } else {\n      this.filteredCountries = this._countries;\n    }\n  }\n\n  onChange(_value: string) {}\n  onTouched() {}\n  writeValue(_value: string): void {}\n  onBlur() {}\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","<div\n  class=\"bb-country-selector\"\n  ngbDropdown\n  #dropdown=\"ngbDropdown\"\n  display=\"static\"\n>\n  <div class=\"d-inline-block bb-label\" (click)=\"btn.focus()\" *ngIf=\"label\">\n    {{ label }}\n  </div>\n  <span\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    *ngIf=\"helperText\"\n    [id]=\"searchElem?.id + '__helper-text'\"\n    [textContent]=\"helperText\"\n  >\n  </span>\n  <div>\n    <button\n      bbButton\n      ngbDropdownToggle\n      color=\"unstyled\"\n      (blur)=\"onBlur()\"\n      data-role=\"open-country-dropdown-list-button\"\n      [attr.aria-label]=\"label\"\n      class=\"bb-country-selector__toggle form-control w-100 d-flex justify-content-between bb-text-support\"\n      #btn\n    >\n      <ng-container *ngIf=\"selectedCountry\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            countryTmpl;\n            context: { $implicit: selectedCountry }\n          \"\n        ></ng-container>\n      </ng-container>\n      <div *ngIf=\"!selectedCountry\">\n        <ng-container\n          *ngIf=\"placeholder; else defaultPlaceHolder\"\n        ></ng-container>\n        {{ placeholder }}\n      </div>\n      <bb-icon-ui [name]=\"dropdownIcon || 'toggle-down'\"></bb-icon-ui>\n    </button>\n  </div>\n\n  <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right w-100\">\n    <div class=\"bb-block bb-block--md px-3\">\n      <bb-search-box-ui\n        (focus)=\"dropdown.open()\"\n        [formControl]=\"search\"\n        (clear)=\"handleSearch('')\"\n        data-role=\"country-search\"\n        role=\"searchbox\"\n        (ngModelChange)=\"handleSearch(search.value)\"\n        [placeholder]=\"searchPlaceholder || 'Search'\"\n        [showSearch]=\"true\"\n        [showClear]=\"true\"\n        [autocomplete]=\"'off'\"\n        #searchElem\n      >\n      </bb-search-box-ui>\n    </div>\n    <div *ngIf=\"filteredCountries?.length\" class=\"pre-scrollable\">\n      <button\n        *ngFor=\"let country of filteredCountries\"\n        role=\"menuitem\"\n        type=\"button\"\n        class=\"d-sm-flex px-3 py-2 d-flex-row align-items-center btn--unstyled\"\n        (bbKeyboardClick)=\"selectItem(country); dropdown.close()\"\n        ngbDropdownItem\n      >\n        <ng-container\n          *ngTemplateOutlet=\"countryTmpl; context: { $implicit: country }\"\n        ></ng-container>\n      </button>\n    </div>\n    <ng-container *ngIf=\"!filteredCountries?.length && search?.value\">\n      <ng-container *ngTemplateOutlet=\"emptySearch\"></ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template let-code #countryTmpl>\n  <div class=\"d-flex justify-content-between align-items-center w-100\">\n    <div class=\"d-flex align-items-center\">\n      <bb-flag-icon\n        class=\"mr-2 d-flex\"\n        [countryCode]=\"code\"\n        [flagSize]=\"'sm'\"\n      ></bb-flag-icon>\n      <bb-country-name [countryCode]=\"code\"></bb-country-name>\n    </div>\n    <div class=\"bb-text-support\">{{ code }}</div>\n  </div>\n</ng-template>\n\n<ng-template #emptySearch>\n  <div class=\"card-body\">\n    <bb-empty-state-ui\n      data-role=\"no-templates-found\"\n      title=\"No Results Found\"\n      subtitle=\"We can’t find what you’re looking for. Please try a different criteria.\"\n      iconSize=\"xxl\"\n      i18n-subtitle=\"@@bb-country-selector.empty-state-subtitle\"\n      i18n-title=\"@@bb-country-selector.empty-state-title\"\n      iconModifier=\"search\"\n      [showIcon]=\"true\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n\n<ng-template #defaultPlaceHolder>\n  <ng-container i18n>- select a country -</ng-container>\n</ng-template>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n} from '@angular/core';\nimport {\n  FormControl,\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { CountriesMap } from '../../constants';\n\n@Component({\n  selector: 'bb-select-country-dropdown',\n  templateUrl: './select-country-dropdown.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectCountryDropdownComponent),\n    },\n  ],\n})\nexport class SelectCountryDropdownComponent implements ControlValueAccessor {\n  _countries!: Array<string>;\n  _selectedCountry = '';\n  search = new FormControl();\n  countryEntries!: Array<[string, string]>;\n  filteredCountries: Array<string> = [];\n\n  /**\n   * Array of country iso codes\n   */\n  @Input() set countries(countries: Array<string>) {\n    this._countries = countries || [];\n    this.setupCountries();\n  }\n  /**\n   * Selected country iso code\n   */\n  @Input() selectedCountry = '';\n  /**\n   * Helper text for the component. Defaults to empty string.\n   */\n  @Input() helperText = '';\n  /**\n   * Placeholder text. Defaults to empty string.\n   */\n  @Input() placeholder = '';\n  /**\n   * Label of the component. Defaults to empty string.\n   */\n  @Input() label = '';\n  /**\n   * Placeholder fot search. Defaults to empty string.\n   */\n  @Input() searchPlaceholder = '';\n  /**\n   * Icon for the dropdown. Defaults to `toggle-down`\n   */\n  @Input() dropdownIcon = 'toggle-down';\n  /**\n   * Flag which indicates permission to create closed payment\n   * Default value is `false`\n   */\n  @Input() isClosedPayment = false;\n  /**\n   * Emits value when a country is selected\n   */\n  @Output() selectCountry = new EventEmitter<string>();\n\n  setupCountries() {\n    this.countryEntries = this._countries.map((country: string) => [\n      country,\n      CountriesMap[country],\n    ]);\n    this.filteredCountries = [...this._countries];\n  }\n\n  selectItem(country: string) {\n    this.selectedCountry = country;\n    this.selectCountry.emit(country);\n    if (this.search.value) {\n      this.search.reset();\n    }\n  }\n\n  handleSearch(query = '') {\n    if (query) {\n      this.filteredCountries = this.countryEntries.reduce(\n        (acc: Array<string>, [key, country]) => {\n          if (\n            key.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) > -1 ||\n            country.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) > -1\n          ) {\n            acc.push(key);\n          }\n          return acc;\n        },\n        []\n      );\n    } else {\n      this.filteredCountries = this._countries;\n    }\n  }\n\n  onChange() {}\n  onTouched() {}\n  writeValue(): void {}\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","<div\n  class=\"bb-dynamic-input bb-select-country-dropdown\"\n  ngbDropdown\n  placement=\"bottom\"\n  #dropdown=\"ngbDropdown\"\n>\n  <div class=\"d-inline-block bb-label\" (click)=\"btn.focus()\" *ngIf=\"label\">\n    {{ label }}\n  </div>\n  <span\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    *ngIf=\"helperText\"\n    [id]=\"searchElem?.id + '__helper-text'\"\n    [textContent]=\"helperText\"\n  >\n  </span>\n  <div>\n    <button\n      bbButton\n      ngbDropdownToggle\n      color=\"unstyled\"\n      (blur)=\"onTouched()\"\n      data-role=\"open-country-dropdown-list-button\"\n      [attr.aria-label]=\"label\"\n      [disabled]=\"isClosedPayment && selectedCountry\"\n      class=\"bb-select-country-dropdown__toggle form-control w-100 pr-5 d-flex justify-content-between bb-text-support\"\n      #btn\n    >\n      <ng-container *ngIf=\"selectedCountry\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            countryTmpl;\n            context: { $implicit: selectedCountry }\n          \"\n        ></ng-container>\n      </ng-container>\n      <div *ngIf=\"!selectedCountry\">\n        <ng-container\n          *ngIf=\"placeholder; else defaultPlaceHolder\"\n        ></ng-container>\n        {{ placeholder }}\n      </div>\n      <bb-icon-ui [name]=\"dropdownIcon || 'toggle-down'\"></bb-icon-ui>\n    </button>\n  </div>\n\n  <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right w-100\">\n    <div class=\"bb-block bb-block--md px-3\">\n      <bb-search-box-ui\n        (focus)=\"dropdown.open()\"\n        [formControl]=\"search\"\n        (clear)=\"handleSearch('')\"\n        data-role=\"country-search\"\n        (ngModelChange)=\"handleSearch(search.value)\"\n        [placeholder]=\"searchPlaceholder || 'Search'\"\n        [attr.aria-label]=\"searchPlaceholder || 'Search'\"\n        [showSearch]=\"true\"\n        [showClear]=\"true\"\n        [autocomplete]=\"'off'\"\n        #searchElem\n      >\n      </bb-search-box-ui>\n    </div>\n\n    <bb-payments-sr-search-result-info\n      [totalNumber]=\"filteredCountries?.length || 0\"\n    >\n    </bb-payments-sr-search-result-info>\n\n    <div *ngIf=\"filteredCountries?.length\" class=\"pre-scrollable\">\n      <button\n        *ngFor=\"let country of filteredCountries\"\n        role=\"menuitem\"\n        type=\"button\"\n        class=\"d-sm-flex px-3 py-2 d-flex-row align-items-center btn--unstyled\"\n        (bbKeyboardClick)=\"selectItem(country); dropdown.close()\"\n        ngbDropdownItem\n      >\n        <ng-container\n          *ngTemplateOutlet=\"countryTmpl; context: { $implicit: country }\"\n        ></ng-container>\n      </button>\n    </div>\n    <ng-container *ngIf=\"!filteredCountries?.length && search?.value\">\n      <ng-container *ngTemplateOutlet=\"emptySearch\"></ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template let-code #countryTmpl>\n  <div class=\"d-flex justify-content-between align-items-center w-100\">\n    <div class=\"bb-stack\">\n      <bb-flag-icon\n        class=\"bb-stack__item\"\n        [countryCode]=\"code\"\n        [flagSize]=\"'md'\"\n      ></bb-flag-icon>\n      <bb-country-name\n        class=\"bb-stack__item bb-ellipsis bb-ellipsis--single-line\"\n        [countryCode]=\"code\"\n      ></bb-country-name>\n      <div class=\"bb-text-support bb-stack__item bb-stack__item--push-right\">\n        {{ code }}\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #emptySearch>\n  <div class=\"card-body\">\n    <bb-empty-state-ui\n      data-role=\"no-templates-found\"\n      title=\"No Results Found\"\n      subtitle=\"We can’t find what you’re looking for. Please try a different criteria.\"\n      iconSize=\"xxl\"\n      i18n-subtitle=\"@@bb-select-country-dropdown.empty-state-subtitle\"\n      i18n-title=\"@@bb-select-country-dropdown.empty-state-title\"\n      iconModifier=\"search\"\n      [showIcon]=\"true\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n\n<ng-template #defaultPlaceHolder>\n  <ng-container i18n=\"@@country-selector-default-placeholder\"\n    >- select a country -</ng-container\n  >\n</ng-template>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ModalState } from '../../models';\nimport { BehaviorSubject } from 'rxjs';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'bb-payment-template-form',\n  templateUrl: './create-payment-template-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentTemplateComponent {\n  readonly modalOptions: NgbModalOptions = {\n    backdrop: 'static',\n    keyboard: false,\n  };\n\n  /**\n   * Modal state flag.\n   */\n  @Input() modalState!: BehaviorSubject<ModalState>;\n\n  /**\n   * Payment template form.\n   */\n  @Input() paymentTemplateForm!: FormGroup;\n\n  /**\n   * Saving template data flag.\n   * Default value is false.\n   */\n  @Input() isSavingTemplate = false;\n\n  /**\n   * Close payment template modal event emitter\n   */\n  @Output() closeModal = new EventEmitter<void>();\n\n  /**\n   * Open payment template modal event emitter\n   */\n  @Output() openModal = new EventEmitter<void>();\n\n  /**\n   * Submit form event emitter\n   */\n  @Output() submitForm = new EventEmitter<void>();\n\n  readonly states = ModalState;\n  isSubmitted = false;\n\n  onOpen() {\n    this.openModal.emit();\n  }\n\n  onClose() {\n    this.closeModal.emit();\n    this.isSubmitted = false;\n  }\n\n  onSubmit() {\n    this.submitForm.emit();\n    this.isSubmitted = true;\n  }\n}\n","<bb-modal-ui\n  [isOpen]=\"states.Preview === (modalState | async)\"\n  [modalOptions]=\"modalOptions\"\n>\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-stack\">\n        <bb-icon-ui\n          class=\"bb-text-disabled bb-stack__item bb-stack__item--spacing-sm bb-text-support d-inline-block\"\n          name=\"insert-drive-file\"\n        >\n        </bb-icon-ui>\n        <bb-header-ui\n          class=\"bb-stack__item\"\n          headingType=\"h2\"\n          heading=\"Save as a template\"\n          i18n-heading=\"@@omni-payment-review-template-modal.title\"\n          [attr.data-role]=\"'payment-template-header'\"\n        ></bb-header-ui>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div\n        class=\"bb-block bb-block--lg\"\n        data-role=\"payment-template-modal-text\"\n        i18n=\"@@omni-payment-review-template-modal.description\"\n      >\n        Type a name to the template in order to re-use it and manage it when\n        needed.\n      </div>\n      <form [formGroup]=\"paymentTemplateForm\" class=\"form-group\">\n        <label [for]=\"TemplateName.id\" class=\"bb-label\">\n          <span\n            id=\"name\"\n            i18n=\"@@omni-payment-review-template-modal.template-name.label\"\n            >Name of the template</span\n          >\n        </label>\n        <span\n          class=\"bb-text-support\"\n          i18n=\"\n            @@omni-payment-review-template-modal.template-name.required.label\"\n        >\n          (required)\n        </span>\n        <div class=\"bb-payment-template__form-container\">\n          <bb-input-text-ui\n            #TemplateName\n            [aria-labelledby]=\"'name'\"\n            formControlName=\"templateName\"\n            [maxLength]=\"50\"\n            [showCharCounter]=\"true\"\n            data-role=\"template-name-field\"\n          ></bb-input-text-ui>\n\n          <bb-input-validation-message-ui\n            data-role=\"initiate-payment-template-name-input-error\"\n            role=\"alert\"\n            [showErrors]=\"paymentTemplateForm?.get('templateName')?.invalid\"\n          >\n            <ng-container\n              *ngIf=\"\n                paymentTemplateForm?.get('templateName') as templateNameControl\n              \"\n            >\n              <span\n                data-role=\"required-template-name-error\"\n                i18n=\"\n                  @@omni-payment-review-template-modal.template-name.validation.required-error\"\n                *ngIf=\"\n                  templateNameControl.errors &&\n                  templateNameControl.errors['required'] &&\n                  isSubmitted\n                \"\n              >\n                Template name is required\n              </span>\n            </ng-container>\n          </bb-input-validation-message-ui>\n        </div>\n      </form>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <bb-load-button-ui\n          [isLoading]=\"isSavingTemplate\"\n          color=\"primary\"\n          class=\"bb-button-bar__button\"\n          data-role=\"save-template-button\"\n          (click)=\"onSubmit()\"\n        >\n          <ng-container\n            i18n=\"@@omni-payment-review-template-modal.save-btn.label\"\n          >\n            Save\n          </ng-container>\n        </bb-load-button-ui>\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          data-role=\"cancel-template-button\"\n          (click)=\"onClose()\"\n        >\n          <ng-container\n            i18n=\"@@omni-payment-review-template-modal.cancel-btn.label\"\n          >\n            Cancel\n          </ng-container>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import {\n  Input,\n  Component,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { BreachInfo } from '@backbase/data-ang/payment-order';\n\nimport { PaymentBaseFields } from '../../../configs/models/form-item-names.model';\nimport {\n  CounterPartyDetails,\n  InitiatorDetails,\n  PaymentDetails,\n} from '../../../configs/models/form-items.model';\nimport {\n  BreachedLimitType,\n  BreachType,\n  Period,\n} from '../../constants/constants';\nimport { BreachReportError } from '../../models/types';\n\ninterface PaymentDetailsExtend extends PaymentDetails {\n  [PaymentBaseFields.initiator]: InitiatorDetails & { IBAN: string };\n  [PaymentBaseFields.counterparty]: CounterPartyDetails & { IBAN: string };\n}\n\n@Component({\n  selector: 'bb-breach-limit-details',\n  templateUrl: 'breach-limit-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreachLimitDetailsModalComponent {\n  /**\n   * Payment details\n   */\n  @Input() paymentDetails!: PaymentDetailsExtend;\n\n  /**\n   * The breach limit report from the payment order that originated it.\n   */\n  @Input() error?: BreachReportError;\n\n  /**\n   * The flag that controls visibility of the breach limit report.\n   * By default is `false`.\n   */\n  @Input() isOpen = false;\n\n  /**\n   * Event emitted when user clicks on close icon.\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() close = new EventEmitter();\n\n  get breachReportCurrency() {\n    return this.error?.breachReport?.[0]?.currency;\n  }\n\n  private normalizeBreachReportPeriod(\n    breachReportInfo: BreachInfo\n  ): BreachInfo {\n    return breachReportInfo.timeframe\n      ? {\n          ...breachReportInfo,\n          timeframe: {\n            ...breachReportInfo.timeframe,\n            period: breachReportInfo.timeframe.period.toUpperCase(),\n          },\n        }\n      : breachReportInfo;\n  }\n\n  private flattenBreachReports(): Array<BreachInfo> {\n    if (!this.error || !this.error.breachReport) {\n      return [];\n    }\n    return this.error.breachReport\n      .map((report) => report.breachInfo)\n      .reduce(\n        (prev, current) =>\n          prev.concat(...current.map(this.normalizeBreachReportPeriod)),\n        []\n      );\n  }\n\n  private compareByPeriod(left: BreachInfo, right: BreachInfo): number {\n    const leftPeriod = left.timeframe?.period;\n    const rightPeriod = right.timeframe?.period;\n    return (\n      (<any>Period)[<string>leftPeriod] - (<any>Period)[<string>rightPeriod]\n    );\n  }\n\n  get sortedBreaches(): Array<BreachInfo> {\n    const limits = this.flattenBreachReports();\n    const transactional = limits.filter((limit, index) => {\n      const isTransactional =\n        limit.breachedLimitType === BreachedLimitType.TRANSACTIONAL;\n      const hasPeriodicThreshold =\n        limit.breachType === BreachType.THRESHOLD &&\n        limit.breachedLimitType === BreachedLimitType.PERIODIC;\n\n      if (isTransactional || hasPeriodicThreshold) {\n        limits.splice(index, 1);\n      }\n\n      return isTransactional;\n    });\n\n    return [...transactional, ...limits.sort(this.compareByPeriod)];\n  }\n\n  onClose() {\n    this.close.emit();\n  }\n\n  print() {\n    window.print();\n  }\n}\n","<bb-modal-ui [isOpen]=\"isOpen\" (cancel)=\"onClose()\" (confirm)=\"onClose()\">\n  <bb-modal-header-ui role=\"heading\">\n    <ng-template bbCustomModalHeader>\n      <header\n        class=\"bb-stack bb-stack__item--fill\"\n        aria-labelledby=\"headerTitle\"\n      >\n        <bb-icon-ui\n          color=\"danger\"\n          name=\"error-outline\"\n          class=\"bb-stack__item bb-stack__item--spacing-sm\"\n        ></bb-icon-ui>\n\n        <span\n          id=\"headerTitle\"\n          class=\"bb-stack__item highlight text-large\"\n          data-role=\"limit-breach-modal-title\"\n          aria-label=\"Limits breach\"\n          i18n-aria-label=\"@bb-payord-breach-limit-modal-title\"\n        >\n          Limits breach\n        </span>\n        <div class=\"bb-stack__item bb-stack__item--push-right\">\n          <button\n            (click)=\"print()\"\n            type=\"button\"\n            class=\"bb-stack__item btn border-0 btn-circle\"\n          >\n            <!-- ACCESSIBILITY compliance: The style attributes' content is needed for NVDA to read content on hover -->\n            <span\n              class=\"sr-only\"\n              aria-label=\"Print breach limit report\"\n              i18n-aria-label=\"@bb-payord-breach-limit-print-action-aria-label\"\n              style=\"min-width: 10px; min-height: 10px\"\n            >\n              Print breach limit report\n            </span>\n            <bb-icon-ui name=\"print\"></bb-icon-ui>\n          </button>\n          <button\n            (click)=\"onClose()\"\n            type=\"button\"\n            class=\"bb-stack__item btn border-0 btn-circle\"\n          >\n            <span\n              class=\"sr-only\"\n              aria-label=\"Close breach limit report dialog\"\n              i18n-aria-label=\"@bb-payord-breach-limit-close-action-aria-label\"\n              style=\"min-width: 10px; min-height: 10px\"\n            >\n              Close breach limit report dialog\n            </span>\n            <bb-icon-ui name=\"clear\"></bb-icon-ui>\n          </button>\n        </div>\n      </header>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui role=\"main\">\n    <ng-template bbCustomModalBody>\n      <div\n        class=\"bb-block bb-block--lg\"\n        i18n=\"@bb-payord-breach-limit-details-heading\"\n        data-role=\"limit-breach-modal-message\"\n      >\n        Payment could not be submitted due to a limit breach. See details below:\n      </div>\n\n      <div class=\"table-responsive\">\n        <table class=\"table table-hover\">\n          <thead class=\"bb-table__head--highlight\">\n            <tr>\n              <th scope=\"col\" class=\"bb-table--text-start\"></th>\n              <th\n                scope=\"col\"\n                class=\"bb-table--text-end\"\n                data-role=\"breach-currency\"\n              >\n                <ng-container\n                  i18n=\"\n                    @bb-payord-breach-limit-details-breach-currency-table-heading\n                  \"\n                  >Limit</ng-container\n                >\n                <ng-container *ngIf=\"breachReportCurrency\"\n                  >({{ breachReportCurrency }})</ng-container\n                >\n              </th>\n              <th\n                scope=\"col\"\n                class=\"bb-table--text-end\"\n                i18n=\"@bb-payord-breach-limit-details-consumed-table-heading\"\n              >\n                Consumed\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              *ngFor=\"let breachInfo of sortedBreaches\"\n              data-role=\"limit-breach\"\n            >\n              <td class=\"bb-table--text-start\" data-role=\"limit-type\">\n                <span\n                  class=\"highlight\"\n                  *ngIf=\"breachInfo.breachedLimitType === 'TRANSACTIONAL'\"\n                  i18n=\"@bb-payord-breach-limit-details-per-transaction-label\"\n                >\n                  Per transaction\n                </span>\n                <ng-container\n                  *ngIf=\"breachInfo.breachedLimitType !== 'TRANSACTIONAL'\"\n                >\n                  <span\n                    class=\"highlight\"\n                    i18n=\"@bb-payord-breach-limit-details-time-frame\"\n                  >\n                    {breachInfo.timeframe.period, select, DAILY {Daily} WEEKLY\n                    {Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY\n                    {Yearly} other\n                    {{{breachInfo.timeframe.period | titlecase}}}}\n                  </span>\n                  <ng-container *ngIf=\"breachInfo.timeframe.period !== 'DAILY'\">\n                    <div\n                      [ngSwitch]=\"breachInfo.timeframe.period\"\n                      class=\"text-muted\"\n                      data-role=\"period\"\n                    >\n                      <ng-container\n                        *ngSwitchCase=\"'WEEKLY'\"\n                        i18n=\"@@bb-payord-breach-limit-details-timeframe-weekly\"\n                      >\n                        Till\n                        {{ breachInfo.timeframe.endTime | date: 'mediumDate' }}\n                      </ng-container>\n                      <ng-container\n                        *ngSwitchCase=\"'MONTHLY'\"\n                        i18n=\"\n                          @@bb-payord-breach-limit-details-timeframe-monthly\"\n                      >\n                        Till\n                        {{ breachInfo.timeframe.endTime | date: 'mediumDate' }}\n                      </ng-container>\n                      <ng-container\n                        *ngSwitchCase=\"'QUARTERLY'\"\n                        i18n=\"\n                          @@bb-payord-breach-limit-details-timeframe-quarterly\"\n                      >\n                        {{\n                          breachInfo.timeframe.startTime | date: 'mediumDate'\n                        }}\n                        -\n                        {{ breachInfo.timeframe.endTime | date: 'mediumDate' }}\n                      </ng-container>\n                      <ng-container\n                        *ngSwitchCase=\"'YEARLY'\"\n                        i18n=\"@@bb-payord-breach-limit-details-timeframe-yearly\"\n                      >\n                        {{\n                          breachInfo.timeframe.startTime | date: 'mediumDate'\n                        }}\n                        -\n                        {{ breachInfo.timeframe.endTime | date: 'mediumDate' }}\n                      </ng-container>\n                    </div>\n                  </ng-container>\n                </ng-container>\n              </td>\n\n              <td class=\"bb-table--text-end\" data-role=\"limit-amount\">\n                <span class=\"d-md-none bb-text-bold\">\n                  <ng-container\n                    i18n=\"\n                      @bb-payord-breach-limit-details-breach-currency-table-heading.responsive\n                    \"\n                  >\n                    Limit\n                  </ng-container>\n                  <ng-container *ngIf=\"breachReportCurrency\"\n                    >({{ breachReportCurrency }})</ng-container\n                  >&nbsp;\n                </span>\n                <bb-amount-ui\n                  [amount]=\"breachInfo.currentThreshold\"\n                ></bb-amount-ui>\n              </td>\n\n              <td class=\"bb-table--text-end\" data-role=\"limit-consumed\">\n                <span\n                  class=\"d-md-none bb-text-bold\"\n                  i18n=\"\n                    @bb-payord-breach-limit-details-consumed-table-heading.responsive\n                  \"\n                >\n                  Consumed&nbsp;\n                </span>\n                <ng-container\n                  *ngIf=\"breachInfo.breachedLimitType === 'TRANSACTIONAL'\"\n                >\n                  &mdash;\n                </ng-container>\n                <ng-container\n                  *ngIf=\"breachInfo.breachedLimitType !== 'TRANSACTIONAL'\"\n                >\n                  <bb-amount-ui\n                    [amount]=\"breachInfo.currentConsumption\"\n                  ></bb-amount-ui>\n                </ng-container>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div\n        class=\"card card-sm card--highlight card--shadowless\"\n        *ngIf=\"paymentDetails\"\n      >\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-6 bb-block bb-block--md\">\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"@@bb-payord-breach-limit-details-payment-debtor-account\"\n              >\n                From\n              </div>\n              <div>\n                <div class=\"break-word\" data-role=\"debit-account-name\">\n                  {{\n                    paymentDetails.initiator?.alias ||\n                      paymentDetails.initiator?.name\n                  }}\n                </div>\n                <div\n                  class=\"bb-text-support bb-subtitle\"\n                  data-role=\"debit-account-number\"\n                >\n                  {{\n                    paymentDetails.initiator?.accountNumber ||\n                      paymentDetails.initiator?.IBAN\n                  }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-6 bb-block bb-block--md\">\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"\n                  @@bb-payord-breach-limit-details-payment-counterparty-account\"\n              >\n                To\n              </div>\n              <div>\n                <div class=\"break-word\" data-role=\"credit-account-name\">\n                  {{\n                    paymentDetails.counterparty?.alias ||\n                      paymentDetails.counterparty?.name\n                  }}\n                </div>\n                <div\n                  class=\"bb-text-support bb-subtitle\"\n                  data-role=\"credit-account-number\"\n                >\n                  {{\n                    paymentDetails.counterparty?.accountNumber ||\n                      paymentDetails.counterparty?.IBAN\n                  }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-6 bb-block bb-block--md\">\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"@@bb-payord-breach-limit-details-payment-execution-date\"\n              >\n                Execution date\n              </div>\n              <div>\n                {{ paymentDetails.schedule?.startDate | date: 'mediumDate' }}\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"@@bb-payord-breach-limit-details-payment-amount\"\n              >\n                Amount\n              </div>\n              <div class=\"highlight\">\n                <bb-amount-ui\n                  class=\"bb-amount--currency-space\"\n                  data-role=\"total-amount\"\n                  [amount]=\"paymentDetails.remittanceInfo.amountGroup.amount\"\n                  [currency]=\"\n                    paymentDetails.remittanceInfo.amountGroup.currency\n                  \"\n                  [mapCurrency]=\"false\"\n                ></bb-amount-ui>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n</bb-modal-ui>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n} from '@angular/core';\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\n\ninterface CardMenuItem {\n  name: string;\n  description?: string;\n}\n\n@Component({\n  selector: 'bb-payord-card-menu',\n  templateUrl: 'card-menu.component.html',\n  providers: [NgbTooltipConfig],\n})\nexport class PayordCardMenuComponent implements AfterViewInit {\n  /**\n   * List of tab items.\n   * Default is empty list.\n   */\n  @Input() items: Array<CardMenuItem> = [];\n\n  /**\n   * Initial selected tab item.\n   * Default is `0`.\n   */\n  @Input() initialSelection = 0;\n\n  /**\n   * Select event emitted when a new tab item has been selected.\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() select = new EventEmitter<CardMenuItem>();\n\n  activeItem = 0;\n\n  constructor(config: NgbTooltipConfig) {\n    config.container = 'body';\n  }\n\n  ngAfterViewInit() {\n    if (this.items) {\n      this.activeItem = this.items[this.initialSelection]\n        ? this.initialSelection\n        : 0;\n    }\n  }\n\n  onSelect(index: number) {\n    this.activeItem = index;\n    this.select.emit(this.items[index]);\n  }\n\n  trackByName(index: number, item: CardMenuItem): string {\n    return item.name;\n  }\n}\n","<div class=\"bb-card-menu bb-stack manual-batches-type-select overflow-auto\">\n  <div\n    class=\"bb-card-menu__option bb-stack__item manual-batches-type-select__button\"\n    [class.selected]=\"i === activeItem\"\n    role=\"button\"\n    tabindex=\"0\"\n    (bbKeyboardClick)=\"onSelect(i)\"\n    *ngFor=\"let item of items; trackBy: trackByName; let i = index\"\n  >\n    <bb-ellipsis-ui\n      [text]=\"item.name\"\n      tooltipTriggers=\"hover\"\n      class=\"bb-text-bold\"\n    >\n    </bb-ellipsis-ui>\n    <ng-container *ngIf=\"item.description\">\n      <bb-ellipsis-ui\n        [text]=\"item.description\"\n        tooltipTriggers=\"hover\"\n        [lineClamp]=\"2\"\n        class=\"bb-subheader bb-subheader--regular\"\n      ></bb-ellipsis-ui>\n    </ng-container>\n  </div>\n</div>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n} from '@angular/core';\nimport {\n  FormControl,\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { PurposeOfPayment } from '@backbase/data-ang/payment-order-options';\n\n@Component({\n  selector: 'bb-select-purpose-dropdown',\n  templateUrl: './select-purpose-dropdown.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectPurposeDropdownComponent),\n    },\n  ],\n})\nexport class SelectPurposeDropdownComponent implements ControlValueAccessor {\n  _purposes!: Array<PurposeOfPayment>;\n  search = new FormControl();\n  purposeEntries!: Array<[string, string]>;\n  filteredPurposes: Array<PurposeOfPayment> = [];\n\n  /**\n   * Description length to show tooltip along\n   */\n  @Input() longDescription = 150;\n  /**\n   * Array of country iso codes\n   */\n  @Input() set purposes(purposes: Array<PurposeOfPayment>) {\n    this._purposes = purposes || [];\n    this.setupPurposes();\n  }\n  /**\n   * Field options\n   */\n  @Input() isOptional?: boolean;\n  /**\n   * Selected purpose\n   */\n  @Input() selectedPurpose?: string;\n  /**\n   * Helper text for the component. Defaults to empty string.\n   */\n  @Input() helperText = '';\n  /**\n   * Placeholder text. Defaults to empty string.\n   */\n  @Input() placeholder = '';\n  /**\n   * Label of the component. Defaults to empty string.\n   */\n  @Input() label = '';\n  /**\n   * Placeholder fot search. Defaults to empty string.\n   */\n  @Input() searchPlaceholder = '';\n  /**\n   * Icon for the dropdown. Defaults to `toggle-down`\n   */\n  @Input() dropdownIcon = 'toggle-down';\n  /**\n   * Emits value when a country is selected\n   */\n  @Output() selectPurpose = new EventEmitter<string>();\n\n  getSelectedPurposeFull(purposeCode: string): PurposeOfPayment {\n    return (\n      this._purposes.find(\n        (item: PurposeOfPayment) => item?.code === purposeCode\n      ) || {\n        code: purposeCode,\n        description: '',\n      }\n    );\n  }\n\n  setupPurposes() {\n    this.purposeEntries = this._purposes.map((purpose: PurposeOfPayment) => [\n      purpose.code,\n      purpose.description,\n    ]);\n    this.filteredPurposes = [...this._purposes];\n  }\n\n  selectItem(purpose: PurposeOfPayment) {\n    this.selectedPurpose = purpose.code;\n    this.selectPurpose.emit(purpose.code);\n    if (this.search.value) {\n      this.search.reset();\n    }\n  }\n\n  handleSearch(query = '') {\n    if (query) {\n      this.filteredPurposes = this.purposeEntries.reduce(\n        (acc: Array<PurposeOfPayment>, [code, description]) => {\n          if (\n            code.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) > -1 ||\n            description.toLocaleLowerCase().indexOf(query.toLocaleLowerCase()) >\n              -1\n          ) {\n            acc.push({ code, description });\n          }\n          return acc;\n        },\n        []\n      );\n    } else {\n      this.filteredPurposes = this._purposes;\n    }\n  }\n\n  onChange() {}\n  onTouched() {}\n  writeValue(): void {}\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","<div\n  class=\"bb-dynamic-input bb-select-purpose-dropdown\"\n  ngbDropdown\n  #dropdown=\"ngbDropdown\"\n  display=\"static\"\n>\n  <div class=\"d-inline-block bb-label\" (click)=\"btn.focus()\" *ngIf=\"label\">\n    {{ label }}\n  </div>\n  <span\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    *ngIf=\"isOptional && helperText\"\n    [id]=\"searchElem?.id + '__helper-text'\"\n    [textContent]=\"helperText\"\n  >\n  </span>\n  <div>\n    <button\n      #btn\n      bbButton\n      ngbDropdownToggle\n      color=\"unstyled\"\n      (blur)=\"onTouched()\"\n      data-role=\"open-purpose-dropdown-list-button\"\n      [attr.aria-label]=\"label\"\n      class=\"bb-select-purpose-dropdown__toggle form-control w-100 pr-5 d-flex justify-content-between bb-text-support\"\n    >\n      <ng-container *ngIf=\"selectedPurpose\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            selectedPurposeTmpl;\n            context: { $implicit: getSelectedPurposeFull(selectedPurpose) }\n          \"\n        ></ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!selectedPurpose\">\n        <ng-container\n          *ngIf=\"placeholder; else defaultPlaceHolder\"\n        ></ng-container>\n        {{ placeholder }}\n      </ng-container>\n      <bb-icon-ui [name]=\"dropdownIcon || 'toggle-down'\"></bb-icon-ui>\n    </button>\n  </div>\n\n  <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right w-100\">\n    <div class=\"bb-block bb-block--md px-3\">\n      <bb-search-box-ui\n        (focus)=\"dropdown.open()\"\n        [formControl]=\"search\"\n        (clear)=\"handleSearch('')\"\n        data-role=\"purpose-search\"\n        (ngModelChange)=\"handleSearch(search.value)\"\n        [placeholder]=\"searchPlaceholder || 'Search'\"\n        [showSearch]=\"true\"\n        [showClear]=\"true\"\n        [autocomplete]=\"'off'\"\n        #searchElem\n      >\n      </bb-search-box-ui>\n    </div>\n\n    <bb-payments-sr-search-result-info [totalNumber]=\"filteredPurposes?.length\">\n    </bb-payments-sr-search-result-info>\n\n    <div\n      *ngIf=\"filteredPurposes?.length\"\n      class=\"pre-scrollable\"\n      data-role=\"list-pop-values\"\n    >\n      <button\n        *ngFor=\"let purpose of filteredPurposes\"\n        role=\"menuitem\"\n        type=\"button\"\n        class=\"d-sm-flex px-3 py-2 d-flex-row align-items-center btn--unstyled\"\n        (bbKeyboardClick)=\"selectItem(purpose)\"\n        ngbDropdownItem\n      >\n        <ng-container\n          *ngTemplateOutlet=\"\n            purpose?.description?.length < longDescription\n              ? purposeTmpl\n              : purposeTmplLong;\n            context: { $implicit: purpose }\n          \"\n        ></ng-container>\n      </button>\n    </div>\n    <ng-container *ngIf=\"!filteredPurposes?.length && search?.value\">\n      <ng-container *ngTemplateOutlet=\"emptySearch\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"!filteredPurposes?.length && !search?.value\">\n      <ng-container *ngTemplateOutlet=\"empty\"></ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template let-purpose #purposeTmplLong>\n  <div\n    class=\"d-flex justify-content-between align-items-center w-100\"\n    data-role=\"long-pop-desc\"\n  >\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--align-top\">\n        {{ purpose.code }}\n      </div>\n      <div\n        class=\"bb-stack__item bb-text-support bb-product-selector__item-content\"\n        [bbTooltip]=\"tipContent\"\n        placement=\"right\"\n        [triggers]=\"'hover'\"\n        [container]=\"'body'\"\n      >\n        <bb-ellipsis-ui [lineClamp]=\"5\">{{\n          purpose.description\n        }}</bb-ellipsis-ui>\n      </div>\n    </div>\n  </div>\n  <ng-template #tipContent\n    ><div class=\"bb-text-align-left\">\n      {{ purpose.description }}\n    </div></ng-template\n  >\n</ng-template>\n\n<ng-template let-purpose #purposeTmpl>\n  <div\n    class=\"d-flex justify-content-between align-items-center w-100\"\n    data-role=\"short-pop-desc\"\n  >\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--align-top\">\n        {{ purpose.code }}\n      </div>\n      <div\n        class=\"bb-stack__item bb-text-support bb-product-selector__item-content\"\n      >\n        {{ purpose.description }}\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template let-purpose #selectedPurposeTmpl>\n  <div class=\"d-flex justify-content-between align-items-center w-100\">\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--align-top\">\n        {{ purpose.code }}\n      </div>\n      <div\n        class=\"bb-stack__item bb-text-support bb-ellipsis bb-ellipsis--single-line\"\n        [bbTooltip]=\"tipContent\"\n        placement=\"bottom\"\n        [triggers]=\"'hover'\"\n        data-role=\"pop-description\"\n      >\n        {{ purpose.description }}\n      </div>\n    </div>\n  </div>\n  <ng-template #tipContent\n    ><div class=\"bb-text-align-left\">\n      {{ purpose.description }}\n    </div></ng-template\n  >\n</ng-template>\n\n<ng-template #emptySearch>\n  <div class=\"card-body\">\n    <bb-empty-state-ui\n      data-role=\"no-templates-found\"\n      title=\"No search results\"\n      i18n-title=\"@@bb-select-purpose-dropdown.empty-state-title\"\n      [showIcon]=\"false\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n\n<ng-template #empty>\n  <div class=\"card-body\">\n    <bb-empty-state-ui\n      data-role=\"no-templates-provided\"\n      title=\"No Purposes Provided\"\n      i18n-title=\"@@bb-select-purpose-dropdown.empty-title\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n\n<ng-template #defaultPlaceHolder>\n  <ng-container i18n=\"@@purpose-selector-default-placeholder\"\n    >- select a purpose -</ng-container\n  >\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoutableModalParamName } from '../../models/types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoutableModalService {\n  constructor(private readonly router: Router) {}\n\n  openModal(modalName: string) {\n    if (modalName) {\n      this.router.navigate([], {\n        queryParams: { [RoutableModalParamName]: modalName },\n        queryParamsHandling: 'merge',\n      });\n    }\n  }\n\n  closeModal() {\n    this.router.navigate([], {\n      queryParams: { [RoutableModalParamName]: null },\n      queryParamsHandling: 'merge',\n    });\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PUBSUB, Pubsub, Unsubscribe } from '@backbase/foundation-ang/web-sdk';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { RoutableModalParamName } from '../../models/types';\nimport { RoutableModalService } from './bb-routable-modal-service';\n\n@Component({\n  selector: 'bb-routable-modal',\n  template: `\n    <bb-modal-ui\n      class=\"bb-modal-container\"\n      [isOpen]=\"isModalOpen$ | async\"\n      [modalOptions]=\"modalOptions || defaultModalOptions\"\n      (dismissCallback)=\"closeModal()\"\n    >\n      <bb-modal-header-ui *ngIf=\"showHeader\">\n        <ng-template bbCustomModalHeader>\n          <div class=\"bb-stack bb-stack--density-xs\">\n            <div class=\"bb-stack__item\" *ngIf=\"modalTitleIcon\">\n              <bb-icon-ui\n                [name]=\"modalTitleIcon\"\n                class=\"bb-text-disabled bb-modal-container__header-icon\"\n              >\n              </bb-icon-ui>\n            </div>\n\n            <div class=\"bb-stack__item\" *ngIf=\"modalTitle\">\n              <bb-header-ui\n                class=\"bb-modal-container__header-title\"\n                [headingType]=\"modalHeadingType\"\n                [heading]=\"modalTitle\"\n              ></bb-header-ui>\n            </div>\n\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right\"\n              *ngIf=\"closeButton\"\n            >\n              <button\n                bbButton\n                class=\"bb-modal-container__close-btn bb-text-support\"\n                circle=\"true\"\n                buttonSize=\"sm\"\n                color=\"unstyled\"\n                (click)=\"closeModal()\"\n                aria-label=\"Close modal dialog\"\n                i18n-aria-label=\"\n                  Close template detail dialog@@modal-container.close-btn\"\n              >\n                <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n              </button>\n            </div>\n          </div>\n        </ng-template>\n      </bb-modal-header-ui>\n      <bb-modal-body-ui>\n        <ng-template bbCustomModalBody>\n          <ng-content></ng-content>\n        </ng-template>\n      </bb-modal-body-ui>\n    </bb-modal-ui>\n  `,\n})\nexport class RoutableModalComponent implements OnDestroy, OnInit {\n  /**\n   * Modal Options\n   */\n  @Input() modalOptions?: NgbModalOptions;\n  /**\n   * Flag to show close button\n   */\n  @Input() closeButton = false;\n  /**\n   * Modal window name (url friendly, without spaces)\n   */\n  @Input() modalWindowName = '';\n  /**\n   * Flag to show modal header\n   */\n  @Input() showHeader = true;\n  /**\n   * Modal Title\n   */\n  @Input() modalTitle = '';\n  /**\n   * Modal Title Icon\n   */\n  @Input() modalTitleIcon = '';\n  /**\n   * Modal heading type (h1-h6)\n   */\n  @Input() modalHeadingType = 'h2';\n  /**\n   * Event emitted when the modal visibility has changed\n   */\n  @Output() visibilityChange = new EventEmitter();\n\n  isModalOpen$ = new BehaviorSubject(false);\n\n  readonly defaultModalOptions = {\n    backdrop: 'static',\n    keyboard: false,\n    size: 'lg',\n    animation: false,\n    scrollable: false,\n    windowClass: '',\n  };\n  private subscription!: Subscription;\n  unsubscribeEvent!: Unsubscribe;\n\n  constructor(\n    private route: ActivatedRoute,\n    private readonly modalService: RoutableModalService,\n    @Inject(PUBSUB) private readonly eventBus: Pubsub\n  ) {}\n\n  ngOnInit() {\n    this.unsubscribeEvent = this.eventBus.subscribe(\n      this.modalWindowName,\n      () => {\n        this.modalService.openModal(this.modalWindowName);\n      }\n    );\n\n    this.subscription = this.route.queryParams.subscribe((params) => {\n      if (\n        params[RoutableModalParamName] === this.modalWindowName &&\n        !this.isModalOpen$.value\n      ) {\n        this.openModal();\n      } else if (this.isModalOpen$.value) {\n        this.closeModal();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n    this.unsubscribeEvent?.();\n  }\n\n  openModal() {\n    this.isModalOpen$.next(true);\n    this.visibilityChange.emit(true);\n  }\n\n  closeModal() {\n    this.isModalOpen$.next(false);\n    this.visibilityChange.emit(false);\n    this.modalService.closeModal();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { HorizontalListItem } from '../../../configs/models/form-items.model';\n\nexport const ModalContainerParamName = 'modalOpened';\n@Component({\n  selector: 'bb-horizontal-list-selector',\n  template: `\n    <div class=\"bb-horizontal-list-selector\" role=\"tablist\">\n      <ng-container *ngFor=\"let option of options\">\n        <button\n          class=\"bb-horizontal-list-selector__item\"\n          bbButton\n          color=\"unstyled\"\n          role=\"tab\"\n          [attr.aria-selected]=\"activeItem === option.value\"\n          [attr.aria-controls]=\"option.value\"\n          [ngClass]=\"{\n            'bb-horizontal-list-selector__item--active':\n              activeItem === option.value\n          }\"\n          (bbKeyboardClick)=\"onSelect(option.value)\"\n        >\n          <div #elem>\n            {{ option.label }}\n          </div>\n          <div\n            class=\"bb-subheader bb-subheader--regular text-wrap\"\n            *ngIf=\"option.description\"\n            [style.width.px]=\"elem.offsetWidth\"\n          >\n            <bb-ellipsis-ui\n              [text]=\"option.description\"\n              tooltipTriggers=\"hover\"\n              [lineClamp]=\"2\"\n              class=\"bb-subheader bb-subheader--regular\"\n            ></bb-ellipsis-ui>\n          </div>\n        </button>\n      </ng-container>\n    </div>\n  `,\n})\nexport class HorizontalListSelectorComponent implements OnInit {\n  /**\n   * List items\n   */\n  @Input() options: HorizontalListItem[] = [];\n  /**\n   * Value of the active list item\n   */\n  @Input() activeItem!: string;\n  /**\n   * Flag to denote if the list is preselected. Defaults to true.\n   */\n  @Input() preselect = true;\n  /**\n   * Event emitted on select of an item\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() select = new EventEmitter();\n\n  ngOnInit() {\n    if (this.preselect && !this.activeItem) {\n      this.select.emit(this.options[0]?.value);\n    }\n  }\n\n  onSelect(value: string) {\n    this.select.emit(value);\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { DeprecationsService } from '@backbase/foundation-ang/core';\nimport { tap } from 'rxjs/operators';\nimport { PaymentTemplatesData } from '../../models/types';\n\n@Component({\n  selector: 'bb-payment-template-selector',\n  templateUrl: 'payment-template-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentTemplateSelectorComponent implements OnInit {\n  /**\n   * Items to display in the payment template selector.\n   */\n  @Input() items!: Observable<PaymentTemplatesData>;\n\n  /**\n   * @deprecated since version 3.9.1\n   */\n  @Input() templatesList?: PaymentTemplate[];\n\n  /**\n   * Payment template FormControl.\n   */\n  @Input() paymentTemplateSearch?: FormControl;\n\n  /**\n   * Flag indicates if the list is loading.\n   * Default value is `false`.\n   */\n  @Input() loading = false;\n\n  /**\n   * Name of the template selector.\n   * Default value is ``\n   */\n  @Input() templateName = '';\n\n  /**\n   * Term value on searching a template\n   */\n  @Input() set searchValue(term: string) {\n    this.onSearchPaymentTemplates(term);\n    this.searchModel = term;\n  }\n\n  /**\n   * Emits the values for the payment form.\n   */\n  @Output() setValues = new EventEmitter<PaymentTemplate>();\n\n  /**\n   * Event emmiter for loading payment templates.\n   */\n  @Output() loadMoreTemplates = new EventEmitter<number>();\n\n  /**\n   * Event emmiter for search payment templates.\n   */\n  @Output() searchTemplates = new EventEmitter<string>();\n\n  /**\n   * Event emmiter for clear the payment form.\n   */\n  @Output() clear = new EventEmitter<string>();\n\n  searchTerm = new BehaviorSubject<string>('');\n  templates$!: Observable<PaymentTemplatesData>;\n  searchModel?: string;\n  templatesCount!: number;\n\n  loadMore(page: number) {\n    this.loadMoreTemplates.emit(page);\n  }\n\n  onSetValues(acc: PaymentTemplate) {\n    this.setValues.emit(acc);\n  }\n\n  onSearchPaymentTemplates(value: string) {\n    this.searchTemplates.emit(value);\n    this.searchTerm.next(value);\n  }\n\n  onClearForm(name: string) {\n    this.clear.emit(name);\n    this.templateName = name;\n  }\n\n  constructor(private deprecationsService: DeprecationsService) {}\n\n  ngOnInit() {\n    if (this.templatesList) {\n      this.deprecationsService.logDeprecatedFeature(\n        `The templatesList property has been deprecated since 3.9.1 and will be removed in 3.10.0.`\n      );\n    }\n    this.items = this.items.pipe(\n      tap(\n        (templateItems) =>\n          (this.templatesCount =\n            this.templatesCount ?? templateItems.totalCount)\n      )\n    );\n  }\n}\n","<ng-container *ngIf=\"items | async as paymentTemplates\">\n  <div *ngIf=\"templatesCount\" class=\"bb-block bb-block--lg\">\n    <bb-dropdown-menu-ui\n      position=\"bottom-left\"\n      buttonSize=\"sm\"\n      btnColor=\"secondary\"\n      container=\"body\"\n      (click)=\"$event.stopPropagation()\"\n      (keyUp.enter)=\"$event.stopPropagation()\"\n      data-role=\"payment-template-selector-dropdown\"\n      ariaLabel=\"Payment template DropDown button\"\n      i18n-ariaLabel=\"@@omni-payment-template-selector.dropdown\"\n    >\n      <ng-template bbDropdownLabel>\n        <span\n          class=\"bb-payment-template-selector__placeholder bb-ellipsis bb-ellipsis--single-line\"\n        >\n          <ng-container *ngIf=\"templateName\">{{ templateName }}</ng-container>\n          <ng-container\n            *ngIf=\"!templateName\"\n            i18n=\"@@omni-payment-template-selector.label\"\n            >Select a template\n          </ng-container>\n        </span>\n        <bb-icon-ui name=\"caret-down\" size=\"md\"></bb-icon-ui>\n      </ng-template>\n      <ng-template bbDropdownMenuItem>\n        <div class=\"bb-payment-template-selector__list-container\">\n          <div class=\"bb-payment-template-selector__search-box-container\">\n            <div\n              class=\"bb-payment-template-selector__search-box\"\n              [ngClass]=\"{ 'bb-block--sm': (searchTerm | async) }\"\n            >\n              <bb-search-box-ui\n                data-role=\"search-template\"\n                #searchBox\n                aria-label=\"Search template name\"\n                i18n-aria-label=\"@@template-selector-search-template-label\"\n                [showSearch]=\"true\"\n                [showClear]=\"true\"\n                [ngModel]=\"searchModel\"\n                placeholder=\"Search template name\"\n                i18n-placeholder=\"\n                  @@template-selector-search-template-placeholder\"\n                (valueChange)=\"onSearchPaymentTemplates($event)\"\n                (clear)=\"onSearchPaymentTemplates('')\"\n              >\n              </bb-search-box-ui>\n            </div>\n            <ng-container *ngIf=\"(searchTerm | async) && !loading\">\n              <bb-payments-sr-search-result-info\n                [totalNumber]=\"paymentTemplates.totalCount\"\n              >\n              </bb-payments-sr-search-result-info>\n              <div class=\"bb-block bb-block--xs\"></div>\n              <div\n                *ngIf=\"paymentTemplates?.items?.length\"\n                data-role=\"results-found\"\n                i18n=\"@@omni-payment-template-selector.results-found\"\n              >\n                {paymentTemplates?.items?.length, plural, =1 {1 result found}\n                other\n                {{{paymentTemplates?.items?.length}} results found}}\n              </div>\n            </ng-container>\n          </div>\n          <div class=\"bb-infinite-scroll-container\">\n            <bb-infinite-scroll-ui\n              class=\"bb-infinite-scroll\"\n              [disableScrollEnd]=\"\n                loading ||\n                paymentTemplates?.items?.length === paymentTemplates?.totalCount\n              \"\n              [offset]=\"5\"\n              (scrollEnd)=\"loadMore(1)\"\n            >\n              <ng-container\n                *ngIf=\"paymentTemplates?.items?.length; else emptyState\"\n              >\n                <div class=\"bb-list\" *ngIf=\"!loading\">\n                  <div\n                    role=\"menuitem\"\n                    *ngFor=\"let temp of paymentTemplates?.items\"\n                    class=\"dropdown-item btn-link-dark bb-payment-template-selector__item\"\n                    (click)=\"onSetValues(temp)\"\n                    (keydown.enter)=\"onSetValues(temp)\"\n                  >\n                    <div\n                      class=\"bb-ellipsis bb-ellipsis--single-line bb-text-bold\"\n                      data-role=\"template-name\"\n                    >\n                      {{ temp.name }}\n                    </div>\n                    <ng-container\n                      *ngIf=\"\n                        temp.details\n                          .transferTransactionInformation as transactionInfo;\n                        else noBeneficiaryInfo\n                      \"\n                    >\n                      <div\n                        *ngIf=\"\n                          transactionInfo?.counterpartyAccount?.identification\n                            ?.identification ||\n                            transactionInfo?.counterparty?.name;\n                          else noBeneficiaryInfo\n                        \"\n                      >\n                        <div\n                          class=\"bb-subtitle bb-ellipsis bb-ellipsis--single-line\"\n                          data-role=\"template-counterparty-name\"\n                        >\n                          To: {{ transactionInfo.counterparty.name }}\n                        </div>\n                        <div\n                          class=\"bb-subtitle bb-text-support bb-ellipsis bb-ellipsis--single-line\"\n                          data-role=\"template-account\"\n                        >\n                          {{\n                            transactionInfo.counterpartyAccount.identification\n                              .identification\n                          }}\n                        </div>\n                        <div\n                          *ngIf=\"\n                            transactionInfo?.instructedAmount?.amount as amount\n                          \"\n                          class=\"bb-stack bb-subtitle\"\n                        >\n                          <bb-amount-ui\n                            class=\"bb-stack__item bb-stack__item--push-right\"\n                            [currency]=\"\n                              transactionInfo.instructedAmount.currencyCode\n                            \"\n                            [amount]=\"amount\"\n                            [mapCurrency]=\"false\"\n                          ></bb-amount-ui>\n                        </div>\n                      </div>\n                    </ng-container>\n                    <ng-template #noBeneficiaryInfo>\n                      <div\n                        data-role=\"no-beneficiary-info\"\n                        class=\"bb-subtitle bb-text-support\"\n                        i18n=\"\n                          @@omni-payment-template-selector.no-beneficiary-info\"\n                      >\n                        No beneficiary info\n                      </div>\n                    </ng-template>\n                  </div>\n                </div>\n                <p *ngIf=\"loading\">\n                  <bb-loading-indicator-ui></bb-loading-indicator-ui>\n                </p>\n              </ng-container>\n              <ng-template #emptyState>\n                <div class=\"card-body\">\n                  <bb-empty-state-ui\n                    data-role=\"no-templates-found\"\n                    title=\"No Results Found\"\n                    subtitle=\"We can’t find what you’re looking for. Please try a different criteria.\"\n                    iconSize=\"xxl\"\n                    i18n-subtitle=\"\n                      @@omni-payment-template-selector.empty-state-subtitle\"\n                    i18n-title=\"\n                      @@omni-payment-template-selector.empty-state-title\"\n                    iconModifier=\"search\"\n                    [showIcon]=\"true\"\n                  ></bb-empty-state-ui>\n                </div>\n              </ng-template>\n            </bb-infinite-scroll-ui>\n          </div>\n        </div>\n      </ng-template>\n    </bb-dropdown-menu-ui>\n  </div>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\n\n@Component({\n  selector: 'bb-beneficiary-account',\n  templateUrl: 'beneficiary-account.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BeneficiaryAccountComponent {\n  /**\n   * Own account item\n   */\n  @Input()\n  set account(item: ProductSummaryItem) {\n    this._account = item;\n    if (item) {\n      this.accountNumber = item.BBAN || item.number || '';\n      this.balance = item.availableBalance || item.bookedBalance || 0;\n    }\n  }\n  get account() {\n    return this._account;\n  }\n  private _account!: ProductSummaryItem;\n\n  accountNumber?: string;\n  balance?: number;\n}\n","<div class=\"bb-stack\">\n  <div class=\"d-none d-md-block bb-stack__item\">\n    <span\n      class=\"sr-only\"\n      i18n=\"@@beneficiary.selector.ui.group.account.own.account\"\n      >Own Account</span\n    >\n    <bb-icon-ui\n      size=\"xl\"\n      color=\"primary\"\n      class=\"bb-stack\"\n      name=\"current-accounts\"\n    >\n    </bb-icon-ui>\n  </div>\n\n  <div class=\"bb-stack__item\">\n    <span\n      class=\"sr-only\"\n      i18n=\"@@beneficiary.selector.ui.account.name.label\"\n      id=\"account_accountNameLabel\"\n    >\n      Account name:\n    </span>\n    <div class=\"bb-text-bold\" data-role=\"beneficiary-account-name-list-item\">\n      {{ account?.name }}\n    </div>\n\n    <span\n      class=\"sr-only\"\n      i18n=\"@@beneficiary.selector.ui.account.number.label\"\n      id=\"account_accountNumberLabel\"\n    >\n      Account number:\n    </span>\n    <div class=\"text-dark\" data-role=\"beneficiary-account-number-list-item\">\n      {{ accountNumber }}\n    </div>\n  </div>\n\n  <ng-container>\n    <div\n      class=\"bb-stack__item bb-stack__item--push-right bb-stack__break--sm-down\"\n    >\n      <span\n        class=\"sr-only\"\n        i18n=\"@@beneficiary.selector.ui.balance.label\"\n        id=\"account_accountBalanceLabel\"\n      >\n        Account balance:\n      </span>\n\n      <bb-amount-ui\n        class=\"bb-text-bold\"\n        [amount]=\"balance\"\n        [mapCurrency]=\"false\"\n        [currency]=\"account?.currency\"\n        [bbHighlight]=\"false\"\n        [attr.data-role]=\"'beneficiary-account-amount-list-item'\"\n      ></bb-amount-ui>\n    </div>\n  </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ContactItem } from '../../../../models/types';\n\n@Component({\n  selector: 'bb-beneficiary-contact',\n  templateUrl: 'beneficiary-contact.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BeneficiaryContactComponent {\n  /**\n   * Contact item\n   */\n  @Input()\n  set contact(item: ContactItem & { accountName?: string }) {\n    this._contact = item;\n    if (item?.accounts[0]) {\n      this.accountNumber =\n        item.accounts[0].accountNumber || item.accounts[0].IBAN || '';\n    }\n  }\n  get contact() {\n    return this._contact;\n  }\n  private _contact!: ContactItem & { accountName?: string };\n\n  accountNumber?: string;\n}\n","<div class=\"bb-stack\">\n  <div class=\"d-none d-md-block bb-stack__item\">\n    <span class=\"sr-only\" i18n=\"@@beneficiary.selector.ui.group.contacts\"\n      >Contact</span\n    >\n    <bb-icon-ui size=\"xl\" color=\"primary\" class=\"bb-stack\" name=\"contacts\">\n    </bb-icon-ui>\n  </div>\n\n  <div class=\"text-left\">\n    <span\n      class=\"sr-only\"\n      i18n=\"@@beneficiary.selector.ui.contact.account.name.label\"\n      id=\"contact_accountNameLabel\"\n    >\n      Account name:\n    </span>\n    <div class=\"bb-text-bold\" data-role=\"beneficiary-account-name-list-item\">\n      {{ contact?.name }}\n      <ng-container *ngIf=\"contact?.accountName\">\n        - {{contact?.accountName}}</ng-container\n      >\n    </div>\n\n    <span\n      class=\"sr-only\"\n      i18n=\"@@beneficiary.selector.ui.contact.account.number.label\"\n      id=\"contact_accountNumberLabel\"\n    >\n      ; Account number:\n    </span>\n    <div\n      class=\"text-dark\"\n      *ngIf=\"accountNumber\"\n      data-role=\"beneficiary-account-number-list-item\"\n    >\n      {{ accountNumber }}\n    </div>\n  </div>\n</div>\n","import {\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  QueryList,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport abstract class KeyboardNavigationDirectiveBase {\n  abstract onKeyDown(event: KeyboardEvent): void;\n}\n\n@Directive({\n  selector: '[bbKeyboardNavigationItem]',\n})\nexport class KeyboardNavigationItemDirective {\n  constructor(\n    @Inject(forwardRef(() => KeyboardNavigationDirective))\n    public navigator: KeyboardNavigationDirectiveBase,\n    public elementRef: ElementRef<HTMLElement>\n  ) {}\n}\n\n@Directive({\n  selector: '[bbKeyboardNavigationAnchor]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '(keydown.ArrowLeft)': 'navigator.onKeyDown($event)',\n    '(keydown.ArrowRight)': 'navigator.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'navigator.onKeyDown($event)',\n    '(keydown.Tab)': 'navigator.onKeyDown($event)',\n  },\n})\nexport class KeyboardNavigationAnchorDirective {\n  readonly nativeElement = this.elementRef.nativeElement;\n\n  constructor(\n    @Inject(forwardRef(() => KeyboardNavigationDirective))\n    public navigator: KeyboardNavigationDirectiveBase,\n    public elementRef: ElementRef<HTMLElement>\n  ) {}\n}\n\n@Directive({\n  selector: '[bbKeyboardNavigationList]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '(keydown.ArrowUp)': 'navigator.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'navigator.onKeyDown($event)',\n    '(keydown.Shift)': 'navigator.onKeyDown($event)',\n    '(keydown.Tab)': 'navigator.onKeyDown($event)',\n    '(keydown.Shift.Tab)': 'navigator.onKeyDown($event)',\n    '(keydown.Space)': 'navigator.onKeyDown($event)',\n    '(keydown.Enter)': 'navigator.onKeyDown($event)',\n  },\n})\nexport class KeyboardNavigationListDirective {\n  readonly nativeElement = this.elementRef.nativeElement;\n  @ContentChildren(KeyboardNavigationItemDirective, { descendants: true })\n  items!: QueryList<KeyboardNavigationItemDirective>;\n\n  constructor(\n    @Inject(forwardRef(() => KeyboardNavigationDirective))\n    public navigator: KeyboardNavigationDirectiveBase,\n    public elementRef: ElementRef<HTMLElement>\n  ) {}\n}\n\n@Directive({\n  selector: '[bbKeyboardNavigation]',\n})\nexport class KeyboardNavigationDirective\n  implements KeyboardNavigationDirectiveBase\n{\n  @ContentChild(KeyboardNavigationListDirective, { static: false })\n  private list!: KeyboardNavigationListDirective;\n  @ContentChildren(KeyboardNavigationAnchorDirective, { descendants: true })\n  private anchorList!: QueryList<KeyboardNavigationAnchorDirective>;\n  private _document!: Document;\n\n  private static resetItem(position: number, itemElements: HTMLElement[]) {\n    if (position === -1) {\n      return;\n    }\n    itemElements[position].removeAttribute('tabindex');\n  }\n\n  private static resetTabItem(position: number, itemElements: HTMLElement[]) {\n    itemElements[position].setAttribute('tabindex', '-1');\n  }\n\n  private static setItemActive(position: number, itemElements: HTMLElement[]) {\n    itemElements[position].setAttribute('tabindex', '0');\n    itemElements[position].focus();\n  }\n\n  private static setPositionUp(position: number): number {\n    return Math.max(position - 1, 0);\n  }\n\n  private static setPositionDown(position: number, itemsLength: number) {\n    return Math.min(position + 1, itemsLength - 1);\n  }\n\n  private isEventFromAnchor($event: KeyboardEvent): boolean {\n    return !!this.anchorList?.find((el) =>\n      el.nativeElement.contains($event.target as HTMLElement)\n    );\n  }\n\n  private getListElements(): HTMLElement[] {\n    return this.list?.items.map((item) => item.elementRef.nativeElement);\n  }\n\n  private getListAnchor(): HTMLElement[] {\n    return this.anchorList?.map((item) => item.elementRef.nativeElement);\n  }\n\n  constructor(@Inject(DOCUMENT) private readonly document: any) {\n    this._document = this.document as Document;\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    const code = event.code;\n    const itemElements = this.getListElements();\n    const anchorElements = this.getListAnchor();\n    const isEventFromAnchor = this.isEventFromAnchor(event);\n    const horizontalNav = new Set(['ArrowRight', 'ArrowLeft']);\n    const selectedEvents = new Set(['Space', 'Enter']);\n\n    let itemPosition = -1;\n    let anchorPosition = 0;\n    let itemElement: HTMLElement | null = null;\n\n    if (code === 'ArrowDown' || code === 'Tab') {\n      if (isEventFromAnchor && itemElements?.length) {\n        KeyboardNavigationDirective.setItemActive(0, itemElements);\n        event.preventDefault();\n      }\n      if (code === 'Tab') {\n        return;\n      }\n    }\n\n    if (!isEventFromAnchor && itemElements?.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target as HTMLElement)) {\n          itemElement = item;\n        }\n\n        if (item === this._document.activeElement) {\n          itemPosition = index;\n        }\n      });\n    }\n\n    if (selectedEvents.has(code) && !isEventFromAnchor && itemElement) {\n      event.preventDefault();\n      (itemElement as HTMLElement).click();\n      return;\n    }\n\n    if (\n      isEventFromAnchor &&\n      anchorElements.length > 1 &&\n      horizontalNav.has(code)\n    ) {\n      anchorElements.forEach((item, index) => {\n        if (item === this._document.activeElement) {\n          anchorPosition = index;\n        }\n      });\n\n      switch (code) {\n        case 'ArrowRight':\n          KeyboardNavigationDirective.resetTabItem(\n            anchorPosition,\n            anchorElements\n          );\n          anchorPosition = KeyboardNavigationDirective.setPositionDown(\n            anchorPosition,\n            anchorElements.length\n          );\n          break;\n        case 'ArrowLeft':\n          KeyboardNavigationDirective.resetTabItem(\n            anchorPosition,\n            anchorElements\n          );\n          anchorPosition =\n            KeyboardNavigationDirective.setPositionUp(anchorPosition);\n          break;\n      }\n\n      KeyboardNavigationDirective.setItemActive(anchorPosition, anchorElements);\n      return;\n    }\n\n    if (!isEventFromAnchor && itemElement) {\n      switch (code) {\n        case 'ArrowDown':\n          KeyboardNavigationDirective.resetItem(itemPosition, itemElements);\n          itemPosition = KeyboardNavigationDirective.setPositionDown(\n            itemPosition,\n            itemElements.length\n          );\n          break;\n        case 'ArrowUp':\n          KeyboardNavigationDirective.resetItem(itemPosition, itemElements);\n          itemPosition =\n            KeyboardNavigationDirective.setPositionUp(itemPosition);\n          break;\n      }\n\n      KeyboardNavigationDirective.setItemActive(itemPosition, itemElements);\n\n      event.preventDefault();\n    }\n  }\n}\n","export const defaultBeneficiaryCdkScrollConfig = {\n  itemSize: 64,\n  minBufferPx: 340,\n  maxBufferPx: 400,\n};\n","import { FixedSizeVirtualScrollStrategy } from '@angular/cdk/scrolling';\nimport { defaultBeneficiaryCdkScrollConfig } from '../constants/beneficiary-scroll-config';\n\nexport class BeneficiaryScrollStrategyService extends FixedSizeVirtualScrollStrategy {\n  constructor() {\n    const { itemSize, minBufferPx, maxBufferPx } =\n      defaultBeneficiaryCdkScrollConfig;\n    super(itemSize, minBufferPx, maxBufferPx);\n  }\n}\n","import {\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  QueryList,\n  Self,\n} from '@angular/core';\nimport {\n  CdkVirtualScrollViewport,\n  VIRTUAL_SCROLL_STRATEGY,\n} from '@angular/cdk/scrolling';\nimport { Subject } from 'rxjs';\nimport { defaultBeneficiaryCdkScrollConfig } from '../constants/beneficiary-scroll-config';\nimport { BeneficiaryScrollStrategyService } from '../services/beneficiary-scroll-strategy.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[bbBeneficiaryScrollItem]',\n})\nexport class BeneficiaryScrollItemDirective {}\n\nexport function factoryScroll() {\n  return new BeneficiaryScrollStrategyService();\n}\n\n@Directive({\n  selector: '[bbBeneficiaryScroll]',\n  providers: [\n    {\n      provide: VIRTUAL_SCROLL_STRATEGY,\n      useFactory: factoryScroll,\n    },\n  ],\n})\nexport class BeneficiaryScrollDirective implements OnDestroy, AfterViewInit {\n  private readonly destroy$ = new Subject();\n\n  @ContentChildren(BeneficiaryScrollItemDirective, {\n    descendants: true,\n    read: ElementRef,\n  })\n  private listItems!: QueryList<ElementRef<HTMLElement>>;\n\n  /**\n   * Total items length of the list\n   */\n  @Input() bbBeneficiaryScrollTotalCount: number | undefined;\n\n  /**\n   * Trigger fetching more items\n   */\n  @Output('bbBeneficiaryScroll') loadMore = new EventEmitter<void>();\n\n  constructor(\n    @Self() private readonly viewport: CdkVirtualScrollViewport,\n    @Inject(VIRTUAL_SCROLL_STRATEGY)\n    private readonly scrollStrategy: BeneficiaryScrollStrategyService,\n    private readonly ngZone: NgZone\n  ) {\n    this.viewport.scrolledIndexChange\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        const dataLength = this.viewport.getDataLength();\n        const { end } = this.viewport.getRenderedRange();\n\n        if (\n          dataLength &&\n          end === dataLength &&\n          dataLength !== this.bbBeneficiaryScrollTotalCount\n        ) {\n          // CdkVirtualScrollViewport runs all events outside zone,\n          // to detect changes we need to emit load more event inside zone.\n          this.ngZone.run(() =>\n            Promise.resolve().then(() => {\n              this.loadMore.emit();\n            })\n          );\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    const { minBufferPx, maxBufferPx } = defaultBeneficiaryCdkScrollConfig;\n    const listItemSize =\n      this.listItems?.toArray()[0]?.nativeElement?.clientHeight;\n\n    if (listItemSize) {\n      this.scrollStrategy.updateItemAndBufferSize(\n        listItemSize,\n        minBufferPx,\n        maxBufferPx\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { ContactItem } from '../../../../models/types';\n\nimport {\n  BeneficiaryList,\n  BeneficiaryListState,\n  defaultBeneficiaryTabsConfig,\n  ListState,\n} from '../../../../constants';\n\n@Component({\n  selector: 'bb-beneficiary-tabs',\n  templateUrl: 'beneficiary-tabs.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BeneficiaryTabsComponent implements OnInit {\n  static _id = 0;\n  readonly tabsId = `beneficiaryTabs${BeneficiaryTabsComponent._id++}`;\n  readonly contactsListId = `beneficiaryContactsList${BeneficiaryTabsComponent._id++}`;\n  readonly accountsListId = `beneficiaryAccountsList${BeneficiaryTabsComponent._id++}`;\n  /**\n   * List of accounts\n   */\n  @Input() accounts!: ProductSummaryItem[];\n\n  /**\n   * List of contacts\n   */\n  @Input() contacts!: ContactItem[];\n\n  /**\n   * Total count of accounts\n   */\n  @Input() totalAccounts = 0;\n\n  /**\n   * Total count of contacts\n   */\n  @Input() totalContacts = 0;\n\n  /**\n   * Selected account event emitter\n   */\n  @Output() selectedAccount = new EventEmitter<ProductSummaryItem>();\n\n  /**\n   * Selected contact event emitter\n   */\n  @Output() selectedContact = new EventEmitter<ContactItem>();\n\n  /**\n   * Trigger fetching more beneficiary items\n   */\n  @Output() fetchMoreItems = new EventEmitter<BeneficiaryList>();\n\n  /**\n   * Manual edit event emitter\n   */\n  @Output() manualEdit = new EventEmitter<boolean>();\n\n  /**\n   * Search state, has truthy value if has search query\n   */\n  @Output() searching = new EventEmitter<boolean>();\n\n  /**\n   * State of the list from parent component\n   */\n  @Input() listState!: BeneficiaryListState;\n\n  /**\n   * Tabs configuration\n   */\n  @Input() tabsConfig!: Array<BeneficiaryList>;\n\n  /**\n   * Dropdown status\n   */\n  @Input() isDropdownOpen = false;\n\n  activeTab!: BeneficiaryList | undefined;\n\n  /** Flag which determines if we can enter data manually\n   * Default value is `true`\n   */\n  @Input() canEditManually = true;\n\n  readonly listingState = ListState;\n  readonly beneficiaryList = BeneficiaryList;\n\n  private onLoadMore() {\n    this.fetchMoreItems.emit(this.activeTab);\n  }\n\n  ngOnInit() {\n    this.tabsConfig = this.tabsConfig || defaultBeneficiaryTabsConfig;\n    this.activeTab = this.tabsConfig[0];\n  }\n\n  showTabs(): boolean {\n    return (\n      this.isDropdownOpen &&\n      Object.values(this.listState || {}).some(\n        (state) => state !== ListState.NO_RESULT\n      ) &&\n      !this.isNoTabsConfigured()\n    );\n  }\n\n  isNoTabsConfigured(): boolean {\n    return this.tabsConfig.length === 0;\n  }\n\n  selectAccount(account: ProductSummaryItem) {\n    this.selectedAccount.emit(account);\n  }\n\n  selectContact(contact: ContactItem) {\n    this.selectedContact.emit(contact);\n  }\n\n  setActiveTab(event: Event, tabName: BeneficiaryList) {\n    this.activeTab = tabName;\n  }\n\n  emitManualDetails() {\n    this.manualEdit.emit(true);\n  }\n\n  onRangeChange() {\n    if (\n      this.activeTab &&\n      this.listState[this.activeTab] === this.listingState.LIST\n    ) {\n      this.onLoadMore();\n    }\n  }\n\n  refreshList() {\n    this.onLoadMore();\n  }\n\n  trackById(_index: number, item: ProductSummaryItem | ContactItem): string {\n    return item.id;\n  }\n}\n","<div bbKeyboardNavigation role=\"tablist\" [id]=\"tabsId\">\n  <div\n    *ngIf=\"showTabs()\"\n    role=\"tablist\"\n    aria-label=\"Beneficiary selector tabs\"\n    class=\"nav nav-tabs\"\n  >\n    <ng-container *ngFor=\"let tab of tabsConfig\">\n      <ng-container *ngIf=\"tab === beneficiaryList.CONTACTS\">\n        <button\n          bbButton\n          color=\"unstyled\"\n          role=\"tab\"\n          class=\"nav-item nav-link\"\n          aria-controls=\"contacts-tab\"\n          data-role=\"contacts-tab-item\"\n          aria-haspopup=\"listbox\"\n          [attr.aria-owns]=\"contactsListId\"\n          [attr.aria-selected]=\"activeTab === beneficiaryList.CONTACTS\"\n          [ngClass]=\"{'active': activeTab === beneficiaryList.CONTACTS}\"\n          (bbKeyboardClick)=\"setActiveTab($event, beneficiaryList.CONTACTS)\"\n          bbKeyboardNavigationAnchor\n        >\n          <ng-container\n            i18n=\"Label|Contacts tab label@@beneficiary.selector.ui.tabs.contacts.label\"\n          >\n            Contacts\n          </ng-container>\n          <span class=\"text-dark\" *ngIf=\"totalContacts\"\n            >({{totalContacts}})</span\n          >\n        </button>\n      </ng-container>\n\n      <ng-container *ngIf=\"tab === beneficiaryList.ACCOUNTS\">\n        <button\n          bbButton\n          tabindex=\"-1\"\n          color=\"unstyled\"\n          role=\"tab\"\n          class=\"nav-item nav-link\"\n          aria-controls=\"accounts-tab\"\n          data-role=\"accounts-tab-item\"\n          [attr.aria-owns]=\"accountsListId\"\n          [attr.aria-selected]=\"activeTab === beneficiaryList.ACCOUNTS\"\n          [ngClass]=\"{'active': activeTab === beneficiaryList.ACCOUNTS}\"\n          (bbKeyboardClick)=\"setActiveTab($event, beneficiaryList.ACCOUNTS)\"\n          bbKeyboardNavigationAnchor\n        >\n          <ng-container\n            i18n=\"Label|Own accounts tab label@@beneficiary.selector.ui.tabs.own-accounts.label\"\n          >\n            Own Accounts\n          </ng-container>\n          <span class=\"text-dark\" *ngIf=\"totalAccounts\">\n            ({{totalAccounts}})</span\n          >\n        </button>\n      </ng-container>\n    </ng-container>\n  </div>\n\n  <ng-container *ngIf=\"isNoTabsConfigured()\">\n    <ng-container\n      *ngTemplateOutlet=\"enterAccountDetailsButton; context:{icon: 'add'}\"\n    ></ng-container>\n  </ng-container>\n\n  <ng-container *ngIf=\"isDropdownOpen\">\n    <ng-container [ngSwitch]=\"activeTab\">\n      <div id=\"contacts-tab\" *ngSwitchCase=\"beneficiaryList.CONTACTS\">\n        <bb-payments-sr-search-result-info [totalNumber]=\"contacts?.length\">\n          <span\n            i18n=\"contacts search result label|label for screen reader@@beneficiary.selector.ui.tabs.contacts.screenReaderResultsLabel\"\n          >\n            Contacts tab:\n          </span>\n        </bb-payments-sr-search-result-info>\n\n        <ng-container [ngSwitch]=\"listState?.contacts\">\n          <ng-container *ngSwitchDefault>\n            <cdk-virtual-scroll-viewport\n              tabindex=\"-1\"\n              role=\"tabpanel\"\n              bbKeyboardNavigationList\n              [id]=\"contactsListId\"\n              (bbBeneficiaryScroll)=\"onRangeChange()\"\n              [bbBeneficiaryScrollTotalCount]=\"totalContacts\"\n              class=\"bb-beneficiary-selector-ui__scroll-container\"\n            >\n              <div\n                bbKeyboardNavigationItem\n                role=\"option\"\n                aria-selected=\"false\"\n                (click)=\"emitManualDetails()\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"enterAccountDetailsButton; context:{icon: 'edit'}\"\n                >\n                </ng-container>\n              </div>\n\n              <ng-container\n                *cdkVirtualFor=\"let contact of contacts; trackBy: trackById\"\n              >\n                <bb-beneficiary-contact\n                  bbBeneficiaryScrollItem\n                  bbKeyboardNavigationItem\n                  role=\"option\"\n                  class=\"bb-beneficiary-selector-ui__list-item dropdown-item\"\n                  (click)=\"selectContact(contact)\"\n                  [contact]=\"contact\"\n                ></bb-beneficiary-contact>\n              </ng-container>\n\n              <ng-container\n                *ngIf=\"listState?.contacts === listingState.FULL_LIST\"\n              >\n                <ng-container *ngTemplateOutlet=\"completeList\"></ng-container>\n              </ng-container>\n\n              <ng-container\n                *ngIf=\"listState?.contacts === listingState.FETCHING_FAILURE\"\n              >\n                <ng-container *ngTemplateOutlet=\"failToLoadMore\"></ng-container>\n              </ng-container>\n\n              <ng-container\n                *ngIf=\"listState?.contacts === listingState.FETCHING\"\n              >\n                <bb-loading-indicator-ui\n                  loaderSize=\"sm\"\n                ></bb-loading-indicator-ui>\n              </ng-container>\n            </cdk-virtual-scroll-viewport>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"listingState.ERROR\">\n            <bb-empty-state-ui\n              title=\"Contacts unavailable\"\n              i18n-title=\"@@beneficiary.selector.ui.tabs.contacts.error-state.unavailable.title\"\n              class=\"bb-state-container\"\n              subtitle=\"Unable to load list of contacts. Try to reload the page or contact the support.\"\n              i18n-subtitle=\"@@beneficiary.selector.ui.tabs.contacts.error-state.unavailable.message\"\n              iconSize=\"xxl\"\n              iconModifier=\"info\"\n            ></bb-empty-state-ui>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"listingState.EMPTY\">\n            <ng-container\n              *ngTemplateOutlet=\"emptyListContactsTemplate\"\n            ></ng-container>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"listingState.NO_RESULT\">\n            <ng-container\n              *ngTemplateOutlet=\"emptyMatchingResults\"\n            ></ng-container>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"listingState.LOADING\">\n            <ng-container *ngTemplateOutlet=\"loadingTemplate\"></ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <div id=\"accounts-tab\" *ngSwitchCase=\"beneficiaryList.ACCOUNTS\">\n        <bb-payments-sr-search-result-info [totalNumber]=\"accounts?.length\">\n          <span\n            i18n=\"accounts search result label|label for screen reader@@beneficiary.selector.ui.tabs.account.screenReaderResultsLabel\"\n            >Accounts tab:</span\n          >\n        </bb-payments-sr-search-result-info>\n\n        <ng-container [ngSwitch]=\"listState?.accounts\">\n          <ng-container *ngSwitchDefault>\n            <cdk-virtual-scroll-viewport\n              bbKeyboardNavigationList\n              tabindex=\"-1\"\n              role=\"tabpanel\"\n              [id]=\"accountsListId\"\n              (bbBeneficiaryScroll)=\"onRangeChange()\"\n              [bbBeneficiaryScrollTotalCount]=\"totalAccounts\"\n              class=\"bb-beneficiary-selector-ui__scroll-container\"\n            >\n              <div\n                bbKeyboardNavigationItem\n                role=\"option\"\n                (click)=\"emitManualDetails()\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"enterAccountDetailsButton; context:{icon: 'edit'}\"\n                >\n                </ng-container>\n              </div>\n\n              <ng-container\n                *cdkVirtualFor=\"let account of accounts; trackBy: trackById\"\n              >\n                <bb-beneficiary-account\n                  bbBeneficiaryScrollItem\n                  bbKeyboardNavigationItem\n                  role=\"option\"\n                  class=\"bb-beneficiary-selector-ui__list-item dropdown-item\"\n                  [account]=\"account\"\n                  (click)=\"selectAccount(account)\"\n                ></bb-beneficiary-account>\n              </ng-container>\n\n              <ng-container\n                *ngIf=\"listState?.accounts === listingState.FULL_LIST\"\n              >\n                <ng-container *ngTemplateOutlet=\"completeList\"></ng-container>\n              </ng-container>\n\n              <ng-container\n                *ngIf=\"listState?.accounts === listingState.FETCHING_FAILURE\"\n              >\n                <ng-container *ngTemplateOutlet=\"failToLoadMore\"></ng-container>\n              </ng-container>\n\n              <ng-container\n                *ngIf=\"listState?.accounts === listingState.FETCHING\"\n              >\n                <bb-loading-indicator-ui\n                  loaderSize=\"sm\"\n                ></bb-loading-indicator-ui>\n              </ng-container>\n            </cdk-virtual-scroll-viewport>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"listingState.ERROR\">\n            <bb-empty-state-ui\n              title=\"Accounts unavailable\"\n              i18n-title=\"@@beneficiary.selector.ui.tabs.accounts.error-state.unavailable.title\"\n              class=\"bb-state-container\"\n              subtitle=\"Unable to load list of accounts. Try to reload the page or contact the support.\"\n              i18n-subtitle=\"@@beneficiary.selector.ui.tabs.accounts.error-state.unavailable.message\"\n              iconSize=\"xxl\"\n              iconModifier=\"info\"\n            ></bb-empty-state-ui>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"listingState.EMPTY\">\n            <ng-container\n              *ngTemplateOutlet=\"emptyListAccountsTemplate\"\n            ></ng-container>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"listingState.NO_RESULT\">\n            <ng-container\n              *ngTemplateOutlet=\"emptyMatchingResults\"\n            ></ng-container>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"listingState.LOADING\">\n            <ng-container *ngTemplateOutlet=\"loadingTemplate\"></ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </ng-container>\n  </ng-container>\n</div>\n\n<!-- Empty lists -->\n<ng-template #emptyListAccountsTemplate>\n  <bb-empty-state-ui\n    data-role=\"accounts-empty-state\"\n    iconSize=\"xxl\"\n    class=\"bb-state-container\"\n    iconModifier=\"account\"\n    title=\"No accounts\"\n    subtitle=\"There are no accounts to display.\"\n    i18n-title=\"Label|Nothing found in accounts title@@beneficiary.selector.ui.tabs.accounts.nothing-found.label\"\n    i18n-subtitle=\"Label|Nothing found in accounts subtitle@@beneficiary.selector.ui.tabs.accounts.nothing-found.subtitle\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #emptyListContactsTemplate>\n  <bb-empty-state-ui\n    data-role=\"contacts-empty-state\"\n    iconSize=\"xxl\"\n    class=\"bb-state-container\"\n    iconModifier=\"contacts\"\n    title=\"No contacts\"\n    subtitle=\"Go to Contact Manager to create contact that you often transfer money to.\"\n    i18n-title=\"Label|Nothing found in contacts title@@beneficiary.selector.ui.tabs.contacts.nothing-found.label\"\n    i18n-subtitle=\"Label|Nothing found in contacts subtitle@@beneficiary.selector.ui.tabs.contacts.nothing-found.subtitle\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #loadingTemplate>\n  <div class=\"bb-state-container\">\n    <bb-loading-indicator-ui loaderSize=\"md\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #enterAccountDetailsButton let-icon=\"icon\">\n  <div\n    *ngIf=\"canEditManually\"\n    data-role=\"enter-data-manually\"\n    class=\"bb-beneficiary-selector-ui__enter-details dropdown-item\"\n  >\n    <div class=\"bb-create-beneficiary-account-menuitem\">\n      <div class=\"bb-stack\">\n        <ng-container\n          *ngTemplateOutlet=\"enterAccountDetails; context: {type: icon}\"\n        ></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #enterAccountDetails let-type=\"type\">\n  <bb-icon-ui name=\"{{ type }}\" size=\"l\" class=\"bb-stack__item\"></bb-icon-ui>\n  <span\n    class=\"bb-stack__item\"\n    i18n=\"@@beneficiary.selector.ui.list.enter-details-manually.button\"\n  >\n    Enter details manually\n  </span>\n</ng-template>\n\n<ng-template #emptyMatchingResults>\n  <div class=\"bb-state-container\">\n    <bb-empty-state-ui\n      [showIcon]=\"false\"\n      class=\"d-block bb-block bb-block--md\"\n      title=\"No suggestions found\"\n      aria-label=\"No suggestions found\"\n      i18n-aria-label=\"Label|No suggestions found@@beneficiary.selector.ui.list.nothing-found.label\"\n    ></bb-empty-state-ui>\n\n    <div *ngIf=\"canEditManually\" class=\"bb-state-container__footer\">\n      <button\n        bbButton\n        type=\"button\"\n        buttonSize=\"md\"\n        color=\"link-text\"\n        class=\"bb-beneficiary-selector-ui__enter-details\"\n        data-role=\"enter-data-manually\"\n        (bbKeyboardClick)=\"emitManualDetails()\"\n      >\n        <ng-container\n          *ngTemplateOutlet=\"enterAccountDetails; context: {type: 'add'}\"\n        ></ng-container>\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #completeList>\n  <div\n    data-role=\"all-items-loaded\"\n    class=\"bb-create-beneficiary-account-menuitem bb-stack bb-stack--center bb-text-support\"\n    i18n=\"@@beneficiary-selector-ui.loaded-all-items\"\n  >\n    All items are loaded.\n  </div>\n</ng-template>\n\n<ng-template #failToLoadMore>\n  <button\n    type=\"button\"\n    role=\"menuitem\"\n    data-role=\"fail-to-load-more-try-again\"\n    (click)=\"refreshList()\"\n    class=\"dropdow-item bb-stack bb-stack--center bb-text-danger dropdown-item\"\n  >\n    <bb-icon-ui\n      color=\"danger\"\n      name=\"error-outline\"\n      class=\"bb-stack__item bb-stack__item--spacing-sm\"\n    ></bb-icon-ui>\n\n    <span class=\"bb-stack__item\" i18n=\"@@beneficiary-selector-ui.fail-to-fetch\">\n      Loading failed. Click here to try again.\n    </span>\n  </button>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\n\nimport {\n  BeneficiaryList,\n  BeneficiaryListState,\n  ListState,\n} from '../../constants';\nimport { DefaultDebounceTime } from '../../constants/constants';\nimport { ContactItem } from '../../models/types';\n\n@Component({\n  selector: 'bb-beneficiary-selector-ui',\n  templateUrl: './beneficiary-selector-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BeneficiarySelectorUiComponent implements OnDestroy, OnInit {\n  private _accounts!: ProductSummaryItem[];\n  private _contacts!: ContactItem[];\n\n  state: BeneficiaryListState = {\n    contacts: ListState.EMPTY,\n    accounts: ListState.EMPTY,\n  };\n\n  /**\n   * Total count of accounts\n   */\n  @Input() totalAccounts = 0;\n\n  /**\n   * Total count of contacts\n   */\n  @Input() totalContacts = 0;\n\n  /**\n   * Total count of contacts items before sub-accounts extract\n   */\n  @Input() totalContactsItemsCount = 0;\n\n  /**\n   * List of contacts\n   */\n  @Input() set contacts(value: ContactItem[]) {\n    if (this.state.contacts === ListState.FETCHING && value) {\n      this._contacts = [...this._contacts, ...value];\n    } else {\n      this._contacts = value;\n    }\n    this.updateListStateOnDataChange(BeneficiaryList.CONTACTS, this._contacts);\n  }\n\n  get contacts(): ContactItem[] {\n    return this._contacts;\n  }\n\n  /**\n   * List of own accounts\n   */\n  @Input() set accounts(value: ProductSummaryItem[]) {\n    if (this.state.accounts === ListState.FETCHING && value) {\n      this._accounts = [...this._accounts, ...value];\n    } else {\n      this._accounts = value;\n    }\n\n    this.updateListStateOnDataChange(BeneficiaryList.ACCOUNTS, this._accounts);\n  }\n\n  get accounts(): ProductSummaryItem[] {\n    return this._accounts;\n  }\n\n  /**\n   * Tabs configuration\n   */\n  @Input() tabs!: Array<BeneficiaryList>;\n\n  /**\n   * Pipe to initiate dropdown closure from outside\n   */\n  @Input() closeDropdownRequest$: Subject<boolean> = new Subject();\n\n  /**\n   * Placeholder for the search box\n   */\n  @Input() placeholder!: string;\n\n  /**\n   * Title for the beneficiary selector\n   */\n  @Input() title!: string;\n  /**\n   * Helper text for the beneficiary selector. Appears inline next to the label.\n   */\n  @Input() helperText!: string;\n\n  /**\n   * Flag to denote if the beneficiary selector has errors.\n   */\n  @Input() set hasError(error: boolean) {\n    if (error) {\n      if (!this.search.touched) {\n        this.search.markAsTouched();\n      }\n    }\n  }\n\n  /**\n   * aria-label for the search box arrow icon\n   */\n  @Input('aria-label') ariaLabel!: string;\n\n  /**\n   * Dropdown icon that would be shown alongside with textbox\n   */\n  @Input() dropdownIcon = 'toggle-down';\n\n  /**\n   * Selected account event emitter\n   */\n  @Output() selectedAccount = new EventEmitter();\n\n  /**\n   * Selected contact event emitter\n   */\n  @Output() selectedContact = new EventEmitter();\n\n  /**\n   * Search string\n   */\n  @Output() searchValue = new EventEmitter<string>();\n\n  /**\n   * Fetch more items event handler\n   */\n  @Output() fetchMoreItems = new EventEmitter<{\n    page: number;\n    type: BeneficiaryList;\n  }>();\n\n  /**\n   * Enter account detail event\n   */\n  @Output() manualEdit = new EventEmitter<string>();\n\n  /**\n   * Event emitted search is blurred\n   */\n  @Output() searchBlur = new EventEmitter<string>();\n\n  /**\n   * Clear search value\n   */\n  @Output() clear = new EventEmitter<string>();\n\n  /**\n   * Time delay between each search requests in milliseconds. Defaults to 300\n   */\n  @Input() debounceTime = DefaultDebounceTime;\n\n  /**\n   * Selected item, contact or account\n   */\n  @Input()\n  set selectedItem(selectedItem: ContactItem | ProductSummaryItem | undefined) {\n    if (selectedItem?.name) {\n      this.search.patchValue(selectedItem.name);\n      this._selectedItem = selectedItem;\n    }\n  }\n\n  get selectedItem() {\n    return this._selectedItem;\n  }\n\n  /**\n   * Form control for search value.\n   */\n  @Input() search = new FormControl();\n\n  /**\n   * Flag to denote if the account has only closed payment permission.\n   * Default value is `false`\n   */\n  @Input() isClosedPayment = false;\n\n  /**\n   * Flag to denote if the beneficiary field is disabled.\n   * Default value is `false`\n   */\n  @Input() isBeneficiaryDisabled = false;\n  /**\n   * Flag to denote if the manual edit feature is disabled.\n   * Default value is `false`\n   */\n  @Input() isManualEditDisabled = false;\n\n  searchIsFocused = false;\n  private _selectedItem?: ContactItem | ProductSummaryItem;\n  readonly debounceSearch$ = new Subject<string>();\n  readonly gc$ = new Subject();\n  private pageState = {\n    [BeneficiaryList.CONTACTS]: {\n      page: 0,\n      shouldLoadMore: () => this.totalContacts > this.totalContactsItemsCount,\n    },\n    [BeneficiaryList.ACCOUNTS]: {\n      page: 0,\n      shouldLoadMore: () => this.totalAccounts > this._accounts.length,\n    },\n  };\n\n  @ViewChild('dd') dropdownItem?: NgbDropdown;\n\n  constructor() {\n    this.debounceSearch$\n      .pipe(\n        debounceTime(this.debounceTime),\n        distinctUntilChanged(),\n        takeUntil(this.gc$),\n        tap(() => {\n          this.listStateReducer({\n            [BeneficiaryList.ACCOUNTS]: ListState.LOADING,\n            [BeneficiaryList.CONTACTS]: ListState.LOADING,\n          });\n        })\n      )\n      .subscribe((term: string) => {\n        this.searchValue.emit(term);\n      });\n  }\n\n  ngOnInit() {\n    this.closeDropdownRequest$\n      .pipe(takeUntil(this.gc$))\n      .subscribe((closeFlag: boolean) => {\n        if (closeFlag && this.dropdownItem) {\n          this.dropdownItem.close();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n\n  private listStateReducer(update: { [key: string]: ListState }): void {\n    this.state = { ...this.state, ...update };\n  }\n\n  selectAccount(account: ProductSummaryItem) {\n    this.selectedAccount.emit(account);\n    this.search.patchValue(account.name);\n  }\n\n  selectContact(contact: ContactItem) {\n    this.selectedContact.emit(contact);\n    this.search.patchValue(contact.name);\n  }\n\n  handleSearch(searchString = '') {\n    if (this.searchIsFocused) {\n      this.debounceSearch$.next(searchString?.trim());\n\n      // reset page count in pageState when search is triggered\n      this.pageState[BeneficiaryList.ACCOUNTS].page = 0;\n      this.pageState[BeneficiaryList.CONTACTS].page = 0;\n    }\n  }\n\n  onBlur() {\n    this.searchIsFocused = false;\n    this.searchBlur.emit(this.search.value ? this.search.value.trim() : '');\n  }\n\n  focusHandler() {\n    this.searchIsFocused = true;\n    if (this.dropdownItem) {\n      this.dropdownItem.open();\n    }\n  }\n\n  onClear() {\n    this.handleSearch('');\n    this.search.reset();\n    this.clear.emit('');\n  }\n\n  handleDropdownClose(opened: boolean, dropdown: NgbDropdown) {\n    if (!opened && this.searchIsFocused) {\n      dropdown.open();\n    }\n  }\n\n  onManualEdit() {\n    if (!this.isManualEditDisabled) {\n      this.manualEdit.emit(this.search.value ? this.search.value.trim() : '');\n    }\n  }\n\n  fetchMoreItemsAction(listType: BeneficiaryList) {\n    const { shouldLoadMore } = this.pageState[listType];\n    let { page: _page } = this.pageState[listType];\n\n    if (shouldLoadMore() && this.state[listType] === ListState.LIST) {\n      this.listStateReducer({ [listType]: ListState.FETCHING });\n      this.fetchMoreItems.emit({ page: ++_page, type: listType });\n\n      // update page state after being incremented\n      this.pageState[listType].page = _page;\n    }\n  }\n\n  private updateListStateOnDataChange(\n    listType: BeneficiaryList,\n    value: any\n  ): void {\n    let _state = this.state[listType];\n    const {\n      FETCHING,\n      FETCHING_FAILURE,\n      ERROR,\n      NO_RESULT,\n      EMPTY,\n      LIST,\n      FULL_LIST,\n    } = ListState;\n\n    if (!value || value.error) {\n      _state === FETCHING ? (_state = FETCHING_FAILURE) : (_state = ERROR);\n    } else if (!value?.length) {\n      this.search.value ? (_state = NO_RESULT) : (_state = EMPTY);\n    } else if (!this.pageState[listType].shouldLoadMore()) {\n      _state = FULL_LIST;\n    } else {\n      _state = LIST;\n    }\n\n    this.listStateReducer({ [listType]: _state });\n  }\n}\n","<div\n  class=\"bb-beneficiary-selector-ui\"\n  ngbDropdown\n  #dd=\"ngbDropdown\"\n  display=\"static\"\n  (openChange)=\"handleDropdownClose($event, dd)\"\n>\n  <label *ngIf=\"title\" [for]=\"searchElem?.id\">{{ title }}</label>\n\n  <span\n    class=\"bb-dynamic-input__helper-text bb-text-support\"\n    *ngIf=\"helperText\"\n    [id]=\"searchElem?.id + '__helper-text'\"\n    [textContent]=\"helperText\"\n  >\n  </span>\n\n  <bb-search-box-ui\n    ngbDropdownAnchor\n    (focus)=\"focusHandler()\"\n    (blur)=\"onBlur()\"\n    [formControl]=\"search\"\n    (clear)=\"onClear()\"\n    data-role=\"beneficiary-account-input\"\n    (ngModelChange)=\"handleSearch(search.value)\"\n    [placeholder]=\"placeholder\"\n    [squareBorder]=\"true\"\n    [showClear]=\"!isBeneficiaryDisabled\"\n    [autocomplete]=\"'off'\"\n    [disabled]=\"isBeneficiaryDisabled\"\n    role=\"combobox\"\n    aria-haspopup=\"true\"\n    [attr.aria-owns]=\"tabsComponent.tabsId\"\n    #searchElem\n  >\n    <button\n      bbButton\n      ngbDropdownToggle\n      color=\"outline-secondary\"\n      [attr.aria-label]=\"ariaLabel\"\n      data-role=\"open-beneficiary-dropdown-list-button\"\n    >\n      <bb-icon-ui [name]=\"dropdownIcon\"></bb-icon-ui>\n    </button>\n  </bb-search-box-ui>\n\n  <div\n    ngbDropdownMenu\n    class=\"dropdown-menu dropdown-menu-right w-100 bb-beneficiary-selector-ui__list\"\n  >\n    <bb-beneficiary-tabs\n      #tabsComponent\n      class=\"bb-beneficiary-selector-ui__tabs\"\n      [accounts]=\"accounts\"\n      [contacts]=\"contacts\"\n      [listState]=\"state\"\n      [tabsConfig]=\"tabs\"\n      [totalAccounts]=\"totalAccounts\"\n      [totalContacts]=\"totalContacts\"\n      [canEditManually]=\"!isClosedPayment && !isManualEditDisabled\"\n      [isDropdownOpen]=\"dd.isOpen()\"\n      (selectedContact)=\"selectContact($event); dd.close()\"\n      (selectedAccount)=\"selectAccount($event); dd.close()\"\n      (fetchMoreItems)=\"fetchMoreItemsAction($event)\"\n      (manualEdit)=\"onManualEdit(); dd.close()\"\n    >\n    </bb-beneficiary-tabs>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  KeyboardNavigationAnchorDirective,\n  KeyboardNavigationDirective,\n  KeyboardNavigationItemDirective,\n  KeyboardNavigationListDirective,\n} from './bb-keyboard-navigation.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    KeyboardNavigationItemDirective,\n    KeyboardNavigationAnchorDirective,\n    KeyboardNavigationListDirective,\n    KeyboardNavigationDirective,\n  ],\n  exports: [\n    KeyboardNavigationItemDirective,\n    KeyboardNavigationAnchorDirective,\n    KeyboardNavigationListDirective,\n    KeyboardNavigationDirective,\n  ],\n})\nexport class BbKeyboardNavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PaymentsSrSearchResultInfoModule } from '../sr-search-result-info/sr-search-result-info.module';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BeneficiaryAccountComponent } from './components/beneficiary-account/beneficiary-account';\nimport { BeneficiaryContactComponent } from './components/beneficiary-contact/beneficiary-contact';\n\nimport { BeneficiarySelectorUiComponent } from './beneficiary-selector-ui.component';\nimport { BeneficiaryTabsComponent } from './components/beneficiary-tabs/beneficiary-tabs';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport {\n  BeneficiaryScrollDirective,\n  BeneficiaryScrollItemDirective,\n} from './directives/beneficiary-scroll.directive';\nimport { BbKeyboardNavigationModule } from '../../directives/bb-keyboard-navigation.module';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { HighlightModule } from '@backbase/ui-ang/highlight';\n\nconst modules = [\n  NgbDropdownModule,\n  IconModule,\n  SearchBoxModule,\n  EmptyStateModule,\n  HighlightModule,\n  DropdownMenuModule,\n  ButtonModule,\n  LoadingIndicatorModule,\n  KeyboardClickModule,\n  AmountModule,\n  PaymentsSrSearchResultInfoModule,\n  ScrollingModule,\n  BbKeyboardNavigationModule,\n];\n\nconst components = [\n  BeneficiarySelectorUiComponent,\n  BeneficiaryTabsComponent,\n  BeneficiaryContactComponent,\n  BeneficiaryAccountComponent,\n  BeneficiaryScrollDirective,\n  BeneficiaryScrollItemDirective,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [CommonModule, ReactiveFormsModule, ...modules, FocusModule],\n  exports: [BeneficiarySelectorUiComponent, ...modules],\n})\nexport class BeneficiarySelectorUIModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-purpose-of-payment-detail',\n  templateUrl: './purpose-of-payment-detail.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PurposeOfPaymentDetailComponent {\n  hostRef = this;\n  isPoPOpen = false;\n  isPoPMessageTruncated = false;\n\n  /**\n   * Label for the pop information.\n   */\n  @Input() label = '';\n\n  /**\n   * Hide label for the pop information.\n   */\n  @Input() hideLabel = false;\n\n  /**\n   * The purpose of payment code.\n   */\n  @Input() code = '';\n  /**\n   * The purpose of payment description.\n   */\n  @Input() description = '';\n\n  /**\n   * Set truncation status of PoP message\n   */\n  setIsContentTruncated(isMessageTruncated: boolean) {\n    this.isPoPMessageTruncated = isMessageTruncated;\n  }\n\n  /**\n   * Toggle PoP message\n   */\n  togglePoP() {\n    this.isPoPOpen = !this.isPoPOpen;\n  }\n}\n","<ng-container *ngIf=\"code || description\">\n  <div\n    class=\"bb-text-bold\"\n    *ngIf=\"label; else defaultPurposeOfPaymentLabelTemplate\"\n  >\n    {{ label }}\n  </div>\n  <ng-template #defaultPurposeOfPaymentLabelTemplate>\n    <div\n      *ngIf=\"!hideLabel\"\n      class=\"bb-text-bold\"\n      i18n=\"@@purpose-of-payment-detail.label\"\n      data-role=\"payment-purpose-of-payment-label\"\n    >\n      Purpose of payment\n    </div>\n  </ng-template>\n\n  <div data-role=\"payment-purpose-of-payment\" *ngIf=\"description\">\n    <bb-ellipsis-ui [lineClamp]=\"isPoPOpen ? description.length : 3\">\n      <div bbIsContentTruncated [hostRef]=\"hostRef\">\n        <ng-container *ngIf=\"code\">{{ code }} - </ng-container>\n\n        {{ description }}\n      </div>\n    </bb-ellipsis-ui>\n\n    <button\n      *ngIf=\"isPoPMessageTruncated\"\n      bbButton\n      color=\"link-text\"\n      (click)=\"togglePoP()\"\n    >\n      <ng-container [ngSwitch]=\"isPoPOpen\">\n        <ng-container\n          *ngSwitchCase=\"true\"\n          i18n=\"@@purpose-of-payment-detail.showLessBtn\"\n        >\n          See less\n        </ng-container>\n        <ng-container\n          *ngSwitchDefault\n          i18n=\"@@purpose-of-payment-detail.showMoreBtn\"\n        >\n          See more\n        </ng-container>\n      </ng-container>\n    </button>\n  </div>\n</ng-container>\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  Input,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { TableDirective } from '@backbase/ui-ang/table';\n\n@Component({\n  selector: 'bb-table-header-checkbox',\n  templateUrl: './table-header-checkbox.component.html',\n})\nexport class TableHeaderCheckboxComponent implements OnInit, OnDestroy {\n  @ViewChild('checkbox', { read: ElementRef, static: true })\n  checkboxInput?: ElementRef<HTMLInputElement>;\n\n  /**\n   * Input which sends current selection set to be cleared\n   */\n  @Input() clearSelection: Subject<Set<string>> = new Subject();\n\n  private getSelectedItemsCount(list: Array<any>) {\n    return list.filter((item) => this.parentTable.isSelected(item)).length;\n  }\n\n  constructor(private readonly parentTable: TableDirective) {}\n\n  get isChecked(): boolean {\n    const pageList = this.parentTable.dataSource\n      ? this.parentTable.dataSource\n      : [];\n    const selected = this.getSelectedItemsCount(pageList);\n    return selected === pageList.length;\n  }\n\n  get isIntermediate(): boolean {\n    const pageList = this.parentTable.dataSource\n      ? this.parentTable.dataSource\n      : [];\n    const selected = this.getSelectedItemsCount(pageList);\n    return selected > 0 && selected < pageList.length;\n  }\n\n  onClick(event: Event) {\n    event.stopPropagation();\n    if (this.checkboxInput) {\n      const pageList = this.parentTable.dataSource\n        ? this.parentTable.dataSource\n        : [];\n      if (this.isIntermediate) {\n        pageList.forEach((item) => {\n          if (this.parentTable.isSelected(item)) {\n            this.parentTable.toggleItem(item, false);\n          }\n        });\n      } else {\n        pageList.forEach((item) => {\n          this.parentTable.toggleItem(item, !this.parentTable.isSelected(item));\n        });\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.clearSelection.subscribe((items) => {\n      if (items.size) {\n        items.forEach((pid) => {\n          this.parentTable.toggleItem(pid, false);\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.clearSelection.unsubscribe();\n  }\n}\n","<div class=\"bb-input-checkbox\" (click)=\"onClick($event)\">\n  <input\n    #checkbox\n    type=\"checkbox\"\n    [checked]=\"isChecked\"\n    aria-label=\"select all items\"\n    [indeterminate]=\"isIntermediate\"\n    class=\"bb-input-checkbox__input\"\n    i18n-aria-label=\"@@bb-table-header-checkbox.aria-label\"\n  />\n  <span class=\"bb-input-checkbox__content bb-block--xs\"></span>\n</div>\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { TableDirective } from '@backbase/ui-ang/table';\n\n@Component({\n  selector: 'bb-table-checkbox',\n  templateUrl: './table-checkbox.component.html',\n})\nexport class TableCheckboxComponent {\n  /**\n   * The data of the parent row\n   */\n  @Input() row?: any;\n  /**\n   * The ID of the parent row\n   */\n  @Input() rowId?: string;\n\n  @ViewChild('checkbox', { read: ElementRef, static: true })\n  checkboxInput?: ElementRef<HTMLInputElement>;\n\n  get rowItem(): any {\n    return this.row || this.rowId || undefined;\n  }\n\n  get isChecked(): boolean {\n    return this.parentTable.isSelected(this.rowItem);\n  }\n\n  constructor(private readonly parentTable: TableDirective) {}\n\n  onClick(event: Event) {\n    event.stopPropagation();\n    if (this.checkboxInput) {\n      if (event.target !== this.checkboxInput.nativeElement) {\n        this.checkboxInput.nativeElement.checked =\n          !this.checkboxInput.nativeElement.checked;\n      }\n      this.parentTable.toggleItem(\n        this.rowItem,\n        this.checkboxInput.nativeElement.checked\n      );\n    }\n  }\n}\n","<div class=\"bb-input-checkbox bb-stack\" (click)=\"onClick($event)\">\n  <input\n    #checkbox\n    type=\"checkbox\"\n    [checked]=\"isChecked\"\n    aria-label=\"select item\"\n    class=\"bb-input-checkbox__input\"\n    i18n-aria-label=\"@@bb-table-checkbox.aria-label\"\n  />\n  <span class=\"bb-input-checkbox__content\"></span>\n</div>\n","import { Component, Directive, Input } from '@angular/core';\nimport { Status, StatusBadgeColorMap } from '../../constants';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-payord-status-badge',\n  templateUrl: './status-badge.component.html',\n})\nexport class PayordStatusBadgeComponent {\n  readonly hostRef = this;\n  readonly statusMap = Status;\n\n  /**\n   * Status to be displayed in the badge\n   */\n  @Input() status?: string;\n  /**\n   * Map containing the color to apply to each status\n   */\n  @Input() statusColorMap = StatusBadgeColorMap;\n  /**\n   * Sets the default case badge color if not found in the map\n   */\n  @Input() statusColorDefault = 'warning';\n  /**\n   * Sets when to display abbreviated badge text\n   */\n  @Input() showAbbreviated = false;\n\n  isKnownStatus() {\n    return this.status && this.status in this.statusMap;\n  }\n}\n\n@Directive({\n  selector: '[bbPayordStatusBadgeCustomizable]',\n})\nexport class PayordStatusBadgeCustomizableDirective extends BbTemplate<\n  PayordStatusBadgeComponent,\n  void\n> {}\n\n@Directive({\n  selector: '[bbPayordStatusBadgeAbbreviationCustomizable]',\n})\nexport class PayordStatusBadgeAbbreviationCustomizableDirective extends BbTemplate<\n  PayordStatusBadgeComponent,\n  void\n> {}\n\n@Directive({\n  selector: '[bbPayordStatusBadgeLabelCustomizable]',\n})\nexport class PayordStatusBadgeLabelCustomizableDirective extends BbTemplate<\n  PayordStatusBadgeComponent,\n  void\n> {}\n","<ng-container\n  bbPayordStatusBadgeCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template bbPayordStatusBadgeCustomizable let-hostRef>\n  <ng-container *ngIf=\"hostRef.isKnownStatus(); else defaultStatus\">\n    <ng-container\n      *ngIf=\"hostRef.showAbbreviated\"\n      bbPayordStatusBadgeAbbreviationCustomizable\n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n    <ng-container\n      *ngIf=\"!hostRef.showAbbreviated\"\n      bbPayordStatusBadgeLabelCustomizable\n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n  </ng-container>\n\n  <ng-template #defaultStatus>\n    <bb-badge-ui\n      *ngIf=\"hostRef.showAbbreviated; else defaultStatusLabel\"\n      [color]=\"hostRef.statusColorDefault\"\n      [abbr]=\"hostRef.status.slice(0, 3)\"\n      [text]=\"hostRef.status | titlecase\"\n    ></bb-badge-ui>\n    <ng-template #defaultStatusLabel>\n      <bb-badge-ui\n        [color]=\"hostRef.statusColorDefault\"\n        [text]=\"hostRef.status | uppercase\"\n      ></bb-badge-ui>\n    </ng-template>\n  </ng-template>\n</ng-template>\n\n<ng-template bbPayordStatusBadgeAbbreviationCustomizable let-hostRef>\n  <span\n    class=\"d-none\"\n    aria-hidden=\"true\"\n    i18n=\"@@payord-status-badge.abbreviation.label\"\n    #abbreviation\n  >\n    {hostRef.status, select, OPEN {Ope} CLOSED {Clo} INVALID {Inv} VALID {Val}\n    ENTERED {Ent} READY {Rea} ACCEPTED {Acc} APPROVED {App} REJECTED {Rej}\n    CANCELLED {Can} CANCELLATION_PENDING {Can} PROCESSED {Pro} ACKNOWLEDGED\n    {Ack} DOWNLOADING {Dow} EXPIRED {Exp} PENDING {Pen} }\n  </span>\n  <span\n    class=\"d-none\"\n    aria-hidden=\"true\"\n    i18n=\"@@payord-status-badge.tooltip.label\"\n    #tooltip\n  >\n    {hostRef.status, select, OPEN {Open} CLOSED {Closed} INVALID {Invalid} VALID\n    {Valid} ENTERED {Entered} READY {Ready} ACCEPTED {Accepted} APPROVED\n    {Approved} REJECTED {Rejected} CANCELLED {Cancelled} CANCELLATION_PENDING\n    {Cancellation pending} PROCESSED {Processed} ACKNOWLEDGED {Acknowledged}\n    DOWNLOADING {Downloading} EXPIRED {Expired} PENDING {Pending} }\n  </span>\n  <bb-badge-ui\n    [color]=\"hostRef.statusColorMap[hostRef.status]\"\n    [abbr]=\"abbreviation.textContent\"\n    [text]=\"tooltip.textContent\"\n  ></bb-badge-ui>\n</ng-template>\n\n<ng-template bbPayordStatusBadgeLabelCustomizable let-hostRef>\n  <span\n    class=\"d-none\"\n    aria-hidden=\"true\"\n    i18n=\"@@payord-status-badge.label\"\n    #label\n  >\n    {hostRef.status, select, OPEN {Open} CLOSED {Closed} INVALID {Invalid} VALID\n    {Valid} ENTERED {Entered} READY {Ready} ACCEPTED {Accepted} APPROVED\n    {Approved} REJECTED {Rejected} CANCELLED {Cancelled} CANCELLATION_PENDING\n    {Cancellation pending} PROCESSED {Processed} ACKNOWLEDGED {Acknowledged}\n    DOWNLOADING {Downloading} EXPIRED {Expired} PENDING {Pending} }\n  </span>\n  <bb-badge-ui\n    [color]=\"hostRef.statusColorMap[hostRef.status]\"\n    [text]=\"label.textContent\"\n  ></bb-badge-ui>\n</ng-template>\n","import {\n  Directive,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { PaymentOrdersHttpService } from '@backbase/data-ang/payment-order';\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Directive({\n  selector: '[bbExportPdf]',\n})\nexport class ExportPdfDirective implements OnInit, OnDestroy {\n  @Input('bbExportPdf') paymentOrderId!: string;\n\n  private readonly downloadSub = new Subject<string>();\n\n  private static convertByteToBlob(data: Blob) {\n    const blob = new Blob([data], { type: 'application/pdf' });\n    const link = document.createElement('a');\n    const fileName = $localize`:@@export-pdf.pdf-file.name:payment_confirmation`;\n\n    link.href = window.URL.createObjectURL(blob);\n    link.download = fileName;\n    link.click();\n  }\n\n  @HostListener('click') onClick() {\n    this.downloadSub.next(this.paymentOrderId);\n  }\n\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly paymentOrderService: PaymentOrdersHttpService\n  ) {}\n\n  ngOnInit() {\n    this.downloadSub.pipe(switchMap(this.getPdf.bind(this))).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.downloadSub.unsubscribe();\n  }\n\n  private getPdf(paymentOrderId: string): Observable<Blob> {\n    return this.paymentOrderService\n      .getPaymentOrderExport({ paymentOrderId })\n      .pipe(\n        tap(ExportPdfDirective.convertByteToBlob),\n        catchError((err) => {\n          let header = $localize`:@@export-pdf.pdf-file.server-error-header:Server error`;\n          let message = $localize`:@@export-pdf.pdf-file.server-error-message:Unknown error occurred.`;\n\n          if (err.status === 409) {\n            header = $localize`:@@export-pdf.pdf-file.409-error-header:The payment status does not allow this action. Please verify if the payment is still valid`;\n            message = '';\n          }\n\n          this.notificationService.showNotification({\n            modifier: 'error',\n            header,\n            message,\n          });\n\n          return of(err);\n        })\n      );\n  }\n}\n","export const formatIBAN = (iban: string) =>\n  iban && iban.replace(/(.{4})/g, '$1 ').trim();\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DraftAccountIdentification } from '@backbase/data-ang/payment-draft';\nimport { formatIBAN } from '../../helpers/iban-helpers';\n\n@Pipe({ name: 'accountFormatter', pure: true })\nexport class AccountFormatterPipe implements PipeTransform {\n  transform(\n    identification: DraftAccountIdentification['identification'] | undefined\n  ): string | undefined {\n    if (identification?.schemeName === 'IBAN') {\n      return formatIBAN(identification.identification);\n    }\n    return identification?.identification;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { PaymentOrdersData, Template } from '../../models';\nimport { PaymentConfigService } from '../../../configs/services/payment-config.service';\nimport {\n  canCopyPayment,\n  hasCreatePermission,\n} from '../../helpers/payment-config-helpers';\nimport {\n  IdentifiedPaymentOrder,\n  IdentifiedTransaction,\n  PaymentAction,\n} from '@backbase/data-ang/payment-order';\nimport { SortEvent } from '@backbase/ui-ang/table';\nimport { getRelativeDate } from '../../helpers/date-helpers';\nimport {\n  PaymentModeType,\n  PaymentOrder,\n  PaymentTemplatesData,\n} from '../../models/types';\nimport { AvailableActions, Preferences } from '../../constants';\n\n@Component({\n  selector: 'bb-table-payments-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'bb-table-payments.component.html',\n})\nexport class PaymentsTableComponent {\n  readonly hostRef = this;\n\n  constructor(private readonly paymentConfigService: PaymentConfigService) {}\n\n  /**\n   * Items to be displayed\n   */\n  @Input() items!: PaymentTemplatesData | PaymentOrdersData;\n\n  /**\n   * Search term value.\n   */\n  @Input() searchTerm?: string;\n\n  /**\n   * Search query string (if any)\n   */\n  @Input() clearSelection = new Subject<Set<string>>();\n\n  /**\n   * Response error on payment templates list.\n   */\n  @Input() responseError?: BehaviorSubject<any>;\n\n  /**\n   * Flag indicates if the user has delete permission.\n   * Default value is `false`.\n   */\n  @Input() canDelete = false;\n\n  /**\n   * Flag indicates if the user has edit permission.\n   * Default value is `false`.\n   */\n  @Input() canEdit = false;\n\n  /**\n   * Flag indicates whether called from Manage transfers\n   */\n  @Input() isManageTransfersMode = false;\n\n  /**\n   * The flag to denote if it is a debit mode\n   */\n  @Input() isDebitMode = false;\n\n  /**\n   * Payment mode\n   * Default is `SINGLE`.\n   */\n  @Input() paymentMode: PaymentModeType = 'ALL';\n\n  /**\n   * Total count of payment orders.\n   */\n  @Input() totalCount?: number;\n\n  /**\n   * Number of payment orders shown per page.\n   */\n  @Input() pageSize?: number;\n\n  /**\n   * Select template event emitter\n   */\n  @Output() selectTemplate = new EventEmitter<PaymentTemplate>();\n\n  /**\n   * Click template event emitter.\n   */\n  @Output() templateItemClick = new EventEmitter<PaymentTemplate>();\n\n  /**\n   * Changes will be triggered on paymentItemClick event emit.\n   */\n  @Output() paymentItemClick = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Click delete event emitter.\n   */\n  @Output() triggerDeleteTemplate = new EventEmitter<Template>();\n\n  /**\n   * Changes will be triggered on column sorting.\n   */\n  @Output() sort = new EventEmitter<SortEvent>();\n\n  /**\n   * Selection set\n   */\n  @Output() selectionSet = new EventEmitter<Set<string>>();\n\n  /**\n   * Edit template event emitter.\n   */\n  @Output() editTemplate = new EventEmitter<Template>();\n\n  /**\n   * Approval event emitter\n   */\n  @Output() approvePayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Rejection event emitter\n   */\n  @Output() rejectPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Cancel event emitter\n   */\n  @Output() cancelPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Edit event emitter\n   */\n  @Output() editPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Copy payment event emitter\n   */\n  @Output() copyPayment = new EventEmitter<PaymentOrder>();\n\n  private selection: Set<string> = new Set();\n  preferences = Preferences;\n  mapPaymentType = (item: PaymentTemplate) =>\n    this.paymentConfigService.mapPaymentType(item);\n\n  onSelectTemplate(item: PaymentTemplate) {\n    this.selectTemplate.emit(item);\n  }\n\n  onTemplateClick(template: PaymentTemplate) {\n    this.templateItemClick.emit(template);\n  }\n\n  onPaymentItemClick(paymentItem?: IdentifiedPaymentOrder) {\n    this.paymentItemClick.emit(paymentItem);\n  }\n\n  onEditTemplate(template: PaymentTemplate) {\n    this.editTemplate.emit({ ...template, query: this.searchTerm });\n  }\n\n  trackById(_index: number, item: PaymentTemplate): string {\n    return item.id;\n  }\n\n  onSort(event: SortEvent) {\n    this.sort.emit(event);\n  }\n\n  setSelection(selection: Set<string>) {\n    this.selection = selection;\n    this.selectionSet.emit(this.selection);\n  }\n\n  getIds(\n    items?: Array<IdentifiedPaymentOrder | PaymentTemplate>\n  ): Array<string> | undefined {\n    return items?.map((payment) => payment.id);\n  }\n\n  openDeleteTemplateModal(item: PaymentTemplate) {\n    this.triggerDeleteTemplate.emit({ ...item, query: this.searchTerm });\n  }\n\n  formatExecutionDate(date: string): string {\n    let result = date;\n\n    if (result === getRelativeDate()) {\n      result = 'today';\n    } else if (result === getRelativeDate(1)) {\n      result = 'tomorrow';\n    }\n\n    return result;\n  }\n\n  stopPropagation(event: Event) {\n    event.stopPropagation();\n  }\n\n  isApprovalProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(\n      paymentItem?.actions,\n      AvailableActions.APPROVE\n    );\n  }\n\n  onApprovePayment(payment: IdentifiedPaymentOrder, event: Event) {\n    event.stopPropagation();\n    if (!this.isApprovalProhibited(payment)) {\n      this.approvePayment.emit(payment);\n    }\n  }\n\n  isRejectionProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.REJECT);\n  }\n\n  onRejectPayment(payment: IdentifiedPaymentOrder, event: Event) {\n    event.stopPropagation();\n    if (!this.isRejectionProhibited(payment)) {\n      this.rejectPayment.emit(payment);\n    }\n  }\n\n  onCancelPayment(payment: IdentifiedPaymentOrder) {\n    if (!this.isCancelProhibited(payment)) {\n      this.cancelPayment.emit(payment);\n    }\n  }\n\n  onEditPayment(payment: IdentifiedPaymentOrder) {\n    if (!this.isEditProhibited(payment)) {\n      this.editPayment.emit(payment);\n    }\n  }\n\n  onCopyPayment(payment: IdentifiedPaymentOrder) {\n    if (this.canCopyPayment(payment)) {\n      this.copyPayment.emit({ ...payment, isPaymentCopy: true });\n    }\n  }\n\n  canCopyPayment(payment: IdentifiedPaymentOrder): boolean {\n    return canCopyPayment(payment);\n  }\n\n  isEditProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.EDIT);\n  }\n\n  isCancelProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.CANCEL);\n  }\n\n  transactionInformation(\n    payment: IdentifiedPaymentOrder | undefined\n  ): IdentifiedTransaction | undefined {\n    return payment?.transferTransactionInformation;\n  }\n\n  hasCreatePermission(\n    template: PaymentTemplate | IdentifiedPaymentOrder\n  ): boolean {\n    return hasCreatePermission(template.actions);\n  }\n\n  private isActionDisabled(\n    actions: Array<PaymentAction> | undefined,\n    actionType: PaymentAction\n  ): boolean {\n    return !actions || actions.indexOf(actionType) === -1;\n  }\n}\n","<div *ngIf=\"items?.items.length && !responseError\" class=\"table-responsive\">\n  <div class=\"bb-block bb-block--xl\"></div>\n  <div *ngIf=\"searchTerm\">\n    <div class=\"bb-block bb-block--xs\"></div>\n    <div\n      class=\"bb-block bb-block--xs\"\n      data-role=\"results-found\"\n      i18n=\"@@manage-payment-items.results-found\"\n    >\n      {items.totalCount, plural, =1 {1 result found} other\n      {{{items.totalCount}} results found}}\n    </div>\n  </div>\n\n  <table\n    bbTableFocus\n    [bbTable]=\"getIds(items.items)\"\n    class=\"table table-hover bb-table\"\n    (sort)=\"onSort($event)\"\n    (selectRow)=\"setSelection($event)\"\n  >\n    <thead>\n      <tr data-role=\"item-row\">\n        <td\n          data-role=\"selection-checkbox\"\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n        >\n          <bb-table-header-checkbox\n            [clearSelection]=\"clearSelection\"\n          ></bb-table-header-checkbox>\n        </td>\n        <td *ngIf=\"!(isManageTransfersMode || isDebitMode)\"></td>\n        <ng-template #itemStatusHeader>\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payments table header label| Manage payments header label\n              for status@@manage-payments.header.status\"\n          >\n            Status\n          </span>\n        </ng-template>\n        <th\n          data-role=\"header-status\"\n          scope=\"col\"\n          bbSortable=\"status\"\n          tabindex=\"0\"\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n        >\n          <ng-container *ngTemplateOutlet=\"itemStatusHeader\"></ng-container>\n        </th>\n        <ng-template #templateNameHeader>\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payment templates table header label| Manage payment\n              templates header label for\n              status@@manage-payment-templates.header.status\"\n          >\n            Template name\n          </span>\n        </ng-template>\n        <th\n          data-role=\"header-status\"\n          scope=\"col\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n          tabindex=\"0\"\n        >\n          <ng-container *ngTemplateOutlet=\"templateNameHeader\"></ng-container>\n        </th>\n        <th\n          #itemFromHeader\n          data-role=\"header-account-from\"\n          scope=\"col\"\n          bbSortable=\"originatorName\"\n          tabindex=\"0\"\n        >\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payment items table header label| Manage payment items\n              header label for from@@manage-payment-items.header.from\"\n          >\n            From\n          </span>\n        </th>\n        <th\n          #itemToHeader\n          data-role=\"header-account-to\"\n          scope=\"col\"\n          bbSortable=\"counterpartyName\"\n          tabindex=\"0\"\n        >\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payment items table header label| Manage payment items\n              header label for number of\n              payments@@manage-payment-items.header.payments-number\"\n          >\n            To\n          </span>\n        </th>\n        <th\n          #itemCurrencyHeader\n          data-role=\"header-currency\"\n          scope=\"col\"\n          class=\"bb-table--text-end\"\n          bbSortable=\"currency\"\n          tabindex=\"0\"\n        >\n          <span\n            class=\"th-content\"\n            i18n=\"\n              Manage payment items table header label| Manage payment items\n              header label for currency@@manage-payment-items.header.currency\"\n          >\n            Ccy\n          </span>\n        </th>\n        <th\n          #itemAmountHeader\n          scope=\"col\"\n          data-role=\"header-amount\"\n          class=\"bb-table--text-end\"\n          bbSortable=\"amount\"\n          tabindex=\"0\"\n        >\n          <span\n            i18n=\"\n              Manage payment items table header label| Manage payment items\n              header label for amount@@manage-payment-items.header.amount\"\n            class=\"th-content\"\n          >\n            Amount\n          </span>\n        </th>\n\n        <th\n          *ngIf=\"\n            (paymentMode === 'RECURRING' || paymentMode === 'ALL') &&\n            (isManageTransfersMode || isDebitMode)\n          \"\n          scope=\"col\"\n          data-role=\"header-frequency\"\n          tabindex=\"0\"\n        >\n          <span\n            i18n=\"\n              Manage payments table header label| Manage payments header label\n              for frequency@@manage-payments.header.frequency\"\n            class=\"th-content\"\n          >\n            Frequency\n          </span>\n        </th>\n\n        <th\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n          scope=\"col\"\n          data-role=\"header-exec-date\"\n          bbSortable=\"requestedExecutionDate\"\n          tabindex=\"0\"\n        >\n          <span\n            i18n=\"\n              Manage payments table header label| Manage payments header label\n              for execution date@@manage-payments.header.execution-date\"\n            class=\"th-content\"\n          >\n            Exec. date\n          </span>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        *ngFor=\"let item of items?.items; trackBy: trackById\"\n        [bbRow]=\"item\"\n        (bbKeyboardClick)=\"\n          isManageTransfersMode || isDebitMode\n            ? onPaymentItemClick(item)\n            : onTemplateClick(item)\n        \"\n        tabindex=\"0\"\n        data-role=\"payment-row\"\n      >\n        <td\n          data-role=\"payment-col-selection\"\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n        >\n          <bb-table-checkbox\n            class=\"bb-stack\"\n            [rowId]=\"item.id\"\n          ></bb-table-checkbox>\n        </td>\n        <td\n          data-role=\"payment-col-selection\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n        >\n          <bb-icon-ui\n            class=\"bb-text-disabled bb-stack__item\"\n            name=\"insert-drive-file\"\n          >\n          </bb-icon-ui>\n        </td>\n\n        <td\n          data-role=\"payment-col-status\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode); else statusData\"\n        >\n          <span class=\"sr-only\">\n            <ng-container *ngTemplateOutlet=\"templateNameHeader\">\n            </ng-container>\n          </span>\n          <div class=\"bb-text-bold\">\n            {{ item.name }}\n          </div>\n\n          <div #paymentTypeHeading class=\"d-none\" aria-hidden=\"true\">\n            <ng-container i18n=\"manage-payment-templates.payment-types\">\n              {item?.details?.paymentType, select, US_FOREIGN_WIRE {US Foreign\n              Wire Payment} US_FOREIGN_WIRE_ILE {US Foreign Wire Payment}\n              SEPA_CT_CLOSED {SEPA CT Transfer} SEPA_CT {SEPA CT Transfer}\n              SEPA_CT_ILE {SEPA CT Transfer}}\n            </ng-container>\n          </div>\n\n          <div\n            class=\"bb-text-support\"\n            data-role=\"payment-type\"\n            *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n          >\n            {{\n              mapPaymentType(item)\n                ? mapPaymentType(item)\n                : paymentTypeHeading.textContent\n            }}\n          </div>\n        </td>\n\n        <ng-template #statusData>\n          <td data-role=\"payment-col-status\">\n            <span class=\"sr-only\">\n              <ng-container *ngTemplateOutlet=\"itemStatusHeader\">\n              </ng-container>\n            </span>\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\">\n                <bb-payord-status-badge\n                  class=\"d-none d-md-block\"\n                  [status]=\"item.status\"\n                  [showAbbreviated]=\"true\"\n                ></bb-payord-status-badge>\n              </div>\n            </div>\n          </td>\n        </ng-template>\n\n        <td>\n          <bb-badge-ui\n            *ngIf=\"item.edited\"\n            color=\"secondary\"\n            text=\"Edit pending\"\n            data-role=\"edit-pending-label\"\n            i18n-text=\"@@manage-payments.payment.list.editPending.label\"\n          ></bb-badge-ui>\n\n          <span class=\"sr-only\">; {{ itemFromHeader.innerText }}:</span>\n          <div data-role=\"payment-col-debitor-name\">\n            {{\n              isDebitMode ||\n              transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                ? transactionInformation(item)?.counterparty?.name\n                : isManageTransfersMode\n                ? item.originator?.name\n                : item.details.originatorAccount.name\n            }}\n          </div>\n          <div class=\"bb-text-support\" data-role=\"payment-col-debitor-account\">\n            {{\n              isDebitMode ||\n              transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                ? (transactionInformation(item)?.counterpartyAccount\n                    ?.identification | accountFormatter)\n                : isManageTransfersMode\n                ? (item.originatorAccount?.identification | accountFormatter)\n                : (item.details.originatorAccount.identification\n                  | accountFormatter)\n            }}\n          </div>\n        </td>\n\n        <td>\n          <span class=\"sr-only\">; {{ itemToHeader.innerText }}:</span>\n          <div data-role=\"payment-col-creditor-name\">\n            {{\n              isDebitMode ||\n              transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                ? item.originator?.name\n                : isManageTransfersMode\n                ? transactionInformation(item)?.counterparty?.name\n                : item.details.transferTransactionInformation.counterparty.name\n            }}\n          </div>\n          <div class=\"bb-text-support\" data-role=\"payment-col-creditor-account\">\n            {{\n              isDebitMode ||\n              transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                ? (item.originatorAccount?.identification | accountFormatter)\n                : isManageTransfersMode\n                ? (transactionInformation(item)?.counterpartyAccount\n                    ?.identification | accountFormatter)\n                : (item.details.transferTransactionInformation\n                    .counterpartyAccount.identification | accountFormatter)\n            }}\n          </div>\n        </td>\n\n        <td class=\"bb-table--text-end\">\n          <span class=\"sr-only\">; {{ itemCurrencyHeader.innerText }}</span>\n          <span data-role=\"payment-col-currency\">\n            {{\n              isManageTransfersMode || isDebitMode\n                ? item.transferTransactionInformation?.instructedAmount\n                    .currencyCode\n                : item.details.transferTransactionInformation.instructedAmount\n                    .currencyCode\n            }}\n          </span>\n        </td>\n\n        <td data-role=\"payment-col-amount\" class=\"bb-table--text-end\">\n          <span class=\"sr-only\">; {{ itemAmountHeader.innerText }}:</span>\n          <bb-amount-ui\n            [amount]=\"\n              isManageTransfersMode || isDebitMode\n                ? item.transferTransactionInformation?.instructedAmount.amount\n                : item.details.transferTransactionInformation.instructedAmount\n                    .amount\n            \"\n          ></bb-amount-ui>\n        </td>\n\n        <td\n          *ngIf=\"\n            (paymentMode === 'RECURRING' || paymentMode === 'ALL') &&\n            (isManageTransfersMode || isDebitMode)\n          \"\n          data-role=\"payment-col-frequency\"\n        >\n          <span i18n=\"@@@@manage-payments.payment.list.frequency\">\n            {item.schedule?.transferFrequency, select, DAILY {Daily} WEEKLY\n            {Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY {Yearly}\n            other {{{item.schedule?.transferFrequency | titlecase}}}}\n          </span>\n        </td>\n\n        <td data-role=\"payment-col-date\">\n          <span\n            *ngIf=\"item.schedule?.nextExecutionDate\"\n            i18n=\"@@manage-payments.payment.list.execution-date-value\"\n          >\n            {formatExecutionDate(item.schedule?.nextExecutionDate), select,\n            today {Today} tomorrow {Tomorrow} other\n            {{{ item.schedule?.nextExecutionDate | date:'shortDate'}}} }\n          </span>\n\n          <span *ngIf=\"!item.schedule?.nextExecutionDate\">\n            {{ item.requestedExecutionDate | date: 'shortDate' }}\n          </span>\n        </td>\n\n        <td>\n          <div class=\"bb-stack\">\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right d-none d-md-block\"\n            >\n              <div class=\"bb-stack\">\n                <!-- Large screens (Hidden only on xs and sm) -->\n                <ng-container\n                  *ngIf=\"\n                    item &&\n                    item.status === 'ENTERED' &&\n                    (isManageTransfersMode || isDebitMode)\n                  \"\n                >\n                  <div class=\"bb-stack__item\">\n                    <button\n                      bbButton\n                      buttonSize=\"sm\"\n                      [circle]=\"true\"\n                      color=\"success\"\n                      triggers=\"hover focus\"\n                      aria-label=\"Approve payment\"\n                      data-role=\"approve-payment-order\"\n                      (click)=\"onApprovePayment(item, $event)\"\n                      [ngClass]=\"{\n                        'disabled btn-circle--filled':\n                          isApprovalProhibited(item)\n                      }\"\n                      i18n-aria-label=\"\n                        Approve payment@@manage-payments-list.action.approve\"\n                      [bbTooltip]=\"\n                        isApprovalProhibited(item)\n                          ? actionNotAvailable\n                          : actionApprove\n                      \"\n                    >\n                      <bb-icon-ui name=\"check\"></bb-icon-ui>\n                    </button>\n                  </div>\n\n                  <div class=\"bb-stack__item\">\n                    <button\n                      bbButton\n                      buttonSize=\"sm\"\n                      [circle]=\"true\"\n                      color=\"danger\"\n                      triggers=\"hover focus\"\n                      aria-label=\"Reject payment\"\n                      data-role=\"reject-payment-order\"\n                      (click)=\"onRejectPayment(item, $event)\"\n                      [ngClass]=\"{\n                        'disabled btn-circle--filled':\n                          isRejectionProhibited(item)\n                      }\"\n                      i18n-aria-label=\"\n                        Reject payment@@manage-payments-list.action.reject\"\n                      [bbTooltip]=\"\n                        isRejectionProhibited(item)\n                          ? actionNotAvailable\n                          : actionReject\n                      \"\n                    >\n                      <bb-icon-ui name=\"times\"></bb-icon-ui>\n                    </button>\n                  </div>\n                </ng-container>\n\n                <div\n                  class=\"bb-stack__item\"\n                  *ngIf=\"isManageTransfersMode || isDebitMode\"\n                >\n                  <span\n                    class=\"sr-only\"\n                    i18n=\"@@manage-templates.bb-table-payments.more-actions\"\n                    >More actions</span\n                  >\n                  <bb-dropdown-menu-ui\n                    type=\"button\"\n                    buttonSize=\"sm\"\n                    container=\"body\"\n                    btnCircle=\"true\"\n                    icon=\"ellipsis-h\"\n                    btnColor=\"link-dark\"\n                    triggers=\"hover focus\"\n                    data-role=\"more-options\"\n                    ariaLabel=\"More actions\"\n                    bbTooltip=\"More actions\"\n                    (click)=\"stopPropagation($event)\"\n                    (keydown.enter)=\"stopPropagation($event)\"\n                    i18n-ariaLabel=\"\n                      @@manage-transfers.bb-table-payments.more-actions.label\"\n                    i18n-bbTooltip=\"\n                      @@manage-transfers.bb-table-payments.more-actions.tooltip\"\n                  >\n                    <ng-template bbDropdownMenuItem>\n                      <button\n                        type=\"button\"\n                        role=\"menuitem\"\n                        class=\"dropdown-item\"\n                        *ngIf=\"canCopyPayment(item)\"\n                        (bbKeyboardClick)=\"onCopyPayment(item)\"\n                        data-role=\"transfer-payment-order-dropdown\"\n                        i18n=\"@@manage-payments.payment.list.action.transfer\"\n                      >\n                        Transfer\n                      </button>\n                      <button\n                        type=\"button\"\n                        role=\"menuitem\"\n                        class=\"dropdown-item\"\n                        i18n=\"@@manage-payments.payment.list.action.edit\"\n                        data-role=\"edit-payment-order-dropdown\"\n                        *ngIf=\"!isEditProhibited(item)\"\n                        (bbKeyboardClick)=\"onEditPayment(item)\"\n                      >\n                        Edit\n                      </button>\n\n                      <button\n                        type=\"button\"\n                        role=\"menuitem\"\n                        container=\"body\"\n                        placement=\"left\"\n                        class=\"dropdown-item\"\n                        triggers=\"hover focus\"\n                        data-role=\"cancel-payment-order-dropdown\"\n                        (bbKeyboardClick)=\"onCancelPayment(item)\"\n                        [class.disabled]=\"isCancelProhibited(item)\"\n                        [bbTooltip]=\"\n                          isCancelProhibited(item) && actionNotAvailable\n                        \"\n                      >\n                        Cancel\n                      </button>\n\n                      <button\n                        type=\"button\"\n                        role=\"menuitem\"\n                        class=\"dropdown-item\"\n                        data-role=\"export-payment-order-dropdown\"\n                        i18n=\"@@manage-payments.payment.list.action.export-pdf\"\n                        *ngIf=\"item.permissibleActions?.export\"\n                        [bbExportPdf]=\"item.id\"\n                      >\n                        Export PDF\n                      </button>\n                    </ng-template>\n                  </bb-dropdown-menu-ui>\n                </div>\n              </div>\n            </div>\n          </div>\n        </td>\n\n        <td\n          data-role=\"create-payment-col-selection\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n        >\n          <button\n            *ngIf=\"hasCreatePermission(item)\"\n            bbButton\n            buttonSize=\"md\"\n            color=\"unstyled\"\n            aria-label=\"Create payment from template\"\n            i18n-aria-label=\"\n              Button for create payment from\n              template@@manage-payment-templates.create-payment.button\"\n            data-role=\"create-payment-button\"\n            bbTooltip=\"Create new payment from this template\"\n            triggers=\"hover focus\"\n            i18n-bbTooltip=\"\n              Tooltip for create payment from\n              template@@manage-payment-templates.create-payment.tooltip\"\n            (click)=\"stopPropagation($event); onSelectTemplate(item)\"\n          >\n            <bb-icon-ui name=\"payments\" class=\"bb-stack__item\"> </bb-icon-ui>\n          </button>\n        </td>\n        <td\n          class=\"text-right\"\n          *ngIf=\"\n            (canDelete || canEdit) && !(isManageTransfersMode || isDebitMode)\n          \"\n        >\n          <span\n            class=\"sr-only\"\n            i18n=\"@@manage-templates.bb-table-payments.more-actions\"\n            >More actions</span\n          >\n          <bb-dropdown-menu-ui\n            class=\"bb-button-bar__button\"\n            btnColor=\"unstyled\"\n            btnCircle=\"true\"\n            container=\"body\"\n            data-role=\"more-options\"\n            (bbKeyboardClick)=\"$event.stopPropagation()\"\n          >\n            <ng-template bbDropdownLabel>\n              <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n            </ng-template>\n            <ng-template bbDropdownMenuItem>\n              <button\n                [attr.aria-label]=\"'Delete ' + item.name\"\n                *ngIf=\"canEdit\"\n                role=\"menuitem\"\n                type=\"button\"\n                class=\"dropdown-item\"\n                (bbKeyboardClick)=\"onEditTemplate(item)\"\n                i18n=\"manage-payment-templates.edit.template\"\n                data-role=\"edit-template-dropdown-item\"\n              >\n                Edit\n              </button>\n              <button\n                *ngIf=\"canDelete\"\n                [attr.aria-label]=\"'Delete ' + item.name\"\n                role=\"menuitem\"\n                type=\"button\"\n                class=\"dropdown-item\"\n                (bbKeyboardClick)=\"openDeleteTemplateModal(item)\"\n                i18n=\"manage-payment-templates.remove.account\"\n                data-role=\"delete-template-dropdown\"\n              >\n                Delete\n              </button>\n            </ng-template>\n          </bb-dropdown-menu-ui>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<ng-template #actionNotAvailable>\n  <span i18n=\"@@manage-payments.action.not.available\">Not available</span>\n</ng-template>\n\n<ng-template #actionApprove>\n  <span i18n=\"@@manage-payments.action.approve\">Approve</span>\n</ng-template>\n\n<ng-template #actionReject>\n  <span i18n=\"@@manage-payments.action.reject\">Reject</span>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { BehaviorSubject } from 'rxjs';\nimport { Template } from '../../models';\nimport {\n  IdentifiedPaymentOrder,\n  IdentifiedTransaction,\n  PaymentAction,\n} from '@backbase/data-ang/payment-order';\nimport {\n  canCopyPayment,\n  hasCreatePermission,\n} from '../../helpers/payment-config-helpers';\nimport { PaymentConfigService } from '../../../configs/services/payment-config.service';\nimport { getRelativeDate } from '../../helpers/date-helpers';\nimport { PaymentModeType, PaymentOrder } from '../../models/types';\nimport { AvailableActions } from '../../constants/constants';\n\n@Component({\n  selector: 'bb-list-payments-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'bb-list-payments.component.html',\n})\nexport class PaymentsListComponent {\n  readonly hostRef = this;\n\n  constructor(private readonly paymentConfigService: PaymentConfigService) {}\n\n  /**\n   * Items to be displayed\n   */\n  @Input() items!: PaymentTemplate[] | IdentifiedPaymentOrder[];\n\n  /**\n   * Search term value.\n   */\n  @Input() searchTerm?: string;\n\n  /**\n   * Response error on payment templates list.\n   */\n  @Input() responseError?: BehaviorSubject<any>;\n\n  /**\n   * Flag indicates if the user has delete permission.\n   * Default value is `false`.\n   */\n  @Input() canDelete = false;\n\n  /**\n   * Flag indicates if the user has edit permission.\n   * Default value is `false`.\n   */\n  @Input() canEdit = false;\n\n  /**\n   * Flag indicates whether called from Manage transfers\n   */\n  @Input() isManageTransfersMode = false;\n\n  /**\n   * Number of payment items shown per page.\n   */\n  @Input() size = 0;\n\n  /**\n   * Payment mode\n   * Default is `SINGLE`.\n   */\n  @Input() paymentMode: PaymentModeType = 'SINGLE';\n\n  /**\n   * The flag to denote if it is a debit payment.\n   */\n  @Input() isDebitMode = false;\n\n  /**\n   * Click delete event emitter.\n   */\n  @Output() triggerDeleteTemplate = new EventEmitter<Template>();\n\n  /**\n   * Click template event emitter.\n   */\n  @Output() templateItemClick = new EventEmitter<PaymentTemplate>();\n\n  /**\n   * Select template event emitter\n   */\n  @Output() selectTemplate = new EventEmitter<PaymentTemplate>();\n\n  /**\n   * Edit template event emitter.\n   */\n  @Output() editTemplate = new EventEmitter<Template>();\n\n  /**\n   * Changes will be triggered on paymentItemClick event emit.\n   */\n  @Output() paymentItemClick = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Approval event emitter\n   */\n  @Output() approvePayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Rejection event emitter\n   */\n  @Output() rejectPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Cancel event emitter\n   */\n  @Output() cancelPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Edit event emitter\n   */\n  @Output() editPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  /**\n   * Copy payment event emitter\n   */\n  @Output() copyPayment = new EventEmitter<PaymentOrder>();\n\n  /**\n   * Selection set\n   */\n  @Output() selectionSet = new EventEmitter<Set<string>>();\n\n  mapPaymentType(item: PaymentTemplate) {\n    return this.paymentConfigService.mapPaymentType(item);\n  }\n\n  onSelectItem(item: PaymentTemplate) {\n    this.selectTemplate.emit(item);\n  }\n\n  onEditTemplate(template: PaymentTemplate) {\n    this.editTemplate.emit({ ...template, query: this.searchTerm });\n  }\n\n  openDeleteTemplateModal(item: PaymentTemplate) {\n    this.triggerDeleteTemplate.emit({ ...item, query: this.searchTerm });\n  }\n\n  onTemplateClick(template: PaymentTemplate) {\n    this.templateItemClick.emit(template);\n  }\n\n  onPaymentItemClick(paymentItem?: IdentifiedPaymentOrder) {\n    this.paymentItemClick.emit(paymentItem);\n  }\n\n  isApprovalProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(\n      paymentItem?.actions,\n      AvailableActions.APPROVE\n    );\n  }\n\n  onApprovePayment(payment: IdentifiedPaymentOrder, event?: Event) {\n    event?.stopPropagation();\n    if (!this.isApprovalProhibited(payment)) {\n      this.approvePayment.emit(payment);\n    }\n  }\n\n  isRejectionProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.REJECT);\n  }\n\n  onRejectPayment(payment: IdentifiedPaymentOrder, event?: Event) {\n    event?.stopPropagation();\n    if (!this.isRejectionProhibited(payment)) {\n      this.rejectPayment.emit(payment);\n    }\n  }\n\n  onCancelPayment(payment: IdentifiedPaymentOrder) {\n    if (!this.isCancelProhibited(payment)) {\n      this.cancelPayment.emit(payment);\n    }\n  }\n\n  onEditPayment(payment: IdentifiedPaymentOrder) {\n    if (!this.isEditProhibited(payment)) {\n      this.editPayment.emit(payment);\n    }\n  }\n\n  onCopyPayment(payment: IdentifiedPaymentOrder) {\n    if (this.canCopyPayment(payment)) {\n      this.copyPayment.emit({ ...payment, isPaymentCopy: true });\n    }\n  }\n\n  canCopyPayment(payment: IdentifiedPaymentOrder): boolean {\n    return canCopyPayment(payment);\n  }\n\n  isEditProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.EDIT);\n  }\n\n  isCancelProhibited(paymentItem?: IdentifiedPaymentOrder): boolean {\n    return this.isActionDisabled(paymentItem?.actions, AvailableActions.CANCEL);\n  }\n\n  hasCreatePermission(item: PaymentTemplate | IdentifiedPaymentOrder): boolean {\n    return hasCreatePermission(item.actions);\n  }\n\n  formatExecutionDate(date: string): string {\n    let result = date;\n\n    if (result === getRelativeDate()) {\n      result = 'today';\n    } else if (result === getRelativeDate(1)) {\n      result = 'tomorrow';\n    }\n\n    return result;\n  }\n\n  stopPropagation(event: Event) {\n    event.stopPropagation();\n  }\n\n  transactionInformation(\n    payment: IdentifiedPaymentOrder | undefined\n  ): IdentifiedTransaction | undefined {\n    return payment?.transferTransactionInformation;\n  }\n\n  private isActionDisabled(\n    actions: Array<PaymentAction> | undefined,\n    actionType: PaymentAction\n  ): boolean {\n    return !actions || actions.indexOf(actionType) === -1;\n  }\n}\n","<div class=\"bb-block bb-block--xl\"></div>\n<div class=\"col-12 bb-list bb-block bb-block--xl px-3\">\n  <div *ngIf=\"items?.length && !responseError\">\n    <div *ngFor=\"let item of items\" class=\"bb-list__item\" tabindex=\"0\">\n      <div\n        (click)=\"\n          isManageTransfersMode || isDebitMode\n            ? onPaymentItemClick(item)\n            : onTemplateClick(item)\n        \"\n      >\n        <div\n          class=\"bb-stack bb-block bb-block--md\"\n          *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n        >\n          <ng-container>\n            <bb-icon-ui\n              class=\"bb-text-disabled bb-stack__item bb-stack__item--spacing-xl\"\n              name=\"insert-drive-file\"\n            >\n            </bb-icon-ui>\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-text-bold break-word\">\n                {{ item.name }}\n              </div>\n              <div class=\"bb-text-support\" data-role=\"payment-type\">\n                <div #paymentTypeHeading class=\"d-none\" aria-hidden=\"true\">\n                  <ng-container i18n=\"manage-payment-templates.payment-types\">\n                    {item?.details?.paymentType, select, US_FOREIGN_WIRE {US\n                    Foreign Wire Payment} US_FOREIGN_WIRE_ILE {US Foreign Wire\n                    Payment} SEPA_CT_CLOSED {SEPA CT Transfer} SEPA_CT {SEPA CT\n                    Transfer} SEPA_CT_ILE {SEPA CT Transfer}}\n                  </ng-container>\n                </div>\n                {{\n                  mapPaymentType(item)\n                    ? mapPaymentType(item)\n                    : paymentTypeHeading.textContent\n                }}\n              </div>\n            </div>\n          </ng-container>\n\n          <div\n            class=\"bb-stack__item bb-stack__item--push-right\"\n            *ngIf=\"\n              hasCreatePermission(item) &&\n              !(isManageTransfersMode || isDebitMode)\n            \"\n          >\n            <div class=\"bb-stack\">\n              <button\n                bbButton\n                class=\"bb-stack__item\"\n                buttonSize=\"md\"\n                color=\"unstyled\"\n                aria-label=\"Create payment\"\n                i18n-aria-label=\"\n                  Button for create payment from\n                  template@@manage-payment-templates.create-payment.button\"\n                data-role=\"create-payment-button\"\n                bbTooltip=\"Create new payment from this template\"\n                triggers=\"hover focus\"\n                i18n-bbTooltip=\"\n                  Tooltip for create payment from\n                  template@@manage-payment-templates.create-payment.tooltip\"\n                (click)=\"stopPropagation($event); onSelectItem(item)\"\n              >\n                <bb-icon-ui name=\"payments\" class=\"bb-stack__item\">\n                </bb-icon-ui>\n              </button>\n\n              <ng-container *ngIf=\"!(isManageTransfersMode || isDebitMode)\">\n                <span\n                  class=\"sr-only\"\n                  i18n=\"@@manage-transfers.bb-list-templates.more-actions\"\n                  >More actions</span\n                >\n                <bb-dropdown-menu-ui\n                  class=\"bb-button-bar__button\"\n                  btnColor=\"unstyled\"\n                  btnCircle=\"true\"\n                  container=\"body\"\n                  data-role=\"more-options\"\n                  ariaLabel=\"More actions\"\n                  i18n-ariaLabel=\"\n                    @@manage-templates.bb-list-payments.more-actions.label\"\n                  (bbKeyboardClick)=\"$event.stopPropagation()\"\n                  *ngIf=\"canDelete || canEdit\"\n                >\n                  <ng-template bbDropdownLabel>\n                    <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n                  </ng-template>\n                  <ng-template bbDropdownMenuItem>\n                    <button\n                      *ngIf=\"canEdit\"\n                      role=\"menuitem\"\n                      type=\"button\"\n                      class=\"dropdown-item\"\n                      (bbKeyboardClick)=\"onEditTemplate(item)\"\n                      i18n=\"manage-payment-templates.edit.template\"\n                      data-role=\"edit-template-dropdown-item\"\n                    >\n                      Edit\n                    </button>\n                    <button\n                      *ngIf=\"canDelete\"\n                      [attr.aria-label]=\"'Delete ' + item.name\"\n                      role=\"menuitem\"\n                      type=\"button\"\n                      class=\"dropdown-item\"\n                      (bbKeyboardClick)=\"openDeleteTemplateModal(item)\"\n                      i18n=\"manage-payment-templates.remove.account\"\n                      data-role=\"delete-template-dropdown\"\n                    >\n                      Delete\n                    </button>\n                  </ng-template>\n                </bb-dropdown-menu-ui>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-stack bb-block bb-block--md\">\n          <div class=\"bb-stack__item bb-stack__item--spacing-md bb-text-bold\">\n            From\n          </div>\n          <div class=\"bb-stack__item\">\n            <div data-role=\"payment-debitor-name\" class=\"break-word\">\n              {{\n                isDebitMode ||\n                transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                  ? transactionInformation(item)?.counterparty?.name\n                  : isManageTransfersMode\n                  ? item.originator?.name\n                  : item.details.originatorAccount.name\n              }}\n            </div>\n            <div\n              class=\"bb-text-support break-word\"\n              data-role=\"payment-debitor-account\"\n            >\n              {{\n                isDebitMode ||\n                transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                  ? (transactionInformation(item)?.counterpartyAccount\n                      ?.identification | accountFormatter)\n                  : isManageTransfersMode\n                  ? (item.originatorAccount?.identification | accountFormatter)\n                  : (item.details.originatorAccount.identification\n                    | accountFormatter)\n              }}\n            </div>\n          </div>\n          <ng-container *ngIf=\"isManageTransfersMode || isDebitMode\">\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <div class=\"bb-stack\">\n                <bb-payord-status-badge\n                  class=\"d-md-none\"\n                  [status]=\"item.status\"\n                ></bb-payord-status-badge>\n\n                <span\n                  class=\"sr-only\"\n                  i18n=\"@@manage-transfers.bb-list-payments.more-actions\"\n                  >More actions</span\n                >\n                <bb-dropdown-menu-ui\n                  class=\"bb-button-bar__button\"\n                  btnColor=\"unstyled\"\n                  btnCircle=\"true\"\n                  container=\"body\"\n                  data-role=\"more-options\"\n                  (bbKeyboardClick)=\"$event.stopPropagation()\"\n                  i18n-ariaLabel=\"\n                    @@manage-transfers.bb-list-payments.more-actions.label\"\n                >\n                  <ng-template bbDropdownLabel>\n                    <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n                  </ng-template>\n                  <ng-template bbDropdownMenuItem>\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      *ngIf=\"!isApprovalProhibited(item)\"\n                      (bbKeyboardClick)=\"onApprovePayment(item, $event)\"\n                      i18n=\"\n                        Approve payment|Approve selected\n                        payment@@manage-payments.payment.list.action.approve\"\n                    >\n                      Approve\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      *ngIf=\"!isRejectionProhibited(item)\"\n                      (bbKeyboardClick)=\"onRejectPayment(item, $event)\"\n                      i18n=\"\n                        Reject payment|Reject selected\n                        payment@@manage-payments.payment.list.action.reject\"\n                    >\n                      Reject\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      *ngIf=\"canCopyPayment(item)\"\n                      (bbKeyboardClick)=\"onCopyPayment(item)\"\n                      i18n=\"\n                        copy payment|transfer selected\n                        payment@@manage-payments.payment.list.action.transfer\"\n                    >\n                      Transfer\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      data-role=\"edit-payment-order-dropdown\"\n                      i18n=\"@@manage-payments.payment.list.action.edit\"\n                      *ngIf=\"!isEditProhibited(item)\"\n                      (bbKeyboardClick)=\"onEditPayment(item)\"\n                    >\n                      Edit\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      triggers=\"hover\"\n                      placement=\"left\"\n                      class=\"dropdown-item\"\n                      (bbKeyboardClick)=\"onCancelPayment(item)\"\n                      [class.disabled]=\"isCancelProhibited(item)\"\n                      [bbTooltip]=\"\n                        isCancelProhibited(item) && actionNotAvailable\n                      \"\n                      i18n=\"\n                        cancel payment|cancel selected\n                        payment@@manage-payments.payment.list.action.cancel\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"button\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      data-role=\"export-payment-order-dropdown\"\n                      i18n=\"@@manage-payments.payment.list.action.export-pdf\"\n                      *ngIf=\"item.permissibleActions?.export\"\n                      [bbExportPdf]=\"item.id\"\n                    >\n                      Export PDF\n                    </button>\n                  </ng-template>\n                </bb-dropdown-menu-ui>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n\n        <div class=\"bb-stack bb-block bb-block--md\">\n          <div class=\"bb-stack__item bb-stack__item--spacing-xl bb-text-bold\">\n            To\n          </div>\n          <div class=\"bb-stack__item\">\n            <div data-role=\"payment-creditor-name\" class=\"break-word\">\n              {{\n                isDebitMode ||\n                transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                  ? item.originator?.name\n                  : isManageTransfersMode\n                  ? transactionInformation(item)?.counterparty?.name\n                  : item.details.transferTransactionInformation.counterparty\n                      .name\n              }}\n            </div>\n            <div\n              class=\"bb-text-support break-word\"\n              data-role=\"payment-creditor-account\"\n            >\n              {{\n                isDebitMode ||\n                transactionInformation(item)?.counterparty?.role === 'DEBTOR'\n                  ? (item.originatorAccount?.identification | accountFormatter)\n                  : isManageTransfersMode\n                  ? (transactionInformation(item)?.counterpartyAccount\n                      ?.identification | accountFormatter)\n                  : (item.details.transferTransactionInformation\n                      .counterpartyAccount.identification | accountFormatter)\n              }}\n            </div>\n          </div>\n          <div\n            class=\"bb-stack__item bb-stack__item--push-right\"\n            *ngIf=\"!(isManageTransfersMode || isDebitMode)\"\n          >\n            <bb-amount-ui\n              [amount]=\"\n                item.details.transferTransactionInformation.instructedAmount\n                  .amount\n              \"\n              [currency]=\"\n                item.details.transferTransactionInformation.instructedAmount\n                  .currencyCode\n              \"\n              [mapCurrency]=\"false\"\n            ></bb-amount-ui>\n          </div>\n        </div>\n\n        <div\n          class=\"bb-stack bb-block bb-block--md\"\n          *ngIf=\"isManageTransfersMode || isDebitMode\"\n        >\n          <div class=\"bb-stack__item bb-stack__item--spacing-xl bb-text-bold\">\n            Exec. date\n          </div>\n          <div class=\"bb-stack__item\">\n            <div\n              data-role=\"payment-exec-date\"\n              *ngIf=\"item.schedule?.nextExecutionDate\"\n              i18n=\"@@manage-payments.payment.list.execution-date-value\"\n            >\n              {formatExecutionDate(item.schedule?.nextExecutionDate), select,\n              today {Today} tomorrow {Tomorrow} other\n              {{{ item.schedule?.nextExecutionDate | date:'shortDate'}}} }\n            </div>\n            <div *ngIf=\"!item.schedule?.nextExecutionDate\">\n              {{ item.requestedExecutionDate | date: 'shortDate' }}\n            </div>\n          </div>\n          <div class=\"bb-stack__item bb-stack__item--push-right\">\n            <bb-amount-ui\n              [amount]=\"\n                item.transferTransactionInformation?.instructedAmount.amount\n              \"\n              [currency]=\"\n                item.transferTransactionInformation?.instructedAmount\n                  .currencyCode\n              \"\n              [mapCurrency]=\"false\"\n            ></bb-amount-ui>\n          </div>\n        </div>\n        <div\n          class=\"bb-stack\"\n          *ngIf=\"\n            (paymentMode === 'RECURRING' || paymentMode === 'ALL') &&\n            (isManageTransfersMode || isDebitMode)\n          \"\n        >\n          <div class=\"bb-stack__item bb-stack__item--spacing-xl bb-text-bold\">\n            Frequency\n          </div>\n          <div class=\"bb-stack__item\">\n            <div\n              data-role=\"payment-frequency\"\n              i18n=\"@@manage-payments.payment.list.frequency-value\"\n            >\n              {item.schedule?.transferFrequency, select, DAILY {Daily} WEEKLY\n              {Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY {Yearly}\n              other {{{item.schedule?.transferFrequency | titlecase}}}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #actionNotAvailable>\n  <span i18n=\"@@manage-payments.action.not.available\">Not available</span>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { ScheduleItem } from '../schedule/schedule.component';\n\n@Component({\n  selector: 'bb-schedule-label-ui',\n  template: `\n    <span\n      i18n=\"\n        Schedule frequency title list|List of titles for available schedule\n        frequencies@@bb-schedule-label-ui.frequency.list\"\n      >{ item?.frequency?.value, select, other {Once} DAILY {Daily} WEEKLY\n      {Weekly} BIWEEKLY {Bi-Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly}\n      YEARLY {Annually} }</span\n    >\n    <span>&nbsp;&minus;</span>\n    <ng-container *ngIf=\"isSingleFrequency\">\n      <span\n        *ngIf=\"isToday()\"\n        i18n=\"\n          Today|Capitalized word for\n          today@@bb-schedule-label-ui.label.today.title\"\n      >\n        Today</span\n      >\n      <span\n        *ngIf=\"!isToday()\"\n        i18n=\"\n          On|Word to be used before a date to indicate that the payment will be\n          executed on that date@@bb-schedule-label-ui.label.on\"\n      >\n        on</span\n      >\n    </ng-container>\n\n    <ng-container *ngIf=\"!isSingleFrequency\">\n      <span\n        i18n=\"\n          Schedule start|Word to be used before a date to indicate that this\n          date is a starting date of the\n          schedule@@bb-schedule-label-ui.label.start\"\n      >\n        from</span\n      >\n      <span *ngIf=\"isToday()\">\n        <ng-container\n          i18n=\"\n            today|Lowercase name for current\n            day@@bb-schedule-label-ui.label.today\"\n        >\n          today</ng-container\n        >{{ hasLimit() && hasEnoughOccurences() ? ';' : '' }}</span\n      >\n    </ng-container>\n\n    <span *ngIf=\"!isToday()\">\n      {{ startDate | date: 'mediumDate'\n      }}{{ hasLimit() && hasEnoughOccurences() ? ';' : '' }}</span\n    >\n\n    <ng-container *ngIf=\"hasLimit() && item?.endDate\">\n      <span\n        i18n=\"\n          Schedule end|Word to be used before a date to indicate that this date\n          is an end date of the schedule@@bb-schedule-label-ui.label.end\"\n      >\n        till</span\n      >\n      <span> {{ endDate | date: 'mediumDate' }}</span>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        hasLimit() &&\n        (item?.repeat || 0) >= minOccurrences &&\n        item?.endType === 'after'\n      \"\n    >\n      <span> {{ item?.repeat }}</span>\n      <span\n        i18n=\"\n          Number of times|Word to be used after number of\n          occurences@@bb-schedule-label-ui.label.repeat\"\n      >\n        times</span\n      >\n    </ng-container>\n  `,\n})\nexport class ScheduleLabelComponent {\n  /**\n   * Object with schedule values\n   */\n  @Input() item: ScheduleItem | undefined;\n\n  // @todo should be configurable and passed from parent\n  readonly minOccurrences = 2;\n\n  get startDate(): Date | undefined {\n    return this.item && Date.parse(this.item.startDate)\n      ? new Date(this.item.startDate)\n      : undefined;\n  }\n\n  get isSingleFrequency(): boolean | undefined {\n    return (\n      this.item &&\n      this.item.frequency &&\n      (this.item.frequency.value\n        ? this.item.frequency.value.toLocaleLowerCase() === 'once'\n        : false)\n    );\n  }\n\n  get endDate(): Date | undefined {\n    return this.item && this.item.endDate && Date.parse(this.item.endDate)\n      ? new Date(this.item.endDate)\n      : undefined;\n  }\n\n  isToday(): boolean {\n    if (this.item === undefined) {\n      throw new Error(\n        '`item` input is required in `bb-schedule-label-ui` component'\n      );\n    }\n    const today = new Date().setHours(0, 0, 0, 0);\n    const startDate = new Date(this.item.startDate);\n    return startDate.setHours(0, 0, 0, 0) === today;\n  }\n\n  hasEnd(): boolean {\n    return (\n      !!this.item &&\n      (this.item.endDate !== undefined || this.item.repeat !== undefined)\n    );\n  }\n\n  hasLimit(): boolean {\n    return this.hasEnd() && !this.isSingleFrequency;\n  }\n\n  hasEnoughOccurences(): boolean {\n    return (\n      !!this.item &&\n      this.item.repeat !== undefined &&\n      this.item.repeat >= this.minOccurrences\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScheduleLabelComponent } from './schedule-label.component';\n\n@NgModule({\n  declarations: [ScheduleLabelComponent],\n  imports: [CommonModule],\n  exports: [ScheduleLabelComponent],\n})\nexport class ScheduleLabelModule {}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'bb-confirmation-dialog',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'confirmation-dialog.component.html',\n})\nexport class ConfirmationDialogComponent {\n  readonly modalOptions: NgbModalOptions = {\n    backdrop: 'static',\n    keyboard: false,\n  };\n\n  comment = '';\n\n  /**\n   * The button color for confirm button\n   * Default value is `primary`.\n   */\n  @Input() confirmButtonColor? = 'primary';\n\n  /**\n   * The button color for cancel button\n   * Default value is `link`.\n   */\n  @Input() cancelButtonColor? = 'link';\n\n  /**\n   * Indicator for confirmation dialog open state.\n   * Default value is `false`.\n   */\n  @Input() isOpen = false;\n\n  /**\n   * Payload data for confirm action\n   * Can be any type\n   */\n  @Input() confirmActionPayload?: { payload: any };\n\n  /**\n   * Changes will be triggered on confirmAction event emit.\n   */\n  @Output() confirm = new EventEmitter();\n\n  /**\n   * Changes will be triggered on cancel event emit.\n   */\n  @Output() cancel = new EventEmitter();\n\n  /**\n   * Show the field for the comment\n   * Default value is `false`.\n   */\n  @Input() attachComment = false;\n\n  /**\n   * Text for comment field label,\n   * Default value is `Add comment`.\n   */\n  @Input()\n  commentFieldLabel = $localize`:@@bb-confirmation-dialog.comment.label:Add comment`;\n\n  private resetComment() {\n    if (this.attachComment) {\n      this.comment = '';\n    }\n  }\n\n  onCancelAction() {\n    this.cancel.emit();\n    this.resetComment();\n  }\n\n  onConfirmAction() {\n    const _comment = this.comment.trim();\n    let emitValue = this.confirmActionPayload?.payload;\n\n    if (this.attachComment && !!_comment) {\n      emitValue = {\n        payload: this.confirmActionPayload?.payload,\n        comment: _comment,\n      };\n    }\n\n    this.confirm.emit(emitValue);\n\n    this.resetComment();\n  }\n}\n","<bb-modal-ui [isOpen]=\"isOpen\" [modalOptions]=\"modalOptions\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <span #headerContent class=\"d-none\" aria-hidden=\"true\">\n        <ng-content select=\"[title]\"></ng-content>\n      </span>\n      <bb-header-ui\n        headingType=\"h2\"\n        [heading]=\"headerContent.textContent\"\n        [attr.data-role]=\"'confirmation-header'\"\n      ></bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div [ngClass]=\"{ 'bb-block bb-block--md': attachComment }\">\n        <ng-content select=\"[body]\"></ng-content>\n      </div>\n\n      <ng-container *ngIf=\"attachComment && isOpen\">\n        <label\n          [for]=\"commentField.id\"\n          i18n=\"@@bb-confirmation-dialog.comment\"\n          >{{ commentFieldLabel }}</label\n        >\n        <span class=\"bb-text-support\">\n          (<ng-container i18n=\"@@bb-confirmation-dialog.comment.optional-label\"\n            >Optional</ng-container\n          >)\n        </span>\n        <bb-textarea-ui\n          #commentField\n          wrap=\"hard\"\n          [rows]=\"3\"\n          [cols]=\"50\"\n          [minLength]=\"3\"\n          [maxLength]=\"140\"\n          [(ngModel)]=\"comment\"\n          showCharCounter=\"true\"\n          data-role=\"confirmation-comment\"\n        ></bb-textarea-ui>\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          [color]=\"confirmButtonColor\"\n          class=\"bb-button-bar__button\"\n          (click)=\"onConfirmAction()\"\n          [attr.data-role]=\"'confirm-action-btn'\"\n        >\n          <ng-content select=\"[confirmActionName]\"></ng-content>\n        </button>\n\n        <button\n          bbButton\n          (click)=\"onCancelAction()\"\n          [color]=\"cancelButtonColor\"\n          class=\"bb-button-bar__button\"\n          [attr.data-role]=\"'cancel-action-btn'\"\n        >\n          <ng-content select=\"[cancelActionName]\"></ng-content>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { TextareaModule } from '@backbase/ui-ang/textarea';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ConfirmationDialogComponent],\n  imports: [\n    CommonModule,\n    HeaderModule,\n    ModalModule,\n    TextareaModule,\n    ButtonModule,\n    FormsModule,\n  ],\n  exports: [ConfirmationDialogComponent],\n})\nexport class ConfirmationDialogModule {}\n","import {\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { DefaultDebounceTime, SearchMinLength } from '../../constants';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-payments-search',\n  templateUrl: 'payments-search.component.html',\n})\nexport class PaymentsSearchComponent implements OnDestroy, OnInit {\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  readonly gc$ = new Subject();\n  readonly debounceSearch$ = new Subject<string>();\n\n  searchTerm = '';\n\n  /**\n   * Time delay between each search requests in milliseconds.\n   * Default is 300\n   */\n  @Input() debounceTime = DefaultDebounceTime;\n  /**\n   * Minimum search length\n   * Default is 3\n   */\n  @Input() searchMinLength = SearchMinLength;\n  /**\n   * Changes will be triggered on search\n   */\n  @Output() search = new EventEmitter<string>();\n\n  ngOnInit() {\n    this.debounceSearch$\n      .pipe(\n        takeUntil(this.gc$),\n        debounceTime(this.debounceTime),\n        distinctUntilChanged()\n      )\n      .subscribe((term: string) => {\n        if (!term || term.length >= this.searchMinLength) {\n          this.search.emit(term);\n        }\n      });\n  }\n\n  startSearching(query: string) {\n    this.searchTerm = query;\n    this.debounceSearch$.next(this.searchTerm);\n  }\n\n  clearSearching() {\n    this.searchTerm = '';\n    this.debounceSearch$.next(this.searchTerm);\n  }\n\n  submitSearch() {\n    if (this.searchTerm.length >= this.searchMinLength) {\n      this.search.emit(this.searchTerm);\n    }\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.debounceSearch$.complete();\n    this.gc$.complete();\n  }\n}\n\n@Directive({\n  selector: '[bbPaymentsSearchCustomizable]',\n})\nexport class PaymentsSearchCustomizableDirective extends BbTemplate<\n  PaymentsSearchComponent,\n  undefined\n> {}\n","<ng-container bbPaymentsSearchCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbPaymentsSearchCustomizable let-hostRef>\n  <div class=\"payments-search-container\">\n    <bb-search-box-ui\n      placeholder=\"Search\"\n      i18n-placeholder=\"@@payments-list.placeholder.search\"\n      aria-label=\"Search payments\"\n      i18n-aria-label=\"@@payments-list.label.search\"\n      [showSearch]=\"true\"\n      [showClear]=\"true\"\n      (submit)=\"hostRef.submitSearch()\"\n      (clear)=\"hostRef.clearSearching()\"\n      (search)=\"$event.stopPropagation()\"\n      [ngModel]=\"hostRef.searchTerm\"\n      (ngModelChange)=\"hostRef.startSearching($event)\"\n      data-role=\"searchbox\"\n    >\n    </bb-search-box-ui>\n  </div>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { PaymentsControlsModel } from '../../models/payments-controls.model';\nimport { Status } from '../../constants';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-payments-filter',\n  templateUrl: 'payments-filter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentsFilterComponent implements OnInit, OnDestroy {\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  /**\n   * Reference to Status enum\n   */\n  readonly statusesMap = Status;\n\n  public paymentsFilterForm: FormGroup = this.fb.group({\n    status: new FormControl(),\n    amount: this.fb.group(\n      {\n        from: ['', Validators.min(0)],\n        to: ['', Validators.min(0)],\n      },\n      { validator: this.amountValidator.bind(this) }\n    ),\n    executionDate: new FormControl(),\n  });\n\n  private readonly gc$ = new Subject<void>();\n  private readonly filterValueChanges =\n    this.paymentsFilterForm.valueChanges.pipe(takeUntil(this.gc$));\n  alreadyApplied = false;\n\n  /**\n   * EventEmitter for triggering a filter action.\n   */\n  @Output() readonly filter = new EventEmitter<PaymentsControlsModel>();\n  /**\n   * EventEmitter for closing filter form\n   */\n  @Output() readonly closeFilter = new EventEmitter();\n  /**\n   * EventEmitter for displaying wether filter was applied or not\n   */\n  @Output() readonly isFilterApplied = new EventEmitter<boolean>();\n  /**\n   * EventEmitter for when form is reset. Search should be executed\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly reset = new EventEmitter();\n  /**\n   * String array with statuses that should not be available in current instance\n   */\n  @Input() statusBlackList = [];\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.onFilterChanges();\n  }\n\n  /**\n   * Emit event to apply filter.\n   *\n   * @param filterParams - Options to filter transactions list with.\n   */\n  public onFilter(filterParams: PaymentsControlsModel): void {\n    if (filterParams.status) {\n      filterParams.status = this.filterStatusMap(filterParams.status);\n    }\n\n    this.filter.emit(this.normalizeFilterValues(filterParams));\n    this.alreadyApplied = true;\n  }\n\n  /**\n   * Clear filter form, reset values to default and emit event to apply filter.\n   */\n  public onClearFilter(): void {\n    this.paymentsFilterForm.reset();\n\n    this.paymentsFilterForm.markAsPristine();\n\n    if (this.alreadyApplied) {\n      this.reset.emit({ ...this.paymentsFilterForm.value });\n    }\n\n    this.isFilterApplied.emit(false);\n    this.alreadyApplied = false;\n  }\n\n  /**\n   * Emit event to close this filter form.\n   */\n  public onCloseFilter(): void {\n    this.closeFilter.emit();\n  }\n\n  isApplyButtonDisabled(): boolean {\n    const amountControl = this.paymentsFilterForm.get('amount');\n    const executionDateControl = this.paymentsFilterForm.get('executionDate');\n    return !!(\n      this.paymentsFilterForm.pristine ||\n      amountControl?.invalid ||\n      executionDateControl?.invalid\n    );\n  }\n\n  private amountValidator(group: FormGroup): void {\n    const amountControls = group.controls;\n    const toControlHasValue =\n      amountControls.to.value || amountControls.to.value === 0;\n\n    this.resetAmountError(amountControls.to);\n    this.resetAmountError(amountControls.from);\n\n    if (\n      toControlHasValue &&\n      amountControls.from.value > amountControls.to.value\n    ) {\n      amountControls.to.setErrors({\n        incorrectAmount: true,\n        ...amountControls.to.errors,\n      });\n\n      amountControls.from.setErrors({\n        incorrectAmount: true,\n        ...amountControls.from.errors,\n      });\n    }\n  }\n\n  private resetAmountError(control: AbstractControl): void {\n    let controlErrors = control.errors;\n    delete controlErrors?.incorrectAmount;\n\n    if (!Object.keys({ ...controlErrors }).length) {\n      controlErrors = null;\n    }\n\n    control.setErrors(controlErrors);\n  }\n\n  get amountToControl(): AbstractControl | null | undefined {\n    return this.paymentsFilterForm.get('amount')?.get('to');\n  }\n\n  /**\n   * filterStatusMap Converts `PROCESSING`status in the array,\n   * to `READY`, `ACKNOWLEDGED`, and `DOWNLOADING` since the server\n   * uses the statuses, but the user should only see them as\n   * `PROCESSING`\n   */\n  private filterStatusMap(statuses: string[]): string[] {\n    const processingStatusMapping = [\n      this.statusesMap.READY,\n      this.statusesMap.ACKNOWLEDGED,\n      this.statusesMap.DOWNLOADING,\n    ];\n\n    const retVal = statuses.includes(this.statusesMap.PROCESSING)\n      ? [\n          ...statuses.filter(\n            (status) => status !== this.statusesMap.PROCESSING\n          ),\n          ...processingStatusMapping,\n        ]\n      : statuses;\n\n    return retVal;\n  }\n\n  private normalizeFilterValues(\n    model: PaymentsControlsModel\n  ): PaymentsControlsModel {\n    if (\n      model.executionDate &&\n      model.executionDate.from &&\n      !model.executionDate.to\n    ) {\n      model.executionDate.to = model.executionDate.from;\n    }\n    return model;\n  }\n\n  /**\n   * onFilterChanges generates the subscription that will\n   * mark the form as pristine if no filter inputs have values\n   */\n  private onFilterChanges(): void {\n    this.filterValueChanges.subscribe((val) => {\n      if (\n        val.status ||\n        val.amount.from ||\n        val.amount.to ||\n        (val.executionDate && val.executionDate.from)\n      ) {\n        return;\n      }\n      this.paymentsFilterForm.markAsPristine();\n\n      if (this.alreadyApplied) {\n        this.reset.emit({ ...this.paymentsFilterForm.value });\n        this.alreadyApplied = false;\n        this.isFilterApplied.emit(false);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n\n  getExecutionDateErrorId(executionDateId: string): string {\n    return `${executionDateId}__error`;\n  }\n\n  getExecutionDateDescribedBy(executionDateId: string): string {\n    return `date-range-header-${executionDateId} ${this.getExecutionDateErrorId(\n      executionDateId\n    )}`;\n  }\n}\n\n@Directive({\n  selector: '[bbPaymentsFilterCustomizable]',\n})\nexport class PaymentsFilterCustomizableDirective extends BbTemplate<\n  PaymentsFilterComponent,\n  undefined\n> {}\n","<ng-container bbPaymentsFilterCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbPaymentsFilterCustomizable let-hostRef>\n  <form class=\"form bg-lighter\" [formGroup]=\"hostRef.paymentsFilterForm\">\n    <div class=\"bb-block bb-block--md\">\n      <div class=\"row\">\n        <!-- Payment Status select -->\n        <div class=\"bb-block bb-block--md col-12 col-md-6 col-xl-4\">\n          <bb-dropdown-multi-select-ui\n            label=\"Status\"\n            i18n-label=\"@@bb-payments-filter.form.label.status\"\n            placeholder=\"All\"\n            i18n-placeholder=\"@@bb-payments-filter.form.label.status.all\"\n            formControlName=\"status\"\n            data-role=\"select-status\"\n          >\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.ENTERED)\n              \"\n              label=\"Entered\"\n              [value]=\"hostRef.statusesMap.ENTERED\"\n              i18n-label=\"@@payments.filter.dropdown.option.entered\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(\n                  hostRef.statusesMap.PROCESSING\n                )\n              \"\n              label=\"Processing\"\n              [value]=\"hostRef.statusesMap.PROCESSING\"\n              i18n-label=\"@@payments.filter.dropdown.option.processing\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.PROCESSED)\n              \"\n              label=\"Processed\"\n              [value]=\"hostRef.statusesMap.PROCESSED\"\n              i18n-label=\"@@payments.filter.dropdown.option.processed\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.ACCEPTED)\n              \"\n              label=\"Accepted\"\n              [value]=\"hostRef.statusesMap.ACCEPTED\"\n              i18n-label=\"@@payments.filter.dropdown.option.accepted\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.REJECTED)\n              \"\n              label=\"Rejected\"\n              [value]=\"hostRef.statusesMap.REJECTED\"\n              i18n-label=\"@@payments.filter.dropdown.option.rejected\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(\n                  hostRef.statusesMap.CANCELLATION_PENDING\n                )\n              \"\n              label=\"Cancellation pending\"\n              [value]=\"hostRef.statusesMap.CANCELLATION_PENDING\"\n              i18n-label=\"\n                @@payments.filter.dropdown.option.cancellation-pending\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n            <bb-dropdown-multi-select-option-ui\n              *ngIf=\"\n                !hostRef.statusBlackList.includes(hostRef.statusesMap.CANCELLED)\n              \"\n              label=\"Cancelled\"\n              [value]=\"hostRef.statusesMap.CANCELLED\"\n              i18n-label=\"@@payments.filter.dropdown.option.cancelled\"\n            >\n            </bb-dropdown-multi-select-option-ui>\n          </bb-dropdown-multi-select-ui>\n        </div>\n        <!-- Amount range -->\n        <fieldset class=\"bb-block bb-block--md col-12 col-md-6 col-xl-4\">\n          <label\n            i18n=\"amount from@@bb-payments-filter.form.label.amount\"\n            [for]=\"'payment-filter-amount' + min.id + '-' + max.id + '-group'\"\n          >\n            Amount\n          </label>\n          <div\n            class=\"row\"\n            [id]=\"'payment-filter-amount' + min.id + '-' + max.id + '-group'\"\n            formGroupName=\"amount\"\n          >\n            <bb-input-number-ui\n              #min\n              class=\"col-6\"\n              formControlName=\"from\"\n              min=\"0\"\n              aria-label=\"Amount From\"\n              placeholder=\"min\"\n              i18n-aria-label=\"\n                amount from aria@@bb-payments-filter.form.ariaLabel.amountFrom\"\n              i18n-placeholder=\"@@bb-payments-filter.form.placeholder.min\"\n              data-role=\"input-amount-from\"\n            >\n            </bb-input-number-ui>\n            <bb-input-number-ui\n              #max\n              [min]=\"min.value || 0\"\n              class=\"col-6\"\n              formControlName=\"to\"\n              placeholder=\"max\"\n              aria-label=\"Amount To\"\n              i18n-aria-label=\"\n                amount to aria@@bb-payments-filter.form.ariaLabel.amountTo\"\n              i18n-placeholder=\"@@bb-payments-filter.form.placeholder.max\"\n              data-role=\"input-amount-to\"\n            >\n              <!-- Do not remove label, placeholder needed for layout not to break -->\n            </bb-input-number-ui>\n            <bb-input-validation-message-ui\n              class=\"col-12\"\n              id=\"amountError\"\n              [showErrors]=\"\n                hostRef.amountToControl?.touched &&\n                hostRef.amountToControl?.errors?.incorrectAmount\n              \"\n            >\n              <span i18n=\"@@payments.filter.invalid-amount-range-error\"\n                >Maximum amount cannot be smaller than the minimum amount</span\n              >\n            </bb-input-validation-message-ui>\n          </div>\n        </fieldset>\n        <!-- Date range -->\n        <div class=\"bb-block bb-block--md col-12 col-md-6 col-xl-4\">\n          <label\n            [for]=\"executionDate.id\"\n            i18n=\"@@bb-payments-filter.form.label.executionDate\"\n            [id]=\"'date-range-header-' + executionDate.id\"\n          >\n            Execution date\n          </label>\n          <bb-input-datepicker-ui\n            name=\"executionDate\"\n            formControlName=\"executionDate\"\n            data-role=\"input-date\"\n            aria-label=\"Execution date range\"\n            i18n-aria-label=\"\n              amount to aria@@bb-payments-filter.form.ariaLabel.executionDate\"\n            overrideDateFormat=\"MM/dd/y\"\n            [placeholder]=\"'MM/DD/YY - MM/DD/YY'\"\n            [rangeSelection]=\"true\"\n            [attr.aria-describedby]=\"\n              getExecutionDateDescribedBy(executionDate?.id)\n            \"\n            #executionDate\n          >\n          </bb-input-datepicker-ui>\n          <bb-input-validation-message-ui\n            *ngIf=\"\n              paymentsFilterForm.get('executionDate') as executionDateControl\n            \"\n            [attr.id]=\"getExecutionDateErrorId(executionDate?.id)\"\n            [showErrors]=\"\n              executionDateControl?.touched && executionDateControl?.invalid\n            \"\n          >\n            <span i18n=\"@@payments.filter.invalid-date-range-error\"\n              >Please provide a valid date range format.</span\n            >\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <!-- Apply -->\n      <button\n        bbButton\n        type=\"submit\"\n        class=\"bb-button-bar__button\"\n        (click)=\"hostRef.onFilter(hostRef.paymentsFilterForm.value)\"\n        color=\"primary\"\n        data-role=\"btn-apply\"\n        [disabled]=\"hostRef.isApplyButtonDisabled()\"\n        i18n=\"@@bb-payments-filter.form.button.apply\"\n      >\n        Apply\n      </button>\n      <!-- Close -->\n      <button\n        bbButton\n        type=\"button\"\n        color=\"secondary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"btn-cancel\"\n        i18n=\"@@bb-payments-filter.form.button.close\"\n        (click)=\"hostRef.onCloseFilter()\"\n      >\n        Close\n      </button>\n      <!-- Clear all -->\n      <button\n        bbButton\n        type=\"reset\"\n        color=\"link\"\n        class=\"bb-button-bar__button\"\n        i18n=\"@@bb-payments-filter.form.button.clearAll\"\n        (click)=\"hostRef.onClearFilter()\"\n        *ngIf=\"hostRef.paymentsFilterForm.dirty\"\n        data-role=\"btn-clear-all\"\n      >\n        Clear All\n      </button>\n    </div>\n  </form>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { PaymentsControlsModel } from '../../models/payments-controls.model';\nimport { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Status } from '../../constants';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-payments-controls',\n  templateUrl: 'payments-controls.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentsControlsComponent implements OnDestroy {\n  /**\n   * Time between each search requests sent by Batch manager (in milliseconds).\n   * Configurable via model property.\n   */\n  @Input() debounceTime: number | undefined;\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * Reference to Status enum\n   */\n  readonly statusesMap = Status;\n  /**\n   * EventEmitter for triggering a filter action.\n   */\n  @Output() readonly applyFilter = new EventEmitter<PaymentsControlsModel>();\n\n  /**\n   * Subject will emit when searchbox from payment-search input changes\n   */\n  private search$ = new BehaviorSubject<string>('');\n\n  /**\n   * Subject that will emit when filters from payments-filter are modified\n   */\n  private filters$ = new BehaviorSubject<\n    Pick<PaymentsControlsModel, 'executionDate' | 'status' | 'amount'>\n  >({\n    executionDate: {},\n    status: [],\n    amount: {},\n  });\n\n  /**\n   * Whether the filter form is shown.\n   */\n  public isFilterOpen = false;\n\n  /**\n   * Whether a filter is applied on the transactions.\n   */\n  public isFilterApplied = false;\n\n  public filterParams$ = new Subject<PaymentsControlsModel>();\n\n  /**\n   * destroy$ should emit only when component is destroyed to\n   * signal subscriptions to unsubscribe.\n   */\n  readonly destroy$ = new Subject();\n\n  constructor() {\n    /**\n     * Subscription will emit for the search to be triggered\n     */\n    combineLatest([this.search$, this.filters$])\n      .pipe(takeUntil(this.destroy$), distinctUntilChanged())\n      .subscribe(([query, filterObject]) => {\n        const retVal: PaymentsControlsModel = {\n          query,\n          ...filterObject,\n        };\n\n        this.applyFilter.emit(retVal);\n      });\n  }\n\n  /**\n   * Search event callback\n   */\n  public onSearch(searchParam: string): void {\n    this.search$.next(searchParam);\n  }\n\n  /**\n   * Filter event callback\n   */\n  public onFilter(\n    filterParams: Pick<\n      PaymentsControlsModel,\n      'executionDate' | 'status' | 'amount'\n    >\n  ): void {\n    this.filters$.next(filterParams);\n    this.isFilterApplied = true;\n  }\n\n  /**\n   * Close event callback to hide the filters controls\n   */\n  public onClose(): void {\n    this.isFilterOpen = false;\n  }\n\n  /**\n   * Toogle method to hide or show the filter form\n   */\n  public toggleFilter(): void {\n    this.isFilterOpen = !this.isFilterOpen;\n  }\n\n  /**\n   * Handle effects when filter is reset\n   */\n  public onFilterReset(event: boolean): void {\n    this.isFilterApplied = event;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.filterParams$.complete();\n    this.search$.complete();\n    this.filters$.complete();\n  }\n}\n\n@Directive({\n  selector: '[bbPaymentsControlsCustomizable]',\n})\nexport class PaymentsControlsCustomizableDirective extends BbTemplate<\n  PaymentsControlsComponent,\n  undefined\n> {}\n","<ng-container\n  bbPaymentsControlsCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template bbPaymentsControlsCustomizable let-hostRef>\n  <div (keydown)=\"$event?.stopPropagation()\">\n    <div class=\"bb-block\" [ngClass]=\"{ 'bb-block--md': hostRef.isFilterOpen }\">\n      <div class=\"bb-stack\">\n        <!-- Search -->\n        <div class=\"bb-stack__item bb-stack__item--fill--lg-down\">\n          <bb-payments-search\n            [debounceTime]=\"hostRef.debounceTime\"\n            (search)=\"hostRef.onSearch($event)\"\n            data-role=\"searchbox\"\n          >\n          </bb-payments-search>\n        </div>\n        <div class=\"bb-stack__item d-none d-xl-block\">\n          <!-- Filter button -->\n          <button\n            bbButton\n            [color]=\"hostRef.isFilterApplied ? 'primary' : 'secondary'\"\n            aria-label=\"Toggle filter\"\n            [attr.aria-expanded]=\"hostRef.isFilterOpen\"\n            i18n-aria-label=\"\n              Filter payments@@payments.ariaLabel.filter.big.button\"\n            (click)=\"hostRef.toggleFilter()\"\n            [attr.data-role]=\"'btn-filter'\"\n          >\n            <bb-icon-ui name=\"filter\"></bb-icon-ui>\n            <ng-container\n              *ngIf=\"!hostRef.isFilterApplied\"\n              i18n=\"Filter toggle button@@transactions.filter.button\"\n            >\n              Filter\n            </ng-container>\n            <ng-container\n              *ngIf=\"hostRef.isFilterApplied\"\n              i18n=\"Filter toggle button@@transactions.filtersApplied.button\"\n            >\n              Filters applied\n            </ng-container>\n          </button>\n        </div>\n        <div class=\"bb-stack__item bb-stack__item--push-right d-xl-none\">\n          <button\n            bbButton\n            [color]=\"hostRef.isFilterApplied ? 'primary' : 'secondary'\"\n            circle=\"true\"\n            aria-label=\"Toggle filter\"\n            i18n-aria-label=\"\n              Filter payments@@payments.ariaLabel.filter.small.button\"\n            (click)=\"hostRef.toggleFilter()\"\n            [attr.data-role]=\"'btn-filter'\"\n          >\n            <bb-icon-ui name=\"filter\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n    </div>\n    <bb-payments-filter\n      [statusBlackList]=\"[hostRef.statusesMap.CANCELLATION_PENDING]\"\n      (filter)=\"hostRef.onFilter($event)\"\n      (isFilterApplied)=\"hostRef.onFilterReset($event)\"\n      (closeFilter)=\"hostRef.onClose()\"\n      (reset)=\"hostRef.onFilter($event)\"\n      [hidden]=\"!hostRef.isFilterOpen\"\n    >\n    </bb-payments-filter>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  PaymentsSearchComponent,\n  PaymentsSearchCustomizableDirective,\n} from './payments-search.component';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [PaymentsSearchComponent, PaymentsSearchCustomizableDirective],\n  imports: [CommonModule, FormsModule, SearchBoxModule, ReactiveFormsModule],\n  exports: [PaymentsSearchComponent, PaymentsSearchCustomizableDirective],\n})\nexport class PaymentsSearchModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport {\n  PaymentsFilterComponent,\n  PaymentsFilterCustomizableDirective,\n} from './payments-filter.component';\nimport { InputNumberModule } from '@backbase/ui-ang/input-number';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { DropdownMultiSelectModule } from '@backbase/ui-ang/dropdown-multi-select';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n('@backbase/payord-form-builder-ang');\nimport { ReactiveFormsModule } from '@angular/forms';\n\nconst uiModules = [\n  ButtonModule,\n  DropdownMultiSelectModule,\n  InputDatepickerModule,\n  InputValidationMessageModule,\n  InputNumberModule,\n];\n\n@NgModule({\n  declarations: [PaymentsFilterComponent, PaymentsFilterCustomizableDirective],\n  imports: [CommonModule, ReactiveFormsModule, ...uiModules],\n  exports: [PaymentsFilterComponent, PaymentsFilterCustomizableDirective],\n  providers: [DatePipe],\n})\nexport class PaymentsFilterModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  PaymentsControlsComponent,\n  PaymentsControlsCustomizableDirective,\n} from './payments-controls.component';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { PaymentsSearchModule } from '../payments-search/payments-search.module';\nimport { PaymentsFilterModule } from '../payments-filter/payments-filter.module';\n\n@NgModule({\n  declarations: [\n    PaymentsControlsComponent,\n    PaymentsControlsCustomizableDirective,\n  ],\n  imports: [\n    ButtonModule,\n    CommonModule,\n    IconModule,\n    PaymentsFilterModule,\n    PaymentsSearchModule,\n  ],\n  exports: [PaymentsControlsComponent, PaymentsControlsCustomizableDirective],\n})\nexport class PaymentsControlsModule {}\n","import {\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  DoCheck,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs';\nimport { distinct, takeUntil } from 'rxjs/operators';\nimport { Frequencies } from '../../constants';\n\nexport interface ScheduleFrequency {\n  value: string;\n  every: string;\n}\n\nexport interface ScheduleItem {\n  frequency: ScheduleFrequency;\n  startDate: string;\n  endDate?: string;\n  repeat?: number;\n  every?: string;\n  endType?: string;\n  scheduleInfo?: string;\n}\n\nexport const endTypes = {\n  never: 'never',\n  on: 'on',\n  after: 'after',\n};\n\nconst endDate = (frequency: ScheduleFrequency, startDate?: string) => {\n  const today = startDate ? new Date(startDate) : new Date();\n  switch (frequency.value) {\n    case Frequencies.ONCE:\n      return undefined;\n    case Frequencies.WEEKLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 7\n      ).toISOString();\n    }\n    case Frequencies.BIWEEKLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 14\n      ).toISOString();\n    }\n    case Frequencies.MONTHLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth() + 1,\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.QUARTERLY: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth() + 3,\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.YEARLY: {\n      return new Date(\n        today.getFullYear() + 1,\n        today.getMonth(),\n        today.getDate()\n      ).toISOString();\n    }\n    case Frequencies.DAILY:\n    default: {\n      return new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate() + 1\n      ).toISOString();\n    }\n  }\n};\n\n@Component({\n  selector: 'bb-schedule-ui',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnInit, DoCheck, OnDestroy {\n  readonly hostRef: ScheduleComponent = this;\n\n  /**\n   * List of available frequencies\n   */\n  @Input() frequencies: Array<ScheduleFrequency> | undefined;\n  /**\n   * Minimum repeat allowed\n   */\n  @Input() minOccurs: number | undefined;\n  /**\n   * Maximum repeat allowed\n   */\n  @Input() maxOccurs: number | undefined;\n  /**\n   * Form with schedule fields\n   */\n  @Input() scheduleForm: FormGroup | undefined;\n  /**\n   * Whether the submit button is pressed\n   */\n  @Input() formSubmitted: boolean | undefined;\n\n  get endTypes() {\n    return endTypes;\n  }\n\n  get item() {\n    return this.rawItem;\n  }\n\n  get isSingleTransfer(): boolean | undefined {\n    return (\n      this.item &&\n      this.item.frequency &&\n      (this.item.frequency.value\n        ? this.item.frequency.value.toLocaleLowerCase() === 'once'\n        : false)\n    );\n  }\n\n  get today(): NgbDateStruct {\n    const today = new Date();\n    return {\n      year: today.getFullYear(),\n      month: today.getMonth() + 1,\n      day: today.getDate(),\n    };\n  }\n\n  private readonly gc$ = new Subject<void>();\n  private rawItem: ScheduleItem | undefined;\n\n  constructor(private readonly changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck() {\n    if (this.scheduleForm !== undefined) {\n      this.rawItem = this.scheduleForm.getRawValue();\n    }\n  }\n\n  ngOnInit() {\n    if (this.scheduleForm === undefined) {\n      throw new Error(\n        '`scheduleForm` input is required in `bb-schedule-ui` component'\n      );\n    }\n\n    if (this.frequencies === undefined) {\n      throw new Error(\n        '`frequencies` input is required in `bb-schedule-ui` component'\n      );\n    }\n\n    this.rawItem = this.scheduleForm.getRawValue();\n\n    this.onEndTypeChange();\n    this.onFrequencyChange();\n    this.onStartDateChange();\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n\n  private onEndTypeChange() {\n    const endTypeControl =\n      this.scheduleForm && this.scheduleForm.get('endType');\n    const frequencyControl =\n      this.scheduleForm && this.scheduleForm.get('frequency');\n    if (endTypeControl) {\n      endTypeControl.valueChanges\n        .pipe(takeUntil(this.gc$))\n        .subscribe((endTypeValue: string) => {\n          this.setControlsState(endTypeValue);\n          if (frequencyControl) {\n            this.setEndDate(frequencyControl.value);\n          }\n        });\n    }\n  }\n\n  private setControlsState(endTypeValue: string) {\n    if (!this.scheduleForm) {\n      return;\n    }\n    const endDateControl = this.scheduleForm.get('endDate');\n    const repeatControl = this.scheduleForm.get('repeat');\n    if (endDateControl && repeatControl) {\n      if (endDateControl.value) {\n        endDateControl.enable();\n      } else {\n        this.setEndDate({ value: Frequencies.DAILY, every: '1' });\n        endDateControl.disable();\n      }\n      if (repeatControl.value) {\n        repeatControl.enable();\n      } else {\n        repeatControl.disable();\n      }\n      switch (endTypeValue) {\n        case endTypes.after: {\n          repeatControl.enable();\n          endDateControl.disable();\n          break;\n        }\n        case endTypes.on: {\n          endDateControl.enable();\n          repeatControl.disable();\n          break;\n        }\n        case endTypes.never:\n        default: {\n          endDateControl.disable();\n          repeatControl.disable();\n          break;\n        }\n      }\n    }\n  }\n\n  private onStartDateChange() {\n    const startDateControl =\n      this.scheduleForm && this.scheduleForm.get('startDate');\n    const startDate = startDateControl && startDateControl.value;\n\n    if (startDateControl) {\n      startDateControl.valueChanges\n        .pipe(takeUntil(this.gc$), distinct())\n        .subscribe((value) => {\n          const frequency = this.item && this.item.frequency;\n          if (frequency && startDate !== value) {\n            this.setEndDate(frequency);\n          }\n        });\n    }\n  }\n\n  private onFrequencyChange() {\n    if (!this.frequencies) {\n      return;\n    }\n    const frequencyControl =\n      this.scheduleForm && this.scheduleForm.get('frequency');\n    if (frequencyControl) {\n      if (this.isSingleTransfer) {\n        frequencyControl.setValue(this.frequencies[0]);\n      }\n      frequencyControl.valueChanges\n        .pipe(takeUntil(this.gc$))\n        .subscribe((freq) => {\n          this.setEndDate(freq);\n        });\n    }\n  }\n\n  private setEndDate(frequency: ScheduleFrequency) {\n    const endDateControl =\n      this.scheduleForm && this.scheduleForm.get('endDate');\n    const startDateControl =\n      this.scheduleForm && this.scheduleForm.get('startDate');\n    const startDate = startDateControl && startDateControl.value;\n    const endTypeControl =\n      this.scheduleForm && this.scheduleForm.get('endType');\n    if (\n      endDateControl &&\n      endTypeControl &&\n      endTypeControl.value === this.endTypes.on\n    ) {\n      endDateControl.setValue(endDate(frequency, startDate));\n    }\n    this.changeDetectorRef.detectChanges();\n  }\n\n  isInvalidControl(control: FormControl): boolean {\n    if (!this.scheduleForm) {\n      return false;\n    }\n\n    if (!this.formSubmitted) {\n      control.markAsUntouched();\n    }\n\n    return !!this.formSubmitted && control.invalid;\n  }\n}\n\n@Directive({\n  selector:\n    '[bbScheduleCustomizable], [bbPayordInitiatePaymentScheduleCustomizable]',\n})\nexport class ScheduleCustomizableDirective extends BbTemplate<\n  ScheduleComponent,\n  undefined\n> {}\n","<ng-template bbScheduleCustomizable let-hostRef>\n  <div [formGroup]=\"hostRef.scheduleForm\">\n    <div class=\"bb-block bb-block--md\"></div>\n    <div class=\"row bb-block bb-block--md\">\n      <div class=\"col-md-7\">\n        <label class=\"bb-text-bold\" [attr.for]=\"startDatePicker.id\">\n          <ng-container\n            i18n=\"\n              Schedule execution label|Label for an execution date in scheduling\n              component@@bb-schedule-ui.label.execution\"\n            >{hostRef.scheduleForm?.get('frequency')?.value?.value.toUpperCase(),\n            select, ONCE {Execute on} other {Start on}}\n          </ng-container>\n        </label>\n\n        <bb-input-datepicker-ui\n          #startDatePicker\n          [minDate]=\"hostRef.today\"\n          formControlName=\"startDate\"\n          data-role=\"execution-date-calendar\"\n        ></bb-input-datepicker-ui>\n\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"\n            hostRef.isInvalidControl(hostRef.scheduleForm.get('startDate'))\n          \"\n        >\n          <span\n            data-role=\"missing-schedule-execution-date\"\n            *ngIf=\"hostRef.scheduleForm.get('startDate').errors?.required\"\n            i18n=\"\n              Execution date required error text|Error required message for\n              Execution date input field@@bb-schedule.error.required.startDate\"\n          >\n            Execution date is required\n          </span>\n\n          <span\n            data-role=\"past-date-schedule-execution-date\"\n            *ngIf=\"hostRef.scheduleForm.get('startDate').errors?.pastDate\"\n            i18n=\"\n              Execution date past date error text |Error past date message for\n              Execution date input field@@bb-schedule.error.pastDate.startDate\"\n          >\n            Execution date cannot be in the past\n          </span>\n\n          <span\n            data-role=\"invalid-date-schedule-execution-date\"\n            *ngIf=\"\n              hostRef.scheduleForm.get('startDate').errors?.invalidDateFormat\n            \"\n            i18n=\"\n              Execution date invalid date error text |Error invalid date format\n              message for Execution date input\n              field@@bb-schedule.error.invalidDateFormat\"\n          >\n            Invalid date format\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div class=\"row bb-block bb-block--md\">\n      <div class=\"col-md-7\">\n        <label\n          class=\"bb-text-bold\"\n          [attr.for]=\"frequencySelector.id\"\n          i18n=\"Frequency|Label for frequency@@bb-schedule-ui.frequency.label\"\n        >\n          Frequency\n        </label>\n\n        <bb-dropdown-single-select-ui\n          #frequencySelector\n          displayAttributePath=\"value\"\n          formControlName=\"frequency\"\n          data-role=\"frequency-selector\"\n        >\n          <bb-dropdown-single-select-option-ui\n            label=\"Once\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[0]\"\n            i18n-label=\"\n              Once|Once frequency type Label@@bb-schedule-ui.frequency.Once\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Daily\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[1]\"\n            i18n-label=\"\n              Daily|Daily frequency type Label@@bb-schedule-ui.frequency.Daily\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Weekly\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[2]\"\n            i18n-label=\"\n              Weekly|Weekly frequency type\n              Label@@bb-schedule-ui.frequency.Weekly\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Biweekly\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[3]\"\n            i18n-label=\"\n              Biweekly|Biweekly frequency type\n              Label@@bb-schedule-ui.frequency.Biweekly\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Monthly\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[4]\"\n            i18n-label=\"\n              Monthly|Monthly frequency type\n              Label@@bb-schedule-ui.frequency.Monthly\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Quarterly\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[5]\"\n            i18n-label=\"\n              Quarterly|Quarterly frequency type\n              Label@@bb-schedule-ui.frequency.Quarterly\"\n          ></bb-dropdown-single-select-option-ui>\n\n          <bb-dropdown-single-select-option-ui\n            label=\"Annually\"\n            data-role=\"frequency\"\n            [value]=\"hostRef.frequencies[6]\"\n            i18n-label=\"\n              Annually|Annually frequency type\n              Label@@bb-schedule-ui.frequency.Annually\"\n          ></bb-dropdown-single-select-option-ui>\n        </bb-dropdown-single-select-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-7\" [hidden]=\"hostRef.isSingleTransfer\">\n        <bb-input-radio-group-ui\n          label=\"End\"\n          data-role=\"radio-group\"\n          formControlName=\"endType\"\n          i18n-label=\"\n            Schedule ending section name|Label for the section containing inputs\n            that determine way of ending of the\n            schedule@@bb-schedule-ui.label.ending\"\n        >\n          <bb-input-radio-ui\n            [value]=\"hostRef.endTypes.never\"\n            [labelTemplate]=\"neverEndingSchedule\"\n          ></bb-input-radio-ui>\n\n          <bb-input-radio-ui\n            [value]=\"hostRef.endTypes.on\"\n            [labelTemplate]=\"onDateSchedule\"\n          ></bb-input-radio-ui>\n\n          <bb-input-radio-ui\n            [value]=\"hostRef.endTypes.after\"\n            [labelTemplate]=\"endingAfterSchedule\"\n          ></bb-input-radio-ui>\n        </bb-input-radio-group-ui>\n\n        <ng-template #neverEndingSchedule>\n          <span\n            class=\"bb-text-default\"\n            data-role=\"ending-never-selector\"\n            i18n=\"\n              Schedule never ends|Label for an option to never end the\n              schedule@@bb-schedule-ui.label.ending.never\"\n          >\n            Never\n          </span>\n        </ng-template>\n\n        <ng-template #onDateSchedule>\n          <div data-role=\"ending-on-selector\">\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\">\n                <span\n                  class=\"bb-text-default\"\n                  i18n=\"\n                    Schedule end date|Label for an option to end the schedule on\n                    a specific date@@bb-schedule-ui.label.ending.on\"\n                >\n                  On date\n                </span>\n              </div>\n\n              <div class=\"bb-stack__item bb-stack__item--fill\">\n                <bb-input-datepicker-ui\n                  [minDate]=\"hostRef.today\"\n                  aria-label=\"End date\"\n                  formControlName=\"endDate\"\n                  data-role=\"ending-end-date\"\n                  i18n-aria-label=\"\n                    Schedule end date date picker label|Aria label for end date\n                    schedule control@@bb-schedule-ui.label.end-date\"\n                  *ngIf=\"\n                    hostRef.scheduleForm.get('endDate').enabled &&\n                    hostRef.scheduleForm.get('endType').value ==\n                      hostRef.endTypes.on\n                  \"\n                ></bb-input-datepicker-ui>\n\n                <bb-input-validation-message-ui\n                  role=\"alert\"\n                  *ngIf=\"hostRef.scheduleForm.get('endDate') as control\"\n                  [showErrors]=\"hostRef.isInvalidControl(control)\"\n                >\n                  <span\n                    *ngIf=\"control.errors?.pastDate\"\n                    i18n=\"\n                      End date past date error text |Error past date message for\n                      End date input field@@bb-schedule.error.pastDate.endDate\"\n                    data-role=\"past-date-ending-end-date\"\n                  >\n                    End date cannot be in the past\n                  </span>\n                  <span\n                    *ngIf=\"control.errors?.required\"\n                    i18n=\"\n                      End date required error text|Error required message for\n                      End date input field@@bb-schedule.error.required.endDate\"\n                    data-role=\"missing-schedule-end-date\"\n                  >\n                    End date is required\n                  </span>\n                  <span\n                    *ngIf=\"control.errors?.invalidDateFormat\"\n                    i18n=\"\n                      End date invalid date error text |Error invalid date\n                      format message for End date input\n                      field@@bb-schedule.invalidDateFormat.endDate\"\n                    data-role=\"invalid-date-schedule-end-date\"\n                  >\n                    Invalid date format\n                  </span>\n                </bb-input-validation-message-ui>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n\n        <ng-template #endingAfterSchedule>\n          <div data-role=\"ending-occurrences-selector\">\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\">\n                <span\n                  class=\"bb-text-default\"\n                  i18n=\"\n                    Schedule number of occurrences|Label for an option to end\n                    the schedule after some number of\n                    occurrences@@bb-schedule-ui.label.ending.after\"\n                >\n                  After\n                </span>\n              </div>\n\n              <div class=\"bb-stack__item bb-stack__item--fill\">\n                <div\n                  class=\"bb-stack\"\n                  *ngIf=\"\n                    hostRef.scheduleForm.get('repeat').enabled &&\n                    hostRef.scheduleForm.get('endType').value ==\n                      hostRef.endTypes.after\n                  \"\n                >\n                  <div class=\"bb-stack__item\">\n                    <bb-input-number-ui\n                      id=\"ending-occurrences\"\n                      formControlName=\"repeat\"\n                      [min]=\"hostRef.minOccurs\"\n                      [max]=\"hostRef.maxOccurs\"\n                      data-role=\"ending-occurrences\"\n                    ></bb-input-number-ui>\n                  </div>\n\n                  <div class=\"bb-stack__item\">\n                    <span\n                      class=\"bb-text-default\"\n                      i18n=\"\n                        Schedule occurrences text|Text to be appended after\n                        schedule end after some number of occurrences\n                        input@@bb-schedule-ui.label.ending.occurrences\"\n                    >\n                      occurrences\n                    </span>\n                  </div>\n                </div>\n\n                <bb-input-validation-message-ui\n                  role=\"alert\"\n                  [showErrors]=\"\n                    hostRef.item.endType === hostRef.endTypes.after &&\n                    hostRef.isInvalidControl(hostRef.scheduleForm.get('repeat'))\n                  \"\n                >\n                  <span\n                    data-role=\"ending-occurrences-too-few\"\n                    *ngIf=\"hostRef.scheduleForm.get('repeat').errors?.min\"\n                    i18n=\"\n                      Repeat less then min error text |Error min message for\n                      repeat input field@@bb-schedule.error.min.repeat\"\n                  >\n                    Value is below the minimum allowed occurrences ({{\n                      hostRef.minOccurs\n                    }})\n                  </span>\n\n                  <span\n                    data-role=\"ending-occurrences-too-many\"\n                    *ngIf=\"hostRef.scheduleForm.get('repeat').errors?.max\"\n                    i18n=\"\n                      Repeat more then max error text |Error max message for\n                      repeat input field@@bb-schedule.error.max.repeat\"\n                  >\n                    Value exceeds the maximum allowed occurrences ({{\n                      hostRef.maxOccurs\n                    }})\n                  </span>\n\n                  <span\n                    data-role=\"missing-ending-occurrences\"\n                    *ngIf=\"hostRef.scheduleForm.get('repeat').errors?.required\"\n                    i18n=\"\n                      Repeat required error text |Error required message for\n                      repeat input field@@bb-schedule.error.required.repeat\"\n                  >\n                    Value is required\n                  </span>\n                </bb-input-validation-message-ui>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-container bbScheduleCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ScheduleComponent,\n  ScheduleCustomizableDirective,\n} from './schedule.component';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { InputNumberModule } from '@backbase/ui-ang/input-number';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nconst uiModules = [\n  InputDatepickerModule,\n  InputValidationMessageModule,\n  DropdownSingleSelectModule,\n  InputNumberModule,\n  InputRadioGroupModule,\n];\n\n@NgModule({\n  declarations: [ScheduleComponent, ScheduleCustomizableDirective],\n  imports: [CommonModule, ReactiveFormsModule, ...uiModules],\n  exports: [ScheduleComponent, ScheduleCustomizableDirective],\n})\nexport class ScheduleModule {}\n","import { Component, Input } from '@angular/core';\nimport { FormSeparatorConfig } from '../../models/types';\n\n@Component({\n  selector: 'bb-separator',\n  templateUrl: './separator.component.html',\n})\nexport class SeparatorComponent {\n  /**\n   * Input for options to be used in separator\n   */\n  @Input() options?: FormSeparatorConfig;\n}\n","<div class=\"bb-separator\" [ngClass]=\"options?.cssClasses\">\n  <hr />\n  <bb-icon-ui\n    *ngIf=\"options?.icon\"\n    [name]=\"options?.icon?.name\"\n    [color]=\"options?.icon?.color || 'dark'\"\n    class=\"bb-separator__icon\"\n  ></bb-icon-ui>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SeparatorComponent } from './separator.component';\nimport { IconModule } from '@backbase/ui-ang/icon';\n\n@NgModule({\n  declarations: [SeparatorComponent],\n  imports: [CommonModule, IconModule],\n  exports: [SeparatorComponent],\n})\nexport class SeparatorModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  PayordStatusBadgeAbbreviationCustomizableDirective,\n  PayordStatusBadgeComponent,\n  PayordStatusBadgeCustomizableDirective,\n  PayordStatusBadgeLabelCustomizableDirective,\n} from './status-badge.component';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\n\nconst customizables = [\n  PayordStatusBadgeCustomizableDirective,\n  PayordStatusBadgeAbbreviationCustomizableDirective,\n  PayordStatusBadgeLabelCustomizableDirective,\n];\n\n@NgModule({\n  imports: [CommonModule, BadgeModule],\n  declarations: [PayordStatusBadgeComponent, ...customizables],\n  exports: [BadgeModule, PayordStatusBadgeComponent, ...customizables],\n})\nexport class PayordStatusBadgeModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableCheckboxComponent } from './table-checkbox.component';\n\n@NgModule({\n  declarations: [TableCheckboxComponent],\n  imports: [CommonModule],\n  exports: [TableCheckboxComponent],\n})\nexport class TableCheckboxModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableHeaderCheckboxComponent } from './table-header-checkbox.component';\n\n@NgModule({\n  declarations: [TableHeaderCheckboxComponent],\n  imports: [CommonModule],\n  exports: [TableHeaderCheckboxComponent],\n})\nexport class TableHeaderCheckboxModule {}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, takeUntil, delay } from 'rxjs/operators';\n\n@Directive({\n  selector: '[bbIban]',\n})\nexport class IbanDirective implements OnInit, OnDestroy {\n  /**\n   * The max length for the IBAN number, mostly 34\n   */\n  @Input() maxLen = 34;\n  private value = '';\n  private readonly editPositionRestorer$ = new Subject<number>();\n  private readonly garbageCollector$ = new Subject<void>();\n  private readonly transformValue = (value: string, max: number) => {\n    if (!value) {\n      return value;\n    }\n    const format = (v: string) => v.replace(/(.{4})/g, '$1 ').trim();\n    const rawResult = value.toUpperCase().replace(/[^a-z0-9]/gi, '');\n    return rawResult.length > max\n      ? format(rawResult.slice(0, max))\n      : format(rawResult);\n  };\n\n  constructor(\n    private readonly el: ElementRef,\n    private readonly ngControl: NgControl,\n    private readonly changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.ngControl || !this.ngControl.control) {\n      return;\n    }\n    const control = this.ngControl.control;\n    const ibanInputEl = this.el.nativeElement.querySelector('input');\n\n    control.valueChanges\n      .pipe(\n        distinctUntilChanged(),\n        filter((value: string) => {\n          const alphaNumericRegex = /^[a-zA-Z0-9 ]{5,}$/; //Only format string with valid iban chars\n          return value !== this.value && alphaNumericRegex.test(value);\n        }),\n        takeUntil(this.garbageCollector$)\n      )\n      .subscribe((value: string) => {\n        let pos: number = ibanInputEl.selectionStart;\n        const transformedValue = this.transformValue(value, this.maxLen);\n        if (\n          value &&\n          value.substring(0, pos) !== transformedValue.substring(0, pos)\n        ) {\n          pos++;\n        }\n        this.changeDetectorRef.detectChanges();\n        control.setValue(transformedValue);\n        control.updateValueAndValidity();\n        this.value = transformedValue;\n        this.changeDetectorRef.detectChanges();\n        this.editPositionRestorer$.next(pos);\n      });\n\n    this.editPositionRestorer$.pipe(delay(1)).subscribe((position: number) => {\n      ibanInputEl.setSelectionRange(position, position);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.editPositionRestorer$.unsubscribe();\n\n    if (this.garbageCollector$) {\n      this.garbageCollector$.next();\n      this.garbageCollector$.complete();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IbanDirective } from './iban.directive';\n\n@NgModule({\n  declarations: [IbanDirective],\n  imports: [CommonModule],\n  exports: [IbanDirective],\n})\nexport class IbanModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccountFormatterPipe } from './account-formatter.pipe';\n\n@NgModule({\n  declarations: [AccountFormatterPipe],\n  imports: [CommonModule],\n  exports: [AccountFormatterPipe],\n})\nexport class AccountFormatterModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'bytes' })\nexport class BytesPipe implements PipeTransform {\n  private readonly units = ['bytes', 'KB', 'MB', 'GB'];\n\n  transform(bytes: number = 0, precision: number = 2): string {\n    if (isNaN(parseFloat(String(bytes))) || !isFinite(bytes)) {\n      return '?';\n    }\n\n    let unit = 0;\n\n    while (bytes >= 1024) {\n      bytes /= 1024;\n      unit++;\n    }\n    const transformedBytes = Number.isInteger(bytes)\n      ? bytes\n      : bytes.toFixed(+precision);\n\n    return `${transformedBytes} ${this.units[unit]}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BytesPipe } from './bytes.pipe';\n\n@NgModule({\n  declarations: [BytesPipe],\n  imports: [CommonModule],\n  exports: [BytesPipe],\n})\nexport class BytesModule {}\n","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({ name: 'highlight' })\nexport class BBHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    pattern = pattern\n      .split(' ')\n      .filter((t) => t.length > 0)\n      .join('|');\n    const regex = new RegExp(pattern, 'gi');\n\n    return search\n      ? text.replace(\n          regex,\n          (match) => `<b class=\"highlight-pipe-content\">${match}</b>`\n        )\n      : text;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BBHighlightPipe } from './highlight.pipe';\n\n@NgModule({\n  declarations: [BBHighlightPipe],\n  imports: [CommonModule],\n  exports: [BBHighlightPipe],\n})\nexport class BBHighlightModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { getRelativeDate, getDateOnly } from '../../helpers/date-helpers';\n\nexport enum RelativeDate {\n  Yesterday = 'Yesterday',\n  Today = 'Today',\n  Tomorrow = 'Tomorrow',\n}\n\n@Pipe({ name: 'relativeDate' })\nexport class RelativeDatePipe implements PipeTransform {\n  readonly getRelativeDateHelper = getRelativeDate;\n\n  constructor(private readonly datePipe: DatePipe) {}\n\n  transform(value: string, dateFormat?: string) {\n    let result;\n    const _value = getDateOnly(new Date(value));\n\n    const yesterday = this.getRelativeDateHelper(-1);\n    const today = this.getRelativeDateHelper();\n    const tomorrow = this.getRelativeDateHelper(1);\n\n    switch (_value) {\n      case yesterday:\n        result = RelativeDate.Yesterday;\n        break;\n      case today:\n        result = RelativeDate.Today;\n        break;\n      case tomorrow:\n        result = RelativeDate.Tomorrow;\n        break;\n      default:\n        result = this.datePipe.transform(value, dateFormat);\n    }\n\n    return result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RelativeDatePipe } from './relative-date.pipe';\n\n@NgModule({\n  declarations: [RelativeDatePipe],\n  imports: [CommonModule],\n  exports: [RelativeDatePipe],\n})\nexport class RelativeDateModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExportPdfDirective } from './export-pdf.directive';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@NgModule({\n  declarations: [ExportPdfDirective],\n  imports: [CommonModule],\n  exports: [ExportPdfDirective],\n  providers: [NotificationService],\n})\nexport class ExportPdfModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PaymentsSrSearchResultInfoModule } from './components/sr-search-result-info/sr-search-result-info.module';\nimport { AddressDetailsComponent } from './components/address-details/address-details.component';\nimport { FullAddressComponent } from './components/full-address/full-address.component';\nimport { CurrencySelectorComponent } from './components/currency-selector/currency-selector.component';\nimport { CurrencyAmountSelectorComponent } from './components/currency-amount-selector/currency-amount-selector.component';\nimport { PayordDynamicLabelComponent } from './components/dynamic-label/dynamic-label.component';\nimport { PaymentDebitorDetailsCardComponent } from './components/debitor-details-card/debitor-details-card.component';\nimport { PaymentCreditorDetailsCardComponent } from './components/creditor-details-card/creditor-details-card.component';\nimport { PayordScheduleDetailsComponent } from './components/schedule-details/schedule-details.component';\nimport { PayordCounterpartyDetailsComponent } from './components/counterparty-details/counterparty-details.component';\nimport { PayordStatusComponent } from './components/status-card/status-card.component';\nimport { PayordAmountDetailsComponent } from './components/amount-details/amount-details.component';\nimport { FlagIconComponent } from './components/flag-icon/bb-flag-icon';\nimport { CountryNameComponent } from './components/country-name/country-name.component';\nimport { CountrySelectorComponent } from './components/country-selector/country-selector.component';\nimport { SelectCountryDropdownComponent } from './components/select-country-dropdown/select-country-dropdown.component';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PaymentTemplateComponent } from './components/create-payment-template-modal/create-template-form-modal.component';\nimport { BreachLimitDetailsModalComponent } from './components/breach-limit-details-modal/breach-limit-details.component';\nimport { PayordCardMenuComponent } from './components/card-menu/card-menu.component';\nimport { SelectPurposeDropdownComponent } from './components/select-purpose-dropdown/select-purpose-dropdown.component';\nimport { RoutableModalComponent } from './components/routable-modal/bb-routable-modal.component';\nimport { HorizontalListSelectorComponent } from './components/horizontal-list-selector/horizontal-list-selector.component';\nimport { PaymentTemplateSelectorComponent } from './components/payment-template-selector/payment-template-selector.component';\nimport { BeneficiarySelectorUIModule } from './components/beneficiary-selector-ui/beneficiary-selector-ui.module';\nimport { PurposeOfPaymentDetailComponent } from './components/purpose-of-payment-detail/purpose-of-payment-detail.component';\nimport { PaymentsTableComponent } from './components/bb-table-component/bb-table-payments.component';\nimport { PaymentsListComponent } from './components/bb-list-payments-component/bb-list-payments.component';\nimport { ScheduleLabelModule } from './components/bb-schedule-label-ui/schedule-label.module';\nimport { ConfirmationDialogModule } from './components/confirmation-dialog/confirmation-dialog.module';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InfiniteScrollModule } from '@backbase/ui-ang/infinite-scroll';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { AvatarModule } from '@backbase/ui-ang/avatar';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { ProductSelectorModule } from '@backbase/ui-ang/product-selector';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { HighlightModule } from '@backbase/ui-ang/highlight';\nimport { PaginationModule } from '@backbase/ui-ang/pagination';\nimport { TableModule } from '@backbase/ui-ang/table';\nimport { PaymentsControlsModule } from './components/payments-controls/payments-controls.module';\nimport { PaymentsFilterModule } from './components/payments-filter/payments-filter.module';\nimport { PaymentsSearchModule } from './components/payments-search/payments-search.module';\nimport { ScheduleModule } from './components/schedule/schedule.module';\nimport { SeparatorModule } from './components/separator/separator.module';\nimport { PayordStatusBadgeModule } from './components/status-badge/status-badge.module';\nimport { TableCheckboxModule } from './components/table-checkbox/table-checkbox.module';\nimport { TableHeaderCheckboxModule } from './components/table-header-checkbox/table-header-checkbox.module';\nimport { IbanModule } from './directives/iban.module';\nimport { AccountFormatterModule } from './pipes/account-formatter/account-formatter.module';\nimport { BytesModule } from './pipes/bytes-pipe/bytes.module';\nimport { BBHighlightModule } from './pipes/highlight/highlight.module';\nimport { RelativeDateModule } from './pipes/relative-date/relative-date.module';\nimport { ExportPdfModule } from './directives/export-pdf/export-pdf.module';\n\nconst components = [\n  AddressDetailsComponent,\n  FullAddressComponent,\n  PaymentDebitorDetailsCardComponent,\n  PaymentCreditorDetailsCardComponent,\n  PayordCounterpartyDetailsComponent,\n  PayordScheduleDetailsComponent,\n  PayordStatusComponent,\n  PayordAmountDetailsComponent,\n  PayordDynamicLabelComponent,\n  FlagIconComponent,\n  CountryNameComponent,\n  CountrySelectorComponent,\n  PayordDynamicLabelComponent,\n  FlagIconComponent,\n  CountryNameComponent,\n  SelectCountryDropdownComponent,\n  CurrencySelectorComponent,\n  CurrencyAmountSelectorComponent,\n  PaymentTemplateComponent,\n  BreachLimitDetailsModalComponent,\n  PayordCardMenuComponent,\n  SelectPurposeDropdownComponent,\n  RoutableModalComponent,\n  HorizontalListSelectorComponent,\n  PaymentTemplateSelectorComponent,\n  PurposeOfPaymentDetailComponent,\n  PaymentsTableComponent,\n  PaymentsListComponent,\n];\n\nconst modules = [\n  InputTextModule,\n  ButtonModule,\n  IconModule,\n  DropdownMenuModule,\n  DropdownSingleSelectModule,\n  InfiniteScrollModule,\n  InputValidationMessageModule,\n  EmptyStateModule,\n  SearchBoxModule,\n  NgbDropdownModule,\n  AvatarModule,\n  AmountModule,\n  SearchBoxModule,\n  ProductSelectorModule,\n  KeyboardClickModule,\n  EmptyStateModule,\n  ModalModule,\n  HeaderModule,\n  LoadButtonModule,\n  LoadingIndicatorModule,\n  EllipsisModule,\n  TooltipModule,\n  PaginationModule,\n  TableModule,\n  HighlightModule,\n  BeneficiarySelectorUIModule,\n  PaymentsSrSearchResultInfoModule,\n  ScheduleLabelModule,\n  ConfirmationDialogModule,\n  PaymentsControlsModule,\n  PaymentsFilterModule,\n  PaymentsSearchModule,\n  ScheduleModule,\n  SeparatorModule,\n  PayordStatusBadgeModule,\n  TableHeaderCheckboxModule,\n  TableCheckboxModule,\n  IbanModule,\n  AccountFormatterModule,\n  BytesModule,\n  BBHighlightModule,\n  RelativeDateModule,\n  ExportPdfModule,\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, ...modules],\n  declarations: [...components],\n  exports: [...components, ...modules],\n})\nexport class PaymentOrdersUiModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PaymentState } from '../models';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { PaymentDetails } from '../../configs/models/form-items.model';\n\n@Injectable()\nexport class StateService {\n  private readonly formSubject = new BehaviorSubject<FormGroup>(\n    new FormGroup({})\n  );\n  private readonly paymentStateSubject = new BehaviorSubject<PaymentState>(\n    PaymentState.INITIAL\n  );\n  private canApprovePayment = false;\n  private readonly paymentTemplateSubject = new BehaviorSubject<\n    PaymentTemplate | undefined\n  >(undefined);\n  private readonly paymentEditSubject = new BehaviorSubject<\n    IdentifiedPaymentOrder | undefined\n  >(undefined);\n  private initialEditFormValueItem?: PaymentDetails;\n\n  public get form$(): Observable<FormGroup> {\n    return this.formSubject.asObservable();\n  }\n\n  public get formInstance() {\n    return this.formSubject.value;\n  }\n\n  public get paymentState$(): Observable<PaymentState> {\n    return this.paymentStateSubject.asObservable();\n  }\n\n  public get currentState(): PaymentState {\n    return this.paymentStateSubject.value;\n  }\n\n  public get canApprove(): boolean {\n    return this.canApprovePayment;\n  }\n\n  public set canApprove(canApprovePayment: boolean) {\n    this.canApprovePayment = canApprovePayment;\n  }\n\n  public get paymentTemplateState$(): Observable<PaymentTemplate | undefined> {\n    return this.paymentTemplateSubject.asObservable();\n  }\n\n  public get paymentEditState$(): Observable<\n    IdentifiedPaymentOrder | undefined\n  > {\n    return this.paymentEditSubject.asObservable();\n  }\n\n  public get initialEditFormValue(): PaymentDetails | undefined {\n    return this.initialEditFormValueItem;\n  }\n\n  public set initialEditFormValue(formValue: PaymentDetails | undefined) {\n    this.initialEditFormValueItem = formValue;\n  }\n\n  saveForm(form: FormGroup) {\n    this.formSubject.next(form);\n  }\n\n  resetForm() {\n    this.formSubject.next(new FormGroup({}));\n  }\n\n  setPaymentState(paymentState: PaymentState) {\n    this.paymentStateSubject.next(paymentState);\n  }\n\n  setPaymentTemplate(template: PaymentTemplate | undefined) {\n    this.paymentTemplateSubject.next(template);\n  }\n\n  setEditPayment(payment: IdentifiedPaymentOrder | undefined) {\n    this.paymentEditSubject.next(payment);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  ErrorItem,\n  IdentifiedBatchPayment,\n} from '@backbase/data-ang/payment-batch';\nimport { StepperConfig } from '../../configs/models/form-items.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ManualBatchState, StepErrors } from '../models';\nimport {\n  BatchOrderFromTemplatePostResponse,\n  BatchTemplate,\n} from '@backbase/data-ang/payment-batch-template';\n\n@Injectable()\nexport class BatchOrderStateService {\n  private readonly batchOrderIdSubject = new BehaviorSubject<string>('');\n  private readonly formSubject = new BehaviorSubject<FormGroup>(\n    new FormGroup({})\n  );\n  private readonly stateSubject = new BehaviorSubject<ManualBatchState>(\n    ManualBatchState.INITIAL\n  );\n  private readonly stepSubject = new BehaviorSubject<StepperConfig | undefined>(\n    undefined\n  );\n  private readonly errorsSubject = new BehaviorSubject<StepErrors>({});\n  private readonly selectedBatchTemplateSubject = new BehaviorSubject<\n    BatchTemplate | undefined\n  >(undefined);\n  private readonly bacthOrderFromTemplateSubject = new BehaviorSubject<\n    BatchOrderFromTemplatePostResponse | undefined\n  >(undefined);\n  private readonly bacthPaymentsFromTemplateSubject = new BehaviorSubject<\n    Array<IdentifiedBatchPayment> | undefined\n  >(undefined);\n\n  public get batchOrderId$(): Observable<string> {\n    return this.batchOrderIdSubject.asObservable();\n  }\n\n  public get batchOrderId(): string {\n    return this.batchOrderIdSubject.value;\n  }\n\n  public set batchOrderId(id: string) {\n    this.batchOrderIdSubject.next(id);\n  }\n\n  public get form$(): Observable<FormGroup> {\n    return this.formSubject.asObservable();\n  }\n\n  public get formInstance() {\n    return this.formSubject.value;\n  }\n\n  public get state$(): Observable<ManualBatchState> {\n    return this.stateSubject.asObservable();\n  }\n\n  public get step$(): Observable<StepperConfig | undefined> {\n    return this.stepSubject.asObservable();\n  }\n\n  public get currentState(): ManualBatchState {\n    return this.stateSubject.value;\n  }\n\n  public get currentStep(): StepperConfig | undefined {\n    return this.stepSubject.value;\n  }\n\n  public get errors$(): Observable<StepErrors> {\n    return this.errorsSubject.asObservable();\n  }\n\n  public get selectedBatchTemplate$(): Observable<BatchTemplate | undefined> {\n    return this.selectedBatchTemplateSubject.asObservable();\n  }\n\n  public get selectedBatchTemplate(): BatchTemplate | undefined {\n    return this.selectedBatchTemplateSubject.value;\n  }\n\n  public get batchOrderFromTemplate$(): Observable<\n    BatchOrderFromTemplatePostResponse | undefined\n  > {\n    return this.bacthOrderFromTemplateSubject.asObservable();\n  }\n\n  public get batchPaymentsFromTemplate$(): Observable<\n    Array<IdentifiedBatchPayment> | undefined\n  > {\n    return this.bacthPaymentsFromTemplateSubject.asObservable();\n  }\n\n  saveForm(form: FormGroup) {\n    this.formSubject.next(form);\n  }\n\n  resetForm() {\n    this.formSubject.next(new FormGroup({}));\n  }\n\n  setState(paymentState: ManualBatchState) {\n    this.stateSubject.next(paymentState);\n  }\n\n  setStep(step: StepperConfig) {\n    this.stepSubject.next(step);\n  }\n\n  resetErrors() {\n    this.errorsSubject.next({});\n  }\n\n  addError(stepName: string, error: ErrorItem) {\n    const errors = this.errorsSubject.value;\n    const currentStepErrors = errors[stepName] || [];\n    this.errorsSubject.next({\n      ...errors,\n      [stepName]: [...currentStepErrors, error],\n    });\n  }\n\n  removeErrorAt(stepName: string, index: number) {\n    const errors = this.errorsSubject.value;\n    const currentStepErrors = errors[stepName] || [];\n    if (currentStepErrors.length && index < currentStepErrors.length) {\n      currentStepErrors.splice(index, 1);\n      this.errorsSubject.next({\n        ...errors,\n        [stepName]: [...currentStepErrors],\n      });\n    }\n  }\n\n  selectBatchTemplate(batchTemplate: BatchTemplate) {\n    this.selectedBatchTemplateSubject.next(batchTemplate);\n  }\n\n  unselectBatchTemplate() {\n    this.selectedBatchTemplateSubject.next(undefined);\n  }\n\n  loadBatchOrderFromTemplate(batchOrder: BatchOrderFromTemplatePostResponse) {\n    this.bacthOrderFromTemplateSubject.next(batchOrder);\n  }\n\n  loadBatchPaymentsFromTemplate(batchPayments: Array<IdentifiedBatchPayment>) {\n    this.bacthPaymentsFromTemplateSubject.next(batchPayments);\n  }\n\n  removeBatchOrderFromTemplate() {\n    this.bacthOrderFromTemplateSubject.next(undefined);\n  }\n\n  removeBatchPaymentsFromTemplate() {\n    this.bacthPaymentsFromTemplateSubject.next(undefined);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RouterService } from '@backbase/foundation-ang/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Routes } from '../models';\n\n@Injectable()\nexport class NavigationService {\n  private readonly emitAfterSuccess = new Subject<void>();\n  readonly afterSuccessEmitted$: Observable<void> =\n    this.emitAfterSuccess.asObservable();\n\n  constructor(private readonly routerService: RouterService) {}\n\n  form(): Promise<boolean> {\n    return this.routerService.navigate([Routes.FORM], {\n      queryParamsHandling: 'merge',\n    });\n  }\n\n  review(): Promise<boolean> {\n    return this.routerService.navigate([Routes.REVIEW], {\n      queryParamsHandling: 'merge',\n    });\n  }\n\n  afterSuccess() {\n    this.emitAfterSuccess.next();\n  }\n}\n","import { DetailedExternalAccount } from '@backbase/data-ang/payment-order-a2a';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProductKinds } from '../../configs/models/form-items.model';\nimport { ArrangementItem, ArrangementList, OutputItem } from '../models/types';\n\nexport function arrangementItemFromService(\n  record: ProductSummaryItem\n): ArrangementItem {\n  return {\n    id: record.id,\n    name: record.displayName || record.bankAlias || record.name || '',\n    alias: (record.userPreferences || {}).alias || record.bankAlias,\n    balance: record.bookedBalance || record.availableBalance,\n    bookedBalance: record.bookedBalance,\n    availableBalance: record.availableBalance,\n    creditLimit: record.creditLimit,\n    currency: record.currency || '',\n    bankBranchCode: record.bankBranchCode || '',\n    BIC: record.BIC,\n    IBAN: record.IBAN || record.number,\n    BBAN: record.BBAN,\n    externalTransferAllowed: record.externalTransferAllowed,\n    urgentTransferAllowed: record.urgentTransferAllowed,\n    additions: record.additions,\n    productKindName: record.productKindName,\n    isArrangement: true,\n    defaultRecord: record,\n  };\n}\n\nexport function arrangementListFromService(\n  response: Array<ProductSummaryItem>,\n  isLoadMore = false,\n  totalCount?: number\n): ArrangementList {\n  return {\n    count: totalCount || response.length,\n    items: response.map(arrangementItemFromService),\n    isLoadMore,\n  };\n}\n\nexport const accMap =\n  (scheme: 'BBAN' | 'IBAN' = 'BBAN') =>\n  (source: Observable<ArrangementList>): Observable<Array<OutputItem>> =>\n    source.pipe(\n      map((arrangements) => mapArrangementList(arrangements, scheme))\n    );\n\nexport const mapArrangementList = (\n  arrangements: ArrangementList,\n  scheme: 'BBAN' | 'IBAN' = 'BBAN'\n) =>\n  arrangements.items.map((arrangement) => ({\n    id: arrangement.id,\n    name: arrangement.name,\n    displayName: arrangement.displayName,\n    alias: arrangement.alias,\n    balance: arrangement.bookedBalance,\n    bookedBalance: arrangement.bookedBalance,\n    availableBalance: arrangement.availableBalance,\n    creditLimit: arrangement.creditLimit,\n    accountNumber:\n      arrangement[scheme] || arrangement.BBAN || arrangement.IBAN || '',\n\n    number: arrangement[scheme] || arrangement.BBAN || arrangement.IBAN || '',\n    bankBranchCode: arrangement.bankBranchCode,\n    BIC: arrangement.BIC,\n    accountType: scheme,\n    currency: arrangement.currency,\n    schemeName: arrangement.IBAN ? 'IBAN' : 'BBAN',\n    externalTransferAllowed: arrangement.externalTransferAllowed,\n    urgentTransferAllowed: arrangement.urgentTransferAllowed,\n    additions: arrangement.additions || {},\n    productKindName: arrangement.productKindName,\n    isArrangement: true,\n    defaultRecord: arrangement.defaultRecord,\n  }));\n\n/**\n * @deprecated\n * This will be removed in the next major version\n * Please use `mapArrangementList` instead\n */\nexport const mapArrangementToCreditAccount = mapArrangementList;\n\nexport const mapConnectedAccounts = (\n  account: DetailedExternalAccount\n): OutputItem => ({\n  id: account.externalAccountId,\n  name: account.accountNickName || account.bankName,\n  accountNumber: account.accountNumber,\n  productKindName: ProductKinds.connectedAccounts,\n  accountType: account.accountType,\n});\n","import { HttpResponse } from '@angular/common/http';\n\nexport const fromResponse = <T>(response: HttpResponse<T>): T => {\n  if (response.body === null) {\n    throw new Error('Response body not set');\n  }\n\n  if (response.status < 200 || response.status > 299) {\n    throw new Error(`Server error ${response.status}`);\n  }\n\n  return response.body;\n};\n","import { HttpResponse } from '@angular/common/http';\n\nimport { ContactsPostRequestBody } from '@backbase/data-ang/contact-manager';\nimport {\n  BankDetails,\n  CounterPartyDetails,\n} from '../../configs/models/form-items.model';\nimport { fromResponse } from '../helpers/http-helpers';\nimport { stripSpaces } from '../helpers/type-helpers';\nimport { SchemeNames } from '@backbase/data-ang/payment-order';\nimport { ContactItem, ContactList } from '../models/types';\n\nexport function contactItemFromService(contact: ContactItem) {\n  return {\n    name: contact.name,\n    addressLine1: contact.addressLine1,\n    addressLine2: contact.addressLine2,\n    streetName: contact.streetName,\n    town: contact.town,\n    postCode: contact.postCode,\n    countrySubDivision: contact.countrySubDivision,\n    country: contact.country,\n    accounts: contact.accounts.map((account) => ({\n      ...account,\n      accountNumber: account.accountNumber || account.IBAN || '',\n    })),\n    id: contact.id,\n  };\n}\n\nexport function mapContactAccounts(contact: ContactItem) {\n  return contact.accounts.map((account) => ({\n    name: contact.name,\n    ...(contact.accounts.length > 1 ? { accountName: account.name } : null),\n    addressLine1: contact.addressLine1,\n    addressLine2: contact.addressLine2,\n    streetName: contact.streetName,\n    town: contact.town,\n    postCode: contact.postCode,\n    countrySubDivision: contact.countrySubDivision,\n    country: contact.country,\n    accounts: [\n      {\n        ...account,\n        accountNumber: account.accountNumber || account.IBAN || '',\n        email: account.email || contact.emailId,\n        phoneNumber: account.phoneNumber || contact.phoneNumber,\n      },\n    ],\n    id: contact.id,\n  }));\n}\n\nexport function contactListFromService(\n  response: HttpResponse<ContactItem[]>,\n  isLoadMore = false\n): ContactList {\n  const responseValue = fromResponse(response);\n  const items = responseValue.reduce(\n    (acc: ContactItem[], contact: ContactItem) => {\n      acc.push(...mapContactAccounts(contact));\n      return acc;\n    },\n    []\n  );\n  return {\n    items,\n    itemsCount: responseValue.length,\n    count: parseInt(response.headers.get('x-total-count') as string, 10),\n    isLoadMore,\n  };\n}\n\nexport function contactItemToService(\n  counterparty: CounterPartyDetails\n): ContactsPostRequestBody {\n  const {\n    name,\n    accountNumber,\n    schemeName,\n    creditorBank = {},\n    postalAddress = {},\n  } = counterparty;\n  let schemeValue;\n  switch (schemeName) {\n    case SchemeNames.EMAIL:\n      schemeValue = { email: stripSpaces(accountNumber) };\n      break;\n    case SchemeNames.MOBILE:\n      schemeValue = { phoneNumber: stripSpaces(accountNumber) };\n      break;\n    case SchemeNames.IBAN:\n      schemeValue = { IBAN: stripSpaces(accountNumber) };\n      break;\n    default:\n      schemeValue = { accountNumber: stripSpaces(accountNumber) };\n  }\n\n  return {\n    name,\n    addressLine1: postalAddress.addressLine1,\n    addressLine2: postalAddress.addressLine2,\n    streetName: postalAddress.streetName,\n    town: postalAddress.town,\n    postCode: postalAddress.postCode,\n    countrySubDivision: postalAddress.countrySubDivision,\n    country: postalAddress.country,\n    accounts: [\n      {\n        ...getBankDetails(creditorBank),\n        ...schemeValue,\n      },\n    ],\n  };\n}\n\nexport function getBankDetails({\n  bankBranchCode: bankCode,\n  bic: BIC,\n  bankName,\n  postalAddress = {},\n}: BankDetails) {\n  return {\n    bankCode,\n    BIC,\n    bankName,\n    bankAddressLine1: postalAddress.addressLine1,\n    bankAddressLine2: postalAddress.addressLine2,\n    bankStreetName: postalAddress.streetName,\n    bankPostCode: postalAddress.postCode,\n    bankTown: postalAddress.town,\n    bankCountrySubDivision: postalAddress.countrySubDivision,\n    bankCountry: postalAddress.country,\n  };\n}\n","import {\n  Schedule,\n  PaymentOrdersValidatePost,\n  SchemeNames,\n  PurposeOfPaymentInfo,\n  IdentifiedPaymentOrder,\n} from '@backbase/data-ang/payment-order';\n\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { PaymentTemplatesPostRequest } from '@backbase/data-ang/payment-template';\nimport {\n  InitiatePaymentOptions,\n  PaymentDetails,\n  PaymentFormFieldConfig,\n  BaseObject,\n} from '../../configs/models/form-items.model';\nimport {\n  CounterPartyFields,\n  HiddenFields,\n  InitiatorFields,\n  PaymentBaseFields,\n  PaymentOptionFields,\n  PaymentTemplateFields,\n  RemittanceInfoFields,\n  ScheduleFields,\n} from '../../configs/models/form-item-names.model';\nimport { TemplateParams } from '../models';\nimport { getCounterpartySchemeName } from '../helpers/payment-config-helpers';\nimport {\n  endTypes,\n  ScheduleItem,\n} from '../components/schedule/schedule.component';\nimport { datePart, scheduleOn } from '../helpers/date-helpers';\nimport { isObjectTruthy, stripSpaces } from '../helpers/type-helpers';\n\nconst normalizePaymentSchedule = (scheduleItem: ScheduleItem): Schedule => {\n  const {\n    frequency,\n    endDate,\n    startDate = '',\n    repeat,\n    endType,\n    every,\n  } = scheduleItem || {};\n  const freq = frequency?.value || frequency;\n  return {\n    transferFrequency: freq as Schedule['transferFrequency'],\n    every: (every || '1') as Schedule['every'],\n    on: scheduleOn(freq as string, new Date(startDate)),\n    startDate: datePart(startDate),\n    ...(endType === 'on' && endDate && { endDate: datePart(endDate) }),\n    ...(endType === 'after' && repeat && { repeat }),\n  };\n};\n\n//nosonar\nexport const toPostRequest = (\n  paymentItem: PaymentDetails\n): PaymentOrdersValidatePost => {\n  if (\n    paymentItem[PaymentBaseFields.counterparty][CounterPartyFields.role] ===\n    'DEBTOR'\n  ) {\n    paymentItem = switchPaymentParties(paymentItem);\n  }\n\n  const {\n    [PaymentBaseFields.counterparty]: {\n      [CounterPartyFields.standardEntryClass]: entryClass,\n      [CounterPartyFields.creditorBank]: creditorBankDetails,\n      [CounterPartyFields.bankName]: bankNameValue,\n      [CounterPartyFields.correspondentBank]: correspondentBankDetails,\n      [CounterPartyFields.intermediaryBank]: intermediaryBankDetails,\n      [CounterPartyFields.recipientId]: recipientId,\n      [CounterPartyFields.accountType]: accountType,\n      [CounterPartyFields.accountNumber]: accountNumber,\n      [CounterPartyFields.name]: counterpartyNameValue,\n      [CounterPartyFields.id]: counterpartyId,\n      [CounterPartyFields.postalAddress]: postalAddress,\n      [CounterPartyFields.messageToBank]: messageToBank,\n      [CounterPartyFields.targetCurrency]: targetCurrency,\n      [CounterPartyFields.remittanceInformation]: remittanceInfo,\n      [CounterPartyFields.endToEndIdentification]: endToEndIdentification,\n      [CounterPartyFields.mandateIdentifier]: mandateIdentifier,\n      [CounterPartyFields.role]: role,\n      [CounterPartyFields.selectedContact]: selectedContact,\n      [CounterPartyFields.additions]: creditorAdditions,\n      [CounterPartyFields.counterpartyAccountAdditions]:\n        counterpartyAccountAdditions,\n    },\n    [PaymentBaseFields.initiator]: debitorAccount,\n    [PaymentBaseFields.remittanceInfo]: {\n      [RemittanceInfoFields.urgent]: urgent,\n      [RemittanceInfoFields.amountCurrencyGroup]: {\n        amount: amountValue,\n        currency,\n      },\n      [RemittanceInfoFields.paymentReference]: paymentReference,\n      [RemittanceInfoFields.purposeOfPayment]: purposeOfPayment,\n      [RemittanceInfoFields.description]: description,\n    },\n    [PaymentBaseFields.schedule]: paymentSchedule,\n    paymentType,\n    approved,\n    chargeBearer,\n    transferFee,\n    [PaymentBaseFields.additions]: additions,\n  } = paymentItem;\n  const scheduleItem: Schedule = normalizePaymentSchedule(paymentSchedule);\n\n  const {\n    [CounterPartyFields.bankBranchCode]: bankBranchCode,\n    [CounterPartyFields.bic]: bankBic,\n    [CounterPartyFields.postalAddress]: bankAddress,\n    [CounterPartyFields.bankName]: creditorBankName,\n    [CounterPartyFields.additions]: creditorBankAdditions,\n  } = creditorBankDetails || ({} as any);\n\n  const bankName = bankNameValue || creditorBankName;\n  const transferFeeValue = transferFee || {};\n  const {\n    [CounterPartyFields.bankBranchCode]: correspondentBankBranchCode,\n    [CounterPartyFields.bic]: correspondentBankBic,\n    [CounterPartyFields.postalAddress]: correspondentBankAddress,\n    [CounterPartyFields.bankName]: correspondentBankName,\n    [CounterPartyFields.additions]: correspondentBankAdditions,\n  } = correspondentBankDetails || ({} as any);\n\n  const counterpartyBank = {\n    ...(bankBranchCode ? { bankBranchCode } : null),\n    ...(bankBic ? { bic: bankBic } : null),\n    ...(isObjectTruthy(bankAddress) ? { postalAddress: bankAddress } : null),\n    ...(bankName ? { name: bankName } : null),\n    ...(isObjectTruthy(creditorBankAdditions)\n      ? { additions: creditorBankAdditions }\n      : null),\n  };\n\n  const {\n    [CounterPartyFields.bankBranchCode]: intermediaryBankBranchCode,\n    [CounterPartyFields.bic]: intermediaryBankBic,\n    [CounterPartyFields.postalAddress]: intermediaryBankAddress,\n    [CounterPartyFields.bankName]: intermediaryBankName,\n    [CounterPartyFields.additions]: intermediaryBankAdditions,\n  } = intermediaryBankDetails || ({} as any);\n\n  const correspondentBank = {\n    ...(correspondentBankBranchCode\n      ? { bankBranchCode: correspondentBankBranchCode }\n      : null),\n    ...(correspondentBankBic ? { bic: correspondentBankBic } : null),\n    ...(isObjectTruthy(correspondentBankAddress)\n      ? { postalAddress: correspondentBankAddress }\n      : null),\n    ...(correspondentBankName ? { name: correspondentBankName } : null),\n    ...(isObjectTruthy(correspondentBankAdditions)\n      ? { additions: correspondentBankAdditions }\n      : null),\n  };\n\n  const intermediaryBank = {\n    ...(intermediaryBankBranchCode\n      ? { bankBranchCode: intermediaryBankBranchCode }\n      : null),\n    ...(intermediaryBankBic ? { bic: intermediaryBankBic } : null),\n    ...(isObjectTruthy(intermediaryBankAddress)\n      ? { postalAddress: intermediaryBankAddress }\n      : null),\n    ...(intermediaryBankName ? { name: intermediaryBankName } : null),\n    ...(isObjectTruthy(intermediaryBankAdditions)\n      ? { additions: intermediaryBankAdditions }\n      : null),\n  };\n\n  const remittanceInformation = remittanceInfo || description;\n\n  const scheduledPayment =\n    scheduleItem && scheduleItem.transferFrequency !== 'ONCE'\n      ? { paymentMode: 'RECURRING', schedule: { schedule: scheduleItem } }\n      : { paymentMode: 'SINGLE', schedule: {} };\n\n  const purposeType = paymentItem.inputFormFromSettings?.purposesOfPayment\n    ?.length\n    ? 'code'\n    : 'freeText';\n  const creditorScheme = getCounterpartySchemeName(paymentItem);\n\n  return {\n    paymentType,\n    ...(approved ? { approved } : {}),\n    originatorAccount: {\n      identification: {\n        identification: debitorAccount.id,\n        schemeName: 'ID',\n      },\n      name: debitorAccount.name,\n      ...(debitorAccount.additions\n        ? { additions: debitorAccount.additions }\n        : {}),\n    },\n    requestedExecutionDate: datePart(paymentSchedule?.startDate),\n    paymentMode:\n      scheduledPayment.paymentMode as PaymentOrdersValidatePost['paymentMode'],\n    ...(entryClass ? { entryClass } : {}),\n    instructionPriority: urgent ? 'HIGH' : 'NORM',\n    ...scheduledPayment.schedule,\n    transferTransactionInformation: {\n      instructedAmount: {\n        amount: amountValue,\n        currencyCode: currency,\n      },\n      counterparty: {\n        name: counterpartyNameValue,\n        ...(recipientId ? { recipientId } : {}),\n        ...(isObjectTruthy(postalAddress) ? { postalAddress } : {}),\n        ...(role ? { role } : {}),\n        ...(isObjectTruthy(creditorAdditions)\n          ? { additions: creditorAdditions }\n          : {}),\n        ...(paymentItem.isDebitPayment ? { role: 'DEBTOR' } : {}),\n      },\n      counterpartyAccount: {\n        identification: {\n          identification:\n            creditorScheme === 'ID' || creditorScheme === 'EXTERNAL_ID'\n              ? stripSpaces(counterpartyId)\n              : stripSpaces(accountNumber),\n          schemeName: creditorScheme || 'BBAN',\n        },\n        ...(accountType ? { accountType } : {}),\n        ...(isObjectTruthy(selectedContact) ? { selectedContact } : {}),\n        ...(isObjectTruthy(counterpartyAccountAdditions)\n          ? { additions: counterpartyAccountAdditions }\n          : {}),\n      },\n      ...(isObjectTruthy(counterpartyBank) ? { counterpartyBank } : {}),\n      ...(isObjectTruthy(correspondentBank) ? { correspondentBank } : {}),\n      ...(isObjectTruthy(intermediaryBank) ? { intermediaryBank } : {}),\n      ...(targetCurrency ? { targetCurrency } : {}),\n      ...(mandateIdentifier ? { mandateIdentifier } : {}),\n      ...(endToEndIdentification ? { endToEndIdentification } : {}),\n      ...(remittanceInformation ? { remittanceInformation } : {}),\n      ...(messageToBank ? { messageToBank } : {}),\n      ...(paymentReference ? { messageToBank: paymentReference } : {}),\n      ...(purposeOfPayment\n        ? { purposeOfPayment: { [purposeType]: purposeOfPayment } }\n        : {}),\n      ...(chargeBearer ? { chargeBearer } : {}),\n      ...(isObjectTruthy(transferFeeValue)\n        ? { transferFee: { ...transferFeeValue } }\n        : {}),\n    } as PaymentOrdersValidatePost['transferTransactionInformation'],\n    ...(isObjectTruthy(additions) ? { additions } : {}),\n  };\n};\n\nexport const toPostPaymentTemplate = (\n  paymentItem: PaymentDetails\n): PaymentTemplatesPostRequest => {\n  const name = paymentItem[PaymentTemplateFields.templateName];\n  const {\n    paymentType,\n    originatorAccount,\n    instructionPriority,\n    transferTransactionInformation,\n    entryClass,\n    additions,\n  } = toPostRequest(paymentItem);\n\n  return {\n    name,\n    paymentType,\n    originatorAccount,\n    transferTransactionInformation,\n    ...(instructionPriority ? { instructionPriority } : {}),\n    ...(entryClass ? { entryClass } : {}),\n    ...(isObjectTruthy(additions) ? { additions } : {}),\n  };\n};\n\nconst setMainFormDetails = (form: FormGroup, paymentResponse: any) => {\n  const initiator = form.get(PaymentBaseFields.initiator);\n  const counterparty = form.get(PaymentBaseFields.counterparty);\n\n  const remittanceInfo = form.get(PaymentBaseFields.remittanceInfo);\n  const additions = form.get(PaymentBaseFields.additions);\n  const selectPaymentOption = form.get(PaymentOptionFields.selectPaymentOption);\n  const chargeBearer = form.get(PaymentOptionFields.chargeBearer);\n  const defaultAddress = {\n    addressLine1: '',\n    addressLine2: '',\n    streetName: '',\n    postCode: '',\n    town: '',\n    countrySubDivision: '',\n    country: '',\n  };\n\n  const transferTransactionInformation =\n    paymentResponse.transferTransactionInformation || {};\n  const counterpartyAccount =\n    transferTransactionInformation.counterpartyAccount || {};\n  const counterpartyDetails = transferTransactionInformation.counterparty || {};\n  const counterPartyIdentification = counterpartyAccount.identification || {};\n  const counterpartyAddress = isObjectTruthy(counterpartyDetails.postalAddress)\n    ? counterpartyDetails.postalAddress\n    : defaultAddress;\n\n  const originatorAccount = paymentResponse.originatorAccount || {};\n  const instructedAmount =\n    transferTransactionInformation.instructedAmount || {};\n\n  const counterpartyBank =\n    transferTransactionInformation.counterpartyBank || {};\n  const counterpartyBankDetails = {\n    ...counterpartyBank,\n    ...(counterpartyBank.name ? { bankName: counterpartyBank.name } : null),\n    ...{\n      postalAddress: isObjectTruthy(counterpartyBank.postalAddress)\n        ? counterpartyBank.postalAddress\n        : defaultAddress,\n    },\n  };\n\n  const alphabetRegex = /^[a-zA-Z]*$/;\n  const isIbanTransfer =\n    counterPartyIdentification[CounterPartyFields.schemeName] ===\n      SchemeNames.IBAN &&\n    alphabetRegex.test(\n      counterPartyIdentification.identification.substring(0, 2)\n    );\n\n  if (!counterpartyBankDetails.postalAddress.country) {\n    counterpartyBankDetails.postalAddress.country = isIbanTransfer\n      ? counterPartyIdentification.identification.substring(0, 2)\n      : form.get(HiddenFields.defaultCountry)?.value;\n  }\n\n  const correspondentBank =\n    transferTransactionInformation.correspondentBank || {};\n  const correspondentBankDetails = {\n    ...correspondentBank,\n    ...(correspondentBank.name ? { bankName: correspondentBank.name } : null),\n    isCorrespondentBankTransfer: isObjectTruthy(correspondentBank),\n    ...(correspondentBank.bankBranchCode\n      ? { selectAdditionalBankCodeType: 'BRANCH_CODE' }\n      : null),\n    [CounterPartyFields.enableAdditionalBankDetails]:\n      isObjectTruthy(correspondentBank),\n  };\n\n  const intermediaryBank =\n    transferTransactionInformation.intermediaryBank || {};\n  const intermediaryBankDetails = {\n    ...intermediaryBank,\n    ...(intermediaryBank.name ? { bankName: intermediaryBank.name } : null),\n    ...(intermediaryBank.bankBranchCode\n      ? { selectAdditionalBankCodeType: 'BRANCH_CODE' }\n      : null),\n    [CounterPartyFields.enableAdditionalBankDetails]:\n      isObjectTruthy(intermediaryBank),\n  };\n\n  const counterPartyDetails = {\n    [CounterPartyFields.standardEntryClass]: paymentResponse.entryClass,\n    [CounterPartyFields.creditorBank]: counterpartyBankDetails,\n    [CounterPartyFields.correspondentBank]: correspondentBankDetails,\n    [CounterPartyFields.intermediaryBank]: intermediaryBankDetails,\n    [CounterPartyFields.schemeName]: counterPartyIdentification.schemeName,\n    [CounterPartyFields.recipientId]: counterpartyDetails.recipientId,\n    [CounterPartyFields.accountType]: counterpartyAccount.accountType,\n    [CounterPartyFields.accountNumber]:\n      counterPartyIdentification.identification,\n    [CounterPartyFields.name]: counterpartyDetails.name,\n    [CounterPartyFields.postalAddress]: counterpartyAddress,\n    [CounterPartyFields.messageToBank]:\n      transferTransactionInformation.messageToBank || '',\n    [CounterPartyFields.targetCurrency]:\n      transferTransactionInformation.targetCurrency,\n    [CounterPartyFields.remittanceInformation]: transferTransactionInformation\n      .remittanceInformation?.content\n      ? transferTransactionInformation.remittanceInformation?.content\n      : transferTransactionInformation.remittanceInformation || '',\n    [CounterPartyFields.endToEndIdentification]:\n      transferTransactionInformation.endToEndIdentification,\n    [CounterPartyFields.mandateIdentifier]:\n      transferTransactionInformation.mandateIdentifier,\n    [CounterPartyFields.role]: counterpartyDetails.role,\n    [CounterPartyFields.selectedContact]:\n      counterpartyAccount.selectedContact || {},\n    [CounterPartyFields.id]:\n      counterpartyAccount.arrangementId ||\n      counterpartyAccount.externalArrangementId,\n  };\n\n  const initiatorDetails = {\n    [InitiatorFields.id]: originatorAccount.arrangementId,\n    [InitiatorFields.name]: originatorAccount.name,\n    [InitiatorFields.accountNumber]:\n      originatorAccount.identification &&\n      originatorAccount.identification.identification,\n    currency:\n      originatorAccount.currency || paymentResponse.originatorAccountCurrency,\n    balance: originatorAccount.balance,\n  };\n\n  const decimalIndex = instructedAmount.amount?.indexOf('.');\n\n  const purposeOfPayment: PurposeOfPaymentInfo =\n    transferTransactionInformation.purposeOfPayment || {};\n\n  const description = transferTransactionInformation.remittanceInformation\n    ?.content\n    ? transferTransactionInformation.remittanceInformation?.content\n    : transferTransactionInformation.remittanceInformation || '';\n\n  const remittanceInfoDetails = {\n    [RemittanceInfoFields.urgent]:\n      paymentResponse.instructionPriority === 'HIGH',\n    [RemittanceInfoFields.amountCurrencyGroup]: {\n      amount: instructedAmount.amount?.slice(0, decimalIndex + 3),\n      currency: instructedAmount.currencyCode,\n    },\n    [RemittanceInfoFields.paymentReference]:\n      transferTransactionInformation.messageToBank || '',\n    [RemittanceInfoFields.description]:\n      paymentResponse.paymentReference || description,\n    [RemittanceInfoFields.purposeOfPayment]:\n      purposeOfPayment.code || purposeOfPayment.freeText || '',\n  };\n\n  const setValues = (control: AbstractControl | null, obj: BaseObject<any>) => {\n    if (control) {\n      control.patchValue(obj);\n    }\n  };\n  setValues(initiator, initiatorDetails);\n  setValues(counterparty, counterPartyDetails);\n  setValues(remittanceInfo, remittanceInfoDetails);\n  setValues(additions, paymentResponse.additions);\n  selectPaymentOption?.patchValue(\n    `${paymentResponse.paymentType}::${paymentResponse.instructionPriority}`\n  );\n  chargeBearer?.patchValue(transferTransactionInformation.chargeBearer);\n\n  return form;\n};\n\nexport const setFormDetailsFromService = (\n  form: FormGroup,\n  payment: IdentifiedPaymentOrder\n) => {\n  const scheduleControl = form.get(PaymentBaseFields.schedule);\n  const startDateControl = scheduleControl?.get(ScheduleFields.startDate);\n  const isPaymentCopyControl = form.get(HiddenFields.isPaymentCopy);\n\n  if (payment.schedule && !isPaymentCopyControl?.value) {\n    const schedule = payment.schedule;\n    const freqControl = scheduleControl?.get(ScheduleFields.frequency);\n    const endTypeControl = scheduleControl?.get(ScheduleFields.endType);\n    const endDateControl = scheduleControl?.get(ScheduleFields.endDate);\n    const repeatControl = scheduleControl?.get(ScheduleFields.repeat);\n\n    startDateControl?.patchValue(\n      new Date(datePart(schedule.startDate)).toISOString()\n    );\n    freqControl?.patchValue(schedule.transferFrequency);\n    endTypeControl?.patchValue(\n      schedule.repeat\n        ? endTypes.after\n        : schedule.endDate\n        ? endTypes.on\n        : endTypes.never\n    );\n    repeatControl?.patchValue(schedule.repeat || 2);\n    if (schedule.endDate) {\n      startDateControl?.markAsPristine(); // to prevent overwriting endDate with calculated value\n      endDateControl?.patchValue(new Date(schedule.endDate).toISOString());\n    }\n  } else if (!payment.schedule && !isPaymentCopyControl?.value) {\n    startDateControl?.patchValue(\n      new Date(payment.requestedExecutionDate || '').toISOString()\n    );\n  }\n\n  return setMainFormDetails(form, payment);\n};\n\nexport const setFormDetailsFromResponse = (\n  form: FormGroup,\n  paymentResponse: any,\n  { id, name }: Partial<TemplateParams> = {}\n) => {\n  const paymentTemplateName = form.get(PaymentTemplateFields.templateName);\n  const paymentTemplateId = form.get(PaymentTemplateFields.paymentTemplateId);\n\n  paymentTemplateName?.patchValue(name);\n  paymentTemplateId?.patchValue(id);\n\n  return setMainFormDetails(form, paymentResponse);\n};\n\nexport const switchPaymentParties = (\n  paymentData: PaymentDetails\n): PaymentDetails => {\n  const { role } = CounterPartyFields;\n  const { currency } = InitiatorFields;\n  const { initiator, counterparty } = PaymentBaseFields;\n  const { [currency]: currencyValue } = paymentData[initiator];\n\n  const initiatorValue = {\n    ...paymentData[counterparty],\n    ...(currencyValue ? { [currency]: currencyValue } : { [currency]: '' }),\n  };\n  const counterPartyValue = {\n    ...paymentData[initiator],\n    [role]: paymentData[counterparty][role],\n  };\n  return {\n    ...paymentData,\n    [initiator]: initiatorValue,\n    [counterparty]: counterPartyValue,\n  };\n};\n\n/**\n * @deprecated\n * Will be removed in widget collection v3.11.0\n */\nexport const updateFreqFieldOptions = (\n  field: PaymentFormFieldConfig,\n  isRecurrent: boolean,\n  widgetOptions: InitiatePaymentOptions\n): PaymentFormFieldConfig => {\n  const options = [...field.options.options];\n  const { isOneOffToRecurrentAllowed, isRecurrentToOneOffAllowed } =\n    widgetOptions;\n  if (isRecurrent && !isRecurrentToOneOffAllowed) {\n    options.shift();\n    field = {\n      ...field,\n      options: { ...field.options, options, defaultValue: options[0].value },\n    };\n  } else if (!isRecurrent && !isOneOffToRecurrentAllowed) {\n    field = { ...field, options: { ...field.options, options: [options[0]] } };\n  }\n\n  return field;\n};\n","import { PaymentOption as PaymentOptionResponse } from '@backbase/data-ang/payment-order-options';\nimport { PaymentOption } from '../models';\n\nexport const mapPaymentOptions = (\n  options: Array<PaymentOptionResponse>,\n  optionsLabel: { [key: string]: string } = {}\n): PaymentOption[] => {\n  const optionsArr: PaymentOption[] = [];\n  let paymentOptions;\n  for (const option of options) {\n    paymentOptions = option.paymentOptions || [];\n    paymentOptions.forEach((paymentOption: PaymentOption) => {\n      optionsArr.push({\n        paymentType: option.paymentType,\n        canEditCounterparty: option.canEditCounterparty,\n        showHelperText: paymentOptions.length > 1,\n        name: optionsLabel[option.paymentType],\n        ...paymentOption,\n      });\n    });\n  }\n  return optionsArr;\n};\n","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport {\n  ContactsHttpService as ContactsService,\n  ContactsPostRequestBody,\n  ContactsPostResponseBody,\n} from '@backbase/data-ang/contact-manager';\nimport {\n  ApprovalStatus,\n  PaymentOrderGetResponse,\n  PaymentOrderProgressStatusGet,\n  PaymentOrderPut,\n  PaymentOrdersHttpService as PaymentOrdersService,\n  PaymentOrdersPost,\n  PaymentOrdersPostResponse,\n  PaymentOrdersValidatePost,\n  PaymentOrdersValidatePostResponse,\n  RateGet,\n} from '@backbase/data-ang/payment-order';\nimport {\n  PaymentTemplate,\n  PaymentTemplatesHttpService as PaymentTemplatesService,\n  PaymentTemplatesPostRequest,\n  PaymentTemplatesPostResponse,\n} from '@backbase/data-ang/payment-template';\nimport {\n  A2aClientHttpService as A2aClientService,\n  DetailedExternalAccount,\n} from '@backbase/data-ang/payment-order-a2a';\nimport { ProductSummaryHttpService, ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { BehaviorSubject, EMPTY, Observable, of, Subject, throwError, timer } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  debounce,\n  exhaustMap,\n  map,\n  pluck,\n  scan,\n  shareReplay,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport {\n  arrangementsPageSize,\n  BeneficiaryList,\n  contactsPageSize,\n  dataItemPermissionParams,\n  defaultPrivilege,\n  defaultResourceName,\n  paymentTemplatesPageSize,\n} from '../constants';\nimport { arrangementItemFromService, contactListFromService } from '../mappers';\nimport { UsersHttpService } from '@backbase/data-ang/accesscontrol';\nimport { PaymentErrors } from '../models';\nimport { BB_PAYORD_OMNI_PAYMENT_CONFIG_TOKEN } from '../../configs/constants';\nimport { PayordOmniPaymentConfig } from '../../configs/models/form-items.model';\nimport { DeprecationsService } from '@backbase/foundation-ang/core';\nimport { Notification, NotificationService } from '@backbase/ui-ang/notification';\nimport { fromResponse } from '../helpers/http-helpers';\nimport {\n  ArrangementItem,\n  ArrangementList,\n  ArrangementsContextParameters,\n  ContactList,\n  ContactsAndArrangementsGetParams,\n  PaymentOrderResponseItem,\n  PaymentTemplateAction,\n  PaymentTemplatesData,\n  PaymentTemplatesGetParams,\n} from '../models/types';\n\nconst initialTemplatesParams: PaymentTemplatesGetParams = {\n  from: 0,\n  size: paymentTemplatesPageSize,\n  intendedAction: PaymentTemplateAction.CREATE,\n};\n\n@Injectable()\nexport class PaymentOrderHttpService implements OnDestroy {\n  private readonly paymentResponseSubject: Subject<PaymentOrderResponseItem> = new Subject();\n  private readonly contactsGetParams = new BehaviorSubject<ContactsAndArrangementsGetParams>({\n    from: 0,\n    size: contactsPageSize,\n  });\n  private readonly creditAccountsParams = new BehaviorSubject<ContactsAndArrangementsGetParams>({\n    from: 0,\n    creditAccount: true,\n    size: arrangementsPageSize,\n  });\n  private readonly debitAccountsParams$ = new BehaviorSubject<ContactsAndArrangementsGetParams>({\n    from: 0,\n    debitAccount: true,\n    size: arrangementsPageSize,\n  });\n  private readonly paymentTemplateParams = new BehaviorSubject<PaymentTemplatesGetParams>(initialTemplatesParams);\n\n  private readonly creditAccountsParameters$ = this.creditAccountsParams.pipe(\n    map(this.buildArrangementsContextParameters.bind(this)),\n  );\n\n  private readonly dataItemParams$ = new Subject<string>();\n\n  resourceName: string | undefined;\n  businessFunction!: string;\n  arrangementBusFunctions!: string;\n  privilege: string | undefined;\n  paymentType: string | undefined;\n  loading$ = new BehaviorSubject<boolean>(true);\n\n  public readonly dataItemPermissions$ = this.dataItemParams$.pipe(\n    switchMap((id) => this.handleDataItemPermissions(id)),\n  );\n\n  public readonly arrangementUserPermissions$ = this.dataItemParams$.pipe(\n    switchMap((id) => this.getArrangementUserPermission(id)),\n  );\n\n  public readonly createPermission$ = this.settings ? this.getUserPermission() : EMPTY;\n\n  public paymentResponse: Observable<PaymentOrderResponseItem | HttpErrorResponse> =\n    this.paymentResponseSubject.asObservable();\n\n  public debitAccounts: Observable<ArrangementList> = this.debitAccountsParams$.pipe(\n    map(this.buildArrangementsContextParameters.bind(this)),\n    exhaustMap((params) => this.fetchArrangementList(params)),\n    shareReplay(1),\n    scan((acc: ArrangementList, curr: ArrangementList) => {\n      const { merge, from } = this.debitAccountsParams$.value;\n      return this.mergeArrangementList(acc, curr, (from as number) > 0 && !!merge);\n    }),\n  );\n\n  public contacts: Observable<ContactList | HttpErrorResponse> = this.contactsGetParams.pipe(\n    exhaustMap(({ isLoadMore, ...params }) =>\n      this.contactsData.getContacts(params, 'response').pipe(\n        map((response) => contactListFromService(response, isLoadMore)),\n        catchError((err: HttpErrorResponse) => of(err)),\n      ),\n    ),\n    shareReplay(1),\n  );\n\n  public creditAccounts: Observable<ArrangementList | HttpErrorResponse> = this.creditAccountsParameters$.pipe(\n    exhaustMap((params) => this.fetchArrangementList(params)),\n    shareReplay(1),\n    scan((acc: ArrangementList, curr: ArrangementList) => {\n      const { merge, from } = this.creditAccountsParams.value;\n      return this.mergeArrangementList(acc, curr, (from as number) > 0 && !!merge);\n    }),\n    catchError((err: HttpErrorResponse) => of(err)),\n  );\n\n  public connectedAccounts$: Observable<DetailedExternalAccount[] | undefined> = this.paymentOrdersA2ADataHttpService\n    .getAll('response')\n    .pipe(\n      map(fromResponse),\n      map((res) => res.accounts && res.accounts.filter((acc: DetailedExternalAccount) => acc.status === 'Active')),\n      shareReplay(1),\n    );\n\n  public readonly paymentTemplates$: Observable<PaymentTemplatesData> = this.paymentTemplateParams.pipe(\n    tap(() => this.loading$.next(true)),\n    debounce((par) => (par.query ? timer(1000) : EMPTY)),\n    switchMap((params) => this.loadPaymentTemplates({ ...params, paymentType: this.paymentType })),\n    scan((acc: any, curr: any) => this.mergeResults(acc, curr)),\n    tap(() => this.loading$.next(false)),\n  );\n\n  public readonly templatesList$ = (paymentType: string) =>\n    this.paymentTemplateData\n      .getPaymentTemplates({ ...initialTemplatesParams, paymentType }, 'response')\n      .pipe(map((response: HttpResponse<PaymentTemplate[]>) => response.body));\n\n  private buildArrangementsContextParameters(\n    params: ContactsAndArrangementsGetParams,\n  ): ArrangementsContextParameters & ContactsAndArrangementsGetParams {\n    return {\n      resourceName: this.resourceName || defaultResourceName,\n      businessFunction: this.arrangementBusFunctions ?? this.businessFunction,\n      privilege: this.privilege || defaultPrivilege,\n      ...params,\n    };\n  }\n\n  private fetchArrangementList(params: ArrangementsContextParameters): Observable<ArrangementList> {\n    return this.productSummaryData.getArrangementsByBusinessFunction(params, 'response').pipe(\n      map(({ headers, body }: HttpResponse<ProductSummaryItem[]>) => {\n        const totalCount = headers.get('x-total-count') || '0';\n        const items = body || [];\n        return {\n          count: parseInt(totalCount, 10) || items.length,\n          items: items.map(arrangementItemFromService),\n        };\n      }),\n    );\n  }\n\n  constructor(\n    private readonly paymentOrderData: PaymentOrdersService,\n    private readonly paymentTemplateData: PaymentTemplatesService,\n    private readonly contactsData: ContactsService,\n    private readonly productSummaryData: ProductSummaryHttpService,\n    private readonly accessgroupData: UsersHttpService,\n    private readonly notificationService: NotificationService,\n    @Optional()\n    @Inject(BB_PAYORD_OMNI_PAYMENT_CONFIG_TOKEN)\n    readonly settings: PayordOmniPaymentConfig,\n    readonly paymentOrdersA2ADataHttpService: A2aClientService,\n    private readonly deprecationService: DeprecationsService,\n  ) {\n    this.deprecationService.logDeprecatedFeature(\n      '\"handleDataItemPermissions\" method and \"dataItemPermissions$\" property are deprecated and will be removed in next major release',\n    );\n  }\n\n  private getUserPermission() {\n    return this.accessgroupData\n      .getCheckUserPermission(\n        {\n          ...this.settings.businessConfig,\n          privileges: 'create',\n        },\n        'response',\n      )\n      .pipe(shareReplay(1));\n  }\n\n  postPaymentOrder(paymentOrder: PaymentOrdersPost): Observable<PaymentOrdersPostResponse> {\n    return this.paymentOrderData.postPaymentOrders({ paymentOrdersPost: paymentOrder });\n  }\n\n  putPaymentOrder(paymentOrder: PaymentOrderPut, paymentOrderId: string): Observable<PaymentOrdersPostResponse> {\n    return this.paymentOrderData.putPaymentOrderById({\n      paymentOrderId,\n      paymentOrderPut: paymentOrder,\n    });\n  }\n\n  getPayment(id: string): Observable<PaymentOrderGetResponse> {\n    return this.paymentOrderData.getPaymentOrderById({ paymentOrderId: id }, 'response').pipe(map(fromResponse));\n  }\n\n  getPaymentProgressStatus(paymentOrderId: string): Observable<PaymentOrderProgressStatusGet | null> {\n    return this.paymentOrderData\n      .getProgressStatusByPaymentOrderId({ paymentOrderId }, 'response')\n      .pipe(map((response: HttpResponse<PaymentOrderProgressStatusGet>) => response.body));\n  }\n\n  handleDataItemPermissions(dataItemId: string) {\n    return this.accessgroupData\n      .getDataItemPermissionsContext({\n        resourceName: dataItemPermissionParams.resourceName,\n        privilege: dataItemPermissionParams.privilege,\n        dataGroupType: dataItemPermissionParams.dataGroupType,\n        dataItemId,\n      })\n      .pipe(\n        pluck(0, 'permissions'),\n        map((permissions) => permissions?.map((permission) => permission.businessFunction)),\n      );\n  }\n\n  getArrangementUserPermission(id: string) {\n    return this.accessgroupData\n      .getArrangementUserPermissionCheck({\n        id,\n        resource: dataItemPermissionParams.resourceName,\n        function: this.businessFunction,\n        privilege: dataItemPermissionParams.privilege,\n      })\n      .pipe(catchError((error) => of(error)));\n  }\n\n  loadDataItemPermissions(id: string) {\n    this.dataItemParams$.next(id);\n  }\n\n  ngOnDestroy(): void {\n    this.paymentResponseSubject.complete();\n    this.contactsGetParams.complete();\n    this.creditAccountsParams.complete();\n  }\n\n  loadMoreContacts(page = 0, params?: ContactsAndArrangementsGetParams) {\n    this.contactsGetParams.next({\n      from: page,\n      isLoadMore: true,\n      size: contactsPageSize,\n      ...params,\n    });\n  }\n\n  loadMoreCreditAccounts(page = 0, params?: ContactsAndArrangementsGetParams) {\n    this.creditAccountsParams.next({\n      from: page,\n      creditAccount: true,\n      ...(params?.query && { searchTerm: params.query }),\n      isLoadMore: true,\n      size: arrangementsPageSize,\n      ...params,\n    });\n  }\n\n  fetchCreditAccounts(query = '', params?: ContactsAndArrangementsGetParams) {\n    this.contactsGetParams.next({\n      ...(query && { query }),\n      from: 0,\n      ...params,\n    });\n    this.creditAccountsParams.next({\n      ...(query && { searchTerm: query }),\n      from: 0,\n      creditAccount: true,\n      ...params,\n    });\n  }\n\n  loadMoreDebitAccounts(params: ContactsAndArrangementsGetParams): void {\n    this.debitAccountsParams$.next({\n      ...this.debitAccountsParams$.value,\n      ...params,\n    });\n  }\n\n  validatePayment(payment: PaymentOrdersValidatePost): Observable<PaymentOrdersValidatePostResponse> {\n    return this.paymentOrderData\n      .postValidate({ paymentOrdersValidatePost: payment }, 'response')\n      .pipe(map(fromResponse));\n  }\n\n  saveNewContact(contact: ContactsPostRequestBody) {\n    return this.contactsData.postContacts({ contactsPostRequestBody: contact }, 'response').pipe(\n      map((res: HttpResponse<ContactsPostResponseBody>) => res.body),\n      catchError(() => of(null)),\n    );\n  }\n\n  postPaymentTemplate(requestObject: PaymentTemplatesPostRequest): Observable<PaymentTemplatesPostResponse | null> {\n    return this.paymentTemplateData\n      .postPaymentTemplates({ paymentTemplatesPostRequest: requestObject })\n      .pipe(tap(() => this.loadMore(0)));\n  }\n\n  editPaymentTemplate(\n    paymentTemplateId: string,\n    paymentTemplatesPutRequest: PaymentTemplatesPostRequest,\n  ): Observable<PaymentTemplatesPostResponse | null> {\n    return this.paymentTemplateData.putPaymentTemplateById({\n      paymentTemplateId,\n      paymentTemplatesPutRequest,\n    });\n  }\n\n  getCurrencyExchangeRate(currencyFrom: string, currencyTo: string): Observable<RateGet | null> {\n    return this.paymentOrderData.getRate({ currencyFrom, currencyTo }, 'response').pipe(\n      map((response) => response && response.body),\n      catchError(() => of(null)),\n    );\n  }\n\n  getAccountByAccountId(id: string, accountNumber: string): Observable<ArrangementItem> {\n    return this.productSummaryData\n      .getArrangementsByBusinessFunction(\n        {\n          resourceName: this.resourceName || defaultResourceName,\n          businessFunction: this.businessFunction,\n          privilege: this.privilege || defaultPrivilege,\n          searchTerm: accountNumber,\n        },\n        'response',\n      )\n      .pipe(\n        map(fromResponse),\n        map((items: ProductSummaryItem[]) => items.find((item) => item.id === id)),\n        map((item) => {\n          if (item) {\n            return arrangementItemFromService(item);\n          } else {\n            throw new Error('No account found...');\n          }\n        }),\n      );\n  }\n\n  private loadPaymentTemplates(params: PaymentTemplatesGetParams): Observable<PaymentTemplatesData> {\n    return this.paymentTemplateData.getPaymentTemplates(params, 'response').pipe(\n      map((response: HttpResponse<PaymentTemplate[]>) => {\n        const items = response.body || [];\n        return {\n          items,\n          totalCount: parseInt(response.headers.get('x-total-count') || '0', 10) || items.length,\n          params,\n        };\n      }),\n    );\n  }\n\n  private mergeResults(acc: PaymentTemplatesData, curr: PaymentTemplatesData): PaymentTemplatesData {\n    return {\n      totalCount: curr.totalCount || curr.items.length,\n      items: curr.params.from === 0 ? curr.items : [...acc.items, ...curr.items],\n      params: curr.params,\n    };\n  }\n\n  private mergeArrangementList(\n    accumulator: ArrangementList,\n    currentValue: ArrangementList,\n    merge: boolean,\n  ): ArrangementList {\n    return {\n      count: currentValue.count || currentValue.items.length,\n      items: merge ? [...accumulator.items, ...currentValue.items] : currentValue.items,\n    };\n  }\n\n  loadMore(page: number) {\n    const currentPage = this.paymentTemplateParams.value.from || 0;\n    this.paymentTemplateParams.next({\n      ...this.paymentTemplateParams.value,\n      from: currentPage + page,\n    });\n  }\n\n  search(query: string) {\n    this.paymentTemplateParams.next({\n      ...this.paymentTemplateParams.value,\n      from: 0,\n      ...{ query },\n    });\n  }\n\n  manageErrorResponse(response: PaymentErrors) {\n    const notification = {\n      header: response.notificationHeader,\n      headerContext: response.errorResponse,\n      message: '',\n    };\n\n    if (response.errors?.length) {\n      response.errors?.forEach((responseError: { key: string; message: string }) => {\n        response.paymentErrors?.errorData.find((err) => {\n          if (responseError.key === err.key) {\n            responseError.message = err.message;\n          }\n        });\n        if (!responseError.message && response.genericMessage) {\n          responseError.message = response.genericMessage;\n        }\n\n        notification.message = responseError.message;\n\n        this.showNotification(false, notification);\n      });\n    } else {\n      if (response.genericMessage) {\n        notification.message = response.genericMessage;\n      }\n      this.showNotification(false, notification);\n    }\n  }\n\n  showNotification(success: boolean, notification: Partial<Notification>) {\n    this.notificationService.showNotification({\n      dismissible: true,\n      ttl: 5000,\n      modifier: success ? 'success' : 'error',\n      header: '',\n      message: '',\n      ...notification,\n    });\n  }\n\n  getContacts(params?: ContactsAndArrangementsGetParams): Observable<ContactList | HttpErrorResponse> {\n    this.contactsGetParams.next({ ...this.contactsGetParams.value, ...params });\n    return this.contacts;\n  }\n\n  getCreditAccounts(params?: ContactsAndArrangementsGetParams): Observable<ArrangementList | HttpErrorResponse> {\n    this.creditAccountsParams.next({\n      ...this.creditAccountsParams.value,\n      ...(params?.query && { searchTerm: params.query }),\n      ...params,\n    });\n    return this.creditAccounts;\n  }\n\n  getDebitAccounts(params?: ContactsAndArrangementsGetParams): Observable<ArrangementList> {\n    this.debitAccountsParams$.next({\n      ...this.debitAccountsParams$.value,\n      ...params,\n    });\n    return this.debitAccounts.pipe(shareReplay(1));\n  }\n\n  fetchBeneficiaries(params: ContactsAndArrangementsGetParams, type?: BeneficiaryList) {\n    const { from, size, query } = params;\n    switch (type) {\n      case BeneficiaryList.ACCOUNTS:\n        this.loadMoreCreditAccounts(from, { size, query });\n        break;\n      case BeneficiaryList.CONTACTS:\n        this.loadMoreContacts(from, { size, query });\n        break;\n      default:\n        this.fetchCreditAccounts(query, { size });\n        break;\n    }\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { of, Observable } from 'rxjs';\nimport {\n  PaymentOrderCancelPostResponse,\n  IdentifiedPaymentOrder,\n  BulkPaymentOrdersApprovalPutResponsePaymentOrders,\n  PaymentOrderGetResponse,\n} from '@backbase/data-ang/payment-order';\n\nexport class PaymentServiceStub {\n  getPaymentOrders(\n    params: object\n  ): Observable<HttpResponse<PaymentOrderGetResponse>> {\n    const response = new HttpResponse<PaymentOrderGetResponse>();\n    return of(response);\n  }\n\n  getPaymentDetails(\n    paymentId: string,\n    params: object\n  ): Observable<IdentifiedPaymentOrder> {\n    return of();\n  }\n\n  approvePayment(\n    paymentId: string,\n    comment?: string\n  ): Observable<BulkPaymentOrdersApprovalPutResponsePaymentOrders> {\n    return of();\n  }\n\n  rejectPayment(\n    paymentId: string,\n    comment?: string\n  ): Observable<BulkPaymentOrdersApprovalPutResponsePaymentOrders> {\n    return of();\n  }\n\n  postCancelPayment(\n    paymentOrderId: string,\n    version: number\n  ): Observable<HttpResponse<PaymentOrderCancelPostResponse>> {\n    const response = new HttpResponse<PaymentOrderCancelPostResponse>();\n    return of(response);\n  }\n\n  cancelPayment(\n    paymentOrderId: string,\n    version: number\n  ): Observable<HttpResponse<PaymentOrderCancelPostResponse>> {\n    const response = new HttpResponse<PaymentOrderCancelPostResponse>();\n    return of(response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport {\n  PaymentOption,\n  PaymentOptionsHttpService as PaymentOrderOptionsDataHttpService,\n  PaymentOptionsRequest,\n  PaymentOptionsResponse,\n  SanctionedCountriesHttpService as SanctionedCountriesServiceHttpService,\n  SanctionedCountriesResponse,\n  SanctionedCountry,\n  SanctionedCurrenciesHttpService as SanctionedCurrenciesServiceHttpService,\n  SanctionedCurrenciesResponse,\n} from '@backbase/data-ang/payment-order-options';\n\n@Injectable()\nexport class PaymentOptionsService {\n  paymentOptionsSubject$ = new BehaviorSubject<\n    Array<PaymentOption> | undefined\n  >(undefined);\n\n  constructor(\n    private readonly paymentOptionsData: PaymentOrderOptionsDataHttpService,\n    private readonly sanctionedCountriesService: SanctionedCountriesServiceHttpService,\n    private readonly sanctionedCurrenciesService: SanctionedCurrenciesServiceHttpService\n  ) {}\n\n  get paymentOptions$() {\n    return this.paymentOptionsSubject$.asObservable();\n  }\n\n  fetchPaymentOptions(\n    payment: PaymentOptionsRequest\n  ): Observable<PaymentOptionsResponse> {\n    return this.paymentOptionsData\n      .postPaymentOptions({ paymentOptionsRequest: payment })\n      .pipe(\n        tap((response: PaymentOptionsResponse) => {\n          this.paymentOptionsSubject$.next(response.options || []);\n        })\n      );\n  }\n\n  getPaymentOptionsRecordByPaymentType(\n    paymentType: string\n  ): Observable<PaymentOption[]> {\n    return this.paymentOptionsData\n      .getPaymentOptionsByPaymentType({ paymentType })\n      .pipe(\n        map((response: PaymentOption) => (response && [response]) || []),\n        shareReplay(1)\n      );\n  }\n\n  getSanctionedCurrencies(\n    countryIso?: string\n  ): Observable<SanctionedCurrenciesResponse> {\n    return this.sanctionedCurrenciesService\n      .getSanctionedCurrencies({ countryIso })\n      .pipe(map((response: SanctionedCurrenciesResponse) => response || {}));\n  }\n\n  getSanctionedCountries(\n    countryIso?: string\n  ): Observable<Array<SanctionedCountry>> {\n    return this.sanctionedCountriesService\n      .getSanctionedCountries({ countryIso })\n      .pipe(\n        map(\n          (response: SanctionedCountriesResponse) => response?.countries || []\n        )\n      );\n  }\n\n  resetPaymentOptions() {\n    this.paymentOptionsSubject$.next([]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {\n  catchError,\n  map,\n  switchMap,\n  take,\n  debounce,\n  distinctUntilChanged,\n} from 'rxjs/operators';\nimport {\n  BatchOrderPutRequest,\n  BatchOrderPutResponse,\n  BatchOrdersHttpService,\n  BatchOrdersPostRequest,\n  BatchOrdersPostResponse,\n  BatchPaymentsGetResponse,\n  BatchPaymentsPostRequest,\n  BatchPaymentsPostResponse,\n  BatchPaymentsPutRequest,\n  BatchPaymentsPutResponse,\n  PostBatchOrdersRequestParams,\n} from '@backbase/data-ang/payment-batch';\nimport {\n  BatchTemplatesHttpService,\n  BatchTemplatesPostResponse,\n  PostBatchTemplatesRequestParams,\n} from '@backbase/data-ang/payment-batch-template';\nimport { BehaviorSubject, EMPTY, Observable, throwError, timer } from 'rxjs';\nimport {\n  GetArrangementsByBusinessFunctionRequestParams,\n  ProductSummaryHttpService,\n  ProductSummaryItem,\n} from '@backbase/data-ang/arrangements';\nimport { InternalAccountFormItem } from '../models/types';\n\ninterface ObservableArrangements {\n  search$: BehaviorSubject<string>;\n  items$: Observable<InternalAccountFormItem[]>;\n}\n\ninterface AccountsFactoryConfig\n  extends GetArrangementsByBusinessFunctionRequestParams {\n  debounceTime?: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MultiplePaymentService {\n  constructor(\n    private batchOrderService: BatchOrdersHttpService,\n    private batchTemplateService: BatchTemplatesHttpService,\n    private productSummaryService: ProductSummaryHttpService\n  ) {}\n\n  public submitting = false;\n\n  createFetchAccountsFactory(config: AccountsFactoryConfig) {\n    return this._fetchAccountsFactory.bind(this, config);\n  }\n\n  saveBatchOrder(\n    data: BatchOrdersPostRequest,\n    batchOrderID: string,\n    dryRun?: boolean\n  ): Observable<BatchOrdersPostResponse | BatchOrderPutResponse> {\n    this.submitting = true;\n    const param: PostBatchOrdersRequestParams = {\n      batchOrdersPostRequest: data,\n    };\n    if (batchOrderID === '') {\n      return this.batchOrderService\n        .postBatchOrders(param)\n        .pipe(catchError(this.catchResponseError));\n    } else {\n      return this.updateBatchOrder(data, batchOrderID, dryRun);\n    }\n  }\n\n  updateBatchOrder(\n    event: BatchOrderPutRequest,\n    batchOrderID: string,\n    dryRun?: boolean,\n    intendedCreditTransactionsCount?: number,\n    intendedCreditAmount?: number\n  ): Observable<BatchOrderPutResponse> {\n    return this.batchOrderService\n      .updateBatchOrderById({\n        batchOrderId: batchOrderID,\n        dryRun,\n        batchOrderPutRequest: event,\n        intendedCreditAmount,\n        intendedCreditTransactionsCount,\n      })\n      .pipe(catchError(this.catchResponseError));\n  }\n\n  cancelDraftOrder(batchOrderId: string) {\n    this.batchOrderService\n      .deleteBatchOrderIdByBatchOrderId({ batchOrderId })\n      .pipe(take(1))\n      .subscribe();\n  }\n\n  saveDraftPayment(\n    data: BatchPaymentsPostRequest,\n    batchOrderID: string\n  ): Observable<BatchPaymentsPostResponse | null> {\n    return this.batchOrderService\n      .postBatchPayments({\n        batchOrderId: batchOrderID,\n        batchPaymentsPostRequest: data,\n      })\n      .pipe(catchError(this.catchResponseError));\n  }\n\n  updatePayment(\n    batchOrderID: string,\n    paymentID: string,\n    data: BatchPaymentsPutRequest\n  ): Observable<BatchPaymentsPutResponse | null> {\n    return this.batchOrderService\n      .putBatchPaymentById({\n        batchOrderId: batchOrderID,\n        batchPaymentId: paymentID,\n        batchPaymentsPutRequest: data,\n      })\n      .pipe(catchError(this.catchResponseError));\n  }\n\n  deletePayment(batchOrderId: string, batchPaymentId: string): Observable<any> {\n    return this.batchOrderService\n      .deleteBatchPaymentById({ batchOrderId, batchPaymentId })\n      .pipe(catchError(this.catchResponseError));\n  }\n\n  saveAsTemplate(\n    batchOrderId: string,\n    name: string\n  ): Promise<BatchTemplatesPostResponse> {\n    const parameter: PostBatchTemplatesRequestParams = {\n      batchTemplatesPostRequest: { batchOrderId, name },\n    };\n    return this.batchTemplateService\n      .postBatchTemplates(parameter)\n      .pipe(catchError(this.catchResponseError))\n      .toPromise();\n  }\n\n  getPayments(\n    batchOrderId: string,\n    options = { from: 0, size: 1000 }\n  ): Promise<BatchPaymentsGetResponse> {\n    return this.batchOrderService\n      .getBatchPaymentsById({ batchOrderId, ...options })\n      .pipe(catchError(this.catchResponseError))\n      .toPromise();\n  }\n\n  private catchResponseError(response: HttpErrorResponse) {\n    switch (response.status) {\n      case 400:\n        return throwError(\n          response.error || {\n            message: 'Unknown error',\n            errors: [{ message: 'Unknown error' }],\n          }\n        );\n      case 401:\n        return throwError({\n          type: 'TIMEOUT',\n          message: 'Session Timeout',\n          subMessage: 'Please login again.',\n        });\n      default:\n        return throwError({\n          type: 'GENERIC',\n          message: 'Unknown Error',\n          subMessage: 'Try to reload the page or contact system administrator.',\n        });\n    }\n  }\n\n  private _fetchAccountsFactory(\n    config: AccountsFactoryConfig\n  ): ObservableArrangements {\n    const search$ = new BehaviorSubject<string>('');\n\n    const items$ = search$.pipe(\n      distinctUntilChanged(),\n      debounce((searchTerm: string) =>\n        searchTerm ? timer(config.debounceTime || 0) : EMPTY\n      ),\n      switchMap((searchTerm: string) => {\n        const params = { ...config, ...(searchTerm ? { searchTerm } : {}) };\n        return this.productSummaryService\n          .getArrangementsByBusinessFunction(params)\n          .pipe(\n            map((arrangements: ProductSummaryItem[]) =>\n              arrangements.map((arrangement) => ({\n                id: arrangement.id,\n                name: arrangement.name || '',\n                alias:\n                  (arrangement.userPreferences || {}).alias ||\n                  arrangement.bankAlias,\n                balance:\n                  arrangement.availableBalance || arrangement.bookedBalance,\n                bookedBalance: arrangement.bookedBalance,\n                availableBalance: arrangement.availableBalance,\n                creditLimit: arrangement.creditLimit,\n                currency: arrangement.currency || '',\n                IBAN: arrangement.IBAN || arrangement.number,\n                BBAN: arrangement.BBAN,\n                accountNumber: arrangement.BBAN || arrangement.IBAN || '',\n\n                number: arrangement.BBAN || '',\n                bankBranchCode: arrangement.bankBranchCode,\n                externalTransferAllowed: arrangement.externalTransferAllowed,\n                urgentTransferAllowed: arrangement.urgentTransferAllowed,\n                additions: arrangement.additions,\n                productKindName: arrangement.productKindName,\n                originalArrangement: arrangement,\n              }))\n            )\n          );\n      })\n    );\n\n    return {\n      search$,\n      items$,\n    };\n  }\n}\n","export function objectHasValue(input: { [key: string]: any }): boolean {\n  for (const property in input) {\n    if (typeof input[property] === 'object') {\n      return objectHasValue(input[property]);\n    } else if (input[property]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function objectsHasValueByKey(\n  obj: { [key: string]: any } | undefined,\n  keys: string[]\n): any {\n  if (!obj) {\n    return;\n  }\n  return keys.reduce((acc: { [key: string]: any }, key, index) => {\n    if (!acc || !acc.hasOwnProperty(key)) {\n      return false;\n    }\n\n    const isLast = keys.length - 1 === index;\n\n    if (isLast && typeof acc[key] === 'object') {\n      return objectHasValue(acc[key]) && acc[key];\n    }\n\n    return acc[key];\n  }, obj);\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { objectsHasValueByKey } from '../../helpers/object-helpers';\n\n@Pipe({\n  name: 'hasValue',\n})\nexport class HasValuePipe implements PipeTransform {\n  transform(\n    data: { [key: string]: any } | undefined,\n    compareTo: { [key: string]: any } | undefined,\n    keys: string[]\n  ): boolean {\n    return Boolean(\n      objectsHasValueByKey(data, keys) || objectsHasValueByKey(compareTo, keys)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HasValuePipe } from './has-value.pipe';\n\n@NgModule({\n  declarations: [HasValuePipe],\n  exports: [HasValuePipe],\n  imports: [CommonModule],\n})\nexport class HasValueModule {}\n","import { AccountInformation } from '@backbase/data-ang/contact-manager';\nimport { Address } from '../models/types';\n\nexport function getAccountHolderAddress(\n  account: AccountInformation = {}\n): Address {\n  return {\n    addressLine1: account.accountHolderAddressLine1 || '',\n    addressLine2: account.accountHolderAddressLine2 || '',\n    streetName: account.accountHolderStreetName || '',\n    town: account.accountHolderTown || '',\n    postCode: account.accountHolderPostCode || '',\n    countrySubDivision: account.accountHolderCountrySubDivision || '',\n    country: account.accountHolderCountry || '',\n  };\n}\n\nexport function getContactBankAddress(\n  account: AccountInformation = {}\n): Address {\n  return {\n    addressLine1: account.bankAddressLine1 || '',\n    addressLine2: account.bankAddressLine2 || '',\n    streetName: account.bankStreetName || '',\n    town: account.bankTown || '',\n    postCode: account.bankPostCode || '',\n    countrySubDivision: account.bankCountrySubDivision || '',\n    country: account.bankCountry || '',\n  };\n}\n","import { SanctionedCurrenciesResponse } from '@backbase/data-ang/payment-order-options/';\nimport BigNumber from 'bignumber.js';\nimport { PaymentDetails } from '../../configs/models/form-items.model';\nimport {\n  ForexDetails,\n  CurrencyObj,\n  CurrencySet,\n  DecimalsSet,\n  LabeledCurrencies,\n} from '../models';\n\nexport const handleCurrenciesList = (\n  currencies: SanctionedCurrenciesResponse\n): any => {\n  const res: CurrencySet = {} as CurrencySet;\n\n  const labeled = currencies.labeled as LabeledCurrencies;\n  if (labeled) {\n    const popular = labeled.popular || [];\n    const normal = labeled.normal || [];\n    const currenciesExtendedList = popular.concat(normal);\n    res.dividerIndex = popular.length ? popular.length - 1 : undefined;\n    res.currencies = currenciesExtendedList.map(\n      (item: CurrencyObj) => item.code\n    );\n    res.decimals = currenciesExtendedList.reduce((acc, val) => {\n      acc[val.code] = val.decimals;\n      return acc;\n    }, {} as DecimalsSet);\n\n    if (currencies.default) {\n      const defaultCode = currencies.default.code;\n      res.currencies.splice(res.currencies.indexOf(defaultCode), 1);\n      res.currencies.unshift(defaultCode);\n    }\n  }\n\n  return res;\n};\n\nexport const getForexDetailsFromPayment = (\n  payment: PaymentDetails\n): Partial<ForexDetails> | undefined => {\n  const rate = payment.exchangeRate;\n  const amountValue = new BigNumber(payment.remittanceInfo.amountGroup.amount);\n  const calculatedAmount = amountValue.dividedBy(rate).toString();\n\n  if (rate && rate !== 0) {\n    return {\n      fromCurrency: payment.initiator.currency,\n      toCurrency: payment.remittanceInfo.amountGroup.currency,\n      calculatedAmount,\n      rate,\n    };\n  }\n  return {\n    fromCurrency: payment.initiator.currency,\n    toCurrency: payment.remittanceInfo.amountGroup.currency,\n  };\n};\n","import { FormGroup } from '@angular/forms';\nimport { PaymentHooksOptions } from '../../configs/models/form-items.model';\nimport { PaymentHooks } from '../../configs/models/form-item-names.model';\n\nexport function triggerPaymentHook(\n  hooks: PaymentHooksOptions,\n  hookName: PaymentHooks,\n  callback?: () => void,\n  formGroup?: FormGroup\n) {\n  const hook = hooks && hooks[hookName];\n  const doneFn = callback as () => void;\n\n  if (typeof hook === 'function') {\n    if (\n      hookName === PaymentHooks.onSave ||\n      hookName === PaymentHooks.onSubmit\n    ) {\n      hook({\n        doneFn, // Callback function that is triggered when hooks complete\n        form: formGroup as FormGroup, // The entire payment form\n      });\n    } else {\n      hook();\n    }\n  }\n}\n","export enum PaymentActionsTypes {\n  LoadPayments = 'LoadPayments',\n  RefreshPayments = 'RefreshPayments',\n  LoadMore = 'LoadMore',\n  SelectAccount = 'SelectAccount',\n  ChangePage = 'ChangePage',\n  Search = 'Search',\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport {\n  StopChecksHttpService as StopChecksService,\n  StopChecksGetResponse,\n  StopCheckPostResponse,\n  StopCheckPostRequest,\n} from '@backbase/data-ang/stop-checks';\nimport { distinctUntilChanged, finalize, map } from 'rxjs/operators';\nimport { fromResponse } from '../helpers/http-helpers';\n\n@Injectable()\nexport class ChecksService {\n  private readonly loadingSub$ = new ReplaySubject<boolean>(1);\n  readonly loading$ = this.loadingSub$.pipe(distinctUntilChanged());\n\n  private set loading(val: boolean) {\n    this.loadingSub$.next(val);\n  }\n\n  constructor(\n    @Optional() protected readonly model: ItemModel,\n    private readonly stopChecksDataHttpService: StopChecksService\n  ) {}\n\n  getStopChecks(params: object): Observable<StopChecksGetResponse> {\n    this.loading = true;\n    return this.stopChecksDataHttpService\n      .getStopChecks(params, 'response')\n      .pipe(\n        map(fromResponse),\n        finalize(() => {\n          this.loading = false;\n        })\n      );\n  }\n\n  postStopChecks(\n    payload: StopCheckPostRequest\n  ): Observable<StopCheckPostResponse> {\n    this.loading = true;\n    return this.stopChecksDataHttpService\n      .postStopChecks({ stopCheckPostRequest: payload }, 'response')\n      .pipe(\n        map(fromResponse),\n        finalize(() => {\n          this.loading = false;\n        })\n      );\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  PaymentOrderCancelPostResponse,\n  PaymentOrdersHttpService as PaymentOrdersService,\n  IdentifiedPaymentOrder,\n  RateGet,\n  PaymentOrdersValidatePost,\n  BulkPaymentOrdersApprovalPutResponse,\n  PaymentOrdersPostResponse,\n  PaymentOrdersValidatePostResponse,\n  RecordStatus,\n  GetPaymentOrdersRequestParams,\n  PaymentOrderGetResponse,\n} from '@backbase/data-ang/payment-order';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LoadPaymentsParams } from '../models/types';\nimport { Actions } from '../constants/constants';\nimport { fromResponse } from '../helpers/http-helpers';\n\n@Injectable()\nexport class PaymentOrdersHttpService {\n  constructor(private readonly paymentsDataHttpService: PaymentOrdersService) {}\n\n  private approvalsServiceCall(\n    paymentId: string,\n    approvalStatus: RecordStatus,\n    comment?: string\n  ) {\n    return this.paymentsDataHttpService\n      .putApprovalsByPaymentOrderId(\n        {\n          paymentOrderId: paymentId,\n          paymentOrderApprovalPutRequest: {\n            approvalStatus,\n            ...(!!comment && { comment }),\n          },\n        },\n        'response'\n      )\n      .pipe(map(fromResponse));\n  }\n\n  private bulkApprovalsServiceCall(\n    paymentOrderIds: Array<string>,\n    approvalStatus: RecordStatus,\n    comment?: string\n  ) {\n    return this.paymentsDataHttpService\n      .putBulkApprovals(\n        {\n          bulkPaymentOrdersApprovalPutRequest: {\n            approvalStatus,\n            paymentOrderIds,\n            ...(!!comment && { comment }),\n          },\n        },\n        'response'\n      )\n      .pipe(map(fromResponse));\n  }\n\n  loadPayments(params: LoadPaymentsParams): Observable<{\n    totalCount: number;\n    items: IdentifiedPaymentOrder[];\n  }> {\n    return this.getPaymentOrders(params as GetPaymentOrdersRequestParams).pipe(\n      map((response) => {\n        const totalCount = response.headers.get('x-total-count');\n        return {\n          totalCount: Number(totalCount),\n          items: response.body || [],\n        };\n      })\n    );\n  }\n\n  getPaymentOrders(\n    params: GetPaymentOrdersRequestParams\n  ): Observable<HttpResponse<IdentifiedPaymentOrder[]>> {\n    return this.paymentsDataHttpService.getPaymentOrders(params, 'response');\n  }\n\n  getPayment(id: string, params: object): Observable<PaymentOrderGetResponse> {\n    return this.paymentsDataHttpService\n      .getPaymentOrderById(\n        {\n          paymentOrderId: id,\n          ...params,\n        },\n        'response'\n      )\n      .pipe(map(fromResponse));\n  }\n\n  cancelPayment(\n    paymentOrderId: string,\n    version: number\n  ): Observable<HttpResponse<PaymentOrderCancelPostResponse>> {\n    return this.paymentsDataHttpService.deletePaymentOrderById({\n      paymentOrderId,\n      version,\n    });\n  }\n\n  postPaymentCancel(\n    paymentOrderId: string,\n    version: number\n  ): Observable<HttpResponse<PaymentOrderCancelPostResponse>> {\n    return this.paymentsDataHttpService.postCancelByPaymentOrderId(\n      {\n        paymentOrderId,\n        paymentOrderCancelPostRequest: { version },\n      },\n      'response'\n    );\n  }\n\n  getCurrencyExchangeRate(\n    currencyFrom: string,\n    currencyTo: string\n  ): Observable<HttpResponse<RateGet>> {\n    return this.paymentsDataHttpService.getRate(\n      { currencyFrom, currencyTo },\n      'response'\n    );\n  }\n\n  approvePayment(\n    paymentId: string,\n    comment?: string\n  ): Observable<PaymentOrdersPostResponse> {\n    return this.approvalsServiceCall(paymentId, Actions.APPROVE, comment);\n  }\n\n  bulkApprovePayments(\n    paymentIds: Array<string>,\n    comment?: string\n  ): Observable<BulkPaymentOrdersApprovalPutResponse | undefined> {\n    return this.bulkApprovalsServiceCall(paymentIds, Actions.APPROVE, comment);\n  }\n\n  rejectPayment(\n    paymentId: string,\n    comment?: string\n  ): Observable<PaymentOrdersPostResponse> {\n    return this.approvalsServiceCall(paymentId, Actions.REJECT, comment);\n  }\n\n  bulkRejectPayments(\n    paymentIds: Array<string>,\n    comment?: string\n  ): Observable<BulkPaymentOrdersApprovalPutResponse | undefined> {\n    return this.bulkApprovalsServiceCall(paymentIds, Actions.REJECT, comment);\n  }\n\n  validatePayment(\n    payment: PaymentOrdersValidatePost\n  ): Observable<PaymentOrdersValidatePostResponse> {\n    return this.paymentsDataHttpService\n      .postValidate({ paymentOrdersValidatePost: payment }, 'response')\n      .pipe(map(fromResponse));\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const DEFAULT_PAYMENT_PARAMS = new InjectionToken(\n  'default Payments Params'\n);\n","import { HttpResponse } from '@angular/common/http';\nimport {\n  Inject,\n  Injectable,\n  OnDestroy,\n  Optional,\n  Provider,\n} from '@angular/core';\nimport {\n  BulkPaymentOrdersApprovalPutResponse,\n  IdentifiedPaymentOrder,\n  PaymentMode,\n  PaymentOrderCancelPostResponse,\n  PaymentOrderGetResponse,\n  PaymentOrdersPostResponse,\n  PaymentOrdersValidatePost,\n  PaymentOrdersValidatePostResponse,\n  RateGet,\n} from '@backbase/data-ang/payment-order';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport {\n  BehaviorSubject,\n  merge,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  finalize,\n  map,\n  mapTo,\n  scan,\n  shareReplay,\n  switchMap,\n  takeUntil,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { datePart } from '../helpers/date-helpers';\nimport { PaymentActionsTypes } from '../models/payment-actions-types';\nimport {\n  FlatPaymentsControlsPayloadModel,\n  PaymentsControlsModel,\n} from '../models/payments-controls.model';\nimport {\n  LoadPaymentsParams,\n  PaymentsResponse,\n  PaymentActionsState,\n} from '../models/types';\nimport { PaymentOrdersHttpService } from './payment-orders-http.service';\nimport { DEFAULT_PAYMENT_PARAMS } from './tokens';\n\n@Injectable()\nexport class PaymentService implements OnDestroy {\n  private readonly destroy$ = new Subject();\n  private readonly selectedAccount$ = new Subject<\n    LoadPaymentsParams['query']\n  >();\n  private readonly search$ = new Subject<\n    Partial<FlatPaymentsControlsPayloadModel>\n  >();\n  private readonly changePage$ = new Subject<LoadPaymentsParams['from']>();\n  private readonly loadMore$ = new Subject<LoadPaymentsParams['from']>();\n  private readonly loadPayments$ = new ReplaySubject<\n    LoadPaymentsParams['paymentMode']\n  >(1);\n  private readonly refreshPayments$ = new Subject();\n  private readonly sortPayments$ = new Subject<{\n    orderBy?: LoadPaymentsParams['orderBy'];\n    direction?: LoadPaymentsParams['direction'];\n  }>();\n  private readonly loadingSub$ = new ReplaySubject<boolean>(1);\n  private readonly actingSub$ = new ReplaySubject<boolean>(1);\n  private readonly pageSizeIM$ =\n    this.model?.property<number>('pageSize') || of(null);\n  readonly loading$ = this.loadingSub$.pipe(distinctUntilChanged());\n  readonly acting$ = this.actingSub$.pipe(distinctUntilChanged());\n  private pageSizeSub$ = new BehaviorSubject<number | undefined>(undefined);\n  private debitMode$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private pageSize$ = this.pageSizeSub$.asObservable().pipe(\n    withLatestFrom(this.pageSizeIM$),\n    map(([pageSize, pageSizeIM]) =>\n      //TODO: remove it when migration on journeys for payments will be done\n      pageSize === undefined\n        ? pageSizeIM || this.defaultPaymentsParams.size\n        : pageSize\n    )\n  );\n\n  private loadingCalls = 0;\n  private actingCalls = 0;\n\n  private set loading(val: boolean) {\n    val ? this.loadingCalls++ : this.loadingCalls--;\n    this.loadingSub$.next(this.loadingCalls > 0);\n  }\n\n  private set acting(val: boolean) {\n    val ? this.actingCalls++ : this.actingCalls--;\n    this.actingSub$.next(this.actingCalls > 0);\n  }\n\n  private readonly paymentsActions$ = merge(\n    this.loadPayments$.pipe(\n      map((paymentMode) => ({\n        type: PaymentActionsTypes.LoadPayments,\n        paymentMode,\n      }))\n    ),\n    this.refreshPayments$.pipe(\n      mapTo({ type: PaymentActionsTypes.RefreshPayments })\n    ),\n    this.changePage$.pipe(\n      map((from) => ({ type: PaymentActionsTypes.ChangePage, from }))\n    ),\n    this.loadMore$.pipe(\n      map((from) => ({ type: PaymentActionsTypes.LoadMore, from }))\n    ),\n    this.selectedAccount$.pipe(\n      map((query) => ({ type: PaymentActionsTypes.SelectAccount, query }))\n    ),\n    this.sortPayments$.pipe(\n      map((sortParams) => ({\n        type: PaymentActionsTypes.SelectAccount,\n        ...sortParams,\n      }))\n    ),\n    this.search$.pipe(\n      map((params) => ({ type: PaymentActionsTypes.Search, ...params }))\n    )\n  );\n\n  paymentState$ = this.paymentsActions$.pipe(\n    withLatestFrom(this.pageSize$, this.debitMode$),\n    map(\n      ([state, pageSize, isDebitMode]: [\n        any,\n        number | undefined,\n        boolean | undefined\n      ]) => ({\n        ...state,\n        pageSize,\n        isDebitMode,\n      })\n    ), //TODO: remove it when migration on journeys for payments will be done\n    scan((state: any, action: any) => ({ ...state, ...action })),\n    map((state) => ({ ...this.defaultPaymentsParams, ...(state as object) })),\n    map(({ pageSize, isDebitMode, ...state }: PaymentActionsState) => {\n      const isRefresh = state.type === 'RefreshPayments';\n      const size = pageSize || 50;\n      const from = state.from || 0;\n      return {\n        ...state,\n        size: isRefresh ? size * (from + 1) : size,\n        from: isRefresh ? 0 : from,\n        ...(isDebitMode ? { paymentTypeGroup: 'Debit' } : null),\n      };\n    }),\n    filter((action) => action.type !== undefined),\n    shareReplay(1)\n  );\n\n  private readonly paymentsEffect$ = this.paymentState$.pipe(\n    switchMap(({ type, ...params }) => {\n      const isActing = type === PaymentActionsTypes.SelectAccount;\n      const isLoadMore = type === PaymentActionsTypes.LoadMore;\n\n      isActing ? (this.acting = true) : (this.loading = true);\n\n      return this.paymentOrdersService.loadPayments(params).pipe(\n        map((response) => ({ ...response, isLoadMore })),\n        finalize(() =>\n          isActing ? (this.acting = false) : (this.loading = false)\n        )\n      );\n    }),\n    takeUntil(this.destroy$),\n    shareReplay(1)\n  );\n\n  private readonly paymentsStateSource$ = new BehaviorSubject<\n    { totalCount: number; items: IdentifiedPaymentOrder[] } | undefined\n  >(undefined);\n\n  public get payments$() {\n    return this.paymentsStateSource$.asObservable();\n  }\n\n  constructor(\n    private readonly paymentOrdersService: PaymentOrdersHttpService,\n    @Optional() private readonly model: ItemModel,\n    @Inject(DEFAULT_PAYMENT_PARAMS)\n    private readonly defaultPaymentsParams: LoadPaymentsParams\n  ) {\n    this.paymentsEffect$.subscribe(\n      (payload) => this.handlePaymentSuccess(payload),\n      (error) => this.paymentsStateSource$.error(error)\n    );\n  }\n\n  private handlePaymentSuccess(\n    payload: PaymentsResponse & { isLoadMore: boolean }\n  ) {\n    const orders: IdentifiedPaymentOrder[] = [];\n    if (payload.isLoadMore) {\n      orders.push(...this.handleLoadMore());\n    }\n\n    this.paymentsStateSource$.next({\n      items: [...orders, ...payload.items],\n      totalCount: payload.totalCount || payload.items.length,\n    });\n  }\n\n  private handleLoadMore() {\n    const existingPayments = this.paymentsStateSource$.getValue();\n    return existingPayments ? existingPayments.items : [];\n  }\n\n  loadPayments(paymentMode?: PaymentMode) {\n    this.loadPayments$.next(paymentMode);\n  }\n\n  refreshPayments() {\n    this.refreshPayments$.next();\n  }\n\n  loadMore(from: number) {\n    this.loadMore$.next(from);\n  }\n\n  changePage(from: number) {\n    this.changePage$.next(from);\n  }\n\n  sortPayments(\n    orderBy: LoadPaymentsParams['orderBy'],\n    direction: LoadPaymentsParams['direction']\n  ) {\n    this.sortPayments$.next({ orderBy, direction });\n  }\n\n  setPageSize(value: number) {\n    this.pageSizeSub$.next(value);\n  }\n  setDebitMode(value: boolean) {\n    this.debitMode$.next(value);\n  }\n\n  cancelPayment(\n    paymentOrderId: string,\n    version: number\n  ): Observable<HttpResponse<PaymentOrderCancelPostResponse>> {\n    this.acting = true;\n    return this.paymentOrdersService\n      .cancelPayment(paymentOrderId, version)\n      .pipe(\n        finalize(() => (this.acting = false)),\n        tap(() => {\n          this.handleCancelPaymentSuccess(paymentOrderId);\n        })\n      );\n  }\n\n  private handleCancelPaymentSuccess(paymentOrderId: string) {\n    const payments = this.paymentsStateSource$.getValue();\n    if (payments) {\n      const newItems = payments.items.filter(\n        (item) => item.id !== paymentOrderId\n      );\n      this.paymentsStateSource$.next({\n        items: newItems,\n        totalCount: payments.totalCount,\n      });\n    }\n  }\n\n  getCurrencyExchangeRate(\n    currencyFrom = 'EUR',\n    currencyTo = 'USD'\n  ): Observable<HttpResponse<RateGet>> {\n    return this.paymentOrdersService.getCurrencyExchangeRate(\n      currencyFrom,\n      currencyTo\n    );\n  }\n\n  getPaymentOrders(\n    params: object\n  ): Observable<HttpResponse<IdentifiedPaymentOrder[]>> {\n    return this.paymentOrdersService.getPaymentOrders(params);\n  }\n\n  getPaymentDetails(\n    paymentId: string,\n    params: object\n  ): Observable<PaymentOrderGetResponse> {\n    return this.paymentOrdersService.getPayment(paymentId, params);\n  }\n\n  approvePayment(\n    paymentId: string,\n    comment?: string\n  ): Observable<PaymentOrdersPostResponse> {\n    return this.paymentOrdersService.approvePayment(paymentId, comment);\n  }\n\n  bulkApprovePayments(\n    paymentIds: Array<string>,\n    comment?: string\n  ): Observable<BulkPaymentOrdersApprovalPutResponse | undefined> {\n    return this.paymentOrdersService.bulkApprovePayments(paymentIds, comment);\n  }\n\n  rejectPayment(\n    paymentId: string,\n    comment?: string\n  ): Observable<PaymentOrdersPostResponse> {\n    return this.paymentOrdersService.rejectPayment(paymentId, comment);\n  }\n\n  bulkRejectPayments(\n    paymentIds: Array<string>,\n    comment?: string\n  ): Observable<BulkPaymentOrdersApprovalPutResponse | undefined> {\n    return this.paymentOrdersService.bulkRejectPayments(paymentIds, comment);\n  }\n\n  searchPayments(query: string) {\n    this.search$.next({ query, from: 0 });\n  }\n\n  applyFilter({ amount, executionDate, ...rest }: PaymentsControlsModel): void {\n    const retVal: Partial<FlatPaymentsControlsPayloadModel> = {\n      ...rest,\n      from: 0,\n    };\n\n    if (!retVal.status) {\n      retVal.status = [];\n    }\n\n    retVal.amountFrom = amount.from || '';\n    retVal.amountTo = amount.to || '';\n    retVal.executionDateFrom =\n      executionDate && executionDate.from ? datePart(executionDate.from) : '';\n    retVal.executionDateTo =\n      executionDate && executionDate.to ? datePart(executionDate.to) : '';\n\n    this.search$.next(retVal);\n  }\n\n  postCancelPayment(\n    paymentOrderId: string,\n    version: number\n  ): Observable<HttpResponse<PaymentOrderCancelPostResponse>> {\n    this.acting = true;\n    return this.paymentOrdersService\n      .postPaymentCancel(paymentOrderId, version)\n      .pipe(\n        finalize(() => (this.acting = false)),\n        tap(() => {\n          this.handleCancelPaymentSuccess(paymentOrderId);\n        })\n      );\n  }\n\n  validatePayment(\n    payment: PaymentOrdersValidatePost\n  ): Observable<PaymentOrdersValidatePostResponse> {\n    return this.paymentOrdersService.validatePayment(payment);\n  }\n\n  ngOnDestroy() {\n    // clean up our subjects\n    this.destroy$.complete();\n    this.loadMore$.complete();\n    this.changePage$.complete();\n    this.selectedAccount$.complete();\n    this.search$.complete();\n    this.loadPayments$.complete();\n    this.refreshPayments$.complete();\n  }\n}\n\nexport const providePaymentServices: Provider[] = [\n  { provide: PaymentOrdersHttpService, useClass: PaymentOrdersHttpService },\n  {\n    provide: PaymentService,\n    useClass: PaymentService,\n    deps: [PaymentOrdersHttpService, ItemModel, DEFAULT_PAYMENT_PARAMS],\n  },\n];\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["counterParty","remittanceInfo","paymentInformation","initiator","schedule","countriesList","additionalMessage","counterparty","i1","i1.CountryNameComponent","i2.FullAddressComponent","i5","i6.CountryNameComponent","i8","i10","i2","i3.PaymentsSrSearchResultInfoComponent","i4.FlagIconComponent","i9","i1.DomAttributesService","i3","i4.CurrencySelectorComponent","i2.FlagIconComponent","i1.PayordDynamicLabelComponent","i3.FlagIconComponent","i4.CountryNameComponent","i7","i5.CountryNameComponent","i6","i11","i4","i5.PaymentsSrSearchResultInfoComponent","i1.PaymentsSrSearchResultInfoComponent","i3.BeneficiaryContactComponent","i6.BeneficiaryAccountComponent","i8.KeyboardNavigationDirective","i8.KeyboardNavigationAnchorDirective","i8.KeyboardNavigationListDirective","i12.BeneficiaryScrollDirective","i8.KeyboardNavigationItemDirective","i12.BeneficiaryScrollItemDirective","i3.BeneficiaryTabsComponent","modules","components","i1.PaymentConfigService","i2.TableHeaderCheckboxComponent","i3.TableCheckboxComponent","i5.PayordStatusBadgeComponent","i12","i13","i14.ExportPdfDirective","i15.AccountFormatterPipe","i4.PayordStatusBadgeComponent","i10.ExportPdfDirective","i11.AccountFormatterPipe","i1.PaymentsSearchComponent","i3.PaymentsFilterComponent","uiModules"],"mappings":"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"}