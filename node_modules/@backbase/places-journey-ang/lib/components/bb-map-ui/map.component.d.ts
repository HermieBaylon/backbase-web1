/// <reference types="googlemaps" />
import { EventEmitter, ElementRef, OnInit } from '@angular/core';
import { MapHelpersService } from './map-helpers.service';
import { MapsAPIConfig } from './map-api-loader.service';
import * as i0 from "@angular/core";
export interface MapDetails {
    center: google.maps.LatLng;
    bounds: google.maps.LatLngBounds | null | undefined;
    zoom: number;
}
export interface MarkerOptions extends google.maps.MarkerOptions {
    locationId: string;
}
export interface Marker extends google.maps.Marker {
    locationId: string;
}
export declare class MapComponent implements OnInit {
    private readonly helpers;
    /**
     * Map options object.
     */
    options: google.maps.MapOptions;
    /**
     * Map API configuration.
     */
    config: MapsAPIConfig;
    /**
     * EventEmitter for triggering a mapReady event.
     */
    readonly mapReady: EventEmitter<MapComponent>;
    mapContainer: ElementRef<HTMLElement> | undefined;
    constructor(helpers: MapHelpersService);
    get mapHelpers(): MapHelpersService;
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MapComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MapComponent, "bb-map-ui", never, { "options": "options"; "config": "config"; }, { "mapReady": "mapReady"; }, never, ["[bbMapHeader]", "[bbMapFooter]"]>;
}
