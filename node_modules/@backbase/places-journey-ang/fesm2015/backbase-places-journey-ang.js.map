{"version":3,"file":"backbase-places-journey-ang.js","sources":["../../../../libs/places-journey/src/lib/services/places-journey-config.service.ts","../../../../libs/places-journey/src/lib/places-journey.component.ts","../../../../libs/places-journey/src/lib/model/constants.ts","../../../../libs/places-journey/src/lib/model/place-error-model.ts","../../../../libs/places-journey/src/lib/components/bb-map-ui/map-api-loader.service.ts","../../../../libs/places-journey/src/lib/services/places.service.ts","../../../../libs/places-journey/src/lib/components/bb-map-ui/map-search.component.ts","../../../../libs/places-journey/src/lib/components/bb-map-ui/map-search.component.html","../../../../libs/places-journey/src/lib/model/place-model.ts","../../../../libs/places-journey/src/lib/components/work-times/work-times.component.ts","../../../../libs/places-journey/src/lib/components/work-times/work-times.component.html","../../../../libs/places-journey/src/lib/components/place-details/place-details.component.ts","../../../../libs/places-journey/src/lib/components/place-details/place-details.component.html","../../../../libs/places-journey/src/lib/directives/keyboard-accessibility.directive.ts","../../../../libs/places-journey/src/lib/components/places-list/places-list.component.ts","../../../../libs/places-journey/src/lib/components/places-list/places-list.component.html","../../../../libs/places-journey/src/lib/components/bb-map-ui/map-helpers.service.ts","../../../../libs/places-journey/src/lib/components/bb-map-ui/map.component.ts","../../../../libs/places-journey/src/lib/components/bb-map-ui/map.component.html","../../../../libs/places-journey/src/lib/components/map-wrapper/map-wrapper.component.ts","../../../../libs/places-journey/src/lib/components/map-wrapper/map-wrapper.component.html","../../../../libs/places-journey/src/lib/views/places-view.component.ts","../../../../libs/places-journey/src/lib/views/places-view.component.html","../../../../libs/places-journey/src/lib/components/bb-map-ui/map.module.ts","../../../../libs/places-journey/src/lib/places-journey.module.ts","../../../../libs/places-journey/src/backbase-places-journey-ang.ts"],"sourcesContent":["import { Injectable, Optional, Inject, InjectionToken } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { PartialObserver } from 'rxjs';\n\nexport const PlacesJourneyConfigurationToken =\n  new InjectionToken<PlacesJourneyConfiguration>(\n    'PlacesJourneyConfiguration injection token'\n  );\n\nexport enum PlacesMeasurementSystem {\n  METRIC = 'metric',\n  US_IMPERIAL = 'imperial',\n}\n\nexport interface PlaceTypes {\n  [placeType: string]: {\n    iconName?: string;\n    markerUrl?: string;\n  };\n}\n\nexport interface PlacesJourneyConfiguration {\n  apiKey: string;\n  placeTypes: PlaceTypes;\n  mapZoom: number;\n  latitude: number;\n  longitude: number;\n  radius: number;\n  limitList: number;\n  measurementSystem: PlacesMeasurementSystem;\n  deElevatedHeader: boolean;\n}\n\nconst configDefaults: PlacesJourneyConfiguration = {\n  apiKey: '',\n  placeTypes: {},\n  mapZoom: 15,\n  latitude: 52.3760992,\n  longitude: 4.900779,\n  radius: 2,\n  limitList: 100,\n  measurementSystem: PlacesMeasurementSystem.METRIC,\n  deElevatedHeader: false,\n};\n\n@Injectable()\nexport class PlacesJourneyConfigService {\n  private _config: PlacesJourneyConfiguration;\n\n  constructor(\n    @Optional()\n    @Inject(PlacesJourneyConfigurationToken)\n    config: PlacesJourneyConfiguration,\n    @Optional() private readonly itemModel: ItemModel\n  ) {\n    config = config || {};\n    this._config = { ...configDefaults, ...config };\n    // update the API key from ItemModel if it was not provided from a static config\n    if (this.itemModel && config.apiKey === undefined) {\n      this.itemModel\n        .property<string>('apiKey', this._config.apiKey)\n        .subscribe(<PartialObserver<string>>{\n          next: (key: string) => {\n            this._config.apiKey = key;\n          },\n        })\n        .unsubscribe();\n    }\n  }\n\n  get defaults(): PlacesJourneyConfiguration {\n    return configDefaults;\n  }\n\n  /**\n   * API key for Google Maps\n   */\n  get apiKey(): string {\n    return this._config.apiKey;\n  }\n\n  /**\n   * Place types configuration. Used to set up marker image and the filter label for any place type available in the service\n   */\n  get placeTypes(): PlaceTypes {\n    return this._config.placeTypes;\n  }\n\n  /**\n   * Default zoom value for a map\n   */\n  get mapZoom(): number {\n    return this._config.mapZoom;\n  }\n\n  /**\n   * Default map latitude\n   */\n  get latitude(): number {\n    return this._config.latitude;\n  }\n\n  /**\n   * Default map longitude\n   */\n  get longitude(): number {\n    return this._config.longitude;\n  }\n\n  /**\n   * Default radius in which the locations are being searched while map is not loaded\n   */\n  get radius(): number {\n    return this._config.radius;\n  }\n\n  /**\n   * Maximum amount of locations to display\n   */\n  get limitList(): number {\n    return this._config.limitList;\n  }\n\n  /**\n   * Measurement system\n   */\n  get measurementSystem(): PlacesMeasurementSystem {\n    return this._config.measurementSystem;\n  }\n\n  /**\n   * Dev config to enable de-elevated header\n   */\n  get deElevatedHeader(): boolean {\n    return this._config.deElevatedHeader;\n  }\n}\n","import { Component } from '@angular/core';\nimport { PlacesJourneyConfigService } from './services/places-journey-config.service';\n@Component({\n  selector: 'bb-places-journey',\n  template: '<router-outlet></router-outlet>',\n  providers: [PlacesJourneyConfigService],\n})\nexport class PlacesJourneyComponent {}\n","/**\n * Default place type that will be used as fallback in case types are not configured in the app\n */\nexport const defaultPlaceType = 'bbDefaultPlaceType';\n/**\n * Marker icon for default place type\n */\nexport const defaultPlaceTypeMarkerURI = 'bb-default-marker.svg';\n/**\n * List icon name for default place type\n */\nexport const defaultPlaceTypeIcon = 'map';\n/**\n * Ratio between foot and meter\n */\nexport const footInMeter = 3.28084;\n/**\n * Ratio between meter and kilometer\n */\nexport const meterInKM = 1000;\n/**\n * Ratio between foot and mile\n */\nexport const footInMile = 5280;\n","import { HttpErrorResponse } from '@angular/common/http';\n\nexport interface PlacesError {\n  message: string;\n  key?: string;\n  context?: object;\n}\n\nconst getMessageFromResponse = (error: HttpErrorResponse) => {\n  const responseBody = error.error;\n\n  if (\n    responseBody &&\n    responseBody.errors &&\n    responseBody.errors[0] &&\n    responseBody.errors[0].message\n  ) {\n    return responseBody.errors[0].message;\n  } else {\n    return undefined;\n  }\n};\n\nexport const parseError = (error: HttpErrorResponse): PlacesError => {\n  // TODO: should have more user-friendly messages\n  if (error.error instanceof ErrorEvent) {\n    // Client-side or network error.\n    return {\n      message: 'An unexpected error occurred',\n    };\n  } else if (error.status && `${error.status}`.startsWith('4')) {\n    // Backend returns unsuccessful response code.  In case of 400, try to get a message from the\n    // response.\n    return {\n      message: getMessageFromResponse(error) || `Error ${error.status}`,\n    };\n  } else {\n    // Backend returns 5xx\n    return {\n      message: 'An unexpected server error occurred',\n    };\n  }\n};\n","import { Injectable } from '@angular/core';\n\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Configuration for the {@link MapAPILoaderService}.\n */\nexport interface MapsAPIConfig {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `<script>` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `<script>` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   */\n  libraries?: string[];\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n@Injectable()\nexport class MapAPILoaderService {\n  private readonly scriptID: string = 'bbGoogleMapsApiScript';\n  private readonly callbackName: string = 'bbMapsAPILoader';\n  private readonly apiLoadPromiseName: string = 'bbMapsAPILoaderPromise';\n  private readonly windowRef: Window = window;\n  private readonly documentRef: Document = document;\n  private configValue: MapsAPIConfig = {};\n\n  get config() {\n    return this.configValue;\n  }\n\n  set config(config: MapsAPIConfig) {\n    this.configValue = config;\n  }\n\n  get loadAPIPromise() {\n    return (<any>this.windowRef)[this.apiLoadPromiseName];\n  }\n\n  private assignScriptLoadingPromise(scriptElem: HTMLElement) {\n    (<any>this.windowRef)[this.apiLoadPromiseName] = new Promise<void>(\n      (resolve: Function, reject: Function) => {\n        (<any>this.windowRef)[this.callbackName] = () => {\n          resolve();\n        };\n\n        scriptElem.onerror = (error: Event | string) => {\n          reject(error);\n        };\n      }\n    );\n  }\n\n  private getScriptSrc(callbackName: string): string {\n    const protocolType: GoogleMapsScriptProtocol =\n      (this.configValue && this.configValue.protocol) ||\n      GoogleMapsScriptProtocol.HTTPS;\n    let protocol = '';\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string =\n      this.configValue.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    // make sure we have places library for search component\n    const libraries: string[] = this.configValue.libraries || [];\n    if (libraries.indexOf('places') === -1) {\n      this.configValue.libraries = [...libraries, 'places'];\n    }\n\n    const queryParams: { [key: string]: string | string[] | undefined } = {\n      v: this.configValue.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this.configValue.apiKey,\n      client: this.configValue.clientId,\n      channel: this.configValue.channel,\n      libraries: this.configValue.libraries,\n      region: this.configValue.region,\n      language: this.configValue.language,\n    };\n    const params: string = Object.keys(queryParams)\n      .filter((key: string) => queryParams[key] !== undefined)\n      .filter((key: string) => {\n        // remove empty arrays\n        return (\n          !Array.isArray(queryParams[key]) ||\n          (Array.isArray(queryParams[key]) &&\n            (<string[]>queryParams[key]).length > 0)\n        );\n      })\n      .map((key: string) => {\n        let value = <string | string[]>queryParams[key];\n        if (Array.isArray(value)) {\n          // join arrays as comma seperated strings\n          value = value.join(',');\n        }\n        return `${key}=${value}`;\n      })\n      .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n\n  load(): Promise<void> {\n    const window = <any>this.windowRef;\n    if (window.google && window.google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n\n    if (this.loadAPIPromise) {\n      return this.loadAPIPromise;\n    }\n\n    const script = this.documentRef.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this.scriptID;\n    script.src = this.getScriptSrc(this.callbackName);\n\n    this.assignScriptLoadingPromise(script);\n    this.documentRef.body.appendChild(script);\n    return this.loadAPIPromise;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { PlacesHttpService } from '@backbase/data-ang/places';\n\nimport { Place } from '../model/place-model';\nimport { PlacesGetParams } from '../model/place-param-model';\n\n@Injectable()\nexport class PlacesService {\n  constructor(private readonly placesDataHttpService: PlacesHttpService) {}\n\n  getPlaces(params: PlacesGetParams): Observable<Place[]> {\n    return this.placesDataHttpService\n      .getPlaces(params)\n      .pipe(map((data) => data || []));\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  OnInit,\n} from '@angular/core';\nimport { MapAPILoaderService, MapsAPIConfig } from './map-api-loader.service';\nimport { SearchBoxComponent } from '@backbase/ui-ang/search-box';\n\n@Component({\n  selector: 'bb-map-search-ui',\n  templateUrl: './map-search.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MapSearchComponent implements OnInit {\n  /**\n   * Map autocomplete options object.\n   */\n  @Input() options: google.maps.places.AutocompleteOptions = {};\n  /**\n   * Map API configuration.\n   */\n  @Input() config: MapsAPIConfig = {};\n\n  /**\n   * EventEmitter for triggering a mapSearch event.\n   */\n  @Output()\n  readonly mapSearch: EventEmitter<google.maps.places.PlaceResult> = new EventEmitter<google.maps.places.PlaceResult>();\n\n  @ViewChild('bbMapsearch', { static: true }) searchBox:\n    | SearchBoxComponent<string>\n    | undefined;\n\n  constructor(private readonly loader: MapAPILoaderService) {}\n\n  onSearchButtonClick() {\n    const input = (<SearchBoxComponent<string>>this.searchBox).inputField;\n    if (!input) {\n      return;\n    }\n\n    // select first result and do the search\n    google.maps.event.trigger(input.nativeElement, 'focus', {});\n    google.maps.event.trigger(input.nativeElement, 'keydown', {\n      keyCode: 40, // arrow down\n      stopPropagation: () => undefined, // because these get called\n      preventDefault: () => undefined,\n    });\n    google.maps.event.trigger(input.nativeElement, 'keydown', { keyCode: 13 }); // enter\n  }\n\n  ngOnInit() {\n    this.loader.config = this.config;\n    this.loader.load().then(() => {\n      const input = (<SearchBoxComponent<string>>this.searchBox).inputField;\n      if (!input) {\n        return;\n      }\n\n      const autocomplete = new google.maps.places.Autocomplete(\n        input.nativeElement,\n        this.options\n      );\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n\n        if (place.geometry) {\n          this.mapSearch.emit(place);\n        }\n      });\n    });\n  }\n}\n","<div class=\"bb-block bb-block--md\">\n  <bb-search-box-ui\n    placeholder=\"Search Branch and Street Names\"\n    i18n-placeholder=\"Search for Location@@map-ui.search.placeholder\"\n    aria-label=\"Search Branch and Street Name\"\n    i18n-aria-label=\"\n      Search Branch and Street Name aria-label@@map.search.ui.aria-label\"\n    [showSearch]=\"true\"\n    (submit)=\"onSearchButtonClick()\"\n    #bbMapsearch\n  >\n  </bb-search-box-ui>\n</div>\n","import { PlaceAddress, Hour } from '@backbase/data-ang/places';\nexport { Place } from '@backbase/data-ang/places';\nexport interface PlaceItem {\n  id: string;\n  name?: string;\n  address?: PlaceAddress;\n  latitude: number;\n  longitude: number;\n  placeType?: string;\n  distance?: number;\n  hours?: Hour[];\n  services?: string[];\n}\n\nexport interface MarkerIcons {\n  [type: string]: string;\n}\n\nexport enum WeekDay {\n  Monday = 1,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n  Sunday,\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Hour } from '@backbase/data-ang/places';\n\n@Component({\n  selector: 'bb-work-times',\n  templateUrl: './work-times.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [DatePipe],\n})\nexport class WorkTimesComponent {\n  /**\n   * The day number based on WeekDay enum\n   */\n  @Input() day = 0;\n  /**\n   * Hours related to this day\n   */\n  @Input() hours: Hour[] = [];\n\n  constructor(private readonly datePipe: DatePipe) {}\n\n  toLocaleTime(hour: string): string {\n    return (\n      this.datePipe.transform(new Date('2000-01-01T' + hour), 'shortTime') ||\n      hour\n    );\n  }\n\n  isToday(day: number, today: number = new Date().getDay()) {\n    today = today || 7;\n    return day === today;\n  }\n}\n","<div\n  class=\"row bb-place-timetable\"\n  [ngClass]=\"{\n    'bb-text-semi-bold': this.isToday(day),\n    'bb-text-support': !this.isToday(day)\n  }\"\n>\n  <span\n    class=\"col-md-5\"\n    i18n=\"\n      Week day name|label for week day name based on work\n      times@@places.workTimes.dayName\"\n  >\n    { day, select, 1 {Monday} 2 {Tuesday} 3 {Wednesday} 4 {Thursday} 5 {Friday}\n    6 {Saturday} 7 {Sunday} }\n  </span>\n  <span class=\"col-md-7\">\n    <ng-container *ngIf=\"this.hours.length; else closed\">\n      <ng-container *ngFor=\"let workHour of this.hours; let i = index\"\n        >{{ this.toLocaleTime(workHour.open) }} -\n        {{ this.toLocaleTime(workHour.close) }}<br\n      /></ng-container>\n    </ng-container>\n  </span>\n</div>\n\n<ng-template #closed>\n  <span i18n=\"Closed|label for closed day@@places.workTimes.closed\"\n    >Closed</span\n  >\n</ng-template>\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { PlaceAddress, Hour } from '@backbase/data-ang/places';\n\nimport { PlaceItem, WeekDay } from '../../model/place-model';\n\n@Component({\n  selector: 'bb-place-details',\n  templateUrl: './place-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [DatePipe],\n})\nexport class PlaceDetailsComponent {\n  /**\n   * The place details to be shown.\n   */\n  @Input() place: PlaceItem | undefined;\n\n  // This returns array of weekDay numbers based on the WeekDay enum\n  get weekDay() {\n    const days = Object.keys(WeekDay);\n    return days.slice(0, days.length / 2).map((day) => +day);\n  }\n\n  getWorkTimes(day: number, hours: Hour[]): Hour[] {\n    return hours.filter((time: Hour) => time.day === day);\n  }\n\n  getFullAddress(address: PlaceAddress | undefined): string {\n    return address\n      ? encodeURI(`${address.postalCode} ${address.addressLine1}`)\n      : '';\n  }\n}\n","<div class=\"bb-place-details\">\n  <div\n    class=\"bb-block bb-block--md\"\n    aria-label=\"Get Directions on google maps\"\n    i18n-aria-label=\"\n      Get Directions button\n      aria-label@@place.details.get.direction.button.aria-label\"\n  >\n    <a\n      class=\"btn btn-sm btn-outline-primary\"\n      [href]=\"\n        'https://www.google.com/maps/dir//' +\n        this.getFullAddress(place && place.address)\n      \"\n      target=\"_blank\"\n      i18n=\"Get Directions|Get Directions redirect link@@places.directions.get\"\n      rel=\"noopener\"\n    >\n      <bb-icon-ui name=\"navigation\" size=\"md\"></bb-icon-ui>\n      Get Directions\n    </a>\n  </div>\n\n  <div class=\"bb-block bb-block--md\" *ngIf=\"place?.hours\">\n    <div class=\"bb-stack bb-stack--density-sm\">\n      <bb-icon-ui name=\"access-time\" class=\"bb-stack__item\"></bb-icon-ui>\n      <span\n        class=\"bb-stack__item bb-text-semi-bold\"\n        i18n=\"Opening Hours|label for Opening Hours@@places.label.openingHours\"\n      >\n        Opening Hours\n      </span>\n    </div>\n    <ul\n      class=\"bb-list bb-list--density-none\"\n      aria-label=\"Opening Hours\"\n      i18n-aria-label=\"\n        Opening Hours list\n        aria-label@@place.details.opening.hours.list.aria-label\"\n      tabindex=\"0\"\n    >\n      <li *ngFor=\"let day of weekDay\">\n        <bb-work-times\n          [day]=\"day\"\n          [hours]=\"this.getWorkTimes(day, place?.hours || [])\"\n        ></bb-work-times>\n      </li>\n    </ul>\n  </div>\n  <div *ngIf=\"place?.services?.length\">\n    <div class=\"bb-stack bb-stack--density-sm\">\n      <bb-icon-ui name=\"supervisor-account\" class=\"bb-stack__item\"></bb-icon-ui>\n      <span\n        class=\"bb-stack__item bb-text-semi-bold\"\n        i18n=\"\n          Available Services|label for Available\n          Services@@places.label.availableServices\"\n      >\n        Available Services\n      </span>\n    </div>\n    <div\n      aria-label=\"Available Services\"\n      i18n-aria-label=\"\n        Available Services list\n        aria-label@@place.details.available.services.list.aria-label\"\n      tabindex=\"0\"\n    >\n      <div\n        class=\"bb-place-services bb-text-support\"\n        *ngFor=\"let service of place?.services\"\n      >\n        {{ service | titlecase }}\n      </div>\n    </div>\n  </div>\n</div>\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbKeyboardAccessibility]',\n})\nexport class KeyboardAccessibilityDirective {\n  constructor(private element: ElementRef) {\n    element.nativeElement.tabIndex = 0;\n  }\n\n  // eslint-disable-next-line\n  @HostListener('keydown.enter', ['$event'])\n  // eslint-disable-next-line\n  @HostListener('keydown.space', ['$event'])\n  eventListener(event: any) {\n    this.element.nativeElement.click(event);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { Hour } from '@backbase/data-ang/places';\n\nimport {\n  defaultPlaceTypeIcon,\n  footInMeter,\n  meterInKM,\n  footInMile,\n} from '../../model/constants';\nimport { Place, PlaceItem } from '../../model/place-model';\nimport { PlaceTypes } from '../../services/places-journey-config.service';\n\n@Component({\n  selector: 'bb-places-list',\n  templateUrl: './places-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [DatePipe],\n})\nexport class PlacesListComponent {\n  /**\n   * Map radius.\n   */\n  @Input() radius = 1;\n  /**\n   * List of locations to be rendered.\n   */\n  @Input()\n  set locations(locations: Place[]) {\n    this.places = locations\n      .map((place) => ({\n        ...place,\n        distance: this.calculateDistance(place),\n      }))\n      .sort((a, b) => (a.distance || 0) - (b.distance || 0));\n  }\n  /**\n   * The Place selected by user\n   */\n  @Input() selectedPlaceId: string | undefined;\n  /**\n   * The current position retrieved by geolocation html5 api\n   */\n  @Input() currentPosition: google.maps.LatLngLiteral | undefined;\n  /**\n   * Use metric system for displaying distances.\n   */\n  @Input() isMetric = true;\n  /**\n   * Provide Place Types\n   */\n  @Input() placeTypes: PlaceTypes = {};\n  /**\n   * EventEmitter for triggering a place selection update event.\n   */\n  @Output() readonly selected: EventEmitter<PlaceItem> =\n    new EventEmitter<PlaceItem>();\n\n  @ViewChild('transM', { static: true }) transM: ElementRef | undefined;\n  @ViewChild('transKm', { static: true }) transKm: ElementRef | undefined;\n  @ViewChild('transFt', { static: true }) transFt: ElementRef | undefined;\n  @ViewChild('transMi', { static: true }) transMi: ElementRef | undefined;\n\n  places: PlaceItem[] = [];\n\n  constructor(private readonly datePipe: DatePipe) {}\n\n  /**\n   * Uses Google geometry library to calculate distance between two points\n   * Returns undefined if google library or current position is undefined\n   * Returns distance in meters or feet, depending on measurment system property in the widget\n   */\n  private calculateDistance(place: PlaceItem): number | undefined {\n    if (typeof google === 'undefined' || this.currentPosition === undefined) {\n      return undefined;\n    }\n\n    const centerCoords = new google.maps.LatLng(\n      this.currentPosition.lat,\n      this.currentPosition.lng\n    );\n    const itemCoords = new google.maps.LatLng(place.latitude, place.longitude);\n    const distance = google.maps.geometry.spherical.computeDistanceBetween(\n      centerCoords,\n      itemCoords\n    );\n    return this.isMetric ? distance : distance * footInMeter;\n  }\n\n  private isStillOpen(hour: string, currentDate: Date = new Date()): boolean {\n    const [closeHour, closeMinute] = hour\n      .split(':')\n      .map((timePart) => +timePart);\n    const currentHour = currentDate.getHours();\n    const currentMinute = currentDate.getMinutes();\n\n    return (\n      currentHour < closeHour ||\n      (currentHour === closeHour && currentMinute < closeMinute)\n    );\n  }\n\n  private getDistanceUnits(): string[] {\n    if (this.isMetric) {\n      return [\n        (<ElementRef>this.transM).nativeElement.textContent,\n        (<ElementRef>this.transKm).nativeElement.textContent,\n      ];\n    }\n    return [\n      (<ElementRef>this.transFt).nativeElement.textContent,\n      (<ElementRef>this.transMi).nativeElement.textContent,\n    ];\n  }\n\n  onListItemClick(isOpen: boolean, place: PlaceItem): void {\n    this.selected.emit(\n      !isOpen\n        ? place\n        : {\n            id: '',\n            latitude: 0,\n            longitude: 0,\n          }\n    );\n    return;\n  }\n\n  getClosingHour(\n    hours: Hour[] | undefined,\n    currentDate: Date = new Date()\n  ): string | undefined {\n    if (!hours) {\n      return;\n    }\n\n    // in specs, Sunday is 7 and in JS it is 0, rest of the days match\n    const currentDay = currentDate.getDay() || 7;\n\n    const todayHours = hours.find((time: Hour) => time.day === currentDay);\n    if (!todayHours) {\n      return;\n    }\n\n    return (\n      (this.isStillOpen(todayHours.close, currentDate) &&\n        this.datePipe.transform(\n          new Date('2000-01-01T' + todayHours.close),\n          'shortTime'\n        )) ||\n      undefined\n    );\n  }\n\n  getPlaceTypeIcon(type: string | undefined): string {\n    return type && this.placeTypes[type] && this.placeTypes[type].iconName\n      ? <string>this.placeTypes[type].iconName\n      : defaultPlaceTypeIcon;\n  }\n\n  formatDistance(distance: number) {\n    const distanceUnit = this.getDistanceUnits();\n    const distanceUnitRatio = this.isMetric ? meterInKM : footInMile;\n    let convertedDistance = Math.round(distance);\n    let unit = distanceUnit[0];\n    if (distance >= distanceUnitRatio) {\n      unit = distanceUnit[1];\n      convertedDistance /= distanceUnitRatio;\n      if (convertedDistance >= 10) {\n        // for distance over 10 km/mi show only integers\n        convertedDistance = Math.round(convertedDistance);\n      } else {\n        // for distance more than 1 km/mi but smaller than 10 km/mi use one decimal point\n        convertedDistance = Math.round(convertedDistance * 10) / 10;\n      }\n    }\n    return `${convertedDistance} ${unit}`;\n  }\n}\n","<!-- Places List -->\n<bb-collapsible-accordion-ui\n  [closeOthers]=\"true\"\n  class=\"bb-list bb-list--density-md\"\n>\n  <bb-collapsible-ui\n    [isOpen]=\"place.id === selectedPlaceId\"\n    class=\"bb-list__item d-block\"\n    role=\"tree\"\n    *ngFor=\"let place of places; let i = index\"\n  >\n    <ng-template bbCollapsibleHeader let-isOpen=\"isOpen\">\n      <div\n        role=\"treeitem\"\n        bbKeyboardAccessibility\n        [attr.aria-expanded]=\"isOpen\"\n        (click)=\"this.onListItemClick(isOpen, place)\"\n        class=\"bb-block\"\n        [class.bb-block--md]=\"isOpen\"\n      >\n        <div class=\"bb-stack bb-place-info\">\n          <div class=\"bb-inline-stack bb-inline-stack--density-sm\">\n            <bb-icon-ui\n              [name]=\"this.getPlaceTypeIcon(place.placeType)\"\n              size=\"md\"\n              class=\"bb-inline-stack__item\"\n            ></bb-icon-ui>\n            <span class=\"bb-text-semi-bold\">{{ place.name }}</span>\n          </div>\n          <bb-icon-ui\n            class=\"bb-stack__item bb-stack__item--push-right\"\n            [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"\n            size=\"md\"\n          >\n          </bb-icon-ui>\n        </div>\n        <div class=\"bb-place-info__subtitle bb-subtitle\">\n          <div *ngIf=\"place.address\">\n            <span>{{ place.address.addressLine1 }}</span>\n            <span *ngIf=\"place.address.addressLine2\"\n              >,\n              <span>{{ place.address.addressLine2 }}</span>\n            </span>\n            <div *ngIf=\"place.address.postalCode\">\n              {{ place.address.postalCode }}\n            </div>\n          </div>\n          <div\n            class=\"bb-text-support bb-inline-stack\"\n            *ngIf=\"place.distance !== undefined\"\n          >\n            <bb-icon-ui\n              name=\"near-me\"\n              size=\"sm\"\n              class=\"bb-inline-stack__item\"\n            ></bb-icon-ui>\n            <span>{{ this.formatDistance(place.distance) }}</span>\n          </div>\n          <div\n            class=\"bb-text-support\"\n            *ngIf=\"this.getClosingHour(place.hours) as hour\"\n          >\n            <span\n              i18n=\"\n                Open Today until|label for open today\n                until@@places.openToday.until\"\n              >Open Today until\n            </span>\n            <span>{{ hour }}</span>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n\n    <ng-template bbCollapsibleBody>\n      <bb-place-details [place]=\"place\"></bb-place-details>\n    </ng-template>\n  </bb-collapsible-ui>\n</bb-collapsible-accordion-ui>\n\n<span #transM class=\"ng-cloak\" i18n=\"m|Label for meters@@places.distance.meter\"\n  >m</span\n>\n<span\n  #transKm\n  class=\"ng-cloak\"\n  i18n=\"km|Label for kilometers@@places.distance.kilometer\"\n  >km</span\n>\n<span #transFt class=\"ng-cloak\" i18n=\"ft|Label for feet@@places.distance.foot\"\n  >ft</span\n>\n<span #transMi class=\"ng-cloak\" i18n=\"mi|Label for miles@@places.distance.mile\"\n  >mi</span\n>\n","import { Injectable } from '@angular/core';\nimport { MapAPILoaderService, MapsAPIConfig } from './map-api-loader.service';\nimport { MarkerOptions, Marker } from './map.component';\n\n/**\n * Handles the communication with the Google Maps Javascript\n * API v3\n */\n@Injectable()\nexport class MapHelpersService {\n  private map: google.maps.Map | undefined;\n\n  constructor(private readonly loader: MapAPILoaderService) {}\n\n  createMap(\n    el: HTMLElement,\n    mapOptions: google.maps.MapOptions,\n    mapConfig: MapsAPIConfig = {}\n  ): Promise<void> {\n    this.loader.config = mapConfig;\n    return this.loader.load().then(() => {\n      this.map = new google.maps.Map(el, mapOptions);\n    });\n  }\n\n  setMapOptions(options: google.maps.MapOptions) {\n    (<google.maps.Map>this.map).setOptions(options);\n  }\n\n  /**\n   * Creates a google map marker with the map context\n   */\n  createMarker(\n    options: MarkerOptions = <MarkerOptions>{},\n    addToMap: boolean = true\n  ): Marker {\n    if (addToMap) {\n      options.map = this.map;\n    }\n    return new google.maps.Marker(options) as Marker;\n  }\n\n  createInfoWindow(\n    options?: google.maps.InfoWindowOptions\n  ): google.maps.InfoWindow {\n    return new google.maps.InfoWindow(options);\n  }\n\n  openInfoWindow(\n    infoWindow: google.maps.InfoWindow,\n    marker: google.maps.Marker\n  ) {\n    return infoWindow.open(this.map, marker);\n  }\n\n  onMapEvent(eventName: string, callback: Function) {\n    (<google.maps.Map>this.map).addListener(eventName, (arg) => callback(arg));\n  }\n\n  setCenter(latLng: google.maps.LatLngLiteral) {\n    return (<google.maps.Map>this.map).setCenter(latLng);\n  }\n\n  getZoom(): number {\n    return (<google.maps.Map>this.map).getZoom();\n  }\n\n  getBounds(): google.maps.LatLngBounds | null | undefined {\n    return (<google.maps.Map>this.map).getBounds();\n  }\n\n  getMapTypeId(): google.maps.MapTypeId | string {\n    return (<google.maps.Map>this.map).getMapTypeId();\n  }\n\n  setZoom(zoom: number) {\n    return (<google.maps.Map>this.map).setZoom(zoom);\n  }\n\n  getCenter(): google.maps.LatLng {\n    return (<google.maps.Map>this.map).getCenter();\n  }\n\n  panTo(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    return (<google.maps.Map>this.map).panTo(latLng);\n  }\n\n  panBy(x: number, y: number) {\n    return (<google.maps.Map>this.map).panBy(x, y);\n  }\n\n  fitBounds(\n    latLng: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ) {\n    return (<google.maps.Map>this.map).fitBounds(latLng);\n  }\n\n  panToBounds(\n    latLng: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ) {\n    return (<google.maps.Map>this.map).panToBounds(latLng);\n  }\n\n  /**\n   * Triggers the given event name on the map instance.\n   */\n  triggerMapEvent(eventName: string) {\n    return google.maps.event.trigger(this.map, eventName);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport { MapHelpersService } from './map-helpers.service';\nimport { MapsAPIConfig } from './map-api-loader.service';\n\nexport interface MapDetails {\n  center: google.maps.LatLng;\n  bounds: google.maps.LatLngBounds | null | undefined;\n  zoom: number;\n}\n\nexport interface MarkerOptions extends google.maps.MarkerOptions {\n  locationId: string;\n}\n\nexport interface Marker extends google.maps.Marker {\n  locationId: string;\n}\n\n@Component({\n  selector: 'bb-map-ui',\n  templateUrl: './map.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MapComponent implements OnInit {\n  /**\n   * Map options object.\n   */\n  @Input() options: google.maps.MapOptions = {};\n  /**\n   * Map API configuration.\n   */\n  @Input() config: MapsAPIConfig = {};\n  /**\n   * EventEmitter for triggering a mapReady event.\n   */\n  @Output() readonly mapReady: EventEmitter<MapComponent> =\n    new EventEmitter<MapComponent>();\n\n  @ViewChild('bbMapContainer', { static: true }) mapContainer:\n    | ElementRef<HTMLElement>\n    | undefined;\n\n  constructor(private readonly helpers: MapHelpersService) {}\n\n  get mapHelpers(): MapHelpersService {\n    return this.helpers;\n  }\n\n  ngOnInit() {\n    this.helpers\n      .createMap(\n        (<ElementRef<HTMLElement>>this.mapContainer).nativeElement,\n        this.options,\n        this.config\n      )\n      .then(() => this.mapReady.emit(this));\n  }\n}\n","<ng-content select=\"[bbMapHeader]\"></ng-content>\n<div #bbMapContainer class=\"bb-map\"></div>\n<ng-content select=\"[bbMapFooter]\"></ng-content>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { MapHelpersService } from '../../components/bb-map-ui/map-helpers.service';\nimport { MapComponent, Marker } from '../../components/bb-map-ui/map.component';\nimport { MarkerIcons, Place, PlaceItem } from '../../model/place-model';\nimport { PlacesGetParams } from '../../model/place-param-model';\n\ndeclare var $localize: any;\n@Component({\n  selector: 'bb-map-wrapper',\n  templateUrl: './map-wrapper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MapWrapperComponent implements OnChanges {\n  /**\n   * API key need for the google maps to work.\n   */\n  @Input() apiKey = '';\n  /**\n   * Map config.\n   */\n  @Input() config = {};\n  /**\n   * Map zoom.\n   */\n  @Input() mapZoom = 0;\n  /**\n   * Latitude for the coordinates.\n   */\n  @Input() latitude = 0;\n  /**\n   * Longitude for the coordinates.\n   */\n  @Input() longitude = 0;\n  /**\n   * Info window should be displayed after clicking on marker.\n   */\n  @Input() enableInfoWindow = false;\n  /**\n   * Object to describe the map marker icon.\n   */\n  @Input() icons: MarkerIcons | null = {};\n  @Input()\n  set locations(locations: Place[]) {\n    this.places = locations;\n    if (this.mapHelpers) {\n      this.drawMarkers();\n    }\n  }\n  @Input()\n  set selectedPlaceId(id: string | undefined) {\n    this.selectedId = id;\n    if (this.mapHelpers) {\n      this.drawMarkers();\n    }\n  }\n  /**\n   * EventEmitter for triggering a update event.\n   */\n  @Output() readonly update: EventEmitter<PlacesGetParams> =\n    new EventEmitter<PlacesGetParams>();\n  /**\n   * EventEmitter for place selection update event.\n   */\n  @Output() readonly selected: EventEmitter<PlaceItem> =\n    new EventEmitter<PlaceItem>();\n  /**\n   * EventEmitter for triggering a locate event.\n   */\n  @Output() readonly locate: EventEmitter<google.maps.LatLngLiteral> =\n    new EventEmitter<google.maps.LatLngLiteral>();\n  /**\n   * EventEmitter for triggering a mapReady event.\n   */\n  @Output() readonly mapReady: EventEmitter<undefined> = new EventEmitter();\n\n  @ViewChild('bbMapInfoWindowContent') template:\n    | ElementRef<HTMLElement>\n    | undefined;\n\n  private currentLocationIconOptions: google.maps.Symbol | undefined;\n  private mapHelpers: MapHelpersService | undefined;\n\n  selectedId: string | undefined;\n  places: Place[] | undefined;\n  markers: Marker[] = [];\n  infoWindow: google.maps.InfoWindow | undefined;\n  private getInfoWindowContent(placeId: string) {\n    const wrapperElement = (<ElementRef<HTMLElement>>this.template)\n      .nativeElement;\n    const template = wrapperElement.querySelector(\n      `div[data-place-id='${placeId}']`\n    );\n    return template ? template.innerHTML : '';\n  }\n\n  private getDistance(\n    bounds: google.maps.LatLngBounds | null | undefined\n  ): number {\n    if (!bounds) {\n      return 0;\n    }\n\n    return (\n      google.maps.geometry.spherical.computeDistanceBetween(\n        bounds.getNorthEast(),\n        bounds.getSouthWest()\n      ) / 1000\n    );\n  }\n\n  private emitMapUpdate() {\n    if (!this.mapHelpers) {\n      return;\n    }\n\n    const center = this.mapHelpers.getCenter();\n\n    this.update.emit({\n      latitude: center.lat(),\n      longitude: center.lng(),\n      radius: Math.ceil(this.getDistance(this.mapHelpers.getBounds()) / 2),\n    });\n  }\n\n  private setCurrentLocationMarker(location: google.maps.LatLngLiteral) {\n    if (!this.mapHelpers) {\n      return;\n    }\n\n    this.mapHelpers.createMarker({\n      position: location,\n      clickable: false,\n      icon: this.currentLocationIconOptions,\n      locationId: '',\n    });\n  }\n\n  private markerClicklistener(marker: Marker, place: PlaceItem) {\n    const helpers = <MapHelpersService>this.mapHelpers;\n\n    if (this.enableInfoWindow) {\n      if (this.infoWindow) {\n        this.infoWindow.close();\n      }\n\n      const content = this.getInfoWindowContent(place.id);\n      this.infoWindow = helpers.createInfoWindow({ content });\n      helpers.openInfoWindow(this.infoWindow, marker);\n    }\n\n    if (this.mapHelpers) {\n      if (marker.locationId === this.selectedId) {\n        this.selected.emit({\n          id: '',\n          latitude: 0,\n          longitude: 0,\n        });\n      } else {\n        this.selected.emit(\n          (<Place[]>this.places).find(\n            (location) => location.id === marker.locationId\n          )\n        );\n      }\n    }\n  }\n\n  private drawMarkers() {\n    if (!Array.isArray(this.places)) {\n      return;\n    }\n\n    // markers that are not needed anymore, should be cleared\n    const placeIds = this.places.map((place) => place.id);\n    const newMarkerList: Marker[] = [];\n    this.markers.forEach((marker) => {\n      if (placeIds.includes(marker.locationId)) {\n        newMarkerList.push(marker);\n      } else {\n        // eslint-disable-next-line\n        marker.setMap(null);\n      }\n    });\n    this.markers = newMarkerList;\n\n    // places markers on map\n    this.places.forEach((place) => {\n      let marker: Marker | undefined = this.markers.find(\n        (item) => item.locationId === place.id\n      );\n      if (marker === undefined) {\n        marker = this.createMarker(place);\n        this.markers.push(marker);\n        marker.addListener('click', () =>\n          this.markerClicklistener(<Marker>marker, place)\n        );\n      }\n\n      if (this.selectedId && placeIds.includes(this.selectedId)) {\n        if (place.id === this.selectedId) {\n          marker.setOpacity(1);\n          marker.setIcon({\n            url: (<google.maps.Icon>marker.getIcon()).url,\n            scaledSize: new google.maps.Size(60, 60),\n          });\n        } else {\n          marker.setOpacity(0.5);\n          marker.setIcon({\n            url: (<google.maps.Icon>marker.getIcon()).url,\n          });\n        }\n      } else {\n        marker.setOpacity(1);\n        marker.setIcon({\n          url: (<google.maps.Icon>marker.getIcon()).url,\n        });\n      }\n    });\n  }\n\n  private createMarker(place: PlaceItem) {\n    const helpers = <MapHelpersService>this.mapHelpers;\n\n    const position = {\n      lat: place.latitude,\n      lng: place.longitude,\n    };\n\n    // try to find place type icon or try to use fallback icon\n    const defaultIcon =\n      this.icons && Object.keys(this.icons).length\n        ? this.icons[Object.keys(this.icons)[0]]\n        : undefined;\n    const iconUrl =\n      place.placeType && this.icons && this.icons[place.placeType]\n        ? this.icons[place.placeType]\n        : defaultIcon;\n\n    let marker = {\n      position,\n      locationId: place.id,\n      title: $localize`:@@places.map.marker.title:map marker`,\n    };\n\n    // if there is no icon at all, use maps default pin\n    if (iconUrl) {\n      marker = {\n        ...marker,\n        ...{\n          icon: {\n            url: iconUrl,\n          },\n        },\n      };\n    }\n\n    return helpers.createMarker(marker);\n  }\n\n  /**\n   * List of locations to be rendered.\n   */\n  get locations(): Place[] {\n    return this.places || [];\n  }\n\n  /**\n   * Selected place id.\n   */\n  get selectedPlaceId() {\n    return this.selectedId;\n  }\n\n  get options(): google.maps.MapOptions {\n    return {\n      center: {\n        lat: this.latitude,\n        lng: this.longitude,\n      },\n      zoom: this.mapZoom,\n      disableDefaultUI: true, // a way to quickly hide all controls\n      zoomControl: true, // allow zoom only\n      styles: [\n        {\n          featureType: 'poi',\n          stylers: [{ visibility: 'off' }],\n        },\n      ],\n    };\n  }\n\n  setMapOptions(component: MapComponent) {\n    this.mapHelpers = component.mapHelpers;\n    this.mapHelpers.setMapOptions({\n      mapTypeControlOptions: {\n        mapTypeIds: [google.maps.MapTypeId.ROADMAP],\n      },\n    });\n\n    this.mapHelpers.onMapEvent('idle', () => this.emitMapUpdate());\n\n    this.currentLocationIconOptions = {\n      path: google.maps.SymbolPath.CIRCLE,\n      fillColor: '#4285F4',\n      fillOpacity: 1,\n      scale: 6,\n      strokeColor: 'white',\n      strokeWeight: 2,\n    };\n\n    if ('geolocation' in navigator) {\n      const helpers = this.mapHelpers;\n      navigator.geolocation.getCurrentPosition((location) => {\n        const position = {\n          lat: location.coords.latitude,\n          lng: location.coords.longitude,\n        };\n        helpers.setCenter(position);\n        this.setCurrentLocationMarker(position);\n        this.locate.emit(position);\n      });\n    }\n\n    // Everything set, emit that map is ready\n    this.mapReady.emit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.mapHelpers) {\n      return;\n    }\n\n    if (changes.latitude || changes.longitude) {\n      this.mapHelpers.setCenter({\n        lat: changes.latitude ? changes.latitude.currentValue : this.latitude,\n        lng: changes.longitude\n          ? changes.longitude.currentValue\n          : this.longitude,\n      });\n    }\n  }\n}\n","<bb-map-ui\n  [options]=\"this.options\"\n  [config]=\"this.config\"\n  (mapReady)=\"this.setMapOptions($event)\"\n></bb-map-ui>\n\n<div hidden #bbMapInfoWindowContent>\n  <div [attr.data-place-id]=\"place.id\" *ngFor=\"let place of this.places\">\n    <p class=\"bb-text-semi-bold\">{{ place.name }}</p>\n    <div>\n      {{ place.address?.addressLine1 }}, {{ place.address?.postalCode }}\n      {{ place.address?.addressLine2 }}\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, switchMap, catchError } from 'rxjs/operators';\n\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\n\nimport {\n  defaultPlaceTypeMarkerURI,\n  defaultPlaceType,\n} from '../model/constants';\nimport { Place, MarkerIcons, PlaceItem } from '../model/place-model';\nimport { PlacesGetParams } from '../model/place-param-model';\nimport { parseError, PlacesError } from '../model/place-error-model';\nimport { PlacesService } from '../services/places.service';\nimport {\n  MapsAPIConfig,\n  MapAPILoaderService,\n} from '../components/bb-map-ui/map-api-loader.service';\n\nimport {\n  PlacesJourneyConfigService,\n  PlacesMeasurementSystem,\n} from '../services/places-journey-config.service';\n\n@Component({\n  selector: 'bb-places-view',\n  templateUrl: './places-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [MapAPILoaderService],\n})\nexport class PlacesViewComponent implements OnInit {\n  // This is required to show info window only on mobile screen\n  @ViewChild('groupBtns')\n  set groupBtns(elRef: ElementRef | undefined) {\n    this.groupBtnRef = elRef;\n    setTimeout(() => {\n      if (!this.groupBtnRef) {\n        return;\n      }\n      this.smallScreen =\n        window.getComputedStyle(this.groupBtnRef.nativeElement).display !==\n        'none';\n    }, 0);\n  }\n\n  private groupBtnRef: ElementRef | undefined;\n  private readonly mapParamsSubject = new Subject<PlacesGetParams>();\n  private readonly mapParams = this.mapParamsSubject.asObservable();\n  readonly selectedPlaceId = new Subject<string>();\n  private readonly resolveAsset: AssetsResolver =\n    this.assetsService.createAssetsResolver({\n      widgetName: 'bb-places-journey-ang',\n      getURIFromAssetID: (placeType: string) => {\n        const found = this.placeTypes.find((type) => type === placeType);\n        return found\n          ? this.config.placeTypes[found].markerUrl || defaultPlaceTypeMarkerURI\n          : defaultPlaceTypeMarkerURI;\n      },\n    });\n  private mapConfigObject: MapsAPIConfig = {};\n  private geocoder: google.maps.Geocoder | undefined;\n\n  readonly locations: Observable<Place[]> = this.mapParams.pipe(\n    filter((params) => params !== undefined),\n    switchMap((params) => this.service.getPlaces(params)),\n    map((data) =>\n      this.config.limitList ? data.slice(0, this.config.limitList) : data\n    ),\n    catchError((error: HttpErrorResponse) => {\n      this.handleError(error);\n      return of([]);\n    })\n  );\n\n  error: PlacesError | undefined;\n  selectedView: 'list' | 'map' = 'list';\n  smallScreen: boolean | undefined;\n  currentLocation: string | undefined;\n  currentPosition: google.maps.LatLngLiteral | undefined;\n  latitude = 0;\n  longitude = 0;\n  radius = 1;\n  limitList: number | undefined;\n  types: string[] = [];\n\n  constructor(\n    readonly config: PlacesJourneyConfigService,\n    private readonly service: PlacesService,\n    private readonly assetsService: AssetsService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly loader: MapAPILoaderService\n  ) {\n    this.latitude = this.config.latitude;\n    this.longitude = this.config.longitude;\n    this.radius = this.config.radius;\n    this.limitList = this.config.limitList;\n  }\n\n  private loadApi(mapConfig: MapsAPIConfig = {}): Promise<void> {\n    this.loader.config = mapConfig;\n    return this.loader.load().then(() => {\n      this.geocoder = new google.maps.Geocoder();\n      return;\n    });\n  }\n\n  private getCurrentLocation() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((location) => {\n        this.currentPosition = {\n          lat: location.coords.latitude,\n          lng: location.coords.longitude,\n        };\n        if (!this.geocoder) {\n          return;\n        }\n        this.geocoder.geocode(\n          { location: this.currentPosition },\n          (\n            results: google.maps.GeocoderResult[],\n            status: google.maps.GeocoderStatus\n          ) => {\n            if (status === google.maps.GeocoderStatus.OK && results[0]) {\n              const route = results[0].address_components.filter((item) =>\n                item.types.find((type) => type === 'route')\n              );\n              this.currentLocation =\n                route[0].long_name || results[0].formatted_address;\n            }\n          }\n        );\n      });\n    }\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    this.error = parseError(error);\n  }\n\n  get groupBtns(): ElementRef<any> | undefined {\n    return this.groupBtnRef;\n  }\n\n  get mapConfig(): MapsAPIConfig {\n    return this.mapConfigObject;\n  }\n\n  get placeTypes(): string[] {\n    return Object.keys(this.config.placeTypes);\n  }\n\n  get icons(): Observable<MarkerIcons> {\n    const types: string[] = [defaultPlaceType].concat(this.placeTypes);\n    return combineLatest(types.map((type) => this.resolveAsset(type))).pipe(\n      map((assets) => {\n        const icons: MarkerIcons = {};\n        for (let i = 0; i < assets.length; i++) {\n          icons[types[i]] = assets[i];\n        }\n        return icons;\n      })\n    );\n  }\n\n  get isMetric(): boolean {\n    return this.config.measurementSystem !== PlacesMeasurementSystem.METRIC;\n  }\n\n  filterTypes(values: { [type: string]: boolean }): string[] {\n    const types: string[] = [];\n    Object.keys(values).forEach((key: string) => {\n      if (values[key]) {\n        types.push(key);\n      }\n    });\n\n    return types;\n  }\n\n  locationUpdate(params: PlacesGetParams) {\n    this.latitude = params.latitude;\n    this.longitude = params.longitude;\n    this.radius = params.radius || this.config.radius;\n    this.types = params.types || this.types;\n    this.cd.detectChanges();\n    this.mapParamsSubject.next({\n      ...params,\n      radius: this.config.radius,\n      types: this.types,\n    });\n  }\n\n  handleTypeSearch(types: string[]) {\n    this.locationUpdate({\n      latitude: this.latitude,\n      longitude: this.longitude,\n      radius: this.radius,\n      types,\n    });\n  }\n\n  handleMapSearch(place: google.maps.places.PlaceResult) {\n    if (!place.geometry) {\n      return;\n    }\n\n    this.locationUpdate({\n      latitude: place.geometry.location.lat(),\n      longitude: place.geometry.location.lng(),\n      radius: this.config.radius,\n      types: this.types,\n    });\n  }\n\n  updatePlaceSelection(place: PlaceItem) {\n    this.selectedPlaceId.next(place.id);\n  }\n\n  onMapReady() {\n    // Map is there, so we don't use list limit property to determine list size. Map's zoom and radius parameter are driving it from now on\n    this.limitList = undefined;\n\n    this.locationUpdate({\n      latitude: this.latitude,\n      longitude: this.longitude,\n      radius: this.radius,\n      types: this.types,\n    });\n  }\n\n  ngOnInit() {\n    this.mapConfigObject = {\n      apiKey: this.config.apiKey,\n      libraries: ['geometry'],\n    };\n\n    this.loadApi(this.mapConfigObject).then(() => {\n      this.getCurrentLocation();\n    });\n\n    this.locationUpdate({\n      latitude: this.config.latitude,\n      longitude: this.config.longitude,\n      radius: this.config.radius,\n    });\n  }\n}\n","<div\n  [ngClass]=\"{\n    'bb-heading-widget bb-heading-widget--de-elevated': config.deElevatedHeader\n  }\"\n>\n  <bb-header-ui\n    headingType=\"h1\"\n    [headingClasses]=\"\n      config.deElevatedHeader\n        ? 'bb-heading-widget__heading'\n        : 'bb-heading-widget__heading px-0 pb-5'\n    \"\n    heading=\"Find Branches and ATMs\"\n    i18n-heading=\"\n      Find Branches and ATMs|Heading for the Places\n      journey@@places.journey.heading.text\"\n  ></bb-header-ui>\n  <ng-content></ng-content>\n</div>\n\n<div\n  [ngClass]=\"{ 'container--drag-up container-fluid': config.deElevatedHeader }\"\n>\n  <ng-container\n    *ngTemplateOutlet=\"placesContainer; context: { places: locations | async }\"\n  ></ng-container>\n</div>\n\n<ng-template #placesContainer let-places=\"places\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"row\" [class.bb-stack--center]=\"this.error\">\n        <ng-container *ngIf=\"!this.error; else errorState\">\n          <div class=\"col-md-6\">\n            <bb-map-search-ui\n              [config]=\"this.mapConfig\"\n              (mapSearch)=\"this.handleMapSearch($event)\"\n            ></bb-map-search-ui>\n\n            <div\n              class=\"bb-inline-stack bb-text-support bb-block bb-block--md\"\n              *ngIf=\"this.currentLocation\"\n            >\n              <bb-icon-ui\n                name=\"my-location\"\n                class=\"bb-inline-stack__item\"\n              ></bb-icon-ui>\n              <span\n                class=\"bb-inline-stack__item\"\n                i18n=\"\n                  Current Location|current location message for\n                  places@@places.state.currentLocation\"\n                >Current Location - {{ this.currentLocation }}</span\n              >\n            </div>\n\n            <form\n              #placeTypeFilterForm=\"ngForm\"\n              class=\"bb-block bb-block--md bb-stack bb-stack--density-xl\"\n              *ngIf=\"places && places.length\"\n            >\n              <bb-input-checkbox-ui\n                *ngFor=\"let type of this.placeTypes; let i = index\"\n                ngModel\n                [name]=\"type\"\n                class=\"bb-stack__item\"\n                (change)=\"\n                  this.handleTypeSearch(\n                    this.filterTypes(placeTypeFilterForm.value)\n                  )\n                \"\n              >\n                <span i18n=\"filters|filters for types@@places.filter.types\"\n                  >{type, select, atm {ATM's} branch {Branches}}</span\n                >\n              </bb-input-checkbox-ui>\n            </form>\n\n            <div\n              class=\"bb-text-align-center bb-block bb-block--md d-md-none\"\n              #groupBtns\n            >\n              <div\n                class=\"btn-group btn-group-toggle bb-block bb-block--full-width\"\n              >\n                <button\n                  class=\"btn btn-secondary\"\n                  [ngClass]=\"{ active: this.selectedView === 'list' }\"\n                  name=\"list\"\n                  (click)=\"this.selectedView = 'list'\"\n                  i18n=\"List view button|List view @@places.toggle.view.list\"\n                >\n                  List\n                </button>\n                <button\n                  class=\"btn btn-secondary\"\n                  [ngClass]=\"{ active: this.selectedView === 'map' }\"\n                  (click)=\"this.selectedView = 'map'\"\n                  i18n=\"Map view Button|Map view @@places.toggle.view.map\"\n                >\n                  Map\n                </button>\n              </div>\n            </div>\n\n            <div [hidden]=\"this.selectedView === 'map'\" class=\"d-md-block\">\n              <div\n                class=\"bb-places-list\"\n                [ngClass]=\"\n                  places && places.length ? '' : 'bb-places-list--empty'\n                \"\n              >\n                <ng-container *ngIf=\"places; else loadingState\">\n                  <ng-container *ngIf=\"places.length; else emptyState\">\n                    <bb-places-list\n                      [radius]=\"this.config.radius\"\n                      [locations]=\"places\"\n                      [selectedPlaceId]=\"\n                        (this.selectedPlaceId | async) || undefined\n                      \"\n                      [currentPosition]=\"this.currentPosition\"\n                      [isMetric]=\"this.isMetric\"\n                      [placeTypes]=\"this.config.placeTypes\"\n                      (selected)=\"this.updatePlaceSelection($event)\"\n                    ></bb-places-list>\n                  </ng-container>\n                </ng-container>\n              </div>\n            </div>\n          </div>\n          <div\n            class=\"col-md-6 d-md-block\"\n            [hidden]=\"this.selectedView === 'list'\"\n          >\n            <bb-map-wrapper\n              [apiKey]=\"this.config.apiKey\"\n              [config]=\"this.mapConfig\"\n              [mapZoom]=\"this.config.mapZoom\"\n              [latitude]=\"this.latitude\"\n              [longitude]=\"this.longitude\"\n              [icons]=\"this.icons | async\"\n              [locations]=\"places\"\n              [enableInfoWindow]=\"!!this.smallScreen\"\n              [selectedPlaceId]=\"(this.selectedPlaceId | async) || undefined\"\n              (update)=\"this.locationUpdate($event)\"\n              (selected)=\"this.updatePlaceSelection($event)\"\n              (mapReady)=\"this.onMapReady()\"\n            ></bb-map-wrapper>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<!-- Empty List -->\n<ng-template #emptyState>\n  <bb-empty-state-ui\n    class=\"bb-text-align-center\"\n    i18n-title=\"\n      No locations found|Title of a message that is shown when there are no\n      places@@places.state.noResultsFound.title\"\n    i18n-subtitle=\"\n      We could not find any items in this area. Try moving the map or searching\n      for a city or branch|Subtitle of a message that is shown when there are no\n      places@@places.state.noResultsFound.subtitle\"\n    title=\"No Locations Found\"\n    subtitle=\"We couldn’t find any branches or ATMs in this region. Try moving the map or searching for a city or branch.\"\n    iconSize=\"xxl\"\n    iconModifier=\"place\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<!-- Loading State -->\n<ng-template #loadingState>\n  <bb-loading-indicator-ui\n    i18n-text=\"\n      Loading places data|Text to display while loading\n      places@@places.state.loadingPlaces\"\n  ></bb-loading-indicator-ui>\n</ng-template>\n\n<!-- Error State -->\n<ng-template #errorState>\n  <bb-common-error-state-ui [error]=\"errorCustomTemplate\">\n    <ng-template #errorCustomTemplate>\n      <bb-empty-state-ui\n        class=\"bb-text-align-center\"\n        i18n-title=\"\n          Page couldn’t load|Title of a message that is shown when page couldn't\n          load@@places.state.pageCouldnotLoad.title\"\n        i18n-subtitle=\"\n          Try to reload the page or contact the system administrator.|Subtitle\n          of a message that is shown when page could not\n          load@@places.state.pageCouldnotLoad.subtitle\"\n        title=\"Page couldn’t load\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        iconSize=\"xxl\"\n        iconModifier=\"error\"\n      ></bb-empty-state-ui>\n    </ng-template>\n  </bb-common-error-state-ui>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapAPILoaderService } from './map-api-loader.service';\nimport { MapHelpersService } from './map-helpers.service';\nimport { MapComponent } from './map.component';\nimport { MapSearchComponent } from './map-search.component';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { IconModule } from '@backbase/ui-ang/icon';\n\n@NgModule({\n  imports: [CommonModule, SearchBoxModule, ButtonModule, IconModule],\n  declarations: [MapComponent, MapSearchComponent],\n  exports: [MapComponent, MapSearchComponent],\n  providers: [MapAPILoaderService, MapHelpersService],\n})\nexport class MapModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { provideRoutes, Route, RouterModule } from '@angular/router';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { PlacesJourneyComponent } from './places-journey.component';\nimport { PlacesViewComponent } from './views/places-view.component';\nimport { PlacesListComponent } from './components/places-list/places-list.component';\nimport { MapWrapperComponent } from './components/map-wrapper/map-wrapper.component';\nimport { PlaceDetailsComponent } from './components/place-details/place-details.component';\nimport { WorkTimesComponent } from './components/work-times/work-times.component';\nimport { KeyboardAccessibilityDirective } from './directives/keyboard-accessibility.directive';\nimport { MapModule } from './components/bb-map-ui/map.module';\nimport { FormsModule } from '@angular/forms';\nimport { PlacesService } from './services/places.service';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport { CollapsibleAccordionModule } from '@backbase/ui-ang/collapsible-accordion';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\n\nexport const defaultRoute: Route = {\n  path: '',\n  component: PlacesJourneyComponent,\n  children: [\n    {\n      path: '',\n      component: PlacesViewComponent,\n      data: { title: 'Places' },\n    },\n  ],\n};\n\nconst components = [\n  PlacesListComponent,\n  MapWrapperComponent,\n  PlaceDetailsComponent,\n  WorkTimesComponent,\n  KeyboardAccessibilityDirective,\n];\n\nconst modules = [\n  HeaderModule,\n  EmptyStateModule,\n  ErrorCommonStateModule,\n  LoadingIndicatorModule,\n  IconModule,\n  ButtonModule,\n  MapModule,\n  CollapsibleModule,\n  CollapsibleAccordionModule,\n  InputCheckboxModule,\n];\n\n@NgModule({\n  declarations: [PlacesJourneyComponent, PlacesViewComponent, ...components],\n  imports: [\n    CommonModule,\n    FormsModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { PlacesJourneyComponent },\n    }),\n    RouterModule,\n    ...modules,\n  ],\n  providers: [PlacesService],\n})\nexport class PlacesJourneyModule {\n  static forRoot(\n    data: { route: Route; [key: string]: any } = { route: defaultRoute }\n  ): ModuleWithProviders<PlacesJourneyModule> {\n    return {\n      ngModule: PlacesJourneyModule,\n      providers: [provideRoutes([data.route])],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i1.MapAPILoaderService","i2.WorkTimesComponent","i3","i2","i4","i5.PlaceDetailsComponent","i6.KeyboardAccessibilityDirective","i1.MapHelpersService","i1.MapComponent","i1.PlacesJourneyConfigService","i2.PlacesService","i4.MapAPILoaderService","i6.MapSearchComponent","i7","i9.PlacesListComponent","i10.MapWrapperComponent","i14"],"mappings":"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"}