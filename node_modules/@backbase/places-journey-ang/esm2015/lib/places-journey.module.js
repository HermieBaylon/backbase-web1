import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { provideRoutes, RouterModule } from '@angular/router';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { PlacesJourneyComponent } from './places-journey.component';
import { PlacesViewComponent } from './views/places-view.component';
import { PlacesListComponent } from './components/places-list/places-list.component';
import { MapWrapperComponent } from './components/map-wrapper/map-wrapper.component';
import { PlaceDetailsComponent } from './components/place-details/place-details.component';
import { WorkTimesComponent } from './components/work-times/work-times.component';
import { KeyboardAccessibilityDirective } from './directives/keyboard-accessibility.directive';
import { MapModule } from './components/bb-map-ui/map.module';
import { FormsModule } from '@angular/forms';
import { PlacesService } from './services/places.service';
import { HeaderModule } from '@backbase/ui-ang/header';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import { IconModule } from '@backbase/ui-ang/icon';
import { ButtonModule } from '@backbase/ui-ang/button';
import { CollapsibleModule } from '@backbase/ui-ang/collapsible';
import { CollapsibleAccordionModule } from '@backbase/ui-ang/collapsible-accordion';
import { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
export const defaultRoute = {
    path: '',
    component: PlacesJourneyComponent,
    children: [
        {
            path: '',
            component: PlacesViewComponent,
            data: { title: 'Places' },
        },
    ],
};
const components = [
    PlacesListComponent,
    MapWrapperComponent,
    PlaceDetailsComponent,
    WorkTimesComponent,
    KeyboardAccessibilityDirective,
];
const modules = [
    HeaderModule,
    EmptyStateModule,
    ErrorCommonStateModule,
    LoadingIndicatorModule,
    IconModule,
    ButtonModule,
    MapModule,
    CollapsibleModule,
    CollapsibleAccordionModule,
    InputCheckboxModule,
];
export class PlacesJourneyModule {
    static forRoot(data = { route: defaultRoute }) {
        return {
            ngModule: PlacesJourneyModule,
            providers: [provideRoutes([data.route])],
        };
    }
}
PlacesJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PlacesJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PlacesJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PlacesJourneyModule, declarations: [PlacesJourneyComponent, PlacesViewComponent, PlacesListComponent,
        MapWrapperComponent,
        PlaceDetailsComponent,
        WorkTimesComponent,
        KeyboardAccessibilityDirective], imports: [CommonModule,
        FormsModule, i1.BackbaseCoreModule, RouterModule, HeaderModule,
        EmptyStateModule,
        ErrorCommonStateModule,
        LoadingIndicatorModule,
        IconModule,
        ButtonModule,
        MapModule,
        CollapsibleModule,
        CollapsibleAccordionModule,
        InputCheckboxModule] });
PlacesJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PlacesJourneyModule, providers: [PlacesService], imports: [[
            CommonModule,
            FormsModule,
            BackbaseCoreModule.withConfig({
                classMap: { PlacesJourneyComponent },
            }),
            RouterModule,
            ...modules,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PlacesJourneyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [PlacesJourneyComponent, PlacesViewComponent, ...components],
                    imports: [
                        CommonModule,
                        FormsModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { PlacesJourneyComponent },
                        }),
                        RouterModule,
                        ...modules,
                    ],
                    providers: [PlacesService],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2VzLWpvdXJuZXkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9wbGFjZXMtam91cm5leS9zcmMvbGliL3BsYWNlcy1qb3VybmV5Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBUyxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNyRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNyRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUMzRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNsRixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUMvRixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDN0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDNUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNwRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7O0FBRXRFLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBVTtJQUNqQyxJQUFJLEVBQUUsRUFBRTtJQUNSLFNBQVMsRUFBRSxzQkFBc0I7SUFDakMsUUFBUSxFQUFFO1FBQ1I7WUFDRSxJQUFJLEVBQUUsRUFBRTtZQUNSLFNBQVMsRUFBRSxtQkFBbUI7WUFDOUIsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtTQUMxQjtLQUNGO0NBQ0YsQ0FBQztBQUVGLE1BQU0sVUFBVSxHQUFHO0lBQ2pCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQiw4QkFBOEI7Q0FDL0IsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUFHO0lBQ2QsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixZQUFZO0lBQ1osU0FBUztJQUNULGlCQUFpQjtJQUNqQiwwQkFBMEI7SUFDMUIsbUJBQW1CO0NBQ3BCLENBQUM7QUFlRixNQUFNLE9BQU8sbUJBQW1CO0lBQzlCLE1BQU0sQ0FBQyxPQUFPLENBQ1osT0FBNkMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFO1FBRXBFLE9BQU87WUFDTCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLFNBQVMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ3pDLENBQUM7SUFDSixDQUFDOztpSEFSVSxtQkFBbUI7a0hBQW5CLG1CQUFtQixpQkFaZixzQkFBc0IsRUFBRSxtQkFBbUIsRUFyQjFELG1CQUFtQjtRQUNuQixtQkFBbUI7UUFDbkIscUJBQXFCO1FBQ3JCLGtCQUFrQjtRQUNsQiw4QkFBOEIsYUFtQjVCLFlBQVk7UUFDWixXQUFXLHlCQUlYLFlBQVksRUFwQmQsWUFBWTtRQUNaLGdCQUFnQjtRQUNoQixzQkFBc0I7UUFDdEIsc0JBQXNCO1FBQ3RCLFVBQVU7UUFDVixZQUFZO1FBQ1osU0FBUztRQUNULGlCQUFpQjtRQUNqQiwwQkFBMEI7UUFDMUIsbUJBQW1CO2tIQWdCUixtQkFBbUIsYUFGbkIsQ0FBQyxhQUFhLENBQUMsWUFUakI7WUFDUCxZQUFZO1lBQ1osV0FBVztZQUNYLGtCQUFrQixDQUFDLFVBQVUsQ0FBQztnQkFDNUIsUUFBUSxFQUFFLEVBQUUsc0JBQXNCLEVBQUU7YUFDckMsQ0FBQztZQUNGLFlBQVk7WUFDWixHQUFHLE9BQU87U0FDWDs0RkFHVSxtQkFBbUI7a0JBYi9CLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsc0JBQXNCLEVBQUUsbUJBQW1CLEVBQUUsR0FBRyxVQUFVLENBQUM7b0JBQzFFLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsa0JBQWtCLENBQUMsVUFBVSxDQUFDOzRCQUM1QixRQUFRLEVBQUUsRUFBRSxzQkFBc0IsRUFBRTt5QkFDckMsQ0FBQzt3QkFDRixZQUFZO3dCQUNaLEdBQUcsT0FBTztxQkFDWDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxhQUFhLENBQUM7aUJBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBwcm92aWRlUm91dGVzLCBSb3V0ZSwgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEJhY2tiYXNlQ29yZU1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlJztcbmltcG9ydCB7IFBsYWNlc0pvdXJuZXlDb21wb25lbnQgfSBmcm9tICcuL3BsYWNlcy1qb3VybmV5LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQbGFjZXNWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi92aWV3cy9wbGFjZXMtdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGxhY2VzTGlzdENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wbGFjZXMtbGlzdC9wbGFjZXMtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWFwV3JhcHBlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9tYXAtd3JhcHBlci9tYXAtd3JhcHBlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGxhY2VEZXRhaWxzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3BsYWNlLWRldGFpbHMvcGxhY2UtZGV0YWlscy5jb21wb25lbnQnO1xuaW1wb3J0IHsgV29ya1RpbWVzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3dvcmstdGltZXMvd29yay10aW1lcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgS2V5Ym9hcmRBY2Nlc3NpYmlsaXR5RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2tleWJvYXJkLWFjY2Vzc2liaWxpdHkuZGlyZWN0aXZlJztcbmltcG9ydCB7IE1hcE1vZHVsZSB9IGZyb20gJy4vY29tcG9uZW50cy9iYi1tYXAtdWkvbWFwLm1vZHVsZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IFBsYWNlc1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3BsYWNlcy5zZXJ2aWNlJztcbmltcG9ydCB7IEhlYWRlck1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvaGVhZGVyJztcbmltcG9ydCB7IEVtcHR5U3RhdGVNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2VtcHR5LXN0YXRlJztcbmltcG9ydCB7IEVycm9yQ29tbW9uU3RhdGVNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2NvbW1vbi1lcnJvci1zdGF0ZSc7XG5pbXBvcnQgeyBMb2FkaW5nSW5kaWNhdG9yTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9sb2FkaW5nLWluZGljYXRvcic7XG5pbXBvcnQgeyBJY29uTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9pY29uJztcbmltcG9ydCB7IEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvYnV0dG9uJztcbmltcG9ydCB7IENvbGxhcHNpYmxlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9jb2xsYXBzaWJsZSc7XG5pbXBvcnQgeyBDb2xsYXBzaWJsZUFjY29yZGlvbk1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvY29sbGFwc2libGUtYWNjb3JkaW9uJztcbmltcG9ydCB7IElucHV0Q2hlY2tib3hNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2lucHV0LWNoZWNrYm94JztcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRSb3V0ZTogUm91dGUgPSB7XG4gIHBhdGg6ICcnLFxuICBjb21wb25lbnQ6IFBsYWNlc0pvdXJuZXlDb21wb25lbnQsXG4gIGNoaWxkcmVuOiBbXG4gICAge1xuICAgICAgcGF0aDogJycsXG4gICAgICBjb21wb25lbnQ6IFBsYWNlc1ZpZXdDb21wb25lbnQsXG4gICAgICBkYXRhOiB7IHRpdGxlOiAnUGxhY2VzJyB9LFxuICAgIH0sXG4gIF0sXG59O1xuXG5jb25zdCBjb21wb25lbnRzID0gW1xuICBQbGFjZXNMaXN0Q29tcG9uZW50LFxuICBNYXBXcmFwcGVyQ29tcG9uZW50LFxuICBQbGFjZURldGFpbHNDb21wb25lbnQsXG4gIFdvcmtUaW1lc0NvbXBvbmVudCxcbiAgS2V5Ym9hcmRBY2Nlc3NpYmlsaXR5RGlyZWN0aXZlLFxuXTtcblxuY29uc3QgbW9kdWxlcyA9IFtcbiAgSGVhZGVyTW9kdWxlLFxuICBFbXB0eVN0YXRlTW9kdWxlLFxuICBFcnJvckNvbW1vblN0YXRlTW9kdWxlLFxuICBMb2FkaW5nSW5kaWNhdG9yTW9kdWxlLFxuICBJY29uTW9kdWxlLFxuICBCdXR0b25Nb2R1bGUsXG4gIE1hcE1vZHVsZSxcbiAgQ29sbGFwc2libGVNb2R1bGUsXG4gIENvbGxhcHNpYmxlQWNjb3JkaW9uTW9kdWxlLFxuICBJbnB1dENoZWNrYm94TW9kdWxlLFxuXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbUGxhY2VzSm91cm5leUNvbXBvbmVudCwgUGxhY2VzVmlld0NvbXBvbmVudCwgLi4uY29tcG9uZW50c10sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgQmFja2Jhc2VDb3JlTW9kdWxlLndpdGhDb25maWcoe1xuICAgICAgY2xhc3NNYXA6IHsgUGxhY2VzSm91cm5leUNvbXBvbmVudCB9LFxuICAgIH0pLFxuICAgIFJvdXRlck1vZHVsZSxcbiAgICAuLi5tb2R1bGVzLFxuICBdLFxuICBwcm92aWRlcnM6IFtQbGFjZXNTZXJ2aWNlXSxcbn0pXG5leHBvcnQgY2xhc3MgUGxhY2VzSm91cm5leU1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KFxuICAgIGRhdGE6IHsgcm91dGU6IFJvdXRlOyBba2V5OiBzdHJpbmddOiBhbnkgfSA9IHsgcm91dGU6IGRlZmF1bHRSb3V0ZSB9XG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnM8UGxhY2VzSm91cm5leU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogUGxhY2VzSm91cm5leU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW3Byb3ZpZGVSb3V0ZXMoW2RhdGEucm91dGVdKV0sXG4gICAgfTtcbiAgfVxufVxuIl19