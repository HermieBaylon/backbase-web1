{"version":3,"file":"backbase-retail-loans-journey-ang.js","sources":["../../../../libs/retail-loans-journey/src/lib/models/call-state.model.ts","../../../../libs/retail-loans-journey/src/lib/loans-journey-configuration.ts","../../../../libs/retail-loans-journey/src/lib/config/titles.config.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/loan-info-wrapper/loan-info-wrapper.config.ts","../../../../libs/retail-loans-journey/src/lib/utils/call-state.util.ts","../../../../libs/retail-loans-journey/src/lib/store/loans/actions.ts","../../../../libs/retail-loans-journey/src/lib/store/loans/reducer.ts","../../../../libs/retail-loans-journey/src/lib/store/loans/selectors.ts","../../../../libs/retail-loans-journey/src/lib/store/loans/store.service.ts","../../../../libs/retail-loans-journey/src/lib/components/base/loan-details/loan-details-base-component.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/loan-info-wrapper/loan-info-retail/loan-info-retail.component.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/loan-info-wrapper/loan-info-retail/loan-info-retail.component.html","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/loan-info-wrapper/loan-info-wrapper.component.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/loan-info-wrapper/loan-info-wrapper.component.html","../../../../libs/retail-loans-journey/src/lib/services/communication.service.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/loan-summary/loan-summary.config.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/loan-summary/loan-summary.component.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/loan-summary/loan-summary.component.html","../../../../libs/retail-loans-journey/src/lib/components/loan-details/loan-details-wrapper/loan-details-wrapper.component.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/loan-details-wrapper/loan-details-wrapper.component.html","../../../../libs/retail-loans-journey/src/lib/utils/safe-stringify.util.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/loan-transactions-wrapper/loan-transactions-wrapper.component.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/loan-transactions-wrapper/loan-transactions-wrapper.component.html","../../../../libs/retail-loans-journey/src/lib/config/route-params.model.ts","../../../../libs/retail-loans-journey/src/lib/store/payment-schedule/actions.ts","../../../../libs/retail-loans-journey/src/lib/store/payment-schedule/reducer.ts","../../../../libs/retail-loans-journey/src/lib/store/payment-schedule/selectors.ts","../../../../libs/retail-loans-journey/src/lib/store/payment-schedule/store.service.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-wrapper.component.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-wrapper.component.html","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-details-wrapper/payment-schedule-details-modal-header/payment-schedule-details-modal-header.component.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-details-wrapper/payment-schedule-details-modal-header/payment-schedule-details-modal-header.component.html","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-details-wrapper/payment-schedule-details-wrapper.component.ts","../../../../libs/retail-loans-journey/src/lib/components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-details-wrapper/payment-schedule-details-wrapper.component.html","../../../../libs/retail-loans-journey/src/lib/loans-journey.routes.ts","../../../../libs/retail-loans-journey/src/lib/utils/operators.util.ts","../../../../libs/retail-loans-journey/src/lib/services/arrangements.service.ts","../../../../libs/retail-loans-journey/src/lib/services/loan-mapper.service.ts","../../../../libs/retail-loans-journey/src/lib/services/loans.service.ts","../../../../libs/retail-loans-journey/src/lib/config/notifications.config.ts","../../../../libs/retail-loans-journey/src/lib/store/loans/effects.ts","../../../../libs/retail-loans-journey/src/lib/store/loans/store.module.ts","../../../../libs/retail-loans-journey/src/lib/store/payment-schedule/effects.ts","../../../../libs/retail-loans-journey/src/lib/store/payment-schedule/store.module.ts","../../../../libs/retail-loans-journey/src/lib/loans-journey.module.ts","../../../../libs/retail-loans-journey/src/backbase-retail-loans-journey-ang.ts"],"sourcesContent":["/** Enum represents different possible loading states of ajax call */\nexport enum LoadingState {\n  Init = 'Init',\n  Loading = 'Loading',\n  Loaded = 'Loaded',\n}\n\n/** Interface represents error state of ajax call */\nexport interface ErrorState {\n  error: string;\n}\n\n/**\n * Type represents call state, which allows combining the loading and\n * error states into one property.\n */\nexport type CallState = LoadingState | ErrorState;\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport '@angular/localize/init';\n\nimport { PaginationType as AccountStatementPaginationType } from '@backbase/account-statement-common-ang';\nimport { PaginationType as TransactionPaginationType } from '@backbase/transactions-common-ang';\nimport { LoanDefaultViewType } from '@backbase/loans-collection-ui-ang';\n\nimport {\n  LoansJourneyAccountStatementConfig,\n  LoansJourneyConfiguration,\n  LoansJourneyLoansListConfig,\n  LoansJourneyLoansPaymentScheduleConfig,\n  LoansJourneyLoanTypeMappingConfig,\n  LoansJourneyTransactionConfig,\n} from './models/journey-configuration.model';\n\nexport const loansConfigurationDefault: LoansJourneyConfiguration = {\n  transaction: {\n    showCheckImages: true,\n    showChangeCategory: true,\n    showManageNotes: true,\n    showControls: true,\n    paginationType: TransactionPaginationType.PAGINATION,\n    itemsPerPage: 10,\n    maxNavPages: 3,\n    enableDisputeAndInquiry: true,\n    disputeEligibilityDays: 120,\n    disputeTransactionTypes: 'Credit/Debit Card',\n    disputeByBillingStatus: true,\n    disputeTopicId: '',\n    inquireTopicId: '',\n  },\n  accountStatement: {\n    notificationDismissTime: 5,\n    itemsPerPage: 10,\n    paginationType: AccountStatementPaginationType.Pagination,\n    sortingOrder: 'date',\n    sortingDirection: 'DESC',\n  },\n  loanTypeMapping: {\n    LineOfCredit: {\n      viewType: LoanDefaultViewType.LineOfCredit,\n      typeAlias: $localize`:Loan line of credit loan type alias@@loans.type.line-of-credit.alias:Line Of Credit`,\n    },\n    Mortgage: {\n      viewType: LoanDefaultViewType.Mortgage,\n      typeAlias: $localize`:Loan mortgage loan type alias@@loans.type.mortgage.alias:Mortgage Loan`,\n    },\n    TermLoan: {\n      viewType: LoanDefaultViewType.TermLoan,\n      typeAlias: $localize`:Loan term loan type alias@@loans.type.term.alias:Term Loan`,\n    },\n  },\n  loansList: {\n    itemsPerPage: 10,\n    maxNavPages: 3,\n  },\n  paymentSchedule: {\n    itemsPerPage: 10,\n    maxNavPages: 3,\n  },\n};\n\nexport const LoansJourneyConfigurationToken = new InjectionToken<Partial<LoansJourneyConfiguration>>(\n  'LoansJourneyConfiguration injection token',\n);\n\n/**\n * @dynamic\n */\n@Injectable()\nexport class LoansJourneyConfigurationService {\n  private readonly configuration: LoansJourneyConfiguration;\n\n  constructor(@Optional() @Inject(LoansJourneyConfigurationToken) config: Partial<LoansJourneyConfiguration>) {\n    this.configuration = { ...loansConfigurationDefault, ...config };\n  }\n\n  get transactionConfig(): Partial<LoansJourneyTransactionConfig> {\n    return this.configuration.transaction;\n  }\n\n  get accountStatementConfig(): Partial<LoansJourneyAccountStatementConfig> {\n    return this.configuration.accountStatement;\n  }\n\n  get loanTypeMapping(): LoansJourneyLoanTypeMappingConfig {\n    return this.configuration.loanTypeMapping;\n  }\n\n  get loanList(): LoansJourneyLoansListConfig {\n    return this.configuration.loansList;\n  }\n\n  get paymentSchedule(): LoansJourneyLoansPaymentScheduleConfig {\n    return this.configuration.paymentSchedule;\n  }\n}\n","import '@angular/localize/init';\n\nexport const titles = {\n  sections: {\n    general: $localize`:Loan info general section title@@loans.loan-info.section.general.title:General`,\n    status: $localize`:Loan info status section title@@loans.loan-info.section.status.title:Status`,\n    financialDetails: $localize`:Loan info financial details section title@@loans.loan-info.section.financial-details.title:Financial details`,\n    documents: $localize`:Loan info documents section title@@loans.loan-info.section.documents.title:Documents`,\n    collateral: $localize`:Loan info collateral section title@@loans.loan-info.section.collateral.title:Collateral`,\n    escrow: $localize`:Loan info escrow section title@@loans.loan-info.section.escrow.title:Amount set aside for escrow`,\n  },\n  items: {\n    name: $localize`:Loan info name item title@@loans.loan-info.item.name.title:Product name`,\n    contractNumber: $localize`:Loan info contract number item title@@loans.loan-info.item.contract-number.title:Contract number`,\n    branchCode: $localize`:Loan info branch code item title@@loans.loan-info.item.branch-code.title:Branch code`,\n    currency: $localize`:Loan info branch currency item title@@loans.loan-info.item.currency.title:Currency`,\n    defaultSettlementAccountName: $localize`:Loan info branch default settlement account name item title@@loans.loan-info.item.default-settlement-account-name.title:Default settlement account name`,\n    defaultSettlementAccountNumber: $localize`:Loan info branch default settlement account number item title@@loans.loan-info.item.default-settlement-account-number.title:Default settlement account number`,\n    startDate: $localize`:Loan info start date item title@@loans.loan-info.item.start-date.title:Start date`,\n    maturityDate: $localize`:Loan info maturity date item title@@loans.loan-info.item.maturity-date.title:Maturity date`,\n    type: $localize`:Loan info type item title@@loans.loan-info.item.type.title:Type`,\n    accountNumber: $localize`:Loan info account number item title@@loans.loan-info.item.account-number.title:Account number`,\n    borrowers: $localize`:Loan info borrowers item title@@loans.loan-info.item.borrowers.title:Borrower/s`,\n    status: $localize`:Loan info status item title@@loans.loan-info.item.status.title:Loan status`,\n    creditLimit: $localize`:Loan info credit limit item title@@loans.loan-info.item.credit-limit.title:Credit limit`,\n    drawnAmount: $localize`:Loan info drawn amount item title@@loans.loan-info.item.drawn-amount.title:Drawn amount`,\n    endDate: $localize`:Loan info end date item title@@loans.loan-info.item.end-date.title:End date`,\n    availableBalance: $localize`:Loan info available balance item title@@loans.loan-info.item.available-balance.title:Available balance`,\n    availableAmount: $localize`:Loan info available amount item title@@loans.loan-info.item.available-amount.title:Available amount`,\n    outstandingAmount: $localize`:Loan info outstanding amount item title@@loans.loan-info.item.outstanding-amount.title:Outstanding amount`,\n    paidAmount: $localize`:Loan info paid amount item title@@loans.loan-info.item.paid-amount.title:Paid amount`,\n    owedAmount: $localize`:Loan info owed amount item title@@loans.loan-info.item.owed-amount.title:Owed amount`,\n    feesDue: $localize`:Loan info fees due item title@@loans.loan-info.item.fees-due.title:Fees due`,\n    interestDue: $localize`:Loan info interest due title@@loans.loan-info.interest-due.title:Interest due`,\n    interestRate: $localize`:Loan info interest rate item title@@loans.loan-info.item.interest-rate.title:Interest rate`,\n    overdueAmount: $localize`:Loan info overdue amount item title@@loans.loan-info.item.overdue-amount.title:Overdue amount`,\n    accruedInterestAmount: $localize`:Loan info accrued interest amount item title@@loans.loan-info.item.accrued-interest-amount.title:Accrued interest amount`,\n    originalPrincipal: $localize`:Loan info original principal title@@loans.loan-info.original-principal.title:Original principal`,\n    remainingPrincipal: $localize`:Loan info remaining principal title@@loans.loan-info.remaining-principal.title:Remaining principal`,\n    amountRepaid: $localize`:Loan info amount repaid title@@loans.loan-info.amount-repaid.title:Amount repaid`,\n    totalOutstandingAmount: $localize`:Loan info total outstanding amount title@@loans.loan-info.total-outstanding-amount.title:Total outstanding amount`,\n    principalPaymentFrequency: $localize`:Loan info principal payment frequency title@@loans.loan-info.principal-payment-frequency.title:Principal payment frequency`,\n    interestPaymentFrequency: $localize`:Loan info interest payment frequency title@@loans.loan-info.interest-payment-frequency.title:Interest payment frequency`,\n  },\n};\n","import { PresentationLoan } from '@backbase/data-ang/loans';\nimport {\n  Loan,\n  LoanDefaultViewType,\n  LoanInfoCollateralSectionComponent,\n  LoanInfoDataConfig,\n  LoanInfoDataItem,\n  LoanInfoDocumentsSectionComponent,\n  LoanInfoEscrowSectionComponent,\n  LoanInfoItemType,\n  LoanInfoSection,\n  LoanInfoTermItemComponent,\n  LoanItemCustomBase,\n  LoanViewType,\n} from '@backbase/loans-collection-ui-ang';\n\nimport { titles } from '../../../../config/titles.config';\n\nexport type ShowItemFn<T = Loan> = Required<LoanInfoDataItem<T>>['showItem'];\n\nexport const showAmountItem =\n  <T extends PresentationLoan = PresentationLoan>(amountKey: keyof T): ShowItemFn<T> =>\n  (loan: T) =>\n    Boolean(loan.currencyCode && loan[amountKey]);\n\nexport const showCollaterals: ShowItemFn = (item) =>\n  Boolean(item.collateral?.some((collateralItem) => Object.values(collateralItem).some(Boolean)));\n\nexport const showBorrowers: ShowItemFn = (item) => Boolean(item.borrower?.length);\n\nexport const showDocuments: ShowItemFn = (item) => Boolean(item.documents?.some(({ documentId }) => documentId));\n\nexport const showTerm: ShowItemFn = (item) => Boolean(item.termUnit && item.termCount);\n\nexport const showDefaultSettlementAccountName: ShowItemFn = (item) =>\n  Boolean(item.defaultSettlementAccountName && item.defaultSettlementAccountNumber);\n\nexport const showEscrowSection: ShowItemFn = (item) =>\n  Boolean(item.currencyCode && item.escrow && Object.values(item.escrow).some(Boolean));\n\nconst cssClasses = 'col-sm-6 col-12';\nconst generalSection: LoanInfoSection<Loan, LoanItemCustomBase> = {\n  title: titles.sections.general,\n  items: [\n    {\n      cssClasses,\n      title: titles.items.name,\n      fieldKey: 'name',\n      fieldType: LoanInfoItemType.String,\n    },\n    {\n      cssClasses,\n      title: titles.items.type,\n      fieldKey: 'loanTypeAlias',\n      fieldType: LoanInfoItemType.String,\n    },\n    {\n      cssClasses,\n      title: titles.items.contractNumber,\n      fieldKey: 'contractNumber',\n      fieldType: LoanInfoItemType.String,\n    },\n    {\n      cssClasses,\n      title: titles.items.accountNumber,\n      fieldKey: 'accountNumber',\n      fieldType: LoanInfoItemType.String,\n    },\n    {\n      cssClasses,\n      title: titles.items.branchCode,\n      fieldKey: 'branchCode',\n      fieldType: LoanInfoItemType.String,\n    },\n    {\n      cssClasses,\n      title: titles.items.currency,\n      fieldKey: 'currencyCode',\n      fieldType: LoanInfoItemType.String,\n    },\n    {\n      cssClasses,\n      title: titles.items.defaultSettlementAccountName,\n      fieldKey: 'defaultSettlementAccountName',\n      fieldType: LoanInfoItemType.String,\n      showItem: showDefaultSettlementAccountName,\n    },\n    {\n      cssClasses,\n      title: titles.items.defaultSettlementAccountNumber,\n      fieldKey: 'defaultSettlementAccountNumber',\n      fieldType: LoanInfoItemType.String,\n    },\n    {\n      cssClasses,\n      title: titles.items.borrowers,\n      fieldKey: 'borrower',\n      fieldType: LoanInfoItemType.StringArray,\n      showItem: showBorrowers,\n    },\n  ],\n};\n\nconst statusSectionBaseItems: Array<LoanInfoDataItem<Loan>> = [\n  {\n    cssClasses,\n    title: titles.items.status,\n    fieldKey: 'loanStatus',\n    fieldType: LoanInfoItemType.String,\n  },\n  {\n    cssClasses,\n    title: titles.items.startDate,\n    fieldKey: 'startDate',\n    fieldType: LoanInfoItemType.Date,\n  },\n];\n\nconst paymentInterestsSectionBaseItems: Array<LoanInfoDataItem<Loan>> = [\n  {\n    cssClasses,\n    title: titles.items.feesDue,\n    fieldKey: 'feesDue',\n    fieldType: LoanInfoItemType.Amount,\n    showItem: showAmountItem('feesDue'),\n  },\n  {\n    cssClasses,\n    title: titles.items.accruedInterestAmount,\n    fieldKey: 'interestDue',\n    fieldType: LoanInfoItemType.Amount,\n    showItem: showAmountItem('interestDue'),\n  },\n  {\n    cssClasses,\n    title: titles.items.interestRate,\n    fieldKey: 'interestRate',\n    fieldType: LoanInfoItemType.Percent,\n  },\n  {\n    cssClasses,\n    title: titles.items.principalPaymentFrequency,\n    fieldKey: 'paymentFrequency',\n    fieldType: LoanInfoItemType.PaymentFrequency,\n  },\n  {\n    cssClasses,\n    title: titles.items.interestPaymentFrequency,\n    fieldKey: 'interestPaymentFrequency',\n    fieldType: LoanInfoItemType.PaymentFrequency,\n  },\n];\n\nconst outstandingAmountItem: LoanInfoDataItem<Loan> = {\n  cssClasses,\n  title: titles.items.outstandingAmount,\n  fieldKey: 'outstandingAmount',\n  fieldType: LoanInfoItemType.Amount,\n  showItem: showAmountItem('outstandingAmount'),\n};\n\nconst overdueAmountItem: LoanInfoDataItem<Loan> = {\n  cssClasses,\n  title: titles.items.overdueAmount,\n  fieldKey: 'inArrearsAmount',\n  fieldType: LoanInfoItemType.Amount,\n  showItem: showAmountItem('inArrearsAmount'),\n};\n\nconst documentsSection: LoanInfoSection<Loan, LoanItemCustomBase> = {\n  title: titles.sections.documents,\n  items: [\n    {\n      cssClasses: 'col-sm-10 col-12',\n      componentRef: LoanInfoDocumentsSectionComponent,\n      showItem: showDocuments,\n    },\n  ],\n};\n\nconst statusMortgageTermSection: LoanInfoSection<Loan, LoanItemCustomBase> = {\n  title: titles.sections.status,\n  items: [\n    ...statusSectionBaseItems,\n    {\n      cssClasses,\n      title: titles.items.maturityDate,\n      fieldKey: 'endDate',\n      fieldType: LoanInfoItemType.Date,\n    },\n    {\n      cssClasses: 'col-6',\n      componentRef: LoanInfoTermItemComponent,\n      showItem: showTerm,\n    },\n  ],\n};\n\nconst financialDetailsMortgageTermSection: LoanInfoSection<Loan, LoanItemCustomBase> = {\n  title: titles.sections.financialDetails,\n  items: [\n    outstandingAmountItem,\n    {\n      cssClasses,\n      title: titles.items.remainingPrincipal,\n      fieldKey: 'drawnAmount',\n      fieldType: LoanInfoItemType.Amount,\n      showItem: showAmountItem('drawnAmount'),\n    },\n    {\n      cssClasses,\n      title: titles.items.amountRepaid,\n      fieldKey: 'paidAmount',\n      fieldType: LoanInfoItemType.Amount,\n      showItem: showAmountItem('paidAmount'),\n    },\n    overdueAmountItem,\n    {\n      cssClasses,\n      title: titles.items.originalPrincipal,\n      fieldKey: 'creditLimit',\n      fieldType: LoanInfoItemType.Amount,\n      showItem: showAmountItem('creditLimit'),\n    },\n    ...paymentInterestsSectionBaseItems,\n  ],\n};\n\nconst colleteralSection: LoanInfoSection<Loan, LoanItemCustomBase> = {\n  title: titles.sections.collateral,\n  items: [\n    {\n      cssClasses: 'col-12',\n      componentRef: LoanInfoCollateralSectionComponent,\n      showItem: showCollaterals,\n    },\n  ],\n};\n\n/**\n * Loan info config for LineOfCredit type\n */\nexport const loanInfoLineOfCreditDataConfig: LoanInfoDataConfig<Loan, LoanItemCustomBase> = [\n  generalSection,\n  {\n    title: titles.sections.status,\n    items: [\n      ...statusSectionBaseItems,\n      {\n        cssClasses,\n        title: titles.items.endDate,\n        fieldKey: 'endDate',\n        fieldType: LoanInfoItemType.Date,\n      },\n    ],\n  },\n  {\n    title: titles.sections.financialDetails,\n    items: [\n      outstandingAmountItem,\n      overdueAmountItem,\n      {\n        cssClasses,\n        title: titles.items.availableBalance,\n        fieldKey: 'availableBalance',\n        fieldType: LoanInfoItemType.Amount,\n        showItem: showAmountItem('availableBalance'),\n      },\n      {\n        cssClasses,\n        title: titles.items.creditLimit,\n        fieldKey: 'creditLimit',\n        fieldType: LoanInfoItemType.Amount,\n        showItem: showAmountItem('creditLimit'),\n      },\n      {\n        cssClasses,\n        title: titles.items.drawnAmount,\n        fieldKey: 'drawnAmount',\n        fieldType: LoanInfoItemType.Amount,\n        showItem: showAmountItem('drawnAmount'),\n      },\n      ...paymentInterestsSectionBaseItems,\n    ],\n  },\n  documentsSection,\n];\n\n/**\n * Loan info config for Mortgage loan\n */\nexport const loanInfoMortgageDataConfig: LoanInfoDataConfig<Loan, LoanItemCustomBase> = [\n  generalSection,\n  statusMortgageTermSection,\n  financialDetailsMortgageTermSection,\n  {\n    title: titles.sections.escrow,\n    items: [\n      {\n        cssClasses: 'col-12',\n        componentRef: LoanInfoEscrowSectionComponent,\n        showItem: showEscrowSection,\n      },\n    ],\n  },\n  colleteralSection,\n  documentsSection,\n];\n\n/**\n * Loan info config for Term loan\n */\nexport const loanInfoTermDataConfig: LoanInfoDataConfig<Loan, LoanItemCustomBase> = [\n  generalSection,\n  statusMortgageTermSection,\n  financialDetailsMortgageTermSection,\n  colleteralSection,\n  documentsSection,\n];\n\nexport function getLoanInfoDataConfig(viewType: LoanViewType): LoanInfoDataConfig<Loan, LoanItemCustomBase> {\n  switch (viewType) {\n    case LoanDefaultViewType.LineOfCredit:\n      return loanInfoLineOfCreditDataConfig;\n    case LoanDefaultViewType.TermLoan:\n      return loanInfoTermDataConfig;\n    case LoanDefaultViewType.Mortgage:\n      return loanInfoMortgageDataConfig;\n    default:\n      throw new Error(`[bb-loans]: \"${viewType}\" view type is not configured`);\n  }\n}\n","import { Observable, OperatorFunction } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CallState, ErrorState, LoadingState } from '../models/call-state.model';\n\n/**\n * Helper function to extract error, if there is one.\n *\n * @param callState - call sate\n */\nexport function getCallStateError(callState: CallState): string | null {\n  if ((callState as ErrorState).error !== undefined) {\n    return (callState as ErrorState).error;\n  }\n\n  return null;\n}\n\n/**\n * Checks for initial state\n *\n * @param callStates - call states\n */\nexport function isInitialState(...callStates: CallState[]): boolean {\n  return callStates.some((state) => state === LoadingState.Init);\n}\n\n/**\n * Checks for loading state\n *\n * @param callStates - call states\n */\nexport function isLoadingState(...callStates: CallState[]): boolean {\n  return callStates.some((state) => state === LoadingState.Loading);\n}\n\n/**\n * Checks for error state\n *\n * @param callStates - call states\n */\nexport function isErrorState(...callStates: CallState[]): boolean {\n  return callStates.some((state) => Object.prototype.hasOwnProperty.call(state, 'error'));\n}\n\n/**\n * Checks for loaded state\n *\n * @param callStates - call states\n */\nexport function isLoadedState(...callStates: CallState[]): boolean {\n  return callStates.every((state) => state === LoadingState.Loaded);\n}\n\n/**\n * Operator state map operator\n *\n * @param fn - state mapper function\n */\nexport function stateMap(fn: (...states: CallState[]) => boolean): OperatorFunction<CallState | CallState[], boolean> {\n  return (source: Observable<CallState | CallState[]>): Observable<boolean> =>\n    source.pipe(map((state) => fn.call(null, ...(Array.isArray(state) ? state : [state]))));\n}\n","import { createAction, props } from '@ngrx/store';\n\nimport { Loan } from '@backbase/loans-collection-ui-ang';\n\nimport { LoansResponse } from '../../models/loans-response.model';\n\n// Fetch loans\nexport const loadLoans = createAction('[Loans API] fetch loans', props<{ page: number; append: boolean }>());\nexport const loadLoansSuccess = createAction(\n  '[Loans API] fetch loans succeed',\n  props<{ response: LoansResponse; append: boolean }>(),\n);\nexport const loadLoansError = createAction('[Loans API] fetch loans error', props<{ error: string }>());\n\n// Fetch loan by id\nexport const fetchLoanById = createAction('[Loans API] fetch loan by id', props<{ id: string }>());\nexport const fetchLoanByIdSuccess = createAction('[Loans API] fetch loan by id succeed', props<{ loan: Loan }>());\nexport const fetchLoanByIdError = createAction('[Loans API] fetch loan by id error', props<{ error: string }>());\n\n// Fetch amount of loans\nexport const fetchAmountOfLoans = createAction('[Loans API] fetch amount of loans');\nexport const fetchAmountOfLoansSuccess = createAction(\n  '[Loans API] fetch amount of loans succeed',\n  props<{ totalCount: number }>(),\n);\nexport const fetchAmountOfLoansError = createAction('[Loans API] fetch amount of loans error');\n\n// Update loan alias\nexport const updateLoanAlias = createAction('[Product Summary API] Update alias', props<{ alias: string }>());\nexport const updateLoanAliasSuccess = createAction(\n  '[Product Summary API] Update alias succeed',\n  props<{ alias: string; id: string }>(),\n);\nexport const updateLoanAliasError = createAction(\n  '[Product Summary API] Update alias error',\n  props<{ error: string }>(),\n);\nexport const updateLoanAliasCancel = createAction('[Effect] Cancel update alias request');\n","import { Action, createReducer, on } from '@ngrx/store';\n\nimport {\n  fetchAmountOfLoansError,\n  fetchAmountOfLoansSuccess,\n  fetchLoanById,\n  fetchLoanByIdError,\n  fetchLoanByIdSuccess,\n  loadLoans,\n  loadLoansError,\n  loadLoansSuccess,\n  updateLoanAlias,\n  updateLoanAliasError,\n  updateLoanAliasSuccess,\n} from './actions';\nimport { LoansStoreState } from './store.model';\nimport { LoadingState } from '../../models/call-state.model';\n\nexport const storeKey = 'loansJourneyBase';\n\nexport const initialState: LoansStoreState = {\n  loans: [],\n  loansCurrentPage: 0,\n  loansTotalCount: undefined,\n  loansCallState: LoadingState.Init,\n  loan: undefined,\n  loanCallState: LoadingState.Init,\n  aliasUpdateCallState: LoadingState.Init,\n};\n\nconst _loansReducer = createReducer<LoansStoreState>(\n  initialState,\n  on(loadLoans, (state, { page }) => ({ ...state, loansCallState: LoadingState.Loading, loansCurrentPage: page })),\n  on(loadLoansSuccess, (state, { append, response: { items: loans, totalCount } }) => ({\n    ...state,\n    loans: append ? [...state.loans, ...loans] : loans,\n    loansTotalCount: totalCount,\n    loansCallState: LoadingState.Loaded,\n  })),\n  on(loadLoansError, (state, { error }) => ({\n    ...state,\n    loansCallState: { error },\n  })),\n  on(fetchLoanById, (state) => ({ ...state, loanCallState: LoadingState.Loading })),\n  on(fetchLoanByIdSuccess, (state, { loan }) => ({\n    ...state,\n    loan,\n    loanCallState: LoadingState.Loaded,\n  })),\n  on(fetchLoanByIdError, (state, { error }) => ({\n    ...state,\n    loanCallState: { error },\n  })),\n  on(fetchAmountOfLoansSuccess, (state, { totalCount }) => ({\n    ...state,\n    loansTotalCount: totalCount,\n  })),\n  on(fetchAmountOfLoansError, (state) => ({\n    ...state,\n    loansTotalCount: undefined,\n  })),\n  on(updateLoanAlias, (state) => ({\n    ...state,\n    aliasUpdateCallState: LoadingState.Loading,\n  })),\n  on(updateLoanAliasSuccess, (state) => ({\n    ...state,\n    aliasUpdateCallState: LoadingState.Loaded,\n  })),\n  on(updateLoanAliasError, (state, { error }) => ({\n    ...state,\n    aliasUpdateCallState: { error },\n  })),\n);\n\nexport function loansReducer(state: LoansStoreState, action: Action) {\n  return _loansReducer(state, action);\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { Loan } from '@backbase/loans-collection-ui-ang';\n\nimport { CallState } from '../../models/call-state.model';\nimport { LoansStoreState } from './store.model';\nimport { storeKey } from './reducer';\n\nconst getLoansState = createFeatureSelector<LoansStoreState>(storeKey);\n\nexport const selectLoans = createSelector(getLoansState, ({ loans }: LoansStoreState): Loan[] => loans);\nexport const selectLoansCallState = createSelector(\n  getLoansState,\n  ({ loansCallState }: LoansStoreState): CallState => loansCallState,\n);\n\nexport const selectLoan = createSelector(getLoansState, ({ loan }: LoansStoreState): Loan | undefined => loan);\nexport const selectLoanCallState = createSelector(\n  getLoansState,\n  ({ loanCallState }: LoansStoreState): CallState => loanCallState,\n);\n\nexport const selectShowNavigateToOverview = createSelector(\n  getLoansState,\n  ({ loansTotalCount }: LoansStoreState): boolean => Boolean(loansTotalCount && loansTotalCount > 1),\n);\n\nexport const selectLoansCurrentPage = createSelector(\n  getLoansState,\n  ({ loansCurrentPage }: LoansStoreState): number => loansCurrentPage,\n);\nexport const selectLoansTotalCount = createSelector(\n  getLoansState,\n  ({ loansTotalCount }: LoansStoreState): number | undefined => loansTotalCount,\n);\nexport const selectAliasUpdateCallState = createSelector(\n  getLoansState,\n  ({ aliasUpdateCallState }: LoansStoreState): CallState => aliasUpdateCallState,\n);\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Loan } from '@backbase/loans-collection-ui-ang';\nimport { InputInlineEditState } from '@backbase/ui-ang/input-inline-edit';\n\nimport {\n  selectAliasUpdateCallState,\n  selectLoan,\n  selectLoanCallState,\n  selectLoans,\n  selectLoansCallState,\n  selectLoansCurrentPage,\n  selectLoansTotalCount,\n  selectShowNavigateToOverview,\n} from './selectors';\nimport { fetchAmountOfLoans, fetchLoanById, loadLoans, updateLoanAlias, updateLoanAliasCancel } from './actions';\nimport { isLoadingState } from '../../utils/call-state.util';\nimport { CallState } from '../../models/call-state.model';\nimport { LoansStoreState } from './store.model';\n\n@Injectable()\nexport class LoansStoreService {\n  /**\n   * Stream of api call state for fetching loans\n   */\n  readonly loansCallState$: Observable<CallState> = this.store.select(selectLoansCallState);\n  /**\n   * Stream of loans\n   */\n  readonly loans$: Observable<Loan[]> = this.store.select(selectLoans);\n  /**\n   * Stream of api call state for fetching loan item\n   */\n  readonly loanCallState$: Observable<CallState> = this.store.select(selectLoanCallState);\n  /**\n   * Stream of loan item\n   */\n  readonly loan$: Observable<Loan | undefined> = this.store.select(selectLoan);\n  /**\n   * Stream indicates whether to show/hide navigate to overview button\n   */\n  readonly showNavigateToOverview$: Observable<boolean> = this.store.select(selectShowNavigateToOverview);\n  /**\n   * Stream represents current loaded page for loan list\n   */\n  readonly loansCurrentPage$: Observable<number> = this.store.select(selectLoansCurrentPage);\n  /**\n   * Stream represents total pages count for loan list\n   */\n  readonly loansTotalCount$: Observable<number | undefined> = this.store.select(selectLoansTotalCount);\n  /**\n   * Stream of alias edit states (mapped from call state)\n   */\n  readonly aliasEditState$: Observable<InputInlineEditState> = this.store\n    .select(selectAliasUpdateCallState)\n    .pipe(map((callState) => (isLoadingState(callState) ? InputInlineEditState.LOADING : InputInlineEditState.IDLE)));\n\n  constructor(private readonly store: Store<LoansStoreState>) {}\n\n  /**\n   * Fetch loans\n   */\n  fetchLoans(page: number, append = false): void {\n    this.store.dispatch(loadLoans({ page, append }));\n  }\n\n  /**\n   * Fetch loan by id\n   */\n  fetchLoanById(id: string): void {\n    this.store.dispatch(fetchLoanById({ id }));\n  }\n\n  /**\n   * Fetch amount of loans\n   */\n  fetchAmountOfLoans(): void {\n    this.store.dispatch(fetchAmountOfLoans());\n  }\n\n  /**\n   * Update alias\n   *\n   * @param alias\n   */\n  updateAlias(alias: string): void {\n    this.store.dispatch(updateLoanAlias({ alias }));\n  }\n\n  /**\n   * Cancel alias update\n   */\n  cancelAliasUpdate(): void {\n    this.store.dispatch(updateLoanAliasCancel());\n  }\n}\n","import { Directive } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Loan } from '@backbase/loans-collection-ui-ang';\n\nimport { isErrorState, isLoadingState, stateMap } from '../../../utils/call-state.util';\nimport { LoansStoreService } from '../../../store/loans/store.service';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class LoanDetailsBaseComponent<T> {\n  /**\n   * Loan details steam\n   */\n  readonly loan$: Observable<Loan | undefined> = this.storeService.loan$;\n  /**\n   * Flag represents loading state\n   */\n  readonly isLoading$: Observable<boolean> = this.storeService.loanCallState$.pipe(stateMap(isLoadingState));\n  /**\n   * Flag represents error state\n   */\n  readonly isErrorState$: Observable<boolean> = this.storeService.loanCallState$.pipe(stateMap(isErrorState));\n\n  constructor(protected readonly storeService: LoansStoreService) {}\n\n  /**\n   * Configuration for component\n   */\n  abstract getDataConfig({ viewType }: Loan): T;\n}\n","import { ChangeDetectionStrategy, Component, OnChanges } from '@angular/core';\nimport { getLoanAlias, Loan, LoanInfoComponent, LoanItemCustomBase } from '@backbase/loans-collection-ui-ang';\n\n@Component({\n  selector: 'bb-loan-info-retail',\n  templateUrl: 'loan-info-retail.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoanInfoRetailComponent extends LoanInfoComponent<Loan, LoanItemCustomBase> implements OnChanges {\n  loanAlias!: string | undefined;\n\n  ngOnChanges(): void {\n    super.ngOnChanges();\n    this.loanAlias = getLoanAlias(this.loan);\n  }\n}\n","<div class=\"bb-loans-loan-info\">\n  <div class=\"bb-block bb-block--xl bb-stack justify-content-between\">\n    <bb-loan-item-name [headingLevel]=\"3\" [loanName]=\"loanAlias\"></bb-loan-item-name>\n    <bb-loan-info-print-button class=\"bb-loans-loan-info\"></bb-loan-info-print-button>\n  </div>\n\n  <div class=\"bb-list\">\n    <section\n      *ngFor=\"let section of sections; trackBy: trackByTitle\"\n      class=\"bb-list__item bb-card card-body\"\n      data-role=\"loan-info-section\"\n    >\n      <bb-header-ui\n        [heading]=\"section.title\"\n        headingType=\"h3\"\n        headingClasses=\"bb-block bb-block--lg\"\n        data-role=\"loan-info-section__header\"\n      ></bb-header-ui>\n\n      <div class=\"row bb-loans-loan-info__section\">\n        <div\n          *ngFor=\"let item of section.items\"\n          [ngClass]=\"item.cssClasses\"\n          class=\"bb-block bb-block--lg\"\n          data-role=\"loan-info-section__item-wrapper\"\n        >\n          <ng-container *ngIf=\"getTypedDataItem(item).fieldKey; else customItemRef\">\n            <bb-loan-info-item\n              data-role=\"loan-info-section__data-item\"\n              *ngIf=\"getTypedDataItem(item) as dataItem\"\n              [value]=\"loan[dataItem.fieldKey]\"\n              [title]=\"dataItem.title\"\n              [type]=\"dataItem.fieldType\"\n              [currencyCode]=\"loan.currencyCode\"\n              [isCurrencySymbolUsed]=\"!!isCurrencySymbolUsed\"\n            >\n            </bb-loan-info-item>\n          </ng-container>\n\n          <ng-template #customItemRef>\n            <ng-container\n              bbLoanInfoCustomSection\n              [componentRef]=\"getItemComponentRef(item)\"\n              [loan]=\"loan\"\n            ></ng-container>\n          </ng-template>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { Loan, LoanInfoDataConfig, LoanItemCustomBase } from '@backbase/loans-collection-ui-ang';\n\nimport { getLoanInfoDataConfig } from './loan-info-wrapper.config';\nimport { LoanDetailsBaseComponent } from '../../../base/loan-details/loan-details-base-component';\n\n@Component({\n  selector: 'bb-loan-info-wrapper',\n  templateUrl: './loan-info-wrapper.component.html',\n})\nexport class LoanInfoWrapperComponent extends LoanDetailsBaseComponent<LoanInfoDataConfig<Loan, LoanItemCustomBase>> {\n  /**\n   * Configuration for loan info container\n   */\n  getDataConfig({ viewType }: Loan): LoanInfoDataConfig<Loan, LoanItemCustomBase> {\n    return getLoanInfoDataConfig(viewType);\n  }\n}\n","<bb-loans-main-container\n  [isLoadingState]=\"isLoading$ | async\"\n  [isErrorState]=\"isErrorState$ | async\"\n  rootWrapperClasses=\"\"\n  contentWrapperClasses=\"\"\n>\n  <bb-loan-info-retail\n    *ngIf=\"loan$ | async as loan\"\n    [loan]=\"loan\"\n    [dataConfig]=\"getDataConfig(loan)\"\n    [isCurrencySymbolUsed]=\"true\"\n  ></bb-loan-info-retail>\n</bb-loans-main-container>\n","import { InjectionToken } from '@angular/core';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { InitiatePaymentJourneyComponentApi } from '@backbase/initiate-payment-journey-ang';\n\nexport const LOAN_JOURNEY_COMMUNICATOR = new InjectionToken<LoanCommunicationService>('bb-loans-journey-communication');\n\nexport interface LoanCommunicationService {\n  init(api: InitiatePaymentJourneyComponentApi): void;\n  navigateToLoanAdvance(): void;\n  navigateToLoanPayment(): void;\n  navigateToAccounts(): void;\n  reset(): void;\n  editLoanPayment(payment: IdentifiedPaymentOrder): void;\n  editLoanAdvance(payment: IdentifiedPaymentOrder): void;\n  closeEvent(): void;\n}\n","import BigNumber from 'bignumber.js';\n\nimport {\n  LoanDefaultViewType,\n  LoanPaymentInfoDataConfig,\n  LoanPaymentInfoType,\n  LoanSummaryFormulaAmount,\n  LoanSummaryFormulaDataConfig,\n  LoanSummaryFormulaViewType,\n  LoanViewType,\n  RetailLoanProgressBarDataConfig,\n  RetailLoanSummaryDataConfig,\n} from '@backbase/loans-collection-ui-ang';\nimport { AccountAliasDisplayingLevel } from '@backbase/product-summary-common-ang';\n\nimport { titles } from '../../../config/titles.config';\n\nexport const iconsConfig: Record<LoanViewType, string> = {\n  [LoanDefaultViewType.LineOfCredit]: 'payments',\n  [LoanDefaultViewType.Mortgage]: 'loans',\n  [LoanDefaultViewType.TermLoan]: 'home',\n};\n\nexport const accountEditEntitlementsConfig: Record<AccountAliasDisplayingLevel, string> = {\n  [AccountAliasDisplayingLevel.USER]: 'ProductSummary.ProductSummary.edit',\n  [AccountAliasDisplayingLevel.ACCOUNT]: 'ProductSummary.ManageArrangementAlias.edit',\n};\n\nexport function getFormulaViewType(\n  { value: totalValue }: LoanSummaryFormulaAmount,\n  amounts: LoanSummaryFormulaAmount[],\n): LoanSummaryFormulaViewType {\n  const amountValues = amounts.reduce<BigNumber[]>((accum, { value }) => {\n    if (value) {\n      accum.push(new BigNumber(value));\n    }\n\n    return accum;\n  }, []);\n  const moreThanThreeAmounts = amountValues.length > 3;\n\n  if (totalValue) {\n    const totalAmount = new BigNumber(totalValue);\n    const amountValuesSum = amountValues.reduce((accum, val) => accum.plus(val), new BigNumber(0));\n\n    if (totalAmount.isEqualTo(amountValuesSum)) {\n      return moreThanThreeAmounts ? LoanSummaryFormulaViewType.CollapsibleList : LoanSummaryFormulaViewType.Equation;\n    } else {\n      return LoanSummaryFormulaViewType.OnlyTotal;\n    }\n  } else {\n    return moreThanThreeAmounts\n      ? LoanSummaryFormulaViewType.AmountsInRows\n      : LoanSummaryFormulaViewType.AmountsInColumns;\n  }\n}\n\nexport const getLoanSummaryFormulaDataConfig =\n  (isLineOfCreditType: boolean): LoanSummaryFormulaDataConfig =>\n  ({ outstandingAmount, drawnAmount, interestDue, feesDue, currencyCode, inArrearsAmount }) => {\n    const totalAmount: LoanSummaryFormulaAmount = {\n      value: outstandingAmount,\n      title: titles.items.totalOutstandingAmount,\n    };\n    const amounts: LoanSummaryFormulaAmount[] = [\n      {\n        value: drawnAmount,\n        title: isLineOfCreditType ? titles.items.drawnAmount : titles.items.remainingPrincipal,\n      },\n      {\n        value: inArrearsAmount,\n        title: titles.items.overdueAmount,\n      },\n      {\n        value: interestDue,\n        title: titles.items.interestDue,\n      },\n      {\n        value: feesDue,\n        title: titles.items.feesDue,\n      },\n    ].filter(({ value }) => value);\n\n    const shouldShow = Boolean(currencyCode && (totalAmount.value || amounts.length));\n    const viewType = getFormulaViewType(totalAmount, amounts);\n\n    return { totalAmount, amounts, shouldShow, viewType };\n  };\n\nexport const detailsPaymentInfoFn: LoanPaymentInfoDataConfig = ({\n  isFullyRepaid,\n  nextRepaymentDate,\n  nextRepaymentAmount,\n}) => {\n  if (isFullyRepaid) {\n    return { paymentType: LoanPaymentInfoType.FullyPaid };\n  }\n\n  const isOverdueDate = Boolean(\n    nextRepaymentDate && Date.parse(nextRepaymentDate) - new Date().setHours(0, 0, 0, 0) < 0,\n  );\n\n  return {\n    date: nextRepaymentDate,\n    amount: nextRepaymentAmount,\n    paymentType: isOverdueDate ? LoanPaymentInfoType.ScheduledLast : LoanPaymentInfoType.ScheduledNext,\n  };\n};\n\nexport const isProgressBarDataShown = (\n  owedAmount: BigNumber,\n  availableAmount: BigNumber,\n  totalAmount: BigNumber,\n): boolean =>\n  owedAmount.isGreaterThanOrEqualTo(0) &&\n  availableAmount.isGreaterThanOrEqualTo(0) &&\n  totalAmount.isGreaterThan(0) &&\n  totalAmount.isEqualTo(owedAmount.plus(availableAmount));\n\nconst isAmountShown = (amount: BigNumber): boolean => (amount ? amount.isGreaterThanOrEqualTo(0) : false);\n\nconst retailLoanSummaryTermLoanProgressDataConfig: RetailLoanProgressBarDataConfig = {\n  activeAmount: {\n    fieldKey: 'drawnAmount',\n    title: titles.items.owedAmount,\n  },\n  availableAmount: {\n    fieldKey: 'paidAmount',\n    title: titles.items.paidAmount,\n  },\n  totalAmount: {\n    fieldKey: 'creditLimit',\n    title: titles.items.creditLimit,\n  },\n  showData: ({ creditLimit, paidAmount, drawnAmount }): boolean => {\n    return creditLimit && paidAmount && drawnAmount\n      ? isProgressBarDataShown(new BigNumber(drawnAmount), new BigNumber(paidAmount), new BigNumber(creditLimit))\n      : false;\n  },\n};\n\nconst retailLoanSummaryLineOfCreditProgressDataConfig: RetailLoanProgressBarDataConfig = {\n  activeAmount: {\n    fieldKey: 'drawnAmount',\n    title: titles.items.owedAmount,\n  },\n  availableAmount: {\n    fieldKey: 'availableBalance',\n    title: titles.items.availableAmount,\n  },\n  totalAmount: {\n    fieldKey: 'creditLimit',\n    title: titles.items.creditLimit,\n  },\n  showData: ({ creditLimit, availableBalance, drawnAmount }): boolean => {\n    return creditLimit && availableBalance && drawnAmount\n      ? isProgressBarDataShown(new BigNumber(drawnAmount), new BigNumber(availableBalance), new BigNumber(creditLimit))\n      : false;\n  },\n};\n\nconst isMortgageTotalAmountShown = (\n  totalAmount: BigNumber,\n  owedAmount: BigNumber,\n  availableAmount: BigNumber,\n): boolean =>\n  totalAmount.isGreaterThan(0) &&\n  owedAmount.isGreaterThanOrEqualTo(0) &&\n  availableAmount.isGreaterThanOrEqualTo(0) &&\n  totalAmount.isEqualTo(owedAmount.plus(availableAmount));\n\nexport const retailLoanSummaryMortgageTermProgressDataConfig: RetailLoanProgressBarDataConfig = {\n  activeAmount: {\n    fieldKey: 'drawnAmount',\n    title: titles.items.owedAmount,\n  },\n  availableAmount: {\n    fieldKey: 'paidAmount',\n    title: titles.items.paidAmount,\n  },\n  totalAmount: {\n    fieldKey: 'creditLimit',\n    title: titles.items.creditLimit,\n  },\n  showProgressBar: () => false,\n  showActiveAmount: ({ drawnAmount }): boolean => {\n    const amount = drawnAmount && new BigNumber(drawnAmount);\n\n    return amount ? isAmountShown(amount) : false;\n  },\n  showAvailableAmount: ({ paidAmount }): boolean => {\n    const amount = paidAmount && new BigNumber(paidAmount);\n\n    return amount ? isAmountShown(amount) : false;\n  },\n  showTotalAmount: ({ creditLimit, paidAmount, drawnAmount }): boolean => {\n    return creditLimit && drawnAmount && paidAmount\n      ? isMortgageTotalAmountShown(new BigNumber(creditLimit), new BigNumber(drawnAmount), new BigNumber(paidAmount))\n      : false;\n  },\n};\n\nconst getChangedAmountFocus = (dataConfig: RetailLoanProgressBarDataConfig): RetailLoanProgressBarDataConfig => {\n  const { activeAmount, availableAmount, showActiveAmount, showAvailableAmount } = dataConfig;\n\n  return Object.assign({}, dataConfig, {\n    activeAmount: availableAmount,\n    availableAmount: activeAmount,\n    showActiveAmount: showAvailableAmount,\n    showAvailableAmount: showActiveAmount,\n  });\n};\n\nexport const retailLoanSummaryTermLoanDataConfig: RetailLoanSummaryDataConfig = {\n  progressBar: retailLoanSummaryTermLoanProgressDataConfig,\n  paymentInfo: detailsPaymentInfoFn,\n  formula: getLoanSummaryFormulaDataConfig(false),\n  icons: iconsConfig,\n};\n\nexport const retailLoanSummaryLineOfCreditDataConfig: RetailLoanSummaryDataConfig = {\n  progressBar: retailLoanSummaryLineOfCreditProgressDataConfig,\n  paymentInfo: detailsPaymentInfoFn,\n  formula: getLoanSummaryFormulaDataConfig(true),\n  icons: iconsConfig,\n};\n\nexport const retailLoanSummaryMortgageTermDataConfig: RetailLoanSummaryDataConfig = {\n  progressBar: retailLoanSummaryMortgageTermProgressDataConfig,\n  paymentInfo: detailsPaymentInfoFn,\n  formula: getLoanSummaryFormulaDataConfig(false),\n  icons: iconsConfig,\n};\n\nexport function getRetailLoanSummaryDataConfig(\n  viewType: LoanViewType,\n  owedAmountFocus: boolean,\n): RetailLoanSummaryDataConfig {\n  if (viewType === LoanDefaultViewType.TermLoan) {\n    return owedAmountFocus\n      ? retailLoanSummaryTermLoanDataConfig\n      : Object.assign({}, retailLoanSummaryTermLoanDataConfig, {\n          progressBar: getChangedAmountFocus(retailLoanSummaryTermLoanDataConfig.progressBar),\n        });\n  }\n  if (viewType === LoanDefaultViewType.LineOfCredit) {\n    return owedAmountFocus\n      ? retailLoanSummaryLineOfCreditDataConfig\n      : Object.assign({}, retailLoanSummaryLineOfCreditDataConfig, {\n          progressBar: getChangedAmountFocus(retailLoanSummaryLineOfCreditDataConfig.progressBar),\n        });\n  }\n\n  return retailLoanSummaryMortgageTermDataConfig;\n}\n","import { LOAN_JOURNEY_COMMUNICATOR, LoanCommunicationService } from '../../../services/communication.service';\nimport { ChangeDetectionStrategy, Component, Inject, Input, Optional } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CONDITIONS, PropertyResolver } from '@backbase/foundation-ang/entitlements';\nimport {\n  Loan,\n  LoanDefaultViewType,\n  PaymentOptions,\n  RetailLoanSummaryDataConfig,\n} from '@backbase/loans-collection-ui-ang';\nimport { ACCOUNT_ALIAS_DISPLAYING_LEVEL, AccountAliasDisplayingLevel } from '@backbase/product-summary-common-ang';\nimport { InputInlineEditState } from '@backbase/ui-ang/input-inline-edit';\n\nimport { LoanDetailsBaseComponent } from '../../base/loan-details/loan-details-base-component';\nimport { accountEditEntitlementsConfig, getRetailLoanSummaryDataConfig } from './loan-summary.config';\nimport { LoansStoreService } from '../../../store/loans/store.service';\nimport { PresentationPaymentOptions } from '@backbase/data-ang/loans';\nimport { RemoteConfigService } from '@backbase/remote-config-ang';\nimport { RetailAppRemoteConfig } from '../../../models/remote-config.model';\n\n@Component({\n  selector: 'bb-loan-summary',\n  templateUrl: './loan-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoanSummaryComponent extends LoanDetailsBaseComponent<RetailLoanSummaryDataConfig> {\n  owedAmountFocus: boolean | undefined;\n\n  /**\n   * Loan id\n   */\n  @Input() set loanId(id: string) {\n    this.storeService.fetchLoanById(id);\n  }\n  /**\n   * Stream represents edit states for loan alias\n   */\n  readonly aliasEditState$: Observable<InputInlineEditState> = this.storeService.aliasEditState$;\n  /**\n   * Flag represents user permissions to edit an alias\n   */\n  readonly canEditAlias!: Promise<boolean>;\n\n  readonly PaymentOptions = PaymentOptions;\n\n  readonly LoanDefaultViewType = LoanDefaultViewType;\n\n  constructor(\n    storeService: LoansStoreService,\n    @Inject(CONDITIONS) private readonly conditions: PropertyResolver,\n    @Optional()\n    @Inject(ACCOUNT_ALIAS_DISPLAYING_LEVEL)\n    private readonly accountAliasDisplayingLevel: AccountAliasDisplayingLevel,\n    @Optional() @Inject(LOAN_JOURNEY_COMMUNICATOR) public loanCommunication: LoanCommunicationService,\n    private remoteConfig: RemoteConfigService<RetailAppRemoteConfig>,\n  ) {\n    super(storeService);\n\n    this.accountAliasDisplayingLevel = accountAliasDisplayingLevel || AccountAliasDisplayingLevel.USER;\n    this.canEditAlias = this.conditions.resolveEntitlements(\n      accountEditEntitlementsConfig[this.accountAliasDisplayingLevel],\n    );\n  }\n  /**\n   * Configuration for loan summary container\n   */\n  getDataConfig({ viewType }: Loan): RetailLoanSummaryDataConfig {\n    const owedAmountFocus = this.remoteConfig.getValue('owed_amount_focus');\n\n    return getRetailLoanSummaryDataConfig(viewType, owedAmountFocus);\n  }\n\n  /**\n   * Updates a loan alias\n   *\n   * @param name\n   */\n  onUpdateAlias(name: string): void {\n    this.storeService.updateAlias(name);\n  }\n\n  /**\n   * Cancel(discard) current loan alias update\n   */\n  onCancelAliasUpdate(): void {\n    this.storeService.cancelAliasUpdate();\n  }\n\n  onDrawAmount(): void {\n    if (this.loanCommunication) {\n      this.loanCommunication.navigateToLoanAdvance();\n    } else {\n      throw new Error('[bb-loans]: Communication service is missing');\n    }\n  }\n\n  onPayDown(): void {\n    if (this.loanCommunication) {\n      this.loanCommunication.navigateToLoanPayment();\n    } else {\n      throw new Error('[bb-loans]: Communication service is missing');\n    }\n  }\n\n  getAllowedPaymentOption(paymentOptionName: PaymentOptions, options: PresentationPaymentOptions | undefined): boolean {\n    return (\n      !!options?.paymentOptions.find((option) => option.name === paymentOptionName)?.allowed && !!this.loanCommunication\n    );\n  }\n}\n","<bb-loans-main-container [isLoadingState]=\"isLoading$ | async\" [isErrorState]=\"isErrorState$ | async\">\n  <bb-retail-loan-summary-container\n    *ngIf=\"loan$ | async as loan\"\n    [loan]=\"loan\"\n    [dataConfig]=\"getDataConfig(loan)\"\n    [showPayDownButton]=\"getAllowedPaymentOption(PaymentOptions.LoanPayment, loan.paymentOptions)\"\n    [showDrawAmountButton]=\"getAllowedPaymentOption(PaymentOptions.LoanAdvance, loan.paymentOptions)\"\n    [showFormula]=\"false\"\n    [showInterestRateOnTop]=\"loan.loanType === LoanDefaultViewType.Mortgage\"\n    [owedAmountFocus]=\"owedAmountFocus\"\n    (updateAlias)=\"onUpdateAlias($event)\"\n    (cancelAliasUpdate)=\"onCancelAliasUpdate()\"\n    (drawAmount)=\"onDrawAmount()\"\n    (payDown)=\"onPayDown()\"\n  ></bb-retail-loan-summary-container>\n</bb-loans-main-container>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { LoansTab } from '@backbase/loans-collection-ui-ang';\n\nimport { LoansStoreService } from '../../../store/loans/store.service';\nimport { DataTypedRoute } from '../../../models/tab-route.model';\n\n@Component({\n  selector: 'bb-loan-details-wrapper',\n  templateUrl: './loan-details-wrapper.component.html',\n})\nexport class LoanDetailsWrapperComponent {\n  /**\n   * Stream of account ids from router params\n   */\n  readonly accountId$: Observable<string> = this.activatedRoute.params.pipe(\n    map(({ selectedAccount }) => selectedAccount),\n  );\n\n  /**\n   * Whether to show / hide navigate to overview btn\n   */\n  readonly showNavigationButton$: Observable<boolean> = this.storeService.showNavigateToOverview$;\n\n  /**\n   * Array of tabs to be displayed\n   */\n  readonly tabs = this.createRouteTabs((this.activatedRoute.snapshot?.routeConfig?.children as DataTypedRoute[]) || []);\n\n  constructor(\n    private readonly router: Router,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly storeService: LoansStoreService,\n  ) {\n    this.storeService.fetchAmountOfLoans();\n  }\n\n  /**\n   * Navigates to the list overview view\n   *\n   * TODO: set up relative routing\n   */\n  navigateToAccounts(): void {\n    this.router.navigate(['my-accounts/list']);\n  }\n\n  private createRouteTabs(routes: DataTypedRoute[]): LoansTab[] {\n    return routes\n      .filter(({ path, data }) => path && data?.titleFn)\n      .map(({ path, data }) => ({\n        title: data.titleFn(),\n        route: path,\n      }));\n  }\n}\n","<div class=\"bb-layout__container d-block bb-block--xl mt-5 container-fluid container\">\n  <div class=\"bb-block bb-block--xl\">\n    <button\n      data-role=\"loans-heading-button__navigation\"\n      (click)=\"navigateToAccounts()\"\n      class=\"bb-stack justify-content-start bb-stack--density-sm btn-link-text btn-md btn\"\n    >\n      <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back bb-icon--sm\"></i>\n      <span i18n-navigationButtonTitle=\"Loan details heading nav button title@@loans.details.heading.nav-button.title\"\n        >Back to My Accounts</span\n      >\n    </button>\n  </div>\n\n  <section class=\"bb-block bb-block--xl p--4\">\n    <h2 class=\"sr-only\" i18n=\"Loans details a11y section heading@@loans.details.section.a11y.heading\">Loan details</h2>\n    <bb-loan-summary *ngIf=\"accountId$ | async as accountId\" [loanId]=\"accountId\"></bb-loan-summary>\n  </section>\n\n  <div>\n    <div>\n      <div class=\"bb-card__body\">\n        <bb-loans-tabs data-role=\"loan-details__tabs\" [tabs]=\"tabs\"></bb-loans-tabs>\n      </div>\n    </div>\n  </div>\n</div>\n","export function safeStringify(value: unknown | undefined): string {\n  try {\n    return JSON.stringify(value) || '';\n  } catch (e) {\n    console.warn(e);\n\n    return '';\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { LoansJourneyConfigurationService } from '../../../../loans-journey-configuration';\nimport { LoansJourneyTransactionConfig } from '../../../../models/journey-configuration.model';\nimport { safeStringify } from '../../../../utils/safe-stringify.util';\n\n@Component({\n  selector: 'bb-loan-transactions-wrapper',\n  templateUrl: './loan-transactions-wrapper.component.html',\n})\nexport class LoanTransactionsWrapperComponent {\n  /**\n   * Transaction table config\n   */\n  readonly transactionConfig: Partial<LoansJourneyTransactionConfig> = this.configurationService.transactionConfig;\n  /**\n   * Transaction table initial filter options\n   */\n  readonly initialFilterOptions = safeStringify(this.transactionConfig.initialFilterOptions);\n  /**\n   * Transaction table initial sort options\n   */\n  readonly initialSortOptions = safeStringify(this.transactionConfig.initialSortOptions);\n\n  constructor(private readonly configurationService: LoansJourneyConfigurationService) {}\n}\n","<bb-transactions-list-widget\n  [pageSize]=\"transactionConfig.itemsPerPage\"\n  [maxNavPages]=\"transactionConfig.maxNavPages\"\n  [showControls]=\"transactionConfig.showControls\"\n  [showManageNotes]=\"transactionConfig.showManageNotes\"\n  [showCheckImage]=\"transactionConfig.showCheckImages\"\n  [showChangeCategory]=\"transactionConfig.showChangeCategory\"\n  [showPendingTransactionsOnTop]=\"transactionConfig.showPendingOnTop\"\n  [paginationType]=\"transactionConfig.paginationType\"\n  [getOrPostEndpoints]=\"transactionConfig.endpointType\"\n  [googleAPIKey]=\"transactionConfig.apiKey\"\n  [initialFilterOptions]=\"initialFilterOptions\"\n  [initialSortOptions]=\"initialSortOptions\"\n  [disputeByBillingStatus]=\"transactionConfig.disputeByBillingStatus\"\n  [disputeEligibilityDays]=\"transactionConfig.disputeEligibilityDays\"\n  [disputeTopicId]=\"transactionConfig.disputeTopicId\"\n  [disputeTransactionTypes]=\"transactionConfig.disputeTransactionTypes\"\n  [enableDisputeAndInquiry]=\"$any(transactionConfig.enableDisputeAndInquiry)\"\n  [inquireTopicId]=\"transactionConfig.inquireTopicId\"\n>\n</bb-transactions-list-widget>\n","export const loanIdParamKey = 'selectedAccount';\nexport const scheduleIdParam = 'paymentScheduleId';\n","import { createAction, props } from '@ngrx/store';\n\nimport { GetAmortizationPaymentRequestParams, PresentationAmortizationPayment } from '@backbase/data-ang/loans';\n\nimport { PaymentScheduleResponse } from '../../models/loans-response.model';\nimport { GetAmortizationScheduleParams } from './store.model';\n\n// Fetch amortized schedule\nexport const fetchAmortizationSchedule = createAction(\n  '[Loans API] fetch amortization schedule',\n  props<{ params: GetAmortizationScheduleParams }>(),\n);\nexport const fetchAmortizationScheduleSuccess = createAction(\n  '[Loans API] fetch amortization schedule succeed',\n  props<{ response: PaymentScheduleResponse; append: boolean }>(),\n);\nexport const fetchAmortizationScheduleError = createAction(\n  '[Loans API] fetch amortization schedule ',\n  props<{ error: string }>(),\n);\n\n// Fetch amortized schedule payment by id\nexport const fetchAmortizationPayment = createAction(\n  '[Loans API] fetch amortization schedule payment by id',\n  props<{ params: GetAmortizationPaymentRequestParams }>(),\n);\nexport const fetchAmortizationPaymentSuccess = createAction(\n  '[Loans API] fetch amortization schedule payment succeed',\n  props<{ amortizedPayment: PresentationAmortizationPayment }>(),\n);\nexport const fetchAmortizationPaymentError = createAction(\n  '[Loans API] fetch  amortization schedule payment failures',\n  props<{ error: string }>(),\n);\n","import { Action, createReducer, on } from '@ngrx/store';\n\nimport {\n  fetchAmortizationPayment,\n  fetchAmortizationPaymentError,\n  fetchAmortizationPaymentSuccess,\n  fetchAmortizationSchedule,\n  fetchAmortizationScheduleError,\n  fetchAmortizationScheduleSuccess,\n} from './actions';\nimport { LoadingState } from '../../models/call-state.model';\nimport { PaymentScheduleState } from './store.model';\n\nexport const paymentScheduleStoreKey = 'loansJourneyPaymentSchedule';\n\nexport const initialState: PaymentScheduleState = {\n  amortizedPayments: [],\n  amortizedPaymentsTotalCount: 0,\n  amortizedPaymentsCurrenPage: 0,\n  amortizedPaymentsCallState: LoadingState.Init,\n  amortizedPayment: undefined,\n  amortizedPaymentCallState: LoadingState.Init,\n};\n\nconst reducer = createReducer<PaymentScheduleState>(\n  initialState,\n  on(fetchAmortizationSchedule, (state, { params: { from } }) => ({\n    ...state,\n    amortizedPaymentsCallState: LoadingState.Loading,\n    amortizedPaymentsCurrenPage: from as number,\n  })),\n  on(fetchAmortizationScheduleSuccess, (state, { append, response: { items, totalCount } }) => ({\n    ...state,\n    amortizedPayments: append ? [...state.amortizedPayments, ...items] : items,\n    amortizedPaymentsTotalCount: totalCount,\n    amortizedPaymentsCallState: LoadingState.Loaded,\n  })),\n  on(fetchAmortizationScheduleError, (state, { error }) => ({\n    ...state,\n    amortizedPaymentsCallState: { error },\n  })),\n  on(fetchAmortizationPayment, (state) => ({\n    ...state,\n    amortizedPaymentCallState: LoadingState.Loading,\n  })),\n  on(fetchAmortizationPaymentSuccess, (state, { amortizedPayment }) => ({\n    ...state,\n    amortizedPayment,\n    amortizedPaymentCallState: LoadingState.Loaded,\n  })),\n  on(fetchAmortizationPaymentError, (state, { error }) => ({\n    ...state,\n    amortizedPaymentCallState: { error },\n  })),\n);\n\nexport function paymentScheduleReducer(state: PaymentScheduleState, action: Action) {\n  return reducer(state, action);\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { PresentationAmortizationPayment } from '@backbase/data-ang/loans';\n\nimport { paymentScheduleStoreKey } from './reducer';\nimport { PaymentScheduleState } from './store.model';\nimport { CallState } from '../../models/call-state.model';\n\nconst createPaymentScheduleSelector = <T>(projector: (state: PaymentScheduleState) => T) =>\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  createSelector<object, PaymentScheduleState, T>(createFeatureSelector(paymentScheduleStoreKey), projector);\n\nexport const selectAmortizedPayments = createPaymentScheduleSelector(\n  ({ amortizedPayments }: PaymentScheduleState): PresentationAmortizationPayment[] => amortizedPayments,\n);\n\nexport const selectAmortizedPaymentsCallState = createPaymentScheduleSelector(\n  ({ amortizedPaymentsCallState }: PaymentScheduleState): CallState => amortizedPaymentsCallState,\n);\n\nexport const selectAmortizedPaymentsTotalCount = createPaymentScheduleSelector(\n  ({ amortizedPaymentsTotalCount }: PaymentScheduleState): number => amortizedPaymentsTotalCount,\n);\n\nexport const selectAmortizedPaymentsCurrentPage = createPaymentScheduleSelector(\n  ({ amortizedPaymentsCurrenPage }: PaymentScheduleState): number => amortizedPaymentsCurrenPage,\n);\n\nexport const selectAmortizedPayment = createPaymentScheduleSelector(\n  ({ amortizedPayment }: PaymentScheduleState): PresentationAmortizationPayment | undefined => amortizedPayment,\n);\n\nexport const selectAmortizedPaymentCallState = createPaymentScheduleSelector(\n  ({ amortizedPaymentCallState }: PaymentScheduleState): CallState => amortizedPaymentCallState,\n);\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { PresentationAmortizationPayment, GetAmortizationPaymentRequestParams } from '@backbase/data-ang/loans';\n\nimport {\n  selectAmortizedPayment,\n  selectAmortizedPaymentCallState,\n  selectAmortizedPayments,\n  selectAmortizedPaymentsCallState,\n  selectAmortizedPaymentsCurrentPage,\n  selectAmortizedPaymentsTotalCount,\n} from './selectors';\nimport { CallState } from '../../models/call-state.model';\nimport { GetAmortizationScheduleParams, PaymentScheduleState } from './store.model';\nimport { fetchAmortizationPayment, fetchAmortizationSchedule } from './actions';\n\n@Injectable()\nexport class PaymentScheduleStoreService {\n  /**\n   * Stream of api call state for fetching scheduled amortized payments\n   */\n  readonly amortizedPaymentsCallState$: Observable<CallState> = this.store.select(selectAmortizedPaymentsCallState);\n  /**\n   * Stream of scheduled amortized payments\n   */\n  readonly amortizedPayments$: Observable<PresentationAmortizationPayment[]> =\n    this.store.select(selectAmortizedPayments);\n\n  /**\n   * Stream of api call state for fetching scheduled amortized payment\n   */\n  readonly amortizedPaymentCallState$: Observable<CallState> = this.store.select(selectAmortizedPaymentCallState);\n  /**\n   * Stream of scheduled amortized payment\n   */\n  readonly amortizedPayment$: Observable<PresentationAmortizationPayment | undefined> =\n    this.store.select(selectAmortizedPayment);\n\n  /**\n   * Stream represents total pages count for scheduled amortized payments\n   */\n  readonly amortizedPaymentsTotalCount$: Observable<number> = this.store.select(selectAmortizedPaymentsTotalCount);\n  /**\n   * Stream represents current loaded page for payment schedule table/list\n   */\n  readonly amortizedPaymentsCurrentPage$: Observable<number> = this.store.select(selectAmortizedPaymentsCurrentPage);\n\n  constructor(private readonly store: Store<PaymentScheduleState>) {}\n\n  /**\n   * Fetch amortized payment schedule\n   */\n  fetchAmortizationSchedule(params: GetAmortizationScheduleParams): void {\n    this.store.dispatch(fetchAmortizationSchedule({ params }));\n  }\n\n  /**\n   * Fetch amortized payment\n   */\n  fetchAmortizationPayment(params: GetAmortizationPaymentRequestParams): void {\n    this.store.dispatch(fetchAmortizationPayment({ params }));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { PresentationAmortizationPayment } from '@backbase/data-ang/loans';\n\nimport { LoadMoreParams } from '@backbase/ui-ang/load-button';\nimport { MediaQueryService } from '@backbase/ui-ang/media-query-lib';\n\nimport { loanIdParamKey } from '../../../../config/route-params.model';\nimport { isErrorState, isLoadingState, stateMap } from '../../../../utils/call-state.util';\nimport { LoansJourneyConfigurationService } from '../../../../loans-journey-configuration';\nimport { PaymentScheduleStoreService } from '../../../../store/payment-schedule/store.service';\nimport { GetAmortizationScheduleParams } from '../../../../store/payment-schedule/store.model';\nimport { LoansJourneyLoansPaymentScheduleConfig } from '../../../../models/journey-configuration.model';\nimport { RemoteConfigService } from '@backbase/remote-config-ang';\nimport { RetailAppRemoteConfig } from '../../../../models/remote-config.model';\n\n// TODO: move to separate and reorganize the flow\n@Component({\n  selector: 'bb-payment-schedule-wrapper',\n  templateUrl: './payment-schedule-wrapper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentScheduleWrapperComponent {\n  /**\n   * Stream of Amortized Payments\n   */\n  readonly amortizedPayments$: Observable<PresentationAmortizationPayment[]> = this.storeService.amortizedPayments$;\n  /**\n   * Payment schedule configuration\n   */\n  readonly scheduleConfig: LoansJourneyLoansPaymentScheduleConfig = this.configurationService.paymentSchedule;\n\n  /**\n   * Hide or show payment status in the table\n   */\n  readonly showPaymentStatus = this.remoteConfig.getValue('show_payment_status_retail_loans');\n\n  /**\n   * Flag represents error state\n   */\n  readonly isErrorState$: Observable<boolean> = this.storeService.amortizedPaymentsCallState$.pipe(\n    stateMap(isErrorState),\n  );\n\n  /**\n   * Stream represents total amount of the pages\n   */\n  readonly amortizedPaymentsTotalCount$: Observable<number> = this.storeService.amortizedPaymentsTotalCount$;\n\n  /**\n   * Stream represent current loaded page number\n   */\n  readonly amortizedPaymentsCurrentPage$: Observable<number> = this.storeService.amortizedPaymentsCurrentPage$;\n\n  /**\n   * Flag represents the tablet screen resolution\n   */\n  readonly isTabletResolution$: Observable<boolean> = this.mediaQueryService.isMediaBreakpointMatches(\n    'max-width',\n    'lg',\n  );\n\n  private readonly _isLoading$ = combineLatest([\n    this.isTabletResolution$,\n    this.storeService.amortizedPaymentsCallState$,\n    this.amortizedPaymentsCurrentPage$,\n  ]);\n  /**\n   * Flag represents page loading state\n   */\n  readonly isPageLoading$: Observable<boolean> = this._isLoading$.pipe(\n    map(\n      ([isTabletResolution, callState, currentPage]) =>\n        isLoadingState(callState) && !(isTabletResolution && currentPage > 0),\n    ),\n  );\n  /**\n   * Flag represents load more button loading state\n   */\n  readonly isButtonLoading$: Observable<boolean> = this._isLoading$.pipe(\n    map(\n      ([isTabletResolution, callState, currentPage]) =>\n        isLoadingState(callState) && isTabletResolution && currentPage > 0,\n    ),\n  );\n  /**\n   * Flag represents visibility of load more button\n   */\n  readonly isLoadMoreVisible$: Observable<boolean> = combineLatest([\n    this.amortizedPaymentsCurrentPage$,\n    this.amortizedPaymentsTotalCount$,\n    this.amortizedPayments$,\n  ]).pipe(map(([page, total, { length }]) => !(page === 0 && length === total)));\n\n  /**\n   * Flag represents empty state\n   */\n  readonly isEmptyState$: Observable<boolean> = this.storeService.amortizedPaymentsTotalCount$.pipe(\n    map((totalCount) => totalCount === 0),\n  );\n\n  private readonly baseReqParams: GetAmortizationScheduleParams = {\n    loanId: (this.activatedRoute.snapshot.parent as ActivatedRouteSnapshot).params[loanIdParamKey],\n    size: this.scheduleConfig.itemsPerPage,\n    from: 0,\n    append: false,\n  };\n\n  constructor(\n    private readonly configurationService: LoansJourneyConfigurationService,\n    private readonly storeService: PaymentScheduleStoreService,\n    private readonly mediaQueryService: MediaQueryService,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly router: Router,\n    private readonly remoteConfig: RemoteConfigService<RetailAppRemoteConfig>,\n  ) {\n    this.storeService.fetchAmortizationSchedule(this.baseReqParams);\n  }\n\n  /**\n   * Load loans on pagination page changes\n   *\n   * @param page\n   */\n  onPageChange(page: number): void {\n    this.storeService.fetchAmortizationSchedule({ ...this.baseReqParams, from: page });\n  }\n\n  /**\n   * Load loans on load more button click\n   *\n   * @param from\n   */\n  onLoadMore({ from }: LoadMoreParams): void {\n    this.storeService.fetchAmortizationSchedule({ ...this.baseReqParams, from, append: true });\n  }\n\n  /**\n   * Emits in item select\n   */\n  onItemSelect({ id }: PresentationAmortizationPayment): void {\n    this.router.navigate([id], { relativeTo: this.activatedRoute });\n  }\n}\n","<bb-loans-main-container\n  [isLoadingState]=\"isPageLoading$ | async\"\n  [isErrorState]=\"isErrorState$ | async\"\n  [isEmptyState]=\"isEmptyState$ | async\"\n  [customEmptyState]=\"customEmptyState\"\n  rootWrapperClasses=\"\"\n  contentWrapperClasses=\"\"\n>\n  <div class=\"bb-card\">\n    <div class=\"bb-card__body\">\n      <ng-container *ngIf=\"isTabletResolution$ | async; else desktop\">\n        <bb-loan-amortized-payment-schedule-list\n          [items]=\"(amortizedPayments$ | async)!\"\n          (selectItem)=\"onItemSelect($event)\"\n        ></bb-loan-amortized-payment-schedule-list>\n      </ng-container>\n\n      <bb-load-button-ui\n        *ngIf=\"isLoadMoreVisible$ | async\"\n        [from]=\"(amortizedPaymentsCurrentPage$ | async)!\"\n        [size]=\"scheduleConfig.itemsPerPage\"\n        [totalCount]=\"(amortizedPaymentsTotalCount$ | async)!\"\n        [isLoading]=\"(isButtonLoading$ | async)!\"\n        (paramChange)=\"onLoadMore($event)\"\n        class=\"bb-stack bb-stack--center\"\n        i18n=\"Load more button@loans.payment-schedule.load-more.btn\"\n        color=\"link\"\n        data-role=\"payment-schedule-wrapper__load-more-btn\"\n      >\n        Load more\n      </bb-load-button-ui>\n\n      <ng-template #desktop>\n        <bb-loan-amortized-payment-schedule-table\n          [items]=\"(amortizedPayments$ | async)!\"\n          (selectItem)=\"onItemSelect($event)\"\n          [showPaymentStatus]=\"showPaymentStatus\"\n        >\n        </bb-loan-amortized-payment-schedule-table>\n      </ng-template>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</bb-loans-main-container>\n\n<ng-template #customEmptyState>\n  <div class=\"bb-state-container bb-state-container--min-height\" data-role=\"payment-schedule-wrapper__empty-state\">\n    <bb-empty-state-ui\n      title=\"No Upcoming Payments\"\n      i18n-title=\"Payment schedule empty state title@loans.payment-schedule.empty-state.title\"\n      subtitle=\"You don't have any upcoming payments to be displayed.\"\n      i18n-subtitle=\"Payment schedule empty state subtitle@loans.payment-schedule.empty-state.subtitle\"\n      iconModifier=\"loans\"\n      iconSize=\"xxl\"\n    >\n    </bb-empty-state-ui>\n  </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'bb-payment-schedule-details-modal-header',\n  templateUrl: './payment-schedule-details-modal-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentScheduleDetailsModalHeaderComponent {\n  /**\n   * Emits on print button click\n   */\n  @Output() readonly printModal = new EventEmitter<void>();\n  /**\n   * Emits on close modal\n   */\n  @Output() readonly closeModal = new EventEmitter<void>();\n}\n","<h3\n  class=\"modal-title bb-stack__item bb-stack__item--fill\"\n  i18n=\"Payment schedule details modal header title@loans.payment-schedule-details.modal.header.title\"\n>\n  Automatic loan payment\n</h3>\n\n<button\n  bbButton\n  type=\"button\"\n  color=\"unstyled\"\n  class=\"bb-stack__item bb-stack__item--spacing-lg\"\n  aria-label=\"Print\"\n  i18n-aria-label=\"\n    Payment schedule details modal header print button aria\n    label@loans.payment-schedule-details.modal.header.print-btn.aria-label\n  \"\n  data-role=\"bb-loan-payment-schedule-details-modal-header__print-btn\"\n  (click)=\"printModal.emit()\"\n>\n  <bb-icon-ui name=\"print\"></bb-icon-ui>\n</button>\n<button\n  bbButton\n  type=\"button\"\n  color=\"unstyled\"\n  class=\"bb-stack__item\"\n  aria-label=\"Close\"\n  i18n-aria-label=\"\n    Payment schedule details modal header close button aria\n    label@loans.payment-schedule-details.modal.header.close-btn.aria-label\n  \"\n  data-role=\"bb-loan-payment-schedule-details-modal-header__close-btn\"\n  (click)=\"closeModal.emit()\"\n>\n  <bb-icon-ui name=\"clear\"></bb-icon-ui>\n</button>\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { filter, pluck, takeUntil } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\n\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DestroyableComponent, Loan } from '@backbase/loans-collection-ui-ang';\nimport { PresentationAmortizationPayment } from '@backbase/data-ang/loans';\n\nimport { scheduleIdParam } from '../../../../../config/route-params.model';\nimport { PaymentScheduleStoreService } from '../../../../../store/payment-schedule/store.service';\nimport { isErrorState, isLoadingState, stateMap } from '../../../../../utils/call-state.util';\nimport { LoansStoreService } from '../../../../../store/loans/store.service';\nimport { RemoteConfigService } from '@backbase/remote-config-ang';\nimport { RetailAppRemoteConfig } from '../../../../../models/remote-config.model';\n\n/**\n * @dynamic\n */\n@Component({\n  selector: 'bb-payment-schedule-details-wrapper',\n  templateUrl: './payment-schedule-details-wrapper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentScheduleDetailsWrapperComponent extends DestroyableComponent {\n  private readonly callStates$ = combineLatest([\n    this.paymentScheduleStoreService.amortizedPaymentCallState$,\n    this.loansStoreService.loanCallState$,\n  ]);\n  /**\n   *  Stream of payment id param\n   */\n  readonly paymentId$: Observable<string> = this.activatedRoute.params.pipe(pluck(scheduleIdParam));\n  /**\n   * Stream of scheduled amortized payment\n   */\n  readonly amortizedPayment$: Observable<PresentationAmortizationPayment | undefined> =\n    this.paymentScheduleStoreService.amortizedPayment$;\n  /**\n   * Flag represents loading state\n   */\n  readonly isLoading$: Observable<boolean> = this.callStates$.pipe(stateMap(isLoadingState));\n  /**\n   * Flag represents error state\n   */\n  readonly isErrorState$: Observable<boolean> = this.callStates$.pipe(stateMap(isErrorState));\n  /**\n   * Stream of loan\n   */\n  readonly loan$: Observable<Loan | undefined> = this.loansStoreService.loan$;\n  /**\n   * Hide or show payment status\n   */\n  readonly showPaymentStatus = this.remoteConfig.getValue('show_payment_status_retail_loans');\n  /**\n   * Modal options\n   */\n  readonly modalOptions: NgbModalOptions = {\n    backdrop: 'static',\n    keyboard: true,\n    centered: true,\n    ariaDescribedBy: 'bb-payment-schedule-details-modal-body',\n  };\n\n  constructor(\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly router: Router,\n    private readonly paymentScheduleStoreService: PaymentScheduleStoreService,\n    private readonly loansStoreService: LoansStoreService,\n    @Inject(DOCUMENT) private readonly document: Document,\n    private readonly remoteConfig: RemoteConfigService<RetailAppRemoteConfig>,\n  ) {\n    super();\n\n    combineLatest([this.paymentId$, this.loan$])\n      .pipe(\n        filter(([, loan]) => Boolean(loan)),\n        takeUntil(this.componentDestroyed$),\n      )\n      .subscribe(([amortizationPaymentId, loan]) => {\n        this.paymentScheduleStoreService.fetchAmortizationPayment({ loanId: (loan as Loan).id, amortizationPaymentId });\n      });\n  }\n\n  onCloseModal(): void {\n    this.router.navigate(['..'], { relativeTo: this.activatedRoute });\n  }\n\n  onPrint(): void {\n    this.document.defaultView?.print();\n  }\n}\n","<bb-modal-ui\n  [modalOptions]=\"modalOptions\"\n  [isOpen]=\"true\"\n  (isOpenChange)=\"onCloseModal()\"\n  data-role=\"bb-loan-payment-schedule-details-modal\"\n>\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-payment-schedule-details-modal-header\n        class=\"bb-stack\"\n        data-role=\"bb-loan-payment-schedule-details-modal__header\"\n        (closeModal)=\"onCloseModal()\"\n        (printModal)=\"onPrint()\"\n      ></bb-payment-schedule-details-modal-header>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <bb-loans-main-container\n        [isLoadingState]=\"isLoading$ | async\"\n        [isErrorState]=\"isErrorState$ | async\"\n        [containerHeightFitToContent]=\"true\"\n        rootWrapperClasses=\"\"\n        contentWrapperClasses=\"\"\n      >\n        <bb-loan-amortized-payment-schedule-details\n          data-role=\"bb-loan-payment-schedule-details-modal__body\"\n          *ngIf=\"amortizedPayment$ | async as amortizedPayment\"\n          [amortizationPayment]=\"amortizedPayment\"\n          [loan]=\"(loan$ | async)!\"\n          [id]=\"modalOptions.ariaDescribedBy\"\n          [showStatus]=\"showPaymentStatus\"\n        ></bb-loan-amortized-payment-schedule-details>\n      </bb-loans-main-container>\n    </ng-template>\n  </bb-modal-body-ui>\n</bb-modal-ui>\n","import { Routes } from '@angular/router';\nimport '@angular/localize/init';\n\nimport { LoanInfoWrapperComponent } from './components/loan-details/tabs/loan-info-wrapper/loan-info-wrapper.component';\nimport { LoanDetailsWrapperComponent } from './components/loan-details/loan-details-wrapper/loan-details-wrapper.component';\nimport { LoanTransactionsWrapperComponent } from './components/loan-details/tabs/loan-transactions-wrapper/loan-transactions-wrapper.component';\nimport { PaymentScheduleWrapperComponent } from './components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-wrapper.component';\nimport { PaymentScheduleDetailsWrapperComponent } from './components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-details-wrapper/payment-schedule-details-wrapper.component';\n\nimport { LoansRouteData } from './models/tab-route.model';\nimport { loanIdParamKey, scheduleIdParam } from './config/route-params.model';\n\n// To prevent error on package:apps process\nexport const tabs = {\n  transactions: () =>\n    $localize`:Loan details transactions tab title@@loans.details.tab.transactions.title:Transactions`,\n  statements: () =>\n    $localize`:Loan details account statements tab title@@loans.details.tab.statements.title:Statements`,\n  loanInfo: () => $localize`:Loan details info tab title@@loans.details.tab.loan-info.title:Loan info`,\n  paymentSchedule: () =>\n    $localize`:Loan details payment schedule tab title@@loans.details.tab.payment-schedule.title:Payment schedule`,\n};\n\nexport const loansRoutes: Routes = [\n  {\n    path: `:${loanIdParamKey}`,\n    component: LoanDetailsWrapperComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'transactions',\n        pathMatch: 'full',\n      },\n      {\n        path: 'transactions',\n        component: LoanTransactionsWrapperComponent,\n        data: { titleFn: tabs.transactions } as LoansRouteData,\n      },\n      {\n        path: 'info',\n        component: LoanInfoWrapperComponent,\n        data: { titleFn: tabs.loanInfo } as LoansRouteData,\n      },\n      {\n        path: 'payment-schedule',\n        component: PaymentScheduleWrapperComponent,\n        data: { titleFn: tabs.paymentSchedule } as LoansRouteData,\n        children: [{ path: `:${scheduleIdParam}`, component: PaymentScheduleDetailsWrapperComponent }],\n      },\n    ],\n  },\n];\n","import { Observable, ObservedValueOf, OperatorFunction, Subscribable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n/**\n * catchError with error logging operator\n *\n * @param fn - callback function\n */\nexport function catchErrorWithLog<T, O extends Subscribable<any>>(\n  fn: (error: any) => O,\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return (source: Observable<T>): Observable<T | ObservedValueOf<O>> =>\n    source.pipe(\n      catchError((state) => {\n        console.error(state);\n\n        return fn(state);\n      }),\n    );\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ArrangementsHttpService } from '@backbase/data-ang/arrangements';\n\n@Injectable()\nexport class ArrangementsService {\n  constructor(private readonly arrangementsHttpService: ArrangementsHttpService) {}\n\n  updateUserPreferences(arrangementId: string, alias: string): Observable<unknown> {\n    return this.arrangementsHttpService.updateUserPreferences({ accountUserPreferences: { alias, arrangementId } });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { PresentationLoan } from '@backbase/data-ang/loans';\nimport { Loan } from '@backbase/loans-collection-ui-ang';\n\nimport { LoansJourneyConfigurationService } from '../loans-journey-configuration';\n\n@Injectable()\nexport class LoanMapperService {\n  constructor(private readonly configuration: LoansJourneyConfigurationService) {}\n\n  /**\n   * Loan mapper func\n   */\n  readonly toLoanModel = this._toLoanModel.bind(this);\n\n  private _toLoanModel(loan: PresentationLoan): Loan {\n    const loanType = loan.loanType;\n    const config = this.configuration.loanTypeMapping[loanType];\n\n    if (!config) {\n      throw new Error(`[bb-loans]: \"${loanType}\" type was not configured for loans journey`);\n    }\n\n    return {\n      ...loan,\n      viewType: config.viewType,\n      loanTypeAlias: config.typeAlias || loanType,\n    };\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n  GetAmortizationScheduleRequestParams,\n  PresentationAmortizationSchedule,\n  PresentationLoans,\n  GetAmortizationPaymentRequestParams,\n  PresentationAmortizationPayment,\n  LoansHttpService,\n} from '@backbase/data-ang/loans';\nimport { Loan } from '@backbase/loans-collection-ui-ang';\n\nimport { LoansJourneyConfigurationService } from '../loans-journey-configuration';\nimport { LoansResponse, PaymentScheduleResponse } from '../models/loans-response.model';\nimport { LoanMapperService } from './loan-mapper.service';\n\n@Injectable()\nexport class LoansService {\n  constructor(\n    private readonly loansHttpService: LoansHttpService,\n    private readonly loanMapper: LoanMapperService,\n    private readonly configurationService: LoansJourneyConfigurationService,\n  ) {}\n\n  getLoans(from: number): Observable<LoansResponse> {\n    const size = this.configurationService.loanList.itemsPerPage;\n\n    return this.loansHttpService.getLoans({ from, size }, 'response').pipe(\n      map((response) => ({\n        items: (response.body as PresentationLoans).loans.map(this.loanMapper.toLoanModel),\n        totalCount: this.getTotalCount(response),\n      })),\n    );\n  }\n\n  getLoanById(loanId: string): Observable<Loan> {\n    return this.loansHttpService.getLoanById({ loanId }).pipe(map(this.loanMapper.toLoanModel));\n  }\n\n  getLoansAmount(): Observable<number> {\n    return this.loansHttpService.headLoans('response').pipe(map(this.getTotalCount));\n  }\n\n  getAmortizationSchedule(params: GetAmortizationScheduleRequestParams): Observable<PaymentScheduleResponse> {\n    return this.loansHttpService.getAmortizationSchedule(params, 'response').pipe(\n      map((response) => ({\n        items: (response.body as PresentationAmortizationSchedule).payments,\n        totalCount: this.getTotalCount(response),\n      })),\n    );\n  }\n\n  getAmortizationPayment(params: GetAmortizationPaymentRequestParams): Observable<PresentationAmortizationPayment> {\n    return this.loansHttpService.getAmortizationPayment(params);\n  }\n\n  private getTotalCount({ headers }: HttpResponse<unknown>): number {\n    const totalCount = headers.get('x-total-count');\n\n    if (!totalCount) {\n      throw new Error('[bb-loans]: Invalid `x-total-count` header param');\n    }\n\n    return parseInt(totalCount, 10);\n  }\n}\n","export const notificationsTitlesConfig = {\n  updateAliasSuccess: $localize`:Loan update alias success notification title@@loans.notifications.alias-update.success.title:Account Alias updated successfully`,\n  updateAliasToDefaultSuccess: $localize`:Loan update alias to product name success notification title@@loans.notifications.alias-update-to-product-name.success.title:Account Alias reset to default product name`,\n  updateAliasError: $localize`:Loan update alias error notification title@@loans.notifications.alias-update.error.title:An unexpected error occurred while performing this action`,\n};\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError, map, switchMap, takeUntil, tap, withLatestFrom } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\n\nimport { Loan } from '@backbase/loans-collection-ui-ang';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\nimport { LoansStoreState } from './store.model';\nimport { catchErrorWithLog } from '../../utils/operators.util';\nimport {\n  fetchAmountOfLoans,\n  fetchAmountOfLoansError,\n  fetchAmountOfLoansSuccess,\n  fetchLoanById,\n  fetchLoanByIdError,\n  fetchLoanByIdSuccess,\n  loadLoans,\n  loadLoansError,\n  loadLoansSuccess,\n  updateLoanAlias,\n  updateLoanAliasCancel,\n  updateLoanAliasError,\n  updateLoanAliasSuccess,\n} from './actions';\nimport { selectLoan, selectLoansTotalCount } from './selectors';\nimport { ArrangementsService } from '../../services/arrangements.service';\nimport { LoansService } from '../../services/loans.service';\nimport { notificationsTitlesConfig } from '../../config/notifications.config';\nimport { setLoan } from '@backbase/loans-payment-config-ang';\n\n@Injectable()\nexport class LoansEffects {\n  constructor(\n    private readonly actions$: Actions,\n    private readonly store: Store<LoansStoreState>,\n    private readonly loansService: LoansService,\n    private readonly arrangementsService: ArrangementsService,\n    private readonly notificationService: NotificationService,\n    private readonly router: Router,\n  ) {}\n\n  fetchLoans$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadLoans),\n      switchMap(({ page, append }) =>\n        this.loansService.getLoans(page).pipe(\n          map((response) => loadLoansSuccess({ response, append })),\n          catchErrorWithLog((error) => of(loadLoansError({ error: error.message || 'Loans fetch error' }))),\n        ),\n      ),\n    ),\n  );\n\n  redirectToDetailsFromList$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(loadLoansSuccess),\n        tap(({ response: { totalCount, items } }) => {\n          if (totalCount === 1) {\n            this.router.navigateByUrl('loans/details/' + items[0].id);\n          }\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  fetchLoanById$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchLoanById),\n      switchMap(({ id }) =>\n        this.loansService.getLoanById(id).pipe(\n          map((loan) => {\n            setLoan(loan);\n\n            return fetchLoanByIdSuccess({ loan });\n          }),\n          catchErrorWithLog((error) => of(fetchLoanByIdError({ error: error.message || 'Loan fetch error' }))),\n        ),\n      ),\n    ),\n  );\n\n  fetchAmountOfLoans$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchAmountOfLoans),\n      withLatestFrom(this.store.select(selectLoansTotalCount)),\n      switchMap(([, totalCountFromStore]) => {\n        if (totalCountFromStore !== undefined) {\n          return of(fetchAmountOfLoansSuccess({ totalCount: totalCountFromStore }));\n        }\n\n        return this.loansService.getLoansAmount().pipe(\n          map((totalCount) => fetchAmountOfLoansSuccess({ totalCount })),\n          catchError(() =>\n            this.loansService.getLoans(0).pipe(\n              map(({ totalCount }) => fetchAmountOfLoansSuccess({ totalCount })),\n              catchErrorWithLog(() => of(fetchAmountOfLoansError())),\n            ),\n          ),\n        );\n      }),\n    ),\n  );\n\n  updateLoanAlias$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateLoanAlias),\n      withLatestFrom(this.store.select(selectLoan)),\n      switchMap(([{ alias }, loan]) => {\n        const id = (loan as Loan).id;\n\n        return this.arrangementsService.updateUserPreferences(id, alias).pipe(\n          map(() => updateLoanAliasSuccess({ alias, id })),\n          catchError((error) => of(updateLoanAliasError({ error: error.message || 'Update alias error' }))),\n          takeUntil(this.actions$.pipe(ofType(updateLoanAliasCancel))),\n        );\n      }),\n    ),\n  );\n\n  updateLoanAfterAliasUpdate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateLoanAliasSuccess),\n      map(({ id }) => fetchLoanById({ id })),\n    ),\n  );\n\n  notifyAliasUpdateSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(updateLoanAliasSuccess),\n        tap(({ alias }) =>\n          this.notificationService.showNotification({\n            header: alias\n              ? notificationsTitlesConfig.updateAliasSuccess\n              : notificationsTitlesConfig.updateAliasToDefaultSuccess,\n            message: '',\n            modifier: 'success',\n          }),\n        ),\n      ),\n    { dispatch: false },\n  );\n\n  notifyAliasUpdateError$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(updateLoanAliasError),\n        tap(() =>\n          this.notificationService.showNotification({\n            header: notificationsTitlesConfig.updateAliasError,\n            message: '',\n            modifier: 'error',\n          }),\n        ),\n      ),\n    { dispatch: false },\n  );\n}\n","import { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { LoansStoreService } from './store.service';\nimport { loansReducer, storeKey } from './reducer';\nimport { LoansEffects } from './effects';\n\n@NgModule({\n  imports: [StoreModule.forFeature(storeKey, loansReducer), EffectsModule.forFeature([LoansEffects])],\n  providers: [LoansStoreService],\n})\nexport class LoansStoreModule {}\n","import { Injectable } from '@angular/core';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\nimport { catchErrorWithLog } from '../../utils/operators.util';\nimport { LoansService } from '../../services/loans.service';\nimport {\n  fetchAmortizationPayment,\n  fetchAmortizationPaymentError,\n  fetchAmortizationPaymentSuccess,\n  fetchAmortizationSchedule,\n  fetchAmortizationScheduleError,\n  fetchAmortizationScheduleSuccess,\n} from './actions';\n\n@Injectable()\nexport class PaymentScheduleEffects {\n  constructor(private readonly actions$: Actions, private readonly loansService: LoansService) {}\n\n  fetchAmortizationSchedule$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchAmortizationSchedule),\n      switchMap(({ params: { loanId, from, append, size } }) =>\n        this.loansService.getAmortizationSchedule({ from, size, loanId }).pipe(\n          map((response) => fetchAmortizationScheduleSuccess({ response, append })),\n          catchErrorWithLog((error) =>\n            of(fetchAmortizationScheduleError({ error: error.message || 'Amortization schedule fetch error' })),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  fetchAmortizationPayment$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchAmortizationPayment),\n      switchMap(({ params }) =>\n        this.loansService.getAmortizationPayment(params).pipe(\n          map((amortizedPayment) => fetchAmortizationPaymentSuccess({ amortizedPayment })),\n          catchErrorWithLog((error) =>\n            of(fetchAmortizationPaymentError({ error: error.message || 'Amortization payment fetch error' })),\n          ),\n        ),\n      ),\n    ),\n  );\n}\n","import { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { PaymentScheduleStoreService } from './store.service';\nimport { paymentScheduleReducer, paymentScheduleStoreKey } from './reducer';\nimport { PaymentScheduleEffects } from './effects';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature(paymentScheduleStoreKey, paymentScheduleReducer),\n    EffectsModule.forFeature([PaymentScheduleEffects]),\n  ],\n  providers: [PaymentScheduleStoreService],\n})\nexport class PaymentScheduleStoreModule {}\n","import { provideRoutes, RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { EntitlementsModule } from '@backbase/foundation-ang/entitlements';\nimport {\n  LoanInfoItemModule,\n  LoanInfoPrintButtonModule,\n  LoanItemNameModule,\n  LoansCollectionUiAngModule,\n  LoansHeadingModule,\n} from '@backbase/loans-collection-ui-ang';\nimport { AccountStatementBusinessWidgetModule } from '@backbase/account-statement-business-widget-ang';\n\nimport { LoansJourneyConfigurationService } from './loans-journey-configuration';\nimport { loansRoutes } from './loans-journey.routes';\nimport { LoansStoreModule } from './store/loans/store.module';\nimport { PaymentScheduleStoreModule } from './store/payment-schedule/store.module';\nimport { LoansService } from './services/loans.service';\nimport { LoanMapperService } from './services/loan-mapper.service';\nimport { ArrangementsService } from './services/arrangements.service';\nimport { LoanSummaryComponent } from './components/loan-details/loan-summary/loan-summary.component';\nimport { LoanInfoWrapperComponent } from './components/loan-details/tabs/loan-info-wrapper/loan-info-wrapper.component';\nimport { LoanDetailsWrapperComponent } from './components/loan-details/loan-details-wrapper/loan-details-wrapper.component';\nimport { LoanTransactionsWrapperComponent } from './components/loan-details/tabs/loan-transactions-wrapper/loan-transactions-wrapper.component';\nimport { PaymentScheduleWrapperComponent } from './components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-wrapper.component';\nimport { PaymentScheduleDetailsWrapperComponent } from './components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-details-wrapper/payment-schedule-details-wrapper.component';\nimport { PaymentScheduleDetailsModalHeaderComponent } from './components/loan-details/tabs/payment-schedule-wrapper/payment-schedule-details-wrapper/payment-schedule-details-modal-header/payment-schedule-details-modal-header.component';\nimport { LoanInfoRetailComponent } from './components/loan-details/tabs/loan-info-wrapper/loan-info-retail/loan-info-retail.component';\nimport { TransactionsListWidgetModule } from '@backbase/transactions-list-widget-ang';\nconst components = [\n  LoanDetailsWrapperComponent,\n  LoanSummaryComponent,\n  LoanTransactionsWrapperComponent,\n  LoanInfoWrapperComponent,\n  PaymentScheduleWrapperComponent,\n  PaymentScheduleDetailsWrapperComponent,\n  PaymentScheduleDetailsModalHeaderComponent,\n  LoanInfoRetailComponent,\n];\n\nconst modules = [\n  LoanInfoPrintButtonModule,\n  LoanItemNameModule,\n  TransactionsListWidgetModule,\n  LoanInfoItemModule,\n  LoansHeadingModule,\n  LoansCollectionUiAngModule,\n  AccountStatementBusinessWidgetModule,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [CommonModule, RouterModule, LoansStoreModule, PaymentScheduleStoreModule, EntitlementsModule, ...modules],\n  exports: [...components, ...modules],\n  providers: [LoansJourneyConfigurationService, LoanMapperService, LoansService, ArrangementsService],\n})\nexport class LoansJourneyModule {\n  static forRoot(\n    data: { routes: Routes; [key: string]: any } = { routes: loansRoutes },\n  ): ModuleWithProviders<LoansJourneyModule> {\n    return {\n      ngModule: LoansJourneyModule,\n      providers: [provideRoutes(data.routes)],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["TransactionPaginationType","AccountStatementPaginationType","initialState","i1.LoansStoreService","i1","i2.LoanInfoRetailComponent","i2","i3","i4","i2.LoansStoreService","i3.LoanSummaryComponent","i5","i1.LoansJourneyConfigurationService","i2.PaymentScheduleStoreService","i6","i9","i6.PaymentScheduleDetailsModalHeaderComponent","i7","i8","i2.LoanMapperService","i3.LoansJourneyConfigurationService","i3.LoansService","i4.ArrangementsService","i2.LoansService"],"mappings":"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"}