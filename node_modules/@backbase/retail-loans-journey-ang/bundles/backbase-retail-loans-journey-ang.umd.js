(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/router'), require('@angular/common'), require('@angular/core'), require('@backbase/foundation-ang/entitlements'), require('@backbase/loans-collection-ui-ang'), require('@backbase/account-statement-business-widget-ang'), require('@angular/localize/init'), require('@backbase/account-statement-common-ang'), require('@backbase/transactions-common-ang'), require('rxjs/operators'), require('@backbase/ui-ang/input-inline-edit'), require('@ngrx/store'), require('@backbase/ui-ang/header'), require('@backbase/product-summary-common-ang'), require('bignumber.js'), require('@backbase/remote-config-ang'), require('@backbase/transactions-list-widget-ang'), require('rxjs'), require('@backbase/ui-ang/media-query-lib'), require('@backbase/ui-ang/load-button'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/modal'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/button'), require('@ngrx/effects'), require('@backbase/loans-payment-config-ang'), require('@backbase/data-ang/loans'), require('@backbase/data-ang/arrangements'), require('@backbase/ui-ang/notification')) :
    typeof define === 'function' && define.amd ? define('@backbase/retail-loans-journey-ang', ['exports', '@angular/router', '@angular/common', '@angular/core', '@backbase/foundation-ang/entitlements', '@backbase/loans-collection-ui-ang', '@backbase/account-statement-business-widget-ang', '@angular/localize/init', '@backbase/account-statement-common-ang', '@backbase/transactions-common-ang', 'rxjs/operators', '@backbase/ui-ang/input-inline-edit', '@ngrx/store', '@backbase/ui-ang/header', '@backbase/product-summary-common-ang', 'bignumber.js', '@backbase/remote-config-ang', '@backbase/transactions-list-widget-ang', 'rxjs', '@backbase/ui-ang/media-query-lib', '@backbase/ui-ang/load-button', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/modal', '@backbase/ui-ang/icon', '@backbase/ui-ang/button', '@ngrx/effects', '@backbase/loans-payment-config-ang', '@backbase/data-ang/loans', '@backbase/data-ang/arrangements', '@backbase/ui-ang/notification'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["retail-loans-journey-ang"] = {}), global.ng.router, global.ng.common, global.ng.core, global.entitlements, global.i1, global.accountStatementBusinessWidgetAng, global.ng.localize.init, global.accountStatementCommonAng, global.transactionsCommonAng, global.rxjs.operators, global.inputInlineEdit, global.i1$1, global.i2, global.i5, global.BigNumber, global.i2$1, global.i2$2, global.rxjs, global.i3$1, global.i7, global.i8, global.i5$1, global.i1$3, global.i2$3, global.i1$6, global.loansPaymentConfigAng, global.i1$4, global.i1$5, global.i5$2));
})(this, (function (exports, i1$2, i3, i0, entitlements, i1, accountStatementBusinessWidgetAng, init, accountStatementCommonAng, transactionsCommonAng, operators, inputInlineEdit, i1$1, i2, i5, BigNumber, i2$1, i2$2, rxjs, i3$1, i7, i8, i5$1, i1$3, i2$3, i1$6, loansPaymentConfigAng, i1$4, i1$5, i5$2) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1$1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var BigNumber__default = /*#__PURE__*/_interopDefaultLegacy(BigNumber);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i5__namespace$1 = /*#__PURE__*/_interopNamespace(i5$1);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i2__namespace$3 = /*#__PURE__*/_interopNamespace(i2$3);
    var i1__namespace$6 = /*#__PURE__*/_interopNamespace(i1$6);
    var i1__namespace$4 = /*#__PURE__*/_interopNamespace(i1$4);
    var i1__namespace$5 = /*#__PURE__*/_interopNamespace(i1$5);
    var i5__namespace$2 = /*#__PURE__*/_interopNamespace(i5$2);

    /** Enum represents different possible loading states of ajax call */
    exports.LoadingState = void 0;
    (function (LoadingState) {
        LoadingState["Init"] = "Init";
        LoadingState["Loading"] = "Loading";
        LoadingState["Loaded"] = "Loaded";
    })(exports.LoadingState || (exports.LoadingState = {}));

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var loansConfigurationDefault = {
        transaction: {
            showCheckImages: true,
            showChangeCategory: true,
            showManageNotes: true,
            showControls: true,
            paginationType: transactionsCommonAng.PaginationType.PAGINATION,
            itemsPerPage: 10,
            maxNavPages: 3,
            enableDisputeAndInquiry: true,
            disputeEligibilityDays: 120,
            disputeTransactionTypes: 'Credit/Debit Card',
            disputeByBillingStatus: true,
            disputeTopicId: '',
            inquireTopicId: '',
        },
        accountStatement: {
            notificationDismissTime: 5,
            itemsPerPage: 10,
            paginationType: accountStatementCommonAng.PaginationType.Pagination,
            sortingOrder: 'date',
            sortingDirection: 'DESC',
        },
        loanTypeMapping: {
            LineOfCredit: {
                viewType: i1.LoanDefaultViewType.LineOfCredit,
                typeAlias: $localize(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject([":Loan line of credit loan type alias@@loans.type.line-of-credit.alias:Line Of Credit"], [":Loan line of credit loan type alias@@loans.type.line-of-credit.alias:Line Of Credit"]))),
            },
            Mortgage: {
                viewType: i1.LoanDefaultViewType.Mortgage,
                typeAlias: $localize(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject([":Loan mortgage loan type alias@@loans.type.mortgage.alias:Mortgage Loan"], [":Loan mortgage loan type alias@@loans.type.mortgage.alias:Mortgage Loan"]))),
            },
            TermLoan: {
                viewType: i1.LoanDefaultViewType.TermLoan,
                typeAlias: $localize(templateObject_3$3 || (templateObject_3$3 = __makeTemplateObject([":Loan term loan type alias@@loans.type.term.alias:Term Loan"], [":Loan term loan type alias@@loans.type.term.alias:Term Loan"]))),
            },
        },
        loansList: {
            itemsPerPage: 10,
            maxNavPages: 3,
        },
        paymentSchedule: {
            itemsPerPage: 10,
            maxNavPages: 3,
        },
    };
    var LoansJourneyConfigurationToken = new i0.InjectionToken('LoansJourneyConfiguration injection token');
    /**
     * @dynamic
     */
    var LoansJourneyConfigurationService = /** @class */ (function () {
        function LoansJourneyConfigurationService(config) {
            this.configuration = Object.assign(Object.assign({}, loansConfigurationDefault), config);
        }
        Object.defineProperty(LoansJourneyConfigurationService.prototype, "transactionConfig", {
            get: function () {
                return this.configuration.transaction;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LoansJourneyConfigurationService.prototype, "accountStatementConfig", {
            get: function () {
                return this.configuration.accountStatement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LoansJourneyConfigurationService.prototype, "loanTypeMapping", {
            get: function () {
                return this.configuration.loanTypeMapping;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LoansJourneyConfigurationService.prototype, "loanList", {
            get: function () {
                return this.configuration.loansList;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LoansJourneyConfigurationService.prototype, "paymentSchedule", {
            get: function () {
                return this.configuration.paymentSchedule;
            },
            enumerable: false,
            configurable: true
        });
        return LoansJourneyConfigurationService;
    }());
    /** @nocollapse */ LoansJourneyConfigurationService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansJourneyConfigurationService, deps: [{ token: LoansJourneyConfigurationToken, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ LoansJourneyConfigurationService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansJourneyConfigurationService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansJourneyConfigurationService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [LoansJourneyConfigurationToken]
                        }] }];
        } });
    var templateObject_1$3, templateObject_2$3, templateObject_3$3;

    var titles = {
        sections: {
            general: $localize(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject([":Loan info general section title@@loans.loan-info.section.general.title:General"], [":Loan info general section title@@loans.loan-info.section.general.title:General"]))),
            status: $localize(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject([":Loan info status section title@@loans.loan-info.section.status.title:Status"], [":Loan info status section title@@loans.loan-info.section.status.title:Status"]))),
            financialDetails: $localize(templateObject_3$2 || (templateObject_3$2 = __makeTemplateObject([":Loan info financial details section title@@loans.loan-info.section.financial-details.title:Financial details"], [":Loan info financial details section title@@loans.loan-info.section.financial-details.title:Financial details"]))),
            documents: $localize(templateObject_4$1 || (templateObject_4$1 = __makeTemplateObject([":Loan info documents section title@@loans.loan-info.section.documents.title:Documents"], [":Loan info documents section title@@loans.loan-info.section.documents.title:Documents"]))),
            collateral: $localize(templateObject_5 || (templateObject_5 = __makeTemplateObject([":Loan info collateral section title@@loans.loan-info.section.collateral.title:Collateral"], [":Loan info collateral section title@@loans.loan-info.section.collateral.title:Collateral"]))),
            escrow: $localize(templateObject_6 || (templateObject_6 = __makeTemplateObject([":Loan info escrow section title@@loans.loan-info.section.escrow.title:Amount set aside for escrow"], [":Loan info escrow section title@@loans.loan-info.section.escrow.title:Amount set aside for escrow"]))),
        },
        items: {
            name: $localize(templateObject_7 || (templateObject_7 = __makeTemplateObject([":Loan info name item title@@loans.loan-info.item.name.title:Product name"], [":Loan info name item title@@loans.loan-info.item.name.title:Product name"]))),
            contractNumber: $localize(templateObject_8 || (templateObject_8 = __makeTemplateObject([":Loan info contract number item title@@loans.loan-info.item.contract-number.title:Contract number"], [":Loan info contract number item title@@loans.loan-info.item.contract-number.title:Contract number"]))),
            branchCode: $localize(templateObject_9 || (templateObject_9 = __makeTemplateObject([":Loan info branch code item title@@loans.loan-info.item.branch-code.title:Branch code"], [":Loan info branch code item title@@loans.loan-info.item.branch-code.title:Branch code"]))),
            currency: $localize(templateObject_10 || (templateObject_10 = __makeTemplateObject([":Loan info branch currency item title@@loans.loan-info.item.currency.title:Currency"], [":Loan info branch currency item title@@loans.loan-info.item.currency.title:Currency"]))),
            defaultSettlementAccountName: $localize(templateObject_11 || (templateObject_11 = __makeTemplateObject([":Loan info branch default settlement account name item title@@loans.loan-info.item.default-settlement-account-name.title:Default settlement account name"], [":Loan info branch default settlement account name item title@@loans.loan-info.item.default-settlement-account-name.title:Default settlement account name"]))),
            defaultSettlementAccountNumber: $localize(templateObject_12 || (templateObject_12 = __makeTemplateObject([":Loan info branch default settlement account number item title@@loans.loan-info.item.default-settlement-account-number.title:Default settlement account number"], [":Loan info branch default settlement account number item title@@loans.loan-info.item.default-settlement-account-number.title:Default settlement account number"]))),
            startDate: $localize(templateObject_13 || (templateObject_13 = __makeTemplateObject([":Loan info start date item title@@loans.loan-info.item.start-date.title:Start date"], [":Loan info start date item title@@loans.loan-info.item.start-date.title:Start date"]))),
            maturityDate: $localize(templateObject_14 || (templateObject_14 = __makeTemplateObject([":Loan info maturity date item title@@loans.loan-info.item.maturity-date.title:Maturity date"], [":Loan info maturity date item title@@loans.loan-info.item.maturity-date.title:Maturity date"]))),
            type: $localize(templateObject_15 || (templateObject_15 = __makeTemplateObject([":Loan info type item title@@loans.loan-info.item.type.title:Type"], [":Loan info type item title@@loans.loan-info.item.type.title:Type"]))),
            accountNumber: $localize(templateObject_16 || (templateObject_16 = __makeTemplateObject([":Loan info account number item title@@loans.loan-info.item.account-number.title:Account number"], [":Loan info account number item title@@loans.loan-info.item.account-number.title:Account number"]))),
            borrowers: $localize(templateObject_17 || (templateObject_17 = __makeTemplateObject([":Loan info borrowers item title@@loans.loan-info.item.borrowers.title:Borrower/s"], [":Loan info borrowers item title@@loans.loan-info.item.borrowers.title:Borrower/s"]))),
            status: $localize(templateObject_18 || (templateObject_18 = __makeTemplateObject([":Loan info status item title@@loans.loan-info.item.status.title:Loan status"], [":Loan info status item title@@loans.loan-info.item.status.title:Loan status"]))),
            creditLimit: $localize(templateObject_19 || (templateObject_19 = __makeTemplateObject([":Loan info credit limit item title@@loans.loan-info.item.credit-limit.title:Credit limit"], [":Loan info credit limit item title@@loans.loan-info.item.credit-limit.title:Credit limit"]))),
            drawnAmount: $localize(templateObject_20 || (templateObject_20 = __makeTemplateObject([":Loan info drawn amount item title@@loans.loan-info.item.drawn-amount.title:Drawn amount"], [":Loan info drawn amount item title@@loans.loan-info.item.drawn-amount.title:Drawn amount"]))),
            endDate: $localize(templateObject_21 || (templateObject_21 = __makeTemplateObject([":Loan info end date item title@@loans.loan-info.item.end-date.title:End date"], [":Loan info end date item title@@loans.loan-info.item.end-date.title:End date"]))),
            availableBalance: $localize(templateObject_22 || (templateObject_22 = __makeTemplateObject([":Loan info available balance item title@@loans.loan-info.item.available-balance.title:Available balance"], [":Loan info available balance item title@@loans.loan-info.item.available-balance.title:Available balance"]))),
            availableAmount: $localize(templateObject_23 || (templateObject_23 = __makeTemplateObject([":Loan info available amount item title@@loans.loan-info.item.available-amount.title:Available amount"], [":Loan info available amount item title@@loans.loan-info.item.available-amount.title:Available amount"]))),
            outstandingAmount: $localize(templateObject_24 || (templateObject_24 = __makeTemplateObject([":Loan info outstanding amount item title@@loans.loan-info.item.outstanding-amount.title:Outstanding amount"], [":Loan info outstanding amount item title@@loans.loan-info.item.outstanding-amount.title:Outstanding amount"]))),
            paidAmount: $localize(templateObject_25 || (templateObject_25 = __makeTemplateObject([":Loan info paid amount item title@@loans.loan-info.item.paid-amount.title:Paid amount"], [":Loan info paid amount item title@@loans.loan-info.item.paid-amount.title:Paid amount"]))),
            owedAmount: $localize(templateObject_26 || (templateObject_26 = __makeTemplateObject([":Loan info owed amount item title@@loans.loan-info.item.owed-amount.title:Owed amount"], [":Loan info owed amount item title@@loans.loan-info.item.owed-amount.title:Owed amount"]))),
            feesDue: $localize(templateObject_27 || (templateObject_27 = __makeTemplateObject([":Loan info fees due item title@@loans.loan-info.item.fees-due.title:Fees due"], [":Loan info fees due item title@@loans.loan-info.item.fees-due.title:Fees due"]))),
            interestDue: $localize(templateObject_28 || (templateObject_28 = __makeTemplateObject([":Loan info interest due title@@loans.loan-info.interest-due.title:Interest due"], [":Loan info interest due title@@loans.loan-info.interest-due.title:Interest due"]))),
            interestRate: $localize(templateObject_29 || (templateObject_29 = __makeTemplateObject([":Loan info interest rate item title@@loans.loan-info.item.interest-rate.title:Interest rate"], [":Loan info interest rate item title@@loans.loan-info.item.interest-rate.title:Interest rate"]))),
            overdueAmount: $localize(templateObject_30 || (templateObject_30 = __makeTemplateObject([":Loan info overdue amount item title@@loans.loan-info.item.overdue-amount.title:Overdue amount"], [":Loan info overdue amount item title@@loans.loan-info.item.overdue-amount.title:Overdue amount"]))),
            accruedInterestAmount: $localize(templateObject_31 || (templateObject_31 = __makeTemplateObject([":Loan info accrued interest amount item title@@loans.loan-info.item.accrued-interest-amount.title:Accrued interest amount"], [":Loan info accrued interest amount item title@@loans.loan-info.item.accrued-interest-amount.title:Accrued interest amount"]))),
            originalPrincipal: $localize(templateObject_32 || (templateObject_32 = __makeTemplateObject([":Loan info original principal title@@loans.loan-info.original-principal.title:Original principal"], [":Loan info original principal title@@loans.loan-info.original-principal.title:Original principal"]))),
            remainingPrincipal: $localize(templateObject_33 || (templateObject_33 = __makeTemplateObject([":Loan info remaining principal title@@loans.loan-info.remaining-principal.title:Remaining principal"], [":Loan info remaining principal title@@loans.loan-info.remaining-principal.title:Remaining principal"]))),
            amountRepaid: $localize(templateObject_34 || (templateObject_34 = __makeTemplateObject([":Loan info amount repaid title@@loans.loan-info.amount-repaid.title:Amount repaid"], [":Loan info amount repaid title@@loans.loan-info.amount-repaid.title:Amount repaid"]))),
            totalOutstandingAmount: $localize(templateObject_35 || (templateObject_35 = __makeTemplateObject([":Loan info total outstanding amount title@@loans.loan-info.total-outstanding-amount.title:Total outstanding amount"], [":Loan info total outstanding amount title@@loans.loan-info.total-outstanding-amount.title:Total outstanding amount"]))),
            principalPaymentFrequency: $localize(templateObject_36 || (templateObject_36 = __makeTemplateObject([":Loan info principal payment frequency title@@loans.loan-info.principal-payment-frequency.title:Principal payment frequency"], [":Loan info principal payment frequency title@@loans.loan-info.principal-payment-frequency.title:Principal payment frequency"]))),
            interestPaymentFrequency: $localize(templateObject_37 || (templateObject_37 = __makeTemplateObject([":Loan info interest payment frequency title@@loans.loan-info.interest-payment-frequency.title:Interest payment frequency"], [":Loan info interest payment frequency title@@loans.loan-info.interest-payment-frequency.title:Interest payment frequency"]))),
        },
    };
    var templateObject_1$2, templateObject_2$2, templateObject_3$2, templateObject_4$1, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14, templateObject_15, templateObject_16, templateObject_17, templateObject_18, templateObject_19, templateObject_20, templateObject_21, templateObject_22, templateObject_23, templateObject_24, templateObject_25, templateObject_26, templateObject_27, templateObject_28, templateObject_29, templateObject_30, templateObject_31, templateObject_32, templateObject_33, templateObject_34, templateObject_35, templateObject_36, templateObject_37;

    var showAmountItem = function (amountKey) { return function (loan) { return Boolean(loan.currencyCode && loan[amountKey]); }; };
    var showCollaterals = function (item) { var _a; return Boolean((_a = item.collateral) === null || _a === void 0 ? void 0 : _a.some(function (collateralItem) { return Object.values(collateralItem).some(Boolean); })); };
    var showBorrowers = function (item) { var _a; return Boolean((_a = item.borrower) === null || _a === void 0 ? void 0 : _a.length); };
    var showDocuments = function (item) { var _a; return Boolean((_a = item.documents) === null || _a === void 0 ? void 0 : _a.some(function (_b) {
        var documentId = _b.documentId;
        return documentId;
    })); };
    var showTerm = function (item) { return Boolean(item.termUnit && item.termCount); };
    var showDefaultSettlementAccountName = function (item) { return Boolean(item.defaultSettlementAccountName && item.defaultSettlementAccountNumber); };
    var showEscrowSection = function (item) { return Boolean(item.currencyCode && item.escrow && Object.values(item.escrow).some(Boolean)); };
    var cssClasses = 'col-sm-6 col-12';
    var generalSection = {
        title: titles.sections.general,
        items: [
            {
                cssClasses: cssClasses,
                title: titles.items.name,
                fieldKey: 'name',
                fieldType: i1.LoanInfoItemType.String,
            },
            {
                cssClasses: cssClasses,
                title: titles.items.type,
                fieldKey: 'loanTypeAlias',
                fieldType: i1.LoanInfoItemType.String,
            },
            {
                cssClasses: cssClasses,
                title: titles.items.contractNumber,
                fieldKey: 'contractNumber',
                fieldType: i1.LoanInfoItemType.String,
            },
            {
                cssClasses: cssClasses,
                title: titles.items.accountNumber,
                fieldKey: 'accountNumber',
                fieldType: i1.LoanInfoItemType.String,
            },
            {
                cssClasses: cssClasses,
                title: titles.items.branchCode,
                fieldKey: 'branchCode',
                fieldType: i1.LoanInfoItemType.String,
            },
            {
                cssClasses: cssClasses,
                title: titles.items.currency,
                fieldKey: 'currencyCode',
                fieldType: i1.LoanInfoItemType.String,
            },
            {
                cssClasses: cssClasses,
                title: titles.items.defaultSettlementAccountName,
                fieldKey: 'defaultSettlementAccountName',
                fieldType: i1.LoanInfoItemType.String,
                showItem: showDefaultSettlementAccountName,
            },
            {
                cssClasses: cssClasses,
                title: titles.items.defaultSettlementAccountNumber,
                fieldKey: 'defaultSettlementAccountNumber',
                fieldType: i1.LoanInfoItemType.String,
            },
            {
                cssClasses: cssClasses,
                title: titles.items.borrowers,
                fieldKey: 'borrower',
                fieldType: i1.LoanInfoItemType.StringArray,
                showItem: showBorrowers,
            },
        ],
    };
    var statusSectionBaseItems = [
        {
            cssClasses: cssClasses,
            title: titles.items.status,
            fieldKey: 'loanStatus',
            fieldType: i1.LoanInfoItemType.String,
        },
        {
            cssClasses: cssClasses,
            title: titles.items.startDate,
            fieldKey: 'startDate',
            fieldType: i1.LoanInfoItemType.Date,
        },
    ];
    var paymentInterestsSectionBaseItems = [
        {
            cssClasses: cssClasses,
            title: titles.items.feesDue,
            fieldKey: 'feesDue',
            fieldType: i1.LoanInfoItemType.Amount,
            showItem: showAmountItem('feesDue'),
        },
        {
            cssClasses: cssClasses,
            title: titles.items.accruedInterestAmount,
            fieldKey: 'interestDue',
            fieldType: i1.LoanInfoItemType.Amount,
            showItem: showAmountItem('interestDue'),
        },
        {
            cssClasses: cssClasses,
            title: titles.items.interestRate,
            fieldKey: 'interestRate',
            fieldType: i1.LoanInfoItemType.Percent,
        },
        {
            cssClasses: cssClasses,
            title: titles.items.principalPaymentFrequency,
            fieldKey: 'paymentFrequency',
            fieldType: i1.LoanInfoItemType.PaymentFrequency,
        },
        {
            cssClasses: cssClasses,
            title: titles.items.interestPaymentFrequency,
            fieldKey: 'interestPaymentFrequency',
            fieldType: i1.LoanInfoItemType.PaymentFrequency,
        },
    ];
    var outstandingAmountItem = {
        cssClasses: cssClasses,
        title: titles.items.outstandingAmount,
        fieldKey: 'outstandingAmount',
        fieldType: i1.LoanInfoItemType.Amount,
        showItem: showAmountItem('outstandingAmount'),
    };
    var overdueAmountItem = {
        cssClasses: cssClasses,
        title: titles.items.overdueAmount,
        fieldKey: 'inArrearsAmount',
        fieldType: i1.LoanInfoItemType.Amount,
        showItem: showAmountItem('inArrearsAmount'),
    };
    var documentsSection = {
        title: titles.sections.documents,
        items: [
            {
                cssClasses: 'col-sm-10 col-12',
                componentRef: i1.LoanInfoDocumentsSectionComponent,
                showItem: showDocuments,
            },
        ],
    };
    var statusMortgageTermSection = {
        title: titles.sections.status,
        items: __spreadArray(__spreadArray([], __read(statusSectionBaseItems)), [
            {
                cssClasses: cssClasses,
                title: titles.items.maturityDate,
                fieldKey: 'endDate',
                fieldType: i1.LoanInfoItemType.Date,
            },
            {
                cssClasses: 'col-6',
                componentRef: i1.LoanInfoTermItemComponent,
                showItem: showTerm,
            },
        ]),
    };
    var financialDetailsMortgageTermSection = {
        title: titles.sections.financialDetails,
        items: __spreadArray([
            outstandingAmountItem,
            {
                cssClasses: cssClasses,
                title: titles.items.remainingPrincipal,
                fieldKey: 'drawnAmount',
                fieldType: i1.LoanInfoItemType.Amount,
                showItem: showAmountItem('drawnAmount'),
            },
            {
                cssClasses: cssClasses,
                title: titles.items.amountRepaid,
                fieldKey: 'paidAmount',
                fieldType: i1.LoanInfoItemType.Amount,
                showItem: showAmountItem('paidAmount'),
            },
            overdueAmountItem,
            {
                cssClasses: cssClasses,
                title: titles.items.originalPrincipal,
                fieldKey: 'creditLimit',
                fieldType: i1.LoanInfoItemType.Amount,
                showItem: showAmountItem('creditLimit'),
            }
        ], __read(paymentInterestsSectionBaseItems)),
    };
    var colleteralSection = {
        title: titles.sections.collateral,
        items: [
            {
                cssClasses: 'col-12',
                componentRef: i1.LoanInfoCollateralSectionComponent,
                showItem: showCollaterals,
            },
        ],
    };
    /**
     * Loan info config for LineOfCredit type
     */
    var loanInfoLineOfCreditDataConfig = [
        generalSection,
        {
            title: titles.sections.status,
            items: __spreadArray(__spreadArray([], __read(statusSectionBaseItems)), [
                {
                    cssClasses: cssClasses,
                    title: titles.items.endDate,
                    fieldKey: 'endDate',
                    fieldType: i1.LoanInfoItemType.Date,
                },
            ]),
        },
        {
            title: titles.sections.financialDetails,
            items: __spreadArray([
                outstandingAmountItem,
                overdueAmountItem,
                {
                    cssClasses: cssClasses,
                    title: titles.items.availableBalance,
                    fieldKey: 'availableBalance',
                    fieldType: i1.LoanInfoItemType.Amount,
                    showItem: showAmountItem('availableBalance'),
                },
                {
                    cssClasses: cssClasses,
                    title: titles.items.creditLimit,
                    fieldKey: 'creditLimit',
                    fieldType: i1.LoanInfoItemType.Amount,
                    showItem: showAmountItem('creditLimit'),
                },
                {
                    cssClasses: cssClasses,
                    title: titles.items.drawnAmount,
                    fieldKey: 'drawnAmount',
                    fieldType: i1.LoanInfoItemType.Amount,
                    showItem: showAmountItem('drawnAmount'),
                }
            ], __read(paymentInterestsSectionBaseItems)),
        },
        documentsSection,
    ];
    /**
     * Loan info config for Mortgage loan
     */
    var loanInfoMortgageDataConfig = [
        generalSection,
        statusMortgageTermSection,
        financialDetailsMortgageTermSection,
        {
            title: titles.sections.escrow,
            items: [
                {
                    cssClasses: 'col-12',
                    componentRef: i1.LoanInfoEscrowSectionComponent,
                    showItem: showEscrowSection,
                },
            ],
        },
        colleteralSection,
        documentsSection,
    ];
    /**
     * Loan info config for Term loan
     */
    var loanInfoTermDataConfig = [
        generalSection,
        statusMortgageTermSection,
        financialDetailsMortgageTermSection,
        colleteralSection,
        documentsSection,
    ];
    function getLoanInfoDataConfig(viewType) {
        switch (viewType) {
            case i1.LoanDefaultViewType.LineOfCredit:
                return loanInfoLineOfCreditDataConfig;
            case i1.LoanDefaultViewType.TermLoan:
                return loanInfoTermDataConfig;
            case i1.LoanDefaultViewType.Mortgage:
                return loanInfoMortgageDataConfig;
            default:
                throw new Error("[bb-loans]: \"" + viewType + "\" view type is not configured");
        }
    }

    /**
     * Helper function to extract error, if there is one.
     *
     * @param callState - call sate
     */
    function getCallStateError(callState) {
        if (callState.error !== undefined) {
            return callState.error;
        }
        return null;
    }
    /**
     * Checks for initial state
     *
     * @param callStates - call states
     */
    function isInitialState() {
        var callStates = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            callStates[_i] = arguments[_i];
        }
        return callStates.some(function (state) { return state === exports.LoadingState.Init; });
    }
    /**
     * Checks for loading state
     *
     * @param callStates - call states
     */
    function isLoadingState() {
        var callStates = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            callStates[_i] = arguments[_i];
        }
        return callStates.some(function (state) { return state === exports.LoadingState.Loading; });
    }
    /**
     * Checks for error state
     *
     * @param callStates - call states
     */
    function isErrorState() {
        var callStates = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            callStates[_i] = arguments[_i];
        }
        return callStates.some(function (state) { return Object.prototype.hasOwnProperty.call(state, 'error'); });
    }
    /**
     * Checks for loaded state
     *
     * @param callStates - call states
     */
    function isLoadedState() {
        var callStates = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            callStates[_i] = arguments[_i];
        }
        return callStates.every(function (state) { return state === exports.LoadingState.Loaded; });
    }
    /**
     * Operator state map operator
     *
     * @param fn - state mapper function
     */
    function stateMap(fn) {
        return function (source) { return source.pipe(operators.map(function (state) { return fn.call.apply(fn, __spreadArray([null], __read((Array.isArray(state) ? state : [state])))); })); };
    }

    // Fetch loans
    var loadLoans = i1$1.createAction('[Loans API] fetch loans', i1$1.props());
    var loadLoansSuccess = i1$1.createAction('[Loans API] fetch loans succeed', i1$1.props());
    var loadLoansError = i1$1.createAction('[Loans API] fetch loans error', i1$1.props());
    // Fetch loan by id
    var fetchLoanById = i1$1.createAction('[Loans API] fetch loan by id', i1$1.props());
    var fetchLoanByIdSuccess = i1$1.createAction('[Loans API] fetch loan by id succeed', i1$1.props());
    var fetchLoanByIdError = i1$1.createAction('[Loans API] fetch loan by id error', i1$1.props());
    // Fetch amount of loans
    var fetchAmountOfLoans = i1$1.createAction('[Loans API] fetch amount of loans');
    var fetchAmountOfLoansSuccess = i1$1.createAction('[Loans API] fetch amount of loans succeed', i1$1.props());
    var fetchAmountOfLoansError = i1$1.createAction('[Loans API] fetch amount of loans error');
    // Update loan alias
    var updateLoanAlias = i1$1.createAction('[Product Summary API] Update alias', i1$1.props());
    var updateLoanAliasSuccess = i1$1.createAction('[Product Summary API] Update alias succeed', i1$1.props());
    var updateLoanAliasError = i1$1.createAction('[Product Summary API] Update alias error', i1$1.props());
    var updateLoanAliasCancel = i1$1.createAction('[Effect] Cancel update alias request');

    var storeKey = 'loansJourneyBase';
    var initialState$1 = {
        loans: [],
        loansCurrentPage: 0,
        loansTotalCount: undefined,
        loansCallState: exports.LoadingState.Init,
        loan: undefined,
        loanCallState: exports.LoadingState.Init,
        aliasUpdateCallState: exports.LoadingState.Init,
    };
    var _loansReducer = i1$1.createReducer(initialState$1, i1$1.on(loadLoans, function (state, _a) {
        var page = _a.page;
        return (Object.assign(Object.assign({}, state), { loansCallState: exports.LoadingState.Loading, loansCurrentPage: page }));
    }), i1$1.on(loadLoansSuccess, function (state, _a) {
        var append = _a.append, _b = _a.response, loans = _b.items, totalCount = _b.totalCount;
        return (Object.assign(Object.assign({}, state), { loans: append ? __spreadArray(__spreadArray([], __read(state.loans)), __read(loans)) : loans, loansTotalCount: totalCount, loansCallState: exports.LoadingState.Loaded }));
    }), i1$1.on(loadLoansError, function (state, _a) {
        var error = _a.error;
        return (Object.assign(Object.assign({}, state), { loansCallState: { error: error } }));
    }), i1$1.on(fetchLoanById, function (state) { return (Object.assign(Object.assign({}, state), { loanCallState: exports.LoadingState.Loading })); }), i1$1.on(fetchLoanByIdSuccess, function (state, _a) {
        var loan = _a.loan;
        return (Object.assign(Object.assign({}, state), { loan: loan, loanCallState: exports.LoadingState.Loaded }));
    }), i1$1.on(fetchLoanByIdError, function (state, _a) {
        var error = _a.error;
        return (Object.assign(Object.assign({}, state), { loanCallState: { error: error } }));
    }), i1$1.on(fetchAmountOfLoansSuccess, function (state, _a) {
        var totalCount = _a.totalCount;
        return (Object.assign(Object.assign({}, state), { loansTotalCount: totalCount }));
    }), i1$1.on(fetchAmountOfLoansError, function (state) { return (Object.assign(Object.assign({}, state), { loansTotalCount: undefined })); }), i1$1.on(updateLoanAlias, function (state) { return (Object.assign(Object.assign({}, state), { aliasUpdateCallState: exports.LoadingState.Loading })); }), i1$1.on(updateLoanAliasSuccess, function (state) { return (Object.assign(Object.assign({}, state), { aliasUpdateCallState: exports.LoadingState.Loaded })); }), i1$1.on(updateLoanAliasError, function (state, _a) {
        var error = _a.error;
        return (Object.assign(Object.assign({}, state), { aliasUpdateCallState: { error: error } }));
    }));
    function loansReducer(state, action) {
        return _loansReducer(state, action);
    }

    var getLoansState = i1$1.createFeatureSelector(storeKey);
    var selectLoans = i1$1.createSelector(getLoansState, function (_a) {
        var loans = _a.loans;
        return loans;
    });
    var selectLoansCallState = i1$1.createSelector(getLoansState, function (_a) {
        var loansCallState = _a.loansCallState;
        return loansCallState;
    });
    var selectLoan = i1$1.createSelector(getLoansState, function (_a) {
        var loan = _a.loan;
        return loan;
    });
    var selectLoanCallState = i1$1.createSelector(getLoansState, function (_a) {
        var loanCallState = _a.loanCallState;
        return loanCallState;
    });
    var selectShowNavigateToOverview = i1$1.createSelector(getLoansState, function (_a) {
        var loansTotalCount = _a.loansTotalCount;
        return Boolean(loansTotalCount && loansTotalCount > 1);
    });
    var selectLoansCurrentPage = i1$1.createSelector(getLoansState, function (_a) {
        var loansCurrentPage = _a.loansCurrentPage;
        return loansCurrentPage;
    });
    var selectLoansTotalCount = i1$1.createSelector(getLoansState, function (_a) {
        var loansTotalCount = _a.loansTotalCount;
        return loansTotalCount;
    });
    var selectAliasUpdateCallState = i1$1.createSelector(getLoansState, function (_a) {
        var aliasUpdateCallState = _a.aliasUpdateCallState;
        return aliasUpdateCallState;
    });

    var LoansStoreService = /** @class */ (function () {
        function LoansStoreService(store) {
            this.store = store;
            /**
             * Stream of api call state for fetching loans
             */
            this.loansCallState$ = this.store.select(selectLoansCallState);
            /**
             * Stream of loans
             */
            this.loans$ = this.store.select(selectLoans);
            /**
             * Stream of api call state for fetching loan item
             */
            this.loanCallState$ = this.store.select(selectLoanCallState);
            /**
             * Stream of loan item
             */
            this.loan$ = this.store.select(selectLoan);
            /**
             * Stream indicates whether to show/hide navigate to overview button
             */
            this.showNavigateToOverview$ = this.store.select(selectShowNavigateToOverview);
            /**
             * Stream represents current loaded page for loan list
             */
            this.loansCurrentPage$ = this.store.select(selectLoansCurrentPage);
            /**
             * Stream represents total pages count for loan list
             */
            this.loansTotalCount$ = this.store.select(selectLoansTotalCount);
            /**
             * Stream of alias edit states (mapped from call state)
             */
            this.aliasEditState$ = this.store
                .select(selectAliasUpdateCallState)
                .pipe(operators.map(function (callState) { return (isLoadingState(callState) ? inputInlineEdit.InputInlineEditState.LOADING : inputInlineEdit.InputInlineEditState.IDLE); }));
        }
        /**
         * Fetch loans
         */
        LoansStoreService.prototype.fetchLoans = function (page, append) {
            if (append === void 0) { append = false; }
            this.store.dispatch(loadLoans({ page: page, append: append }));
        };
        /**
         * Fetch loan by id
         */
        LoansStoreService.prototype.fetchLoanById = function (id) {
            this.store.dispatch(fetchLoanById({ id: id }));
        };
        /**
         * Fetch amount of loans
         */
        LoansStoreService.prototype.fetchAmountOfLoans = function () {
            this.store.dispatch(fetchAmountOfLoans());
        };
        /**
         * Update alias
         *
         * @param alias
         */
        LoansStoreService.prototype.updateAlias = function (alias) {
            this.store.dispatch(updateLoanAlias({ alias: alias }));
        };
        /**
         * Cancel alias update
         */
        LoansStoreService.prototype.cancelAliasUpdate = function () {
            this.store.dispatch(updateLoanAliasCancel());
        };
        return LoansStoreService;
    }());
    /** @nocollapse */ LoansStoreService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansStoreService, deps: [{ token: i1__namespace.Store }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ LoansStoreService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansStoreService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansStoreService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.Store }]; } });

    // eslint-disable-next-line @angular-eslint/directive-class-suffix
    var LoanDetailsBaseComponent = /** @class */ (function () {
        function LoanDetailsBaseComponent(storeService) {
            this.storeService = storeService;
            /**
             * Loan details steam
             */
            this.loan$ = this.storeService.loan$;
            /**
             * Flag represents loading state
             */
            this.isLoading$ = this.storeService.loanCallState$.pipe(stateMap(isLoadingState));
            /**
             * Flag represents error state
             */
            this.isErrorState$ = this.storeService.loanCallState$.pipe(stateMap(isErrorState));
        }
        return LoanDetailsBaseComponent;
    }());
    /** @nocollapse */ LoanDetailsBaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanDetailsBaseComponent, deps: [{ token: LoansStoreService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ LoanDetailsBaseComponent.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: LoanDetailsBaseComponent, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanDetailsBaseComponent, decorators: [{
                type: i0.Directive
            }], ctorParameters: function () { return [{ type: LoansStoreService }]; } });

    var LoanInfoRetailComponent = /** @class */ (function (_super) {
        __extends(LoanInfoRetailComponent, _super);
        function LoanInfoRetailComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        LoanInfoRetailComponent.prototype.ngOnChanges = function () {
            _super.prototype.ngOnChanges.call(this);
            this.loanAlias = i1.getLoanAlias(this.loan);
        };
        return LoanInfoRetailComponent;
    }(i1.LoanInfoComponent));
    /** @nocollapse */ LoanInfoRetailComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanInfoRetailComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ LoanInfoRetailComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoRetailComponent, selector: "bb-loan-info-retail", usesInheritance: true, usesOnChanges: true, ngImport: i0__namespace, template: "<div class=\"bb-loans-loan-info\">\n  <div class=\"bb-block bb-block--xl bb-stack justify-content-between\">\n    <bb-loan-item-name [headingLevel]=\"3\" [loanName]=\"loanAlias\"></bb-loan-item-name>\n    <bb-loan-info-print-button class=\"bb-loans-loan-info\"></bb-loan-info-print-button>\n  </div>\n\n  <div class=\"bb-list\">\n    <section\n      *ngFor=\"let section of sections; trackBy: trackByTitle\"\n      class=\"bb-list__item bb-card card-body\"\n      data-role=\"loan-info-section\"\n    >\n      <bb-header-ui\n        [heading]=\"section.title\"\n        headingType=\"h3\"\n        headingClasses=\"bb-block bb-block--lg\"\n        data-role=\"loan-info-section__header\"\n      ></bb-header-ui>\n\n      <div class=\"row bb-loans-loan-info__section\">\n        <div\n          *ngFor=\"let item of section.items\"\n          [ngClass]=\"item.cssClasses\"\n          class=\"bb-block bb-block--lg\"\n          data-role=\"loan-info-section__item-wrapper\"\n        >\n          <ng-container *ngIf=\"getTypedDataItem(item).fieldKey; else customItemRef\">\n            <bb-loan-info-item\n              data-role=\"loan-info-section__data-item\"\n              *ngIf=\"getTypedDataItem(item) as dataItem\"\n              [value]=\"loan[dataItem.fieldKey]\"\n              [title]=\"dataItem.title\"\n              [type]=\"dataItem.fieldType\"\n              [currencyCode]=\"loan.currencyCode\"\n              [isCurrencySymbolUsed]=\"!!isCurrencySymbolUsed\"\n            >\n            </bb-loan-info-item>\n          </ng-container>\n\n          <ng-template #customItemRef>\n            <ng-container\n              bbLoanInfoCustomSection\n              [componentRef]=\"getItemComponentRef(item)\"\n              [loan]=\"loan\"\n            ></ng-container>\n          </ng-template>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n", components: [{ type: i1__namespace$1.LoanItemNameComponent, selector: "bb-loan-item-name", inputs: ["loanName", "headingLevel"] }, { type: i1__namespace$1.LoanInfoPrintButtonComponent, selector: "bb-loan-info-print-button" }, { type: i2__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$1.LoanInfoItemComponent, selector: "bb-loan-info-item", inputs: ["title", "value", "type", "currencyCode", "isCurrencySymbolUsed"] }], directives: [{ type: i3__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$1.LoanInfoCustomSectionDirective, selector: "[bbLoanInfoCustomSection]", inputs: ["componentRef", "loan"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanInfoRetailComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-loan-info-retail',
                        templateUrl: 'loan-info-retail.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }] });

    var LoanInfoWrapperComponent = /** @class */ (function (_super) {
        __extends(LoanInfoWrapperComponent, _super);
        function LoanInfoWrapperComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        /**
         * Configuration for loan info container
         */
        LoanInfoWrapperComponent.prototype.getDataConfig = function (_a) {
            var viewType = _a.viewType;
            return getLoanInfoDataConfig(viewType);
        };
        return LoanInfoWrapperComponent;
    }(LoanDetailsBaseComponent));
    /** @nocollapse */ LoanInfoWrapperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanInfoWrapperComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ LoanInfoWrapperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoWrapperComponent, selector: "bb-loan-info-wrapper", usesInheritance: true, ngImport: i0__namespace, template: "<bb-loans-main-container\n  [isLoadingState]=\"isLoading$ | async\"\n  [isErrorState]=\"isErrorState$ | async\"\n  rootWrapperClasses=\"\"\n  contentWrapperClasses=\"\"\n>\n  <bb-loan-info-retail\n    *ngIf=\"loan$ | async as loan\"\n    [loan]=\"loan\"\n    [dataConfig]=\"getDataConfig(loan)\"\n    [isCurrencySymbolUsed]=\"true\"\n  ></bb-loan-info-retail>\n</bb-loans-main-container>\n", components: [{ type: i1__namespace$1.LoansMainContainerComponent, selector: "bb-loans-main-container", inputs: ["isErrorState", "isLoadingState", "isEmptyState", "containerHeightFitToContent", "contentWrapperClasses", "rootWrapperClasses", "customErrorState", "customLoadingState", "customEmptyState"] }, { type: LoanInfoRetailComponent, selector: "bb-loan-info-retail" }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i3__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanInfoWrapperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-loan-info-wrapper',
                        templateUrl: './loan-info-wrapper.component.html',
                    }]
            }] });

    var LOAN_JOURNEY_COMMUNICATOR = new i0.InjectionToken('bb-loans-journey-communication');

    var _a, _b;
    var iconsConfig = (_a = {},
        _a[i1.LoanDefaultViewType.LineOfCredit] = 'payments',
        _a[i1.LoanDefaultViewType.Mortgage] = 'loans',
        _a[i1.LoanDefaultViewType.TermLoan] = 'home',
        _a);
    var accountEditEntitlementsConfig = (_b = {},
        _b[i5.AccountAliasDisplayingLevel.USER] = 'ProductSummary.ProductSummary.edit',
        _b[i5.AccountAliasDisplayingLevel.ACCOUNT] = 'ProductSummary.ManageArrangementAlias.edit',
        _b);
    function getFormulaViewType(_a, amounts) {
        var totalValue = _a.value;
        var amountValues = amounts.reduce(function (accum, _a) {
            var value = _a.value;
            if (value) {
                accum.push(new BigNumber__default["default"](value));
            }
            return accum;
        }, []);
        var moreThanThreeAmounts = amountValues.length > 3;
        if (totalValue) {
            var totalAmount = new BigNumber__default["default"](totalValue);
            var amountValuesSum = amountValues.reduce(function (accum, val) { return accum.plus(val); }, new BigNumber__default["default"](0));
            if (totalAmount.isEqualTo(amountValuesSum)) {
                return moreThanThreeAmounts ? i1.LoanSummaryFormulaViewType.CollapsibleList : i1.LoanSummaryFormulaViewType.Equation;
            }
            else {
                return i1.LoanSummaryFormulaViewType.OnlyTotal;
            }
        }
        else {
            return moreThanThreeAmounts
                ? i1.LoanSummaryFormulaViewType.AmountsInRows
                : i1.LoanSummaryFormulaViewType.AmountsInColumns;
        }
    }
    var getLoanSummaryFormulaDataConfig = function (isLineOfCreditType) { return function (_a) {
        var outstandingAmount = _a.outstandingAmount, drawnAmount = _a.drawnAmount, interestDue = _a.interestDue, feesDue = _a.feesDue, currencyCode = _a.currencyCode, inArrearsAmount = _a.inArrearsAmount;
        var totalAmount = {
            value: outstandingAmount,
            title: titles.items.totalOutstandingAmount,
        };
        var amounts = [
            {
                value: drawnAmount,
                title: isLineOfCreditType ? titles.items.drawnAmount : titles.items.remainingPrincipal,
            },
            {
                value: inArrearsAmount,
                title: titles.items.overdueAmount,
            },
            {
                value: interestDue,
                title: titles.items.interestDue,
            },
            {
                value: feesDue,
                title: titles.items.feesDue,
            },
        ].filter(function (_a) {
            var value = _a.value;
            return value;
        });
        var shouldShow = Boolean(currencyCode && (totalAmount.value || amounts.length));
        var viewType = getFormulaViewType(totalAmount, amounts);
        return { totalAmount: totalAmount, amounts: amounts, shouldShow: shouldShow, viewType: viewType };
    }; };
    var detailsPaymentInfoFn = function (_a) {
        var isFullyRepaid = _a.isFullyRepaid, nextRepaymentDate = _a.nextRepaymentDate, nextRepaymentAmount = _a.nextRepaymentAmount;
        if (isFullyRepaid) {
            return { paymentType: i1.LoanPaymentInfoType.FullyPaid };
        }
        var isOverdueDate = Boolean(nextRepaymentDate && Date.parse(nextRepaymentDate) - new Date().setHours(0, 0, 0, 0) < 0);
        return {
            date: nextRepaymentDate,
            amount: nextRepaymentAmount,
            paymentType: isOverdueDate ? i1.LoanPaymentInfoType.ScheduledLast : i1.LoanPaymentInfoType.ScheduledNext,
        };
    };
    var isProgressBarDataShown = function (owedAmount, availableAmount, totalAmount) { return owedAmount.isGreaterThanOrEqualTo(0) &&
        availableAmount.isGreaterThanOrEqualTo(0) &&
        totalAmount.isGreaterThan(0) &&
        totalAmount.isEqualTo(owedAmount.plus(availableAmount)); };
    var isAmountShown = function (amount) { return (amount ? amount.isGreaterThanOrEqualTo(0) : false); };
    var retailLoanSummaryTermLoanProgressDataConfig = {
        activeAmount: {
            fieldKey: 'drawnAmount',
            title: titles.items.owedAmount,
        },
        availableAmount: {
            fieldKey: 'paidAmount',
            title: titles.items.paidAmount,
        },
        totalAmount: {
            fieldKey: 'creditLimit',
            title: titles.items.creditLimit,
        },
        showData: function (_a) {
            var creditLimit = _a.creditLimit, paidAmount = _a.paidAmount, drawnAmount = _a.drawnAmount;
            return creditLimit && paidAmount && drawnAmount
                ? isProgressBarDataShown(new BigNumber__default["default"](drawnAmount), new BigNumber__default["default"](paidAmount), new BigNumber__default["default"](creditLimit))
                : false;
        },
    };
    var retailLoanSummaryLineOfCreditProgressDataConfig = {
        activeAmount: {
            fieldKey: 'drawnAmount',
            title: titles.items.owedAmount,
        },
        availableAmount: {
            fieldKey: 'availableBalance',
            title: titles.items.availableAmount,
        },
        totalAmount: {
            fieldKey: 'creditLimit',
            title: titles.items.creditLimit,
        },
        showData: function (_a) {
            var creditLimit = _a.creditLimit, availableBalance = _a.availableBalance, drawnAmount = _a.drawnAmount;
            return creditLimit && availableBalance && drawnAmount
                ? isProgressBarDataShown(new BigNumber__default["default"](drawnAmount), new BigNumber__default["default"](availableBalance), new BigNumber__default["default"](creditLimit))
                : false;
        },
    };
    var isMortgageTotalAmountShown = function (totalAmount, owedAmount, availableAmount) { return totalAmount.isGreaterThan(0) &&
        owedAmount.isGreaterThanOrEqualTo(0) &&
        availableAmount.isGreaterThanOrEqualTo(0) &&
        totalAmount.isEqualTo(owedAmount.plus(availableAmount)); };
    var retailLoanSummaryMortgageTermProgressDataConfig = {
        activeAmount: {
            fieldKey: 'drawnAmount',
            title: titles.items.owedAmount,
        },
        availableAmount: {
            fieldKey: 'paidAmount',
            title: titles.items.paidAmount,
        },
        totalAmount: {
            fieldKey: 'creditLimit',
            title: titles.items.creditLimit,
        },
        showProgressBar: function () { return false; },
        showActiveAmount: function (_a) {
            var drawnAmount = _a.drawnAmount;
            var amount = drawnAmount && new BigNumber__default["default"](drawnAmount);
            return amount ? isAmountShown(amount) : false;
        },
        showAvailableAmount: function (_a) {
            var paidAmount = _a.paidAmount;
            var amount = paidAmount && new BigNumber__default["default"](paidAmount);
            return amount ? isAmountShown(amount) : false;
        },
        showTotalAmount: function (_a) {
            var creditLimit = _a.creditLimit, paidAmount = _a.paidAmount, drawnAmount = _a.drawnAmount;
            return creditLimit && drawnAmount && paidAmount
                ? isMortgageTotalAmountShown(new BigNumber__default["default"](creditLimit), new BigNumber__default["default"](drawnAmount), new BigNumber__default["default"](paidAmount))
                : false;
        },
    };
    var getChangedAmountFocus = function (dataConfig) {
        var activeAmount = dataConfig.activeAmount, availableAmount = dataConfig.availableAmount, showActiveAmount = dataConfig.showActiveAmount, showAvailableAmount = dataConfig.showAvailableAmount;
        return Object.assign({}, dataConfig, {
            activeAmount: availableAmount,
            availableAmount: activeAmount,
            showActiveAmount: showAvailableAmount,
            showAvailableAmount: showActiveAmount,
        });
    };
    var retailLoanSummaryTermLoanDataConfig = {
        progressBar: retailLoanSummaryTermLoanProgressDataConfig,
        paymentInfo: detailsPaymentInfoFn,
        formula: getLoanSummaryFormulaDataConfig(false),
        icons: iconsConfig,
    };
    var retailLoanSummaryLineOfCreditDataConfig = {
        progressBar: retailLoanSummaryLineOfCreditProgressDataConfig,
        paymentInfo: detailsPaymentInfoFn,
        formula: getLoanSummaryFormulaDataConfig(true),
        icons: iconsConfig,
    };
    var retailLoanSummaryMortgageTermDataConfig = {
        progressBar: retailLoanSummaryMortgageTermProgressDataConfig,
        paymentInfo: detailsPaymentInfoFn,
        formula: getLoanSummaryFormulaDataConfig(false),
        icons: iconsConfig,
    };
    function getRetailLoanSummaryDataConfig(viewType, owedAmountFocus) {
        if (viewType === i1.LoanDefaultViewType.TermLoan) {
            return owedAmountFocus
                ? retailLoanSummaryTermLoanDataConfig
                : Object.assign({}, retailLoanSummaryTermLoanDataConfig, {
                    progressBar: getChangedAmountFocus(retailLoanSummaryTermLoanDataConfig.progressBar),
                });
        }
        if (viewType === i1.LoanDefaultViewType.LineOfCredit) {
            return owedAmountFocus
                ? retailLoanSummaryLineOfCreditDataConfig
                : Object.assign({}, retailLoanSummaryLineOfCreditDataConfig, {
                    progressBar: getChangedAmountFocus(retailLoanSummaryLineOfCreditDataConfig.progressBar),
                });
        }
        return retailLoanSummaryMortgageTermDataConfig;
    }

    var LoanSummaryComponent = /** @class */ (function (_super) {
        __extends(LoanSummaryComponent, _super);
        function LoanSummaryComponent(storeService, conditions, accountAliasDisplayingLevel, loanCommunication, remoteConfig) {
            var _this = _super.call(this, storeService) || this;
            _this.conditions = conditions;
            _this.accountAliasDisplayingLevel = accountAliasDisplayingLevel;
            _this.loanCommunication = loanCommunication;
            _this.remoteConfig = remoteConfig;
            /**
             * Stream represents edit states for loan alias
             */
            _this.aliasEditState$ = _this.storeService.aliasEditState$;
            _this.PaymentOptions = i1.PaymentOptions;
            _this.LoanDefaultViewType = i1.LoanDefaultViewType;
            _this.accountAliasDisplayingLevel = accountAliasDisplayingLevel || i5.AccountAliasDisplayingLevel.USER;
            _this.canEditAlias = _this.conditions.resolveEntitlements(accountEditEntitlementsConfig[_this.accountAliasDisplayingLevel]);
            return _this;
        }
        Object.defineProperty(LoanSummaryComponent.prototype, "loanId", {
            /**
             * Loan id
             */
            set: function (id) {
                this.storeService.fetchLoanById(id);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Configuration for loan summary container
         */
        LoanSummaryComponent.prototype.getDataConfig = function (_b) {
            var viewType = _b.viewType;
            var owedAmountFocus = this.remoteConfig.getValue('owed_amount_focus');
            return getRetailLoanSummaryDataConfig(viewType, owedAmountFocus);
        };
        /**
         * Updates a loan alias
         *
         * @param name
         */
        LoanSummaryComponent.prototype.onUpdateAlias = function (name) {
            this.storeService.updateAlias(name);
        };
        /**
         * Cancel(discard) current loan alias update
         */
        LoanSummaryComponent.prototype.onCancelAliasUpdate = function () {
            this.storeService.cancelAliasUpdate();
        };
        LoanSummaryComponent.prototype.onDrawAmount = function () {
            if (this.loanCommunication) {
                this.loanCommunication.navigateToLoanAdvance();
            }
            else {
                throw new Error('[bb-loans]: Communication service is missing');
            }
        };
        LoanSummaryComponent.prototype.onPayDown = function () {
            if (this.loanCommunication) {
                this.loanCommunication.navigateToLoanPayment();
            }
            else {
                throw new Error('[bb-loans]: Communication service is missing');
            }
        };
        LoanSummaryComponent.prototype.getAllowedPaymentOption = function (paymentOptionName, options) {
            var _a;
            return (!!((_a = options === null || options === void 0 ? void 0 : options.paymentOptions.find(function (option) { return option.name === paymentOptionName; })) === null || _a === void 0 ? void 0 : _a.allowed) && !!this.loanCommunication);
        };
        return LoanSummaryComponent;
    }(LoanDetailsBaseComponent));
    /** @nocollapse */ LoanSummaryComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanSummaryComponent, deps: [{ token: LoansStoreService }, { token: entitlements.CONDITIONS }, { token: i5.ACCOUNT_ALIAS_DISPLAYING_LEVEL, optional: true }, { token: LOAN_JOURNEY_COMMUNICATOR, optional: true }, { token: i2__namespace$1.RemoteConfigService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ LoanSummaryComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryComponent, selector: "bb-loan-summary", inputs: { loanId: "loanId" }, usesInheritance: true, ngImport: i0__namespace, template: "<bb-loans-main-container [isLoadingState]=\"isLoading$ | async\" [isErrorState]=\"isErrorState$ | async\">\n  <bb-retail-loan-summary-container\n    *ngIf=\"loan$ | async as loan\"\n    [loan]=\"loan\"\n    [dataConfig]=\"getDataConfig(loan)\"\n    [showPayDownButton]=\"getAllowedPaymentOption(PaymentOptions.LoanPayment, loan.paymentOptions)\"\n    [showDrawAmountButton]=\"getAllowedPaymentOption(PaymentOptions.LoanAdvance, loan.paymentOptions)\"\n    [showFormula]=\"false\"\n    [showInterestRateOnTop]=\"loan.loanType === LoanDefaultViewType.Mortgage\"\n    [owedAmountFocus]=\"owedAmountFocus\"\n    (updateAlias)=\"onUpdateAlias($event)\"\n    (cancelAliasUpdate)=\"onCancelAliasUpdate()\"\n    (drawAmount)=\"onDrawAmount()\"\n    (payDown)=\"onPayDown()\"\n  ></bb-retail-loan-summary-container>\n</bb-loans-main-container>\n", components: [{ type: i1__namespace$1.LoansMainContainerComponent, selector: "bb-loans-main-container", inputs: ["isErrorState", "isLoadingState", "isEmptyState", "containerHeightFitToContent", "contentWrapperClasses", "rootWrapperClasses", "customErrorState", "customLoadingState", "customEmptyState"] }, { type: i1__namespace$1.RetailLoanSummaryContainerComponent, selector: "bb-retail-loan-summary-container", inputs: ["showPayDownButton", "showDrawAmountButton", "showFormula", "showInterestRateOnTop", "owedAmountFocus"], outputs: ["drawAmount", "payDown", "updateAlias", "cancelAliasUpdate"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i3__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanSummaryComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-loan-summary',
                        templateUrl: './loan-summary.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: LoansStoreService }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [entitlements.CONDITIONS]
                        }] }, { type: i5__namespace.AccountAliasDisplayingLevel, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i5.ACCOUNT_ALIAS_DISPLAYING_LEVEL]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [LOAN_JOURNEY_COMMUNICATOR]
                        }] }, { type: i2__namespace$1.RemoteConfigService }];
        }, propDecorators: { loanId: [{
                    type: i0.Input
                }] } });

    var LoanDetailsWrapperComponent = /** @class */ (function () {
        function LoanDetailsWrapperComponent(router, activatedRoute, storeService) {
            var _a, _b;
            this.router = router;
            this.activatedRoute = activatedRoute;
            this.storeService = storeService;
            /**
             * Stream of account ids from router params
             */
            this.accountId$ = this.activatedRoute.params.pipe(operators.map(function (_c) {
                var selectedAccount = _c.selectedAccount;
                return selectedAccount;
            }));
            /**
             * Whether to show / hide navigate to overview btn
             */
            this.showNavigationButton$ = this.storeService.showNavigateToOverview$;
            /**
             * Array of tabs to be displayed
             */
            this.tabs = this.createRouteTabs(((_b = (_a = this.activatedRoute.snapshot) === null || _a === void 0 ? void 0 : _a.routeConfig) === null || _b === void 0 ? void 0 : _b.children) || []);
            this.storeService.fetchAmountOfLoans();
        }
        /**
         * Navigates to the list overview view
         *
         * TODO: set up relative routing
         */
        LoanDetailsWrapperComponent.prototype.navigateToAccounts = function () {
            this.router.navigate(['my-accounts/list']);
        };
        LoanDetailsWrapperComponent.prototype.createRouteTabs = function (routes) {
            return routes
                .filter(function (_c) {
                var path = _c.path, data = _c.data;
                return path && (data === null || data === void 0 ? void 0 : data.titleFn);
            })
                .map(function (_c) {
                var path = _c.path, data = _c.data;
                return ({
                    title: data.titleFn(),
                    route: path,
                });
            });
        };
        return LoanDetailsWrapperComponent;
    }());
    /** @nocollapse */ LoanDetailsWrapperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanDetailsWrapperComponent, deps: [{ token: i1__namespace$2.Router }, { token: i1__namespace$2.ActivatedRoute }, { token: LoansStoreService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ LoanDetailsWrapperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanDetailsWrapperComponent, selector: "bb-loan-details-wrapper", ngImport: i0__namespace, template: "<div class=\"bb-layout__container d-block bb-block--xl mt-5 container-fluid container\">\n  <div class=\"bb-block bb-block--xl\">\n    <button\n      data-role=\"loans-heading-button__navigation\"\n      (click)=\"navigateToAccounts()\"\n      class=\"bb-stack justify-content-start bb-stack--density-sm btn-link-text btn-md btn\"\n    >\n      <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back bb-icon--sm\"></i>\n      <span i18n-navigationButtonTitle=\"Loan details heading nav button title@@loans.details.heading.nav-button.title\"\n        >Back to My Accounts</span\n      >\n    </button>\n  </div>\n\n  <section class=\"bb-block bb-block--xl p--4\">\n    <h2 class=\"sr-only\" i18n=\"Loans details a11y section heading@@loans.details.section.a11y.heading\">Loan details</h2>\n    <bb-loan-summary *ngIf=\"accountId$ | async as accountId\" [loanId]=\"accountId\"></bb-loan-summary>\n  </section>\n\n  <div>\n    <div>\n      <div class=\"bb-card__body\">\n        <bb-loans-tabs data-role=\"loan-details__tabs\" [tabs]=\"tabs\"></bb-loans-tabs>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: LoanSummaryComponent, selector: "bb-loan-summary", inputs: ["loanId"] }, { type: i1__namespace$1.LoansTabsComponent, selector: "bb-loans-tabs", inputs: ["tabs"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i3__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanDetailsWrapperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-loan-details-wrapper',
                        templateUrl: './loan-details-wrapper.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.Router }, { type: i1__namespace$2.ActivatedRoute }, { type: LoansStoreService }]; } });

    function safeStringify(value) {
        try {
            return JSON.stringify(value) || '';
        }
        catch (e) {
            console.warn(e);
            return '';
        }
    }

    var LoanTransactionsWrapperComponent = /** @class */ (function () {
        function LoanTransactionsWrapperComponent(configurationService) {
            this.configurationService = configurationService;
            /**
             * Transaction table config
             */
            this.transactionConfig = this.configurationService.transactionConfig;
            /**
             * Transaction table initial filter options
             */
            this.initialFilterOptions = safeStringify(this.transactionConfig.initialFilterOptions);
            /**
             * Transaction table initial sort options
             */
            this.initialSortOptions = safeStringify(this.transactionConfig.initialSortOptions);
        }
        return LoanTransactionsWrapperComponent;
    }());
    /** @nocollapse */ LoanTransactionsWrapperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanTransactionsWrapperComponent, deps: [{ token: LoansJourneyConfigurationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ LoanTransactionsWrapperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanTransactionsWrapperComponent, selector: "bb-loan-transactions-wrapper", ngImport: i0__namespace, template: "<bb-transactions-list-widget\n  [pageSize]=\"transactionConfig.itemsPerPage\"\n  [maxNavPages]=\"transactionConfig.maxNavPages\"\n  [showControls]=\"transactionConfig.showControls\"\n  [showManageNotes]=\"transactionConfig.showManageNotes\"\n  [showCheckImage]=\"transactionConfig.showCheckImages\"\n  [showChangeCategory]=\"transactionConfig.showChangeCategory\"\n  [showPendingTransactionsOnTop]=\"transactionConfig.showPendingOnTop\"\n  [paginationType]=\"transactionConfig.paginationType\"\n  [getOrPostEndpoints]=\"transactionConfig.endpointType\"\n  [googleAPIKey]=\"transactionConfig.apiKey\"\n  [initialFilterOptions]=\"initialFilterOptions\"\n  [initialSortOptions]=\"initialSortOptions\"\n  [disputeByBillingStatus]=\"transactionConfig.disputeByBillingStatus\"\n  [disputeEligibilityDays]=\"transactionConfig.disputeEligibilityDays\"\n  [disputeTopicId]=\"transactionConfig.disputeTopicId\"\n  [disputeTransactionTypes]=\"transactionConfig.disputeTransactionTypes\"\n  [enableDisputeAndInquiry]=\"$any(transactionConfig.enableDisputeAndInquiry)\"\n  [inquireTopicId]=\"transactionConfig.inquireTopicId\"\n>\n</bb-transactions-list-widget>\n", components: [{ type: i2__namespace$2.TransactionsListWidgetComponent, selector: "bb-transactions-list-widget" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanTransactionsWrapperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-loan-transactions-wrapper',
                        templateUrl: './loan-transactions-wrapper.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: LoansJourneyConfigurationService }]; } });

    var loanIdParamKey = 'selectedAccount';
    var scheduleIdParam = 'paymentScheduleId';

    // Fetch amortized schedule
    var fetchAmortizationSchedule = i1$1.createAction('[Loans API] fetch amortization schedule', i1$1.props());
    var fetchAmortizationScheduleSuccess = i1$1.createAction('[Loans API] fetch amortization schedule succeed', i1$1.props());
    var fetchAmortizationScheduleError = i1$1.createAction('[Loans API] fetch amortization schedule ', i1$1.props());
    // Fetch amortized schedule payment by id
    var fetchAmortizationPayment = i1$1.createAction('[Loans API] fetch amortization schedule payment by id', i1$1.props());
    var fetchAmortizationPaymentSuccess = i1$1.createAction('[Loans API] fetch amortization schedule payment succeed', i1$1.props());
    var fetchAmortizationPaymentError = i1$1.createAction('[Loans API] fetch  amortization schedule payment failures', i1$1.props());

    var paymentScheduleStoreKey = 'loansJourneyPaymentSchedule';
    var initialState = {
        amortizedPayments: [],
        amortizedPaymentsTotalCount: 0,
        amortizedPaymentsCurrenPage: 0,
        amortizedPaymentsCallState: exports.LoadingState.Init,
        amortizedPayment: undefined,
        amortizedPaymentCallState: exports.LoadingState.Init,
    };
    var reducer = i1$1.createReducer(initialState, i1$1.on(fetchAmortizationSchedule, function (state, _a) {
        var from = _a.params.from;
        return (Object.assign(Object.assign({}, state), { amortizedPaymentsCallState: exports.LoadingState.Loading, amortizedPaymentsCurrenPage: from }));
    }), i1$1.on(fetchAmortizationScheduleSuccess, function (state, _a) {
        var append = _a.append, _b = _a.response, items = _b.items, totalCount = _b.totalCount;
        return (Object.assign(Object.assign({}, state), { amortizedPayments: append ? __spreadArray(__spreadArray([], __read(state.amortizedPayments)), __read(items)) : items, amortizedPaymentsTotalCount: totalCount, amortizedPaymentsCallState: exports.LoadingState.Loaded }));
    }), i1$1.on(fetchAmortizationScheduleError, function (state, _a) {
        var error = _a.error;
        return (Object.assign(Object.assign({}, state), { amortizedPaymentsCallState: { error: error } }));
    }), i1$1.on(fetchAmortizationPayment, function (state) { return (Object.assign(Object.assign({}, state), { amortizedPaymentCallState: exports.LoadingState.Loading })); }), i1$1.on(fetchAmortizationPaymentSuccess, function (state, _a) {
        var amortizedPayment = _a.amortizedPayment;
        return (Object.assign(Object.assign({}, state), { amortizedPayment: amortizedPayment, amortizedPaymentCallState: exports.LoadingState.Loaded }));
    }), i1$1.on(fetchAmortizationPaymentError, function (state, _a) {
        var error = _a.error;
        return (Object.assign(Object.assign({}, state), { amortizedPaymentCallState: { error: error } }));
    }));
    function paymentScheduleReducer(state, action) {
        return reducer(state, action);
    }

    var createPaymentScheduleSelector = function (projector) {
        // eslint-disable-next-line @typescript-eslint/ban-types
        return i1$1.createSelector(i1$1.createFeatureSelector(paymentScheduleStoreKey), projector);
    };
    var selectAmortizedPayments = createPaymentScheduleSelector(function (_a) {
        var amortizedPayments = _a.amortizedPayments;
        return amortizedPayments;
    });
    var selectAmortizedPaymentsCallState = createPaymentScheduleSelector(function (_a) {
        var amortizedPaymentsCallState = _a.amortizedPaymentsCallState;
        return amortizedPaymentsCallState;
    });
    var selectAmortizedPaymentsTotalCount = createPaymentScheduleSelector(function (_a) {
        var amortizedPaymentsTotalCount = _a.amortizedPaymentsTotalCount;
        return amortizedPaymentsTotalCount;
    });
    var selectAmortizedPaymentsCurrentPage = createPaymentScheduleSelector(function (_a) {
        var amortizedPaymentsCurrenPage = _a.amortizedPaymentsCurrenPage;
        return amortizedPaymentsCurrenPage;
    });
    var selectAmortizedPayment = createPaymentScheduleSelector(function (_a) {
        var amortizedPayment = _a.amortizedPayment;
        return amortizedPayment;
    });
    var selectAmortizedPaymentCallState = createPaymentScheduleSelector(function (_a) {
        var amortizedPaymentCallState = _a.amortizedPaymentCallState;
        return amortizedPaymentCallState;
    });

    var PaymentScheduleStoreService = /** @class */ (function () {
        function PaymentScheduleStoreService(store) {
            this.store = store;
            /**
             * Stream of api call state for fetching scheduled amortized payments
             */
            this.amortizedPaymentsCallState$ = this.store.select(selectAmortizedPaymentsCallState);
            /**
             * Stream of scheduled amortized payments
             */
            this.amortizedPayments$ = this.store.select(selectAmortizedPayments);
            /**
             * Stream of api call state for fetching scheduled amortized payment
             */
            this.amortizedPaymentCallState$ = this.store.select(selectAmortizedPaymentCallState);
            /**
             * Stream of scheduled amortized payment
             */
            this.amortizedPayment$ = this.store.select(selectAmortizedPayment);
            /**
             * Stream represents total pages count for scheduled amortized payments
             */
            this.amortizedPaymentsTotalCount$ = this.store.select(selectAmortizedPaymentsTotalCount);
            /**
             * Stream represents current loaded page for payment schedule table/list
             */
            this.amortizedPaymentsCurrentPage$ = this.store.select(selectAmortizedPaymentsCurrentPage);
        }
        /**
         * Fetch amortized payment schedule
         */
        PaymentScheduleStoreService.prototype.fetchAmortizationSchedule = function (params) {
            this.store.dispatch(fetchAmortizationSchedule({ params: params }));
        };
        /**
         * Fetch amortized payment
         */
        PaymentScheduleStoreService.prototype.fetchAmortizationPayment = function (params) {
            this.store.dispatch(fetchAmortizationPayment({ params: params }));
        };
        return PaymentScheduleStoreService;
    }());
    /** @nocollapse */ PaymentScheduleStoreService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleStoreService, deps: [{ token: i1__namespace.Store }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ PaymentScheduleStoreService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleStoreService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleStoreService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.Store }]; } });

    // TODO: move to separate and reorganize the flow
    var PaymentScheduleWrapperComponent = /** @class */ (function () {
        function PaymentScheduleWrapperComponent(configurationService, storeService, mediaQueryService, activatedRoute, router, remoteConfig) {
            this.configurationService = configurationService;
            this.storeService = storeService;
            this.mediaQueryService = mediaQueryService;
            this.activatedRoute = activatedRoute;
            this.router = router;
            this.remoteConfig = remoteConfig;
            /**
             * Stream of Amortized Payments
             */
            this.amortizedPayments$ = this.storeService.amortizedPayments$;
            /**
             * Payment schedule configuration
             */
            this.scheduleConfig = this.configurationService.paymentSchedule;
            /**
             * Hide or show payment status in the table
             */
            this.showPaymentStatus = this.remoteConfig.getValue('show_payment_status_retail_loans');
            /**
             * Flag represents error state
             */
            this.isErrorState$ = this.storeService.amortizedPaymentsCallState$.pipe(stateMap(isErrorState));
            /**
             * Stream represents total amount of the pages
             */
            this.amortizedPaymentsTotalCount$ = this.storeService.amortizedPaymentsTotalCount$;
            /**
             * Stream represent current loaded page number
             */
            this.amortizedPaymentsCurrentPage$ = this.storeService.amortizedPaymentsCurrentPage$;
            /**
             * Flag represents the tablet screen resolution
             */
            this.isTabletResolution$ = this.mediaQueryService.isMediaBreakpointMatches('max-width', 'lg');
            this._isLoading$ = rxjs.combineLatest([
                this.isTabletResolution$,
                this.storeService.amortizedPaymentsCallState$,
                this.amortizedPaymentsCurrentPage$,
            ]);
            /**
             * Flag represents page loading state
             */
            this.isPageLoading$ = this._isLoading$.pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), isTabletResolution = _b[0], callState = _b[1], currentPage = _b[2];
                return isLoadingState(callState) && !(isTabletResolution && currentPage > 0);
            }));
            /**
             * Flag represents load more button loading state
             */
            this.isButtonLoading$ = this._isLoading$.pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), isTabletResolution = _b[0], callState = _b[1], currentPage = _b[2];
                return isLoadingState(callState) && isTabletResolution && currentPage > 0;
            }));
            /**
             * Flag represents visibility of load more button
             */
            this.isLoadMoreVisible$ = rxjs.combineLatest([
                this.amortizedPaymentsCurrentPage$,
                this.amortizedPaymentsTotalCount$,
                this.amortizedPayments$,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), page = _b[0], total = _b[1], length = _b[2].length;
                return !(page === 0 && length === total);
            }));
            /**
             * Flag represents empty state
             */
            this.isEmptyState$ = this.storeService.amortizedPaymentsTotalCount$.pipe(operators.map(function (totalCount) { return totalCount === 0; }));
            this.baseReqParams = {
                loanId: this.activatedRoute.snapshot.parent.params[loanIdParamKey],
                size: this.scheduleConfig.itemsPerPage,
                from: 0,
                append: false,
            };
            this.storeService.fetchAmortizationSchedule(this.baseReqParams);
        }
        /**
         * Load loans on pagination page changes
         *
         * @param page
         */
        PaymentScheduleWrapperComponent.prototype.onPageChange = function (page) {
            this.storeService.fetchAmortizationSchedule(Object.assign(Object.assign({}, this.baseReqParams), { from: page }));
        };
        /**
         * Load loans on load more button click
         *
         * @param from
         */
        PaymentScheduleWrapperComponent.prototype.onLoadMore = function (_a) {
            var from = _a.from;
            this.storeService.fetchAmortizationSchedule(Object.assign(Object.assign({}, this.baseReqParams), { from: from, append: true }));
        };
        /**
         * Emits in item select
         */
        PaymentScheduleWrapperComponent.prototype.onItemSelect = function (_a) {
            var id = _a.id;
            this.router.navigate([id], { relativeTo: this.activatedRoute });
        };
        return PaymentScheduleWrapperComponent;
    }());
    /** @nocollapse */ PaymentScheduleWrapperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleWrapperComponent, deps: [{ token: LoansJourneyConfigurationService }, { token: PaymentScheduleStoreService }, { token: i3__namespace$1.MediaQueryService }, { token: i1__namespace$2.ActivatedRoute }, { token: i1__namespace$2.Router }, { token: i2__namespace$1.RemoteConfigService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ PaymentScheduleWrapperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaymentScheduleWrapperComponent, selector: "bb-payment-schedule-wrapper", ngImport: i0__namespace, template: "<bb-loans-main-container\n  [isLoadingState]=\"isPageLoading$ | async\"\n  [isErrorState]=\"isErrorState$ | async\"\n  [isEmptyState]=\"isEmptyState$ | async\"\n  [customEmptyState]=\"customEmptyState\"\n  rootWrapperClasses=\"\"\n  contentWrapperClasses=\"\"\n>\n  <div class=\"bb-card\">\n    <div class=\"bb-card__body\">\n      <ng-container *ngIf=\"isTabletResolution$ | async; else desktop\">\n        <bb-loan-amortized-payment-schedule-list\n          [items]=\"(amortizedPayments$ | async)!\"\n          (selectItem)=\"onItemSelect($event)\"\n        ></bb-loan-amortized-payment-schedule-list>\n      </ng-container>\n\n      <bb-load-button-ui\n        *ngIf=\"isLoadMoreVisible$ | async\"\n        [from]=\"(amortizedPaymentsCurrentPage$ | async)!\"\n        [size]=\"scheduleConfig.itemsPerPage\"\n        [totalCount]=\"(amortizedPaymentsTotalCount$ | async)!\"\n        [isLoading]=\"(isButtonLoading$ | async)!\"\n        (paramChange)=\"onLoadMore($event)\"\n        class=\"bb-stack bb-stack--center\"\n        i18n=\"Load more button@loans.payment-schedule.load-more.btn\"\n        color=\"link\"\n        data-role=\"payment-schedule-wrapper__load-more-btn\"\n      >\n        Load more\n      </bb-load-button-ui>\n\n      <ng-template #desktop>\n        <bb-loan-amortized-payment-schedule-table\n          [items]=\"(amortizedPayments$ | async)!\"\n          (selectItem)=\"onItemSelect($event)\"\n          [showPaymentStatus]=\"showPaymentStatus\"\n        >\n        </bb-loan-amortized-payment-schedule-table>\n      </ng-template>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</bb-loans-main-container>\n\n<ng-template #customEmptyState>\n  <div class=\"bb-state-container bb-state-container--min-height\" data-role=\"payment-schedule-wrapper__empty-state\">\n    <bb-empty-state-ui\n      title=\"No Upcoming Payments\"\n      i18n-title=\"Payment schedule empty state title@loans.payment-schedule.empty-state.title\"\n      subtitle=\"You don't have any upcoming payments to be displayed.\"\n      i18n-subtitle=\"Payment schedule empty state subtitle@loans.payment-schedule.empty-state.subtitle\"\n      iconModifier=\"loans\"\n      iconSize=\"xxl\"\n    >\n    </bb-empty-state-ui>\n  </div>\n</ng-template>\n", components: [{ type: i1__namespace$1.LoansMainContainerComponent, selector: "bb-loans-main-container", inputs: ["isErrorState", "isLoadingState", "isEmptyState", "containerHeightFitToContent", "contentWrapperClasses", "rootWrapperClasses", "customErrorState", "customLoadingState", "customEmptyState"] }, { type: i1__namespace$1.LoanAmortizedPaymentScheduleListComponent, selector: "bb-loan-amortized-payment-schedule-list" }, { type: i7__namespace.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i1__namespace$1.LoanAmortizedPaymentScheduleTableComponent, selector: "bb-loan-amortized-payment-schedule-table", inputs: ["showPaymentStatus"] }, { type: i8__namespace.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$2.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }], pipes: { "async": i3__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleWrapperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-schedule-wrapper',
                        templateUrl: './payment-schedule-wrapper.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: LoansJourneyConfigurationService }, { type: PaymentScheduleStoreService }, { type: i3__namespace$1.MediaQueryService }, { type: i1__namespace$2.ActivatedRoute }, { type: i1__namespace$2.Router }, { type: i2__namespace$1.RemoteConfigService }]; } });

    var PaymentScheduleDetailsModalHeaderComponent = /** @class */ (function () {
        function PaymentScheduleDetailsModalHeaderComponent() {
            /**
             * Emits on print button click
             */
            this.printModal = new i0.EventEmitter();
            /**
             * Emits on close modal
             */
            this.closeModal = new i0.EventEmitter();
        }
        return PaymentScheduleDetailsModalHeaderComponent;
    }());
    /** @nocollapse */ PaymentScheduleDetailsModalHeaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleDetailsModalHeaderComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ PaymentScheduleDetailsModalHeaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaymentScheduleDetailsModalHeaderComponent, selector: "bb-payment-schedule-details-modal-header", outputs: { printModal: "printModal", closeModal: "closeModal" }, ngImport: i0__namespace, template: "<h3\n  class=\"modal-title bb-stack__item bb-stack__item--fill\"\n  i18n=\"Payment schedule details modal header title@loans.payment-schedule-details.modal.header.title\"\n>\n  Automatic loan payment\n</h3>\n\n<button\n  bbButton\n  type=\"button\"\n  color=\"unstyled\"\n  class=\"bb-stack__item bb-stack__item--spacing-lg\"\n  aria-label=\"Print\"\n  i18n-aria-label=\"\n    Payment schedule details modal header print button aria\n    label@loans.payment-schedule-details.modal.header.print-btn.aria-label\n  \"\n  data-role=\"bb-loan-payment-schedule-details-modal-header__print-btn\"\n  (click)=\"printModal.emit()\"\n>\n  <bb-icon-ui name=\"print\"></bb-icon-ui>\n</button>\n<button\n  bbButton\n  type=\"button\"\n  color=\"unstyled\"\n  class=\"bb-stack__item\"\n  aria-label=\"Close\"\n  i18n-aria-label=\"\n    Payment schedule details modal header close button aria\n    label@loans.payment-schedule-details.modal.header.close-btn.aria-label\n  \"\n  data-role=\"bb-loan-payment-schedule-details-modal-header__close-btn\"\n  (click)=\"closeModal.emit()\"\n>\n  <bb-icon-ui name=\"clear\"></bb-icon-ui>\n</button>\n", components: [{ type: i1__namespace$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2__namespace$3.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleDetailsModalHeaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-schedule-details-modal-header',
                        templateUrl: './payment-schedule-details-modal-header.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { printModal: [{
                    type: i0.Output
                }], closeModal: [{
                    type: i0.Output
                }] } });

    /**
     * @dynamic
     */
    var PaymentScheduleDetailsWrapperComponent = /** @class */ (function (_super) {
        __extends(PaymentScheduleDetailsWrapperComponent, _super);
        function PaymentScheduleDetailsWrapperComponent(activatedRoute, router, paymentScheduleStoreService, loansStoreService, document, remoteConfig) {
            var _this = _super.call(this) || this;
            _this.activatedRoute = activatedRoute;
            _this.router = router;
            _this.paymentScheduleStoreService = paymentScheduleStoreService;
            _this.loansStoreService = loansStoreService;
            _this.document = document;
            _this.remoteConfig = remoteConfig;
            _this.callStates$ = rxjs.combineLatest([
                _this.paymentScheduleStoreService.amortizedPaymentCallState$,
                _this.loansStoreService.loanCallState$,
            ]);
            /**
             *  Stream of payment id param
             */
            _this.paymentId$ = _this.activatedRoute.params.pipe(operators.pluck(scheduleIdParam));
            /**
             * Stream of scheduled amortized payment
             */
            _this.amortizedPayment$ = _this.paymentScheduleStoreService.amortizedPayment$;
            /**
             * Flag represents loading state
             */
            _this.isLoading$ = _this.callStates$.pipe(stateMap(isLoadingState));
            /**
             * Flag represents error state
             */
            _this.isErrorState$ = _this.callStates$.pipe(stateMap(isErrorState));
            /**
             * Stream of loan
             */
            _this.loan$ = _this.loansStoreService.loan$;
            /**
             * Hide or show payment status
             */
            _this.showPaymentStatus = _this.remoteConfig.getValue('show_payment_status_retail_loans');
            /**
             * Modal options
             */
            _this.modalOptions = {
                backdrop: 'static',
                keyboard: true,
                centered: true,
                ariaDescribedBy: 'bb-payment-schedule-details-modal-body',
            };
            rxjs.combineLatest([_this.paymentId$, _this.loan$])
                .pipe(operators.filter(function (_b) {
                var _c = __read(_b, 2), loan = _c[1];
                return Boolean(loan);
            }), operators.takeUntil(_this.componentDestroyed$))
                .subscribe(function (_b) {
                var _c = __read(_b, 2), amortizationPaymentId = _c[0], loan = _c[1];
                _this.paymentScheduleStoreService.fetchAmortizationPayment({ loanId: loan.id, amortizationPaymentId: amortizationPaymentId });
            });
            return _this;
        }
        PaymentScheduleDetailsWrapperComponent.prototype.onCloseModal = function () {
            this.router.navigate(['..'], { relativeTo: this.activatedRoute });
        };
        PaymentScheduleDetailsWrapperComponent.prototype.onPrint = function () {
            var _a;
            (_a = this.document.defaultView) === null || _a === void 0 ? void 0 : _a.print();
        };
        return PaymentScheduleDetailsWrapperComponent;
    }(i1.DestroyableComponent));
    /** @nocollapse */ PaymentScheduleDetailsWrapperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleDetailsWrapperComponent, deps: [{ token: i1__namespace$2.ActivatedRoute }, { token: i1__namespace$2.Router }, { token: PaymentScheduleStoreService }, { token: LoansStoreService }, { token: i3.DOCUMENT }, { token: i2__namespace$1.RemoteConfigService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ PaymentScheduleDetailsWrapperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaymentScheduleDetailsWrapperComponent, selector: "bb-payment-schedule-details-wrapper", usesInheritance: true, ngImport: i0__namespace, template: "<bb-modal-ui\n  [modalOptions]=\"modalOptions\"\n  [isOpen]=\"true\"\n  (isOpenChange)=\"onCloseModal()\"\n  data-role=\"bb-loan-payment-schedule-details-modal\"\n>\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-payment-schedule-details-modal-header\n        class=\"bb-stack\"\n        data-role=\"bb-loan-payment-schedule-details-modal__header\"\n        (closeModal)=\"onCloseModal()\"\n        (printModal)=\"onPrint()\"\n      ></bb-payment-schedule-details-modal-header>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <bb-loans-main-container\n        [isLoadingState]=\"isLoading$ | async\"\n        [isErrorState]=\"isErrorState$ | async\"\n        [containerHeightFitToContent]=\"true\"\n        rootWrapperClasses=\"\"\n        contentWrapperClasses=\"\"\n      >\n        <bb-loan-amortized-payment-schedule-details\n          data-role=\"bb-loan-payment-schedule-details-modal__body\"\n          *ngIf=\"amortizedPayment$ | async as amortizedPayment\"\n          [amortizationPayment]=\"amortizedPayment\"\n          [loan]=\"(loan$ | async)!\"\n          [id]=\"modalOptions.ariaDescribedBy\"\n          [showStatus]=\"showPaymentStatus\"\n        ></bb-loan-amortized-payment-schedule-details>\n      </bb-loans-main-container>\n    </ng-template>\n  </bb-modal-body-ui>\n</bb-modal-ui>\n", components: [{ type: i5__namespace$1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i5__namespace$1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: PaymentScheduleDetailsModalHeaderComponent, selector: "bb-payment-schedule-details-modal-header", outputs: ["printModal", "closeModal"] }, { type: i5__namespace$1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$1.LoansMainContainerComponent, selector: "bb-loans-main-container", inputs: ["isErrorState", "isLoadingState", "isEmptyState", "containerHeightFitToContent", "contentWrapperClasses", "rootWrapperClasses", "customErrorState", "customLoadingState", "customEmptyState"] }, { type: i1__namespace$1.LoanAmortizedPaymentScheduleDetailsComponent, selector: "bb-loan-amortized-payment-schedule-details", inputs: ["amortizationPayment", "loan", "showStatus"] }], directives: [{ type: i5__namespace$1.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i5__namespace$1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i3__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleDetailsWrapperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-schedule-details-wrapper',
                        templateUrl: './payment-schedule-details-wrapper.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace$2.ActivatedRoute }, { type: i1__namespace$2.Router }, { type: PaymentScheduleStoreService }, { type: LoansStoreService }, { type: Document, decorators: [{
                            type: i0.Inject,
                            args: [i3.DOCUMENT]
                        }] }, { type: i2__namespace$1.RemoteConfigService }];
        } });

    // To prevent error on package:apps process
    var tabs = {
        transactions: function () { return $localize(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([":Loan details transactions tab title@@loans.details.tab.transactions.title:Transactions"], [":Loan details transactions tab title@@loans.details.tab.transactions.title:Transactions"]))); },
        statements: function () { return $localize(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject([":Loan details account statements tab title@@loans.details.tab.statements.title:Statements"], [":Loan details account statements tab title@@loans.details.tab.statements.title:Statements"]))); },
        loanInfo: function () { return $localize(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject([":Loan details info tab title@@loans.details.tab.loan-info.title:Loan info"], [":Loan details info tab title@@loans.details.tab.loan-info.title:Loan info"]))); },
        paymentSchedule: function () { return $localize(templateObject_4 || (templateObject_4 = __makeTemplateObject([":Loan details payment schedule tab title@@loans.details.tab.payment-schedule.title:Payment schedule"], [":Loan details payment schedule tab title@@loans.details.tab.payment-schedule.title:Payment schedule"]))); },
    };
    var loansRoutes = [
        {
            path: ":" + loanIdParamKey,
            component: LoanDetailsWrapperComponent,
            children: [
                {
                    path: '',
                    redirectTo: 'transactions',
                    pathMatch: 'full',
                },
                {
                    path: 'transactions',
                    component: LoanTransactionsWrapperComponent,
                    data: { titleFn: tabs.transactions },
                },
                {
                    path: 'info',
                    component: LoanInfoWrapperComponent,
                    data: { titleFn: tabs.loanInfo },
                },
                {
                    path: 'payment-schedule',
                    component: PaymentScheduleWrapperComponent,
                    data: { titleFn: tabs.paymentSchedule },
                    children: [{ path: ":" + scheduleIdParam, component: PaymentScheduleDetailsWrapperComponent }],
                },
            ],
        },
    ];
    var templateObject_1$1, templateObject_2$1, templateObject_3$1, templateObject_4;

    /**
     * catchError with error logging operator
     *
     * @param fn - callback function
     */
    function catchErrorWithLog(fn) {
        return function (source) { return source.pipe(operators.catchError(function (state) {
            console.error(state);
            return fn(state);
        })); };
    }

    var notificationsTitlesConfig = {
        updateAliasSuccess: $localize(templateObject_1 || (templateObject_1 = __makeTemplateObject([":Loan update alias success notification title@@loans.notifications.alias-update.success.title:Account Alias updated successfully"], [":Loan update alias success notification title@@loans.notifications.alias-update.success.title:Account Alias updated successfully"]))),
        updateAliasToDefaultSuccess: $localize(templateObject_2 || (templateObject_2 = __makeTemplateObject([":Loan update alias to product name success notification title@@loans.notifications.alias-update-to-product-name.success.title:Account Alias reset to default product name"], [":Loan update alias to product name success notification title@@loans.notifications.alias-update-to-product-name.success.title:Account Alias reset to default product name"]))),
        updateAliasError: $localize(templateObject_3 || (templateObject_3 = __makeTemplateObject([":Loan update alias error notification title@@loans.notifications.alias-update.error.title:An unexpected error occurred while performing this action"], [":Loan update alias error notification title@@loans.notifications.alias-update.error.title:An unexpected error occurred while performing this action"]))),
    };
    var templateObject_1, templateObject_2, templateObject_3;

    var LoanMapperService = /** @class */ (function () {
        function LoanMapperService(configuration) {
            this.configuration = configuration;
            /**
             * Loan mapper func
             */
            this.toLoanModel = this._toLoanModel.bind(this);
        }
        LoanMapperService.prototype._toLoanModel = function (loan) {
            var loanType = loan.loanType;
            var config = this.configuration.loanTypeMapping[loanType];
            if (!config) {
                throw new Error("[bb-loans]: \"" + loanType + "\" type was not configured for loans journey");
            }
            return Object.assign(Object.assign({}, loan), { viewType: config.viewType, loanTypeAlias: config.typeAlias || loanType });
        };
        return LoanMapperService;
    }());
    /** @nocollapse */ LoanMapperService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanMapperService, deps: [{ token: LoansJourneyConfigurationService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ LoanMapperService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanMapperService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanMapperService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: LoansJourneyConfigurationService }]; } });

    var LoansService = /** @class */ (function () {
        function LoansService(loansHttpService, loanMapper, configurationService) {
            this.loansHttpService = loansHttpService;
            this.loanMapper = loanMapper;
            this.configurationService = configurationService;
        }
        LoansService.prototype.getLoans = function (from) {
            var _this = this;
            var size = this.configurationService.loanList.itemsPerPage;
            return this.loansHttpService.getLoans({ from: from, size: size }, 'response').pipe(operators.map(function (response) { return ({
                items: response.body.loans.map(_this.loanMapper.toLoanModel),
                totalCount: _this.getTotalCount(response),
            }); }));
        };
        LoansService.prototype.getLoanById = function (loanId) {
            return this.loansHttpService.getLoanById({ loanId: loanId }).pipe(operators.map(this.loanMapper.toLoanModel));
        };
        LoansService.prototype.getLoansAmount = function () {
            return this.loansHttpService.headLoans('response').pipe(operators.map(this.getTotalCount));
        };
        LoansService.prototype.getAmortizationSchedule = function (params) {
            var _this = this;
            return this.loansHttpService.getAmortizationSchedule(params, 'response').pipe(operators.map(function (response) { return ({
                items: response.body.payments,
                totalCount: _this.getTotalCount(response),
            }); }));
        };
        LoansService.prototype.getAmortizationPayment = function (params) {
            return this.loansHttpService.getAmortizationPayment(params);
        };
        LoansService.prototype.getTotalCount = function (_a) {
            var headers = _a.headers;
            var totalCount = headers.get('x-total-count');
            if (!totalCount) {
                throw new Error('[bb-loans]: Invalid `x-total-count` header param');
            }
            return parseInt(totalCount, 10);
        };
        return LoansService;
    }());
    /** @nocollapse */ LoansService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansService, deps: [{ token: i1__namespace$4.LoansHttpService }, { token: LoanMapperService }, { token: LoansJourneyConfigurationService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ LoansService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$4.LoansHttpService }, { type: LoanMapperService }, { type: LoansJourneyConfigurationService }]; } });

    var ArrangementsService = /** @class */ (function () {
        function ArrangementsService(arrangementsHttpService) {
            this.arrangementsHttpService = arrangementsHttpService;
        }
        ArrangementsService.prototype.updateUserPreferences = function (arrangementId, alias) {
            return this.arrangementsHttpService.updateUserPreferences({ accountUserPreferences: { alias: alias, arrangementId: arrangementId } });
        };
        return ArrangementsService;
    }());
    /** @nocollapse */ ArrangementsService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementsService, deps: [{ token: i1__namespace$5.ArrangementsHttpService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ ArrangementsService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementsService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementsService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$5.ArrangementsHttpService }]; } });

    var LoansEffects = /** @class */ (function () {
        function LoansEffects(actions$, store, loansService, arrangementsService, notificationService, router) {
            var _this = this;
            this.actions$ = actions$;
            this.store = store;
            this.loansService = loansService;
            this.arrangementsService = arrangementsService;
            this.notificationService = notificationService;
            this.router = router;
            this.fetchLoans$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(loadLoans), operators.switchMap(function (_a) {
                var page = _a.page, append = _a.append;
                return _this.loansService.getLoans(page).pipe(operators.map(function (response) { return loadLoansSuccess({ response: response, append: append }); }), catchErrorWithLog(function (error) { return rxjs.of(loadLoansError({ error: error.message || 'Loans fetch error' })); }));
            })); });
            this.redirectToDetailsFromList$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(loadLoansSuccess), operators.tap(function (_a) {
                var _b = _a.response, totalCount = _b.totalCount, items = _b.items;
                if (totalCount === 1) {
                    _this.router.navigateByUrl('loans/details/' + items[0].id);
                }
            })); }, { dispatch: false });
            this.fetchLoanById$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(fetchLoanById), operators.switchMap(function (_a) {
                var id = _a.id;
                return _this.loansService.getLoanById(id).pipe(operators.map(function (loan) {
                    loansPaymentConfigAng.setLoan(loan);
                    return fetchLoanByIdSuccess({ loan: loan });
                }), catchErrorWithLog(function (error) { return rxjs.of(fetchLoanByIdError({ error: error.message || 'Loan fetch error' })); }));
            })); });
            this.fetchAmountOfLoans$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(fetchAmountOfLoans), operators.withLatestFrom(_this.store.select(selectLoansTotalCount)), operators.switchMap(function (_a) {
                var _b = __read(_a, 2), totalCountFromStore = _b[1];
                if (totalCountFromStore !== undefined) {
                    return rxjs.of(fetchAmountOfLoansSuccess({ totalCount: totalCountFromStore }));
                }
                return _this.loansService.getLoansAmount().pipe(operators.map(function (totalCount) { return fetchAmountOfLoansSuccess({ totalCount: totalCount }); }), operators.catchError(function () { return _this.loansService.getLoans(0).pipe(operators.map(function (_a) {
                    var totalCount = _a.totalCount;
                    return fetchAmountOfLoansSuccess({ totalCount: totalCount });
                }), catchErrorWithLog(function () { return rxjs.of(fetchAmountOfLoansError()); })); }));
            })); });
            this.updateLoanAlias$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(updateLoanAlias), operators.withLatestFrom(_this.store.select(selectLoan)), operators.switchMap(function (_a) {
                var _b = __read(_a, 2), alias = _b[0].alias, loan = _b[1];
                var id = loan.id;
                return _this.arrangementsService.updateUserPreferences(id, alias).pipe(operators.map(function () { return updateLoanAliasSuccess({ alias: alias, id: id }); }), operators.catchError(function (error) { return rxjs.of(updateLoanAliasError({ error: error.message || 'Update alias error' })); }), operators.takeUntil(_this.actions$.pipe(i1$6.ofType(updateLoanAliasCancel))));
            })); });
            this.updateLoanAfterAliasUpdate$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(updateLoanAliasSuccess), operators.map(function (_a) {
                var id = _a.id;
                return fetchLoanById({ id: id });
            })); });
            this.notifyAliasUpdateSuccess$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(updateLoanAliasSuccess), operators.tap(function (_a) {
                var alias = _a.alias;
                return _this.notificationService.showNotification({
                    header: alias
                        ? notificationsTitlesConfig.updateAliasSuccess
                        : notificationsTitlesConfig.updateAliasToDefaultSuccess,
                    message: '',
                    modifier: 'success',
                });
            })); }, { dispatch: false });
            this.notifyAliasUpdateError$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(updateLoanAliasError), operators.tap(function () { return _this.notificationService.showNotification({
                header: notificationsTitlesConfig.updateAliasError,
                message: '',
                modifier: 'error',
            }); })); }, { dispatch: false });
        }
        return LoansEffects;
    }());
    /** @nocollapse */ LoansEffects.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansEffects, deps: [{ token: i1__namespace$6.Actions }, { token: i1__namespace.Store }, { token: LoansService }, { token: ArrangementsService }, { token: i5__namespace$2.NotificationService }, { token: i1__namespace$2.Router }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ LoansEffects.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansEffects });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansEffects, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$6.Actions }, { type: i1__namespace.Store }, { type: LoansService }, { type: ArrangementsService }, { type: i5__namespace$2.NotificationService }, { type: i1__namespace$2.Router }]; } });

    var LoansStoreModule = /** @class */ (function () {
        function LoansStoreModule() {
        }
        return LoansStoreModule;
    }());
    /** @nocollapse */ LoansStoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansStoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ LoansStoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansStoreModule, imports: [i1__namespace.StoreFeatureModule, i1__namespace$6.EffectsFeatureModule] });
    /** @nocollapse */ LoansStoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansStoreModule, providers: [LoansStoreService], imports: [[i1$1.StoreModule.forFeature(storeKey, loansReducer), i1$6.EffectsModule.forFeature([LoansEffects])]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansStoreModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i1$1.StoreModule.forFeature(storeKey, loansReducer), i1$6.EffectsModule.forFeature([LoansEffects])],
                        providers: [LoansStoreService],
                    }]
            }] });

    var PaymentScheduleEffects = /** @class */ (function () {
        function PaymentScheduleEffects(actions$, loansService) {
            var _this = this;
            this.actions$ = actions$;
            this.loansService = loansService;
            this.fetchAmortizationSchedule$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(fetchAmortizationSchedule), operators.switchMap(function (_a) {
                var _b = _a.params, loanId = _b.loanId, from = _b.from, append = _b.append, size = _b.size;
                return _this.loansService.getAmortizationSchedule({ from: from, size: size, loanId: loanId }).pipe(operators.map(function (response) { return fetchAmortizationScheduleSuccess({ response: response, append: append }); }), catchErrorWithLog(function (error) { return rxjs.of(fetchAmortizationScheduleError({ error: error.message || 'Amortization schedule fetch error' })); }));
            })); });
            this.fetchAmortizationPayment$ = i1$6.createEffect(function () { return _this.actions$.pipe(i1$6.ofType(fetchAmortizationPayment), operators.switchMap(function (_a) {
                var params = _a.params;
                return _this.loansService.getAmortizationPayment(params).pipe(operators.map(function (amortizedPayment) { return fetchAmortizationPaymentSuccess({ amortizedPayment: amortizedPayment }); }), catchErrorWithLog(function (error) { return rxjs.of(fetchAmortizationPaymentError({ error: error.message || 'Amortization payment fetch error' })); }));
            })); });
        }
        return PaymentScheduleEffects;
    }());
    /** @nocollapse */ PaymentScheduleEffects.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleEffects, deps: [{ token: i1__namespace$6.Actions }, { token: LoansService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ PaymentScheduleEffects.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleEffects });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleEffects, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$6.Actions }, { type: LoansService }]; } });

    var PaymentScheduleStoreModule = /** @class */ (function () {
        function PaymentScheduleStoreModule() {
        }
        return PaymentScheduleStoreModule;
    }());
    /** @nocollapse */ PaymentScheduleStoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleStoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ PaymentScheduleStoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleStoreModule, imports: [i1__namespace.StoreFeatureModule, i1__namespace$6.EffectsFeatureModule] });
    /** @nocollapse */ PaymentScheduleStoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleStoreModule, providers: [PaymentScheduleStoreService], imports: [[
                i1$1.StoreModule.forFeature(paymentScheduleStoreKey, paymentScheduleReducer),
                i1$6.EffectsModule.forFeature([PaymentScheduleEffects]),
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentScheduleStoreModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i1$1.StoreModule.forFeature(paymentScheduleStoreKey, paymentScheduleReducer),
                            i1$6.EffectsModule.forFeature([PaymentScheduleEffects]),
                        ],
                        providers: [PaymentScheduleStoreService],
                    }]
            }] });

    var components = [
        LoanDetailsWrapperComponent,
        LoanSummaryComponent,
        LoanTransactionsWrapperComponent,
        LoanInfoWrapperComponent,
        PaymentScheduleWrapperComponent,
        PaymentScheduleDetailsWrapperComponent,
        PaymentScheduleDetailsModalHeaderComponent,
        LoanInfoRetailComponent,
    ];
    var modules = [
        i1.LoanInfoPrintButtonModule,
        i1.LoanItemNameModule,
        i2$2.TransactionsListWidgetModule,
        i1.LoanInfoItemModule,
        i1.LoansHeadingModule,
        i1.LoansCollectionUiAngModule,
        accountStatementBusinessWidgetAng.AccountStatementBusinessWidgetModule,
    ];
    var LoansJourneyModule = /** @class */ (function () {
        function LoansJourneyModule() {
        }
        LoansJourneyModule.forRoot = function (data) {
            if (data === void 0) { data = { routes: loansRoutes }; }
            return {
                ngModule: LoansJourneyModule,
                providers: [i1$2.provideRoutes(data.routes)],
            };
        };
        return LoansJourneyModule;
    }());
    /** @nocollapse */ LoansJourneyModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansJourneyModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ LoansJourneyModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansJourneyModule, declarations: [LoanDetailsWrapperComponent,
            LoanSummaryComponent,
            LoanTransactionsWrapperComponent,
            LoanInfoWrapperComponent,
            PaymentScheduleWrapperComponent,
            PaymentScheduleDetailsWrapperComponent,
            PaymentScheduleDetailsModalHeaderComponent,
            LoanInfoRetailComponent], imports: [i3.CommonModule, i1$2.RouterModule, LoansStoreModule, PaymentScheduleStoreModule, entitlements.EntitlementsModule, i1.LoanInfoPrintButtonModule,
            i1.LoanItemNameModule,
            i2$2.TransactionsListWidgetModule,
            i1.LoanInfoItemModule,
            i1.LoansHeadingModule,
            i1.LoansCollectionUiAngModule,
            accountStatementBusinessWidgetAng.AccountStatementBusinessWidgetModule], exports: [LoanDetailsWrapperComponent,
            LoanSummaryComponent,
            LoanTransactionsWrapperComponent,
            LoanInfoWrapperComponent,
            PaymentScheduleWrapperComponent,
            PaymentScheduleDetailsWrapperComponent,
            PaymentScheduleDetailsModalHeaderComponent,
            LoanInfoRetailComponent, i1.LoanInfoPrintButtonModule,
            i1.LoanItemNameModule,
            i2$2.TransactionsListWidgetModule,
            i1.LoanInfoItemModule,
            i1.LoansHeadingModule,
            i1.LoansCollectionUiAngModule,
            accountStatementBusinessWidgetAng.AccountStatementBusinessWidgetModule] });
    /** @nocollapse */ LoansJourneyModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansJourneyModule, providers: [LoansJourneyConfigurationService, LoanMapperService, LoansService, ArrangementsService], imports: [__spreadArray([i3.CommonModule, i1$2.RouterModule, LoansStoreModule, PaymentScheduleStoreModule, entitlements.EntitlementsModule], __read(modules)), i1.LoanInfoPrintButtonModule,
            i1.LoanItemNameModule,
            i2$2.TransactionsListWidgetModule,
            i1.LoanInfoItemModule,
            i1.LoansHeadingModule,
            i1.LoansCollectionUiAngModule,
            accountStatementBusinessWidgetAng.AccountStatementBusinessWidgetModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoansJourneyModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: __spreadArray([], __read(components)),
                        imports: __spreadArray([i3.CommonModule, i1$2.RouterModule, LoansStoreModule, PaymentScheduleStoreModule, entitlements.EntitlementsModule], __read(modules)),
                        exports: __spreadArray(__spreadArray([], __read(components)), __read(modules)),
                        providers: [LoansJourneyConfigurationService, LoanMapperService, LoansService, ArrangementsService],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.LOAN_JOURNEY_COMMUNICATOR = LOAN_JOURNEY_COMMUNICATOR;
    exports.LoanDetailsBaseComponent = LoanDetailsBaseComponent;
    exports.LoanDetailsWrapperComponent = LoanDetailsWrapperComponent;
    exports.LoanInfoRetailComponent = LoanInfoRetailComponent;
    exports.LoanInfoWrapperComponent = LoanInfoWrapperComponent;
    exports.LoanSummaryComponent = LoanSummaryComponent;
    exports.LoanTransactionsWrapperComponent = LoanTransactionsWrapperComponent;
    exports.LoansJourneyConfigurationService = LoansJourneyConfigurationService;
    exports.LoansJourneyConfigurationToken = LoansJourneyConfigurationToken;
    exports.LoansJourneyModule = LoansJourneyModule;
    exports.LoansStoreService = LoansStoreService;
    exports.PaymentScheduleDetailsModalHeaderComponent = PaymentScheduleDetailsModalHeaderComponent;
    exports.PaymentScheduleDetailsWrapperComponent = PaymentScheduleDetailsWrapperComponent;
    exports.PaymentScheduleStoreService = PaymentScheduleStoreService;
    exports.PaymentScheduleWrapperComponent = PaymentScheduleWrapperComponent;
    exports.loansConfigurationDefault = loansConfigurationDefault;
    exports.loansRoutes = loansRoutes;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-retail-loans-journey-ang.umd.js.map
