import { OperatorFunction } from 'rxjs';
import { CallState } from '../models/call-state.model';
/**
 * Helper function to extract error, if there is one.
 *
 * @param callState - call sate
 */
export declare function getCallStateError(callState: CallState): string | null;
/**
 * Checks for initial state
 *
 * @param callStates - call states
 */
export declare function isInitialState(...callStates: CallState[]): boolean;
/**
 * Checks for loading state
 *
 * @param callStates - call states
 */
export declare function isLoadingState(...callStates: CallState[]): boolean;
/**
 * Checks for error state
 *
 * @param callStates - call states
 */
export declare function isErrorState(...callStates: CallState[]): boolean;
/**
 * Checks for loaded state
 *
 * @param callStates - call states
 */
export declare function isLoadedState(...callStates: CallState[]): boolean;
/**
 * Operator state map operator
 *
 * @param fn - state mapper function
 */
export declare function stateMap(fn: (...states: CallState[]) => boolean): OperatorFunction<CallState | CallState[], boolean>;
