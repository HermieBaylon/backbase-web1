import { Actions } from '@ngrx/effects';
import { LoansService } from '../../services/loans.service';
import * as i0 from "@angular/core";
export declare class PaymentScheduleEffects {
    private readonly actions$;
    private readonly loansService;
    constructor(actions$: Actions, loansService: LoansService);
    fetchAmortizationSchedule$: import("rxjs").Observable<({
        response: import("../../models/loans-response.model").PaymentScheduleResponse;
        append: boolean;
    } & import("@ngrx/store/src/models").TypedAction<"[Loans API] fetch amortization schedule succeed">) | ({
        error: string;
    } & import("@ngrx/store/src/models").TypedAction<"[Loans API] fetch amortization schedule ">)> & import("@ngrx/effects").CreateEffectMetadata;
    fetchAmortizationPayment$: import("rxjs").Observable<({
        amortizedPayment: import("@backbase/loans-http-ang").PresentationAmortizationPayment;
    } & import("@ngrx/store/src/models").TypedAction<"[Loans API] fetch amortization schedule payment succeed">) | ({
        error: string;
    } & import("@ngrx/store/src/models").TypedAction<"[Loans API] fetch  amortization schedule payment failures">)> & import("@ngrx/effects").CreateEffectMetadata;
    static ɵfac: i0.ɵɵFactoryDeclaration<PaymentScheduleEffects, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<PaymentScheduleEffects>;
}
