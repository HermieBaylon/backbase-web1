import { ActivatedRoute, Router } from '@angular/router';
import { Observable } from 'rxjs';
import { PresentationAmortizationPayment } from '@backbase/data-ang/loans';
import { LoadMoreParams } from '@backbase/ui-ang/load-button';
import { MediaQueryService } from '@backbase/ui-ang/media-query-lib';
import { LoansJourneyConfigurationService } from '../../../../loans-journey-configuration';
import { PaymentScheduleStoreService } from '../../../../store/payment-schedule/store.service';
import { LoansJourneyLoansPaymentScheduleConfig } from '../../../../models/journey-configuration.model';
import { RemoteConfigService } from '@backbase/remote-config-ang';
import { RetailAppRemoteConfig } from '../../../../models/remote-config.model';
import * as i0 from "@angular/core";
export declare class PaymentScheduleWrapperComponent {
    private readonly configurationService;
    private readonly storeService;
    private readonly mediaQueryService;
    private readonly activatedRoute;
    private readonly router;
    private readonly remoteConfig;
    /**
     * Stream of Amortized Payments
     */
    readonly amortizedPayments$: Observable<PresentationAmortizationPayment[]>;
    /**
     * Payment schedule configuration
     */
    readonly scheduleConfig: LoansJourneyLoansPaymentScheduleConfig;
    /**
     * Hide or show payment status in the table
     */
    readonly showPaymentStatus: boolean;
    /**
     * Flag represents error state
     */
    readonly isErrorState$: Observable<boolean>;
    /**
     * Stream represents total amount of the pages
     */
    readonly amortizedPaymentsTotalCount$: Observable<number>;
    /**
     * Stream represent current loaded page number
     */
    readonly amortizedPaymentsCurrentPage$: Observable<number>;
    /**
     * Flag represents the tablet screen resolution
     */
    readonly isTabletResolution$: Observable<boolean>;
    private readonly _isLoading$;
    /**
     * Flag represents page loading state
     */
    readonly isPageLoading$: Observable<boolean>;
    /**
     * Flag represents load more button loading state
     */
    readonly isButtonLoading$: Observable<boolean>;
    /**
     * Flag represents visibility of load more button
     */
    readonly isLoadMoreVisible$: Observable<boolean>;
    /**
     * Flag represents empty state
     */
    readonly isEmptyState$: Observable<boolean>;
    private readonly baseReqParams;
    constructor(configurationService: LoansJourneyConfigurationService, storeService: PaymentScheduleStoreService, mediaQueryService: MediaQueryService, activatedRoute: ActivatedRoute, router: Router, remoteConfig: RemoteConfigService<RetailAppRemoteConfig>);
    /**
     * Load loans on pagination page changes
     *
     * @param page
     */
    onPageChange(page: number): void;
    /**
     * Load loans on load more button click
     *
     * @param from
     */
    onLoadMore({ from }: LoadMoreParams): void;
    /**
     * Emits in item select
     */
    onItemSelect({ id }: PresentationAmortizationPayment): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PaymentScheduleWrapperComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PaymentScheduleWrapperComponent, "bb-payment-schedule-wrapper", never, {}, {}, never, never>;
}
