import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { AccountNumberPipeModule } from '@backbase/ui-ang/account-number-pipe';
import { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';
import { AbsoluteValuePipe } from './absolute-value.pipe';
import * as i0 from "@angular/core";
const sharedPipes = [AccountNumberPipeModule, PaymentCardNumberModule];
const pipes = [AbsoluteValuePipe];
export class FormatPipeModule {
}
FormatPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: FormatPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: FormatPipeModule, declarations: [AbsoluteValuePipe], imports: [CommonModule, AccountNumberPipeModule, PaymentCardNumberModule], exports: [AccountNumberPipeModule, PaymentCardNumberModule, AbsoluteValuePipe] });
FormatPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: FormatPipeModule, imports: [[CommonModule, ...sharedPipes], AccountNumberPipeModule, PaymentCardNumberModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: FormatPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...sharedPipes],
                    declarations: [...pipes],
                    exports: [...sharedPipes, ...pipes],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvcHJvZHVjdC1zdW1tYXJ5LWNvbW1vbi1hbmcvc3JjL3BpcGVzL2Zvcm1hdC9mb3JtYXQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztBQUUxRCxNQUFNLFdBQVcsR0FBRyxDQUFDLHVCQUF1QixFQUFFLHVCQUF1QixDQUFDLENBQUM7QUFDdkUsTUFBTSxLQUFLLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBT2xDLE1BQU0sT0FBTyxnQkFBZ0I7OzhHQUFoQixnQkFBZ0I7K0dBQWhCLGdCQUFnQixpQkFQZCxpQkFBaUIsYUFHcEIsWUFBWSxFQUpILHVCQUF1QixFQUFFLHVCQUF1QixhQUFoRCx1QkFBdUIsRUFBRSx1QkFBdUIsRUFDdEQsaUJBQWlCOytHQU9uQixnQkFBZ0IsWUFKbEIsQ0FBQyxZQUFZLEVBQUUsR0FBRyxXQUFXLENBQUMsRUFKcEIsdUJBQXVCLEVBQUUsdUJBQXVCOzRGQVF4RCxnQkFBZ0I7a0JBTDVCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLEdBQUcsV0FBVyxDQUFDO29CQUN2QyxZQUFZLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQztvQkFDeEIsT0FBTyxFQUFFLENBQUMsR0FBRyxXQUFXLEVBQUUsR0FBRyxLQUFLLENBQUM7aUJBQ3BDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBBY2NvdW50TnVtYmVyUGlwZU1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvYWNjb3VudC1udW1iZXItcGlwZSc7XG5pbXBvcnQgeyBQYXltZW50Q2FyZE51bWJlck1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvcGF5bWVudC1jYXJkLW51bWJlci1waXBlJztcbmltcG9ydCB7IEFic29sdXRlVmFsdWVQaXBlIH0gZnJvbSAnLi9hYnNvbHV0ZS12YWx1ZS5waXBlJztcblxuY29uc3Qgc2hhcmVkUGlwZXMgPSBbQWNjb3VudE51bWJlclBpcGVNb2R1bGUsIFBheW1lbnRDYXJkTnVtYmVyTW9kdWxlXTtcbmNvbnN0IHBpcGVzID0gW0Fic29sdXRlVmFsdWVQaXBlXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgLi4uc2hhcmVkUGlwZXNdLFxuICBkZWNsYXJhdGlvbnM6IFsuLi5waXBlc10sXG4gIGV4cG9ydHM6IFsuLi5zaGFyZWRQaXBlcywgLi4ucGlwZXNdLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtYXRQaXBlTW9kdWxlIHt9XG4iXX0=