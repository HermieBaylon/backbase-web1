import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BbDatePipe, BbDatePipeModule } from '@backbase/ui-ang/date-pipe';
import { DateUpdatedAgoPipe } from './date-updated-ago.pipe';
import * as i0 from "@angular/core";
const sharedPipes = [BbDatePipeModule];
const pipes = [DateUpdatedAgoPipe];
export class DatePipeModule {
}
DatePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DatePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DatePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DatePipeModule, declarations: [DateUpdatedAgoPipe], imports: [CommonModule, BbDatePipeModule], exports: [DateUpdatedAgoPipe, BbDatePipeModule] });
DatePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DatePipeModule, providers: [BbDatePipe], imports: [[CommonModule, ...sharedPipes], BbDatePipeModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DatePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...sharedPipes],
                    declarations: [...pipes],
                    exports: [...pipes, ...sharedPipes],
                    providers: [BbDatePipe],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3Byb2R1Y3Qtc3VtbWFyeS1jb21tb24tYW5nL3NyYy9waXBlcy9kYXRlL2RhdGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMxRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQzs7QUFFN0QsTUFBTSxXQUFXLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3ZDLE1BQU0sS0FBSyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQVFuQyxNQUFNLE9BQU8sY0FBYzs7NEdBQWQsY0FBYzs2R0FBZCxjQUFjLGlCQVJaLGtCQUFrQixhQUdyQixZQUFZLEVBSkgsZ0JBQWdCLGFBQ3RCLGtCQUFrQixFQURaLGdCQUFnQjs2R0FTeEIsY0FBYyxhQUZkLENBQUMsVUFBVSxDQUFDLFlBSGQsQ0FBQyxZQUFZLEVBQUUsR0FBRyxXQUFXLENBQUMsRUFKcEIsZ0JBQWdCOzRGQVN4QixjQUFjO2tCQU4xQixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxHQUFHLFdBQVcsQ0FBQztvQkFDdkMsWUFBWSxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUM7b0JBQ3hCLE9BQU8sRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLEdBQUcsV0FBVyxDQUFDO29CQUNuQyxTQUFTLEVBQUUsQ0FBQyxVQUFVLENBQUM7aUJBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBCYkRhdGVQaXBlLCBCYkRhdGVQaXBlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9kYXRlLXBpcGUnO1xuaW1wb3J0IHsgRGF0ZVVwZGF0ZWRBZ29QaXBlIH0gZnJvbSAnLi9kYXRlLXVwZGF0ZWQtYWdvLnBpcGUnO1xuXG5jb25zdCBzaGFyZWRQaXBlcyA9IFtCYkRhdGVQaXBlTW9kdWxlXTtcbmNvbnN0IHBpcGVzID0gW0RhdGVVcGRhdGVkQWdvUGlwZV07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIC4uLnNoYXJlZFBpcGVzXSxcbiAgZGVjbGFyYXRpb25zOiBbLi4ucGlwZXNdLFxuICBleHBvcnRzOiBbLi4ucGlwZXMsIC4uLnNoYXJlZFBpcGVzXSxcbiAgcHJvdmlkZXJzOiBbQmJEYXRlUGlwZV0sXG59KVxuZXhwb3J0IGNsYXNzIERhdGVQaXBlTW9kdWxlIHt9XG4iXX0=