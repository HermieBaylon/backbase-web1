import { HttpErrorResponse } from '@angular/common/http';
export declare class AccountsOverviewNotFound {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'AccountsOverviewNotFound';
    constructor(response: HttpErrorResponse);
}
export declare class AccountsOverviewBadRequest {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'AccountsOverviewBadRequest';
    constructor(response: HttpErrorResponse);
}
export declare class AccountsOverviewAccessDenied {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'AccountsOverviewAccessDenied';
    constructor(response: HttpErrorResponse);
}
export declare class AccountsOverviewUnknownError {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'AccountsOverviewUnknownError';
    constructor(response: HttpErrorResponse);
}
export declare class AccountsOverviewConnectivityError {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'AccountsOverviewConnectivityError';
    constructor(response: HttpErrorResponse);
}
export declare type AccountsOverviewError = AccountsOverviewAccessDenied | AccountsOverviewBadRequest | AccountsOverviewNotFound | AccountsOverviewConnectivityError | AccountsOverviewUnknownError;
export declare const parseError: (error: HttpErrorResponse) => AccountsOverviewError;
