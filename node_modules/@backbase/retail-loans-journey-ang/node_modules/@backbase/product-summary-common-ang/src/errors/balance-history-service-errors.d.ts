import { HttpErrorResponse } from '@angular/common/http';
export declare class BalanceHistoryNotFound {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'BalanceHistoryNotFound';
    constructor(response: HttpErrorResponse);
}
export declare class BalanceHistoryBadRequest {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'BalanceHistoryBadRequest';
    constructor(response: HttpErrorResponse);
}
export declare class BalanceHistoryAccessDenied {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'BalanceHistoryAccessDenied';
    constructor(response: HttpErrorResponse);
}
export declare class BalanceHistoryUnknownError {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'BalanceHistoryUnknownError';
    constructor(response: HttpErrorResponse);
}
export declare class BalanceHistoryConnectivityError {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'BalanceHistoryConnectivityError';
    constructor(response: HttpErrorResponse);
}
export declare type BalanceHistoryError = BalanceHistoryAccessDenied | BalanceHistoryBadRequest | BalanceHistoryNotFound | BalanceHistoryConnectivityError | BalanceHistoryUnknownError;
export declare const parseBalanceHistoryError: (error: HttpErrorResponse) => BalanceHistoryError;
