import { Observable } from 'rxjs';
export interface MessageSender {
    /**
     * Message sender id
     */
    id?: string;
    /**
     * Message sender name
     */
    name: string;
}
export interface Message {
    /**
     * Subject of a message
     */
    subject: string;
    /**
     * BASE64-encoded text of a message
     */
    body: string;
    /**
     * Topic id a message belongs to. Required for a FI Client user request
     */
    topic: string;
    sender?: MessageSender;
    /**
     * List of attachment ids to be added to the conversation
     */
    attachments?: Array<string>;
}
export interface MessagesResponse {
    id: string;
}
export interface MessagesDisputeAndInquiryConfig {
    byBillingStatus: boolean;
    byEligitibilityDays: number;
    byTransactionTypes: string[];
}
export interface InquireAndDisputeFile {
    id?: string;
    name: string;
    size: number;
    content: Observable<ArrayBuffer>;
}
export declare type SubjectReport = 'inquire' | 'dispute';
export declare type SubjectReportMap = Record<SubjectReport, string>;
export interface MessageForm {
    topic: SubjectReport;
    body: string;
    attachments: Array<InquireAndDisputeFile>;
}
export declare type InquireAndDisputeTopics = Record<SubjectReport, string>;
