import { HttpErrorResponse, HttpResponse } from '@angular/common/http';
import { GetTransactionsRequestParams, TransactionItem } from '@backbase/data-ang/transactions';
import { Transaction } from './transaction.model';
import { TransactionsSortOptions } from './transactions-sort-options.model';
import { TransactionsExportOptions, UnavailableExportTypeReasons } from './transactions-export-options.model';
import { TransactionsListOptions } from './transactions-list-options.model';
export interface TransactionsList {
    items: Transaction[];
    totalCount: number;
    sort?: TransactionsSortOptions;
    availableExportTypesHeader?: string;
    httpResponseError?: HttpErrorResponse;
    unavailableExportTypesReasonsHeader?: UnavailableExportTypeReasons;
    initialRequest?: boolean;
}
export declare namespace TransactionsList {
    const fromHttpResponse: (response: HttpResponse<TransactionItem[]>) => TransactionsList;
    const concat: (transactionsList1: TransactionsList, transactionsList2: TransactionsList) => {
        items: Transaction[];
        httpResponseError: HttpErrorResponse;
        totalCount: number;
        sort?: TransactionsSortOptions | undefined;
        availableExportTypesHeader?: string | undefined;
        unavailableExportTypesReasonsHeader?: UnavailableExportTypeReasons | undefined;
        initialRequest?: boolean | undefined;
    } | {
        httpResponseError: undefined;
        unavailableExportTypesReasonsHeader?: UnavailableExportTypeReasons | undefined;
        availableExportTypesHeader?: string | undefined;
        sort?: TransactionsSortOptions | undefined;
        items: Transaction[];
        totalCount: number;
    };
    const hasLoadedAll: (transactionsList: TransactionsList) => boolean;
    const toHttpRequest: (listOptions: TransactionsListOptions | TransactionsExportOptions) => GetTransactionsRequestParams;
}
