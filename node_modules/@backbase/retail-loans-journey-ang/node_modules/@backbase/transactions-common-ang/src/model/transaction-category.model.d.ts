import { Transaction } from './transaction.model';
export declare enum TransactionIconType {
    category = 1,
    type = 2,
    creditDebit = 3
}
export declare abstract class BaseTransactionIcon {
    abstract get title(): string;
    abstract formatClassName(): string;
    abstract isValid(): boolean;
    abstract get type(): TransactionIconType;
    protected cleanClassName(text: string): string;
    private throwIfIncorrect;
    constructor();
}
export declare class TransactionCategoryIcon extends BaseTransactionIcon {
    protected transaction: Transaction;
    get title(): string;
    get type(): TransactionIconType;
    isValid(): boolean;
    formatClassName(): string;
    constructor(transaction: Transaction);
}
export declare class TransactionTypeIcon extends BaseTransactionIcon {
    protected transaction: Transaction;
    get title(): string;
    get type(): TransactionIconType;
    isValid(): boolean;
    formatClassName(): string;
    constructor(transaction: Transaction);
}
export declare class TransactionCreditDebitIcon extends BaseTransactionIcon {
    protected transaction: Transaction;
    get title(): string;
    get type(): TransactionIconType;
    formatClassName(): string;
    private get indicator();
    isValid(): boolean;
    constructor(transaction: Transaction);
}
