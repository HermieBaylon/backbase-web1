import { ItemModel } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import { TransactionsFilterOptions } from '../model/transactions-filter-options.model';
import { TransactionsSortOptions } from '../model/transactions-sort-options.model';
import * as i0 from "@angular/core";
export declare const defaultPageSize = 10;
export declare const defaultMaxNavPage = 3;
export declare const defaultInitialFilterOptions = "";
export declare const defaultInitialSortOptions = "";
export declare enum PaginationType {
    LOAD_MORE = "load-more",
    PAGINATION = "pagination",
    INFINITE_SCROLL = "infinite-scroll"
}
export declare enum EndpointType {
    GET_REQUEST = "get-request",
    POST_REQUEST = "post-request"
}
export declare class WidgetPropertiesService {
    private readonly itemModel?;
    get pageSize(): Observable<number>;
    get maxNavPages(): Observable<number>;
    get paginationType(): Observable<PaginationType>;
    get initialFilterOptions(): Observable<TransactionsFilterOptions>;
    get initialSortOptions(): Observable<TransactionsSortOptions | undefined>;
    get showControls(): Observable<boolean>;
    get showChangeCategory(): Observable<boolean>;
    get refreshTransactionsListEvents(): Observable<string>;
    get showPendingTransactionsOnTop(): Observable<boolean>;
    get showCheckImage(): Observable<boolean>;
    get showManageNotes(): Observable<boolean>;
    get getOrPostEndpoints(): Observable<EndpointType>;
    get gmapsAPIKey(): Observable<string>;
    get disputeByBillingStatus(): Observable<boolean>;
    get disputeEligibilityDays(): Observable<number>;
    get disputeTransactionTypes(): Observable<Array<string>>;
    get enableDisputeAndInquiry(): Observable<boolean>;
    get inquireTopicId(): Observable<string>;
    get disputeTopicId(): Observable<string>;
    constructor(itemModel?: ItemModel | undefined);
    static ɵfac: i0.ɵɵFactoryDeclaration<WidgetPropertiesService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<WidgetPropertiesService>;
}
