import { Component, ViewChild, Input, ChangeDetectionStrategy } from '@angular/core';
import * as i0 from "@angular/core";
export class TransactionsMapUiComponent {
    buildMapOptions(location) {
        if (location.latitude && location.longitude) {
            return {
                center: {
                    lat: location.latitude,
                    lng: location.longitude,
                },
                zoom: 10,
                disableDefaultUI: true,
                zoomControl: false,
                styles: [
                    {
                        featureType: 'poi',
                        stylers: [{ visibility: 'off' }],
                    },
                ],
            };
        }
        return undefined;
    }
    getFullAddress(location) {
        return encodeURI(`${location.latitude}, ${location.longitude}`);
    }
    ngAfterViewInit() {
        if (this.location && this.mapContainer) {
            const options = this.buildMapOptions(this.location);
            const map = new google.maps.Map(this.mapContainer.nativeElement, options);
            if (this.location && this.location.latitude && this.location.longitude) {
                const mapUrl = this.getFullAddress(this.location);
                const marker = new google.maps.Marker({
                    position: {
                        lat: this.location.latitude,
                        lng: this.location.longitude,
                    },
                    map,
                });
                marker.addListener('click', () => {
                    window.open('https://www.google.com/maps/dir//' + mapUrl, '_blank');
                });
            }
        }
    }
}
TransactionsMapUiComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsMapUiComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TransactionsMapUiComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionsMapUiComponent, selector: "bb-transactions-map-ui", inputs: { location: "location" }, viewQueries: [{ propertyName: "mapContainer", first: true, predicate: ["bbMapContainer"], descendants: true }], ngImport: i0, template: "<div class=\"bb-transcations-geolocation-map\" #bbMapContainer></div>", changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsMapUiComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transactions-map-ui',
                    templateUrl: 'transactions-map-ui.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { mapContainer: [{
                type: ViewChild,
                args: ['bbMapContainer']
            }], location: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb25zLW1hcC11aS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3RyYW5zYWN0aW9ucy1jb21tb24tYW5nL3NyYy9jb21wb25lbnRzL3RyYW5zYWN0aW9ucy1jb250cm9scy90cmFuc2FjdGlvbnMtbWFwLXVpLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdHJhbnNhY3Rpb25zLWNvbW1vbi1hbmcvc3JjL2NvbXBvbmVudHMvdHJhbnNhY3Rpb25zLWNvbnRyb2xzL3RyYW5zYWN0aW9ucy1tYXAtdWkuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQWlCLEtBQUssRUFBYyx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFRaEgsTUFBTSxPQUFPLDBCQUEwQjtJQU03QixlQUFlLENBQUMsUUFBNkI7UUFDbkQsSUFBSSxRQUFRLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxTQUFTLEVBQUU7WUFDM0MsT0FBTztnQkFDTCxNQUFNLEVBQUU7b0JBQ04sR0FBRyxFQUFFLFFBQVEsQ0FBQyxRQUFRO29CQUN0QixHQUFHLEVBQUUsUUFBUSxDQUFDLFNBQVM7aUJBQ3hCO2dCQUNELElBQUksRUFBRSxFQUFFO2dCQUNSLGdCQUFnQixFQUFFLElBQUk7Z0JBQ3RCLFdBQVcsRUFBRSxLQUFLO2dCQUNsQixNQUFNLEVBQUU7b0JBQ047d0JBQ0UsV0FBVyxFQUFFLEtBQUs7d0JBQ2xCLE9BQU8sRUFBRSxDQUFDLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxDQUFDO3FCQUNqQztpQkFDRjthQUNGLENBQUM7U0FDSDtRQUVELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFFRCxjQUFjLENBQUMsUUFBNkI7UUFDMUMsT0FBTyxTQUFTLENBQUMsR0FBRyxRQUFRLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFRCxlQUFlO1FBQ2IsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDdEMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDcEQsTUFBTSxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUMxRSxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUU7Z0JBQ3RFLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUNsRCxNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO29CQUNwQyxRQUFRLEVBQUU7d0JBQ1IsR0FBRyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUTt3QkFDM0IsR0FBRyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUztxQkFDN0I7b0JBQ0QsR0FBRztpQkFDSixDQUFDLENBQUM7Z0JBQ0gsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUMvQixNQUFNLENBQUMsSUFBSSxDQUFDLG1DQUFtQyxHQUFHLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztnQkFDdEUsQ0FBQyxDQUFDLENBQUM7YUFDSjtTQUNGO0lBQ0gsQ0FBQzs7d0hBbERVLDBCQUEwQjs0R0FBMUIsMEJBQTBCLGdOQ1J2Qyx1RUFBbUU7NEZEUXRELDBCQUEwQjtrQkFMdEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxXQUFXLEVBQUUsb0NBQW9DO29CQUNqRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OEJBRzhCLFlBQVk7c0JBQXhDLFNBQVM7dUJBQUMsZ0JBQWdCO2dCQUVsQixRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQsIEFmdGVyVmlld0luaXQsIElucHV0LCBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25Mb2NhdGlvbiB9IGZyb20gJ0BiYWNrYmFzZS9kYXRhLWFuZy90cmFuc2FjdGlvbnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi10cmFuc2FjdGlvbnMtbWFwLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICd0cmFuc2FjdGlvbnMtbWFwLXVpLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFRyYW5zYWN0aW9uc01hcFVpQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIC8qIGVzbGludC1kaXNhYmxlICovXG4gIEBWaWV3Q2hpbGQoJ2JiTWFwQ29udGFpbmVyJykgbWFwQ29udGFpbmVyOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PiB8IHVuZGVmaW5lZDtcbiAgLyogZXNsaW50LWVuYWJsZSAqL1xuICBASW5wdXQoKSBsb2NhdGlvbjogVHJhbnNhY3Rpb25Mb2NhdGlvbiB8IHVuZGVmaW5lZDtcblxuICBwcml2YXRlIGJ1aWxkTWFwT3B0aW9ucyhsb2NhdGlvbjogVHJhbnNhY3Rpb25Mb2NhdGlvbik6IGdvb2dsZS5tYXBzLk1hcE9wdGlvbnMgfCB1bmRlZmluZWQge1xuICAgIGlmIChsb2NhdGlvbi5sYXRpdHVkZSAmJiBsb2NhdGlvbi5sb25naXR1ZGUpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNlbnRlcjoge1xuICAgICAgICAgIGxhdDogbG9jYXRpb24ubGF0aXR1ZGUsXG4gICAgICAgICAgbG5nOiBsb2NhdGlvbi5sb25naXR1ZGUsXG4gICAgICAgIH0sXG4gICAgICAgIHpvb206IDEwLFxuICAgICAgICBkaXNhYmxlRGVmYXVsdFVJOiB0cnVlLFxuICAgICAgICB6b29tQ29udHJvbDogZmFsc2UsXG4gICAgICAgIHN0eWxlczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGZlYXR1cmVUeXBlOiAncG9pJyxcbiAgICAgICAgICAgIHN0eWxlcnM6IFt7IHZpc2liaWxpdHk6ICdvZmYnIH1dLFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBnZXRGdWxsQWRkcmVzcyhsb2NhdGlvbjogVHJhbnNhY3Rpb25Mb2NhdGlvbik6IHN0cmluZyB7XG4gICAgcmV0dXJuIGVuY29kZVVSSShgJHtsb2NhdGlvbi5sYXRpdHVkZX0sICR7bG9jYXRpb24ubG9uZ2l0dWRlfWApO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIGlmICh0aGlzLmxvY2F0aW9uICYmIHRoaXMubWFwQ29udGFpbmVyKSB7XG4gICAgICBjb25zdCBvcHRpb25zID0gdGhpcy5idWlsZE1hcE9wdGlvbnModGhpcy5sb2NhdGlvbik7XG4gICAgICBjb25zdCBtYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKHRoaXMubWFwQ29udGFpbmVyLm5hdGl2ZUVsZW1lbnQsIG9wdGlvbnMpO1xuICAgICAgaWYgKHRoaXMubG9jYXRpb24gJiYgdGhpcy5sb2NhdGlvbi5sYXRpdHVkZSAmJiB0aGlzLmxvY2F0aW9uLmxvbmdpdHVkZSkge1xuICAgICAgICBjb25zdCBtYXBVcmwgPSB0aGlzLmdldEZ1bGxBZGRyZXNzKHRoaXMubG9jYXRpb24pO1xuICAgICAgICBjb25zdCBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcbiAgICAgICAgICBwb3NpdGlvbjoge1xuICAgICAgICAgICAgbGF0OiB0aGlzLmxvY2F0aW9uLmxhdGl0dWRlLFxuICAgICAgICAgICAgbG5nOiB0aGlzLmxvY2F0aW9uLmxvbmdpdHVkZSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIG1hcCxcbiAgICAgICAgfSk7XG4gICAgICAgIG1hcmtlci5hZGRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgd2luZG93Lm9wZW4oJ2h0dHBzOi8vd3d3Lmdvb2dsZS5jb20vbWFwcy9kaXIvLycgKyBtYXBVcmwsICdfYmxhbmsnKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiYmItdHJhbnNjYXRpb25zLWdlb2xvY2F0aW9uLW1hcFwiICNiYk1hcENvbnRhaW5lcj48L2Rpdj4iXX0=