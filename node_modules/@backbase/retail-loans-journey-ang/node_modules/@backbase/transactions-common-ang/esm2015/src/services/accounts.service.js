import { Injectable } from '@angular/core';
import { map } from 'rxjs/operators';
import { fromArrangementsResponse } from '../model/account-list.model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/arrangements";
export class AccountsService {
    constructor(productSummaryDataHttpService) {
        this.productSummaryDataHttpService = productSummaryDataHttpService;
    }
    getAllArrangements() {
        return this.productSummaryDataHttpService
            .getArrangementsByBusinessFunction({
            businessFunction: 'Product Summary',
            resourceName: 'Product Summary',
            privilege: 'view',
            size: 1000000,
        }, 'response')
            .pipe(map(fromArrangementsResponse));
    }
    getProductSummary() {
        return this.productSummaryDataHttpService.getArrangementsByBusinessFunction({
            businessFunction: 'Product Summary',
            resourceName: 'Product Summary',
            privilege: 'view',
            size: 1000000,
        }, 'body');
    }
}
AccountsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountsService, deps: [{ token: i1.ProductSummaryHttpService }], target: i0.ɵɵFactoryTarget.Injectable });
AccountsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountsService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountsService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ProductSummaryHttpService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudHMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdHJhbnNhY3Rpb25zLWNvbW1vbi1hbmcvc3JjL3NlcnZpY2VzL2FjY291bnRzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7OztBQUd2RSxNQUFNLE9BQU8sZUFBZTtJQUMxQixZQUErQiw2QkFBd0Q7UUFBeEQsa0NBQTZCLEdBQTdCLDZCQUE2QixDQUEyQjtJQUFHLENBQUM7SUFFM0Ysa0JBQWtCO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLDZCQUE2QjthQUN0QyxpQ0FBaUMsQ0FDaEM7WUFDRSxnQkFBZ0IsRUFBRSxpQkFBaUI7WUFDbkMsWUFBWSxFQUFFLGlCQUFpQjtZQUMvQixTQUFTLEVBQUUsTUFBTTtZQUNqQixJQUFJLEVBQUUsT0FBTztTQUNkLEVBQ0QsVUFBVSxDQUNYO2FBQ0EsSUFBSSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELGlCQUFpQjtRQUNmLE9BQU8sSUFBSSxDQUFDLDZCQUE2QixDQUFDLGlDQUFpQyxDQUN6RTtZQUNFLGdCQUFnQixFQUFFLGlCQUFpQjtZQUNuQyxZQUFZLEVBQUUsaUJBQWlCO1lBQy9CLFNBQVMsRUFBRSxNQUFNO1lBQ2pCLElBQUksRUFBRSxPQUFPO1NBQ2QsRUFDRCxNQUFNLENBQ1AsQ0FBQztJQUNKLENBQUM7OzZHQTNCVSxlQUFlO2lIQUFmLGVBQWU7NEZBQWYsZUFBZTtrQkFEM0IsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUHJvZHVjdFN1bW1hcnlIdHRwU2VydmljZSwgUHJvZHVjdFN1bW1hcnlJdGVtIH0gZnJvbSAnQGJhY2tiYXNlL2RhdGEtYW5nL2FycmFuZ2VtZW50cyc7XG5pbXBvcnQgeyBBY2NvdW50IH0gZnJvbSAnLi4vbW9kZWwvYWNjb3VudC5tb2RlbCc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmcm9tQXJyYW5nZW1lbnRzUmVzcG9uc2UgfSBmcm9tICcuLi9tb2RlbC9hY2NvdW50LWxpc3QubW9kZWwnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQWNjb3VudHNTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHJlYWRvbmx5IHByb2R1Y3RTdW1tYXJ5RGF0YUh0dHBTZXJ2aWNlOiBQcm9kdWN0U3VtbWFyeUh0dHBTZXJ2aWNlKSB7fVxuXG4gIGdldEFsbEFycmFuZ2VtZW50cygpOiBPYnNlcnZhYmxlPEFjY291bnRbXT4ge1xuICAgIHJldHVybiB0aGlzLnByb2R1Y3RTdW1tYXJ5RGF0YUh0dHBTZXJ2aWNlXG4gICAgICAuZ2V0QXJyYW5nZW1lbnRzQnlCdXNpbmVzc0Z1bmN0aW9uKFxuICAgICAgICB7XG4gICAgICAgICAgYnVzaW5lc3NGdW5jdGlvbjogJ1Byb2R1Y3QgU3VtbWFyeScsXG4gICAgICAgICAgcmVzb3VyY2VOYW1lOiAnUHJvZHVjdCBTdW1tYXJ5JyxcbiAgICAgICAgICBwcml2aWxlZ2U6ICd2aWV3JyxcbiAgICAgICAgICBzaXplOiAxMDAwMDAwLFxuICAgICAgICB9LFxuICAgICAgICAncmVzcG9uc2UnLFxuICAgICAgKVxuICAgICAgLnBpcGUobWFwKGZyb21BcnJhbmdlbWVudHNSZXNwb25zZSkpO1xuICB9XG5cbiAgZ2V0UHJvZHVjdFN1bW1hcnkoKTogT2JzZXJ2YWJsZTxQcm9kdWN0U3VtbWFyeUl0ZW1bXT4ge1xuICAgIHJldHVybiB0aGlzLnByb2R1Y3RTdW1tYXJ5RGF0YUh0dHBTZXJ2aWNlLmdldEFycmFuZ2VtZW50c0J5QnVzaW5lc3NGdW5jdGlvbihcbiAgICAgIHtcbiAgICAgICAgYnVzaW5lc3NGdW5jdGlvbjogJ1Byb2R1Y3QgU3VtbWFyeScsXG4gICAgICAgIHJlc291cmNlTmFtZTogJ1Byb2R1Y3QgU3VtbWFyeScsXG4gICAgICAgIHByaXZpbGVnZTogJ3ZpZXcnLFxuICAgICAgICBzaXplOiAxMDAwMDAwLFxuICAgICAgfSxcbiAgICAgICdib2R5JyxcbiAgICApO1xuICB9XG59XG4iXX0=