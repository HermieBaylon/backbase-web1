import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { TransactionsDetailsLoadingState } from '../../model/transactions-details.model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/input-radio-group";
import * as i3 from "@backbase/ui-ang/input-validation-message";
import * as i4 from "@backbase/ui-ang/rich-text-editor";
import * as i5 from "@backbase/ui-ang/input-file";
import * as i6 from "@backbase/ui-ang/file-attachment";
import * as i7 from "@backbase/ui-ang/alert";
import * as i8 from "@backbase/ui-ang/load-button";
import * as i9 from "@backbase/ui-ang/icon";
import * as i10 from "@backbase/ui-ang/modal";
import * as i11 from "./accessibility-keyboard.directive";
import * as i12 from "@angular/common";
import * as i13 from "@backbase/ui-ang/button";
import * as i14 from "@backbase/ui-ang/tooltip-directive";
export class TransactionsInquiryDisputeComponent {
    constructor(fb) {
        this.fb = fb;
        this.enableDispute = false;
        /**
         * Whether the dispute & inquiry form is sending or not.
         */
        this.state = TransactionsDetailsLoadingState.notStarted;
        this.submitReport = new EventEmitter();
        this.cancelReport = new EventEmitter();
        this.messageChange = new EventEmitter();
        this.fileChange = new EventEmitter();
        this.fileRemoved = new EventEmitter();
        this.confirmationDialogActive = false;
        this.labels = {
            inquire: $localize `:Inquire tooltip@@transactions.dispute.inquire.inquireLabel:Inquire for more information`,
            dispute: $localize `:Dispute tooltip@@transactions.dispute.inquire.disputeLabel:Dispute this transaction`,
        };
        this.loadingStateEnum = TransactionsDetailsLoadingState;
        this.unsubscribeSubject = new Subject();
        this.transactionReportForm = this.fb.group({
            topic: [{ value: '' }, this.topicRequired],
            attachment: [undefined],
            subject: [{ name: '' }],
            body: [''],
        });
    }
    topicRequired(control) {
        var _a;
        return ((_a = control.value) === null || _a === void 0 ? void 0 : _a.value) === '' ? { required: 'value is required' } : null;
    }
    getControl(field) {
        return this.transactionReportForm.controls[field];
    }
    setFormValue(values) {
        this.transactionReportForm.patchValue({
            body: values.body,
            attachments: values.attachments,
        }, { emitEvent: false });
    }
    hasError(field, type) {
        const control = this.getControl(field);
        return control && control.errors && control.errors[type];
    }
    isInvalidControl(field) {
        const control = this.getControl(field);
        return !!control && control.touched && control.invalid;
    }
    saveReport() {
        if (this.transactionReportForm.valid) {
            this.submitReport.emit(this.message);
        }
        else {
            this.transactionReportForm.markAllAsTouched();
        }
    }
    closeReportForm() {
        this.cancelReport.emit();
        this.closeConfirmationDialog();
    }
    closeConfirmationDialog() {
        this.confirmationDialogActive = false;
    }
    processLabel(label) {
        const arr = label.split(' ');
        const last = arr.splice(arr.length - 1, 1);
        return [arr.join(' ') + ' ', ...last];
    }
    ngOnInit() {
        if (this.message) {
            this.setFormValue(this.message);
        }
        this.transactionReportForm.valueChanges.pipe(takeUntil(this.unsubscribeSubject)).subscribe({
            next: (formValue) => {
                this.messageChange.emit(Object.assign(Object.assign({}, this.message), formValue));
            },
        });
    }
    uploadFile(input) {
        if (input.files && input.files[0]) {
            const file = input.files[0];
            this.fileChange.emit(file);
            input.value = '';
        }
    }
    removeAttachment(attachment) {
        this.fileRemoved.emit(attachment);
    }
    ngOnDestroy() {
        this.unsubscribeSubject.next();
        this.unsubscribeSubject.complete();
    }
}
TransactionsInquiryDisputeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsInquiryDisputeComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
TransactionsInquiryDisputeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionsInquiryDisputeComponent, selector: "bb-transactions-inquiry-dispute", inputs: { message: "message", enableDispute: "enableDispute", state: "state", inquireAndDisputeTopics: "inquireAndDisputeTopics" }, outputs: { submitReport: "submitReport", cancelReport: "cancelReport", messageChange: "messageChange", fileChange: "fileChange", fileRemoved: "fileRemoved" }, ngImport: i0, template: "<div class=\"bb-transaction-list-item-detail-additional-info\">\n  <form [formGroup]=\"transactionReportForm\">\n    <div class=\"bb-block bb-block--lg\" bbAccessibilityKeyboard>\n      <h5 \n        class=\"bb-transaction-list-item-detail-additional-info__title\"\n        data-role=\"dispute-inquiry-header\"\n        i18n=\"dispute and inquiry form header@@transactions.dispute.inquiry.header\"\n      >\n        Does this transaction seem suspicious or incorrect?\n      </h5>\n      <p \n        class=\"bb-text-support text-small\" \n        data-role=\"dispute-inquiry-subHeader\"\n        i18n=\"dispute and inquiry form subHeader@@transactions.dispute.inquiry.subHeader\"\n      >\n        It\u2019s important to provide as much detail as possible for the bank employee to quickly and accurately review your issue.\n      </p>\n    </div>\n  \n    <div class=\"form-group bb-block bb-block--lg\">      \n      <bb-input-radio-group-ui\n        aria-labelledby=\"'label-transaction-dispute'\"\n        [horizontal]=\"false\"\n        formControlName=\"topic\"\n        verticalAlign=\"top\"\n      >\n        <bb-input-radio-ui \n          value=\"dispute\"\n          [labelTemplate]=\"optionsLabel\"\n          labelTemplateContext=\"dispute\"\n          [disabled]=\"!enableDispute\"\n        ></bb-input-radio-ui>\n        <bb-input-radio-ui \n          value=\"inquire\"\n          [labelTemplate]=\"optionsLabel\"\n          labelTemplateContext=\"inquire\"\n        ></bb-input-radio-ui>\n      </bb-input-radio-group-ui>\n      <bb-input-validation-message-ui [showErrors]=\"isInvalidControl('topic')\">\n        <span\n          *ngIf=\"hasError('topic', 'required')\"\n          i18n=\"Error message if field is required@@transactions.dispute.errors.operationRequired\"\n        >\n          Required field\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group bb-block\" [ngClass]=\"{'bb-block--sm': isInvalidControl('body')}\"> \n      <bb-rich-text-editor-ui\n        aria-label=\"Report body\"\n        formControlName=\"body\"\n        placeholder=\"Please tell us more about this transaction...\"\n        i18n-aria-label=\"label report body body@@transactions.dispute.inquiry.body.label\"\n        i18n-placeholder=\"Place holder for messages body@@transactions.dispute.inquiry.body.message\"\n        [readonly]=\"false\"\n        [required]=\"true\"\n      ></bb-rich-text-editor-ui>\n\n      <bb-input-validation-message-ui [showErrors]=\"isInvalidControl('body')\">\n        <span\n          *ngIf=\"hasError('body', 'required')\"\n          i18n=\"Error message if field is required@@transactions.dispute.errors.bodyRequired\"\n        >\n          Required field\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group bb-block bb-block--sm\">\n      <bb-input-file-ui\n        label=\"Default file input\"\n        data-role=\"attachment-file-input\"\n        [disabled]=\"state === loadingStateEnum.loading\"\n        (change)=\"uploadFile($event.target)\"\n      ></bb-input-file-ui>\n    </div>\n\n    <div class=\"row bb-inquire-dispute-attachments\" *ngIf=\"message?.attachments?.length\">\n      <div *ngFor=\"let attachment of message?.attachments\" class=\"col-md-6 bb-inquire-dispute-attachments__item\">\n        <div class=\"bb-block bb-block--md\">\n          <bb-file-attachment-ui\n            data-role=\"attachment-file\"\n            [name]=\"attachment.name\" \n            [size]=\"attachment.size\"\n            [fileContent]=\"attachment.content\"\n            [block]=\"true\"\n            [loading]=\"attachment.id === undefined\"\n            [deletable]=\"attachment.id !== undefined\"\n            (delete)=\"removeAttachment(attachment)\"\n          ></bb-file-attachment-ui>\n        </div>\n      </div>\n    </div>\n   \n    <div class=\"bb-block bb-block--xl bb-text-align-left\">\n      <ng-container *ngIf=\"state === loadingStateEnum.error\">\n        <bb-alert-ui\n          title=\"Couldn\u2019t send your message\"\n          data-role=\"send-report-failed\"\n          message=\"Something went wrong. Please try again.\"\n          i18n-title=\"\n            Send report failed notification|Message for a notification displayed when sending transaction\n            report request has failed@@transactions.notification.error.send.title\"\n          i18n-message=\"Send report failed notification message@@transactions.notification.error.send.message\"\n        ></bb-alert-ui>\n      </ng-container>\n    </div>\n  \n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        bbButton\n        color=\"primary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"dispute-inquiry-send-button\"\n        [isLoading]=\"state === loadingStateEnum.loading\"\n        (click)=\"state !== loadingStateEnum.loading && saveReport()\"\n        i18n=\"Send button@@transactions.dispute.inquiry.button.send\"\n      >\n        Send\n      </bb-load-button-ui>\n      <button\n        *ngIf=\"state !== loadingStateEnum.loading \"\n        bbButton\n        type=\"button\"\n        color=\"secondary\"\n        data-role=\"dispute-inquiry-cancel-button\"\n        class=\"bb-button-bar__button\"\n        (click)=\"confirmationDialogActive = true\"\n        i18n=\"Cancel button@@transactions.dispute.inquiry.button.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n</div>\n\n<ng-template #disputeTipContent>\n  <div class=\"bb-text-align-left\">\n    <span i18n=\"Description inside a tooltip@@transactions.dispute.inquiry.tooltip.description\">\n      If this transaction is incorrect, you can raise a claim for a refund.\n    </span>\n  </div>\n</ng-template>\n\n<ng-template #inqueryTipContent>\n  <div class=\"bb-text-align-left\">\n    <span i18n=\"Description inside inquery tooltip@@transactions.dispute.inquiry.tooltip.description\">\n      If you are suspicious about this transaction, you can ask the bank to gather more information about it.\n    </span>\n  </div>\n</ng-template>\n\n<ng-template #optionsLabel let-context=\"labelTemplateContext\">\n  <ng-container *ngIf=\"context === 'dispute'\">\n    <span \n      class=\"bb-input-radio-group__radio-label\"\n    >\n      {{processLabel(labels.dispute)[0]}}\n    </span>\n    <span class=\"d-inline-block\">\n      <span class=\"bb-input-radio-group__radio-label\">\n        {{processLabel(labels.dispute)[1]}}\n      </span>\n      <bb-icon-ui \n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--md-top\"\n        role=\"tooltip\" \n        name=\"info\" \n        size=\"md\" \n        [bbTooltip]=\"disputeTipContent\" \n        triggers=\"hover click\"\n        placement=\"right\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <bb-icon-ui \n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--sm-bottom\"\n        role=\"tooltip\" \n        name=\"info\" \n        size=\"md\" \n        [bbTooltip]=\"disputeTipContent\" \n        triggers=\"hover click\"\n        placement=\"left\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <span class=\"sr-only\" i18n=\"Description inside a tooltip@@transactions.dispute.inquiry.tooltip.hidden.description\">\n        If this transaction is incorrect, you can raise a claim for a refund.\n      </span>\n    </span>\n  </ng-container>\n\n  <ng-container *ngIf=\"context === 'inquire'\">\n    <span \n      class=\"bb-input-radio-group__radio-label\"\n    >\n      {{processLabel(labels.inquire)[0]}}\n    </span>\n    <span class=\"d-inline-block\">\n      <span class=\"bb-input-radio-group__radio-label\">\n        {{processLabel(labels.inquire)[1]}}\n      </span>\n      <bb-icon-ui \n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--md-top\"\n        role=\"tooltip\" \n        name=\"info\" \n        size=\"md\" \n        [bbTooltip]=\"inqueryTipContent\" \n        triggers=\"hover click\"\n        placement=\"right\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <bb-icon-ui \n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--sm-bottom\"\n        role=\"tooltip\" \n        name=\"info\" \n        size=\"md\" \n        [bbTooltip]=\"inqueryTipContent\" \n        triggers=\"hover click\"\n        placement=\"top\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <span class=\"sr-only\" i18n=\"Description inside inquery tooltip@@transactions.dispute.inquiry.tooltip.hidden.description\">\n        If you are suspicious about this transaction, you can ask the bank to gather more information about it.\n      </span>\n    </span> \n  </ng-container>\n</ng-template>\n\n<!-- Cancel Dispute or Inquiry -->\n<bb-modal-ui\n  [isOpen]=\"confirmationDialogActive\"\n  (cancel)=\"closeConfirmationDialog()\"\n>\n  <div class=\"modal-header\">\n    <h2\n      id=\"modal-basic-title\"\n      class=\"modal-title\"\n      data-role=\"discard-report-modal-header\" \n      i18n=\"Discard your report?|Discard report modal title@@transactions.dispute.inquiry.discard.report.modal.title\"\n    >\n      Discard your report?\n    </h2>\n  </div>\n\n  <div class=\"modal-body\">\n    <span \n      data-role=\"discard-report-modal-subHeader\" \n      i18n=\"All entered data will be lost.|Discard report info@@transactions.dispute.inquiry.discard.report.modal.info\">\n      All entered data will be lost.\n    </span>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div class=\"bb-button-bar\">\n      <button \n        bbButton\n        color=\"danger\" \n        class=\"bb-button-bar__button\"\n        data-role=\"discard-report-modal-discard-button\"\n        (click)=\"closeReportForm()\" \n        i18n=\"Discard|Discard report button label@@transactions.dispute.inquiry.discard.report.modal.discard.button\"\n      >\n        Discard\n      </button>\n\n      <button\n        bbButton\n        color=\"secondary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"discard-report-modal-cancel-button\"\n        (click)=\"closeConfirmationDialog()\"\n        i18n=\"Cancel|Cancel button label@@transactions.dispute.inquiry.discard.report.modal.cancel.button\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</bb-modal-ui>", components: [{ type: i2.InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i2.InputRadioComponent, selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }, { type: i3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i4.RichTextEditorComponent, selector: "bb-rich-text-editor-ui", inputs: ["maxLength", "minLength", "placeholder", "counter", "readonly", "actionsTooltipPlacement"] }, { type: i5.InputFileComponent, selector: "bb-input-file-ui", inputs: ["accept", "maxSizeInMb", "multiple", "color", "autofocus", "buttonText", "buttonSize", "iconName"] }, { type: i6.FileAttachmentComponent, selector: "bb-file-attachment-ui", inputs: ["name", "size", "fileContent", "loading", "deletable", "disabled", "block"], outputs: ["delete"] }, { type: i7.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i8.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i9.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i10.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i11.AccessibilityKeyboardDirective, selector: "[bbAccessibilityKeyboard]" }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i12.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i12.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i12.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i14.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsInquiryDisputeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transactions-inquiry-dispute',
                    templateUrl: 'transactions-inquiry-dispute.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; }, propDecorators: { message: [{
                type: Input
            }], enableDispute: [{
                type: Input
            }], state: [{
                type: Input
            }], inquireAndDisputeTopics: [{
                type: Input
            }], submitReport: [{
                type: Output
            }], cancelReport: [{
                type: Output
            }], messageChange: [{
                type: Output
            }], fileChange: [{
                type: Output
            }], fileRemoved: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,