import { Injectable } from '@angular/core';
import { throwError } from 'rxjs';
import { map, catchError } from 'rxjs/operators';
import { TransactionsEnumValue } from '../model/transactions-enum-value.model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/transactions";
export class EnumValuesService {
    constructor(transactionsDataHttpService) {
        this.transactionsDataHttpService = transactionsDataHttpService;
        this.enumValues = {};
    }
    handleError(error) {
        if (error.error instanceof ErrorEvent) {
            // A client-side or network error occurred.  Handle it accordingly.
            console.error('An error occurred:', error.error.message);
        }
        else {
            // The backend returned an unsuccessful response code.
            // The response body may contain clues as to what went wrong.
            console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);
        }
        // Return an observable with a user-facing error message.
        return throwError('Something bad happened; please try again later.');
    }
    loadEnumValues(attributeName) {
        return this.transactionsDataHttpService
            .getEnumValuesByAttributeName({ attributeName }, 'response')
            .pipe(map(TransactionsEnumValue.fromHttpResponse), catchError(this.handleError));
    }
    getEnumValues(attributeName) {
        if (typeof this.enumValues[attributeName] === 'undefined') {
            this.enumValues[attributeName] = this.loadEnumValues(attributeName);
        }
        return this.enumValues[attributeName];
    }
}
EnumValuesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EnumValuesService, deps: [{ token: i1.TransactionClientHttpService }], target: i0.ɵɵFactoryTarget.Injectable });
EnumValuesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EnumValuesService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EnumValuesService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.TransactionClientHttpService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bS12YWx1ZXMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdHJhbnNhY3Rpb25zLWNvbW1vbi1hbmcvc3JjL3NlcnZpY2VzL2VudW0tdmFsdWVzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUczQyxPQUFPLEVBQWMsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFakQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7OztBQUcvRSxNQUFNLE9BQU8saUJBQWlCO0lBRzVCLFlBQTZCLDJCQUF5RDtRQUF6RCxnQ0FBMkIsR0FBM0IsMkJBQTJCLENBQThCO1FBRnJFLGVBQVUsR0FBMEUsRUFBRSxDQUFDO0lBRWYsQ0FBQztJQUVsRixXQUFXLENBQUMsS0FBd0I7UUFDMUMsSUFBSSxLQUFLLENBQUMsS0FBSyxZQUFZLFVBQVUsRUFBRTtZQUNyQyxtRUFBbUU7WUFDbkUsT0FBTyxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzFEO2FBQU07WUFDTCxzREFBc0Q7WUFDdEQsNkRBQTZEO1lBQzdELE9BQU8sQ0FBQyxLQUFLLENBQUMseUJBQXlCLEtBQUssQ0FBQyxNQUFNLElBQUksR0FBRyxhQUFhLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ3ZGO1FBRUQseURBQXlEO1FBQ3pELE9BQU8sVUFBVSxDQUFDLGlEQUFpRCxDQUFDLENBQUM7SUFDdkUsQ0FBQztJQUVPLGNBQWMsQ0FBQyxhQUFxQjtRQUMxQyxPQUFPLElBQUksQ0FBQywyQkFBMkI7YUFDcEMsNEJBQTRCLENBQUMsRUFBRSxhQUFhLEVBQUUsRUFBRSxVQUFVLENBQUM7YUFDM0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztJQUNyRixDQUFDO0lBRUQsYUFBYSxDQUFDLGFBQXFCO1FBQ2pDLElBQUksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLFdBQVcsRUFBRTtZQUN6RCxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDckU7UUFFRCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7K0dBL0JVLGlCQUFpQjttSEFBakIsaUJBQWlCOzRGQUFqQixpQkFBaUI7a0JBRDdCLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uQ2xpZW50SHR0cFNlcnZpY2UgfSBmcm9tICdAYmFja2Jhc2UvZGF0YS1hbmcvdHJhbnNhY3Rpb25zJztcbmltcG9ydCB7IE9ic2VydmFibGUsIHRocm93RXJyb3IgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCwgY2F0Y2hFcnJvciB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHsgVHJhbnNhY3Rpb25zRW51bVZhbHVlIH0gZnJvbSAnLi4vbW9kZWwvdHJhbnNhY3Rpb25zLWVudW0tdmFsdWUubW9kZWwnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRW51bVZhbHVlc1NlcnZpY2Uge1xuICBwcml2YXRlIHJlYWRvbmx5IGVudW1WYWx1ZXM6IHsgW2F0dHJpYnV0ZU5hbWU6IHN0cmluZ106IE9ic2VydmFibGU8QXJyYXk8VHJhbnNhY3Rpb25zRW51bVZhbHVlPj4gfSA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgdHJhbnNhY3Rpb25zRGF0YUh0dHBTZXJ2aWNlOiBUcmFuc2FjdGlvbkNsaWVudEh0dHBTZXJ2aWNlKSB7fVxuXG4gIHByaXZhdGUgaGFuZGxlRXJyb3IoZXJyb3I6IEh0dHBFcnJvclJlc3BvbnNlKSB7XG4gICAgaWYgKGVycm9yLmVycm9yIGluc3RhbmNlb2YgRXJyb3JFdmVudCkge1xuICAgICAgLy8gQSBjbGllbnQtc2lkZSBvciBuZXR3b3JrIGVycm9yIG9jY3VycmVkLiAgSGFuZGxlIGl0IGFjY29yZGluZ2x5LlxuICAgICAgY29uc29sZS5lcnJvcignQW4gZXJyb3Igb2NjdXJyZWQ6JywgZXJyb3IuZXJyb3IubWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFRoZSBiYWNrZW5kIHJldHVybmVkIGFuIHVuc3VjY2Vzc2Z1bCByZXNwb25zZSBjb2RlLlxuICAgICAgLy8gVGhlIHJlc3BvbnNlIGJvZHkgbWF5IGNvbnRhaW4gY2x1ZXMgYXMgdG8gd2hhdCB3ZW50IHdyb25nLlxuICAgICAgY29uc29sZS5lcnJvcihgQmFja2VuZCByZXR1cm5lZCBjb2RlICR7ZXJyb3Iuc3RhdHVzfSwgYCArIGBib2R5IHdhczogJHtlcnJvci5lcnJvcn1gKTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gYW4gb2JzZXJ2YWJsZSB3aXRoIGEgdXNlci1mYWNpbmcgZXJyb3IgbWVzc2FnZS5cbiAgICByZXR1cm4gdGhyb3dFcnJvcignU29tZXRoaW5nIGJhZCBoYXBwZW5lZDsgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlci4nKTtcbiAgfVxuXG4gIHByaXZhdGUgbG9hZEVudW1WYWx1ZXMoYXR0cmlidXRlTmFtZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxBcnJheTxUcmFuc2FjdGlvbnNFbnVtVmFsdWU+PiB7XG4gICAgcmV0dXJuIHRoaXMudHJhbnNhY3Rpb25zRGF0YUh0dHBTZXJ2aWNlXG4gICAgICAuZ2V0RW51bVZhbHVlc0J5QXR0cmlidXRlTmFtZSh7IGF0dHJpYnV0ZU5hbWUgfSwgJ3Jlc3BvbnNlJylcbiAgICAgIC5waXBlKG1hcChUcmFuc2FjdGlvbnNFbnVtVmFsdWUuZnJvbUh0dHBSZXNwb25zZSksIGNhdGNoRXJyb3IodGhpcy5oYW5kbGVFcnJvcikpO1xuICB9XG5cbiAgZ2V0RW51bVZhbHVlcyhhdHRyaWJ1dGVOYW1lOiBzdHJpbmcpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuZW51bVZhbHVlc1thdHRyaWJ1dGVOYW1lXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRoaXMuZW51bVZhbHVlc1thdHRyaWJ1dGVOYW1lXSA9IHRoaXMubG9hZEVudW1WYWx1ZXMoYXR0cmlidXRlTmFtZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZW51bVZhbHVlc1thdHRyaWJ1dGVOYW1lXTtcbiAgfVxufVxuIl19