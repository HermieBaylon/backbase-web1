import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "@angular/common";
import * as i3 from "@backbase/ui-ang/button";
export class DocumentViewerInteractorComponent {
    constructor() {
        this.navigationState = { currIdx: 0, total: 0 };
        this.canZoomOut = true;
        this.canZoomIn = true;
        this.navigate = new EventEmitter();
        this.zoomIn = new EventEmitter();
        this.zoomOut = new EventEmitter();
    }
    get navigationStatus() {
        return this.navigationState.currIdx + 1 + '/' + this.navigationState.total;
    }
    get hasNextNavigation() {
        return this.navigationState.currIdx + 1 < this.navigationState.total;
    }
    get hasPrevNavigation() {
        return this.navigationState.currIdx > 0;
    }
    prev() {
        this.navigate.emit(this.navigationState.currIdx - 1);
    }
    next() {
        this.navigate.emit(this.navigationState.currIdx + 1);
    }
}
DocumentViewerInteractorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DocumentViewerInteractorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
DocumentViewerInteractorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DocumentViewerInteractorComponent, selector: "bb-document-viewer-interactor", inputs: { navigationState: "navigationState", canZoomOut: "canZoomOut", canZoomIn: "canZoomIn" }, outputs: { navigate: "navigate", zoomIn: "zoomIn", zoomOut: "zoomOut" }, ngImport: i0, template: "<div class=\"bb-document-viewer-interactor\">\n  <div class=\"bb-document-viewer-interactor__container\" (click)=\"$event.stopPropagation()\">\n    <div class=\"bb-document-viewer-interactor-controls\">\n      <button \n        bbButton\n        data-role=\"previous-document-btn\" \n        *ngIf=\"hasPrevNavigation\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-interactor-controls__spacer\"\n        buttonSize=\"sm\" \n        (click)=\"prev()\"\n        aria-label=\"previous\"\n        i18n-aria-label=\"Previous document button@@document-viewer-interactor.aria-label.previous-document-button\"\n      >\n        <bb-icon-ui \n          name=\"angle-left\" \n          color=\"light\" \n          size=\"md\"\n        ></bb-icon-ui>\n      </button>\n      <span class=\"bb-document-viewer-interactor-controls__spacer\">{{ navigationStatus }}</span>\n      <button \n        bbButton\n        data-role=\"next-document-btn\" \n        *ngIf=\"hasNextNavigation\"\n        class=\"bb-document-viewer-interactor-controls__button\"\n        buttonSize=\"sm\" \n        (click)=\"next()\"\n        aria-label=\"next\"\n        i18n-aria-label=\"Next document button@@document-viewer-interactor.aria-label.next-document-button\"\n      >\n        <bb-icon-ui \n          name=\"angle-right\" \n          color=\"light\" \n          size=\"md\"\n        ></bb-icon-ui>\n      </button>\n    </div>\n    <div class=\"bb-document-viewer-interactor-separator\"></div>\n    <div class=\"bb-document-viewer-interactor-controls\">\n      <button \n        bbButton\n        data-role=\"zoom-out-btn\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-interactor-controls__spacer\" \n        [disabled]=\"!canZoomOut\" \n        buttonSize=\"sm\" \n        (click)=\"zoomOut.emit()\"\n        aria-label=\"zoom out\"\n        i18n-aria-label=\"Zoom out document button@@document-viewer-interactor.aria-label.zoomOut-document-button\"\n      >\n        <bb-icon-ui \n          name=\"zoom-out\" \n          color=\"light\" \n          size=\"md\"\n        ></bb-icon-ui>\n      </button>\n      <button \n        bbButton\n        data-role=\"zoom-in-btn\"\n        class=\"bb-document-viewer-interactor-controls__button\"\n        [disabled]=\"!canZoomIn\" \n        aria-label=\"zoom in\"\n        buttonSize=\"sm\" \n        (click)=\"zoomIn.emit()\"\n        i18n-aria-label=\"Zoom in document button@@document-viewer-interactor.aria-label.zoomIn-document-button\"\n      >\n        <bb-icon-ui \n          name=\"zoom-in\" \n          color=\"light\" \n          size=\"md\"\n        ></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DocumentViewerInteractorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-document-viewer-interactor',
                    templateUrl: './document-viewer-interactor.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { navigationState: [{
                type: Input
            }], canZoomOut: [{
                type: Input
            }], canZoomIn: [{
                type: Input
            }], navigate: [{
                type: Output
            }], zoomIn: [{
                type: Output
            }], zoomOut: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy90cmFuc2FjdGlvbnMtY29tbW9uLWFuZy9zcmMvY29tcG9uZW50cy9kb2N1bWVudC12aWV3ZXItdWkvZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3IvZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3IuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy90cmFuc2FjdGlvbnMtY29tbW9uLWFuZy9zcmMvY29tcG9uZW50cy9kb2N1bWVudC12aWV3ZXItdWkvZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3IvZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3IuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFRaEcsTUFBTSxPQUFPLGlDQUFpQztJQUw5QztRQU1XLG9CQUFlLEdBQW9CLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUM7UUFDNUQsZUFBVSxHQUFHLElBQUksQ0FBQztRQUNsQixjQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBQ3RDLFdBQU0sR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO1FBQ2xDLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO0tBcUI5QztJQW5CQyxJQUFJLGdCQUFnQjtRQUNsQixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUM7SUFDN0UsQ0FBQztJQUVELElBQUksaUJBQWlCO1FBQ25CLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxJQUFJLGlCQUFpQjtRQUNuQixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsSUFBSTtRQUNGLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxJQUFJO1FBQ0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdkQsQ0FBQzs7K0hBMUJVLGlDQUFpQzttSEFBakMsaUNBQWlDLGdQQ1I5Qyw4cEZBMEVBOzRGRGxFYSxpQ0FBaUM7a0JBTDdDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLCtCQUErQjtvQkFDekMsV0FBVyxFQUFFLDZDQUE2QztvQkFDMUQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzhCQUVVLGVBQWU7c0JBQXZCLEtBQUs7Z0JBQ0csVUFBVTtzQkFBbEIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNJLFFBQVE7c0JBQWpCLE1BQU07Z0JBQ0csTUFBTTtzQkFBZixNQUFNO2dCQUNHLE9BQU87c0JBQWhCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5hdmlnYXRpb25TdGF0ZSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL1VJL2RvY3VtZW50LXZpZXdlci1jb21tb25zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3InLFxuICB0ZW1wbGF0ZVVybDogJy4vZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3IuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgRG9jdW1lbnRWaWV3ZXJJbnRlcmFjdG9yQ29tcG9uZW50IHtcbiAgQElucHV0KCkgbmF2aWdhdGlvblN0YXRlOiBOYXZpZ2F0aW9uU3RhdGUgPSB7IGN1cnJJZHg6IDAsIHRvdGFsOiAwIH07XG4gIEBJbnB1dCgpIGNhblpvb21PdXQgPSB0cnVlO1xuICBASW5wdXQoKSBjYW5ab29tSW4gPSB0cnVlO1xuICBAT3V0cHV0KCkgbmF2aWdhdGUgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcbiAgQE91dHB1dCgpIHpvb21JbiA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgQE91dHB1dCgpIHpvb21PdXQgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgZ2V0IG5hdmlnYXRpb25TdGF0dXMoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5uYXZpZ2F0aW9uU3RhdGUuY3VycklkeCArIDEgKyAnLycgKyB0aGlzLm5hdmlnYXRpb25TdGF0ZS50b3RhbDtcbiAgfVxuXG4gIGdldCBoYXNOZXh0TmF2aWdhdGlvbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5uYXZpZ2F0aW9uU3RhdGUuY3VycklkeCArIDEgPCB0aGlzLm5hdmlnYXRpb25TdGF0ZS50b3RhbDtcbiAgfVxuXG4gIGdldCBoYXNQcmV2TmF2aWdhdGlvbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5uYXZpZ2F0aW9uU3RhdGUuY3VycklkeCA+IDA7XG4gIH1cblxuICBwcmV2KCk6IHZvaWQge1xuICAgIHRoaXMubmF2aWdhdGUuZW1pdCh0aGlzLm5hdmlnYXRpb25TdGF0ZS5jdXJySWR4IC0gMSk7XG4gIH1cblxuICBuZXh0KCk6IHZvaWQge1xuICAgIHRoaXMubmF2aWdhdGUuZW1pdCh0aGlzLm5hdmlnYXRpb25TdGF0ZS5jdXJySWR4ICsgMSk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi1kb2N1bWVudC12aWV3ZXItaW50ZXJhY3RvclwiPlxuICA8ZGl2IGNsYXNzPVwiYmItZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3JfX2NvbnRhaW5lclwiIChjbGljayk9XCIkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKClcIj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3ItY29udHJvbHNcIj5cbiAgICAgIDxidXR0b24gXG4gICAgICAgIGJiQnV0dG9uXG4gICAgICAgIGRhdGEtcm9sZT1cInByZXZpb3VzLWRvY3VtZW50LWJ0blwiIFxuICAgICAgICAqbmdJZj1cImhhc1ByZXZOYXZpZ2F0aW9uXCJcbiAgICAgICAgY2xhc3M9XCJiYi1kb2N1bWVudC12aWV3ZXItaW50ZXJhY3Rvci1jb250cm9sc19fYnV0dG9uIGJiLWRvY3VtZW50LXZpZXdlci1pbnRlcmFjdG9yLWNvbnRyb2xzX19zcGFjZXJcIlxuICAgICAgICBidXR0b25TaXplPVwic21cIiBcbiAgICAgICAgKGNsaWNrKT1cInByZXYoKVwiXG4gICAgICAgIGFyaWEtbGFiZWw9XCJwcmV2aW91c1wiXG4gICAgICAgIGkxOG4tYXJpYS1sYWJlbD1cIlByZXZpb3VzIGRvY3VtZW50IGJ1dHRvbkBAZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3IuYXJpYS1sYWJlbC5wcmV2aW91cy1kb2N1bWVudC1idXR0b25cIlxuICAgICAgPlxuICAgICAgICA8YmItaWNvbi11aSBcbiAgICAgICAgICBuYW1lPVwiYW5nbGUtbGVmdFwiIFxuICAgICAgICAgIGNvbG9yPVwibGlnaHRcIiBcbiAgICAgICAgICBzaXplPVwibWRcIlxuICAgICAgICA+PC9iYi1pY29uLXVpPlxuICAgICAgPC9idXR0b24+XG4gICAgICA8c3BhbiBjbGFzcz1cImJiLWRvY3VtZW50LXZpZXdlci1pbnRlcmFjdG9yLWNvbnRyb2xzX19zcGFjZXJcIj57eyBuYXZpZ2F0aW9uU3RhdHVzIH19PC9zcGFuPlxuICAgICAgPGJ1dHRvbiBcbiAgICAgICAgYmJCdXR0b25cbiAgICAgICAgZGF0YS1yb2xlPVwibmV4dC1kb2N1bWVudC1idG5cIiBcbiAgICAgICAgKm5nSWY9XCJoYXNOZXh0TmF2aWdhdGlvblwiXG4gICAgICAgIGNsYXNzPVwiYmItZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3ItY29udHJvbHNfX2J1dHRvblwiXG4gICAgICAgIGJ1dHRvblNpemU9XCJzbVwiIFxuICAgICAgICAoY2xpY2spPVwibmV4dCgpXCJcbiAgICAgICAgYXJpYS1sYWJlbD1cIm5leHRcIlxuICAgICAgICBpMThuLWFyaWEtbGFiZWw9XCJOZXh0IGRvY3VtZW50IGJ1dHRvbkBAZG9jdW1lbnQtdmlld2VyLWludGVyYWN0b3IuYXJpYS1sYWJlbC5uZXh0LWRvY3VtZW50LWJ1dHRvblwiXG4gICAgICA+XG4gICAgICAgIDxiYi1pY29uLXVpIFxuICAgICAgICAgIG5hbWU9XCJhbmdsZS1yaWdodFwiIFxuICAgICAgICAgIGNvbG9yPVwibGlnaHRcIiBcbiAgICAgICAgICBzaXplPVwibWRcIlxuICAgICAgICA+PC9iYi1pY29uLXVpPlxuICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImJiLWRvY3VtZW50LXZpZXdlci1pbnRlcmFjdG9yLXNlcGFyYXRvclwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJiYi1kb2N1bWVudC12aWV3ZXItaW50ZXJhY3Rvci1jb250cm9sc1wiPlxuICAgICAgPGJ1dHRvbiBcbiAgICAgICAgYmJCdXR0b25cbiAgICAgICAgZGF0YS1yb2xlPVwiem9vbS1vdXQtYnRuXCJcbiAgICAgICAgY2xhc3M9XCJiYi1kb2N1bWVudC12aWV3ZXItaW50ZXJhY3Rvci1jb250cm9sc19fYnV0dG9uIGJiLWRvY3VtZW50LXZpZXdlci1pbnRlcmFjdG9yLWNvbnRyb2xzX19zcGFjZXJcIiBcbiAgICAgICAgW2Rpc2FibGVkXT1cIiFjYW5ab29tT3V0XCIgXG4gICAgICAgIGJ1dHRvblNpemU9XCJzbVwiIFxuICAgICAgICAoY2xpY2spPVwiem9vbU91dC5lbWl0KClcIlxuICAgICAgICBhcmlhLWxhYmVsPVwiem9vbSBvdXRcIlxuICAgICAgICBpMThuLWFyaWEtbGFiZWw9XCJab29tIG91dCBkb2N1bWVudCBidXR0b25AQGRvY3VtZW50LXZpZXdlci1pbnRlcmFjdG9yLmFyaWEtbGFiZWwuem9vbU91dC1kb2N1bWVudC1idXR0b25cIlxuICAgICAgPlxuICAgICAgICA8YmItaWNvbi11aSBcbiAgICAgICAgICBuYW1lPVwiem9vbS1vdXRcIiBcbiAgICAgICAgICBjb2xvcj1cImxpZ2h0XCIgXG4gICAgICAgICAgc2l6ZT1cIm1kXCJcbiAgICAgICAgPjwvYmItaWNvbi11aT5cbiAgICAgIDwvYnV0dG9uPlxuICAgICAgPGJ1dHRvbiBcbiAgICAgICAgYmJCdXR0b25cbiAgICAgICAgZGF0YS1yb2xlPVwiem9vbS1pbi1idG5cIlxuICAgICAgICBjbGFzcz1cImJiLWRvY3VtZW50LXZpZXdlci1pbnRlcmFjdG9yLWNvbnRyb2xzX19idXR0b25cIlxuICAgICAgICBbZGlzYWJsZWRdPVwiIWNhblpvb21JblwiIFxuICAgICAgICBhcmlhLWxhYmVsPVwiem9vbSBpblwiXG4gICAgICAgIGJ1dHRvblNpemU9XCJzbVwiIFxuICAgICAgICAoY2xpY2spPVwiem9vbUluLmVtaXQoKVwiXG4gICAgICAgIGkxOG4tYXJpYS1sYWJlbD1cIlpvb20gaW4gZG9jdW1lbnQgYnV0dG9uQEBkb2N1bWVudC12aWV3ZXItaW50ZXJhY3Rvci5hcmlhLWxhYmVsLnpvb21Jbi1kb2N1bWVudC1idXR0b25cIlxuICAgICAgPlxuICAgICAgICA8YmItaWNvbi11aSBcbiAgICAgICAgICBuYW1lPVwiem9vbS1pblwiIFxuICAgICAgICAgIGNvbG9yPVwibGlnaHRcIiBcbiAgICAgICAgICBzaXplPVwibWRcIlxuICAgICAgICA+PC9iYi1pY29uLXVpPlxuICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=