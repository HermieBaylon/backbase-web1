import { Injectable } from '@angular/core';
import { map, shareReplay } from 'rxjs/operators';
import { fromCategoriesManagementResponse } from '../model/categories-list';
import { categoryListLevelParam } from '../constants';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/categories-management";
export class CategoriesService {
    constructor(categoriesManagementDataHttpService) {
        this.categoriesManagementDataHttpService = categoriesManagementDataHttpService;
    }
    getCategories() {
        return this.categoriesManagementDataHttpService
            .getCategories({
            level: categoryListLevelParam,
        }, 'response')
            .pipe(shareReplay(), map(fromCategoriesManagementResponse));
    }
}
CategoriesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CategoriesService, deps: [{ token: i1.CategoriesHttpService }], target: i0.ɵɵFactoryTarget.Injectable });
CategoriesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CategoriesService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CategoriesService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.CategoriesHttpService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2F0ZWdvcmllcy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy90cmFuc2FjdGlvbnMtY29tbW9uLWFuZy9zcmMvc2VydmljZXMvY2F0ZWdvcmllcy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLEdBQUcsRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUdsRCxPQUFPLEVBQUUsZ0NBQWdDLEVBQWdCLE1BQU0sMEJBQTBCLENBQUM7QUFDMUYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sY0FBYyxDQUFDOzs7QUFHdEQsTUFBTSxPQUFPLGlCQUFpQjtJQUM1QixZQUE2QixtQ0FBMEQ7UUFBMUQsd0NBQW1DLEdBQW5DLG1DQUFtQyxDQUF1QjtJQUFHLENBQUM7SUFFM0YsYUFBYTtRQUNYLE9BQU8sSUFBSSxDQUFDLG1DQUFtQzthQUM1QyxhQUFhLENBQ1o7WUFDRSxLQUFLLEVBQUUsc0JBQXNCO1NBQzlCLEVBQ0QsVUFBVSxDQUNYO2FBQ0EsSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUFFLEdBQUcsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDLENBQUM7SUFDaEUsQ0FBQzs7K0dBWlUsaUJBQWlCO21IQUFqQixpQkFBaUI7NEZBQWpCLGlCQUFpQjtrQkFEN0IsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCwgc2hhcmVSZXBsYXkgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IENhdGVnb3JpZXNIdHRwU2VydmljZSB9IGZyb20gJ0BiYWNrYmFzZS9kYXRhLWFuZy9jYXRlZ29yaWVzLW1hbmFnZW1lbnQnO1xuaW1wb3J0IHsgZnJvbUNhdGVnb3JpZXNNYW5hZ2VtZW50UmVzcG9uc2UsIENhdGVnb3J5SXRlbSB9IGZyb20gJy4uL21vZGVsL2NhdGVnb3JpZXMtbGlzdCc7XG5pbXBvcnQgeyBjYXRlZ29yeUxpc3RMZXZlbFBhcmFtIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIENhdGVnb3JpZXNTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBjYXRlZ29yaWVzTWFuYWdlbWVudERhdGFIdHRwU2VydmljZTogQ2F0ZWdvcmllc0h0dHBTZXJ2aWNlKSB7fVxuXG4gIGdldENhdGVnb3JpZXMoKTogT2JzZXJ2YWJsZTxDYXRlZ29yeUl0ZW1bXT4ge1xuICAgIHJldHVybiB0aGlzLmNhdGVnb3JpZXNNYW5hZ2VtZW50RGF0YUh0dHBTZXJ2aWNlXG4gICAgICAuZ2V0Q2F0ZWdvcmllcyhcbiAgICAgICAge1xuICAgICAgICAgIGxldmVsOiBjYXRlZ29yeUxpc3RMZXZlbFBhcmFtLFxuICAgICAgICB9LFxuICAgICAgICAncmVzcG9uc2UnLFxuICAgICAgKVxuICAgICAgLnBpcGUoc2hhcmVSZXBsYXkoKSwgbWFwKGZyb21DYXRlZ29yaWVzTWFuYWdlbWVudFJlc3BvbnNlKSk7XG4gIH1cbn1cbiJdfQ==