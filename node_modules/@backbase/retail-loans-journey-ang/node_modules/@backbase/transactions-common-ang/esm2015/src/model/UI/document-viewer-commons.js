export const DOCUMENT_LOAD_DELAY_MS = 400;
export var DocumentViewerType;
(function (DocumentViewerType) {
    DocumentViewerType["JPEG"] = "image/jpeg";
    DocumentViewerType["JPG"] = "image/jpg";
    DocumentViewerType["PNG"] = "image/png";
    DocumentViewerType["WEBP"] = "image/webp";
    DocumentViewerType["GIF"] = "image/gif";
    DocumentViewerType["BMP"] = "image/bmp";
})(DocumentViewerType || (DocumentViewerType = {}));
export const isDocumentViewerType = (type) => Object.values(DocumentViewerType).includes(type);
export const downloadFile = (url, fileName) => {
    const link = document.createElement('a');
    link.href = url;
    link.download = `${fileName}`;
    link.click();
};
export var KEY_CODES;
(function (KEY_CODES) {
    KEY_CODES["UP"] = "ArrowUp";
    KEY_CODES["DOWN"] = "ArrowDown";
    KEY_CODES["ENTER"] = "Enter";
    KEY_CODES["SPACE"] = " ";
    KEY_CODES["TAB"] = "Tab";
    KEY_CODES["BACKSPACE"] = "Backspace";
    KEY_CODES["DELETE"] = "Delete";
    KEY_CODES["ESCAPE"] = "Escape";
    KEY_CODES["X"] = "x";
    KEY_CODES["V"] = "v";
    KEY_CODES["LEFT"] = "ArrowLeft";
    KEY_CODES["RIGHT"] = "ArrowRight";
})(KEY_CODES || (KEY_CODES = {}));
const KEY_CODE_TO_CODE = {
    9: KEY_CODES.TAB,
    38: KEY_CODES.UP,
    40: KEY_CODES.DOWN,
    32: KEY_CODES.SPACE,
    13: KEY_CODES.ENTER,
    46: KEY_CODES.DELETE,
    8: KEY_CODES.BACKSPACE,
    27: KEY_CODES.ESCAPE,
    88: KEY_CODES.X,
    86: KEY_CODES.V,
};
function browserIsMsie() {
    return navigator.userAgent.indexOf('MSIE') > -1 || navigator.userAgent.indexOf('Trident/') > -1;
}
export function getKeyCode(event) {
    // NOTE: detect IE
    if (browserIsMsie()) {
        return KEY_CODE_TO_CODE[event.keyCode];
    }
    return event.code;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnQtdmlld2VyLWNvbW1vbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3RyYW5zYWN0aW9ucy1jb21tb24tYW5nL3NyYy9tb2RlbC9VSS9kb2N1bWVudC12aWV3ZXItY29tbW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyxHQUFHLENBQUM7QUFNMUMsTUFBTSxDQUFOLElBQVksa0JBT1g7QUFQRCxXQUFZLGtCQUFrQjtJQUM1Qix5Q0FBbUIsQ0FBQTtJQUNuQix1Q0FBaUIsQ0FBQTtJQUNqQix1Q0FBaUIsQ0FBQTtJQUNqQix5Q0FBbUIsQ0FBQTtJQUNuQix1Q0FBaUIsQ0FBQTtJQUNqQix1Q0FBaUIsQ0FBQTtBQUNuQixDQUFDLEVBUFcsa0JBQWtCLEtBQWxCLGtCQUFrQixRQU83QjtBQW9CRCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLElBQVksRUFBOEIsRUFBRSxDQUMvRSxNQUFNLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUMsUUFBUSxDQUFDLElBQTBCLENBQUMsQ0FBQztBQUV6RSxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxHQUFXLEVBQUUsUUFBZ0IsRUFBRSxFQUFFO0lBQzVELE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekMsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7SUFDaEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLFFBQVEsRUFBRSxDQUFDO0lBQzlCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNmLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBTixJQUFZLFNBYVg7QUFiRCxXQUFZLFNBQVM7SUFDbkIsMkJBQWMsQ0FBQTtJQUNkLCtCQUFrQixDQUFBO0lBQ2xCLDRCQUFlLENBQUE7SUFDZix3QkFBVyxDQUFBO0lBQ1gsd0JBQVcsQ0FBQTtJQUNYLG9DQUF1QixDQUFBO0lBQ3ZCLDhCQUFpQixDQUFBO0lBQ2pCLDhCQUFpQixDQUFBO0lBQ2pCLG9CQUFPLENBQUE7SUFDUCxvQkFBTyxDQUFBO0lBQ1AsK0JBQWtCLENBQUE7SUFDbEIsaUNBQW9CLENBQUE7QUFDdEIsQ0FBQyxFQWJXLFNBQVMsS0FBVCxTQUFTLFFBYXBCO0FBRUQsTUFBTSxnQkFBZ0IsR0FBRztJQUN2QixDQUFDLEVBQUUsU0FBUyxDQUFDLEdBQUc7SUFDaEIsRUFBRSxFQUFFLFNBQVMsQ0FBQyxFQUFFO0lBQ2hCLEVBQUUsRUFBRSxTQUFTLENBQUMsSUFBSTtJQUNsQixFQUFFLEVBQUUsU0FBUyxDQUFDLEtBQUs7SUFDbkIsRUFBRSxFQUFFLFNBQVMsQ0FBQyxLQUFLO0lBQ25CLEVBQUUsRUFBRSxTQUFTLENBQUMsTUFBTTtJQUNwQixDQUFDLEVBQUUsU0FBUyxDQUFDLFNBQVM7SUFDdEIsRUFBRSxFQUFFLFNBQVMsQ0FBQyxNQUFNO0lBQ3BCLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNmLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztDQUNULENBQUM7QUFFVCxTQUFTLGFBQWE7SUFDcEIsT0FBTyxTQUFTLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxTQUFTLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNsRyxDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxLQUFvQjtJQUM3QyxrQkFBa0I7SUFDbEIsSUFBSSxhQUFhLEVBQUUsRUFBRTtRQUNuQixPQUFPLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxPQUFPLENBQWMsQ0FBQztLQUNyRDtJQUVELE9BQU8sS0FBSyxDQUFDLElBQWlCLENBQUM7QUFDakMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBET0NVTUVOVF9MT0FEX0RFTEFZX01TID0gNDAwO1xuXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbmV4cG9ydCB0eXBlIFN0eWxlcyA9IHsgW2tleSBpbiBzdHJpbmddOiBzdHJpbmcgfTtcblxuZXhwb3J0IGVudW0gRG9jdW1lbnRWaWV3ZXJUeXBlIHtcbiAgSlBFRyA9ICdpbWFnZS9qcGVnJyxcbiAgSlBHID0gJ2ltYWdlL2pwZycsXG4gIFBORyA9ICdpbWFnZS9wbmcnLFxuICBXRUJQID0gJ2ltYWdlL3dlYnAnLFxuICBHSUYgPSAnaW1hZ2UvZ2lmJyxcbiAgQk1QID0gJ2ltYWdlL2JtcCcsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRG9jdW1lbnRSZWZTcmMge1xuICBmaWxlbmFtZTogc3RyaW5nO1xuICBmaWxldHlwZTogRG9jdW1lbnRWaWV3ZXJUeXBlO1xuICBzcmM6IE9ic2VydmFibGU8c3RyaW5nPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEb2N1bWVudFZpZXdlck9wdGlvbnMge1xuICBjb250YWluZXI/OiB7XG4gICAgc3R5bGVzPzogU3R5bGVzO1xuICB9O1xuICBzY2FsZT86IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBOYXZpZ2F0aW9uU3RhdGUge1xuICBjdXJySWR4OiBudW1iZXI7XG4gIHRvdGFsOiBudW1iZXI7XG59XG5cbmV4cG9ydCBjb25zdCBpc0RvY3VtZW50Vmlld2VyVHlwZSA9ICh0eXBlOiBzdHJpbmcpOiB0eXBlIGlzIERvY3VtZW50Vmlld2VyVHlwZSA9PlxuICBPYmplY3QudmFsdWVzKERvY3VtZW50Vmlld2VyVHlwZSkuaW5jbHVkZXModHlwZSBhcyBEb2N1bWVudFZpZXdlclR5cGUpO1xuXG5leHBvcnQgY29uc3QgZG93bmxvYWRGaWxlID0gKHVybDogc3RyaW5nLCBmaWxlTmFtZTogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gIGxpbmsuaHJlZiA9IHVybDtcbiAgbGluay5kb3dubG9hZCA9IGAke2ZpbGVOYW1lfWA7XG4gIGxpbmsuY2xpY2soKTtcbn07XG5cbmV4cG9ydCBlbnVtIEtFWV9DT0RFUyB7XG4gIFVQID0gJ0Fycm93VXAnLFxuICBET1dOID0gJ0Fycm93RG93bicsXG4gIEVOVEVSID0gJ0VudGVyJyxcbiAgU1BBQ0UgPSAnICcsXG4gIFRBQiA9ICdUYWInLFxuICBCQUNLU1BBQ0UgPSAnQmFja3NwYWNlJyxcbiAgREVMRVRFID0gJ0RlbGV0ZScsXG4gIEVTQ0FQRSA9ICdFc2NhcGUnLFxuICBYID0gJ3gnLFxuICBWID0gJ3YnLFxuICBMRUZUID0gJ0Fycm93TGVmdCcsXG4gIFJJR0hUID0gJ0Fycm93UmlnaHQnLFxufVxuXG5jb25zdCBLRVlfQ09ERV9UT19DT0RFID0ge1xuICA5OiBLRVlfQ09ERVMuVEFCLFxuICAzODogS0VZX0NPREVTLlVQLFxuICA0MDogS0VZX0NPREVTLkRPV04sXG4gIDMyOiBLRVlfQ09ERVMuU1BBQ0UsXG4gIDEzOiBLRVlfQ09ERVMuRU5URVIsXG4gIDQ2OiBLRVlfQ09ERVMuREVMRVRFLFxuICA4OiBLRVlfQ09ERVMuQkFDS1NQQUNFLFxuICAyNzogS0VZX0NPREVTLkVTQ0FQRSxcbiAgODg6IEtFWV9DT0RFUy5YLFxuICA4NjogS0VZX0NPREVTLlYsXG59IGFzIGFueTtcblxuZnVuY3Rpb24gYnJvd3NlcklzTXNpZSgpIHtcbiAgcmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignTVNJRScpID4gLTEgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50LycpID4gLTE7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRLZXlDb2RlKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogS0VZX0NPREVTIHtcbiAgLy8gTk9URTogZGV0ZWN0IElFXG4gIGlmIChicm93c2VySXNNc2llKCkpIHtcbiAgICByZXR1cm4gS0VZX0NPREVfVE9fQ09ERVtldmVudC5rZXlDb2RlXSBhcyBLRVlfQ09ERVM7XG4gIH1cblxuICByZXR1cm4gZXZlbnQuY29kZSBhcyBLRVlfQ09ERVM7XG59XG4iXX0=