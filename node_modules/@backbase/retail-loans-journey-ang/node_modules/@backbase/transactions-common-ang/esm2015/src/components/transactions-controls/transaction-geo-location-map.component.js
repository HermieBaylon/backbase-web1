import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { TransactionsDetailsLoadingState } from '../../model/transactions-details.model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "./transactions-map-ui.component";
import * as i3 from "@backbase/ui-ang/loading-indicator";
import * as i4 from "@angular/common";
export class TransactionGeoLocationMapComponent {
    constructor() {
        this.loadingStateEnum = TransactionsDetailsLoadingState;
    }
}
TransactionGeoLocationMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionGeoLocationMapComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TransactionGeoLocationMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionGeoLocationMapComponent, selector: "bb-transaction-geo-location-map", inputs: { transaction: "transaction", loadingStatus: "loadingStatus" }, ngImport: i0, template: "<div class=\"bb-transactions-geolocation\">\n  <span class=\"bb-inline-stack bb-block bb-block--sm\" *ngIf=\"transaction?.location?.address\">\n    <bb-icon-ui\n      class=\"bb-inline-stack__item\" \n      name=\"location-on\" \n      size=\"md\"\n    ></bb-icon-ui>\n    <span class=\"bb-inline-stack__item bb-transactions-geolocation__address\">{{transaction?.location?.address}}</span>\n  </span>\n  <ng-container *ngIf=\"loadingStatus!==loadingStateEnum.notStarted\">\n    <ng-container *ngIf=\"loadingStatus!==loadingStateEnum.notLoaded\">\n      <ng-container *ngIf=\"loadingStatus!==loadingStateEnum.error; else errorState\">\n        <ng-container *ngIf=\"loadingStatus!==loadingStateEnum.loading; else loadingState\">\n          <bb-transactions-map-ui [location]=\"transaction?.location\"></bb-transactions-map-ui>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <!-- Error state is not defined yet -->\n</ng-template>", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2.TransactionsMapUiComponent, selector: "bb-transactions-map-ui", inputs: ["location"] }, { type: i3.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionGeoLocationMapComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transaction-geo-location-map',
                    templateUrl: './transaction-geo-location-map.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { transaction: [{
                type: Input
            }], loadingStatus: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb24tZ2VvLWxvY2F0aW9uLW1hcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3RyYW5zYWN0aW9ucy1jb21tb24tYW5nL3NyYy9jb21wb25lbnRzL3RyYW5zYWN0aW9ucy1jb250cm9scy90cmFuc2FjdGlvbi1nZW8tbG9jYXRpb24tbWFwLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdHJhbnNhY3Rpb25zLWNvbW1vbi1hbmcvc3JjL2NvbXBvbmVudHMvdHJhbnNhY3Rpb25zLWNvbnRyb2xzL3RyYW5zYWN0aW9uLWdlby1sb2NhdGlvbi1tYXAuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUUsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7Ozs7OztBQU96RixNQUFNLE9BQU8sa0NBQWtDO0lBTC9DO1FBUUUscUJBQWdCLEdBQUcsK0JBQStCLENBQUM7S0FDcEQ7O2dJQUpZLGtDQUFrQztvSEFBbEMsa0NBQWtDLCtJQ1QvQywybUNBMEJjOzRGRGpCRCxrQ0FBa0M7a0JBTDlDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGlDQUFpQztvQkFDM0MsV0FBVyxFQUFFLCtDQUErQztvQkFDNUQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzhCQUVVLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0csYUFBYTtzQkFBckIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbiB9IGZyb20gJy4uLy4uL21vZGVsL3RyYW5zYWN0aW9uLm1vZGVsJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uc0RldGFpbHNMb2FkaW5nU3RhdGUgfSBmcm9tICcuLi8uLi9tb2RlbC90cmFuc2FjdGlvbnMtZGV0YWlscy5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLXRyYW5zYWN0aW9uLWdlby1sb2NhdGlvbi1tYXAnLFxuICB0ZW1wbGF0ZVVybDogJy4vdHJhbnNhY3Rpb24tZ2VvLWxvY2F0aW9uLW1hcC5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUcmFuc2FjdGlvbkdlb0xvY2F0aW9uTWFwQ29tcG9uZW50IHtcbiAgQElucHV0KCkgdHJhbnNhY3Rpb246IFRyYW5zYWN0aW9uIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKSBsb2FkaW5nU3RhdHVzOiBUcmFuc2FjdGlvbnNEZXRhaWxzTG9hZGluZ1N0YXRlIHwgdW5kZWZpbmVkO1xuICBsb2FkaW5nU3RhdGVFbnVtID0gVHJhbnNhY3Rpb25zRGV0YWlsc0xvYWRpbmdTdGF0ZTtcbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi10cmFuc2FjdGlvbnMtZ2VvbG9jYXRpb25cIj5cbiAgPHNwYW4gY2xhc3M9XCJiYi1pbmxpbmUtc3RhY2sgYmItYmxvY2sgYmItYmxvY2stLXNtXCIgKm5nSWY9XCJ0cmFuc2FjdGlvbj8ubG9jYXRpb24/LmFkZHJlc3NcIj5cbiAgICA8YmItaWNvbi11aVxuICAgICAgY2xhc3M9XCJiYi1pbmxpbmUtc3RhY2tfX2l0ZW1cIiBcbiAgICAgIG5hbWU9XCJsb2NhdGlvbi1vblwiIFxuICAgICAgc2l6ZT1cIm1kXCJcbiAgICA+PC9iYi1pY29uLXVpPlxuICAgIDxzcGFuIGNsYXNzPVwiYmItaW5saW5lLXN0YWNrX19pdGVtIGJiLXRyYW5zYWN0aW9ucy1nZW9sb2NhdGlvbl9fYWRkcmVzc1wiPnt7dHJhbnNhY3Rpb24/LmxvY2F0aW9uPy5hZGRyZXNzfX08L3NwYW4+XG4gIDwvc3Bhbj5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImxvYWRpbmdTdGF0dXMhPT1sb2FkaW5nU3RhdGVFbnVtLm5vdFN0YXJ0ZWRcIj5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwibG9hZGluZ1N0YXR1cyE9PWxvYWRpbmdTdGF0ZUVudW0ubm90TG9hZGVkXCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwibG9hZGluZ1N0YXR1cyE9PWxvYWRpbmdTdGF0ZUVudW0uZXJyb3I7IGVsc2UgZXJyb3JTdGF0ZVwiPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwibG9hZGluZ1N0YXR1cyE9PWxvYWRpbmdTdGF0ZUVudW0ubG9hZGluZzsgZWxzZSBsb2FkaW5nU3RhdGVcIj5cbiAgICAgICAgICA8YmItdHJhbnNhY3Rpb25zLW1hcC11aSBbbG9jYXRpb25dPVwidHJhbnNhY3Rpb24/LmxvY2F0aW9uXCI+PC9iYi10cmFuc2FjdGlvbnMtbWFwLXVpPlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L25nLWNvbnRhaW5lcj5cbjwvZGl2PlxuXG48bmctdGVtcGxhdGUgI2xvYWRpbmdTdGF0ZT5cbiAgPGJiLWxvYWRpbmctaW5kaWNhdG9yLXVpIGxvYWRlclNpemU9XCJsZ1wiPjwvYmItbG9hZGluZy1pbmRpY2F0b3ItdWk+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgI2Vycm9yU3RhdGU+XG4gIDwhLS0gRXJyb3Igc3RhdGUgaXMgbm90IGRlZmluZWQgeWV0IC0tPlxuPC9uZy10ZW1wbGF0ZT4iXX0=