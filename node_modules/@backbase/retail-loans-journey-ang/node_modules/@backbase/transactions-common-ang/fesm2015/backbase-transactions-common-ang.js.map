{"version":3,"file":"backbase-transactions-common-ang.js","sources":["../../../../libs/transactions-common-ang/src/model/transactions-list-options.model.ts","../../../../libs/transactions-common-ang/src/model/transactions-filter-options.model.ts","../../../../libs/transactions-common-ang/src/model/available-filters.model.ts","../../../../libs/transactions-common-ang/src/constants.ts","../../../../libs/transactions-common-ang/src/model/transactions-list.model.ts","../../../../libs/transactions-common-ang/src/model/transactions-list-utils.model.ts","../../../../libs/transactions-common-ang/src/services/widget-properties.service.ts","../../../../libs/transactions-common-ang/src/model/account-list.model.ts","../../../../libs/transactions-common-ang/src/services/accounts.service.ts","../../../../libs/transactions-common-ang/src/services/transactions.service.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transactions-number-of-results-found.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transactions-number-of-results-found.component.html","../../../../libs/transactions-common-ang/src/model/transactions-check-images.model.ts","../../../../libs/transactions-common-ang/src/model/transactions-details.model.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/accessibility-keyboard.directive.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-check-image-item.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-check-image-item.component.html","../../../../libs/transactions-common-ang/src/model/UI/document-viewer-commons.ts","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/document-viewer-backdrop/document-viewer-backdrop.component.ts","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/document-viewer-backdrop/document-viewer-backdrop.component.html","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/document-viewer-header/document-viewer-header.component.ts","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/document-viewer-header/document-viewer-header.component.html","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/document-viewer-interactor/document-viewer-interactor.component.ts","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/document-viewer-interactor/document-viewer-interactor.component.html","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/image-viewer/image-viewer.component.ts","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/image-viewer/image-viewer.component.html","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/document-viewer-container/document-viewer-container.component.ts","../../../../libs/transactions-common-ang/src/components/document-viewer-ui/document-viewer-container/document-viewer-container.component.html","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-check-image-document-viewer.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-check-image-document-viewer.component.html","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-check-image.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-check-image.component.html","../../../../libs/transactions-common-ang/src/components/transactions-controls/transactions-inquiry-dispute.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transactions-inquiry-dispute.component.html","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-dispute-status-tag.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-dispute-status-tag.component.html","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-dispute-banner.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-dispute-banner.component.html","../../../../libs/transactions-common-ang/src/model/transactions-backend-error.model.ts","../../../../libs/transactions-common-ang/src/model/transactions-export-options.model.ts","../../../../libs/transactions-common-ang/src/services/pending-transactions.service.ts","../../../../libs/transactions-common-ang/src/model/transactions-map.model.ts","../../../../libs/transactions-common-ang/src/services/map-api-loader.service.ts","../../../../libs/transactions-common-ang/src/services/payments-batch.service.ts","../../../../libs/transactions-common-ang/src/services/transaction-details.service.ts","../../../../libs/transactions-common-ang/src/services/available-filters-config.service.ts","../../../../libs/transactions-common-ang/src/components/base-transactions-container.ts","../../../../libs/transactions-common-ang/src/components/capitalize.pipe.ts","../../../../libs/transactions-common-ang/src/model/transaction-category.model.ts","../../../../libs/transactions-common-ang/src/services/transactions-icon-categories-factory.service.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-category-icon.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-category-icon.component.html","../../../../libs/transactions-common-ang/src/services/transaction-update.service.ts","../../../../libs/transactions-common-ang/src/model/transactions-enum-value.model.ts","../../../../libs/transactions-common-ang/src/services/enum-values.service.ts","../../../../libs/transactions-common-ang/src/model/categories-list.ts","../../../../libs/transactions-common-ang/src/services/categories.service.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transactions-map-ui.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transactions-map-ui.component.html","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-geo-location-map.component.ts","../../../../libs/transactions-common-ang/src/components/transactions-controls/transaction-geo-location-map.component.html","../../../../libs/transactions-common-ang/src/services/dom-attributes.service.ts","../../../../libs/transactions-common-ang/src/components/dynamic-id.directive.ts","../../../../libs/transactions-common-ang/src/services/messages.service.ts","../../../../libs/transactions-common-ang/src/services/transactions-inquire-and-dispute-ui.service.ts","../../../../libs/transactions-common-ang/src/transactions-common.module.ts","../../../../libs/transactions-common-ang/src/services/navigation.service.ts","../../../../libs/transactions-common-ang/src/model/transactions-get-params.model.ts","../../../../libs/transactions-common-ang/src/model/transactions-grouped-by-date.model.ts","../../../../libs/transactions-common-ang/src/components/base-transactions-widget.ts","../../../../libs/transactions-common-ang/src/components/base-transactions-controls.ts","../../../../libs/transactions-common-ang/backbase-transactions-common-ang.ts"],"sourcesContent":["import { TransactionsAccountOptions } from './transactions-account-options.model';\nimport { TransactionsFilterOptions } from './transactions-filter-options.model';\nimport { TransactionsSearchOptions } from './transactions-search-options.model';\nimport { TransactionsSortOptions } from './transactions-sort-options.model';\nimport { TransactionsExportOptions } from './transactions-export-options.model';\n\nexport enum OnLoadAction {\n  Replace,\n  Append,\n  ReplacePage,\n}\n\nexport enum TransactionState {\n  completed = 'COMPLETED',\n  uncompleted = 'UNCOMPLETED',\n}\n\nexport interface TransactionsListOptions {\n  account: TransactionsAccountOptions;\n  search?: TransactionsSearchOptions;\n  filter?: TransactionsFilterOptions;\n  state?: TransactionState;\n  pagination: {\n    from: number;\n    size: number;\n  };\n  sort?: TransactionsSortOptions;\n  onLoad?: OnLoadAction;\n}\n\nexport const defaultAccountOptions: Pick<TransactionsListOptions, 'account'> = {\n  account: {},\n};\n\nexport const defaultSearchOptions: Pick<TransactionsListOptions, 'search'> = {\n  search: {},\n};\n\nexport const defaultFilterOptions: Pick<TransactionsListOptions, 'filter'> = {\n  filter: {},\n};\n\nexport const defaultSortOptions: Pick<TransactionsListOptions, 'sort'> = {};\n\nexport const defaultPaginationOptions: Pick<TransactionsListOptions, 'pagination'> = {\n  pagination: {\n    from: 0,\n    size: 10,\n  },\n};\n\nexport const defaultInitialListOptions: TransactionsListOptions = {\n  ...defaultAccountOptions,\n  ...defaultSearchOptions,\n  ...defaultFilterOptions,\n  ...defaultSortOptions,\n  ...defaultPaginationOptions,\n  onLoad: OnLoadAction.Replace,\n};\n\nexport const defaultInitialExportOptions: TransactionsExportOptions = {\n  ...defaultAccountOptions,\n  ...defaultSearchOptions,\n  ...defaultFilterOptions,\n  ...defaultSortOptions,\n  exportType: 'csv',\n  locale: 'en-US',\n};\n","import { TransactionsEnumValue } from './transactions-enum-value.model';\n\nexport interface TransactionsFilterOptions {\n  creditDebitIndicator?: TransactionsEnumValue;\n  types?: TransactionsEnumValue[] | TransactionsEnumValue;\n  billingStatus?: TransactionsEnumValue;\n  amount?: {\n    from?: number;\n    to?: number;\n  };\n  date?: {\n    from?: string;\n    to?: string;\n  };\n  categories?: string[];\n  checkSerialNumber?: {\n    from?: number;\n    to?: number;\n  };\n}\n/* eslint-disable no-redeclare*/\nexport namespace TransactionsFilterOptions {\n  export function isEmpty(options: TransactionsFilterOptions | object): boolean {\n    return Object.values(options)\n      .filter((value) => typeof value !== 'undefined')\n      .every((value) => !value || (typeof value === 'object' && isEmpty(value)));\n  }\n\n  // converts a Date object to `dddd-MM-yy` string format\n  // eslint-disable-next-line complexity\n  const formatDate = (date: Date) => {\n    const year = date.getFullYear().toString();\n    const month = (date.getMonth() + 1).toString();\n    const day = date.getDate().toString();\n\n    return `${year}-${month[1] ? month : '0' + month[0]}-${day[1] ? day : '0' + day[0]}`;\n  };\n\n  export function toHttpGetParams(options: TransactionsFilterOptions = {}) {\n    const params: any = {};\n\n    const setIfExists = (paramName: string, conditionFn: (option: any) => any, valueFn: (option: any) => any) => {\n      if (conditionFn(options)) {\n        params[paramName] = valueFn(options);\n      }\n    };\n\n    setIfExists(\n      'creditDebitIndicator',\n      (option) => option.creditDebitIndicator !== undefined && option.creditDebitIndicator.value !== undefined,\n      (option) => option.creditDebitIndicator.value,\n    );\n    setIfExists(\n      'types',\n      (option) => option.type !== undefined && option.type.value !== undefined,\n      (option) => (Array.isArray(option.type.value) ? option.type.value : [option.type.value]),\n    );\n    setIfExists(\n      'billingStatus',\n      (option) => option.billingStatus !== undefined && option.billingStatus.value !== undefined,\n      (option) => option.billingStatus.value,\n    );\n    setIfExists(\n      'amountGreaterThan',\n      (option) => option.amount && option.amount.from,\n      (option) => option.amount.from,\n    );\n    setIfExists(\n      'amountLessThan',\n      (option) => option.amount && option.amount.to,\n      (option) => option.amount.to,\n    );\n    setIfExists(\n      'bookingDateGreaterThan',\n      (option) => option.date && option.date.from && Object.keys(option.date.from).length,\n      (option) => formatDate(new Date(option.date.from)),\n    );\n    setIfExists(\n      'bookingDateLessThan',\n      (option) => option.date && option.date.to && Object.keys(option.date.to).length,\n      (option) => formatDate(new Date(option.date.to)),\n    );\n    setIfExists(\n      'fromCheckSerialNumber',\n      (option) => option.checkSerialNumber && option.checkSerialNumber.from,\n      (option) => option.checkSerialNumber.from,\n    );\n    setIfExists(\n      'toCheckSerialNumber',\n      (option) => option.checkSerialNumber && option.checkSerialNumber.to,\n      (option) => option.checkSerialNumber.to,\n    );\n\n    return params;\n  }\n  // eslint-disable-next-line complexity\n  export function fromHttpGetParams(params: any): TransactionsFilterOptions {\n    const options: TransactionsFilterOptions = {};\n\n    if (params.creditDebitIndicator) {\n      options.creditDebitIndicator = { value: params.creditDebitIndicator };\n    }\n\n    if (params.type) {\n      if (Array.isArray(params.type)) {\n        options.types = params.type.map((value: any) => ({ value }));\n      } else {\n        options.types = { value: params.type };\n      }\n    }\n\n    if (params.billingStatus) {\n      options.billingStatus = { value: params.billingStatus };\n    }\n\n    if (params.amountGreaterThan) {\n      options.amount = { from: parseInt(params.amountGreaterThan, 10) };\n    }\n\n    if (params.amountLessThan) {\n      options.amount = {\n        ...options.amount,\n        to: parseInt(params.amountLessThan, 10),\n      };\n    }\n\n    if (params.bookingDateGreaterThan) {\n      options.date = {\n        from: params.bookingDateGreaterThan,\n      };\n    }\n\n    if (params.bookingDateLessThan) {\n      options.date = {\n        ...options.date,\n        to: params.bookingDateLessThan,\n      };\n    }\n\n    if (params.fromCheckSerialNumber) {\n      options.checkSerialNumber = {\n        from: parseInt(params.fromCheckSerialNumber, 10),\n      };\n    }\n\n    if (params.toCheckSerialNumber) {\n      options.checkSerialNumber = {\n        ...options.checkSerialNumber,\n        to: parseInt(params.toCheckSerialNumber, 10),\n      };\n    }\n\n    return options;\n  }\n}\n/* eslint-enable no-redeclare*/\n","export type ProductKindName =\n  | 'Current Account'\n  | 'Savings Account'\n  | 'Credit Card'\n  | 'Loan'\n  | 'Term Deposit'\n  | 'Debit Card'\n  | 'Investment Account'\n  | string;\n\nexport type AvailableFiltersConfig = Record<ProductKindName, ProductKind>;\n\nexport enum AvailableFilterEnum {\n  CreditDebitIndicator = 'creditDebitIndicator',\n  Types = 'types',\n  BillingStatus = 'billingStatus',\n  Amount = 'amount',\n  Date = 'date',\n  Categories = 'categories',\n  CheckSerialNumber = 'checkSerialNumber',\n}\n\nexport type AvailableFilters = Array<AvailableFilterEnum>;\n\nexport type ProductKind = ProductType | AvailableFilters;\n\nexport interface ProductType {\n  [key: string]: AvailableFilters;\n}\n","import { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TransactionsEnumValue } from './model/transactions-enum-value.model';\nimport { TransactionsSortOptions } from './model/transactions-sort-options.model';\nimport { AvailableFilterEnum, AvailableFiltersConfig } from './model/available-filters.model';\n\n/**\n * Dropdown values for credit/debit indicator filter.\n */\nexport const creditDebitIndicatorEnumValues: Array<TransactionsEnumValue> = [\n  {\n    name: 'All',\n  },\n  {\n    value: 'CRDT',\n    name: 'Credit',\n  },\n  {\n    value: 'DBIT',\n    name: 'Debit',\n  },\n];\n\n/**\n * Fallback dropdown values for transaction type filter.\n */\nexport const defaultTransactionTypeEnumValues: Array<TransactionsEnumValue> = [\n  {\n    value: 'ATM',\n    name: 'ATM',\n  },\n  {\n    value: 'ACH',\n    name: 'Ach',\n  },\n  {\n    value: 'Bill Payment',\n    name: 'Bill Payment',\n  },\n  {\n    value: 'Cash',\n    name: 'Cash',\n  },\n  {\n    name: 'Cheques',\n    value: 'Cheques',\n  },\n  {\n    value: 'CreditDebit Card',\n    name: 'Credit/Debit Card',\n  },\n  {\n    value: 'Check',\n    name: 'Check',\n  },\n  {\n    value: 'Deposit',\n    name: 'Deposit',\n  },\n  {\n    value: 'Fee',\n    name: 'Fee',\n  },\n  {\n    value: 'POS',\n    name: 'POS',\n  },\n  {\n    value: 'Withdrawal',\n    name: 'Withdrawal',\n  },\n];\n\n/**\n * Fallback dropdown values for billing status filter.\n */\nexport const defaultBillingStatusEnumValues: Array<TransactionsEnumValue> = [\n  {\n    value: 'PENDING',\n    name: 'Pending',\n  },\n  {\n    value: 'BILLED',\n    name: 'Billed',\n  },\n  {\n    value: 'UNBILLED',\n    name: 'Unbilled',\n  },\n];\n\n/**\n * Name of different check images status\n */\nexport enum CheckImagesAvailability {\n  available = 'AVAILABLE',\n  unavailable = 'UNAVAILABLE',\n}\n\nexport enum BillingStatusEnum {\n  billed = 'BILLED',\n  unbilled = 'UNBILLED',\n  pending = 'PENDING',\n}\n\n/**\n * Name of response header that contains the total amount of results.\n */\nexport const totalCountHeader = 'X-Total-Count';\n/**\n * Name of response header that contains the available export types.\n */\nexport const availableExportTypes = 'X-Available-Export-Types';\nexport const unvailableExportTypesReasons = 'X-Unavailable-Export-Types-Reasons';\n/**\n * Name of response header that contains the sort configuration.\n */\nexport const sortFieldsDirectionHeader = 'X-Sort-Fields-Direction';\n\n/**\n * Notification time to live in ms.\n */\nexport const notificationTtl = 5000;\n\n/**\n * Which category level should be retrieved for category change modal list.\n */\nexport const categoryListLevelParam = 'PARENTS';\n\nexport const defaultAvailableFiltersConfig: AvailableFiltersConfig = {\n  'Current Account': [\n    AvailableFilterEnum.Date,\n    AvailableFilterEnum.CreditDebitIndicator,\n    AvailableFilterEnum.Amount,\n    AvailableFilterEnum.Types,\n    AvailableFilterEnum.BillingStatus,\n    AvailableFilterEnum.CheckSerialNumber,\n  ],\n  'Savings Account': [\n    AvailableFilterEnum.Date,\n    AvailableFilterEnum.CreditDebitIndicator,\n    AvailableFilterEnum.Amount,\n    AvailableFilterEnum.Types,\n    AvailableFilterEnum.BillingStatus,\n    AvailableFilterEnum.CheckSerialNumber,\n  ],\n  'Credit Card': [\n    AvailableFilterEnum.Date,\n    AvailableFilterEnum.CreditDebitIndicator,\n    AvailableFilterEnum.Amount,\n    AvailableFilterEnum.Types,\n    AvailableFilterEnum.BillingStatus,\n  ],\n  Loan: [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n  'Term Deposit': [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n  'Debit Card': [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n  'Investment Account': [\n    AvailableFilterEnum.Date,\n    AvailableFilterEnum.CreditDebitIndicator,\n    AvailableFilterEnum.Amount,\n  ],\n  defaultFilters: [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n};\n\nexport const deserialize = (propertyValue: string) => {\n  const params = propertyValue.split('&');\n\n  return params.reduce((acc: object, param: string) => {\n    const [key, val] = param.split('=');\n\n    return {\n      ...acc,\n      [decodeURIComponent(key)]: decodeURIComponent(val),\n    };\n  }, {});\n};\n\nexport const parseSortOptions = (propertyValue: string): TransactionsSortOptions | undefined => {\n  if (!propertyValue.length) {\n    return undefined;\n  }\n\n  const sortOption = propertyValue\n    .split(',')[0]\n    .trim()\n    .replace(/\\s{2,}/g, ' ');\n\n  const [orderBy, direction] = sortOption.split(' ');\n\n  if (!orderBy || (direction !== 'ASC' && direction !== 'DESC')) {\n    throw new Error(\n      `Invalid value for \"initialSortOptions\" property.\n      Please use \"<orderBy> <direction>\" format, e.g., \"bookingDate DESC\", or leave it empty.`,\n    );\n  }\n\n  return {\n    orderBy,\n    direction,\n  };\n};\n\nexport const filterInputParameters = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => inputVal ?? propVal));\n\nexport const b64Encode = (str: string) =>\n  btoa(\n    encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (_match, p1) {\n      return String.fromCharCode(parseInt(p1, 16));\n    }),\n  );\n\nexport const truncateDate = (date: Date) => new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\nexport const daysDiff = (date1: Date | string, date2: Date | string) => {\n  const diff = truncateDate(new Date(date1)).getTime() - truncateDate(new Date(date2)).getTime();\n\n  return Math.ceil(diff / (1000 * 3600 * 24));\n};\n","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { GetTransactionsRequestParams, TransactionItem } from '@backbase/data-ang/transactions';\n\nimport { Transaction } from './transaction.model';\nimport { TransactionsSortOptions } from './transactions-sort-options.model';\nimport {\n  sortFieldsDirectionHeader,\n  totalCountHeader,\n  availableExportTypes,\n  unvailableExportTypesReasons,\n  BillingStatusEnum,\n} from '../constants';\nimport { TransactionsExportOptions, UnavailableExportTypeReasons } from './transactions-export-options.model';\nimport { TransactionsListOptions } from './transactions-list-options.model';\nimport { TransactionsEnumValue } from './transactions-enum-value.model';\n\nexport interface TransactionsList {\n  items: Transaction[];\n  totalCount: number;\n  sort?: TransactionsSortOptions;\n  availableExportTypesHeader?: string;\n  httpResponseError?: HttpErrorResponse;\n  unavailableExportTypesReasonsHeader?: UnavailableExportTypeReasons;\n  initialRequest?: boolean;\n}\n/* eslint-disable no-redeclare*/\nexport namespace TransactionsList {\n  // eslint-disable-next-line complexity\n  const processTransaction = (transaction: Transaction) => {\n    const amountSign = transaction.creditDebitIndicator === 'DBIT' ? -1 : 1;\n    const formattedTransaction: Transaction = {\n      ...transaction,\n      isPending: (function isPending(data) {\n        let result = false;\n        if (data && data.billingStatus) {\n          const billingStatus = data.billingStatus.toUpperCase();\n          result = billingStatus === BillingStatusEnum.pending || billingStatus === BillingStatusEnum.unbilled;\n        }\n\n        return result;\n      })(transaction),\n      ...(transaction.merchant\n        ? {\n            merchant: {\n              id: transaction.merchant.id,\n              name: transaction.merchant.name,\n              ...(transaction.merchant.logo ? { logo: transaction.merchant.logo } : {}),\n              ...(transaction.merchant.website ? { website: transaction.merchant.website } : {}),\n            },\n          }\n        : {}),\n    };\n\n    if (transaction.transactionAmountCurrency) {\n      const amountNumber = parseFloat(transaction.transactionAmountCurrency.amount);\n\n      formattedTransaction.transactionAmountCurrency = {\n        ...transaction.transactionAmountCurrency,\n        unsignedAmount: amountNumber,\n        amount: (amountSign * (amountNumber || 0)).toString(),\n      };\n    }\n\n    if (transaction.instructedAmountCurrency) {\n      const amountNumber = parseFloat(transaction.instructedAmountCurrency.amount);\n\n      formattedTransaction.instructedAmountCurrency = {\n        ...transaction.instructedAmountCurrency,\n        unsignedAmount: amountNumber,\n        amount: (amountSign * (amountNumber || 0)).toString(),\n      };\n    }\n\n    formattedTransaction.currencyExchangeAvailability =\n      !!transaction.instructedAmountCurrency &&\n      !!transaction.transactionAmountCurrency &&\n      !!transaction.currencyExchangeRate;\n\n    return formattedTransaction;\n  };\n\n  const processTransactions = (transactionsList: TransactionsList) => ({\n    ...transactionsList,\n    items: transactionsList.items.map(processTransaction),\n  });\n\n  const processTotalCountHeader = (totalCount: string | null) => (totalCount ? parseInt(totalCount, 10) : 0);\n\n  const processAvailableExportTypes = (availableExports: string | null) => availableExports || '';\n\n  const processUnavailableExportTypesReasons = (unavilableExportTypesReasonsValue: string | null) =>\n    JSON.parse(unavilableExportTypesReasonsValue || '{}');\n\n  const processSortFieldsDirectionHeader = (\n    sortFieldsDirection: string | null,\n  ): TransactionsSortOptions | undefined => {\n    if (sortFieldsDirection === null || !sortFieldsDirection.length) {\n      return undefined;\n    }\n\n    const sortOption = sortFieldsDirection\n      .split(',')[0]\n      .trim()\n      .replace(/\\s{2,}/g, ' ');\n\n    const [orderBy, direction] = sortOption.split(' ');\n\n    if (!orderBy || (direction !== 'ASC' && direction !== 'DESC')) {\n      throw new Error(\n        `Invalid value for \"initialSortOptions\" property.\n        Please use \"<orderBy> <direction>\" format, e.g., \"bookingDate DESC\",\n        or leave it empty.`,\n      );\n    }\n\n    return {\n      orderBy,\n      direction,\n    };\n  };\n\n  function padValueWithZeros(value: number, size = 2) {\n    return (value + '').padStart(size, '0');\n  }\n\n  function formatDate(date: string | undefined) {\n    const safeDate = date || '';\n    if (/^[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}/.exec(safeDate)) {\n      const localDate = new Date(safeDate);\n      const month = padValueWithZeros(localDate.getMonth() + 1);\n      const day = padValueWithZeros(localDate.getDate());\n      const year = localDate.getFullYear();\n\n      return `${year}-${month}-${day}`;\n    } else if (date !== undefined) {\n      console.error(`invalid date provided ${date}`);\n    }\n\n    return undefined;\n  }\n\n  export const fromHttpResponse = (response: HttpResponse<TransactionItem[]>): TransactionsList => {\n    const totalCount = processTotalCountHeader(response.headers.get(totalCountHeader));\n    const sort = processSortFieldsDirectionHeader(response.headers.get(sortFieldsDirectionHeader));\n    const availableExportTypesHeader = processAvailableExportTypes(response.headers.get(availableExportTypes));\n    const unavailableExportTypesReasonsHeader = processUnavailableExportTypesReasons(\n      response.headers.get(unvailableExportTypesReasons),\n    );\n\n    return processTransactions({\n      items: (response.body as Transaction[]) || [],\n      totalCount,\n      ...(sort ? { sort } : {}),\n      availableExportTypesHeader,\n      unavailableExportTypesReasonsHeader,\n    });\n  };\n\n  export const concat = (transactionsList1: TransactionsList, transactionsList2: TransactionsList) => {\n    if (transactionsList2.httpResponseError) {\n      return {\n        ...transactionsList1,\n        items: [...transactionsList1.items],\n        httpResponseError: transactionsList2.httpResponseError,\n      };\n    }\n\n    return {\n      items: [...transactionsList1.items, ...transactionsList2.items],\n      totalCount: transactionsList1.totalCount,\n      ...(transactionsList2.sort ? { sort: transactionsList2.sort } : {}),\n      ...(transactionsList2.availableExportTypesHeader\n        ? { availableExportTypesHeader: transactionsList2.availableExportTypesHeader }\n        : {}),\n      ...(transactionsList2.unavailableExportTypesReasonsHeader\n        ? { unavailableExportTypesReasonsHeader: transactionsList2.unavailableExportTypesReasonsHeader }\n        : {}),\n      httpResponseError: transactionsList2.httpResponseError,\n    };\n  };\n\n  export const hasLoadedAll = (transactionsList: TransactionsList) =>\n    transactionsList.items.length === transactionsList.totalCount;\n\n  export const toHttpRequest = (\n    listOptions: TransactionsListOptions | TransactionsExportOptions,\n  ): GetTransactionsRequestParams => {\n    const turnIntoArrayObject = (value: any, name: any, fn: (param: any) => any) => {\n      if (!value) {\n        return {};\n      }\n\n      return Array.isArray(value) ? { [name]: fn(value) } : { [name]: [fn(value)] };\n    };\n\n    const optionalItem = <T>(name: string, value: T) => (value !== undefined ? { [name]: value } : {});\n\n    const isTransactionListOption = (data: any): data is TransactionsListOptions =>\n      Object.prototype.hasOwnProperty.call(data, 'pagination');\n\n    const isTransactionExportOptions = (data: any): data is TransactionsExportOptions =>\n      Object.prototype.hasOwnProperty.call(data, 'exportType');\n\n    return {\n      ...turnIntoArrayObject(listOptions.account.arrangementId, 'arrangementsIds', (value) => value),\n      ...optionalItem('query', listOptions.search?.query),\n      ...optionalItem('amountGreaterThan', listOptions.filter?.amount?.from),\n      ...optionalItem('amountLessThan', listOptions.filter?.amount?.to),\n      ...optionalItem(\n        'bookingDateGreaterThan',\n        listOptions.filter?.date?.from === '' ? undefined : formatDate(listOptions.filter?.date?.from),\n      ),\n      ...optionalItem(\n        'bookingDateLessThan',\n        listOptions.filter?.date?.to === '' ? undefined : formatDate(listOptions.filter?.date?.to),\n      ),\n      ...optionalItem('categories', listOptions.filter?.categories),\n      ...optionalItem('fromCheckSerialNumber', listOptions.filter?.checkSerialNumber?.from),\n      ...optionalItem('toCheckSerialNumber', listOptions.filter?.checkSerialNumber?.to),\n      ...optionalItem('orderBy', listOptions.sort?.orderBy),\n      ...optionalItem('direction', listOptions.sort?.direction),\n      ...optionalItem('state', isTransactionListOption(listOptions) ? listOptions.state : undefined),\n      ...optionalItem('from', isTransactionListOption(listOptions) ? listOptions.pagination?.from : undefined),\n      ...optionalItem('size', isTransactionListOption(listOptions) ? listOptions.pagination?.size : undefined),\n      ...optionalItem('billingStatus', listOptions.filter?.billingStatus?.value),\n      ...optionalItem('creditDebitIndicator', listOptions.filter?.creditDebitIndicator?.value),\n      ...optionalItem('exportType', isTransactionExportOptions(listOptions) ? listOptions.exportType : undefined),\n      ...optionalItem('locale', isTransactionExportOptions(listOptions) ? listOptions.locale : undefined),\n      ...turnIntoArrayObject(listOptions.filter?.types, 'types', (value: TransactionsEnumValue) => value.value),\n    };\n  };\n}\n/* eslint-enable no-redeclare*/\n","import { HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { switchMap, publishReplay, refCount } from 'rxjs/operators';\nimport { TransactionsListOptions, OnLoadAction } from './transactions-list-options.model';\nimport { TransactionsList } from './transactions-list.model';\n\nexport const deepEqual = (x: any, y: any): boolean => {\n  const ok = Object.keys;\n  const tx = typeof x;\n  const ty = typeof y;\n\n  return x && y && tx === 'object' && tx === ty\n    ? ok(x).length === ok(y).length && ok(x).every((key) => deepEqual(x[key], y[key]))\n    : x === y;\n};\n\nexport const cacheRequest =\n  <Params, Result>(request: (params: Params) => Observable<Result>) =>\n  (source: Observable<Params>): Observable<Result> =>\n    source.pipe(switchMap(request), publishReplay(1), refCount());\n\nexport const multipleAccountsPredicate = (listOptions: TransactionsListOptions) => () =>\n  Array.isArray(listOptions.account.arrangementId);\n\nexport const onLoadTransactions = (\n  acc: TransactionsList,\n  curr: { transactionsList: TransactionsList; onLoad: OnLoadAction },\n) =>\n  curr.onLoad === OnLoadAction.Append ? TransactionsList.concat(acc, curr.transactionsList) : curr.transactionsList;\n\nexport const getNameFromContentDispositionHeader = (response: HttpResponse<Blob>) => {\n  const contentDisposition = response.headers.get('Content-Disposition');\n  let fileName = '';\n  if (contentDisposition) {\n    const result = /filename[^;=\\n]*=(?:(\\\\?['\"])(.*?)\\1|(?:[^\\s]+'.*?')?([^;\\n]*))/i.exec(contentDisposition);\n    fileName = result ? result[2] : '';\n  }\n\n  return fileName;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { defer, Observable, of } from 'rxjs';\nimport { catchError, map, publishReplay, refCount } from 'rxjs/operators';\nimport { deserialize, parseSortOptions } from '../constants';\n\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\n\nconst WidgetProperties = {\n  pageSize: 'bb.transaction.pageSize',\n  maxNavPages: 'bb.transaction.maxNavPages',\n  paginationType: 'bb.transaction.paginationType',\n  initialFilterOptions: 'bb.transaction.initialFilterOptions',\n  initialSortOptions: 'bb.transaction.initialSortOptions',\n  showControls: 'bb.transaction.showControls',\n  showChangeCategory: 'bb.transaction.showChangeCategory',\n  refreshTransactionsListEvents: 'event.refreshTransactionsList',\n  showPendingTransactionsOnTop: 'bb.transaction.showPendingTransactionsOnTop',\n  showCheckImage: 'bb.transaction.showCheckImage',\n  gmapsAPIKey: 'bb.transaction.gmapsAPIKey',\n  showManageNotes: 'bb.transaction.showManageNotes',\n  getOrPostEndpoints: 'bb.transaction.getOrPostEndpoints',\n  disputeByBillingStatus: 'disputeByBillingStatus',\n  disputeEligibilityDays: 'disputeEligibilityDays',\n  disputeTransactionTypes: 'disputeTransactionTypes',\n  enableDisputeAndInquiry: 'enableDisputeAndInquiry',\n  inquireTopicId: 'inquireTopicId',\n  disputeTopicId: 'disputeTopicId',\n};\n\nexport const defaultPageSize = 10;\n\nexport const defaultMaxNavPage = 3;\n\nexport const defaultInitialFilterOptions = '';\n\nexport const defaultInitialSortOptions = '';\n\nexport enum PaginationType {\n  LOAD_MORE = 'load-more',\n  PAGINATION = 'pagination',\n  INFINITE_SCROLL = 'infinite-scroll',\n}\n\nexport enum EndpointType {\n  GET_REQUEST = 'get-request',\n  POST_REQUEST = 'post-request',\n}\n\nconst defaultModelObservable = <T>(value: T): Observable<T> =>\n  defer(() => of(value)).pipe(publishReplay(1), refCount());\n\n@Injectable()\nexport class WidgetPropertiesService {\n  get pageSize(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(defaultPageSize);\n    }\n\n    return this.itemModel.property(WidgetProperties.pageSize).pipe(\n      map((propertyValue) => parseInt(propertyValue as string, 10)),\n      map((pageSize) => (pageSize > 0 ? pageSize : defaultPageSize)),\n    );\n  }\n\n  get maxNavPages(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(defaultMaxNavPage);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.maxNavPages)\n      .pipe(map((propertyValue) => parseInt(propertyValue as string, 10)));\n  }\n\n  get paginationType(): Observable<PaginationType> {\n    if (!this.itemModel) {\n      return defaultModelObservable(PaginationType.LOAD_MORE);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.paginationType)\n      .pipe(map((propertyValue) => propertyValue as PaginationType));\n  }\n\n  get initialFilterOptions(): Observable<TransactionsFilterOptions> {\n    if (!this.itemModel) {\n      return defaultModelObservable({});\n    }\n\n    return this.itemModel.property(WidgetProperties.initialFilterOptions, defaultInitialFilterOptions).pipe(\n      map(deserialize),\n      map((params) => TransactionsFilterOptions.fromHttpGetParams(params)),\n    );\n  }\n\n  get initialSortOptions(): Observable<TransactionsSortOptions | undefined> {\n    if (!this.itemModel) {\n      return defaultModelObservable(parseSortOptions(defaultInitialSortOptions));\n    }\n\n    return this.itemModel.property(WidgetProperties.initialSortOptions, defaultInitialSortOptions).pipe(\n      map(parseSortOptions),\n      catchError((err: string) => {\n        console.warn(`initialSortOptions property ignored: ${err}`);\n\n        return of(undefined);\n      }),\n    );\n  }\n\n  get showControls(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showControls)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get showChangeCategory(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showChangeCategory)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get refreshTransactionsListEvents(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable('');\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.refreshTransactionsListEvents)\n      .pipe(map((propertyValue) => propertyValue as string));\n  }\n\n  get showPendingTransactionsOnTop(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(false);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showPendingTransactionsOnTop)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get showCheckImage(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showCheckImage)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get showManageNotes(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showManageNotes)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get getOrPostEndpoints(): Observable<EndpointType> {\n    if (!this.itemModel) {\n      return defaultModelObservable(EndpointType.POST_REQUEST);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.getOrPostEndpoints)\n      .pipe(map((propertyValue) => propertyValue as EndpointType));\n  }\n\n  get gmapsAPIKey(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable('');\n    }\n\n    return this.itemModel.property(WidgetProperties.gmapsAPIKey).pipe(map((propertyValue) => propertyValue as string));\n  }\n\n  get disputeByBillingStatus(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.disputeByBillingStatus)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get disputeEligibilityDays(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(120);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.disputeEligibilityDays, '120')\n      .pipe(map((propertyValue) => parseInt(propertyValue as string, 10)));\n  }\n\n  get disputeTransactionTypes(): Observable<Array<string>> {\n    if (!this.itemModel) {\n      return defaultModelObservable(['Credit/Debit Card']);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.disputeTransactionTypes, 'Credit/Debit Card')\n      .pipe(map((propertyValue) => (propertyValue as string).split(',')));\n  }\n\n  get enableDisputeAndInquiry(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(false);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.enableDisputeAndInquiry)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get inquireTopicId(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable('');\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.inquireTopicId)\n      .pipe(map((propertyValue) => propertyValue as string));\n  }\n\n  get disputeTopicId(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable('');\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.disputeTopicId)\n      .pipe(map((propertyValue) => propertyValue as string));\n  }\n\n  constructor(@Optional() private readonly itemModel?: ItemModel) {}\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { Account } from './account.model';\n\nexport function fromArrangementsResponse(response: HttpResponse<ProductSummaryItem[]>): Account[] {\n  return (response.body || []).map((item: ProductSummaryItem) => ({\n    id: item.id,\n    name: item.name,\n    displayName: item.displayName,\n    alias: item.bankAlias,\n    IBAN: item.IBAN,\n    BBAN: item.BBAN,\n    currency: item.currency,\n  }));\n}\n","import { Injectable } from '@angular/core';\n\nimport { ProductSummaryHttpService, ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { Account } from '../model/account.model';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { fromArrangementsResponse } from '../model/account-list.model';\n\n@Injectable()\nexport class AccountsService {\n  constructor(protected readonly productSummaryDataHttpService: ProductSummaryHttpService) {}\n\n  getAllArrangements(): Observable<Account[]> {\n    return this.productSummaryDataHttpService\n      .getArrangementsByBusinessFunction(\n        {\n          businessFunction: 'Product Summary',\n          resourceName: 'Product Summary',\n          privilege: 'view',\n          size: 1000000,\n        },\n        'response',\n      )\n      .pipe(map(fromArrangementsResponse));\n  }\n\n  getProductSummary(): Observable<ProductSummaryItem[]> {\n    return this.productSummaryDataHttpService.getArrangementsByBusinessFunction(\n      {\n        businessFunction: 'Product Summary',\n        resourceName: 'Product Summary',\n        privilege: 'view',\n        size: 1000000,\n      },\n      'body',\n    );\n  }\n}\n","import { Inject, Injectable, InjectionToken, LOCALE_ID, OnDestroy } from '@angular/core';\nimport {\n  GetTransactionsExportWithPostRequestParams,\n  GetTransactionsWithPostRequestParams,\n  TransactionClientHttpService,\n  TransactionItem,\n} from '@backbase/data-ang/transactions';\nimport { BehaviorSubject, combineLatest, iif, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { catchError, distinctUntilChanged, filter, first, map, scan, switchMap, tap } from 'rxjs/operators';\nimport {\n  defaultFilterOptions,\n  defaultInitialExportOptions,\n  defaultInitialListOptions,\n  defaultPaginationOptions,\n  defaultSearchOptions,\n  OnLoadAction,\n  TransactionsListOptions,\n  TransactionState,\n} from '../model/transactions-list-options.model';\nimport { TransactionsExportOptions } from '../model/transactions-export-options.model';\nimport { TransactionsSearchOptions } from '../model/transactions-search-options.model';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsList } from '../model/transactions-list.model';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\nimport { AccountsService } from './accounts.service';\nimport { Account } from '../model/account.model';\nimport {\n  cacheRequest,\n  deepEqual,\n  multipleAccountsPredicate,\n  onLoadTransactions,\n} from '../model/transactions-list-utils.model';\nimport { HttpResponse } from '@angular/common/http';\nimport { EndpointType } from './widget-properties.service';\nimport { DeprecationsService } from '@backbase/foundation-ang/core';\n\nexport enum LoadingState {\n  NotLoaded = 'NotLoaded',\n  LoadingMore = 'LoadingMore',\n  LoadingPage = 'LoadingPage',\n  Loading = 'Loading',\n  Loaded = 'Loaded',\n}\n\nexport const showDetailsConfigToken = new InjectionToken<boolean>('shows the transactions details modal');\n\n@Injectable()\nexport class TransactionsService implements OnDestroy {\n  private readonly selectedAccount = new ReplaySubject<string[]>(1);\n  private readonly pageSize = new ReplaySubject<number>(1);\n  private readonly initialListOptions = new ReplaySubject<Partial<TransactionsListOptions>>(1);\n  private readonly options = new BehaviorSubject<Partial<TransactionsListOptions>>({});\n  private readonly listRefresh = new Subject<TransactionsListOptions>();\n  private readonly listOptions = new BehaviorSubject<TransactionsListOptions>(defaultInitialListOptions);\n  private readonly exportOptions = new BehaviorSubject<TransactionsExportOptions>(defaultInitialExportOptions);\n  private readonly showPendingTransactionsOnTop = new ReplaySubject<boolean>(1);\n  private readonly getOrPostEndpoint = new BehaviorSubject<EndpointType>(EndpointType.GET_REQUEST);\n  private readonly transactionsList: Observable<TransactionsList> = merge(\n    this.listOptions.pipe(\n      filter((listOptions) => typeof listOptions.account.arrangementId !== 'undefined'),\n      distinctUntilChanged(deepEqual),\n    ),\n    this.listRefresh,\n  ).pipe(\n    cacheRequest((listOptions) => {\n      this.loadingState.next(\n        listOptions.onLoad === OnLoadAction.Append\n          ? LoadingState.LoadingMore\n          : listOptions.onLoad === OnLoadAction.ReplacePage\n          ? LoadingState.LoadingPage\n          : LoadingState.Loading,\n      );\n\n      return combineLatest([\n        this.loadTransactions(listOptions).pipe(\n          tap(() => {\n            this.loadingState.next(LoadingState.Loaded);\n          }),\n          map((transactionsList) => ({ transactionsList, onLoad: listOptions.onLoad })),\n        ),\n        iif(\n          multipleAccountsPredicate(listOptions),\n          this.accountService.getAllArrangements().pipe(\n            map((accounts) => {\n              const accountMap = new Map<string, Account>();\n              accounts.forEach((account) => {\n                accountMap.set(account.id, account);\n              });\n\n              return accountMap;\n            }),\n          ),\n          of(new Map()),\n        ),\n        this.isFilterApplied,\n        this.isSearchApplied,\n      ]).pipe(\n        map(([transactions, accountMap, isFilterApplied, isSearchApplied]) => {\n          transactions.transactionsList.items = transactions.transactionsList.items.map((transaction) => ({\n            ...transaction,\n            account: accountMap.get(transaction.arrangementId || ''),\n          }));\n          transactions.transactionsList.initialRequest = !(isFilterApplied || isSearchApplied);\n\n          return transactions;\n        }),\n      );\n    }),\n    scan(onLoadTransactions, { items: [], totalCount: 0 }),\n  );\n\n  public readonly loadingState = new BehaviorSubject<LoadingState>(LoadingState.NotLoaded);\n\n  public readonly isFilterApplied = this.listOptions.pipe(\n    map((options) => !TransactionsFilterOptions.isEmpty(options.filter || {})),\n  );\n\n  public readonly isSearchApplied = this.listOptions.pipe(\n    map((options) => !TransactionsFilterOptions.isEmpty(options.search || {})),\n  );\n\n  private loadTransactions(listOptions: TransactionsListOptions): Observable<TransactionsList> {\n    const transactionPayload = TransactionsList.toHttpRequest(listOptions);\n    let transactionsResponse: Observable<HttpResponse<Array<TransactionItem>>> | undefined;\n\n    if (this.isUsingPostEndpoints) {\n      transactionsResponse = this.transactionsDataHttpService.getTransactionsWithPost(\n        { transactionListRequest: transactionPayload } as GetTransactionsWithPostRequestParams,\n        'response',\n      );\n    } else {\n      this.deprecationsService.logDeprecatedFeature(\n        '[TransactionsService: loadTransactions] GET endpoints deprecated. Please use POST endpoints by changing CXP configuration',\n      );\n      transactionsResponse = this.transactionsDataHttpService.getTransactions(transactionPayload, 'response');\n    }\n\n    return transactionsResponse.pipe(\n      map(TransactionsList.fromHttpResponse),\n      catchError((err) =>\n        of({\n          items: [],\n          totalCount: 0,\n          httpResponseError: err,\n        }),\n      ),\n    );\n  }\n\n  private exportTransactions(exportOptions: TransactionsExportOptions): Observable<HttpResponse<Blob>> {\n    const exportPayload = TransactionsList.toHttpRequest({\n      ...exportOptions,\n      locale: this.locale,\n    });\n\n    if (this.isUsingPostEndpoints) {\n      return this.transactionsDataHttpService.getTransactionsExportWithPost(\n        { transactionListRequest: exportPayload } as GetTransactionsExportWithPostRequestParams,\n        'response',\n      );\n    } else {\n      this.deprecationsService.logDeprecatedFeature(\n        '[TransactionsService: exportTransactions] GET endpoints deprecated. Please use POST endpoints by changing CXP configuration',\n      );\n\n      return this.transactionsDataHttpService.getTransactionsExport(exportPayload, 'response');\n    }\n  }\n\n  search(query: string) {\n    const searchOptions: TransactionsSearchOptions = {\n      query,\n    };\n\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultSearchOptions,\n      pagination: paginationOptions,\n      search: searchOptions,\n      onLoad: OnLoadAction.Replace,\n    });\n  }\n\n  clearSearch() {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultSearchOptions,\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.Replace,\n    });\n  }\n\n  filter(filterOptions: TransactionsFilterOptions) {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultFilterOptions,\n      pagination: paginationOptions,\n      filter: { ...filterOptions },\n      onLoad: OnLoadAction.Replace,\n    });\n  }\n\n  clearFilter() {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultFilterOptions,\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.Replace,\n    });\n  }\n\n  exportToType(type: string) {\n    return this.exportOptions.pipe(\n      first(),\n      switchMap((exportOptions: TransactionsExportOptions) =>\n        this.exportTransactions({\n          ...exportOptions,\n          exportType: type,\n        }),\n      ),\n    );\n  }\n\n  loadMore() {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    const paginationOptions = {\n      ...currentPaginationOptions,\n      from: currentPaginationOptions.from + 1,\n    };\n\n    this.options.next({\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.Append,\n    });\n  }\n\n  sort(sortOptions: TransactionsSortOptions) {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    this.options.next({\n      sort: { ...sortOptions },\n      pagination: {\n        ...currentPaginationOptions,\n        from: 0,\n      },\n      onLoad: OnLoadAction.ReplacePage,\n    });\n  }\n\n  pageChange(page: number) {\n    const paginationOptions = {\n      ...defaultPaginationOptions.pagination,\n      ...this.options.getValue().pagination,\n      from: page,\n    };\n\n    this.options.next({\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.ReplacePage,\n    });\n  }\n\n  getTransactionsFrom(\n    selectedAccount: Observable<string[]>,\n    pageSize: Observable<number>,\n    initialListOptions: Observable<Partial<TransactionsListOptions>> = of({}),\n    showPendingTransactionsOnTop: Observable<boolean> = of(false),\n    getOrPostEndpoint: Observable<EndpointType> = of(EndpointType.GET_REQUEST),\n  ) {\n    selectedAccount.subscribe(this.selectedAccount);\n    pageSize.subscribe(this.pageSize);\n    initialListOptions.subscribe(this.initialListOptions);\n    showPendingTransactionsOnTop.subscribe(this.showPendingTransactionsOnTop);\n    getOrPostEndpoint.subscribe(this.getOrPostEndpoint);\n  }\n\n  getCurrentPage() {\n    return this.listOptions.pipe(map((options) => (options.pagination || defaultPaginationOptions.pagination).from));\n  }\n\n  getTransactionsList() {\n    return this.transactionsList;\n  }\n\n  retryFiltering() {\n    this.listRefresh.next(this.listOptions.getValue());\n  }\n\n  refreshTransactions() {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    const paginationOptions = {\n      ...currentPaginationOptions,\n      from: 0,\n    };\n\n    const newOptions = {\n      ...this.listOptions.getValue(),\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.ReplacePage,\n    };\n\n    if (deepEqual(newOptions, this.listOptions.getValue())) {\n      this.listRefresh.next(this.listOptions.getValue());\n    } else {\n      this.options.next({\n        pagination: paginationOptions,\n        onLoad: OnLoadAction.ReplacePage,\n      });\n    }\n  }\n\n  private get isUsingPostEndpoints() {\n    return this.getOrPostEndpoint.getValue() === EndpointType.POST_REQUEST;\n  }\n\n  ngOnDestroy() {\n    this.listRefresh.complete();\n    this.selectedAccount.complete();\n    this.pageSize.complete();\n    this.initialListOptions.complete();\n    this.options.complete();\n    this.listOptions.complete();\n    this.exportOptions.complete();\n    this.showPendingTransactionsOnTop.complete();\n    this.loadingState.complete();\n    this.getOrPostEndpoint.complete();\n  }\n\n  constructor(\n    private readonly transactionsDataHttpService: TransactionClientHttpService,\n    private readonly accountService: AccountsService,\n    private readonly deprecationsService: DeprecationsService,\n    @Inject(LOCALE_ID) private readonly locale: string,\n  ) {\n    // Base this.options on this.selectedAccount, this.pageSize, this.initialListOptions\n    combineLatest([this.selectedAccount, this.pageSize, this.initialListOptions, this.showPendingTransactionsOnTop])\n      .pipe(\n        map(([selectedAccount, pageSize, initialListOptions, showPendingTransactionsOnTop]) => ({\n          ...(showPendingTransactionsOnTop ? { state: TransactionState.completed } : {}),\n          account: {\n            arrangementId: selectedAccount,\n          },\n          pagination: {\n            from: 0,\n            size: pageSize,\n          },\n          onLoad: OnLoadAction.Replace,\n          ...initialListOptions,\n        })),\n      )\n      .subscribe(this.options);\n\n    // Base this.listOptions on this.options\n    this.options\n      .pipe(scan((acc: any, curr) => Object.assign({}, acc, curr), defaultInitialListOptions))\n      .subscribe(this.listOptions);\n\n    // Base this.exportOptions on this.listOptions\n    this.listOptions\n      .pipe(\n        filter((listOptions) => typeof listOptions.account.arrangementId !== 'undefined'),\n        map((params) => ({\n          ...params,\n          pagination: undefined,\n          state: undefined,\n          exportType: 'csv',\n          locale: 'en-US',\n        })),\n      )\n      .subscribe(this.exportOptions);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Directive, Input } from '@angular/core';\nimport { LoadingState } from '../../services/transactions.service';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-transactions-number-of-results-found',\n  templateUrl: 'transactions-number-of-results-found.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsNumberOfResultsFoundComponent {\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * Number of results found after filtering or searching.\n   */\n  @Input() numberOfResultsFound = 0;\n  /**\n   * The loading state of the transactions list.\n   */\n  @Input() loadingState: LoadingState = LoadingState.NotLoaded;\n  /**\n   * Whether filter is applied or not.\n   */\n  @Input() isFilterApplied = false;\n  /**\n   * Whether search is applied or not.\n   */\n  @Input() isSearchApplied = false;\n\n  /**\n   * Whether loading has finished or not.\n   */\n  get isLoaded(): boolean {\n    return this.loadingState === LoadingState.Loaded;\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsNumberOfResultsFoundCustomizable]',\n})\nexport class TransactionsNumberOfResultsFoundCustomizableDirective extends BbTemplate<\n  TransactionsNumberOfResultsFoundComponent,\n  undefined\n> {}\n","<ng-container\n  bbTransactionsNumberOfResultsFoundCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n\n<ng-template bbTransactionsNumberOfResultsFoundCustomizable let-hostRef>\n  <div\n    class=\"bb-card__header bb-subtitle\"\n    [ngClass]=\"{ 'sr-only': hostRef.numberOfResultsFound <= 0 }\"\n    i18n=\"Number of results found for the applied filter@@transactions.list.numberOfResultsFound\"\n    *ngIf=\"hostRef.isLoaded && (hostRef.isFilterApplied || hostRef.isSearchApplied)\"\n    aria-live=\"assertive\"\n  >\n    {hostRef.numberOfResultsFound, plural, =0 {No results} =1 {1 result} other {{{ hostRef.numberOfResultsFound }} results}} found\n  </div>\n</ng-template>","import { HttpResponse } from '@angular/common/http';\nimport { TransactionCheckImagesResponse, TransactionCheckImagesItem } from '@backbase/data-ang/transactions';\n\nexport enum TransactionsCheckImageType {\n  PNG = 'image/png',\n  JPEG = 'image/jpeg',\n}\n\nexport enum TransactionsCheckImageSide {\n  FRONT = 'FRONT',\n  BACK = 'BACK',\n}\n\nexport interface TransactionsCheckImage {\n  side: TransactionsCheckImageSide;\n  mimeType: TransactionsCheckImageType;\n  content: string;\n}\n\nexport interface TransactionCheckImageResponse {\n  images: TransactionsCheckImage[];\n}\n\nexport namespace TransactionsCheckImages {\n  function processImages(imageObject: TransactionCheckImagesItem): TransactionsCheckImage {\n    return {\n      side: imageObject.side as TransactionsCheckImageSide,\n      mimeType: imageObject.mimeType as TransactionsCheckImageType,\n      content: imageObject.content,\n    };\n  }\n\n  export function fromHttpResponse(\n    response: HttpResponse<TransactionCheckImagesResponse>,\n  ): TransactionCheckImageResponse {\n    const imagesArray = (response.body && response.body.images) || [];\n    const mappedImages = imagesArray.map(processImages);\n\n    return {\n      images: mappedImages,\n    };\n  }\n}\n","export enum TransactionsDetailsLoadingState {\n  error = -1,\n  serverError = -2,\n  badRequestError = -3,\n  notFoundError = -4,\n  loading = 0,\n  done = 1,\n  notLoaded = 2,\n  notStarted = 3,\n}\n\nexport enum DisputeStatusEnum {\n  Refunded = 'REFUNDED',\n  Undisputed = 'UNDISPUTED',\n  Pending = 'PENDING',\n  Rejected = 'REJECTED',\n}\n\nexport type TransactionsDetailsLoadingType =\n  | 'checkImages'\n  | 'geolocation'\n  | 'enableDisputeAndInquiry'\n  | 'disputeOption'\n  | 'batchOrder';\n\nexport type TransactionsDetailsLoading = Partial<\n  Record<TransactionsDetailsLoadingType, TransactionsDetailsLoadingState>\n>;\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbAccessibilityKeyboard]',\n})\nexport class AccessibilityKeyboardDirective {\n  constructor(readonly element: ElementRef) {\n    element.nativeElement.tabIndex = 0;\n  }\n\n  // eslint-disable-next-line\n  @HostListener('keydown.enter', ['$event'])\n  // eslint-disable-next-line\n  @HostListener('keydown.space', ['$event'])\n  eventListener(event: any) {\n    this.element.nativeElement.click(event);\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Transaction } from '../../model/transaction.model';\nimport { TransactionsCheckImage } from '../../model/transactions-check-images.model';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'bb-transaction-check-image-item',\n  templateUrl: 'transaction-check-image-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionCheckImageItemComponent {\n  @Input() image: TransactionsCheckImage | undefined;\n  @Input() transaction: Transaction | undefined;\n  @Input() sideText = '';\n  @Input() imageAlt = '';\n\n  @Output() selectImage = new EventEmitter<void>();\n\n  get imageFileName() {\n    const fileType = this.image ? this.image.mimeType.replace('image/', '') : '';\n    const side = this.image ? this.image.side : '';\n\n    return `${this.imageCheckNumber}-${side}.${fileType}`;\n  }\n\n  get formatedImageSource() {\n    const mimeType = this.image ? this.image.mimeType : '';\n    const content = this.image ? this.image.content : '';\n\n    return `data:${mimeType};base64,${content}`;\n  }\n\n  private get imageCheckNumber() {\n    return this.transaction && this.transaction.checkSerialNumber;\n  }\n\n  createImageSource() {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(this.formatedImageSource);\n  }\n\n  toggleDocumentViewer() {\n    this.selectImage.emit();\n  }\n\n  constructor(private readonly sanitizer: DomSanitizer) {}\n}\n","<ng-container>\n  <span>{{sideText}}</span>\n  <div\n    role=\"img\"\n    data-role=\"check-image-item\"\n    class=\"bb-check-img-container\" \n    (click)=\"!!image && toggleDocumentViewer()\" \n    attr.aria-label=\"{{sideText}} image container\"\n    i18n-aria-label=\"Image container for front or back check image@@transaction-check-image-item.aria-label.image-container\"\n    bbAccessibilityKeyboard\n  >\n    <ng-container *ngIf=\"!!image else noImage\">\n      <div class=\"bb-check-img-container-state\">\n        <div class=\"bb-check-img-container-state__container\">\n          <bb-icon-ui \n            name=\"remove-red-eye\" \n            size=\"lg\" \n            color=\"white\"\n            aria-label=\"Expand Image\"\n            i18n-aria-label=\"Expand image@@transaction-check-image-item.aria-label.expand-icon\"\n          ></bb-icon-ui>\n        </div>\n      </div>\n      <img class=\"bb-check-img-container__img\" alt={{imageAlt}} [src]=\"createImageSource()\">\n    </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #noImage>\n  <div class=\"bb-check-no-img\">\n    <div class=\"bb-check-no-img__icon\">\n      <bb-icon-ui\n        name=\"broken-image\" \n        size=\"lg\"\n        aria-label=\"No image\"\n        i18n-aria-label=\"No image@@transaction-check-image-item.aria-label.no-image-icon\"\n      ></bb-icon-ui>\n    </div>\n  </div>\n</ng-template>","export const DOCUMENT_LOAD_DELAY_MS = 400;\n\nimport { Observable } from 'rxjs';\n\nexport type Styles = { [key in string]: string };\n\nexport enum DocumentViewerType {\n  JPEG = 'image/jpeg',\n  JPG = 'image/jpg',\n  PNG = 'image/png',\n  WEBP = 'image/webp',\n  GIF = 'image/gif',\n  BMP = 'image/bmp',\n}\n\nexport interface DocumentRefSrc {\n  filename: string;\n  filetype: DocumentViewerType;\n  src: Observable<string>;\n}\n\nexport interface DocumentViewerOptions {\n  container?: {\n    styles?: Styles;\n  };\n  scale?: number;\n}\n\nexport interface NavigationState {\n  currIdx: number;\n  total: number;\n}\n\nexport const isDocumentViewerType = (type: string): type is DocumentViewerType =>\n  Object.values(DocumentViewerType).includes(type as DocumentViewerType);\n\nexport const downloadFile = (url: string, fileName: string) => {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = `${fileName}`;\n  link.click();\n};\n\nexport enum KEY_CODES {\n  UP = 'ArrowUp',\n  DOWN = 'ArrowDown',\n  ENTER = 'Enter',\n  SPACE = ' ',\n  TAB = 'Tab',\n  BACKSPACE = 'Backspace',\n  DELETE = 'Delete',\n  ESCAPE = 'Escape',\n  X = 'x',\n  V = 'v',\n  LEFT = 'ArrowLeft',\n  RIGHT = 'ArrowRight',\n}\n\nconst KEY_CODE_TO_CODE = {\n  9: KEY_CODES.TAB,\n  38: KEY_CODES.UP,\n  40: KEY_CODES.DOWN,\n  32: KEY_CODES.SPACE,\n  13: KEY_CODES.ENTER,\n  46: KEY_CODES.DELETE,\n  8: KEY_CODES.BACKSPACE,\n  27: KEY_CODES.ESCAPE,\n  88: KEY_CODES.X,\n  86: KEY_CODES.V,\n} as any;\n\nfunction browserIsMsie() {\n  return navigator.userAgent.indexOf('MSIE') > -1 || navigator.userAgent.indexOf('Trident/') > -1;\n}\n\nexport function getKeyCode(event: KeyboardEvent): KEY_CODES {\n  // NOTE: detect IE\n  if (browserIsMsie()) {\n    return KEY_CODE_TO_CODE[event.keyCode] as KEY_CODES;\n  }\n\n  return event.code as KEY_CODES;\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { DocumentViewerOptions, Styles } from '../../../model/UI/document-viewer-commons';\n\n@Component({\n  selector: 'bb-document-viewer-backdrop',\n  templateUrl: './document-viewer-backdrop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DocumentViewerBackdropComponent {\n  @Input() options?: DocumentViewerOptions;\n\n  get containerStyles(): Styles | undefined {\n    return this.options?.container?.styles;\n  }\n\n  get hasCustomStyles(): boolean {\n    return Boolean(this.options?.container?.styles);\n  }\n}\n","<div\n  class=\"bb-document-viewer-backdrop modal-backdrop show\"\n  aria-hidden=\"true\"\n  [class.bb-document-viewer-backdrop-default-off]=\"hasCustomStyles\"\n  [ngStyle]=\"containerStyles\"\n></div>","import { ChangeDetectionStrategy, Component, Input, Output, EventEmitter, NgZone, OnDestroy } from '@angular/core';\nimport { DocumentViewerType, downloadFile } from '../../../model/UI/document-viewer-commons';\n\n@Component({\n  selector: 'bb-document-viewer-header',\n  templateUrl: './document-viewer-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DocumentViewerHeaderComponent implements OnDestroy {\n  @Input() filename!: string;\n  @Input() filetype?: DocumentViewerType;\n  @Input() set source(src: string | undefined) {\n    if (src) {\n      this.revokeObjectURL();\n      this.documentObjectURL = src;\n    }\n  }\n  @Input() isLoading = false;\n  @Output() close = new EventEmitter<void>();\n  private documentObjectURL?: string;\n\n  constructor(private readonly ngZone: NgZone) {}\n\n  ngOnDestroy() {\n    this.revokeObjectURL();\n  }\n\n  onOpenDocument(): void {\n    if (!this.documentObjectURL) {\n      return;\n    }\n\n    this.openImage(this.documentObjectURL);\n  }\n\n  onPrintDocument(): void {\n    if (!this.documentObjectURL) {\n      return;\n    }\n\n    this.printWindow(this.openImage(this.documentObjectURL));\n  }\n\n  onDownloadDocument(): void {\n    if (!this.documentObjectURL) {\n      return;\n    }\n\n    downloadFile(this.documentObjectURL, this.filename);\n  }\n\n  private openImage(documentObjectURL: string): Window {\n    const image = new Image();\n    const newWindow = window.open('about:blank', '_new') as Window;\n    image.src = documentObjectURL;\n    newWindow.document.write(image.outerHTML);\n\n    return newWindow;\n  }\n\n  private printWindow(window: Window): void {\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        window.focus();\n        window.print();\n      }, 0);\n    });\n  }\n\n  private revokeObjectURL(): void {\n    if (this.documentObjectURL) {\n      window.URL.revokeObjectURL(this.documentObjectURL);\n    }\n  }\n}\n","<div class=\"bb-document-viewer-header\">\n  <span class=\"bb-document-viewer-header__title bb-stack\">\n    <bb-icon-ui \n      class=\"bb-stack__item bb-stack__item--spacing-sm\" \n      data-role=\"document-viewer-header-icon\"\n      name=\"description\" \n      size=\"md\"\n    ></bb-icon-ui>\n    <span class=\"bb-stack__item\" data-role=\"document-viewer-header-filename\">{{ filename }}</span>\n  </span>\n  <div class=\"bb-stack\">\n    <!-- web view -->\n    <div class=\"bb-stack__item bb-stack__item--spacing-none bb-stack__item--push-right bb-document-viewer-header-controls__web-view\">\n      <button\n        bbButton \n        data-role=\"print-document-btn\" \n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\" \n        aria-label=\"print\"\n        i18n-aria-label=\"Print document button@@document-viewer-header.aria-label.print-document-btn\"\n        buttonSize=\"sm\"\n        (click)=\"!isLoading && onPrintDocument()\"\n      >\n        <bb-icon-ui name=\"local-printshop\" size=\"md\" color=\"light\"></bb-icon-ui>\n      </button>\n\n      <button\n        bbButton\n        data-role=\"download-document-btn\" \n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\" \n        aria-label=\"download\"\n        i18n-aria-label=\"Download document button@document-viewer-header.aria-label.download-document-btn\"\n        buttonSize=\"sm\"\n        (click)=\"!isLoading && onDownloadDocument()\"\n      >\n        <bb-icon-ui name=\"save-alt\" size=\"md\" color=\"light\"></bb-icon-ui>\n      </button>\n      \n      <button \n        bbButton\n        data-role=\"open-document-btn\" \n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\" \n        aria-label=\"new tab\"\n        i18n-aria-label=\"Open document in new tab button@@document-viewer-header.aria-label.open-document-new-tab-btn\"\n        buttonSize=\"sm\"\n        (click)=\"!isLoading && onOpenDocument()\"\n      >\n        <bb-icon-ui name=\"open-in-new\" size=\"md\" color=\"light\"></bb-icon-ui>\n      </button>\n\n      <button \n        bbButton\n        data-role=\"close-document-btn\" \n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\" \n        aria-label=\"close\"\n        i18n-aria-label=\"Close document button@@document-viewer-header.aria-label.close-btn\"\n        buttonSize=\"sm\" \n        (click)=\"close.emit()\"\n      >\n        <bb-icon-ui name=\"times\" size=\"md\" color=\"light\"></bb-icon-ui>\n      </button>\n    </div>\n\n    <!-- mobile view -->\n    <div class=\"bb-stack__item bb-stack__item--spacing-none bb-stack__item--push-right bb-document-viewer-header-controls__mobile-view\">\n      <div class=\"bb-stack\">\n        <bb-dropdown-menu-ui \n          container=\"body\"\n          data-role=\"options-menu-dropdown\"\n          class=\"bb-stack__item\"\n          icon=\"ellipsis-h\" \n          btnColor=\"muted\"\n          buttonSize=\"sm\"\n          btnCircle=\"true\"\n          iconSize=\"md\"\n          iconColor=\"light\"\n          ariaLabel=\"Check image export dropdown menu\"\n          i18n-ariaLabel=\"Check image export dropdown menu@@document-viewer-header.export-dropdown-menu.ariaLabel\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <a \n              role=\"menuitem\" \n              class=\"dropdown-item\"\n              data-role=\"open-document-item\"\n              (click)=\"!isLoading && onOpenDocument()\" \n              href=\"javaScript:void(0);\" \n            >\n              <bb-icon-ui class=\"bb-document-viewer-header__dropdown-icon\" name=\"open-in-new\" size=\"md\"></bb-icon-ui>\n              <span\n                i18n=\"Open image in new tab@@document-viewer-header.controlsList.open-in-new-tab\"\n              >Open in new tab</span>\n            </a>\n            <a \n              role=\"menuitem\" \n              class=\"dropdown-item\"\n              data-role=\"download-document-item\"\n              (click)=\"!isLoading && onDownloadDocument()\" \n              href=\"javaScript:void(0);\"\n            >\n              <bb-icon-ui class=\"bb-document-viewer-header__dropdown-icon\" name=\"save-alt\" size=\"md\"></bb-icon-ui>\n              <span\n                i18n=\"Download image@@document-viewer-header.controlsList.download-image\"\n              >Download</span>\n            </a>\n            <a \n              role=\"menuitem\" \n              class=\"dropdown-item\"\n              data-role=\"print-document-item\"\n              (click)=\"!isLoading && onPrintDocument()\" \n              href=\"javaScript:void(0);\"\n            >\n              <bb-icon-ui class=\"bb-document-viewer-header__dropdown-icon\" name=\"local-printshop\" size=\"md\"></bb-icon-ui>\n              <span\n                i18n=\"Print image@@document-viewer-header.controlsList.print-image\"\n              >Print</span>\n            </a>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n        <button \n          bbButton\n          data-role=\"close-document-btn\" \n          class=\"bb-stack__item bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\" \n          aria-label=\"close\"\n          i18n-aria-label=\"Close document button@@document-viewer-header.aria-label.close-btn\"\n          buttonSize=\"sm\" \n          (click)=\"close.emit()\"\n        >\n          <bb-icon-ui name=\"times\" size=\"md\" color=\"light\"></bb-icon-ui>\n        </button>\n      </div>\n    </div>\n    \n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NavigationState } from '../../../model/UI/document-viewer-commons';\n\n@Component({\n  selector: 'bb-document-viewer-interactor',\n  templateUrl: './document-viewer-interactor.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DocumentViewerInteractorComponent {\n  @Input() navigationState: NavigationState = { currIdx: 0, total: 0 };\n  @Input() canZoomOut = true;\n  @Input() canZoomIn = true;\n  @Output() navigate = new EventEmitter<number>();\n  @Output() zoomIn = new EventEmitter<void>();\n  @Output() zoomOut = new EventEmitter<void>();\n\n  get navigationStatus(): string {\n    return this.navigationState.currIdx + 1 + '/' + this.navigationState.total;\n  }\n\n  get hasNextNavigation(): boolean {\n    return this.navigationState.currIdx + 1 < this.navigationState.total;\n  }\n\n  get hasPrevNavigation(): boolean {\n    return this.navigationState.currIdx > 0;\n  }\n\n  prev(): void {\n    this.navigate.emit(this.navigationState.currIdx - 1);\n  }\n\n  next(): void {\n    this.navigate.emit(this.navigationState.currIdx + 1);\n  }\n}\n","<div class=\"bb-document-viewer-interactor\">\n  <div class=\"bb-document-viewer-interactor__container\" (click)=\"$event.stopPropagation()\">\n    <div class=\"bb-document-viewer-interactor-controls\">\n      <button \n        bbButton\n        data-role=\"previous-document-btn\" \n        *ngIf=\"hasPrevNavigation\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-interactor-controls__spacer\"\n        buttonSize=\"sm\" \n        (click)=\"prev()\"\n        aria-label=\"previous\"\n        i18n-aria-label=\"Previous document button@@document-viewer-interactor.aria-label.previous-document-button\"\n      >\n        <bb-icon-ui \n          name=\"angle-left\" \n          color=\"light\" \n          size=\"md\"\n        ></bb-icon-ui>\n      </button>\n      <span class=\"bb-document-viewer-interactor-controls__spacer\">{{ navigationStatus }}</span>\n      <button \n        bbButton\n        data-role=\"next-document-btn\" \n        *ngIf=\"hasNextNavigation\"\n        class=\"bb-document-viewer-interactor-controls__button\"\n        buttonSize=\"sm\" \n        (click)=\"next()\"\n        aria-label=\"next\"\n        i18n-aria-label=\"Next document button@@document-viewer-interactor.aria-label.next-document-button\"\n      >\n        <bb-icon-ui \n          name=\"angle-right\" \n          color=\"light\" \n          size=\"md\"\n        ></bb-icon-ui>\n      </button>\n    </div>\n    <div class=\"bb-document-viewer-interactor-separator\"></div>\n    <div class=\"bb-document-viewer-interactor-controls\">\n      <button \n        bbButton\n        data-role=\"zoom-out-btn\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-interactor-controls__spacer\" \n        [disabled]=\"!canZoomOut\" \n        buttonSize=\"sm\" \n        (click)=\"zoomOut.emit()\"\n        aria-label=\"zoom out\"\n        i18n-aria-label=\"Zoom out document button@@document-viewer-interactor.aria-label.zoomOut-document-button\"\n      >\n        <bb-icon-ui \n          name=\"zoom-out\" \n          color=\"light\" \n          size=\"md\"\n        ></bb-icon-ui>\n      </button>\n      <button \n        bbButton\n        data-role=\"zoom-in-btn\"\n        class=\"bb-document-viewer-interactor-controls__button\"\n        [disabled]=\"!canZoomIn\" \n        aria-label=\"zoom in\"\n        buttonSize=\"sm\" \n        (click)=\"zoomIn.emit()\"\n        i18n-aria-label=\"Zoom in document button@@document-viewer-interactor.aria-label.zoomIn-document-button\"\n      >\n        <bb-icon-ui \n          name=\"zoom-in\" \n          color=\"light\" \n          size=\"md\"\n        ></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Output, EventEmitter, Input, OnDestroy } from '@angular/core';\nimport { DomSanitizer, SafeStyle, SafeUrl } from '@angular/platform-browser';\nimport { NavigationState } from '../../../model/UI/document-viewer-commons';\n\ninterface ImageUIState {\n  scale: number;\n}\n\nconst ZOOM_FACTOR = 1.1;\nconst ZOOM_IN_THRESHOLD = 4;\nconst ZOOM_OUT_THRESHOLD = 0.1;\n\n@Component({\n  selector: 'bb-image-viewer',\n  templateUrl: './image-viewer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImageViewerComponent implements OnDestroy {\n  @Input() set source(src: string | undefined) {\n    if (src) {\n      this.revokeObjectURLIfNeeded();\n      this.imageObjectUrl = src;\n\n      this.imageObjectTrustedUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.imageObjectUrl);\n    }\n  }\n  @Input() navigationState: NavigationState = { currIdx: 0, total: 0 };\n  @Output() navigate = new EventEmitter<number>();\n  imageObjectTrustedUrl: SafeUrl | undefined;\n  imageUiState: ImageUIState = { scale: 1 };\n\n  /**\n   * Internal\n   */\n  private imageObjectUrl: string | undefined;\n\n  constructor(private readonly domSanitizer: DomSanitizer) {}\n\n  get canZoomOut(): boolean {\n    return this.imageUiState.scale >= ZOOM_OUT_THRESHOLD;\n  }\n\n  get canZoomIn(): boolean {\n    return this.imageUiState.scale <= ZOOM_IN_THRESHOLD;\n  }\n\n  get scale(): SafeStyle {\n    return this.domSanitizer.bypassSecurityTrustStyle(`scale(${this.imageUiState.scale})`);\n  }\n\n  ngOnDestroy() {\n    this.revokeObjectURLIfNeeded();\n  }\n\n  zoomIn(): void {\n    if (this.canZoomIn) {\n      this.imageUiState.scale *= ZOOM_FACTOR;\n    }\n  }\n\n  zoomOut(): void {\n    if (this.canZoomOut) {\n      this.imageUiState.scale /= ZOOM_FACTOR;\n    }\n  }\n\n  private revokeObjectURLIfNeeded(): void {\n    if (this.imageObjectUrl) {\n      window.URL.revokeObjectURL(this.imageObjectUrl);\n    }\n  }\n}\n","<div class=\"bb-img-viewer-container bb-stack bb-stack--center\">\n  <img \n    #imgRef \n    class=\"bb-img-viewer-container__img\" \n    [style.transform]=\"scale\" \n    [src]=\"imageObjectTrustedUrl\"\n    alt='Transaction check image' \n    (click)=\"$event.stopPropagation()\"\n  >\n</div>\n<bb-document-viewer-interactor\n[navigationState]=\"navigationState\" \n[canZoomOut]=\"canZoomOut\" \n[canZoomIn]=\"canZoomIn\"\n(navigate)=\"navigate.emit($event)\" \n(zoomIn)=\"zoomIn()\" \n(zoomOut)=\"zoomOut()\"\n></bb-document-viewer-interactor>\n\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ElementRef,\n  HostListener,\n  ViewContainerRef,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  DocumentRefSrc,\n  DocumentViewerOptions,\n  DocumentViewerType,\n  DOCUMENT_LOAD_DELAY_MS,\n  NavigationState,\n  Styles,\n} from '../../../model/UI/document-viewer-commons';\nimport { Observable, ReplaySubject, combineLatest, timer, BehaviorSubject, Subject } from 'rxjs';\nimport { catchError, distinctUntilChanged, finalize, map, share, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-document-viewer-container',\n  templateUrl: './document-viewer-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DocumentViewerContainerComponent implements OnInit, OnDestroy {\n  @Input() documentRefSrcs: DocumentRefSrc[] = [];\n  @Input() set activeDocumentRefIdx(idx: number) {\n    this.activeDocumentRefIdx$.next(idx);\n  }\n  @Input() options?: DocumentViewerOptions;\n  @Output() close = new EventEmitter<void>();\n  // eslint-disable-next-line\n  @ViewChild('viewerContainer', { static: true, read: ViewContainerRef }) readonly viewContainer!: ViewContainerRef;\n  documentSrc$!: Observable<string>;\n  documentFilename$!: Observable<string>;\n  documentFiletype$!: Observable<DocumentViewerType>;\n  navigationState$!: Observable<NavigationState>;\n  readonly isLoading$ = new BehaviorSubject(false);\n  readonly isHttpError$ = new BehaviorSubject(false);\n  readonly documentType = DocumentViewerType;\n  /**\n   * Internal\n   */\n  private readonly activeDocumentRefIdx$ = new ReplaySubject<number>(1);\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(private readonly elemRef: ElementRef) {}\n\n  get containerStyles(): Styles | undefined {\n    return this.options?.container?.styles;\n  }\n\n  get viewerScale(): number | undefined {\n    return this.options?.scale;\n  }\n\n  ngOnInit() {\n    this.setDocumentRefChangeSources();\n    this.setFocus();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  @HostListener('document:keydown.escape') onEscape() {\n    this.close.emit();\n  }\n\n  closeDialog() {\n    this.close.emit();\n  }\n\n  onNavigate(idx: number): void {\n    this.activeDocumentRefIdx$.next(idx);\n  }\n\n  private setDocumentRefChangeSources(): void {\n    this.documentSrc$ = this.activeDocumentRefIdx$.pipe(\n      distinctUntilChanged(),\n      tap(() => {\n        this.isLoading$.next(true);\n        this.isHttpError$.next(false);\n      }),\n      switchMap((idx) =>\n        combineLatest([this.documentRefSrcs[idx].src, timer(DOCUMENT_LOAD_DELAY_MS)]).pipe(\n          map(([src]) => src),\n          finalize(() => {\n            this.isLoading$.next(false);\n          }),\n        ),\n      ),\n      catchError((error) => {\n        this.isHttpError$.next(true);\n\n        throw error;\n      }),\n      share(),\n    );\n    this.documentFilename$ = this.activeDocumentRefIdx$.pipe(map((idx) => this.documentRefSrcs[idx].filename));\n    this.documentFiletype$ = this.activeDocumentRefIdx$.pipe(map((idx) => this.documentRefSrcs[idx].filetype));\n    this.navigationState$ = this.activeDocumentRefIdx$.pipe(\n      map((idx) => ({ currIdx: idx, total: this.documentRefSrcs.length })),\n    );\n  }\n\n  private setFocus(): void {\n    this.elemRef.nativeElement.focus();\n  }\n}\n","<div \n  class=\"bb-document-viewer-container show\" \n  role=\"dialog\" \n  aria-modal=\"true\" \n  tabindex=\"-1\" \n  [ngStyle]=\"containerStyles\" \n  cdkTrapFocus\n  cdkTrapFocusAutoCapture=\"true\"\n  >\n  <div class=\"bb-document-viewer-container__wrapper\">\n    <bb-document-viewer-header \n      data-role=\"document-viewer-header\"\n      [filename]=\"documentFilename$ | async\" \n      [source]=\"documentSrc$ | async\"\n      [filetype]=\"documentFiletype$ | async\" \n      [isLoading]=\"isLoading$ | async\" \n      (close)=\"close.emit()\"\n    ></bb-document-viewer-header>\n\n    <ng-container *ngIf=\"documentSrc$ | async as source\">\n      <ng-container *ngIf=\"!(isLoading$ | async) && !(isHttpError$ | async)\">\n        <div \n          class=\"bb-document-viewer-container-image\" \n          *ngIf=\"documentFiletype$ | async as documentFiletype\"\n          (click)=\"closeDialog()\"\n        >\n          <bb-image-viewer \n            data-role=\"document-viewer-image\"\n            [source]=\"source\" \n            [navigationState]=\"navigationState$ | async\"\n            (navigate)=\"onNavigate($event)\"\n          ></bb-image-viewer>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <bb-loading-indicator-ui \n      *ngIf=\"isLoading$ | async\"\n      class=\"bb-document-viewer-container__state\" \n      data-role=\"document-viewer-loading-state\"\n      loaderSize=\"lg\">\n    </bb-loading-indicator-ui>\n\n    <bb-empty-state-ui \n      *ngIf=\"!(isLoading$ | async) && (isHttpError$ | async)\" \n      data-role=\"document-viewer-error-state\"\n      class=\"bb-document-viewer-container__state\" \n      iconColor=\"white\"\n      iconModifier=\"error-outline\"\n      iconSize=\"xxl\"\n      title=\"Unknown Error\" \n      i18n-title=\"Unknown http error title@@document-viewer-component.uknown-error-title\"\n      subtitle=\"Try to reload the page or contact the system administrator\" \n      i18n-subtitle=\"Try to reload the page or contact the system administrator@@document-viewer-component.uknown-error-subtitle\" \n    ></bb-empty-state-ui>\n  </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { of } from 'rxjs';\nimport { TransactionsCheckImage } from '../../model/transactions-check-images.model';\nimport { DocumentRefSrc, getKeyCode, KEY_CODES } from '../../model/UI/document-viewer-commons';\ntype OptionalCheckImage = TransactionsCheckImage | undefined;\n\n@Component({\n  selector: 'bb-transaction-check-image-document-viewer',\n  templateUrl: 'transaction-check-image-document-viewer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionCheckImageDocumentViewerComponent {\n  @Input() imageCheckNumber: string | undefined;\n  @Input() imageFront: TransactionsCheckImage | undefined;\n  @Input() imageBack: TransactionsCheckImage | undefined;\n  @Input() position: number | undefined;\n\n  @Output() closeViewer = new EventEmitter<void>();\n\n  private toDocumentRefSrc(...images: OptionalCheckImage[]): DocumentRefSrc[] {\n    return images\n      .filter((item) => !!item)\n      .map((image) => {\n        const { mimeType, content, side } = image as TransactionsCheckImage;\n        const fileType = image?.mimeType.replace('image/', '');\n        const filename = `${this.imageCheckNumber}-${side}.${fileType}`;\n\n        return {\n          filename,\n          filetype: image?.mimeType as any,\n          src: of(`data:${mimeType};base64,${content}`),\n        };\n      });\n  }\n\n  get imagesRefsSrc() {\n    return this.toDocumentRefSrc(this.imageFront, this.imageBack);\n  }\n\n  closeDocumentViewer() {\n    this.closeViewer.emit();\n  }\n\n  trapKeyEvent(event: KeyboardEvent) {\n    if (getKeyCode(event) !== KEY_CODES.ESCAPE) {\n      event.stopPropagation();\n    }\n  }\n}\n","<div\n  (keydown)=\"trapKeyEvent($event)\"\n  (keyup)=\"trapKeyEvent($event)\"\n>\n  <bb-document-viewer-backdrop></bb-document-viewer-backdrop>\n  <bb-document-viewer-container\n    [documentRefSrcs]=\"imagesRefsSrc\"\n    [activeDocumentRefIdx]=\"position\"\n    cdkTrapFocus\n    (close)=\"closeDocumentViewer()\"\n  ></bb-document-viewer-container>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  TransactionCheckImageResponse,\n  TransactionsCheckImageSide,\n  TransactionsCheckImage,\n} from '../../model/transactions-check-images.model';\nimport { Transaction } from '../../model/transaction.model';\nimport { TransactionsDetailsLoading, TransactionsDetailsLoadingState } from '../../model/transactions-details.model';\n\n@Component({\n  selector: 'bb-transaction-check-image',\n  templateUrl: './transaction-check-image.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionCheckImageComponent {\n  /**\n   * The transaction object\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * The check image object.\n   */\n  // eslint-disable-next-line\n  @Input()\n  set checkImagesList(value: TransactionCheckImageResponse) {\n    this.imageFront = value && value.images.find((data) => data.side === TransactionsCheckImageSide.FRONT);\n    this.imageBack = value && value.images.find((data) => data.side === TransactionsCheckImageSide.BACK);\n  }\n  /**\n   * The transaction details loading status.\n   */\n  @Input() transactionDetailsLoadingStatus: TransactionsDetailsLoading | undefined;\n  readonly loadingStateEnum = TransactionsDetailsLoadingState;\n\n  /**\n   * Sides of the check after being proccesed by formatter class\n   */\n  imageFront: TransactionsCheckImage | undefined;\n  imageBack: TransactionsCheckImage | undefined;\n\n  /**\n   * Index to display in the document viewer. For the purpose of hidding and showing\n   * the viewer this will be base 1\n   * when the value is 0 the document viewer will not be visible\n   */\n  index = 0;\n\n  get hasErrors() {\n    return (\n      this.transactionDetailsLoadingStatus &&\n      this.transactionDetailsLoadingStatus.checkImages &&\n      this.transactionDetailsLoadingStatus.checkImages < 0\n    );\n  }\n\n  get isDone() {\n    return (\n      this.transactionDetailsLoadingStatus &&\n      this.transactionDetailsLoadingStatus.checkImages === TransactionsDetailsLoadingState.done\n    );\n  }\n\n  onClose() {\n    this.index = 0;\n  }\n\n  selectImage(index: number) {\n    this.index = index;\n  }\n}\n","<ng-container *ngIf=\"isDone || hasErrors; else loadingState\">\n  <div class=\"bb-stack bb-stack--wrap\">\n    <div class=\"bb-stack__item\">\n      <bb-transaction-check-image-item\n        *ngIf=\"!!imageFront || hasErrors\"\n        [image]=\"imageFront\"\n        data-role=\"check-image-item-front\"\n        (selectImage)=\"selectImage(1)\"\n        [transaction]=\"transaction\"\n        sideText=\"Front\"\n        imageAlt=\"Front check image\"\n        i18n-sideText=\"Front side title of check image@@transactions.detail.check-image.front.title\"\n        i18n-imageAlt=\"Front side alt of check image@@transactions.detail.check-image.front.alt-image\"\n      ></bb-transaction-check-image-item>\n    </div>\n\n    <div class=\"bb-stack__item\">\n      <bb-transaction-check-image-item\n        *ngIf=\"!!imageBack || hasErrors\"\n        data-role=\"check-image-item-back\"\n        (selectImage)=\"selectImage(imageFront ? 2 : 1)\"\n        [image]=\"imageBack\"\n        [transaction]=\"transaction\"\n        sideText=\"Back\"\n        imageAlt=\"Back check image\"\n        i18n-sideText=\"Back side title of check image@@transactions.detail.check-image.back.title\"\n        i18n-imageAlt=\"Back side alt of check image@@transactions.detail.check-image.back.alt-image\"\n      ></bb-transaction-check-image-item>\n    </div>\n  </div>\n\n  <bb-transaction-check-image-document-viewer \n    *ngIf=\"index>0\"\n    data-role=\"check-image-document-viewer\"\n    [imageCheckNumber]=\"transaction?.checkSerialNumber\"\n    [imageFront]=\"imageFront\"\n    [imageBack]=\"imageBack\"\n    [position]=\"index-1\"\n    (closeViewer)=\"onClose()\"\n  ></bb-transaction-check-image-document-viewer>\n\n  <ng-container *ngIf=\"hasErrors\">\n    <span \n      i18n=\"Something went wrong@@transactions.detail.check-image.server-error\"\n      class=\"bb-input-validation-message\"\n      data-role=\"check-image-server-error-state\"\n      *ngIf=\"transactionDetailsLoadingStatus?.checkImages===loadingStateEnum?.serverError\"\n    >\n      Something went wrong. Please try again later.\n    </span>\n  \n    <span\n      i18n=\"Check images cannot be viewed at the moment@@transactions.detail.check-image.bad-request-error\"\n      class=\"bb-input-validation-message\"\n      data-role=\"check-image-bad-request-error-state\"\n      *ngIf=\"transactionDetailsLoadingStatus?.checkImages===loadingStateEnum?.badRequestError\"\n    >\n      Check images cannot be viewed at the moment, please try again later or contact your financial institution.\n    </span>\n  \n    <span\n      i18n=\"Check images cannot be viewed at the moment@@transactions.detail.check-image.not-found-error\"\n      class=\"bb-input-validation-message\"\n      data-role=\"check-image-not-found-error-state\"\n      *ngIf=\"transactionDetailsLoadingStatus?.checkImages===loadingStateEnum?.notFoundError\"\n    >\n      Check images cannot be viewed at the moment, please try again later or contact your financial institution.\n    </span>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InquireAndDisputeFile, InquireAndDisputeTopics, MessageForm } from '../../model/messages.model';\nimport { TransactionsDetailsLoadingState } from '../../model/transactions-details.model';\n\n@Component({\n  selector: 'bb-transactions-inquiry-dispute',\n  templateUrl: 'transactions-inquiry-dispute.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsInquiryDisputeComponent implements OnInit, OnDestroy {\n  @Input() message: MessageForm | undefined;\n  @Input() enableDispute = false;\n  /**\n   * Whether the dispute & inquiry form is sending or not.\n   */\n  @Input() state = TransactionsDetailsLoadingState.notStarted;\n  @Input() inquireAndDisputeTopics: InquireAndDisputeTopics | undefined;\n\n  @Output() submitReport = new EventEmitter<MessageForm>();\n\n  @Output() cancelReport = new EventEmitter<void>();\n\n  @Output() messageChange = new EventEmitter<MessageForm>();\n\n  @Output() fileChange = new EventEmitter<File>();\n  @Output() fileRemoved = new EventEmitter<InquireAndDisputeFile>();\n\n  confirmationDialogActive = false;\n  labels = {\n    inquire: $localize`:Inquire tooltip@@transactions.dispute.inquire.inquireLabel:Inquire for more information`,\n    dispute: $localize`:Dispute tooltip@@transactions.dispute.inquire.disputeLabel:Dispute this transaction`,\n  };\n\n  readonly loadingStateEnum = TransactionsDetailsLoadingState;\n\n  private unsubscribeSubject = new Subject<void>();\n\n  private topicRequired(control: AbstractControl): Record<'required', string> | null {\n    return control.value?.value === '' ? { required: 'value is required' } : null;\n  }\n\n  transactionReportForm = this.fb.group({\n    topic: [{ value: '' }, this.topicRequired],\n    attachment: [undefined],\n    subject: [{ name: '' }],\n    body: [''],\n  });\n\n  private getControl(field: string): AbstractControl | undefined {\n    return this.transactionReportForm.controls[field];\n  }\n\n  private setFormValue(values: MessageForm) {\n    this.transactionReportForm.patchValue(\n      {\n        body: values.body,\n        attachments: values.attachments,\n      },\n      { emitEvent: false },\n    );\n  }\n\n  hasError(field: string, type: string) {\n    const control = this.getControl(field);\n\n    return control && control.errors && control.errors[type];\n  }\n\n  isInvalidControl(field: string): boolean {\n    const control = this.getControl(field);\n\n    return !!control && control.touched && control.invalid;\n  }\n\n  saveReport() {\n    if (this.transactionReportForm.valid) {\n      this.submitReport.emit(this.message);\n    } else {\n      this.transactionReportForm.markAllAsTouched();\n    }\n  }\n\n  closeReportForm() {\n    this.cancelReport.emit();\n    this.closeConfirmationDialog();\n  }\n\n  closeConfirmationDialog() {\n    this.confirmationDialogActive = false;\n  }\n\n  processLabel(label: string) {\n    const arr = label.split(' ');\n    const last = arr.splice(arr.length - 1, 1);\n\n    return [arr.join(' ') + ' ', ...last];\n  }\n\n  ngOnInit() {\n    if (this.message) {\n      this.setFormValue(this.message);\n    }\n\n    this.transactionReportForm.valueChanges.pipe(takeUntil(this.unsubscribeSubject)).subscribe({\n      next: (formValue) => {\n        this.messageChange.emit({ ...this.message, ...formValue });\n      },\n    });\n  }\n\n  uploadFile(input: HTMLInputElement) {\n    if (input.files && input.files[0]) {\n      const file: File = input.files[0];\n      this.fileChange.emit(file);\n      input.value = '';\n    }\n  }\n\n  removeAttachment(attachment: InquireAndDisputeFile) {\n    this.fileRemoved.emit(attachment);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeSubject.next();\n    this.unsubscribeSubject.complete();\n  }\n\n  constructor(private readonly fb: FormBuilder) {}\n}\n","<div class=\"bb-transaction-list-item-detail-additional-info\">\n  <form [formGroup]=\"transactionReportForm\">\n    <div class=\"bb-block bb-block--lg\" bbAccessibilityKeyboard>\n      <h5 \n        class=\"bb-transaction-list-item-detail-additional-info__title\"\n        data-role=\"dispute-inquiry-header\"\n        i18n=\"dispute and inquiry form header@@transactions.dispute.inquiry.header\"\n      >\n        Does this transaction seem suspicious or incorrect?\n      </h5>\n      <p \n        class=\"bb-text-support text-small\" \n        data-role=\"dispute-inquiry-subHeader\"\n        i18n=\"dispute and inquiry form subHeader@@transactions.dispute.inquiry.subHeader\"\n      >\n        It’s important to provide as much detail as possible for the bank employee to quickly and accurately review your issue.\n      </p>\n    </div>\n  \n    <div class=\"form-group bb-block bb-block--lg\">      \n      <bb-input-radio-group-ui\n        aria-labelledby=\"'label-transaction-dispute'\"\n        [horizontal]=\"false\"\n        formControlName=\"topic\"\n        verticalAlign=\"top\"\n      >\n        <bb-input-radio-ui \n          value=\"dispute\"\n          [labelTemplate]=\"optionsLabel\"\n          labelTemplateContext=\"dispute\"\n          [disabled]=\"!enableDispute\"\n        ></bb-input-radio-ui>\n        <bb-input-radio-ui \n          value=\"inquire\"\n          [labelTemplate]=\"optionsLabel\"\n          labelTemplateContext=\"inquire\"\n        ></bb-input-radio-ui>\n      </bb-input-radio-group-ui>\n      <bb-input-validation-message-ui [showErrors]=\"isInvalidControl('topic')\">\n        <span\n          *ngIf=\"hasError('topic', 'required')\"\n          i18n=\"Error message if field is required@@transactions.dispute.errors.operationRequired\"\n        >\n          Required field\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group bb-block\" [ngClass]=\"{'bb-block--sm': isInvalidControl('body')}\"> \n      <bb-rich-text-editor-ui\n        aria-label=\"Report body\"\n        formControlName=\"body\"\n        placeholder=\"Please tell us more about this transaction...\"\n        i18n-aria-label=\"label report body body@@transactions.dispute.inquiry.body.label\"\n        i18n-placeholder=\"Place holder for messages body@@transactions.dispute.inquiry.body.message\"\n        [readonly]=\"false\"\n        [required]=\"true\"\n      ></bb-rich-text-editor-ui>\n\n      <bb-input-validation-message-ui [showErrors]=\"isInvalidControl('body')\">\n        <span\n          *ngIf=\"hasError('body', 'required')\"\n          i18n=\"Error message if field is required@@transactions.dispute.errors.bodyRequired\"\n        >\n          Required field\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group bb-block bb-block--sm\">\n      <bb-input-file-ui\n        label=\"Default file input\"\n        data-role=\"attachment-file-input\"\n        [disabled]=\"state === loadingStateEnum.loading\"\n        (change)=\"uploadFile($event.target)\"\n      ></bb-input-file-ui>\n    </div>\n\n    <div class=\"row bb-inquire-dispute-attachments\" *ngIf=\"message?.attachments?.length\">\n      <div *ngFor=\"let attachment of message?.attachments\" class=\"col-md-6 bb-inquire-dispute-attachments__item\">\n        <div class=\"bb-block bb-block--md\">\n          <bb-file-attachment-ui\n            data-role=\"attachment-file\"\n            [name]=\"attachment.name\" \n            [size]=\"attachment.size\"\n            [fileContent]=\"attachment.content\"\n            [block]=\"true\"\n            [loading]=\"attachment.id === undefined\"\n            [deletable]=\"attachment.id !== undefined\"\n            (delete)=\"removeAttachment(attachment)\"\n          ></bb-file-attachment-ui>\n        </div>\n      </div>\n    </div>\n   \n    <div class=\"bb-block bb-block--xl bb-text-align-left\">\n      <ng-container *ngIf=\"state === loadingStateEnum.error\">\n        <bb-alert-ui\n          title=\"Couldn’t send your message\"\n          data-role=\"send-report-failed\"\n          message=\"Something went wrong. Please try again.\"\n          i18n-title=\"\n            Send report failed notification|Message for a notification displayed when sending transaction\n            report request has failed@@transactions.notification.error.send.title\"\n          i18n-message=\"Send report failed notification message@@transactions.notification.error.send.message\"\n        ></bb-alert-ui>\n      </ng-container>\n    </div>\n  \n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        bbButton\n        color=\"primary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"dispute-inquiry-send-button\"\n        [isLoading]=\"state === loadingStateEnum.loading\"\n        (click)=\"state !== loadingStateEnum.loading && saveReport()\"\n        i18n=\"Send button@@transactions.dispute.inquiry.button.send\"\n      >\n        Send\n      </bb-load-button-ui>\n      <button\n        *ngIf=\"state !== loadingStateEnum.loading \"\n        bbButton\n        type=\"button\"\n        color=\"secondary\"\n        data-role=\"dispute-inquiry-cancel-button\"\n        class=\"bb-button-bar__button\"\n        (click)=\"confirmationDialogActive = true\"\n        i18n=\"Cancel button@@transactions.dispute.inquiry.button.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n</div>\n\n<ng-template #disputeTipContent>\n  <div class=\"bb-text-align-left\">\n    <span i18n=\"Description inside a tooltip@@transactions.dispute.inquiry.tooltip.description\">\n      If this transaction is incorrect, you can raise a claim for a refund.\n    </span>\n  </div>\n</ng-template>\n\n<ng-template #inqueryTipContent>\n  <div class=\"bb-text-align-left\">\n    <span i18n=\"Description inside inquery tooltip@@transactions.dispute.inquiry.tooltip.description\">\n      If you are suspicious about this transaction, you can ask the bank to gather more information about it.\n    </span>\n  </div>\n</ng-template>\n\n<ng-template #optionsLabel let-context=\"labelTemplateContext\">\n  <ng-container *ngIf=\"context === 'dispute'\">\n    <span \n      class=\"bb-input-radio-group__radio-label\"\n    >\n      {{processLabel(labels.dispute)[0]}}\n    </span>\n    <span class=\"d-inline-block\">\n      <span class=\"bb-input-radio-group__radio-label\">\n        {{processLabel(labels.dispute)[1]}}\n      </span>\n      <bb-icon-ui \n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--md-top\"\n        role=\"tooltip\" \n        name=\"info\" \n        size=\"md\" \n        [bbTooltip]=\"disputeTipContent\" \n        triggers=\"hover click\"\n        placement=\"right\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <bb-icon-ui \n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--sm-bottom\"\n        role=\"tooltip\" \n        name=\"info\" \n        size=\"md\" \n        [bbTooltip]=\"disputeTipContent\" \n        triggers=\"hover click\"\n        placement=\"left\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <span class=\"sr-only\" i18n=\"Description inside a tooltip@@transactions.dispute.inquiry.tooltip.hidden.description\">\n        If this transaction is incorrect, you can raise a claim for a refund.\n      </span>\n    </span>\n  </ng-container>\n\n  <ng-container *ngIf=\"context === 'inquire'\">\n    <span \n      class=\"bb-input-radio-group__radio-label\"\n    >\n      {{processLabel(labels.inquire)[0]}}\n    </span>\n    <span class=\"d-inline-block\">\n      <span class=\"bb-input-radio-group__radio-label\">\n        {{processLabel(labels.inquire)[1]}}\n      </span>\n      <bb-icon-ui \n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--md-top\"\n        role=\"tooltip\" \n        name=\"info\" \n        size=\"md\" \n        [bbTooltip]=\"inqueryTipContent\" \n        triggers=\"hover click\"\n        placement=\"right\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <bb-icon-ui \n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--sm-bottom\"\n        role=\"tooltip\" \n        name=\"info\" \n        size=\"md\" \n        [bbTooltip]=\"inqueryTipContent\" \n        triggers=\"hover click\"\n        placement=\"top\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <span class=\"sr-only\" i18n=\"Description inside inquery tooltip@@transactions.dispute.inquiry.tooltip.hidden.description\">\n        If you are suspicious about this transaction, you can ask the bank to gather more information about it.\n      </span>\n    </span> \n  </ng-container>\n</ng-template>\n\n<!-- Cancel Dispute or Inquiry -->\n<bb-modal-ui\n  [isOpen]=\"confirmationDialogActive\"\n  (cancel)=\"closeConfirmationDialog()\"\n>\n  <div class=\"modal-header\">\n    <h2\n      id=\"modal-basic-title\"\n      class=\"modal-title\"\n      data-role=\"discard-report-modal-header\" \n      i18n=\"Discard your report?|Discard report modal title@@transactions.dispute.inquiry.discard.report.modal.title\"\n    >\n      Discard your report?\n    </h2>\n  </div>\n\n  <div class=\"modal-body\">\n    <span \n      data-role=\"discard-report-modal-subHeader\" \n      i18n=\"All entered data will be lost.|Discard report info@@transactions.dispute.inquiry.discard.report.modal.info\">\n      All entered data will be lost.\n    </span>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div class=\"bb-button-bar\">\n      <button \n        bbButton\n        color=\"danger\" \n        class=\"bb-button-bar__button\"\n        data-role=\"discard-report-modal-discard-button\"\n        (click)=\"closeReportForm()\" \n        i18n=\"Discard|Discard report button label@@transactions.dispute.inquiry.discard.report.modal.discard.button\"\n      >\n        Discard\n      </button>\n\n      <button\n        bbButton\n        color=\"secondary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"discard-report-modal-cancel-button\"\n        (click)=\"closeConfirmationDialog()\"\n        i18n=\"Cancel|Cancel button label@@transactions.dispute.inquiry.discard.report.modal.cancel.button\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</bb-modal-ui>","import { Component, Input } from '@angular/core';\nimport { DisputeStatus } from '@backbase/data-ang/transactions';\n\n@Component({\n  selector: 'bb-dispute-status-tag',\n  templateUrl: 'transaction-dispute-status-tag.component.html',\n})\nexport class TransactionsDisputeStatusTagComponent {\n  @Input() status: DisputeStatus | undefined;\n}\n","<ng-container *ngIf=\"status === 'PENDING'\">\n  <bb-badge-ui\n    text=\"Dispute Pending\"\n    i18n-text=\"Dispute pending|Text for pending disputed transaction label@@transaction.dispute.status.pending\"\n    color=\"warning\"\n    data-role=\"dispute-pending-tag\"\n  ></bb-badge-ui>\n</ng-container>\n\n<ng-container *ngIf=\"status === 'REFUNDED'\">\n  <bb-badge-ui\n    text=\"Refunded\"\n    i18n-text=\"Dispute refunded|Text for refunded disputed transaction label@@transaction.dispute.status.refunded\"\n    color=\"success\"\n    data-role=\"dispute-refunded-tag\"\n  ></bb-badge-ui>\n</ng-container>\n\n<ng-container *ngIf=\"status === 'REJECTED'\">\n  <bb-badge-ui\n    text=\"Dispute Rejected\"\n    i18n-text=\"Dispute rejected|Text for rejected disputed transaction label@@transaction.dispute.status.rejected\"\n    color=\"danger\"\n    data-role=\"dispute-rejected-tag\"\n  ></bb-badge-ui>\n</ng-container>","import { Component, Input } from '@angular/core';\nimport { Transaction } from '../../model/transaction.model';\nimport { DisputeStatusEnum } from '../../model/transactions-details.model';\n\n@Component({\n  selector: 'bb-dispute-banner',\n  templateUrl: 'transaction-dispute-banner.component.html',\n})\nexport class TransactionsDisputeBannerComponent {\n  @Input() transaction: Transaction | undefined;\n  readonly disputeStatus = DisputeStatusEnum;\n}\n","<ng-container>\n  <bb-alert-ui\n    *ngIf=\"transaction?.disputeStatus === disputeStatus.Pending\"\n    modifier=\"info\"\n    data-role=\"dispute-pending-banner\"\n    title=\"You’ve disputed this transaction\"\n    i18n-title=\"\n      Send dispute report success notification|Message for a notification displayed when sending transaction\n      dispute report request has succeed@@transactions.notification.success.send.dispute.title\"\n    message=\"Please go to Messages to view any responses to your request.\"\n    i18n-message=\"Send dispute report success notification message@@transactions.notification.success.send.dispute.message\"\n  ></bb-alert-ui>\n\n  <bb-alert-ui\n    *ngIf=\"transaction?.disputeStatus === disputeStatus.Refunded\"\n    modifier=\"success\"\n    data-role=\"dispute-refunded-banner\"\n    title=\"Your dispute was approved\"\n    i18n-title=\"\n      Dispute report refunded notification|Message for a notification displayed when transaction\n      dispute report request has refunded@@transactions.notification.dispute.refunded.title\"\n    message=\"Please go to Messages to view the process of your refund.\"\n    i18n-message=\"Dispute report reunded notification message@@transactions.notification.dispute.refunded.message\"\n  ></bb-alert-ui>\n\n  <bb-alert-ui\n    *ngIf=\"transaction?.disputeStatus === disputeStatus.Rejected\"\n    modifier=\"error\"\n    data-role=\"dispute-rejected-banner\"\n    title=\"Your dispute was rejected\"\n    i18n-title=\"\n      Dispute report rejected notification|Message for a notification displayed when transaction\n      dispute report request has rejected@@transactions.notification.dispute.rejected.title\"\n    message=\"Please go to Messages to view the reason for this rejection.\"\n    i18n-message=\"Dispute report rejected notification message@@transactions.notification.dispute.rejected.message\"\n  ></bb-alert-ui>\n</ng-container>","import { HttpErrorResponse } from '@angular/common/http';\n\n/**\n * This interface is used by the template to display what is wrong to the user.\n */\nexport interface TransactionsBackendError {\n  message: string;\n  key?: string;\n  context?: { [key: string]: string };\n}\n\n/* eslint-disable no-redeclare*/\nexport namespace TransactionsBackendError {\n  const getMessageFromResponse = (error: HttpErrorResponse): string[] | undefined => {\n    const responseBody = error.error;\n    if (Array.isArray(responseBody?.errors)) {\n      return responseBody.errors.map((data: TransactionsBackendError) => {\n        const { context = {} } = data;\n        const message = data.message.replace(/{[_a-zA-Z][_a-zA-Z0-9]*}/g, (match) => {\n          const result = context[match.replace(/[\\{\\}']+/g, '')];\n\n          return result !== undefined ? result : match;\n        });\n\n        return `Error ${error.status}: ${message}`;\n      });\n    } else {\n      return undefined;\n    }\n  };\n  /* eslint-enable no-redeclare*/\n  /**\n   * @name fromHttpErrorResponse\n   * @param errorResponse The error response\n   * @returns An object containing a user-friendly error message\n   *\n   * @description\n   * Parse an HttpErrorResponse and return a TransactionsError object that can be used to display a\n   * user-friendly error message.\n   */\n  export const fromHttpErrorResponse = (errorResponse: HttpErrorResponse): TransactionsBackendError => {\n    if (errorResponse.error instanceof ErrorEvent) {\n      // Client-side or network error.\n      return {\n        message: 'An unexpected error occurred',\n      };\n    } else {\n      const error = getMessageFromResponse(errorResponse) || [];\n\n      return {\n        message: error[0] || `Error ${errorResponse.status}`,\n      };\n    }\n  };\n\n  export const fromHttpErrorsResponse = (errorResponse: HttpErrorResponse): TransactionsBackendError[] => {\n    if (errorResponse.error instanceof ErrorEvent || !errorResponse.status) {\n      // Client-side or network error.\n      return [\n        {\n          message: 'An unexpected error occurred',\n        },\n      ];\n    } else {\n      const errors = getMessageFromResponse(errorResponse) || [`Error ${errorResponse.status}`];\n\n      return errors.map((message) => ({ message }));\n    }\n  };\n}\n","import { TransactionsAccountOptions } from './transactions-account-options.model';\nimport { TransactionsFilterOptions } from './transactions-filter-options.model';\nimport { TransactionsSearchOptions } from './transactions-search-options.model';\nimport { TransactionsSortOptions } from './transactions-sort-options.model';\n\nexport interface TransactionsExportOptions {\n  account: TransactionsAccountOptions;\n  search?: TransactionsSearchOptions;\n  filter?: TransactionsFilterOptions;\n  sort?: TransactionsSortOptions;\n  exportType: string;\n  locale: string;\n}\n\nexport interface TransactionsExportTypeElement {\n  name: string;\n  reason?: TransactionsExportErrorType;\n  isAvailable: boolean;\n}\n\nexport enum TransactionsExportErrorType {\n  MIXED_PRODUCT_KINDS = 'MIXED_PRODUCT_KINDS',\n  UNSUPPORTED_PRODUCT_KIND = 'UNSUPPORTED_PRODUCT_KIND',\n  TOO_MANY_ITEMS = 'TOO_MANY_ITEMS',\n  MULTIPLE_PRODUCTS = 'MULTIPLE_PRODUCTS',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n}\n\nexport interface UnavailableExportTypeReasons {\n  [reason: string]: TransactionsExportErrorType[];\n}\n\nexport interface TransactionsExportConfig {\n  availableExportTypesHeader?: string;\n  unavailableExportTypesReasonsHeader?: UnavailableExportTypeReasons;\n}\n\nexport function combineExportTypesConfig(exportConfig: TransactionsExportConfig): TransactionsExportTypeElement[] {\n  let exportTypesArr = [];\n  const { availableExportTypesHeader = '', unavailableExportTypesReasonsHeader } = exportConfig;\n  const availableExportTypesArray = availableExportTypesHeader.split(',');\n  const availableTypes = availableExportTypesArray\n    .filter((name) => name !== '')\n    .map((name: string) => ({\n      name,\n      reason: undefined,\n      isAvailable: true,\n    }));\n\n  if (unavailableExportTypesReasonsHeader) {\n    const unavailableTypes = Object.keys(unavailableExportTypesReasonsHeader).map((name) => {\n      if (unavailableExportTypesReasonsHeader && Array.isArray(unavailableExportTypesReasonsHeader[name])) {\n        return {\n          name,\n          reason: unavailableExportTypesReasonsHeader[name][0],\n          isAvailable: false,\n        };\n      }\n\n      return {\n        name,\n        reason: TransactionsExportErrorType.UNKNOWN_ERROR,\n        isAvailable: false,\n      };\n    });\n\n    exportTypesArr = [...availableTypes, ...unavailableTypes];\n  } else {\n    exportTypesArr = [...availableTypes];\n  }\n\n  return [...exportTypesArr].sort((left, right) => {\n    if (left.name === right.name) {\n      return 0;\n    }\n\n    return left.name > right.name ? 1 : -1;\n  });\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  TransactionClientHttpService,\n  GetTransactionsWithPostRequestParams,\n  TransactionItem,\n} from '@backbase/data-ang/transactions';\nimport { AccountsService } from './accounts.service';\nimport { ReplaySubject, BehaviorSubject, combineLatest, Observable, of, merge, Subject, iif } from 'rxjs';\nimport {\n  TransactionsListOptions,\n  defaultInitialListOptions,\n  defaultPaginationOptions,\n  defaultSearchOptions,\n  defaultFilterOptions,\n  OnLoadAction,\n  TransactionState,\n} from '../model/transactions-list-options.model';\nimport { map, scan, filter, distinctUntilChanged, tap, catchError } from 'rxjs/operators';\nimport { TransactionsList } from '../model/transactions-list.model';\nimport { TransactionsSearchOptions } from '../model/transactions-search-options.model';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\nimport { Account } from '../model/account.model';\nimport {\n  deepEqual,\n  cacheRequest,\n  multipleAccountsPredicate,\n  onLoadTransactions,\n} from '../model/transactions-list-utils.model';\nimport { LoadingState } from './transactions.service';\nimport { EndpointType } from './widget-properties.service';\nimport { HttpResponse } from '@angular/common/http';\nimport { DeprecationsService } from '@backbase/foundation-ang/core';\n\n@Injectable()\nexport class PendingTransactionsService implements OnDestroy {\n  private readonly initialListOptions = new ReplaySubject<Partial<TransactionsListOptions>>(1);\n  private readonly selectedAccount = new ReplaySubject<string[]>(1);\n  private readonly options = new BehaviorSubject<Partial<TransactionsListOptions>>({});\n  private readonly listOptions = new BehaviorSubject<TransactionsListOptions>(defaultInitialListOptions);\n  private readonly listRefresh = new Subject<TransactionsListOptions>();\n  private readonly getOrPostEndpoint = new BehaviorSubject<EndpointType>(EndpointType.GET_REQUEST);\n  private readonly transactionsList: Observable<TransactionsList> = merge(\n    this.listOptions.pipe(\n      filter((listOptions) => typeof listOptions.account.arrangementId !== 'undefined'),\n      distinctUntilChanged(deepEqual),\n    ),\n    this.listRefresh,\n  ).pipe(\n    cacheRequest((listOptions) => {\n      this.loadingState.next(\n        listOptions.onLoad === OnLoadAction.Append\n          ? LoadingState.LoadingMore\n          : listOptions.onLoad === OnLoadAction.ReplacePage\n          ? LoadingState.LoadingPage\n          : LoadingState.Loading,\n      );\n\n      return combineLatest([\n        this.loadTransactions(listOptions).pipe(\n          tap(() => {\n            this.loadingState.next(LoadingState.Loaded);\n          }),\n          map((transactionsList) => ({ transactionsList, onLoad: OnLoadAction.ReplacePage })),\n        ),\n        iif(\n          multipleAccountsPredicate(listOptions),\n          this.accountService.getAllArrangements().pipe(\n            map((accounts) => {\n              const accountMap = new Map<string, Account>();\n              accounts.forEach((account) => {\n                accountMap.set(account.id, account);\n              });\n\n              return accountMap;\n            }),\n          ),\n          of(new Map()),\n        ),\n      ]).pipe(\n        map(([transactions, accountMap]) => {\n          transactions.transactionsList.items = transactions.transactionsList.items.map((transaction) => ({\n            ...transaction,\n            account: accountMap.get(transaction.arrangementId || ''),\n          }));\n\n          return transactions;\n        }),\n      );\n    }),\n    scan(onLoadTransactions, { items: [], totalCount: 0 }),\n  );\n\n  public readonly loadingState = new BehaviorSubject<LoadingState>(LoadingState.NotLoaded);\n\n  public readonly isFilterApplied = this.listOptions.pipe(\n    map((options) => !TransactionsFilterOptions.isEmpty(options.filter || {})),\n  );\n\n  public readonly isSearchApplied = this.listOptions.pipe(\n    map((options) => !TransactionsFilterOptions.isEmpty(options.search || {})),\n  );\n\n  private loadTransactions(listOptions: TransactionsListOptions): Observable<TransactionsList> {\n    const transactionPayload = TransactionsList.toHttpRequest(listOptions);\n    let transactionsResponse: Observable<HttpResponse<Array<TransactionItem>>> | undefined;\n\n    if (this.isUsingPostEndpoints) {\n      transactionsResponse = this.transactionsDataHttpService.getTransactionsWithPost(\n        { transactionListRequest: transactionPayload } as GetTransactionsWithPostRequestParams,\n        'response',\n      );\n    } else {\n      this.deprecationsService.logDeprecatedFeature(\n        '[PendingTransactionsService: loadTransactions] GET endpoints are deprecated. Please use POST endpoints by changing CXP configuration',\n      );\n      transactionsResponse = this.transactionsDataHttpService.getTransactions(transactionPayload, 'response');\n    }\n\n    return transactionsResponse.pipe(\n      map(TransactionsList.fromHttpResponse),\n      catchError((err) =>\n        of({\n          items: [],\n          totalCount: 0,\n          httpResponseError: err,\n        }),\n      ),\n    );\n  }\n\n  getTransactionsFrom(\n    selectedAccount: Observable<string[]>,\n    initialListOptions: Observable<Partial<TransactionsListOptions>> = of({}),\n    getOrPostEndpoint: Observable<EndpointType> = of(EndpointType.GET_REQUEST),\n  ) {\n    selectedAccount.subscribe(this.selectedAccount);\n    initialListOptions.subscribe(this.initialListOptions);\n    getOrPostEndpoint.subscribe(this.getOrPostEndpoint);\n  }\n\n  getTransactionsList() {\n    return this.transactionsList;\n  }\n\n  search(query: string) {\n    const searchOptions: TransactionsSearchOptions = {\n      query,\n    };\n\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultSearchOptions,\n      pagination: paginationOptions,\n      search: searchOptions,\n    });\n  }\n\n  clearSearch() {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultSearchOptions,\n      pagination: paginationOptions,\n    });\n  }\n\n  filter(filterOptions: TransactionsFilterOptions) {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultFilterOptions,\n      pagination: paginationOptions,\n      filter: { ...filterOptions },\n    });\n  }\n\n  clearFilter() {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultFilterOptions,\n      pagination: paginationOptions,\n    });\n  }\n\n  sort(sortOptions: TransactionsSortOptions) {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    this.options.next({\n      sort: { ...sortOptions },\n      pagination: {\n        ...currentPaginationOptions,\n        from: 0,\n      },\n    });\n  }\n\n  retryFiltering() {\n    this.listRefresh.next(this.listOptions.getValue());\n  }\n\n  refreshTransactions() {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    const paginationOptions = {\n      ...currentPaginationOptions,\n      from: 0,\n    };\n\n    const newOptions = {\n      ...this.listOptions.getValue(),\n      pagination: paginationOptions,\n    };\n\n    if (deepEqual(newOptions, this.listOptions.getValue())) {\n      this.listRefresh.next(this.listOptions.getValue());\n    } else {\n      this.options.next({\n        pagination: paginationOptions,\n      });\n    }\n  }\n\n  private get isUsingPostEndpoints() {\n    return this.getOrPostEndpoint.getValue() === EndpointType.POST_REQUEST;\n  }\n\n  ngOnDestroy() {\n    this.listRefresh.complete();\n    this.selectedAccount.complete();\n    this.initialListOptions.complete();\n    this.options.complete();\n    this.listOptions.complete();\n    this.loadingState.complete();\n    this.getOrPostEndpoint.complete();\n  }\n\n  constructor(\n    private readonly transactionsDataHttpService: TransactionClientHttpService,\n    private readonly accountService: AccountsService,\n    private readonly deprecationsService: DeprecationsService,\n  ) {\n    combineLatest([this.selectedAccount, this.initialListOptions])\n      .pipe(\n        map(([selectedAccount, initialListOptions]) => ({\n          account: {\n            arrangementId: selectedAccount,\n          },\n          pagination: {\n            from: 0,\n            size: 250,\n          },\n          state: TransactionState.uncompleted,\n          ...initialListOptions,\n        })),\n      )\n      .subscribe(this.options);\n\n    // Base this.listOptions on this.options\n    this.options\n      .pipe(scan((acc: any, curr) => Object.assign({}, acc, curr), defaultInitialListOptions))\n      .subscribe(this.listOptions);\n  }\n}\n","export enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Configuration for the {@link MapAPILoaderService}.\n */\nexport interface MapsAPIConfig {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `<script>` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `<script>` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   */\n  libraries?: string[];\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\nexport interface MarkerOptions extends google.maps.MarkerOptions {\n  locationId: string;\n}\n\nexport interface Marker extends google.maps.Marker {\n  locationId: string;\n}\n","import { Injectable } from '@angular/core';\nimport { MapsAPIConfig, GoogleMapsScriptProtocol } from '../model/transactions-map.model';\n\n@Injectable()\nexport class MapAPILoaderService {\n  private readonly scriptID: string = 'bbGoogleMapsApiScript';\n  private readonly callbackName: string = 'bbMapsAPILoader';\n  private readonly apiLoadPromiseName: string = 'bbMapsAPILoaderPromise';\n  private readonly windowRef: Window = window;\n  private readonly documentRef: Document = document;\n  private configValue: MapsAPIConfig = {};\n\n  get config() {\n    return this.configValue;\n  }\n\n  set config(config: MapsAPIConfig) {\n    this.configValue = config;\n  }\n\n  get loadAPIPromise() {\n    return (this.windowRef as any)[this.apiLoadPromiseName];\n  }\n\n  private assignScriptLoadingPromise(scriptElem: HTMLElement) {\n    (this.windowRef as any)[this.apiLoadPromiseName] = new Promise<void>((resolve: Function, reject: Function) => {\n      (this.windowRef as any)[this.callbackName] = () => {\n        resolve();\n      };\n\n      scriptElem.onerror = (error: Event | string) => {\n        reject(error);\n      };\n    });\n  }\n\n  private getScriptSrc(callbackName: string): string {\n    const protocolType: GoogleMapsScriptProtocol =\n      (this.configValue && this.configValue.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol = '';\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string = this.configValue.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    // make sure we have places library for search component\n    const libraries: string[] = this.configValue.libraries || [];\n    if (libraries.indexOf('places') === -1) {\n      this.configValue.libraries = [...libraries, 'places'];\n    }\n\n    const queryParams: { [key: string]: string | string[] | undefined } = {\n      v: this.configValue.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this.configValue.apiKey,\n      client: this.configValue.clientId,\n      channel: this.configValue.channel,\n      libraries: this.configValue.libraries,\n      region: this.configValue.region,\n      language: this.configValue.language,\n    };\n    const params: string = Object.keys(queryParams)\n      .filter((key: string) => queryParams[key] !== undefined)\n      .filter(\n        (key: string) =>\n          // remove empty arrays\n          !Array.isArray(queryParams[key]) ||\n          (Array.isArray(queryParams[key]) && (queryParams[key] as string[]).length > 0),\n      )\n      .map((key: string) => {\n        let value = queryParams[key] as string | string[];\n        if (Array.isArray(value)) {\n          // join arrays as comma seperated strings\n          value = value.join(',');\n        }\n\n        return `${key}=${value}`;\n      })\n      .join('&');\n\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n\n  load(): Promise<void> {\n    const window = this.windowRef as any;\n    if (window.google && window.google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n\n    if (this.loadAPIPromise) {\n      return this.loadAPIPromise;\n    }\n\n    const script = this.documentRef.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this.scriptID;\n    script.src = this.getScriptSrc(this.callbackName);\n\n    this.assignScriptLoadingPromise(script);\n    this.documentRef.body.appendChild(script);\n\n    return this.loadAPIPromise;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BatchOrder } from '../model/batch-order.model';\nimport { BatchOrdersHttpService } from '@backbase/data-ang/payment-batch';\n\n@Injectable()\nexport class PaymentsBatchService {\n  getBatch(batchOrderId: string): Observable<BatchOrder> {\n    return this.batchOrdersHttpService.getBatchOrdersById({ batchOrderId });\n  }\n\n  constructor(private readonly batchOrdersHttpService: BatchOrdersHttpService) {}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { TransactionClientHttpService } from '@backbase/data-ang/transactions';\nimport { Subject, Observable, of, ReplaySubject, combineLatest, from } from 'rxjs';\nimport { TransactionCheckImageResponse, TransactionsCheckImages } from '../model/transactions-check-images.model';\nimport { switchMap, map, tap, scan, catchError, filter, mergeMap } from 'rxjs/operators';\nimport { TransactionsDetailsLoadingState, TransactionsDetailsLoading } from '../model/transactions-details.model';\nimport { HttpResponse } from '@angular/common/http';\nimport { Transaction } from '../model/transaction.model';\nimport { CheckImagesAvailability, daysDiff } from '../constants';\nimport { MapAPILoaderService } from './map-api-loader.service';\nimport { MessagesDisputeAndInquiryConfig } from '../model/messages.model';\nimport { PaymentsBatchService } from './payments-batch.service';\nimport { BatchOrder } from '../model/batch-order.model';\n\nclass ConfigManager {\n  constructor(private config: MessagesDisputeAndInquiryConfig) {}\n\n  isDisputable(transaction: Transaction) {\n    return (\n      this.isBillingStatusApproved(transaction) && !this.isOld(transaction) && this.isOfRestrictedType(transaction)\n    );\n  }\n\n  private isBillingStatusApproved(transaction: Transaction) {\n    if (!this.config?.byBillingStatus) {\n      return true;\n    }\n\n    return !transaction?.isPending;\n  }\n\n  private isOld(transaction: Transaction) {\n    if (!transaction?.bookingDate) {\n      return false;\n    }\n    const days = daysDiff(new Date(), transaction.bookingDate);\n    const byEligitibilityDays = this.config?.byEligitibilityDays || 0;\n\n    return days > byEligitibilityDays;\n  }\n\n  private isOfRestrictedType(transaction: Transaction) {\n    return transaction?.type ? (this.config?.byTransactionTypes || []).includes(transaction.type) : false;\n  }\n}\n\n@Injectable()\nexport class TransactionDetailsService implements OnDestroy {\n  /**\n   * watches the transaction that is shown in the details\n   */\n  private readonly transactionSelection = new Subject<Transaction>();\n  /**\n   * watches the configuration from CXP that can disable/enable check images\n   */\n  private readonly hasCheckImages = new ReplaySubject<boolean>();\n  /**\n   * general status of each feature that runs asynchronously\n   */\n  private readonly transactionsDetailsStatus = new ReplaySubject<TransactionsDetailsLoading>();\n\n  private readonly mapsApiKey = new ReplaySubject<string>();\n\n  set enableDisputeAndInquiry(value: boolean) {\n    this.transactionsDetailsStatus.next({\n      enableDisputeAndInquiry: value ? TransactionsDetailsLoadingState.done : TransactionsDetailsLoadingState.notLoaded,\n    });\n  }\n\n  fromInquiryAndDispute(\n    enableDisputeAndInquiry: Observable<boolean>,\n    disputeByBillingStatus: Observable<boolean>,\n    disputeEligibilityDays: Observable<number>,\n    disputeTransactionTypes: Observable<Array<string>>,\n  ) {\n    const config = combineLatest([\n      enableDisputeAndInquiry,\n      disputeByBillingStatus,\n      disputeEligibilityDays,\n      disputeTransactionTypes,\n    ]).pipe(\n      map(([enabled, byBillingStatus, byEligitibilityDays, byTransactionTypes]) =>\n        enabled ? { byBillingStatus, byEligitibilityDays, byTransactionTypes } : undefined,\n      ),\n    );\n\n    combineLatest([this.transactionSelection, config]).subscribe({\n      next: ([transactionSelection, inquiryAndDispute]) => {\n        if (!inquiryAndDispute) {\n          this.transactionsDetailsStatus.next({\n            enableDisputeAndInquiry: TransactionsDetailsLoadingState.notLoaded,\n            disputeOption: TransactionsDetailsLoadingState.notLoaded,\n          });\n        } else {\n          const configuration = new ConfigManager(inquiryAndDispute);\n\n          this.transactionsDetailsStatus.next({\n            enableDisputeAndInquiry: TransactionsDetailsLoadingState.done,\n            disputeOption: configuration.isDisputable(transactionSelection)\n              ? TransactionsDetailsLoadingState.done\n              : TransactionsDetailsLoadingState.notLoaded,\n          });\n        }\n      },\n    });\n  }\n  /**\n   *\n   * @param transactionId\n   * triggers a new action that will cause transcations details reload and change an image\n   */\n  selectTransaction(transaction: Transaction) {\n    this.transactionSelection.next(transaction);\n  }\n\n  /**\n   * Key-value pair that controls the loading status in transactions details\n   */\n  get loadingState(): Observable<TransactionsDetailsLoading> {\n    return this.transactionsDetailsStatus.pipe(scan((acc, curr) => ({ ...acc, ...curr }), {}));\n  }\n\n  /**\n   *\n   * @param hasCheckImages\n   * Configuration for check images reactive functionality\n   */\n  fromCheckImages(hasCheckImages: Observable<boolean>): Observable<TransactionCheckImageResponse> {\n    hasCheckImages.subscribe(this.hasCheckImages);\n\n    hasCheckImages\n      .pipe(\n        map((value) => ({\n          checkImages: value ? TransactionsDetailsLoadingState.loading : TransactionsDetailsLoadingState.notLoaded,\n        })),\n      )\n      .subscribe({\n        next: (value) => {\n          this.transactionsDetailsStatus.next(value);\n        },\n      });\n\n    return this.setCondition(this.transactionSelection, this.hasCheckImages).pipe(\n      tap(() => {\n        this.transactionsDetailsStatus.next({ checkImages: TransactionsDetailsLoadingState.loading });\n      }),\n      filter((transaction) => transaction.checkImageAvailability === CheckImagesAvailability.available),\n      switchMap(({ id: transactionId = '' }) =>\n        this.transactionsDataHttpService.getTransactionCheckImages({ transactionId }, 'response').pipe(\n          tap(() => {\n            this.transactionsDetailsStatus.next({ checkImages: TransactionsDetailsLoadingState.done });\n          }),\n          catchError((error) => {\n            switch (error.status) {\n              case 500: {\n                this.transactionsDetailsStatus.next({ checkImages: TransactionsDetailsLoadingState.serverError });\n                break;\n              }\n              case 400: {\n                this.transactionsDetailsStatus.next({ checkImages: TransactionsDetailsLoadingState.badRequestError });\n                break;\n              }\n              case 404: {\n                this.transactionsDetailsStatus.next({ checkImages: TransactionsDetailsLoadingState.notFoundError });\n                break;\n              }\n              default: {\n                this.transactionsDetailsStatus.next({ checkImages: TransactionsDetailsLoadingState.error });\n              }\n            }\n\n            return of(\n              new HttpResponse({\n                body: {\n                  images: [],\n                },\n              }),\n            );\n          }),\n          map(TransactionsCheckImages.fromHttpResponse),\n        ),\n      ),\n    );\n  }\n\n  fromGeolocation(mapsApiKey: Observable<string>): Observable<boolean> {\n    mapsApiKey.subscribe(this.mapsApiKey);\n\n    return combineLatest([this.transactionSelection, this.mapsApiKey]).pipe(\n      map(([transaction, apiKey]) => {\n        this.mapApiLoader.config = {\n          apiKey,\n          libraries: ['geometry'],\n        };\n\n        this.transactionsDetailsStatus.next({ geolocation: TransactionsDetailsLoadingState.loading });\n\n        if (!apiKey || !transaction.location || !transaction.location.latitude || !transaction.location.longitude) {\n          this.transactionsDetailsStatus.next({ geolocation: TransactionsDetailsLoadingState.notLoaded });\n\n          return Promise.resolve(false);\n        }\n\n        return this.mapApiLoader.load().then(\n          () => {\n            this.transactionsDetailsStatus.next({ geolocation: TransactionsDetailsLoadingState.done });\n\n            return true;\n          },\n          () => {\n            this.transactionsDetailsStatus.next({ geolocation: TransactionsDetailsLoadingState.error });\n\n            return false;\n          },\n        );\n      }),\n      mergeMap((promise) => from(promise)),\n    );\n  }\n\n  batchOrder: Observable<BatchOrder | undefined> = this.transactionSelection.pipe(\n    tap(() => {\n      this.transactionsDetailsStatus.next({\n        batchOrder: TransactionsDetailsLoadingState.loading,\n      });\n    }),\n    mergeMap((transaction) => {\n      if (!transaction.batchOrderId) {\n        return of(undefined);\n      }\n\n      return this.paymentsBatchService.getBatch(transaction.batchOrderId).pipe(\n        catchError(() => {\n          this.transactionsDetailsStatus.next({\n            batchOrder: TransactionsDetailsLoadingState.error,\n          });\n\n          return of(undefined);\n        }),\n      );\n    }),\n    map((data) => {\n      this.transactionsDetailsStatus.next({\n        batchOrder: data ? TransactionsDetailsLoadingState.done : TransactionsDetailsLoadingState.notStarted,\n      });\n\n      return data;\n    }),\n  );\n\n  /**\n   * destroy lifecycle hook that will release resources\n   */\n  ngOnDestroy() {\n    this.transactionSelection.complete();\n    this.transactionsDetailsStatus.complete();\n    this.mapsApiKey.complete();\n  }\n\n  /**\n   *\n   * @param feature\n   * @param toggle\n   *\n   * Prevents from emiting values if the cxp configuration is set as disabled\n   */\n  private setCondition<T>(feature: Observable<T>, toggle: ReplaySubject<boolean>): Observable<T> {\n    return combineLatest([feature, toggle]).pipe(\n      filter(([, condition]) => condition),\n      map(([value]) => value),\n    );\n  }\n\n  constructor(\n    private readonly transactionsDataHttpService: TransactionClientHttpService,\n    private readonly mapApiLoader: MapAPILoaderService,\n    private readonly paymentsBatchService: PaymentsBatchService,\n  ) {\n    this.transactionsDetailsStatus.next({\n      checkImages: TransactionsDetailsLoadingState.notStarted,\n      geolocation: TransactionsDetailsLoadingState.notStarted,\n      enableDisputeAndInquiry: TransactionsDetailsLoadingState.notStarted,\n      disputeOption: TransactionsDetailsLoadingState.notStarted,\n      batchOrder: TransactionsDetailsLoadingState.notStarted,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AvailableFilters, AvailableFiltersConfig, ProductKind } from '../model/available-filters.model';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { defaultAvailableFiltersConfig } from '../constants';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { AccountsService } from './accounts.service';\n\n@Injectable()\nexport class AvailableFiltersConfigService {\n  availableFilters$: Observable<AvailableFilters>;\n\n  private productSummary$: Observable<ProductSummaryItem[]>;\n  private readonly availableFiltersConfig$: ReplaySubject<AvailableFiltersConfig> =\n    new ReplaySubject<AvailableFiltersConfig>(1);\n  private readonly selectedAccounts$: ReplaySubject<string[]> = new ReplaySubject<string[]>(1);\n\n  constructor(private readonly accountsService: AccountsService) {\n    this.productSummary$ = this.getProductSummaryForSelectedAccounts();\n    this.availableFilters$ = this.getAvailableFilters();\n  }\n\n  setFilterConfigurationAndAccount(\n    availableFiltersConfig: Observable<AvailableFiltersConfig>,\n    selectedAccounts: Observable<string[]>,\n  ): void {\n    availableFiltersConfig.subscribe(this.availableFiltersConfig$);\n    selectedAccounts.subscribe(this.selectedAccounts$);\n  }\n\n  private getProductSummaryForSelectedAccounts(): Observable<ProductSummaryItem[]> {\n    return combineLatest([this.accountsService.getProductSummary(), this.selectedAccounts$]).pipe(\n      map(([productSummaryItems, selectedAccounts]) =>\n        productSummaryItems.filter((productSummaryItem: ProductSummaryItem) =>\n          selectedAccounts?.includes(productSummaryItem.id),\n        ),\n      ),\n    );\n  }\n\n  private getAvailableFilters(): Observable<AvailableFilters> {\n    return combineLatest([this.availableFiltersConfig$, this.productSummary$]).pipe(\n      map(([availableFiltersConfig, productSummaryItems]) => {\n        const availableFilters: AvailableFilters = productSummaryItems.reduce(\n          (filters: AvailableFilters, productSummaryItem: ProductSummaryItem): AvailableFilters =>\n            filters.concat(this.getFiltersFromConfigs(productSummaryItem, availableFiltersConfig)),\n          [],\n        );\n\n        return Array.from(new Set(availableFilters));\n      }),\n    );\n  }\n\n  private getFiltersFromConfigs(\n    productSummaryItem: ProductSummaryItem,\n    availableFiltersConfig: AvailableFiltersConfig,\n  ): AvailableFilters {\n    const availableFilters: AvailableFilters | undefined =\n      this.getFiltersFromConfigObject(availableFiltersConfig, productSummaryItem) ??\n      this.getFiltersFromConfigObject(defaultAvailableFiltersConfig, productSummaryItem);\n\n    return availableFilters ?? (defaultAvailableFiltersConfig.defaultFilters as AvailableFilters);\n  }\n\n  private getFiltersFromConfigObject(\n    config: AvailableFiltersConfig,\n    productSummaryItem: ProductSummaryItem,\n  ): AvailableFilters | undefined {\n    if (productSummaryItem.productKindName !== undefined) {\n      const productKind: ProductKind | undefined = config[productSummaryItem.productKindName];\n\n      if (productKind === undefined) return undefined;\n\n      if (Array.isArray(productKind)) return productKind;\n\n      if (productSummaryItem.productTypeName === undefined) return undefined;\n\n      return productKind[productSummaryItem.productTypeName];\n    }\n\n    return undefined;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, combineLatest, iif, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { TransactionsBackendError } from '../model/transactions-backend-error.model';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsList } from '../model/transactions-list.model';\nimport { LoadingState, TransactionsService } from '../services/transactions.service';\nimport { EndpointType, PaginationType, WidgetPropertiesService } from '../services/widget-properties.service';\nimport { TransactionsListOptions } from '../model/transactions-list-options.model';\nimport { map, mergeMap, publishReplay, refCount, scan, takeUntil, tap } from 'rxjs/operators';\nimport { Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\n\nimport { filterInputParameters, notificationTtl } from '../constants';\nimport {\n  combineExportTypesConfig,\n  TransactionsExportConfig,\n  TransactionsExportTypeElement,\n} from '../model/transactions-export-options.model';\nimport { PendingTransactionsService } from '../services/pending-transactions.service';\nimport { TransactionCheckImageResponse } from '../model/transactions-check-images.model';\nimport { Transaction } from '../model/transaction.model';\nimport { TransactionDetailsService } from '../services/transaction-details.service';\nimport { TransactionsDetailsLoading } from '../model/transactions-details.model';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { getNameFromContentDispositionHeader } from '../model/transactions-list-utils.model';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { InquireAndDisputeTopics } from '../model/messages.model';\nimport { AvailableFilters, AvailableFiltersConfig } from '../model/available-filters.model';\nimport { AvailableFiltersConfigService } from '../services/available-filters-config.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Directive()\n// eslint-disable-next-line\nexport class BaseTransactionsContainer implements OnInit, OnDestroy {\n  // eslint-disable-next-line\n  @ViewChild('notificationErrorUpdateHeader') notificationErrorUpdateHeaderTemplate: TemplateRef<string> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationErrorUpdateMessage') notificationErrorUpdateMessageTemplate: TemplateRef<string> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationServerErrorHeader', { static: false })\n  notificationServerErrorHeader: TemplateRef<string> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationServerErrorMessage', { static: false })\n  notificationServerErrorMessage: TemplateRef<string> | undefined;\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  private readonly apiKeySubject = new BehaviorSubject<string | undefined>(undefined);\n  /**\n   * API key needed for the google maps to work.\n   */\n  // eslint-disable-next-line\n  @Input()\n  set googleAPIKey(key: string | undefined) {\n    this.apiKeySubject.next(key);\n  }\n  /**\n   * Observable of the arrangement ID this component should retrieve the transactions for.\n   */\n  @Input() selectedAccount: Observable<Array<string>> | undefined;\n  /**\n   * Observable of options to initialize the filter with.  By default, it is empty.\n   */\n  @Input() initialFilterOptions: Observable<TransactionsFilterOptions> = of({});\n  /**\n   * Observable of options to initialize the sort options with.  By default, it is empty.\n   */\n  @Input() initialSortOptions: Observable<TransactionsSortOptions | undefined> = of(undefined);\n\n  /**\n   * input parameters that will take the place of model properties--\n   */\n\n  @Input('pageSize') set pageSizeValue(value: number) {\n    this.pageSizeSubject.next(value);\n  }\n  @Input('maxNavPages') set maxNavPagesValue(value: number) {\n    this.maxNavPagesSubject.next(value);\n  }\n  @Input('paginationType') set paginationTypeValue(value: string) {\n    this.paginationTypeSubject.next(value as PaginationType);\n  }\n  @Input('showControls') set showControlsValue(value: boolean) {\n    this.showControlsSubject.next(value);\n  }\n  @Input('showChangeCategory') set showChangeCategoryValue(value: boolean) {\n    this.showChangeCategorySubject.next(value);\n  }\n  @Input('showPendingTransactionsOnTop') set showPendingTransactionsOnTopValue(value: boolean) {\n    this.showPendingTransactionsOnTopSubject.next(value);\n  }\n  @Input('showCheckImage') set showCheckImageValue(value: boolean) {\n    this.showCheckImageSubject.next(value);\n  }\n  @Input('showManageNotes') set showManageNotesValue(value: boolean) {\n    this.showManageNotesSubject.next(value);\n  }\n  @Input('getOrPostEndpoints') set getOrPostEndpointsValue(value: EndpointType) {\n    this.getOrPostEndpointsSubject.next(value);\n  }\n  @Input('disputeByBillingStatus') set disputeByBillingStatusValue(value: string | boolean) {\n    this.disputeByBillingStatusSubject.next(typeof value === 'boolean' ? value : value === 'true');\n  }\n  @Input('disputeEligibilityDays') set disputeEligibilityDaysValue(value: number) {\n    this.disputeEligibilityDaysSubject.next(value);\n  }\n  @Input('disputeTransactionTypes') set disputeTransactionTypesValue(value: string | undefined) {\n    this.disputeTransactionTypesSubject.next((value || '').split(','));\n  }\n\n  @Input('enableDisputeAndInquiry') set enableDisputeAndInquiryValue(value: string | boolean) {\n    this.enableDisputeAndInquirySubject.next(typeof value === 'boolean' ? value : value === 'true');\n  }\n  @Input('availableFiltersConfig') set availableFiltersValue(availableFiltersConfig: AvailableFiltersConfig) {\n    this.availableFiltersConfig.next(availableFiltersConfig);\n  }\n\n  @Input('inquireTopicId') inquireTopicIdValue: string | undefined;\n  @Input('disputeTopicId') disputeTopicIdValue: string | undefined;\n\n  @Output() transactionSelected = new EventEmitter<any>();\n  @Output() transactionsLoaded = new EventEmitter<TransactionsList | null>();\n\n  private pageSizeSubject = new BehaviorSubject<number | undefined>(undefined);\n  private maxNavPagesSubject = new BehaviorSubject<number | undefined>(undefined);\n  private paginationTypeSubject = new BehaviorSubject<PaginationType | undefined>(undefined);\n  private showControlsSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showChangeCategorySubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showPendingTransactionsOnTopSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showCheckImageSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showManageNotesSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private getOrPostEndpointsSubject = new BehaviorSubject<EndpointType | undefined>(undefined);\n  private disputeByBillingStatusSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private disputeEligibilityDaysSubject = new BehaviorSubject<number | undefined>(undefined);\n  private disputeTransactionTypesSubject = new BehaviorSubject<Array<string> | undefined>(undefined);\n  private enableDisputeAndInquirySubject = new BehaviorSubject<boolean>(false);\n  private inquireTopicIdSubject = new BehaviorSubject<string>('');\n  private disputeTopicIdSubject = new BehaviorSubject<string>('');\n  /** end input parameters--- */\n\n  /**\n   * Information about the backend error, if it occurs.\n   */\n  /**\n   * @deprecated will be removed in 11.0.0\n   */\n  get error(): TransactionsBackendError | undefined {\n    return this.errors && this.errors[0];\n  }\n\n  errors: TransactionsBackendError[] | undefined;\n  /**\n   * Observable of the transactions list.\n   */\n  transactionsList: Observable<TransactionsList | null> | undefined;\n  /**\n   * Observable of the transactions list.\n   */\n  pendingTransactionsList: Observable<TransactionsList | null> | undefined;\n  /**\n   * Observable of the current page.\n   */\n  currentPage: Observable<number> | undefined;\n  /**\n   * Observable of the loading state of the service.\n   */\n  loadingState: Observable<LoadingState> | undefined;\n  /**\n   * Observable of the loading state of the pending transactions service.\n   */\n  loadingPendingState: Observable<LoadingState> | undefined;\n  loadingDetails: Observable<TransactionsDetailsLoading> | undefined;\n  /**\n   * Events registered to transactions widgets\n   */\n  private registeredRefreshTransactionsListEvents: string[] = [];\n  private unsubscribeSubject = new Subject<void>();\n  /**\n   * Subject that listens the transactionsList observable and provides the export types\n   */\n  exportConfig = new BehaviorSubject<TransactionsExportConfig>({});\n  exportErrorMessagesRef: { [key: string]: TemplateRef<string> | undefined } = {};\n  storedExportType: TransactionsExportTypeElement | undefined;\n  numberOfResultsFound = new ReplaySubject<number>();\n  numberOfResultsDisplayed = new ReplaySubject<number>();\n  checkImagesList: Observable<TransactionCheckImageResponse> | undefined;\n  transactionDetailsLoadingStatus: Observable<TransactionsDetailsLoading> | undefined;\n  availableFiltersConfig: ReplaySubject<AvailableFiltersConfig> = new ReplaySubject<AvailableFiltersConfig>(1);\n  availableFilters: Observable<AvailableFilters> = this.availableFiltersConfigService.availableFilters$;\n\n  private readonly refreshTransactionsListHandler = () => {\n    this.model.refreshTransactions();\n  };\n\n  private clearRefreshTransactionsListEvents() {\n    this.registeredRefreshTransactionsListEvents.forEach((eventName) => {\n      this.eventBusService.unsubscribe(eventName, this.refreshTransactionsListHandler);\n    });\n\n    this.registeredRefreshTransactionsListEvents = [];\n  }\n\n  retry() {\n    this.model.retryFiltering();\n    this.pendingTransactionsService.retryFiltering();\n  }\n\n  ngOnDestroy() {\n    this.clearRefreshTransactionsListEvents();\n    this.unsubscribeSubject.next();\n    this.unsubscribeSubject.complete();\n  }\n\n  /**\n   * @deprecated will be removed in 11.0.0\n   */\n  handleError = (errorResponse: HttpErrorResponse) => {\n    this.errors = TransactionsBackendError.fromHttpErrorsResponse(errorResponse);\n\n    return of({\n      items: [],\n      totalCount: 0,\n    });\n  };\n\n  get pageSize(): Observable<number> {\n    return filterInputParameters(this.pageSizeSubject.asObservable(), this.widgetProperties.pageSize);\n  }\n\n  get maxNavPages(): Observable<number> {\n    return filterInputParameters(this.maxNavPagesSubject.asObservable(), this.widgetProperties.maxNavPages);\n  }\n\n  get showControls(): Observable<boolean> {\n    return filterInputParameters(this.showControlsSubject.asObservable(), this.widgetProperties.showControls);\n  }\n\n  get isFilterApplied() {\n    return this.model.isFilterApplied;\n  }\n\n  get isSearchApplied() {\n    return this.model.isSearchApplied;\n  }\n\n  get paginationType(): Observable<PaginationType> {\n    return filterInputParameters(this.paginationTypeSubject.asObservable(), this.widgetProperties.paginationType);\n  }\n\n  get showPendingTransactionsOnTop(): Observable<boolean> {\n    return filterInputParameters(\n      this.showPendingTransactionsOnTopSubject.asObservable(),\n      this.widgetProperties.showPendingTransactionsOnTop,\n    );\n  }\n\n  get showChangeCategory(): Observable<boolean> {\n    return filterInputParameters(\n      this.showChangeCategorySubject.asObservable(),\n      this.widgetProperties.showChangeCategory,\n    );\n  }\n\n  get showCheckImage(): Observable<boolean> {\n    return filterInputParameters(this.showCheckImageSubject.asObservable(), this.widgetProperties.showCheckImage);\n  }\n\n  get showManageNotes(): Observable<boolean> {\n    return filterInputParameters(this.showManageNotesSubject, this.widgetProperties.showManageNotes);\n  }\n\n  get getOrPostEndpoint(): Observable<EndpointType> {\n    return filterInputParameters(\n      this.getOrPostEndpointsSubject.asObservable(),\n      this.widgetProperties.getOrPostEndpoints,\n    );\n  }\n\n  get gmapsAPIKey(): Observable<string> {\n    return combineLatest([this.apiKeySubject.asObservable(), this.widgetProperties.gmapsAPIKey]).pipe(\n      map(([inputVal, propVal]) => inputVal || propVal),\n    );\n  }\n\n  get enableDisputeAndInquiry() {\n    return filterInputParameters(\n      this.enableDisputeAndInquirySubject.asObservable(),\n      this.widgetProperties.enableDisputeAndInquiry,\n    );\n  }\n\n  get disputeByBillingStatus(): Observable<boolean> {\n    return filterInputParameters(\n      this.disputeByBillingStatusSubject.asObservable(),\n      this.widgetProperties.disputeByBillingStatus,\n    );\n  }\n\n  get disputeEligibilityDays(): Observable<number> {\n    return filterInputParameters(\n      this.disputeEligibilityDaysSubject.asObservable(),\n      this.widgetProperties.disputeEligibilityDays,\n    );\n  }\n\n  get disputeTransactionTypes(): Observable<Array<string>> {\n    return filterInputParameters(\n      this.disputeTransactionTypesSubject.asObservable(),\n      this.widgetProperties.disputeTransactionTypes,\n    );\n  }\n\n  private inquireTopicId = filterInputParameters(\n    this.inquireTopicIdSubject.asObservable(),\n    this.widgetProperties.inquireTopicId,\n  );\n\n  private disputeTopicId = filterInputParameters(\n    this.disputeTopicIdSubject.asObservable(),\n    this.widgetProperties.disputeTopicId,\n  );\n\n  inquireAndDisputeTopics: Observable<InquireAndDisputeTopics> = combineLatest([\n    this.inquireTopicId,\n    this.disputeTopicId,\n  ]).pipe(map(([inquire, dispute]) => ({ inquire, dispute })));\n\n  onLoadMore() {\n    this.model.loadMore();\n  }\n\n  ngOnInit() {\n    if (typeof this.selectedAccount === 'undefined') {\n      throw new Error(`\"selectedAccount\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    const initialListOptions: Observable<Partial<TransactionsListOptions>> = combineLatest([\n      this.initialFilterOptions,\n      this.initialSortOptions,\n    ]).pipe(\n      map(([initialFilterOptions, initialSortOptions]) => ({\n        filter: initialFilterOptions,\n        sort: initialSortOptions,\n      })),\n    );\n\n    this.model.getTransactionsFrom(\n      this.selectedAccount,\n      this.pageSize,\n      initialListOptions,\n      this.showPendingTransactionsOnTop,\n      this.getOrPostEndpoint,\n    );\n    if (this.showDetailsConfig) {\n      this.checkImagesList = this.transactionDetailsService.fromCheckImages(this.showCheckImage);\n\n      this.transactionDetailsLoadingStatus = this.transactionDetailsService.loadingState;\n\n      this.transactionDetailsService\n        .fromGeolocation(this.gmapsAPIKey)\n        .pipe(takeUntil(this.unsubscribeSubject))\n        .subscribe();\n    }\n\n    this.transactionsList = this.model.getTransactionsList().pipe(\n      publishReplay(1),\n      refCount(),\n      tap((data) => {\n        this.errors = data.httpResponseError\n          ? TransactionsBackendError.fromHttpErrorsResponse(data.httpResponseError)\n          : undefined;\n        this.cd.markForCheck();\n      }),\n    );\n\n    this.pendingTransactionsService.getTransactionsFrom(\n      this.selectedAccount,\n      initialListOptions,\n      this.getOrPostEndpoint,\n    );\n    this.pendingTransactionsList = this.pendingTransactionsService.getTransactionsList().pipe(\n      publishReplay(1),\n      refCount(),\n      tap((data) => {\n        this.errors = data.httpResponseError\n          ? TransactionsBackendError.fromHttpErrorsResponse(data.httpResponseError)\n          : undefined;\n        this.cd.markForCheck();\n      }),\n    );\n\n    this.transactionsList\n      .pipe(\n        takeUntil(this.unsubscribeSubject),\n        map((transactionsList) => {\n          if (!transactionsList) {\n            return {};\n          }\n\n          const { availableExportTypesHeader, unavailableExportTypesReasonsHeader } = transactionsList;\n\n          return combineExportTypesConfig({\n            availableExportTypesHeader,\n            unavailableExportTypesReasonsHeader,\n          });\n        }),\n      )\n      .subscribe(this.exportConfig);\n\n    const transactionsListCount = this.transactionsList.pipe(\n      map((trans) => ({ history: trans ? trans.totalCount : 0 })),\n    );\n\n    const pendingTransactionsListCount = this.pendingTransactionsList.pipe(\n      map((trans) => ({ pending: trans ? trans.totalCount : 0 })),\n    );\n\n    const transactionsListItemsToDisplay = this.transactionsList.pipe(\n      map((trans) => ({ history: trans ? trans.items.length : 0 })),\n    );\n\n    const pendingTransactionsListItemsToDisplay = this.pendingTransactionsList.pipe(\n      map((trans) => ({ pending: trans ? trans.items.length : 0 })),\n    );\n\n    this.sumTransactionsResults(transactionsListCount, pendingTransactionsListCount)\n      .pipe(takeUntil(this.unsubscribeSubject))\n      .subscribe(this.numberOfResultsFound);\n\n    this.sumTransactionsResults(transactionsListItemsToDisplay, pendingTransactionsListItemsToDisplay)\n      .pipe(takeUntil(this.unsubscribeSubject))\n      .subscribe(this.numberOfResultsDisplayed);\n\n    this.currentPage = this.model.getCurrentPage();\n    this.loadingState = this.model.loadingState;\n    this.loadingPendingState = this.pendingTransactionsService.loadingState;\n\n    this.widgetProperties.refreshTransactionsListEvents.pipe(takeUntil(this.unsubscribeSubject)).subscribe((events) => {\n      this.clearRefreshTransactionsListEvents();\n      if (events) {\n        this.registeredRefreshTransactionsListEvents = events.split(',');\n        this.registeredRefreshTransactionsListEvents.forEach((eventName) => {\n          this.eventBusService.subscribe(eventName, this.refreshTransactionsListHandler);\n        });\n      }\n    });\n\n    this.configureTransctionsDetailsOutputBehaviour();\n\n    this.transactionDetailsService.fromInquiryAndDispute(\n      this.enableDisputeAndInquiry,\n      this.disputeByBillingStatus,\n      this.disputeEligibilityDays,\n      this.disputeTransactionTypes,\n    );\n\n    this.availableFiltersConfigService.setFilterConfigurationAndAccount(\n      this.availableFiltersConfig.asObservable(),\n      this.selectedAccount,\n    );\n  }\n\n  private configureTransctionsDetailsOutputBehaviour() {\n    if (this.transactionsList && this.pendingTransactionsList && !this.showDetailsConfig) {\n      const pending = this.showPendingTransactionsOnTop.pipe(\n        mergeMap((cond) =>\n          iif(() => cond, this.pendingTransactionsList, of({ items: [], totalCount: 0 } as TransactionsList)),\n        ),\n      );\n\n      combineLatest([pending, this.transactionsList])\n        .pipe(\n          takeUntil(this.unsubscribeSubject),\n          map(([pendingTransactionsList, transactionsList]) => {\n            const pendingTransactions = pendingTransactionsList ? pendingTransactionsList.items : [];\n            const transactions = transactionsList ? transactionsList.items : [];\n\n            const mixed: TransactionsList = {\n              items: [...pendingTransactions, ...transactions],\n              totalCount: (pendingTransactionsList?.totalCount || 0) + (transactionsList?.totalCount || 0),\n            };\n\n            return mixed;\n          }),\n        )\n        .subscribe((data) => {\n          this.transactionsLoaded.emit(data);\n        });\n    }\n  }\n\n  private sumTransactionsResults(historyCount: Observable<any>, pendingCount: Observable<any>) {\n    return this.showPendingTransactionsOnTop.pipe(\n      mergeMap((showPendingTransactionsOnTop) =>\n        iif(() => showPendingTransactionsOnTop, merge(historyCount, pendingCount), historyCount),\n      ),\n      scan((acc, curr) => ({ ...acc, ...curr }), { history: 0, pending: 0 }),\n      map(({ history = 0, pending = 0 }) => history + pending),\n    );\n  }\n\n  onPageChange(page: number) {\n    this.model.pageChange(page);\n  }\n\n  onSearch(query: string) {\n    // search ui component sends an unexpected event\n    // that is type Event. To avoid calling backend with that event\n    // it has to be string\n    if (typeof query === 'string') {\n      this.model.search(query);\n      this.pendingTransactionsService.search(query);\n    }\n  }\n\n  onFilter(filterOptions: TransactionsFilterOptions) {\n    this.model.filter(filterOptions);\n    this.pendingTransactionsService.filter(filterOptions);\n  }\n\n  onSort(sortOptions: TransactionsSortOptions) {\n    this.model.sort(sortOptions);\n  }\n\n  onPrint() {\n    window.print();\n  }\n\n  onExport(exportType: TransactionsExportTypeElement) {\n    this.storedExportType = { ...exportType };\n    if (exportType.isAvailable) {\n      this.model\n        .exportToType(exportType.name)\n        .pipe(takeUntil(this.unsubscribeSubject))\n        .subscribe(\n          (response) => {\n            const anchorTag = document.createElement('a');\n            anchorTag.href = URL.createObjectURL(response.body);\n\n            const fileName = getNameFromContentDispositionHeader(response);\n            const defaultName = exportType.name.toLowerCase() === 'pdf' ? 'Account Activities' : 'transactions';\n\n            anchorTag.download = fileName !== '' ? fileName : defaultName;\n            anchorTag.click();\n          },\n          () => {\n            this.notificationService.showNotification({\n              header: this.notificationServerErrorHeader,\n              message: this.notificationServerErrorMessage || '',\n              modifier: 'error',\n            });\n          },\n        );\n    } else {\n      this.pushNotification({\n        header: this.notificationErrorUpdateHeaderTemplate,\n        message: this.notificationErrorUpdateMessageTemplate,\n        modifier: 'error',\n      });\n    }\n  }\n\n  onDetailOpen(transaction: Transaction) {\n    if (!this.showDetailsConfig) {\n      this.transactionSelected.emit(transaction);\n    } else {\n      this.transactionDetailsService.selectTransaction(transaction);\n    }\n  }\n\n  private pushNotification(notificationMessage: {\n    header: TemplateRef<any> | string | undefined;\n    message: any;\n    modifier: 'error' | 'success' | 'info' | 'warning' | 'alert' | undefined;\n  }) {\n    this.notificationService.showNotification({\n      dismissible: true,\n      ttl: notificationTtl,\n      ...notificationMessage,\n    });\n  }\n\n  constructor(\n    protected readonly model: TransactionsService,\n    protected readonly widgetProperties: WidgetPropertiesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly eventBusService: Pubsub,\n    protected readonly notificationService: NotificationService,\n    protected readonly pendingTransactionsService: PendingTransactionsService,\n    protected readonly transactionDetailsService: TransactionDetailsService,\n    protected readonly availableFiltersConfigService: AvailableFiltersConfigService,\n    protected readonly showDetailsConfig?: boolean,\n  ) {}\n}\n\n@Directive({\n  selector: '[bbTransactionsNoAccountSelectedStateCustomizable]',\n})\nexport class TransactionsNoAccountSelectedStateCustomizableDirective extends BbTemplate<\n  BaseTransactionsContainer,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTransactionsErrorStateCustomizable]',\n})\nexport class TransactionsErrorStateCustomizableDirective extends BbTemplate<BaseTransactionsContainer, undefined> {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'bbCapitalizePipe' })\nexport class CapitalizePipe implements PipeTransform {\n  transform(value: string): string {\n    return value[0].toUpperCase() + value.substr(1).toLowerCase();\n  }\n}\n","import { Transaction } from './transaction.model';\n\nexport enum TransactionIconType {\n  category = 1,\n  type = 2,\n  creditDebit = 3,\n}\nexport abstract class BaseTransactionIcon {\n  public abstract get title(): string;\n  public abstract formatClassName(): string;\n  public abstract isValid(): boolean;\n  public abstract get type(): TransactionIconType;\n\n  protected cleanClassName(text: string): string {\n    const result = text.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-');\n\n    if (result.endsWith('-')) {\n      return result.slice(0, -1);\n    } else {\n      return result;\n    }\n  }\n\n  private throwIfIncorrect() {\n    if (!this.isValid) {\n      throw new Error(`Invalid transaction provided to ${this.constructor.name}`);\n    }\n  }\n\n  constructor() {\n    this.throwIfIncorrect();\n  }\n}\n\nexport class TransactionCategoryIcon extends BaseTransactionIcon {\n  public get title(): string {\n    return !this.transaction.isPending ? this.transaction.category || '' : 'pending';\n  }\n\n  public get type(): TransactionIconType {\n    return TransactionIconType.category;\n  }\n\n  public isValid() {\n    return this.transaction.isPending || (this.transaction !== undefined && this.transaction.category !== undefined);\n  }\n\n  public formatClassName(): string {\n    return `bb-transaction-category-${this.cleanClassName(this.transaction.category || 'pending')}`;\n  }\n\n  constructor(protected transaction: Transaction) {\n    super();\n  }\n}\n\nexport class TransactionTypeIcon extends BaseTransactionIcon {\n  public get title(): string {\n    return this.transaction.type || '';\n  }\n\n  public get type(): TransactionIconType {\n    return TransactionIconType.type;\n  }\n\n  public isValid() {\n    return !!this.transaction && !!this.transaction.type;\n  }\n\n  public formatClassName(): string {\n    return this.transaction.type ? `bb-icon-transaction-type-${this.cleanClassName(this.transaction.type)}` : '';\n  }\n\n  constructor(protected transaction: Transaction) {\n    super();\n  }\n}\n\nexport class TransactionCreditDebitIcon extends BaseTransactionIcon {\n  public get title(): string {\n    return this.indicator;\n  }\n\n  public get type(): TransactionIconType {\n    return TransactionIconType.creditDebit;\n  }\n\n  public formatClassName(): string {\n    return this.transaction.transactionAmountCurrency\n      ? `bb-icon-credit-debit-indicator-${this.cleanClassName(this.indicator)}`\n      : '';\n  }\n\n  private get indicator() {\n    if (this.transaction.transactionAmountCurrency) {\n      return parseInt(this.transaction.transactionAmountCurrency.amount, 10) > 0 ? 'incoming' : 'outgoing';\n    }\n\n    return '';\n  }\n\n  public isValid() {\n    return this.transaction !== undefined && this.transaction.transactionAmountCurrency !== undefined;\n  }\n\n  constructor(protected transaction: Transaction) {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Transaction } from '../model/transaction.model';\nimport {\n  TransactionCategoryIcon,\n  TransactionTypeIcon,\n  TransactionCreditDebitIcon,\n  BaseTransactionIcon,\n} from '../model/transaction-category.model';\n\n@Injectable()\nexport class TransactionsIconCategoriesFactoryService {\n  create(transaction: Transaction): BaseTransactionIcon {\n    if (transaction.category || transaction.isPending) {\n      return new TransactionCategoryIcon(transaction);\n    } else if (transaction.type) {\n      return new TransactionTypeIcon(transaction);\n    } else {\n      return new TransactionCreditDebitIcon(transaction);\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { Transaction } from '../../model/transaction.model';\nimport { BaseTransactionIcon } from '../../model/transaction-category.model';\nimport { TransactionsIconCategoriesFactoryService } from '../../services/transactions-icon-categories-factory.service';\n\n@Component({\n  selector: 'bb-transaction-category-icon',\n  templateUrl: './transaction-category-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionCategoryIconComponent implements OnInit, AfterViewInit {\n  /**\n   * The transaction this component shows the category icon of.\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * Whether to show the icon in a circle.\n   */\n  @Input() circle = false;\n  /**\n   * Whether to show different sizes of icons.\n   */\n  @Input() size: 'small' | 'large' | undefined;\n  /* eslint-disable */\n  @ViewChild('categoryImage') categoryImage: ElementRef | undefined;\n  /* eslint-enable */\n\n  /**\n   * Determines if the image is done loading.\n   */\n  hasImageLoaded = false;\n\n  /**\n   * Contains the transaction class name that has to be used together\n   * with the title of the icon\n   */\n  transactionIcon: BaseTransactionIcon | undefined;\n\n  ngOnInit() {\n    if (this.transaction === undefined) {\n      throw new Error(`\"transaction\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    this.transactionIcon = this.transactionsIconCategoriesFactory.create(this.transaction);\n  }\n\n  ngAfterViewInit() {\n    if (this.categoryImage) {\n      this.categoryImage.nativeElement.onload = () => {\n        this.hasImageLoaded = true;\n        this.cd.markForCheck();\n      };\n    }\n  }\n\n  constructor(\n    private transactionsIconCategoriesFactory: TransactionsIconCategoriesFactoryService,\n    private readonly cd: ChangeDetectorRef,\n  ) {}\n}\n","<div\n  aria-hidden=\"true\"\n  class=\"bb-transaction-category bb-transaction-category--enriched\"\n  title=\"{{ transaction?.merchant ? transaction?.merchant?.name : transactionIcon?.title }}\"\n  [ngClass]=\"[\n    circle ? 'bb-transaction-category-icon-circle' : 'bb-transaction-category-icon',\n    size ? 'bb-transaction-category--' + size : '',\n    !transaction?.merchant?.logo || !hasImageLoaded ? transactionIcon?.formatClassName() : ''\n  ]\"\n>\n  <img\n    class=\"bb-transaction-category__image\"\n    *ngIf=\"transaction?.merchant?.logo\" \n    [hidden]=\"!hasImageLoaded\" \n    [src]=\"transaction?.merchant?.logo\" \n    #categoryImage \n  />\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { DisputeStatus, TransactionClientHttpService } from '@backbase/data-ang/transactions';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Transaction } from '../model/transaction.model';\n\n@Injectable()\nexport class TransactionUpdateService {\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred.  Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n\n    // Return an observable with a user-facing error message.\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  update(transaction: Transaction, update: Partial<Transaction>): Observable<HttpResponse<any>> {\n    if (typeof transaction.id === 'undefined' || typeof transaction.arrangementId === 'undefined') {\n      return throwError('updateNotes: invalid transaction');\n    }\n\n    return this.transactionsDataHttpService\n      .patchTransactions(\n        {\n          transactionsClientPatchRequestBody: [\n            {\n              id: transaction.id,\n              arrangementId: transaction.arrangementId,\n              notes: update.notes,\n              disputeStatus: update.disputeStatus,\n              category: update.category,\n            },\n          ],\n        },\n        'response',\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  setDisputeStatus(transaction: Transaction, disputeStatus: DisputeStatus) {\n    return this.update(transaction, { disputeStatus });\n  }\n\n  updateNotes(transaction: Transaction, notes: string) {\n    return this.update(transaction, { notes });\n  }\n\n  constructor(private readonly transactionsDataHttpService: TransactionClientHttpService) {}\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { EnumValuesByAttributeNameGetResponseBody } from '@backbase/data-ang/transactions';\n\nexport interface TransactionsEnumValue {\n  value?: string;\n  name?: string;\n}\n/* eslint-disable no-redeclare*/\nexport namespace TransactionsEnumValue {\n  function toTitleCase(text: string | undefined) {\n    if (!text) {\n      return '';\n    }\n\n    return `${text.charAt(0).toUpperCase()}${text.substr(1).toLowerCase()}`;\n  }\n\n  // Until Angular supports i18n in typescript, this is the way to go\n  function processEnumValue(enumValue: TransactionsEnumValue) {\n    switch (enumValue.value) {\n      case 'CRDT':\n        return {\n          ...enumValue,\n          name: 'Credit',\n        };\n      case 'DBIT':\n        return {\n          ...enumValue,\n          name: 'Debit',\n        };\n      case 'BILLED':\n      case 'UNBILLED':\n      case 'PENDING':\n        return {\n          ...enumValue,\n          name: enumValue.name || toTitleCase(enumValue.value),\n        };\n      default:\n        return {\n          ...enumValue,\n          name: enumValue.name || enumValue.value,\n        };\n    }\n  }\n\n  function processEnumValues(enumValues: Array<TransactionsEnumValue>) {\n    return enumValues.map(processEnumValue);\n  }\n\n  export function fromHttpResponse(\n    response: HttpResponse<EnumValuesByAttributeNameGetResponseBody[]>,\n  ): Array<TransactionsEnumValue> {\n    return processEnumValues((response.body as Array<{ value: string }>) || []);\n  }\n}\n/* eslint-enable no-redeclare*/\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TransactionClientHttpService } from '@backbase/data-ang/transactions';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { TransactionsEnumValue } from '../model/transactions-enum-value.model';\n\n@Injectable()\nexport class EnumValuesService {\n  private readonly enumValues: { [attributeName: string]: Observable<Array<TransactionsEnumValue>> } = {};\n\n  constructor(private readonly transactionsDataHttpService: TransactionClientHttpService) {}\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred.  Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n\n    // Return an observable with a user-facing error message.\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  private loadEnumValues(attributeName: string): Observable<Array<TransactionsEnumValue>> {\n    return this.transactionsDataHttpService\n      .getEnumValuesByAttributeName({ attributeName }, 'response')\n      .pipe(map(TransactionsEnumValue.fromHttpResponse), catchError(this.handleError));\n  }\n\n  getEnumValues(attributeName: string) {\n    if (typeof this.enumValues[attributeName] === 'undefined') {\n      this.enumValues[attributeName] = this.loadEnumValues(attributeName);\n    }\n\n    return this.enumValues[attributeName];\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Category } from '@backbase/data-ang/categories-management';\nimport { Customizable } from './customizable.model';\n\nexport interface CategoryItem extends Customizable {\n  categoryId: number;\n  categoryName: string;\n}\n\nexport function categoriesManagementMap(item: Category): CategoryItem {\n  return { ...item };\n}\n\nexport function fromCategoriesManagementResponse(response: HttpResponse<Array<Category>>): CategoryItem[] {\n  return (response.body || []).map(categoriesManagementMap);\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nimport { CategoriesHttpService } from '@backbase/data-ang/categories-management';\nimport { fromCategoriesManagementResponse, CategoryItem } from '../model/categories-list';\nimport { categoryListLevelParam } from '../constants';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(private readonly categoriesManagementDataHttpService: CategoriesHttpService) {}\n\n  getCategories(): Observable<CategoryItem[]> {\n    return this.categoriesManagementDataHttpService\n      .getCategories(\n        {\n          level: categoryListLevelParam,\n        },\n        'response',\n      )\n      .pipe(shareReplay(), map(fromCategoriesManagementResponse));\n  }\n}\n","import { Component, ViewChild, AfterViewInit, Input, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { TransactionLocation } from '@backbase/data-ang/transactions';\n\n@Component({\n  selector: 'bb-transactions-map-ui',\n  templateUrl: 'transactions-map-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsMapUiComponent implements AfterViewInit {\n  /* eslint-disable */\n  @ViewChild('bbMapContainer') mapContainer: ElementRef<HTMLElement> | undefined;\n  /* eslint-enable */\n  @Input() location: TransactionLocation | undefined;\n\n  private buildMapOptions(location: TransactionLocation): google.maps.MapOptions | undefined {\n    if (location.latitude && location.longitude) {\n      return {\n        center: {\n          lat: location.latitude,\n          lng: location.longitude,\n        },\n        zoom: 10,\n        disableDefaultUI: true,\n        zoomControl: false,\n        styles: [\n          {\n            featureType: 'poi',\n            stylers: [{ visibility: 'off' }],\n          },\n        ],\n      };\n    }\n\n    return undefined;\n  }\n\n  getFullAddress(location: TransactionLocation): string {\n    return encodeURI(`${location.latitude}, ${location.longitude}`);\n  }\n\n  ngAfterViewInit() {\n    if (this.location && this.mapContainer) {\n      const options = this.buildMapOptions(this.location);\n      const map = new google.maps.Map(this.mapContainer.nativeElement, options);\n      if (this.location && this.location.latitude && this.location.longitude) {\n        const mapUrl = this.getFullAddress(this.location);\n        const marker = new google.maps.Marker({\n          position: {\n            lat: this.location.latitude,\n            lng: this.location.longitude,\n          },\n          map,\n        });\n        marker.addListener('click', () => {\n          window.open('https://www.google.com/maps/dir//' + mapUrl, '_blank');\n        });\n      }\n    }\n  }\n}\n","<div class=\"bb-transcations-geolocation-map\" #bbMapContainer></div>","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Transaction } from '../../model/transaction.model';\nimport { TransactionsDetailsLoadingState } from '../../model/transactions-details.model';\n\n@Component({\n  selector: 'bb-transaction-geo-location-map',\n  templateUrl: './transaction-geo-location-map.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionGeoLocationMapComponent {\n  @Input() transaction: Transaction | undefined;\n  @Input() loadingStatus: TransactionsDetailsLoadingState | undefined;\n  loadingStateEnum = TransactionsDetailsLoadingState;\n}\n","<div class=\"bb-transactions-geolocation\">\n  <span class=\"bb-inline-stack bb-block bb-block--sm\" *ngIf=\"transaction?.location?.address\">\n    <bb-icon-ui\n      class=\"bb-inline-stack__item\" \n      name=\"location-on\" \n      size=\"md\"\n    ></bb-icon-ui>\n    <span class=\"bb-inline-stack__item bb-transactions-geolocation__address\">{{transaction?.location?.address}}</span>\n  </span>\n  <ng-container *ngIf=\"loadingStatus!==loadingStateEnum.notStarted\">\n    <ng-container *ngIf=\"loadingStatus!==loadingStateEnum.notLoaded\">\n      <ng-container *ngIf=\"loadingStatus!==loadingStateEnum.error; else errorState\">\n        <ng-container *ngIf=\"loadingStatus!==loadingStateEnum.loading; else loadingState\">\n          <bb-transactions-map-ui [location]=\"transaction?.location\"></bb-transactions-map-ui>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <!-- Error state is not defined yet -->\n</ng-template>","import { Injectable } from '@angular/core';\n\n/**\n * Utility service for DOM manipulations\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DomAttributesService {\n  private basePrefix = 'bb_transactions';\n  private idCounter = 0;\n\n  public nextId(prefix?: string) {\n    return `${this.basePrefix}-${!!prefix ? prefix : 'default'}-${Date.now()}-${this.idCounter++}`;\n  }\n}\n","import { Directive, Input, ElementRef, Renderer2, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { DomAttributesService } from '../services/dom-attributes.service';\n\n@Directive({\n  selector: '[bbDynamicId]',\n  exportAs: 'bbDynamicId',\n})\nexport class DynamicIdDirective implements OnInit {\n  constructor(\n    private readonly _elRef: ElementRef,\n    private readonly _renderer: Renderer2,\n    private readonly domAttributesService: DomAttributesService,\n    private readonly cd: ChangeDetectorRef,\n  ) {}\n\n  @Input() bbDynamicId: string | undefined;\n\n  ngOnInit() {\n    setTimeout(() => {\n      this._renderer.setAttribute(this._elRef.nativeElement, 'id', this.domAttributesService.nextId(this.bbDynamicId));\n      this.cd.markForCheck();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MessagecenterHttpService } from '@backbase/data-ang/messages';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { b64Encode } from '../constants';\nimport { Message, MessagesResponse } from '../model/messages.model';\nimport { Transaction } from '../model/transaction.model';\n\n@Injectable()\nexport class MessagesService {\n  constructor(private readonly messageCenterHttpService: MessagecenterHttpService) {}\n\n  saveMessages(message: Message): Observable<MessagesResponse> {\n    return this.messageCenterHttpService.postMessages({ presentationMessagePostRequestBody: message });\n  }\n\n  saveAttachment(attachment: Blob): Observable<string> {\n    return this.messageCenterHttpService.postMessageAttachments({ attachment }).pipe(map((data) => data.id));\n  }\n\n  deleteAttachments(attachmentIds: Array<string>): Observable<Array<string>> {\n    return this.messageCenterHttpService\n      .deleteMessageAttachments({ ids: attachmentIds })\n      .pipe(map((data) => data.deleted));\n  }\n\n  createDefaultBody(transaction: Transaction) {\n    return `transactionID: ${transaction.id}\nreferenceNumber: ${transaction.reference}\narranagementID: ${transaction.arrangementId}\nbookingDate: ${transaction.bookingDate}\namount: ${transaction.transactionAmountCurrency?.amount}\nmerchantName: ${transaction.merchant?.name}\ncounterpartyName: ${transaction.counterPartyName}\ndescription: ${transaction.description}\ntype: ${transaction.type}`;\n  }\n\n  // TODO: default message is out of scope\n  defaultMessage: Observable<Message> = of({\n    body: b64Encode('test message'),\n    subject: 'no subject',\n    topic: 'no topic',\n    sender: {\n      name: 'test sender',\n    },\n  });\n}\n","import { from, of, Subject } from 'rxjs';\nimport {\n  InquireAndDisputeFile,\n  InquireAndDisputeTopics,\n  Message,\n  MessageForm,\n  SubjectReportMap,\n} from '../model/messages.model';\nimport { TransactionsDetailsLoadingState } from '../model/transactions-details.model';\nimport { MessagesService } from '../services/messages.service';\nimport '@angular/localize/init';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { b64Encode } from '../constants';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Transaction } from '../model/transaction.model';\n/* eslint-disable  @typescript-eslint/no-non-null-assertion */\n\n@Injectable()\nexport class TransactionsInquireAndDisputeUIService {\n  private showReportSubject = new Subject<boolean>();\n  private readonly DEFAULT_MESSAGE: MessageForm = {\n    attachments: [],\n    body: '',\n    topic: 'inquire',\n  };\n\n  showReport: Observable<boolean> = this.showReportSubject.asObservable();\n  message: MessageForm = { ...this.DEFAULT_MESSAGE };\n  reportState = TransactionsDetailsLoadingState.notStarted;\n\n  private subjectReportMap: SubjectReportMap = {\n    dispute: $localize`:Dispute subject@@transactions.dispute.subject:Transaction dispute raised on`,\n    inquire: $localize`:Inquiry subject@@transactions.inquire.subject:Transaction inquiry raised on`,\n  };\n\n  formatMessage(\n    messageForm: MessageForm,\n    defaultBody: string,\n    inquireAndDisputeTopics: InquireAndDisputeTopics,\n    transaction: Transaction | undefined,\n  ): Message {\n    const { topic = 'inquire', body = '', attachments = [] } = messageForm;\n\n    return {\n      body: b64Encode([defaultBody, body].join('\\n')),\n      topic: inquireAndDisputeTopics[topic],\n      attachments: attachments.map((data) => data.id || ''),\n      subject: `${this.subjectReportMap[topic]} ${transaction?.arrangementId}`,\n    };\n  }\n\n  // TODO: Add unit tests when the functionality is complete\n  saveReport(message: Message): Observable<Message | undefined> {\n    this.reportState = TransactionsDetailsLoadingState.loading;\n\n    return this.messagesService.saveMessages(message).pipe(\n      map(() => {\n        this.message = this.DEFAULT_MESSAGE;\n        this.showReportForm(false);\n        this.reportState = TransactionsDetailsLoadingState.done;\n\n        return message;\n      }),\n      catchError(() => {\n        this.reportState = TransactionsDetailsLoadingState.error;\n\n        return of(undefined);\n      }),\n    );\n  }\n\n  showReportForm(display: boolean) {\n    this.showReportSubject.next(display);\n  }\n\n  cancelReport() {\n    this.removeAllFiles();\n    this.reportState = TransactionsDetailsLoadingState.notStarted;\n    this.message = this.DEFAULT_MESSAGE;\n    this.showReportForm(false);\n  }\n\n  fileChange(file: File) {\n    let attachment: InquireAndDisputeFile = {\n      name: file.name,\n      size: file.size,\n      content: from(file.arrayBuffer()),\n    };\n\n    const currentAttachments = this.message!.attachments || [];\n\n    this.message!.attachments = [...currentAttachments, attachment];\n    const state = this.reportState;\n    this.reportState = TransactionsDetailsLoadingState.loading;\n\n    return this.messagesService.saveAttachment(file).pipe(\n      map((id) => {\n        attachment = {\n          id,\n          ...attachment,\n        };\n        this.reportState = TransactionsDetailsLoadingState.notStarted;\n        this.message!.attachments = [...currentAttachments, attachment];\n\n        return id;\n      }),\n      catchError(() => {\n        this.reportState = state;\n        this.message!.attachments = [...currentAttachments];\n\n        return of('');\n        //TODO: add error message\n      }),\n    );\n  }\n\n  deleteReportForm() {\n    //TODO: this is just a placeholder for now\n  }\n\n  fileRemoved(attachment: InquireAndDisputeFile) {\n    const { id = '' } = attachment;\n\n    return this.messagesService.deleteAttachments([id]).pipe(\n      tap(() => {\n        this.message!.attachments = this.message!.attachments.filter((item) => item.id !== id);\n      }),\n    );\n  }\n\n  removeAllFiles() {\n    if (this.message!.attachments.length > 0) {\n      const files = this.message!.attachments.map((item) => item.id || '');\n      this.messagesService.deleteAttachments(files).subscribe({\n        next: () => {\n          this.message!.attachments = [];\n        },\n      });\n    }\n  }\n\n  constructor(private readonly messagesService: MessagesService) {}\n}\n/* eslint-enable  @typescript-eslint/no-non-null-assertion */\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TransactionUpdateService } from './services/transaction-update.service';\nimport { EnumValuesService } from './services/enum-values.service';\nimport {\n  TransactionsNumberOfResultsFoundComponent,\n  TransactionsNumberOfResultsFoundCustomizableDirective,\n} from './components/transactions-controls/transactions-number-of-results-found.component';\nimport { CategoriesService } from './services/categories.service';\nimport {\n  TransactionsErrorStateCustomizableDirective,\n  TransactionsNoAccountSelectedStateCustomizableDirective,\n} from './components/base-transactions-container';\nimport { AccountsService } from './services/accounts.service';\nimport { AccessibilityKeyboardDirective } from './components/transactions-controls/accessibility-keyboard.directive';\nimport { TransactionCheckImageComponent } from './components/transactions-controls/transaction-check-image.component';\nimport { TransactionGeoLocationMapComponent } from './components/transactions-controls/transaction-geo-location-map.component';\nimport { MapAPILoaderService } from './services/map-api-loader.service';\nimport { TransactionsMapUiComponent } from './components/transactions-controls/transactions-map-ui.component';\nimport { TransactionCategoryIconComponent } from './components/transactions-controls/transaction-category-icon.component';\nimport { TransactionsIconCategoriesFactoryService } from './services/transactions-icon-categories-factory.service';\nimport { CapitalizePipe } from './components/capitalize.pipe';\nimport { TransactionCheckImageItemComponent } from './components/transactions-controls/transaction-check-image-item.component';\nimport { DocumentViewerBackdropComponent } from './components/document-viewer-ui/document-viewer-backdrop/document-viewer-backdrop.component';\nimport { DocumentViewerContainerComponent } from './components/document-viewer-ui/document-viewer-container/document-viewer-container.component';\nimport { DocumentViewerHeaderComponent } from './components/document-viewer-ui/document-viewer-header/document-viewer-header.component';\nimport { DocumentViewerInteractorComponent } from './components/document-viewer-ui/document-viewer-interactor/document-viewer-interactor.component';\nimport { ImageViewerComponent } from './components/document-viewer-ui/image-viewer/image-viewer.component';\nimport { TransactionCheckImageDocumentViewerComponent } from './components/transactions-controls/transaction-check-image-document-viewer.component';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DomAttributesService } from './services/dom-attributes.service';\nimport { DynamicIdDirective } from './components/dynamic-id.directive';\nimport { MessagesService } from './services/messages.service';\nimport { TransactionsInquiryDisputeComponent } from './components/transactions-controls/transactions-inquiry-dispute.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TransactionsInquireAndDisputeUIService } from './services/transactions-inquire-and-dispute-ui.service';\nimport { AvailableFiltersConfigService } from './services/available-filters-config.service';\nimport { PaymentsBatchService } from './services/payments-batch.service';\nimport { TransactionsDisputeStatusTagComponent } from './components/transactions-controls/transaction-dispute-status-tag.component';\nimport { TransactionsDisputeBannerComponent } from './components/transactions-controls/transaction-dispute-banner.component';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { RichTextEditorModule } from '@backbase/ui-ang/rich-text-editor';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { InputFileModule } from '@backbase/ui-ang/input-file';\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IconModule,\n    ButtonModule,\n    LoadButtonModule,\n    InputRadioGroupModule,\n    TooltipModule,\n    ReactiveFormsModule,\n    LoadingIndicatorModule,\n    EmptyStateModule,\n    DropdownMenuModule,\n    A11yModule,\n    RichTextEditorModule,\n    InputValidationMessageModule,\n    InputFileModule,\n    FileAttachmentModule,\n    AlertModule,\n    ModalModule,\n    BadgeModule,\n  ],\n  providers: [\n    TransactionUpdateService,\n    EnumValuesService,\n    CategoriesService,\n    AccountsService,\n    TransactionsIconCategoriesFactoryService,\n    MapAPILoaderService,\n    DomAttributesService,\n    MessagesService,\n    TransactionsInquireAndDisputeUIService,\n    PaymentsBatchService,\n    AvailableFiltersConfigService,\n  ],\n  declarations: [\n    TransactionsNumberOfResultsFoundComponent,\n    TransactionCheckImageComponent,\n    TransactionGeoLocationMapComponent,\n    TransactionsErrorStateCustomizableDirective,\n    TransactionsNoAccountSelectedStateCustomizableDirective,\n    AccessibilityKeyboardDirective,\n    TransactionsNumberOfResultsFoundCustomizableDirective,\n    TransactionsMapUiComponent,\n    TransactionCategoryIconComponent,\n    TransactionCheckImageItemComponent,\n    CapitalizePipe,\n    DocumentViewerBackdropComponent,\n    DocumentViewerContainerComponent,\n    DocumentViewerHeaderComponent,\n    DocumentViewerInteractorComponent,\n    ImageViewerComponent,\n    TransactionCheckImageDocumentViewerComponent,\n    DynamicIdDirective,\n    TransactionsInquiryDisputeComponent,\n    TransactionsDisputeStatusTagComponent,\n    TransactionsDisputeBannerComponent,\n  ],\n  exports: [\n    TransactionsNumberOfResultsFoundComponent,\n    TransactionsErrorStateCustomizableDirective,\n    TransactionsNoAccountSelectedStateCustomizableDirective,\n    AccessibilityKeyboardDirective,\n    TransactionCheckImageComponent,\n    TransactionCheckImageItemComponent,\n    TransactionGeoLocationMapComponent,\n    TransactionsNumberOfResultsFoundCustomizableDirective,\n    IconModule,\n    A11yModule,\n    TransactionsMapUiComponent,\n    TransactionCategoryIconComponent,\n    CapitalizePipe,\n    DocumentViewerBackdropComponent,\n    DocumentViewerContainerComponent,\n    DocumentViewerHeaderComponent,\n    DocumentViewerInteractorComponent,\n    ImageViewerComponent,\n    TransactionCheckImageDocumentViewerComponent,\n    EmptyStateModule,\n    LoadingIndicatorModule,\n    DropdownMenuModule,\n    DynamicIdDirective,\n    TransactionsInquiryDisputeComponent,\n    TransactionsDisputeStatusTagComponent,\n    TransactionsDisputeBannerComponent,\n  ],\n})\nexport class TransactionsCommonModule {}\n","import { Injectable } from '@angular/core';\nimport { RouterService } from '@backbase/foundation-ang/core';\n\n@Injectable()\nexport class NavigationService {\n  constructor(private readonly routerService: RouterService) {}\n\n  view(arrangementId: string): Promise<boolean> {\n    return this.routerService.navigate(['/', arrangementId]);\n  }\n}\n","import { TransactionsListOptions } from './transactions-list-options.model';\nimport { TransactionsExportOptions } from './transactions-export-options.model';\nimport { TransactionsFilterOptions } from './transactions-filter-options.model';\n\nexport interface TransactionsGetParams {\n  amountGreaterThan?: number;\n  amountLessThan?: number;\n  bookingDateGreaterThan?: string;\n  bookingDateLessThan?: string;\n  description?: string;\n  reference?: string;\n  counterPartyName?: string;\n  counterPartyAccountNumber?: string;\n  creditDebitIndicator?: string;\n  categories?: string[];\n  billingStatus?: string;\n  currency?: string;\n  notes?: number;\n  id?: string;\n  locale?: string;\n  arrangementsIds?: string[];\n  fromCheckSerialNumber?: number;\n  toCheckSerialNumber?: number;\n  checkSerialNumbers?: string[];\n  query?: string;\n  from?: number;\n  cursor?: string;\n  size?: number;\n  orderBy?: string;\n  direction?: string;\n  secDirection?: string;\n  exportType?: string;\n  state?: string;\n  types?: string[];\n  typeGroups?: string[];\n}\n/* eslint-disable no-redeclare*/\nexport namespace TransactionsGetParams {\n  // eslint-disable-next-line complexity\n  export const toHttpGetParams = (getParams: TransactionsListOptions | TransactionsExportOptions) => {\n    const params: TransactionsGetParams = { ...TransactionsFilterOptions.toHttpGetParams(getParams.filter) };\n\n    if (getParams.account && getParams.account.arrangementId) {\n      params['arrangementsIds'] = Array.isArray(getParams.account.arrangementId)\n        ? getParams.account.arrangementId\n        : [getParams.account.arrangementId];\n    }\n\n    if (getParams.search && getParams.search.query) {\n      params['query'] = getParams.search.query;\n    }\n\n    if ((getParams as TransactionsListOptions).pagination) {\n      params['from'] = (getParams as TransactionsListOptions).pagination.from;\n      params['size'] = (getParams as TransactionsListOptions).pagination.size;\n    }\n\n    if (getParams.sort) {\n      params['orderBy'] = getParams.sort.orderBy.toString();\n      params['direction'] = getParams.sort.direction.toString();\n    }\n\n    if ((getParams as TransactionsExportOptions).exportType) {\n      params['exportType'] = (getParams as TransactionsExportOptions).exportType;\n    }\n\n    if ((getParams as TransactionsExportOptions).locale) {\n      params['locale'] = (getParams as TransactionsExportOptions).locale;\n    }\n\n    if ((getParams as TransactionsListOptions).state) {\n      params['state'] = (getParams as TransactionsListOptions).state;\n    }\n\n    return params;\n  };\n}\n/* eslint-enable no-redeclare*/\n","import { Transaction } from './transaction.model';\nimport { TransactionsList } from './transactions-list.model';\n\nexport interface TransactionsGroupedByDate {\n  [date: string]: Transaction[];\n}\n/* eslint-disable no-redeclare*/\nexport namespace TransactionsGroupedByDate {\n  function getDate(transaction: Transaction) {\n    const date = transaction.bookingDate ? new Date(transaction.bookingDate) : new Date();\n\n    return date.toISOString().slice(0, 10);\n  }\n\n  export function groupByDate(transactionsList: TransactionsList | undefined): TransactionsGroupedByDate {\n    const transactions = transactionsList && transactionsList.items !== null ? transactionsList.items : [];\n\n    return transactions.reduce((transactionsGroupedByDate: TransactionsGroupedByDate, transaction: Transaction) => {\n      const transactionDate = getDate(transaction);\n\n      if (transactionsGroupedByDate[transactionDate]) {\n        transactionsGroupedByDate[transactionDate].push(transaction);\n      } else {\n        transactionsGroupedByDate[transactionDate] = [transaction];\n      }\n\n      return transactionsGroupedByDate;\n    }, {});\n  }\n}\n/* eslint-enable no-redeclare*/\n","import { map, pluck } from 'rxjs/operators';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\nimport { WidgetPropertiesService } from '../services/widget-properties.service';\nimport { Input, Directive, Output, EventEmitter } from '@angular/core';\nimport { defaultAvailableFiltersConfig, deserialize, filterInputParameters, parseSortOptions } from '../constants';\nimport { AvailableFiltersConfig } from '../model/available-filters.model';\nimport { Transaction } from '../model/transaction.model';\nimport { TransactionsList } from '../model/transactions-list.model';\n\n/* eslint-disable */\n@Directive()\nexport class BaseTransactionsWidget {\n  /**\n   * API key needed for the google maps to work.\n   */\n  @Input() googleAPIKey: string | undefined;\n\n  @Input('initialFilterOptions') set initialFilterOptionsValue(value: string) {\n    const deseralizedValue = deserialize(value);\n    this.initialFilterOptionsSubject.next(TransactionsFilterOptions.fromHttpGetParams(deseralizedValue));\n  }\n  @Input('initialSortOptions') set initialSortOptionsValue(value: string) {\n    const options = parseSortOptions(value);\n    this.initialSortOptionsSubject.next(options);\n  }\n\n  @Input() pageSize: number | undefined;\n  @Input() maxNavPages: number | undefined;\n  @Input() paginationType: string | undefined;\n  @Input() showControls: boolean | undefined;\n  @Input() showChangeCategory: boolean | undefined;\n  @Input() showPendingTransactionsOnTop: boolean | undefined;\n  @Input() showCheckImage: boolean | undefined;\n  @Input() showManageNotes: boolean | undefined;\n  @Input() getOrPostEndpoints: string | undefined;\n  @Input() enableDisputeAndInquiry: boolean = false;\n  @Input() disputeByBillingStatus: boolean | undefined;\n  @Input() disputeEligibilityDays: number | undefined;\n  @Input() disputeTransactionTypes: string | undefined;\n  @Input() inquireTopicId: string | undefined;\n  @Input() disputeTopicId: string | undefined;\n  @Input() availableFiltersConfig: AvailableFiltersConfig = defaultAvailableFiltersConfig;\n\n  @Output() transactionSelected = new EventEmitter<Transaction>();\n  @Output() transactionsLoaded = new EventEmitter<TransactionsList | null>();\n\n  private readonly initialFilterOptionsSubject = new BehaviorSubject<TransactionsFilterOptions | undefined>(undefined);\n  private readonly initialSortOptionsSubject = new BehaviorSubject<TransactionsSortOptions | undefined>(undefined);\n\n  readonly selectedAccount = this.getRouteParam(this.route, 'selectedAccount').pipe(\n    map((selectedAccount) => selectedAccount as string),\n    map((selectedAccount) =>\n      typeof selectedAccount !== 'undefined' && selectedAccount.includes(',')\n        ? selectedAccount.split(',')\n        : selectedAccount,\n    ),\n  );\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // Ensure that level that has actual value keeps it from being cleared.\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map((params) => params[0] || params[1]),\n    );\n  }\n\n  get initialFilterOptions(): Observable<TransactionsFilterOptions> {\n    return filterInputParameters(\n      this.initialFilterOptionsSubject.asObservable(),\n      this.widgetProperties.initialFilterOptions,\n    );\n  }\n\n  get initialSortOptions(): Observable<TransactionsSortOptions | undefined> {\n    return filterInputParameters(\n      this.initialSortOptionsSubject.asObservable(),\n      this.widgetProperties.initialSortOptions,\n    );\n  }\n\n  constructor(protected readonly route: ActivatedRoute, protected readonly widgetProperties: WidgetPropertiesService) {}\n\n  onDetailOpen(transaction: Transaction) {\n    this.transactionSelected.emit(transaction);\n  }\n\n  onTransactionsLoaded(transactionsList: TransactionsList) {\n    this.transactionsLoaded.emit(transactionsList);\n  }\n}\n/* eslint-enable */\n","import { TransactionsExportTypeElement } from '../model/transactions-export-options.model';\nimport { Input, Output, EventEmitter, OnInit, Directive } from '@angular/core';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { AvailableFilters } from '../model/available-filters.model';\n\n@Directive()\n// eslint-disable-next-line\nexport class BaseTransactionsControls implements OnInit {\n  /**\n   * Whether a filter is applied on the transactions.\n   */\n  @Input() isFilterApplied = false;\n  /**\n   * Configurations for exporting transactions.\n   */\n  // eslint-disable-next-line\n  @Input()\n  exportConfig = [\n    {\n      name: 'CSV',\n      isAvailable: true,\n    },\n    {\n      name: 'OFX',\n      isAvailable: true,\n    },\n  ];\n  /**\n   * Configuration parameter to show/hide filters\n   */\n  @Input() availableFilters: AvailableFilters = [];\n\n  /**\n   * EventEmitter for triggering a filter action.\n   */\n  @Output() readonly filter = new EventEmitter<TransactionsFilterOptions>();\n  /**\n   * EventEmitter for triggering a search action.\n   */\n  @Output() readonly search = new EventEmitter<string>();\n  /**\n   * EventEmitter for triggering an export action.\n   */\n  @Output() readonly export = new EventEmitter<TransactionsExportTypeElement>();\n  /**\n   * Whether the filter form is shown.\n   */\n  isFilterOpen = false;\n\n  /**\n   * Search event callback\n   */\n  onSearch(searchParam: string) {\n    this.search.emit(searchParam);\n  }\n  /**\n   * Filter event callback\n   */\n  onFilter(filterParams: TransactionsFilterOptions) {\n    this.filter.emit(filterParams);\n  }\n  /**\n   * Export event callback\n   */\n  onExport(type: TransactionsExportTypeElement) {\n    this.export.emit(type);\n  }\n  /**\n   * Close event callback to hide the filters controls\n   */\n  onClose() {\n    this.isFilterOpen = false;\n  }\n  /**\n   * Toogle method to hide or show the filter form\n   */\n  toggleFilter() {\n    this.isFilterOpen = !this.isFilterOpen;\n  }\n\n  ngOnInit() {\n    if (typeof this.exportConfig === 'undefined') {\n      throw new Error(`\"exportConfig\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}