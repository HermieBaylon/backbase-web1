(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@backbase/ui-ang/mode-header'), require('@backbase/ui-ang/button'), require('rxjs/operators'), require('rxjs'), require('@backbase/data-ang/impersonation-v1'), require('@backbase/data-ang/user'), require('@backbase/identity-auth'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@backbase/identity-auth/impersonation', ['exports', '@angular/core', '@backbase/ui-ang/mode-header', '@backbase/ui-ang/button', 'rxjs/operators', 'rxjs', '@backbase/data-ang/impersonation-v1', '@backbase/data-ang/user', '@backbase/identity-auth', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["identity-auth"] = global.backbase["identity-auth"] || {}, global.backbase["identity-auth"].impersonation = {}), global.ng.core, global.i1, global.i2, global.rxjs.operators, global.rxjs, global.i1$1, global.i2$1, global.backbase["identity-auth"], global.ng.common));
})(this, (function (exports, i0, i1, i2, operators, rxjs, i1$1, i2$1, i2$2, i4) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);

    var ImpersonationBannerLayoutComponent = /** @class */ (function () {
        function ImpersonationBannerLayoutComponent() {
            /**
             * Emits when the impersonation session stop button is clicked.
             */
            this.stop = new i0.EventEmitter();
        }
        return ImpersonationBannerLayoutComponent;
    }());
    /** @nocollapse */ ImpersonationBannerLayoutComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationBannerLayoutComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ ImpersonationBannerLayoutComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ImpersonationBannerLayoutComponent, selector: "bb-impersonation-banner-layout", inputs: { user: "user" }, outputs: { stop: "stop" }, ngImport: i0__namespace, template: "<bb-mode-header-ui\n  i18n-title=\"\n    Header that displays who is being emulated when the banner appears during an emulation session\n    @@bb-impersonation-banner.layout.title\"\n  title=\"Emulating {{ user?.fullName }}\"\n  data-role=\"impersonation-banner\"\n  [showCloseButton]=\"false\"\n>\n  <button\n    mode-header-status\n    bbButton\n    type=\"button\"\n    buttonSize=\"sm\"\n    color=\"danger\"\n    data-role=\"impersonation-banner-stop-button\"\n    i18n=\"Stop button used to end the emulation session @@bb-impersonation-banner.layout.button.stop\"\n    (click)=\"stop.emit()\"\n  >\n    Stop\n  </button>\n</bb-mode-header-ui>\n", components: [{ type: i1__namespace.ModeHeaderComponent, selector: "bb-mode-header-ui", inputs: ["title", "secondaryTitle", "showCloseButton", "closeButtonAriaLabel", "reverseTitleOrder"], outputs: ["close"] }], directives: [{ type: i2__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationBannerLayoutComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-impersonation-banner-layout',
                        templateUrl: 'banner-layout.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { user: [{
                    type: i0.Input
                }], stop: [{
                    type: i0.Output
                }] } });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var impersonationCodeParam = 'impersonation_code';
    var storageKeys = {
        impersonation: 'is_impersonated',
        accessToken: 'access_token',
        refreshToken: 'refresh_token',
    };

    var ImpersonationDataService = /** @class */ (function () {
        function ImpersonationDataService(identityImpersonationService, userService) {
            this.identityImpersonationService = identityImpersonationService;
            this.userService = userService;
        }
        ImpersonationDataService.prototype.getImpersonationUrl = function (accessToken, targetUserId, targetWebApp) {
            return this.identityImpersonationService.getImpersonationTokenReference({
                tokenReferenceRequest: {
                    targetUserId: targetUserId,
                    targetWebApp: targetWebApp,
                    sourceWebApp: window.location.origin + window.location.pathname,
                    accessToken: accessToken,
                },
            });
        };
        ImpersonationDataService.prototype.getAccessToken = function (ref, client, realm) {
            return this.identityImpersonationService.getImpersonationAccessToken({
                accessTokenRequest: {
                    realm: realm,
                    client: client,
                    ref: ref,
                },
            });
        };
        ImpersonationDataService.prototype.getOwnUser = function () {
            return this.userService.getOwnUser();
        };
        return ImpersonationDataService;
    }());
    /** @nocollapse */ ImpersonationDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationDataService, deps: [{ token: i1__namespace$1.IdentityImpersonationService }, { token: i2__namespace$1.UserManagementService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ ImpersonationDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationDataService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationDataService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.IdentityImpersonationService }, { type: i2__namespace$1.UserManagementService }]; } });

    var ImpersonationService = /** @class */ (function () {
        /** @internal */
        function ImpersonationService(dataService, oidcAuthService) {
            var _this = this;
            this.dataService = dataService;
            this.oidcAuthService = oidcAuthService;
            this.isImpersonated$$ = new rxjs.BehaviorSubject(this.storedState);
            /**
             * Flag to determine if the current user is being impersonated.
             */
            this.isImpersonated$ = this.isImpersonated$$.asObservable();
            /**
             * Contacts the Identity Impersonation service to obtain an impersonation url for the
             * input user and target web app.
             * @param targetUserId the id of the user to be impersonated.
             * @param targetWebApp the url of the app to impersonate the user in.
             * @returns a url for the target app containing an impersonation code.
             */
            this.getImpersonationUrl = function (targetUserId, targetWebApp) { return _this.oidcAuthService.accessToken$.pipe(operators.filter(function (token) { return !!token; }), operators.first(), operators.switchMap(function (_a) {
                var raw = _a.raw;
                return _this.dataService.getImpersonationUrl(raw, targetUserId, targetWebApp);
            }), operators.map(function (_a) {
                var ref = _a.ref;
                return _this.appendParamToUrl(targetWebApp, ref);
            })); };
            /**
             * Checks the current URL for an `impersonation_code` reference.
             * @returns a promise that resolves when the impersonation state is determined.
             */
            this.checkImpersonationStatus = function () { return __awaiter(_this, void 0, void 0, function () {
                var impersonationToken, accessTokenResponse;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            impersonationToken = this.getImpersonationCode();
                            if (!impersonationToken) {
                                return [2 /*return*/];
                            }
                            return [4 /*yield*/, this.dataService
                                    .getAccessToken(impersonationToken, this.getClientId(), this.getRealm())
                                    .toPromise()];
                        case 1:
                            accessTokenResponse = _a.sent();
                            this.setAccessTokenToOAuthStorage(accessTokenResponse);
                            this.stripParamFromUrl();
                            this.storedState = true;
                            return [4 /*yield*/, this.oidcAuthService.loadDiscoveryDocument()];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.oidcAuthService.refresh()];
                        case 3:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            }); };
            if (!oidcAuthService) {
                throw new Error("In order to use ImpersonationService, please include IdentityAuthModule to your application module");
            }
            this.clearImpersonationStateOnLogout();
        }
        Object.defineProperty(ImpersonationService.prototype, "storedState", {
            get: function () {
                return !!this.oidcAuthService.storage.getItem(storageKeys.impersonation);
            },
            set: function (value) {
                this.isImpersonated$$.next(value);
                if (value) {
                    this.oidcAuthService.storage.setItem(storageKeys.impersonation, value.toString());
                }
                else {
                    this.oidcAuthService.storage.removeItem(storageKeys.impersonation);
                }
            },
            enumerable: false,
            configurable: true
        });
        ImpersonationService.prototype.stripParamFromUrl = function () {
            var url = new URL(window.location.href);
            url.searchParams.delete(impersonationCodeParam);
            window.history.replaceState(window.history.state, '', url.toString());
        };
        ImpersonationService.prototype.appendParamToUrl = function (targetWebAppUrl, value) {
            var url = new URL(targetWebAppUrl);
            url.searchParams.append(impersonationCodeParam, value);
            return url.toString();
        };
        ImpersonationService.prototype.setAccessTokenToOAuthStorage = function (response) {
            this.oidcAuthService.storage.setItem(storageKeys.accessToken, response.access_token || '');
            this.oidcAuthService.storage.setItem(storageKeys.refreshToken, response.refresh_token || '');
        };
        ImpersonationService.prototype.getClientId = function () {
            return this.oidcAuthService.authConfig.clientId || '';
        };
        ImpersonationService.prototype.getRealm = function () {
            var issuer = this.oidcAuthService.authConfig.issuer;
            if (!issuer) {
                return '';
            }
            return new URL(issuer).pathname.split('/').pop() || '';
        };
        ImpersonationService.prototype.clearImpersonationStateOnLogout = function () {
            var _this = this;
            this.oidcAuthService.events$
                .pipe(operators.filter(function (event) { return ['logout', 'session_terminated'].includes(event.type); }), operators.first())
                .subscribe({
                next: function () { return (_this.storedState = false); },
            });
        };
        ImpersonationService.prototype.getImpersonationCode = function () {
            return new URLSearchParams(location.search).get(impersonationCodeParam);
        };
        return ImpersonationService;
    }());
    /** @nocollapse */ ImpersonationService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationService, deps: [{ token: ImpersonationDataService }, { token: i2__namespace$2.ɵɵOidcAuthService, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ ImpersonationService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () {
            return [{ type: ImpersonationDataService }, { type: i2__namespace$2.ɵɵOidcAuthService, decorators: [{
                            type: i0.Optional
                        }] }];
        } });

    var ImpersonationBannerComponent = /** @class */ (function () {
        /** @internal */
        function ImpersonationBannerComponent(impersonationService, dataService, renderer) {
            var _this = this;
            this.impersonationService = impersonationService;
            this.dataService = dataService;
            this.renderer = renderer;
            /**
             * Event Emitted when stop impersonation button is pressed.
             * Please logout the user as your app requires.
             */
            this.stopImpersonation = new i0.EventEmitter();
            this.impersonatedClass = 'impersonated';
            this.user$ = this.impersonationService.isImpersonated$.pipe(operators.tap(function (state) { return _this.setImpersonationClass(state); }), operators.filter(function (state) { return !!state; }), operators.switchMap(function () { return _this.dataService.getOwnUser(); }));
            this.setImpersonationClass = function (state) { return state
                ? _this.renderer.addClass(document.body, _this.impersonatedClass)
                : _this.renderer.removeClass(document.body, _this.impersonatedClass); };
        }
        return ImpersonationBannerComponent;
    }());
    /** @nocollapse */ ImpersonationBannerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationBannerComponent, deps: [{ token: ImpersonationService }, { token: ImpersonationDataService }, { token: i0__namespace.Renderer2 }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ ImpersonationBannerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ImpersonationBannerComponent, selector: "bb-impersonation-banner", outputs: { stopImpersonation: "stopImpersonation" }, ngImport: i0__namespace, template: "<bb-impersonation-banner-layout\n  *ngIf=\"user$ | async as user\"\n  [user]=\"user\"\n  (stop)=\"this.stopImpersonation.emit()\"\n></bb-impersonation-banner-layout>\n", components: [{ type: ImpersonationBannerLayoutComponent, selector: "bb-impersonation-banner-layout", inputs: ["user"], outputs: ["stop"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationBannerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-impersonation-banner',
                        templateUrl: 'banner.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ImpersonationService }, { type: ImpersonationDataService }, { type: i0__namespace.Renderer2 }]; }, propDecorators: { stopImpersonation: [{
                    type: i0.Output
                }] } });

    var ImpersonationModule = /** @class */ (function () {
        function ImpersonationModule() {
        }
        return ImpersonationModule;
    }());
    /** @nocollapse */ ImpersonationModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ ImpersonationModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationModule, declarations: [ImpersonationBannerLayoutComponent, ImpersonationBannerComponent], imports: [i4.CommonModule, i1.ModeHeaderModule, i2.ButtonModule], exports: [ImpersonationBannerComponent] });
    /** @nocollapse */ ImpersonationModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationModule, imports: [[i4.CommonModule, i1.ModeHeaderModule, i2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ImpersonationModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4.CommonModule, i1.ModeHeaderModule, i2.ButtonModule],
                        declarations: [ImpersonationBannerLayoutComponent, ImpersonationBannerComponent],
                        exports: [ImpersonationBannerComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ImpersonationBannerComponent = ImpersonationBannerComponent;
    exports.ImpersonationBannerLayoutComponent = ImpersonationBannerLayoutComponent;
    exports.ImpersonationDataService = ImpersonationDataService;
    exports.ImpersonationModule = ImpersonationModule;
    exports.ImpersonationService = ImpersonationService;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-identity-auth-impersonation.umd.js.map
