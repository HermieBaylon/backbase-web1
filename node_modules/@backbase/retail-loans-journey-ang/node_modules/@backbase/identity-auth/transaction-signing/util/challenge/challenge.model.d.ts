/**
 * Data object for a reauthentication request.
 * A response containing an attribute implies that reauthentication did not immediately succeed.
 */
export interface ChallengeResponse {
    /**
     * The challenge type received after reauthentication.
     */
    challengeType?: string;
    /**
     * The challenge data used to identify what the user is signing.
     */
    challengeData?: object;
    /**
     * An error object describing how reauthentication failed.
     */
    error?: ChallengeError;
}
/**
 * Error response for a reauthentication or challenge request.
 * Implies the reauthentication process has failed.
 */
export interface ChallengeError {
    /**
     * A code identifying the error type to the user.
     */
    errorCode: string;
    /**
     * A code identifying the error description to the user.
     */
    errorDescription?: string;
}
/**
 * The body returned from the auth server on a challenge error.
 */
export interface ChallengeResponseBody {
    /**
     * A list of challenges issued by the auth service.
     */
    challenges: Challenge[];
}
/**
 * The body of an individual challenge.
 */
export interface Challenge {
    /**
     * The type of the challenge.
     */
    challengeType: string;
    /**
     * The url for posting a response to the challenge.
     */
    actionUrl: string;
    /**
     * Optional data object defining extra data for the challenge.
     */
    data?: object;
}
/**
 * The type for resolving the challenge flow.
 */
export declare type ChallengeResolve = () => void;
/**
 * The type for rejecting the challenge flow.
 */
export declare type ChallengeReject = (response: ChallengeResponse) => void;
export interface CapabilityResponse {
    challenges: Array<CapabilityChallenge>;
    data: CapabilityData;
}
export interface CapabilityChallenge {
    challengeType: string;
    acrValues: string;
    scope: string;
}
export interface CapabilityData {
    'confirmation-type'?: string;
    [key: string]: any;
}
/**
 * An interface for a UI component looking to handle transaction signing flow.
 */
export interface TransactionSigningHandler {
    /**
     * The challenge response received from a reauthentication request.
     */
    challenge?: ChallengeResponse;
    /**
     * The data returned when the challenge was issued.
     */
    transactionData: CapabilityData;
}
