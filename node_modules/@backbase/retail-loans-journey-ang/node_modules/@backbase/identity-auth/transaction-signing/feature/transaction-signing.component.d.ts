import { OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import { TransactionSigningService } from '../service/transaction-signing.service';
import { CapabilityData, ChallengeError, ChallengeResponse, TransactionSigningConfig } from '../util';
import * as i0 from "@angular/core";
export declare class TransactionSigningComponent implements OnDestroy {
    private readonly transactionSigningService;
    private readonly config;
    private readonly errorSubject;
    private readonly pendingSubject;
    private readonly challengeSubject;
    private readonly requestSubscription;
    private pollingSubscription;
    readonly challenge: Observable<ChallengeResponse | undefined>;
    readonly error: Observable<ChallengeError | undefined>;
    readonly pending: Observable<boolean>;
    txnData: CapabilityData | undefined;
    enableResendPushNotification: boolean;
    constructor(transactionSigningService: TransactionSigningService, config: TransactionSigningConfig);
    ngOnDestroy(): void;
    onFailure(error: Error): void;
    onSuccess(): void;
    onPoll(data: unknown): void;
    onPost(data: unknown): void;
    private setupRequestSubscription;
    private updateChallenge;
    private clearChallenge;
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionSigningComponent, [null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TransactionSigningComponent, "bb-transaction-signing", never, {}, {}, never, never>;
}
