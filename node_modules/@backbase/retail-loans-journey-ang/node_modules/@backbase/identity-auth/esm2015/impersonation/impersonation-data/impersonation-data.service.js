import { Injectable } from '@angular/core';
import { IdentityImpersonationService } from '@backbase/data-ang/impersonation-v1';
import { UserManagementService } from '@backbase/data-ang/user';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/impersonation-v1";
import * as i2 from "@backbase/data-ang/user";
export class ImpersonationDataService {
    constructor(identityImpersonationService, userService) {
        this.identityImpersonationService = identityImpersonationService;
        this.userService = userService;
    }
    getImpersonationUrl(accessToken, targetUserId, targetWebApp) {
        return this.identityImpersonationService.getImpersonationTokenReference({
            tokenReferenceRequest: {
                targetUserId,
                targetWebApp,
                sourceWebApp: window.location.origin + window.location.pathname,
                accessToken,
            },
        });
    }
    getAccessToken(ref, client, realm) {
        return this.identityImpersonationService.getImpersonationAccessToken({
            accessTokenRequest: {
                realm,
                client,
                ref,
            },
        });
    }
    getOwnUser() {
        return this.userService.getOwnUser();
    }
}
/** @nocollapse */ ImpersonationDataService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ImpersonationDataService, deps: [{ token: i1.IdentityImpersonationService }, { token: i2.UserManagementService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ ImpersonationDataService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ImpersonationDataService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ImpersonationDataService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.IdentityImpersonationService }, { type: i2.UserManagementService }]; } });
//# sourceMappingURL=impersonation-data.service.js.map