import { IdentityImpersonationService } from '@backbase/data-ang/impersonation-v1';
import { UserManagementService } from '@backbase/data-ang/user';
import * as i0 from "@angular/core";
export declare class ImpersonationDataService {
    private readonly identityImpersonationService;
    private readonly userService;
    constructor(identityImpersonationService: IdentityImpersonationService, userService: UserManagementService);
    getImpersonationUrl(accessToken: string, targetUserId: string, targetWebApp: string): import("rxjs").Observable<import("@backbase/data-ang/impersonation-v1").TokenReferenceResponse>;
    getAccessToken(ref: string, client: string, realm: string): import("rxjs").Observable<import("@backbase/data-ang/impersonation-v1").AccessTokenResponse>;
    getOwnUser(): import("rxjs").Observable<import("@backbase/data-ang/user").GetOwnUser>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ImpersonationDataService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ImpersonationDataService>;
}
