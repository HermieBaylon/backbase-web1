import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';
import '@angular/localize/init';
import { PaginationType as AccountStatementPaginationType } from '@backbase/account-statement-common-ang';
import { PaginationType as TransactionPaginationType } from '@backbase/transactions-common-ang';
import { LoanDefaultViewType } from '@backbase/loans-collection-ui-ang';
import * as i0 from "@angular/core";
export const loansConfigurationDefault = {
    transaction: {
        showCheckImages: true,
        showChangeCategory: true,
        showManageNotes: true,
        showControls: true,
        paginationType: TransactionPaginationType.PAGINATION,
        itemsPerPage: 10,
        maxNavPages: 3,
        enableDisputeAndInquiry: true,
        disputeEligibilityDays: 120,
        disputeTransactionTypes: 'Credit/Debit Card',
        disputeByBillingStatus: true,
        disputeTopicId: '',
        inquireTopicId: '',
    },
    accountStatement: {
        notificationDismissTime: 5,
        itemsPerPage: 10,
        paginationType: AccountStatementPaginationType.Pagination,
        sortingOrder: 'date',
        sortingDirection: 'DESC',
    },
    loanTypeMapping: {
        LineOfCredit: {
            viewType: LoanDefaultViewType.LineOfCredit,
            typeAlias: $localize `:Loan line of credit loan type alias@@loans.type.line-of-credit.alias:Line Of Credit`,
        },
        Mortgage: {
            viewType: LoanDefaultViewType.Mortgage,
            typeAlias: $localize `:Loan mortgage loan type alias@@loans.type.mortgage.alias:Mortgage Loan`,
        },
        TermLoan: {
            viewType: LoanDefaultViewType.TermLoan,
            typeAlias: $localize `:Loan term loan type alias@@loans.type.term.alias:Term Loan`,
        },
    },
    loansList: {
        itemsPerPage: 10,
        maxNavPages: 3,
    },
    paymentSchedule: {
        itemsPerPage: 10,
        maxNavPages: 3,
    },
};
export const LoansJourneyConfigurationToken = new InjectionToken('LoansJourneyConfiguration injection token');
/**
 * @dynamic
 */
export class LoansJourneyConfigurationService {
    constructor(config) {
        this.configuration = Object.assign(Object.assign({}, loansConfigurationDefault), config);
    }
    get transactionConfig() {
        return this.configuration.transaction;
    }
    get accountStatementConfig() {
        return this.configuration.accountStatement;
    }
    get loanTypeMapping() {
        return this.configuration.loanTypeMapping;
    }
    get loanList() {
        return this.configuration.loansList;
    }
    get paymentSchedule() {
        return this.configuration.paymentSchedule;
    }
}
/** @nocollapse */ LoansJourneyConfigurationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansJourneyConfigurationService, deps: [{ token: LoansJourneyConfigurationToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ LoansJourneyConfigurationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansJourneyConfigurationService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansJourneyConfigurationService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [LoansJourneyConfigurationToken]
                }] }]; } });
//# sourceMappingURL=loans-journey-configuration.js.map