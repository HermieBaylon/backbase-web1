{"version":3,"file":"effects.js","sourceRoot":"","sources":["../../../../../../../libs/retail-loans-journey/src/lib/store/payment-schedule/effects.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAE1B,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAE9D,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAC;AAC/D,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAC5D,OAAO,EACL,wBAAwB,EACxB,6BAA6B,EAC7B,+BAA+B,EAC/B,yBAAyB,EACzB,8BAA8B,EAC9B,gCAAgC,GACjC,MAAM,WAAW,CAAC;;;;AAGnB,MAAM,OAAO,sBAAsB;IACjC,YAA6B,QAAiB,EAAmB,YAA0B;QAA9D,aAAQ,GAAR,QAAQ,CAAS;QAAmB,iBAAY,GAAZ,YAAY,CAAc;QAE3F,+BAA0B,GAAG,YAAY,CAAC,GAAG,EAAE,CAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAAC,yBAAyB,CAAC,EACjC,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CACvD,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CACpE,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,gCAAgC,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,EACzE,iBAAiB,CAAC,CAAC,KAAK,EAAE,EAAE,CAC1B,EAAE,CAAC,8BAA8B,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,IAAI,mCAAmC,EAAE,CAAC,CAAC,CACpG,CACF,CACF,CACF,CACF,CAAC;QAEF,8BAAyB,GAAG,YAAY,CAAC,GAAG,EAAE,CAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAAC,wBAAwB,CAAC,EAChC,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CACvB,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,IAAI,CACnD,GAAG,CAAC,CAAC,gBAAgB,EAAE,EAAE,CAAC,+BAA+B,CAAC,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAChF,iBAAiB,CAAC,CAAC,KAAK,EAAE,EAAE,CAC1B,EAAE,CAAC,6BAA6B,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,IAAI,kCAAkC,EAAE,CAAC,CAAC,CAClG,CACF,CACF,CACF,CACF,CAAC;IA5B4F,CAAC;;uIADpF,sBAAsB;2IAAtB,sBAAsB;4FAAtB,sBAAsB;kBADlC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\nimport { catchErrorWithLog } from '../../utils/operators.util';\nimport { LoansService } from '../../services/loans.service';\nimport {\n  fetchAmortizationPayment,\n  fetchAmortizationPaymentError,\n  fetchAmortizationPaymentSuccess,\n  fetchAmortizationSchedule,\n  fetchAmortizationScheduleError,\n  fetchAmortizationScheduleSuccess,\n} from './actions';\n\n@Injectable()\nexport class PaymentScheduleEffects {\n  constructor(private readonly actions$: Actions, private readonly loansService: LoansService) {}\n\n  fetchAmortizationSchedule$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchAmortizationSchedule),\n      switchMap(({ params: { loanId, from, append, size } }) =>\n        this.loansService.getAmortizationSchedule({ from, size, loanId }).pipe(\n          map((response) => fetchAmortizationScheduleSuccess({ response, append })),\n          catchErrorWithLog((error) =>\n            of(fetchAmortizationScheduleError({ error: error.message || 'Amortization schedule fetch error' })),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  fetchAmortizationPayment$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchAmortizationPayment),\n      switchMap(({ params }) =>\n        this.loansService.getAmortizationPayment(params).pipe(\n          map((amortizedPayment) => fetchAmortizationPaymentSuccess({ amortizedPayment })),\n          catchErrorWithLog((error) =>\n            of(fetchAmortizationPaymentError({ error: error.message || 'Amortization payment fetch error' })),\n          ),\n        ),\n      ),\n    ),\n  );\n}\n"]}