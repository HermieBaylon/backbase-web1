import { Component } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { map } from 'rxjs/operators';
import { LoansStoreService } from '../../../store/loans/store.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../../store/loans/store.service";
import * as i3 from "../loan-summary/loan-summary.component";
import * as i4 from "@backbase/loans-collection-ui-ang";
import * as i5 from "@angular/common";
export class LoanDetailsWrapperComponent {
    constructor(router, activatedRoute, storeService) {
        var _a, _b;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.storeService = storeService;
        /**
         * Stream of account ids from router params
         */
        this.accountId$ = this.activatedRoute.params.pipe(map(({ selectedAccount }) => selectedAccount));
        /**
         * Whether to show / hide navigate to overview btn
         */
        this.showNavigationButton$ = this.storeService.showNavigateToOverview$;
        /**
         * Array of tabs to be displayed
         */
        this.tabs = this.createRouteTabs(((_b = (_a = this.activatedRoute.snapshot) === null || _a === void 0 ? void 0 : _a.routeConfig) === null || _b === void 0 ? void 0 : _b.children) || []);
        this.storeService.fetchAmountOfLoans();
    }
    /**
     * Navigates to the list overview view
     *
     * TODO: set up relative routing
     */
    navigateToAccounts() {
        this.router.navigate(['my-accounts/list']);
    }
    createRouteTabs(routes) {
        return routes
            .filter(({ path, data }) => path && (data === null || data === void 0 ? void 0 : data.titleFn))
            .map(({ path, data }) => ({
            title: data.titleFn(),
            route: path,
        }));
    }
}
/** @nocollapse */ LoanDetailsWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanDetailsWrapperComponent, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }, { token: i2.LoansStoreService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanDetailsWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanDetailsWrapperComponent, selector: "bb-loan-details-wrapper", ngImport: i0, template: "<div class=\"bb-layout__container d-block bb-block--xl mt-5 container-fluid container\">\n  <div class=\"bb-block bb-block--xl\">\n    <button\n      data-role=\"loans-heading-button__navigation\"\n      (click)=\"navigateToAccounts()\"\n      class=\"bb-stack justify-content-start bb-stack--density-sm btn-link-text btn-md btn\"\n    >\n      <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back bb-icon--sm\"></i>\n      <span i18n-navigationButtonTitle=\"Loan details heading nav button title@@loans.details.heading.nav-button.title\"\n        >Back to My Accounts</span\n      >\n    </button>\n  </div>\n\n  <section class=\"bb-block bb-block--xl p--4\">\n    <h2 class=\"sr-only\" i18n=\"Loans details a11y section heading@@loans.details.section.a11y.heading\">Loan details</h2>\n    <bb-loan-summary *ngIf=\"accountId$ | async as accountId\" [loanId]=\"accountId\"></bb-loan-summary>\n  </section>\n\n  <div>\n    <div>\n      <div class=\"bb-card__body\">\n        <bb-loans-tabs data-role=\"loan-details__tabs\" [tabs]=\"tabs\"></bb-loans-tabs>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i3.LoanSummaryComponent, selector: "bb-loan-summary", inputs: ["loanId"] }, { type: i4.LoansTabsComponent, selector: "bb-loans-tabs", inputs: ["tabs"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanDetailsWrapperComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-details-wrapper',
                    templateUrl: './loan-details-wrapper.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i1.ActivatedRoute }, { type: i2.LoansStoreService }]; } });
//# sourceMappingURL=loan-details-wrapper.component.js.map