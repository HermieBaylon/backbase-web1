import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { DOCUMENT } from '@angular/common';
import { filter, pluck, takeUntil } from 'rxjs/operators';
import { combineLatest } from 'rxjs';
import { DestroyableComponent } from '@backbase/loans-collection-ui-ang';
import { scheduleIdParam } from '../../../../../config/route-params.model';
import { PaymentScheduleStoreService } from '../../../../../store/payment-schedule/store.service';
import { isErrorState, isLoadingState, stateMap } from '../../../../../utils/call-state.util';
import { LoansStoreService } from '../../../../../store/loans/store.service';
import { RemoteConfigService } from '@backbase/remote-config-ang';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../../../../store/payment-schedule/store.service";
import * as i3 from "../../../../../store/loans/store.service";
import * as i4 from "@backbase/remote-config-ang";
import * as i5 from "@backbase/ui-ang/modal";
import * as i6 from "./payment-schedule-details-modal-header/payment-schedule-details-modal-header.component";
import * as i7 from "@backbase/loans-collection-ui-ang";
import * as i8 from "@angular/common";
/**
 * @dynamic
 */
export class PaymentScheduleDetailsWrapperComponent extends DestroyableComponent {
    constructor(activatedRoute, router, paymentScheduleStoreService, loansStoreService, document, remoteConfig) {
        super();
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.paymentScheduleStoreService = paymentScheduleStoreService;
        this.loansStoreService = loansStoreService;
        this.document = document;
        this.remoteConfig = remoteConfig;
        this.callStates$ = combineLatest([
            this.paymentScheduleStoreService.amortizedPaymentCallState$,
            this.loansStoreService.loanCallState$,
        ]);
        /**
         *  Stream of payment id param
         */
        this.paymentId$ = this.activatedRoute.params.pipe(pluck(scheduleIdParam));
        /**
         * Stream of scheduled amortized payment
         */
        this.amortizedPayment$ = this.paymentScheduleStoreService.amortizedPayment$;
        /**
         * Flag represents loading state
         */
        this.isLoading$ = this.callStates$.pipe(stateMap(isLoadingState));
        /**
         * Flag represents error state
         */
        this.isErrorState$ = this.callStates$.pipe(stateMap(isErrorState));
        /**
         * Stream of loan
         */
        this.loan$ = this.loansStoreService.loan$;
        /**
         * Hide or show payment status
         */
        this.showPaymentStatus = this.remoteConfig.getValue('show_payment_status_retail_loans');
        /**
         * Modal options
         */
        this.modalOptions = {
            backdrop: 'static',
            keyboard: true,
            centered: true,
            ariaDescribedBy: 'bb-payment-schedule-details-modal-body',
        };
        combineLatest([this.paymentId$, this.loan$])
            .pipe(filter(([, loan]) => Boolean(loan)), takeUntil(this.componentDestroyed$))
            .subscribe(([amortizationPaymentId, loan]) => {
            this.paymentScheduleStoreService.fetchAmortizationPayment({ loanId: loan.id, amortizationPaymentId });
        });
    }
    onCloseModal() {
        this.router.navigate(['..'], { relativeTo: this.activatedRoute });
    }
    onPrint() {
        var _a;
        (_a = this.document.defaultView) === null || _a === void 0 ? void 0 : _a.print();
    }
}
/** @nocollapse */ PaymentScheduleDetailsWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PaymentScheduleDetailsWrapperComponent, deps: [{ token: i1.ActivatedRoute }, { token: i1.Router }, { token: i2.PaymentScheduleStoreService }, { token: i3.LoansStoreService }, { token: DOCUMENT }, { token: i4.RemoteConfigService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PaymentScheduleDetailsWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaymentScheduleDetailsWrapperComponent, selector: "bb-payment-schedule-details-wrapper", usesInheritance: true, ngImport: i0, template: "<bb-modal-ui\n  [modalOptions]=\"modalOptions\"\n  [isOpen]=\"true\"\n  (isOpenChange)=\"onCloseModal()\"\n  data-role=\"bb-loan-payment-schedule-details-modal\"\n>\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-payment-schedule-details-modal-header\n        class=\"bb-stack\"\n        data-role=\"bb-loan-payment-schedule-details-modal__header\"\n        (closeModal)=\"onCloseModal()\"\n        (printModal)=\"onPrint()\"\n      ></bb-payment-schedule-details-modal-header>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <bb-loans-main-container\n        [isLoadingState]=\"isLoading$ | async\"\n        [isErrorState]=\"isErrorState$ | async\"\n        [containerHeightFitToContent]=\"true\"\n        rootWrapperClasses=\"\"\n        contentWrapperClasses=\"\"\n      >\n        <bb-loan-amortized-payment-schedule-details\n          data-role=\"bb-loan-payment-schedule-details-modal__body\"\n          *ngIf=\"amortizedPayment$ | async as amortizedPayment\"\n          [amortizationPayment]=\"amortizedPayment\"\n          [loan]=\"(loan$ | async)!\"\n          [id]=\"modalOptions.ariaDescribedBy\"\n          [showStatus]=\"showPaymentStatus\"\n        ></bb-loan-amortized-payment-schedule-details>\n      </bb-loans-main-container>\n    </ng-template>\n  </bb-modal-body-ui>\n</bb-modal-ui>\n", components: [{ type: i5.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i5.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i6.PaymentScheduleDetailsModalHeaderComponent, selector: "bb-payment-schedule-details-modal-header", outputs: ["printModal", "closeModal"] }, { type: i5.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i7.LoansMainContainerComponent, selector: "bb-loans-main-container", inputs: ["isErrorState", "isLoadingState", "isEmptyState", "containerHeightFitToContent", "contentWrapperClasses", "rootWrapperClasses", "customErrorState", "customLoadingState", "customEmptyState"] }, { type: i7.LoanAmortizedPaymentScheduleDetailsComponent, selector: "bb-loan-amortized-payment-schedule-details", inputs: ["amortizationPayment", "loan", "showStatus"] }], directives: [{ type: i5.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i5.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i8.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PaymentScheduleDetailsWrapperComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payment-schedule-details-wrapper',
                    templateUrl: './payment-schedule-details-wrapper.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i1.Router }, { type: i2.PaymentScheduleStoreService }, { type: i3.LoansStoreService }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i4.RemoteConfigService }]; } });
//# sourceMappingURL=payment-schedule-details-wrapper.component.js.map