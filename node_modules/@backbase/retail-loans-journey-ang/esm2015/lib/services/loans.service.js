import { Injectable } from '@angular/core';
import { map } from 'rxjs/operators';
import { LoansHttpService, } from '@backbase/data-ang/loans';
import { LoansJourneyConfigurationService } from '../loans-journey-configuration';
import { LoanMapperService } from './loan-mapper.service';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/loans";
import * as i2 from "./loan-mapper.service";
import * as i3 from "../loans-journey-configuration";
export class LoansService {
    constructor(loansHttpService, loanMapper, configurationService) {
        this.loansHttpService = loansHttpService;
        this.loanMapper = loanMapper;
        this.configurationService = configurationService;
    }
    getLoans(from) {
        const size = this.configurationService.loanList.itemsPerPage;
        return this.loansHttpService.getLoans({ from, size }, 'response').pipe(map((response) => ({
            items: response.body.loans.map(this.loanMapper.toLoanModel),
            totalCount: this.getTotalCount(response),
        })));
    }
    getLoanById(loanId) {
        return this.loansHttpService.getLoanById({ loanId }).pipe(map(this.loanMapper.toLoanModel));
    }
    getLoansAmount() {
        return this.loansHttpService.headLoans('response').pipe(map(this.getTotalCount));
    }
    getAmortizationSchedule(params) {
        return this.loansHttpService.getAmortizationSchedule(params, 'response').pipe(map((response) => ({
            items: response.body.payments,
            totalCount: this.getTotalCount(response),
        })));
    }
    getAmortizationPayment(params) {
        return this.loansHttpService.getAmortizationPayment(params);
    }
    getTotalCount({ headers }) {
        const totalCount = headers.get('x-total-count');
        if (!totalCount) {
            throw new Error('[bb-loans]: Invalid `x-total-count` header param');
        }
        return parseInt(totalCount, 10);
    }
}
/** @nocollapse */ LoansService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansService, deps: [{ token: i1.LoansHttpService }, { token: i2.LoanMapperService }, { token: i3.LoansJourneyConfigurationService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ LoansService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.LoansHttpService }, { type: i2.LoanMapperService }, { type: i3.LoansJourneyConfigurationService }]; } });
//# sourceMappingURL=loans.service.js.map