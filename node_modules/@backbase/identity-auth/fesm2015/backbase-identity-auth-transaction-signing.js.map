{"version":3,"file":"backbase-identity-auth-transaction-signing.js","sources":["../../../../libs/identity-auth/transaction-signing/util/challenge/challenge.model.ts","../../../../libs/identity-auth/transaction-signing/util/configuration/configuration.model.ts","../../../../libs/identity-auth/transaction-signing/util/countdown/countdown.service.ts","../../../../libs/identity-auth/transaction-signing/util/helper/helper.model.ts","../../../../libs/identity-auth/transaction-signing/util/helper/helper.service.ts","../../../../libs/identity-auth/transaction-signing/util/http-header/http-header.ts","../../../../libs/identity-auth/transaction-signing/util/transaction-amount/transaction-amount.pipe.ts","../../../../libs/identity-auth/transaction-signing/util/translations/header.translations.ts","../../../../libs/identity-auth/transaction-signing/service/transaction-signing.service.ts","../../../../libs/identity-auth/transaction-signing/ui/header/header.component.ts","../../../../libs/identity-auth/transaction-signing/ui/header/header.component.html","../../../../libs/identity-auth/transaction-signing/ui/action-pending/action-pending.component.ts","../../../../libs/identity-auth/transaction-signing/ui/action-pending/action-pending.component.html","../../../../libs/identity-auth/transaction-signing/ui/error/error.component.ts","../../../../libs/identity-auth/transaction-signing/ui/error/error.component.html","../../../../libs/identity-auth/transaction-signing/ui/hard-token/hard-token.component.ts","../../../../libs/identity-auth/transaction-signing/ui/hard-token/hard-token.component.html","../../../../libs/identity-auth/transaction-signing/ui/oob-select-device/oob-select-device.component.ts","../../../../libs/identity-auth/transaction-signing/ui/oob-select-device/oob-select-device.component.html","../../../../libs/identity-auth/transaction-signing/ui/oob-device/oob-device.component.ts","../../../../libs/identity-auth/transaction-signing/ui/oob-device/oob-device.component.html","../../../../libs/identity-auth/transaction-signing/ui/sms-otp/sms-otp.component.ts","../../../../libs/identity-auth/transaction-signing/ui/sms-otp/sms-otp.component.html","../../../../libs/identity-auth/transaction-signing/ui/interface/interface.component.ts","../../../../libs/identity-auth/transaction-signing/ui/interface/interface.component.html","../../../../libs/identity-auth/transaction-signing/feature/transaction-signing.component.ts","../../../../libs/identity-auth/transaction-signing/feature/transaction-signing.component.html","../../../../libs/identity-auth/transaction-signing/interceptor/transaction-signing.interceptor.ts","../../../../libs/identity-auth/transaction-signing/transaction-signing.module.ts","../../../../libs/identity-auth/transaction-signing/backbase-identity-auth-transaction-signing.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n\n/**\n * Data object for a reauthentication request.\n * A response containing an attribute implies that reauthentication did not immediately succeed.\n */\nexport interface ChallengeResponse {\n  /**\n   * The challenge type received after reauthentication.\n   */\n  challengeType?: string;\n  /**\n   * The challenge data used to identify what the user is signing.\n   */\n  challengeData?: object;\n  /**\n   * An error object describing how reauthentication failed.\n   */\n  error?: ChallengeError;\n}\n\n/**\n * Error response for a reauthentication or challenge request.\n * Implies the reauthentication process has failed.\n */\nexport interface ChallengeError {\n  /**\n   * A code identifying the error type to the user.\n   */\n  errorCode: string;\n  /**\n   * A code identifying the error description to the user.\n   */\n  errorDescription?: string;\n}\n\n/**\n * The body returned from the auth server on a challenge error.\n */\nexport interface ChallengeResponseBody {\n  /**\n   * A list of challenges issued by the auth service.\n   */\n  challenges: Challenge[];\n}\n\n/**\n * The body of an individual challenge.\n */\nexport interface Challenge {\n  /**\n   * The type of the challenge.\n   */\n  challengeType: string;\n  /**\n   * The url for posting a response to the challenge.\n   */\n  actionUrl: string;\n  /**\n   * Optional data object defining extra data for the challenge.\n   */\n  data?: object;\n}\n\n/**\n * The type for resolving the challenge flow.\n */\nexport type ChallengeResolve = () => void;\n/**\n * The type for rejecting the challenge flow.\n */\nexport type ChallengeReject = (response: ChallengeResponse) => void;\n\nexport interface CapabilityResponse {\n  challenges: Array<CapabilityChallenge>;\n  data: CapabilityData;\n}\n\nexport interface CapabilityChallenge {\n  challengeType: string;\n  acrValues: string;\n  scope: string;\n}\n\nexport interface CapabilityData {\n  'confirmation-type'?: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n}\n\n/**\n * An interface for a UI component looking to handle transaction signing flow.\n */\nexport interface TransactionSigningHandler {\n  /**\n   * The challenge response received from a reauthentication request.\n   */\n  challenge?: ChallengeResponse;\n  /**\n   * The data returned when the challenge was issued.\n   */\n  transactionData: CapabilityData;\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Config for setting up TransactionSigningModule\n */\nexport interface TransactionSigningConfig {\n  /**\n   * Whether the signing should follow a redirect or headless flow.\n   * (Defaults to false)\n   */\n  useRedirectFlow: boolean;\n  /**\n   * Time between polling attempts in milliseconds.\n   * (Defaults to 3000)\n   */\n  pollingCycleTime: number;\n  /**\n   * Whether resend push notifications are enabled.\n   * (Defaults to false)\n   */\n  enableResendPushNotification: boolean;\n}\n\n/**\n * TransactionSigningConfig Injection Token\n */\nexport const TRANSACTION_SIGNING_CONFIG = new InjectionToken<TransactionSigningConfig>(\n  'TransactionSigningConfig injection token',\n);\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, interval, Observable, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CountdownService {\n  private readonly counter: BehaviorSubject<number> = new BehaviorSubject(0);\n  private readonly finished: Subject<void> = new Subject();\n\n  private dueTime!: number;\n\n  public readonly remainingTime$: Observable<number> = this.counter.asObservable();\n\n  private registerStart(period: number): void {\n    this.counter.next(period);\n    this.dueTime = new Date().getTime() + period * 1000;\n  }\n\n  private get remainingTime(): number {\n    return Math.ceil((this.dueTime - new Date().getTime()) / 1000);\n  }\n\n  start(period: number): void {\n    this.registerStart(period);\n    interval(1000)\n      .pipe(\n        takeUntil(this.finished),\n        map(() => this.remainingTime),\n      )\n      .subscribe((remainingTime) => {\n        if (remainingTime > 0) {\n          this.counter.next(remainingTime);\n        } else {\n          this.counter.next(0);\n          this.finished.next();\n        }\n      });\n  }\n}\n","import { Observable, Subject } from 'rxjs';\n\nexport enum ProgressStatus {\n  CONFIRMATION_PENDING = 'CONFIRMATION_PENDING',\n  USER_DECLINED = 'USER_DECLINED',\n  SYSTEM_DECLINED = 'SYSTEM_DECLINED',\n  PENDING_APPROVAL = 'PENDING_APPROVAL',\n  SENDING = 'SENDING',\n  ACCEPTED = 'ACCEPTED',\n  REJECTED = 'REJECTED',\n  PROCESSED = 'PROCESSED',\n  NO_PROGRESS = 'NO_PROGRESS',\n}\n\nexport enum TransactionStatus {\n  success = 'success',\n  rejected = 'rejected',\n  declined = 'declined',\n  pending = 'pending',\n}\n\nexport type TransactionStatusMap = { [key in keyof typeof TransactionStatus]: Array<string> };\n\nexport type TransactionCallbackFn = (param: TransactionCallbackParam) => void;\n\nexport interface TransactionCallbackParam {\n  status: string;\n  data?: any;\n}\n\nexport interface TransactionSigningOptions {\n  /**\n   * Data that is passed as param to the fetchFn\n   */\n  data: any;\n  /**\n   * Options to configure polling flow.\n   */\n  asyncPollingOptions?: AsyncPollingOptions;\n  /**\n   * A hashmap that contains different mapped statuses for success, rejected, declined, or pending.\n   * This map is used to determine the callback to trigger based on the status returned\n   * from `fetchFn`.\n   */\n  statusMap?: TransactionStatusMap;\n  /**\n   * A function that is fetches the status of the transaction.\n   * This is used for polling when `asyncPollingOptions` are provided\n   */\n  fetchFn?: (param?: any) => Observable<any>;\n  /**\n   * A callback function that is triggered on transaction success.\n   */\n  onSuccess: TransactionCallbackFn;\n  /**\n   * A callback function that is triggered on transaction reject.\n   */\n  onRejected: TransactionCallbackFn;\n  /**\n   * A callback function that is triggered on transaction decline.\n   */\n  onDeclined: TransactionCallbackFn;\n  /**\n   * A callback function that is triggered on invalid statuses or error.\n   */\n  onError: (error: any) => void;\n}\n\nexport interface AsyncPollingOptions {\n  /**\n   * Number of times to retry polling in case of error.\n   * Defaults to 3.\n   */\n  maxRetries?: number;\n  /**\n   * Time interval (in ms) between each polling request.\n   * Defaults to 1000.\n   */\n  pollInterval?: number;\n  /**\n   * The function that determines when the polling should be stopped.\n   * It receives the output of `fetchFn` as param.\n   */\n  pollUntilFn?: (param?: any) => boolean;\n  /**\n   * A subject that determines when the polling should be completed\n   * if the transaction in not yet fulfilled.\n   * This is required to stop polling when the user navigates to a different route.\n   */\n  complete$: Subject<any>;\n}\n","import { Injectable } from '@angular/core';\nimport { from, interval, Observable, of } from 'rxjs';\nimport { filter, first, retry, switchMap, takeUntil } from 'rxjs/operators';\nimport { CapabilityData } from '../challenge/challenge.model';\nimport { AsyncPollingOptions, ProgressStatus, TransactionSigningOptions } from './helper.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TransactionSigningHelperService {\n  private readonly defaultPollInterval = 1000;\n  private readonly defaultMaxRetries = 3;\n  private readonly defaultStatusMap = {\n    success: [ProgressStatus.ACCEPTED, ProgressStatus.PROCESSED, ProgressStatus.PENDING_APPROVAL],\n    rejected: [ProgressStatus.REJECTED],\n    declined: [ProgressStatus.SYSTEM_DECLINED, ProgressStatus.USER_DECLINED],\n    pending: [ProgressStatus.CONFIRMATION_PENDING, ProgressStatus.SENDING],\n  };\n\n  /**\n   * Determines if the response was returned from the Transaction Signing flow.\n   * @param response the data returned after a possible transaction signing request.\n   * @returns boolean\n   */\n  isTransactionSigningResponse(response: CapabilityData) {\n    return response && !!response['confirmation-type'];\n  }\n\n  /**\n   * Polls a fetch function. Designed to run after transaction signing has occurred.\n   * @param data  this is passed to the fetchFn as param.\n   * @param fetchFn a function that triggers an http call.\n   * @param pollOptions options to configure the polling such as pollInterval, maxRetries etc.\n   * @param pendingStatuses array of statuses which determines if the polling should continue.\n   * @returns an Observable that sequencially emits a value based on configured time interval.\n   */\n  setupPolling(\n    data: any,\n    fetchFn: (param: any) => Observable<any>,\n    pollOptions: AsyncPollingOptions,\n    pendingStatuses: string[],\n  ) {\n    const pollUntil = pollOptions.pollUntilFn || this.defaultPollUntilFn.bind(this, pendingStatuses);\n    return interval(pollOptions.pollInterval || this.defaultPollInterval).pipe(\n      takeUntil(pollOptions.complete$),\n      switchMap(() => from(fetchFn(data))),\n      retry(pollOptions.maxRetries || this.defaultMaxRetries),\n      filter((res) => pollUntil(res)),\n      first(),\n    );\n  }\n\n  /**\n   * Handles scenarios after signing a transaction and triggers appropriate callbacks.\n   * @param options Configuration for determining different flows of the transaction.\n   */\n  getTransactionInfo(options: TransactionSigningOptions) {\n    if (options.asyncPollingOptions) {\n      this.handleAsyncPollingFlow(options);\n    } else {\n      this.handleGenericFlow(options);\n    }\n  }\n\n  private defaultPollUntilFn(pendingStatuses: Array<string>, status: string) {\n    return !!status && !pendingStatuses.includes(status);\n  }\n\n  private handleAsyncPollingFlow(options: TransactionSigningOptions) {\n    const { asyncPollingOptions } = options;\n    const { pending } = options.statusMap || this.defaultStatusMap;\n\n    if (options.fetchFn) {\n      this.setupPolling(options.data, options.fetchFn, <AsyncPollingOptions>asyncPollingOptions, pending).subscribe(\n        (status) => {\n          this.triggerTransactionCallback({ status }, options);\n        },\n        (error) => {\n          options.onError(error);\n        },\n      );\n    } else {\n      console.warn('`fetchFn` is mandatory when polling options are provided');\n    }\n  }\n\n  private handleGenericFlow(options: TransactionSigningOptions) {\n    const item$ = options.fetchFn ? options.fetchFn(options.data) : of(options.data);\n\n    item$.pipe(first()).subscribe(\n      (response) => {\n        this.triggerTransactionCallback(response, options);\n      },\n      (error) => {\n        options.onError(error);\n      },\n    );\n  }\n\n  private triggerTransactionCallback(response: any, options: TransactionSigningOptions) {\n    const { status } = response || {};\n    const { success, declined, rejected } = options.statusMap || this.defaultStatusMap;\n\n    if (success.includes(status)) {\n      options.onSuccess(response);\n    } else if (declined.includes(status)) {\n      options.onDeclined(response);\n    } else if (rejected.includes(status)) {\n      options.onRejected(response);\n    } else {\n      options.onError(response);\n    }\n  }\n}\n","import { HttpHeaders, HttpResponseBase } from '@angular/common/http';\n\nfunction getHttpHeaderValueWithName(headers: HttpHeaders, name: string): string | undefined {\n  const headerKey = headers.keys().find((key) => key.toLowerCase() === name);\n  return (headerKey && headers.get(headerKey)) || undefined;\n}\n\nexport function hasStatusWithHeaderValue(\n  response: HttpResponseBase,\n  status: number,\n  headerKey: string,\n  headerValue: string,\n) {\n  const authHeaderValue = getHttpHeaderValueWithName(response.headers, headerKey);\n  return response.status === status && authHeaderValue === headerValue;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ChallengeHardTokenData } from '../hard-token/hard-token.model';\n\n/*\n * Sets the input hard token challenge amount to a fixed number of decimal places.\n * Takes a decimalPlaces argument that defaults to 2.\n */\n@Pipe({\n  name: 'transactionAmount',\n})\nexport class TransactionAmountPipe implements PipeTransform {\n  transform(value: ChallengeHardTokenData, decimalPlaces = 2): string {\n    return Number(value.data.txnData.paymentAmount).toFixed(decimalPlaces);\n  }\n}\n","import '@angular/localize/init';\n\nexport const HeaderPaymentTitle = {\n  defaultPayment: $localize`:@@bb-transaction-signing-header.initiate-payment.title.default-payment:Authorise Payment`,\n  debitPayment: $localize`:@@bb-transaction-signing-header.initiate-payment.title.debit-payment:Authorize Debit`,\n  debitEditedPayment: $localize`:@@bb-transaction-signing-header.initiate-payment.title.debit-payment:Authorize Debit (Edited)`,\n  editedPayment: $localize`:@@bb-transaction-signing-header.initiate-payment.title.debit-payment:Authorise Payment (Edited)`,\n};\n","import { Location } from '@angular/common';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { ɵɵOidcAuthService } from '@backbase/identity-auth';\nimport { Observable, ReplaySubject, Subscriber, throwError } from 'rxjs';\nimport { catchError, first, mapTo, switchMap, withLatestFrom } from 'rxjs/operators';\nimport {\n  CapabilityChallenge,\n  CapabilityData,\n  CapabilityResponse,\n  ChallengeResponse,\n  hasStatusWithHeaderValue,\n  TransactionSigningConfig,\n  TransactionSigningHandler,\n  TRANSACTION_SIGNING_CONFIG,\n} from '../util';\n\n/**\n * Angular Service used to instigate and manage transaction signing for an action.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TransactionSigningService {\n  /**\n   * A subject that emits when a new transaction signing event occurs.\n   * The subject will emit an object containing the initial challenge from\n   * the Identity Auth Server. To respond to this challenge use the\n   * `respondToChallenge` endpoint provided.\n   */\n  readonly requestSubject = new ReplaySubject<TransactionSigningHandler>(1);\n\n  private readonly actionSubject = new ReplaySubject<string>(1);\n  private readonly observerSubject = new ReplaySubject<Subscriber<HttpResponse<unknown>>>(1);\n  private isHandlingTransaction = false;\n  private readonly authHeaderKey = 'www-authenticate';\n  private readonly authHeaderValue = 'Bearer challenge_types=reauth';\n  private readonly authStatus = 401;\n\n  /** @internal */\n  constructor(\n    private readonly httpClient: HttpClient,\n    private readonly location: Location,\n    @Optional() private readonly oidcAuthService: ɵɵOidcAuthService,\n    @Inject(TRANSACTION_SIGNING_CONFIG) private readonly serviceConfig: TransactionSigningConfig,\n  ) {\n    if (!oidcAuthService) {\n      throw new Error(\n        `In order to use ImpersonationService, please include IdentityAuthModule to your application module`,\n      );\n    }\n  }\n\n  /** @internal */\n  initiateTransactionSigning(error: HttpErrorResponse): Observable<HttpResponse<unknown>> {\n    if (\n      !hasStatusWithHeaderValue(error, this.authStatus, this.authHeaderKey, this.authHeaderValue) ||\n      this.isHandlingTransaction\n    ) {\n      return throwError(error);\n    }\n\n    const body: CapabilityResponse = error.error || {};\n    const challenge = this.getFirstChallenge(body);\n    return challenge ? this.authenticateUser(challenge, body.data) : throwError(error);\n  }\n\n  /**\n   * Method that supports the response to an issued challenge.\n   * @param data The data to be submitted in response to the challenge.\n   * @returns an observable that will either be successful or throw a new challenge\n   */\n  respondToChallenge(data: unknown): Observable<unknown | ChallengeResponse> {\n    return this.actionSubject.pipe(\n      first(),\n      switchMap((url) => this.postResponse(url, data)),\n    );\n  }\n\n  /**\n   * Method that will announce to the initiating widget that the transaction signing\n   * process is complete, and that the process was successful.\n   * The widget will be updated with an HttpResponse object containing the initial\n   * transaction data in the body.\n   */\n  completeWithSuccess() {\n    this.observerSubject.pipe(withLatestFrom(this.requestSubject), first()).subscribe({\n      next: ([observer, request]) => {\n        observer.next(new HttpResponse({ body: request.transactionData }));\n        observer.complete();\n        this.isHandlingTransaction = false;\n      },\n    });\n  }\n\n  /**\n   * Method that will announce to the initiating widget that the transaction signing\n   * process is complete, and that the process failed.\n   * The widget will be updated with an HttpErrorResponse object containing the initial\n   * transaction data and the error reason.\n   */\n  completeWithFailure(error: Error) {\n    this.observerSubject.pipe(withLatestFrom(this.requestSubject), first()).subscribe({\n      next: ([observer, request]) => {\n        observer.error(\n          new HttpErrorResponse({\n            status: 401,\n            statusText: error.message,\n            error: {\n              error,\n              data: request.transactionData,\n            },\n          }),\n        );\n        this.isHandlingTransaction = false;\n      },\n    });\n  }\n\n  private getFirstChallenge(body: CapabilityResponse): CapabilityChallenge | undefined {\n    const challenges: Array<CapabilityChallenge> = body.challenges || [];\n    return challenges.find((c) => c.scope !== undefined);\n  }\n\n  private authenticateUser(\n    challenge: CapabilityChallenge,\n    transactionData: CapabilityData,\n  ): Observable<HttpResponse<unknown>> {\n    return this.reauthenticate(challenge).pipe(\n      first(),\n      mapTo(new HttpResponse({ body: transactionData })),\n      catchError((response: ChallengeResponse) => {\n        return new Observable<HttpResponse<unknown>>((observer) => {\n          this.isHandlingTransaction = true;\n          this.requestSubject.next({\n            challenge: response,\n            transactionData,\n          });\n          this.observerSubject.next(observer);\n        });\n      }),\n    );\n  }\n\n  private reauthenticate(challenge: CapabilityChallenge) {\n    const { acrValues, scope } = challenge;\n    return this.oidcAuthService.createReauthLoginUrl(scope, acrValues).pipe(\n      switchMap((url) => {\n        if (this.serviceConfig && this.serviceConfig.useRedirectFlow) {\n          this.location.go(url);\n        }\n        return this.requestChallenge(url);\n      }),\n    );\n  }\n\n  private requestChallenge(url: string) {\n    return this.httpClient\n      .get<unknown | ChallengeResponse>(url, this.getRequestOptions())\n      .pipe(catchError(this.onAuthError));\n  }\n\n  private postResponse(url: string, data: unknown) {\n    return this.httpClient\n      .post<unknown | ChallengeResponse>(url, data, this.getRequestOptions())\n      .pipe(catchError(this.onAuthError));\n  }\n\n  private getRequestOptions() {\n    return {\n      headers: {\n        Accept: '*/*',\n        'X-Convert-Redirects': 'true',\n        Authentication: this.oidcAuthService.authorizationHeader(),\n      },\n      withCredentials: true,\n      observe: 'response' as const,\n    };\n  }\n\n  private onAuthError = (err: HttpErrorResponse): Observable<ChallengeResponse> => {\n    if (err.error && err.error.challenges) {\n      const { challengeType, actionUrl, ...challengeData } = err.error.challenges[0];\n      this.actionSubject.next(this.getActionUrl(actionUrl));\n      return throwError({\n        challengeType,\n        challengeData,\n      });\n    }\n    return throwError(this.getErrorResponse(err));\n  };\n\n  private getErrorResponse(error: HttpErrorResponse): ChallengeResponse {\n    const url = new URL(error.headers.get('location') || error.headers.get('Location') || '');\n    const params = new URLSearchParams(url.search);\n    return {\n      error: {\n        errorCode: params.get('error') || 'unknown_error',\n        errorDescription: params.get('error_description') || undefined,\n      },\n    };\n  }\n\n  private getActionUrl(url: string): string {\n    const idp = new URL(this.oidcAuthService.authConfig.issuer || '');\n    return url.startsWith('/auth') ? `${idp.origin}${url}` : `${idp.origin}/auth${url}`;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CapabilityData, HeaderPaymentTitle } from '../../util';\n\n@Component({\n  selector: 'bb-transaction-signing-header',\n  templateUrl: 'header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionSigningHeaderComponent {\n  @Input() data: CapabilityData | undefined;\n\n  headerPaymentTitle = HeaderPaymentTitle;\n}\n","<ng-container [ngSwitch]=\"data?.['confirmation-type'] || data?.confirmationType\">\n  <div *ngSwitchDefault>\n    <ng-container\n      *ngTemplateOutlet=\"\n      data?.['counter-party-role'] === 'DEBTOR'\n        ? debitHeaderTmpl\n        : defaultHeaderTmpl;\n        context: { $implicit: data, isEdited: (data?.['confirmation-type'] || data?.confirmationType) === 'edit-payment' }\"\n    >\n    </ng-container>\n  </div>\n\n  <div *ngSwitchCase=\"'approve-payment'\">\n    <bb-header-ui\n      headingType=\"h2\"\n      i18n-heading=\"\n        Transaction signing modal title for approve-payment@@bb-transaction-signing-header.approve-payment.title\"\n      heading=\"Authorisation\"\n    >\n    </bb-header-ui>\n    <div\n      *ngIf=\"data?.['counter-party-role'] !== 'DEBTOR'; else debitSubTitle\"\n      data-role=\"ts-modal-subtitle\"\n      i18n=\"\n        Transaction signing modal sub-title for approve-payment@@bb-transaction-signing-header.approve-payment.sub-title\"\n    >\n      Payment of\n      <bb-amount-ui [currency]=\"data?.currency\" [amount]=\"data?.amount\"></bb-amount-ui>\n      to {{ data?.['counter-party-name'] }}.\n    </div>\n  </div>\n  <div *ngSwitchCase=\"'approve-batch'\">\n    <bb-header-ui\n      headingType=\"h2\"\n      i18n-heading=\"\n        Transaction signing modal title for approve-batch@@bb-transaction-signing-header.approve-batch.title\"\n      heading=\"Authorisation\"\n    >\n    </bb-header-ui>\n    <div\n      data-role=\"ts-modal-subtitle\"\n      i18n=\"\n        Transaction signing modal sub-title for approve-batch@@bb-transaction-signing-header.approve-batch.sub-title\"\n    >\n      Batch with a total value of<br />\n      <bb-amount-ui [currency]=\"data?.currency\" [amount]=\"data?.totalAmount\"></bb-amount-ui>\n      to {{ data?.totalTransactionsCount }} {data?.totalTransactionsCount, plural, =1 {transfer} other {transfers}}\n      (multiple accounts).\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #debitHeaderTmpl let-data let-isEdited=\"isEdited\">\n  <bb-header-ui\n    headingType=\"h2\"\n    [heading]=\"isEdited ? headerPaymentTitle.debitEditedPayment : headerPaymentTitle.debitPayment\"\n  >\n  </bb-header-ui>\n\n  <ng-container *ngTemplateOutlet=\"debitSubTitle\"></ng-container>\n</ng-template>\n\n<ng-template #defaultHeaderTmpl let-data let-isEdited=\"isEdited\">\n  <bb-header-ui\n    headingType=\"h2\"\n    [heading]=\"isEdited ? headerPaymentTitle.editedPayment : headerPaymentTitle.defaultPayment\"\n  >\n  </bb-header-ui>\n\n  <div\n    data-role=\"ts-modal-subtitle\"\n    i18n=\"\n      Transaction signing modal sub-title for initiate-payment@@bb-transaction-signing-header.initiate-payment.sub-title\"\n  >\n    Send\n    <bb-amount-ui [currency]=\"data?.currency\" [amount]=\"data?.amount\"></bb-amount-ui>\n    to {{ data?.['counter-party-name'] }}.\n  </div>\n</ng-template>\n\n<ng-template #debitSubTitle>\n  <div\n    data-role=\"ts-modal-subtitle\"\n    i18n=\"\n      Transaction signing modal sub-title for\n      initiate-payment@@bb-transaction-signing-header.initiate-payment-debit.sub-title\"\n  >\n    Receive\n    <bb-amount-ui [currency]=\"data?.currency\" [amount]=\"data?.amount\"></bb-amount-ui>\n    from {{ data?.['counter-party-name'] }}.\n  </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'bb-transaction-signing-action-pending',\n  templateUrl: 'action-pending.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionSigningActionPendingComponent {}\n","<bb-loading-indicator-ui\n  data-role=\"ts-action-pending\"\n  loaderSize=\"lg\"\n  i18n-text=\"Transaction signing action pending text@@bb-transaction-signing-action-pending.text\"\n  text=\"Performing action...\"\n>\n</bb-loading-indicator-ui>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ChallengeError } from '../../util';\n\n@Component({\n  selector: 'bb-transaction-signing-error',\n  templateUrl: 'error.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionSigningErrorComponent {\n  @Output() closeModal = new EventEmitter<Error>();\n  @Input() error: ChallengeError | undefined;\n\n  onClose() {\n    this.closeModal.emit(new Error(this.error && (this.error.errorDescription || this.error.errorCode)));\n  }\n}\n","<div class=\"bb-block bb-block--md\" data-role=\"ts-error\">\n  <div class=\"bb-block bb-block--md\">\n    <ng-container *ngTemplateOutlet=\"tsErrorState\"></ng-container>\n  </div>\n  <div class=\"bb-button-bar bb-button-bar--center\">\n    <button\n      bbButton\n      data-role=\"ts-accept-error\"\n      class=\"bb-button-bar__button\"\n      color=\"primary\"\n      i18n=\"Cancel transaction button@@bb-transaction-signing-error.cancel\"\n      (click)=\"onClose()\"\n    >\n      Close\n    </button>\n  </div>\n</div>\n\n<ng-template #tsErrorState>\n  <ng-container [ngSwitch]=\"error?.errorDescription\">\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'invalid_token'\"\n      iconSize=\"xxl\"\n      iconModifier=\"lock\"\n      i18n-title=\"Transaction signing invalid token title@@bb-transaction-signing-error.invalid-token.title\"\n      title=\"Access denied\"\n      i18n-subtitle=\"Transaction signing invalid token subtitle@@bb-transaction-signing-error.invalid-token.subtitle\"\n      subtitle=\"We were unable to process this transaction. Please cancel this dialogue and try again.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'confirmation_not_found'\"\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n      i18n-title=\"Transaction signing not found title@@bb-transaction-signing-error.not-found.title\"\n      title=\"No confirmation found\"\n      i18n-subtitle=\"Transaction signing not found subtitle@@bb-transaction-signing-error.not-found.subtitle\"\n      subtitle=\"We were unable to process this transaction. Please cancel this dialogue and try again.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'confirmation_is_not_pending'\"\n      iconSize=\"xxl\"\n      iconModifier=\"access-alarm\"\n      i18n-title=\"Transaction signing not pending title@@bb-transaction-signing-error.not-pending.title\"\n      title=\"The confirmation has expired\"\n      i18n-subtitle=\"Transaction signing not pending subtitle@@bb-transaction-signing-error.not-pending.subtitle\"\n      subtitle=\"This transaction has timed out and been cancelled. Please cancel this dialogue and try again.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'confirmation_user_mismatch'\"\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n      i18n-title=\"Transaction signing user mismatch title@@bb-transaction-signing-error.user-mismatch.title\"\n      title=\"Something went wrong\"\n      i18n-subtitle=\"Transaction signing user mismatch subtitle@@bb-transaction-signing-error.user-mismatch.subtitle\"\n      subtitle=\"You do not have permission to confirm this action. Please cancel this dialogue and try again.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'rejected_by_user'\"\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n      i18n-title=\"Transaction signing rejected title@@bb-transaction-signing-error.rejected.title\"\n      title=\"Transaction rejected by user\"\n      i18n-subtitle=\"Transaction signing rejected subtitle@@bb-transaction-signing-error.rejected.subtitle\"\n      subtitle=\"We were unable to process this transaction. Please cancel this dialogue and try again.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'user_disabled'\"\n      iconSize=\"xxl\"\n      iconModifier=\"lock\"\n      i18n-title=\"Transaction signing disabled title@@bb-transaction-signing-error.disabled.title\"\n      title=\"Unable to process transaction\"\n      i18n-subtitle=\"Transaction signing disabled subtitle@@bb-transaction-signing-error.disabled.subtitle\"\n      subtitle=\"This user is currently locked. Please cancel the dialogue and unlock your account before retrying the action.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'user_temporarily_disabled'\"\n      iconSize=\"xxl\"\n      iconModifier=\"lock\"\n      i18n-title=\"\n        Transaction signing temporarily disabled title@@bb-transaction-signing-error.temporarily-disabled.title\"\n      title=\"Unable to process transaction\"\n      i18n-subtitle=\"\n        Transaction signing temporarily disabled subtitle@@bb-transaction-signing-error.temporarily-disabled.subtitle\"\n      subtitle=\"This user is currently locked. Please cancel the dialogue and unlock your account before retrying the action.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'unsupported_challenge'\"\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n      i18n-title=\"\n        Transaction signing unsupported challenge title@@bb-transaction-signing-error.unsupported-challenge.title\"\n      title=\"Unable to process request\"\n      i18n-subtitle=\"\n        Transaction signing unsupported challenge subtitle@@bb-transaction-signing-error.unsupported-challenge.subtitle\"\n      subtitle=\"The transaction requires an unsupported challenge. Please cancel this dialogue and contact an admin.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'challenge_not_found'\"\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n      i18n-title=\"Transaction signing challenge not found title@@bb-transaction-signing-error.challenge-not-found.title\"\n      title=\"Something went wrong\"\n      i18n-subtitle=\"\n        Transaction signing challenge not found subtitle@@bb-transaction-signing-error.challenge-not-found.subtitle\"\n      subtitle=\"We were unable to process this transaction. Please cancel this dialogue and try again.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'hard_token_integration_error'\"\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n      i18n-title=\"\n        Transaction signing hard token integration title@@bb-transaction-signing-error.hard-token-integration.title\"\n      title=\"Something went wrong\"\n      i18n-subtitle=\"\n        Transaction signing hard token integration\n        subtitle@@bb-transaction-signing-error.hard-token-integration.subtitle\"\n      subtitle=\"We could not reach the hard-token vendor to confirm your response. Please cancel this dialogue and try again.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchCase=\"'no_devices_registered'\"\n      iconSize=\"xxl\"\n      iconModifier=\"phonelink-off\"\n      i18n-title=\"\n        Transaction signing no devices registered title@@bb-transaction-signing-error.no-devices-registered.title\"\n      title=\"No devices available\"\n      i18n-subtitle=\"\n        Transaction signing no devices registered subtitle@@bb-transaction-signing-error.no-devices-registered.subtitle\"\n      subtitle=\"We were unable to process this transaction as no devices are registered. Please cancel this dialogue and try again.\"\n    >\n    </bb-empty-state-ui>\n    <bb-empty-state-ui\n      *ngSwitchDefault\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n      i18n-title=\"Transaction signing default error title@@bb-transaction-signing-error.default.title\"\n      title=\"Something went wrong\"\n      i18n-subtitle=\"Transaction signing default error subtitle@@bb-transaction-signing-error.default.subtitle\"\n      subtitle=\"We have experienced a critical error on this transaction. Please cancel this dialogue and try again.\"\n    >\n    </bb-empty-state-ui>\n  </ng-container>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ChallengeError, ChallengeHardTokenData, HardTokenResponse } from '../../util';\n\n@Component({\n  selector: 'bb-transaction-signing-hard-token',\n  templateUrl: 'hard-token.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionSigningHardTokenComponent {\n  @Output() cancel = new EventEmitter<void>();\n  @Output() submitResponse = new EventEmitter<HardTokenResponse>();\n  @Output() acceptError = new EventEmitter<Error>();\n\n  @Input()\n  set data(value: ChallengeHardTokenData) {\n    this.challengeData = value;\n    this.displayAlert = false;\n    this.displayErrors = false;\n  }\n\n  get data() {\n    if (!this.challengeData) {\n      throw new Error('No challenge data set');\n    }\n    return this.challengeData;\n  }\n\n  @Input()\n  set error(value: ChallengeError | undefined) {\n    this.displayAlert = false;\n    this.displayErrors = false;\n    if (value && this.isRecognizedError(value)) {\n      this.displayAlert = true;\n    } else {\n      this.errorValue = value;\n    }\n  }\n\n  get error() {\n    return this.errorValue;\n  }\n\n  private readonly invalidRequestError = 'invalid_request';\n  private displayErrors = false;\n  readonly form: FormGroup = this.formBuilder.group({\n    otp: ['', [Validators.required, Validators.pattern(/^\\d{6}$/)]],\n  });\n  errorValue: ChallengeError | undefined;\n  challengeData: ChallengeHardTokenData | undefined;\n  displayAlert = false;\n\n  constructor(private readonly formBuilder: FormBuilder) {}\n\n  onSubmit() {\n    this.displayErrors = true;\n    if (this.form.valid) {\n      this.submitResponse.emit({\n        ...this.form.value,\n        code: this.data.data.code,\n      } as HardTokenResponse);\n    }\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  onErrorClose(error: Error) {\n    this.acceptError.emit(error);\n  }\n\n  hasError(control: AbstractControl) {\n    return this.displayErrors && control.errors && (control.errors.required || control.errors.pattern);\n  }\n\n  private isRecognizedError(error: ChallengeError) {\n    return error.errorCode === this.invalidRequestError && error.errorDescription === this.invalidRequestError;\n  }\n}\n","<bb-transaction-signing-error\n  *ngIf=\"errorValue; else displayForm\"\n  [error]=\"errorValue\"\n  (closeModal)=\"onErrorClose($event)\"\n>\n</bb-transaction-signing-error>\n\n<ng-template #displayForm>\n  <bb-alert-ui\n    *ngIf=\"displayAlert\"\n    data-role=\"ts-hard-token-no-value-alert\"\n    i18n-title=\"No value alert title for hard token signing@@bb-hard-token-signing.alert.no-value.title\"\n    title=\"No value entered\"\n  >\n    <span i18n=\"No value alert message for hard token signing@@bb-hard-token-signing.alert.no-value.message\">\n      Please enter the value displayed on your {{ data.data.vendorDetails.model }} device.\n    </span>\n  </bb-alert-ui>\n  <bb-alert-ui\n    *ngIf=\"data.remainingAuthenticationAttempts !== undefined\"\n    data-role=\"ts-hard-token-remaining-alert\"\n    i18n-title=\"Remaining attempts alert title for hard token signing@@bb-hard-token-signing.alert.remaining.title\"\n    title=\"Authorization failed\"\n  >\n    <span i18n=\"Remaining attempts alert message for hard token signing@@bb-hard-token-signing.alert.remaining.message\">\n      The number you entered was incorrect. <br />\n      You have {{ data.remainingAuthenticationAttempts }} other {data.remainingAuthenticationAttempts, plural, =1\n      {attempt} other {attempts}} remaining.\n    </span>\n  </bb-alert-ui>\n  <div class=\"bb-block bb-block--md\" i18n=\"Instruction for hard token signing@@bb-hard-token-signing.instruction\">\n    Using your {{ data.data.vendorDetails.model }} device, follow these steps\n  </div>\n\n  <form [formGroup]=\"form\" (submit)=\"onSubmit()\" class=\"bb-block bb-block--md\">\n    <ol data-role=\"hard-token-txn-widget__form\" class=\"bb-ordered-list bb-block bb-block--md\">\n      <li data-role=\"hard-token-txn-widget__form-sign\" class=\"bb-block bb-block--sm\">\n        <span i18n=\"Step 1 for hard token signing@@bb-hard-token-signing.steps.1\">\n          Press '<strong>sign</strong>' on your device\n        </span>\n      </li>\n      <li data-role=\"hard-token-txn-widget__form-enter-pin\" class=\"bb-block bb-block--sm\">\n        <span i18n=\"Step 2 for hard token signing@@bb-hard-token-signing.steps.2\">\n          Enter your pin in to your device\n        </span>\n      </li>\n      <li data-role=\"hard-token-txn-widget__form-reference-number\" class=\"bb-block bb-block--sm\">\n        <span i18n=\"Step 3 for hard token signing@@bb-hard-token-signing.steps.3\"> Enter the `reference number` </span>\n        <br />\n        <span class=\"bb-hero\">\n          {{ data.data.code }}\n        </span>\n      </li>\n      <li\n        data-role=\"hard-token-txn-widget__form-transaction-amount\"\n        *ngIf=\"data.data.txnData.paymentAmount !== undefined\"\n        class=\"bb-block bb-block--sm\"\n      >\n        <span i18n=\"Step 4 (when amount present) for hard token signing@@bb-hard-token-signing.steps.4\">\n          Enter the transaction amount\n        </span>\n        <br />\n        <span class=\"bb-hero\">\n          {{ data | transactionAmount }}\n        </span>\n      </li>\n      <li data-role=\"hard-token-txn-widget__form-insert-number\" class=\"bb-block bb-block--sm\">\n        <span\n          data-role=\"hard-token-txn-widget__form-insert-number__financial\"\n          i18n=\"Step 5 (when amount present), or step 4 for hard token signing@@bb-hard-token-signing.steps.5\"\n        >\n          Insert the number produced on your {{ data.data.vendorDetails.model }} device\n        </span>\n        <br />\n        <div class=\"form-group\">\n          <bb-input-text-ui\n            data-role=\"ts-hard-token-otp\"\n            class=\"bb-form-field bb-form-field--xs\"\n            formControlName=\"otp\"\n            i18n-attr.aria-label=\"Aria label for otp field input@@bb-hard-token-signing.otp.aria-label\"\n            attr.aria-label=\"Insert the number produced on your {{ data.data.vendorDetails.model }} device\"\n            [maxLength]=\"6\"\n            [minLength]=\"6\"\n          >\n          </bb-input-text-ui>\n          <bb-input-validation-message-ui [showErrors]=\"hasError(form.controls.otp)\">\n            <span\n              data-role=\"ts-hard-token-otp-error\"\n              i18n=\"Otp input length error message@@bb-hard-token-signing.otp.errors.length\"\n            >\n              The value must be exactly 6 numbers.\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n      </li>\n    </ol>\n\n    <div class=\"bb-button-bar\">\n      <button\n        bbButton\n        data-role=\"ts-hard-token-complete\"\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        type=\"submit\"\n        i18n=\"Complete button@@bb-hard-token-signing.complete\"\n      >\n        Complete\n      </button>\n      <button\n        bbButton\n        data-role=\"ts-hard-token-cancel\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"onCancel()\"\n        i18n=\"Cancel button@@bb-hard-token-signing.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ChallengeError, ChallengeOobSelectDeviceData, DeviceInformationData, OobSelectDeviceEvent } from '../../util';\n\n@Component({\n  selector: 'bb-transaction-signing-oob-select-device',\n  templateUrl: 'oob-select-device.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionSigningOobSelectDeviceComponent {\n  @Output() cancel = new EventEmitter<void>();\n  @Output() acceptError = new EventEmitter<Error>();\n  @Output() submitResponse = new EventEmitter<OobSelectDeviceEvent>();\n\n  @Input()\n  set data(value: ChallengeOobSelectDeviceData) {\n    this.challengeData = value;\n  }\n\n  get data(): ChallengeOobSelectDeviceData | never {\n    if (!this.challengeData) {\n      throw new Error('No challenge data set');\n    }\n    return this.challengeData;\n  }\n\n  @Input() error: ChallengeError | undefined;\n\n  readonly form: FormGroup = this.formBuilder.group({\n    device: [undefined, Validators.required],\n  });\n\n  challengeData: ChallengeOobSelectDeviceData | undefined;\n  showErrors = false;\n\n  constructor(private readonly formBuilder: FormBuilder) {}\n\n  onSubmit(): void {\n    this.showErrors = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submitResponse.emit({ deviceId: this.form.controls.device.value } as OobSelectDeviceEvent);\n  }\n\n  onCancel(): void {\n    this.cancel.emit();\n  }\n\n  deviceHasFriendlyName(device: DeviceInformationData): boolean {\n    return typeof device.friendlyName === 'string';\n  }\n\n  deviceGetVendorModelName(device: DeviceInformationData): string | boolean {\n    return device.vendor && device.model ? `${device.vendor} ${device.model}` : false;\n  }\n\n  get showDeviceNotChosenError(): boolean {\n    return !this.form.value.device;\n  }\n}\n","<bb-transaction-signing-error *ngIf=\"error; else displayForm\" [error]=\"error\" (closeModal)=\"acceptError.emit($event)\">\n</bb-transaction-signing-error>\n\n<ng-template #displayForm>\n  <form [formGroup]=\"form\" (submit)=\"onSubmit()\" class=\"bb-block bb-block--md\">\n    <label\n      for=\"bb-transaction-signing-select-device-dropdown\"\n      i18n=\"Select device text@@bb-oob-select-device-signing.text.label\"\n    >\n      Select the device you would like to sign this transaction with.\n    </label>\n    <p>\n      <small i18n=\"Devices ordered text@@bb-oob-select-device-signing.text.hint\">\n        (Devices ordered by most recent registered)\n      </small>\n    </p>\n\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        data-role=\"ts-select-device-control\"\n        id=\"bb-transaction-signing-select-device-dropdown\"\n        i18n-placeholder=\"Select device placeholder@@bb-oob-select-device-signing.input.select-placeholder\"\n        placeholder=\"Select a device...\"\n        formControlName=\"device\"\n        [required]=\"true\"\n      >\n        <ng-container *ngIf=\"challengeData && challengeData.devices\">\n          <ng-container *ngFor=\"let device of challengeData.devices\">\n            <bb-dropdown-single-select-option-ui\n              *ngIf=\"deviceHasFriendlyName(device); else noFriendlyNameDevice\"\n              data-role=\"ts-oob-select-device-option-with-name\"\n              label=\"{{ device.friendlyName }} (Registered on: {{ device.created | date: 'medium' }})\"\n              i18n-label=\"\n                Select device friendly name option@@bb-oob-select-device-signing.input.select-option-friendly-name\"\n              [value]=\"device.deviceId\"\n            >\n            </bb-dropdown-single-select-option-ui>\n\n            <ng-template #noFriendlyNameDevice>\n              <ng-container\n                *ngIf=\"device.vendor && device.model; then displayVendorModelDevice; else displayUnknownDevice\"\n              ></ng-container>\n            </ng-template>\n\n            <ng-template #displayVendorModelDevice>\n              <bb-dropdown-single-select-option-ui\n                data-role=\"ts-oob-select-device-option-with-vendor-model\"\n                label=\"{{ deviceGetVendorModelName(device) }} (Registered on: {{ device.created | date: 'medium' }})\"\n                i18n-label=\"\n                  Select device vendor model option@@bb-oob-select-device-signing.input.select-option-vendor-model\"\n                [value]=\"device.deviceId\"\n              >\n              </bb-dropdown-single-select-option-ui>\n            </ng-template>\n            <ng-template #displayUnknownDevice>\n              <bb-dropdown-single-select-option-ui\n                data-role=\"ts-oob-select-device-option-without-name\"\n                label=\"Unknown Device (Registered on: {{ device.created | date: 'medium' }})\"\n                i18n-label=\"Select device unknown option@@bb-oob-select-device-signing.input.select-option-unknown\"\n                [value]=\"device.deviceId\"\n              >\n              </bb-dropdown-single-select-option-ui>\n            </ng-template>\n          </ng-container>\n        </ng-container>\n      </bb-dropdown-single-select-ui>\n      <bb-input-validation-message-ui [showErrors]=\"showErrors\">\n        <span\n          *ngIf=\"showDeviceNotChosenError\"\n          data-role=\"ts-oob-select-device-missing-error\"\n          i18n=\"Device not chosen error message@@bb-oob-select-device-signing.errors.missing\"\n        >\n          You must choose a device.\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <p>\n      <strong\n        i18n=\"Selected device action description@@bb-oob-select-device-signing.text.selected-action-description\"\n        data-role=\"ts-select-device-validation-message\"\n      >\n        Your selected device will be sent a notification to sign the transaction.\n      </strong>\n    </p>\n    <hr />\n    <p>\n      <small i18n=\"Navigation away notice@@bb-oob-select-device-signing.text.navigation-away\">\n        Note: Navigation away from this modal will result in a cancellation of this transaction signing process.\n      </small>\n    </p>\n\n    <div class=\"bb-button-bar\">\n      <button\n        bbButton\n        data-role=\"ts-select-device-continue\"\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        type=\"submit\"\n        i18n=\"Complete button@@bb-oob-select-device-signing.complete\"\n      >\n        Continue\n      </button>\n      <button\n        bbButton\n        data-role=\"ts-select-device-cancel\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"onCancel()\"\n        i18n=\"Cancel button@@bb-oob-select-device-signing.cancel\"\n      >\n        Cancel transaction\n      </button>\n    </div>\n  </form>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  ChallengeError,\n  ChallengeOobDeviceData,\n  CountdownService,\n  OobDeviceInfo,\n  OobNotificationInfo,\n} from '../../util';\n\n@Component({\n  selector: 'bb-transaction-signing-oob-device',\n  templateUrl: 'oob-device.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionSigningOobDeviceComponent implements OnInit {\n  @Output() acceptError = new EventEmitter<Error>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() poll = new EventEmitter<void>();\n  @Output() resend = new EventEmitter<void>();\n\n  @Input() error: ChallengeError | undefined;\n\n  @Input() enableResendPushNotification!: boolean;\n\n  get data() {\n    if (!this.challengeData) {\n      throw new Error('No challenge data set');\n    }\n    return this.challengeData;\n  }\n\n  @Input()\n  set data(value: ChallengeOobDeviceData | undefined) {\n    this.challengeData = value;\n\n    if (this.challengeData) {\n      this.deviceInfo = this.challengeData.data.deviceInformation;\n\n      this.pushNotificationData = this.challengeData.data.pushNotificationInformation;\n      this.setResendTime();\n    }\n\n    if (this.deviceInfo) {\n      this.icon = this.deviceInfo.vendor === 'Apple' ? 'phone-iphone' : 'phone-android';\n    }\n  }\n\n  get pushData(): OobNotificationInfo {\n    if (!this.pushNotificationData) {\n      throw new Error('No push notification data set');\n    }\n    return this.pushNotificationData;\n  }\n\n  get pushFailure(): boolean {\n    return this.enableResendPushNotification && !this.pushData.sendSuccessful;\n  }\n\n  icon = '';\n  challengeData: ChallengeOobDeviceData | undefined;\n  deviceInfo: OobDeviceInfo | undefined;\n  private pushNotificationData: OobNotificationInfo | undefined;\n  readonly timeUntilResend$: Observable<number> = this.countdown.remainingTime$;\n\n  constructor(private countdown: CountdownService) {}\n\n  ngOnInit(): void {\n    this.poll.emit();\n  }\n\n  private setResendTime(): void {\n    if (this.pushData.nextResendSeconds > 0) {\n      this.countdown.start(this.pushData.nextResendSeconds);\n    }\n  }\n}\n","<bb-transaction-signing-error\n  *ngIf=\"error; else displayHoldingScreen\"\n  [error]=\"error\"\n  (closeModal)=\"acceptError.emit($event)\"\n>\n</bb-transaction-signing-error>\n\n<ng-template #displayHoldingScreen>\n  <bb-alert-ui\n    *ngIf=\"pushFailure\"\n    data-role=\"ts-oob-device-incorrect-alert\"\n    i18n-title=\"\n      Failure to send push notification for out of band device transaction\n      signing@@bb-transaction-signing-oob-device.alert.failure.title\"\n    title=\"Push notification failure\"\n  >\n    <span\n      i18n=\"\n        Incorrect attempts alert message for sms otp signing@@bb-transaction-signing-oob-device.alert.failure.message\"\n    >\n      Failure to send push notification. Please open your app to complete the transaction.\n    </span>\n  </bb-alert-ui>\n\n  <div class=\"bb-block bb-block--md\">\n    <div\n      data-role=\"oob-device-title\"\n      class=\"bb-highlight bb-block bb-block--md\"\n      i18n=\"Instruction for oob device signing@@bb-transaction-signing-oob-device.instruction.check-device-header\"\n    >\n      Check your device:\n    </div>\n    <div class=\"bb-stack\">\n      <bb-icon-ui class=\"bb-stack__item\" [name]=\"icon\" size=\"xl\" data-role=\"oob-device-icon\"></bb-icon-ui>\n      <div>\n        <div *ngIf=\"deviceInfo?.friendlyName; else defaultFriendlyName\" class=\"bb-stack__item bb-highlight\">\n          <span data-role=\"oob-device-friendly-name\">{{ deviceInfo?.friendlyName }}</span>\n        </div>\n        <div *ngIf=\"deviceInfo?.vendor && deviceInfo?.model; else defaultVendor\" class=\"bb-stack__item bb-text-support\">\n          <span data-role=\"oob-device-vendor-model\">{{ deviceInfo?.vendor }} {{ deviceInfo?.model }}</span>\n        </div>\n        <div class=\"bb-stack__item bb-text-support bb-subheader bb-subheader--regular\">\n          <span\n            data-role=\"oob-device-registered-date\"\n            i18n=\"Device registered date@@bb-transaction-signing-oob-device.registered-date\"\n          >\n            Registered on: {{ deviceInfo?.created | date: 'medium' }}</span\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"bb-block bb-block--md\"\n    i18n=\"Instruction for oob device signing@@bb-transaction-signing-oob-device.instruction\"\n  >\n    <strong>Please sign this transaction through your banking app. When confirmed, this page will refresh.</strong>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <ng-container *ngIf=\"enableResendPushNotification\">\n      <hr />\n\n      <div class=\"bb-block bb-block--sm\">\n        <span\n          data-role=\"oob-no-notification-title\"\n          class=\"bb-highlight\"\n          i18n=\"No notification received@@bb-oob-notification-signing.resend.no-notification\"\n        >\n          Didn't receive the notification?\n        </span>\n      </div>\n\n      <ng-container *ngIf=\"pushData.resendAttemptsLeft > 0; else displayNoRemainingRequests\">\n        <ng-container *ngIf=\"timeUntilResend$ | async as time; else displayResendButton\">\n          <span\n            class=\"bb-subtitle bb-text-support bb-block bb-block--sm\"\n            i18n=\"Time before resend@@bb-oob-notification-signing.resend.time-before\"\n          >\n            Next resend available in {{ time }} {time, plural, =1 {second} other {seconds}}\n          </span>\n        </ng-container>\n\n        <ng-template #displayResendButton>\n          <div class=\"bb-block bb-block--sm\">\n            <button\n              bbButton\n              buttonSize=\"md\"\n              data-role=\"oob-device-resend\"\n              color=\"link-text\"\n              i18n=\"Resend OOB notification button@@bb-oob-notification-signing.resend\"\n              (click)=\"this.resend.emit()\"\n            >\n              Send another notification\n            </button>\n          </div>\n\n          <div class=\"bb-text-support\">\n            <span\n              [ngClass]=\"{ 'bb-text-danger': pushData.resendAttemptsLeft === 1 }\"\n              i18n=\"Message resend alert message for oob signin@@bb-oob-signing.alert.resend.message\"\n            >\n              You have {{ pushData.resendAttemptsLeft }} resend {pushData.resendAttemptsLeft, plural, =1 {attempt} other\n              {attempts}} left.\n            </span>\n          </div>\n        </ng-template>\n      </ng-container>\n\n      <ng-template #displayNoRemainingRequests>\n        <span\n          data-role=\"ts-oob-device-no-resend\"\n          class=\"bb-subtitle bb-text-danger\"\n          i18n=\"No device push notification resend attempts remaining@@bb-transaction-signing-oob-device.no-resend\"\n        >\n          You are out of resend attempts.\n        </span>\n      </ng-template>\n    </ng-container>\n  </div>\n\n  <hr />\n\n  <div class=\"bb-block bb-block--lg\">\n    <small i18n=\"Helper text for oob device signing@@bb-transaction-signing-oob-device.helper\">\n      Note: Navigation away from this modal will result in a cancellation of this transaction signing process.\n    </small>\n  </div>\n\n  <div class=\"bb-button-bar\">\n    <button\n      bbButton\n      data-role=\"oob-device-cancel\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n      (click)=\"cancel.emit()\"\n      i18n=\"Cancel button@@bb-transaction-signing-oob-device.cancel\"\n    >\n      Cancel transaction\n    </button>\n  </div>\n\n  <ng-template\n    #defaultFriendlyName\n    i18n=\"Default friendly name@@bb-transaction-signing-oob-device.default-friendly-name\"\n  >\n    <span data-role=\"oob-device-friendly-name-default\">Unknown Device</span>\n  </ng-template>\n\n  <ng-template #defaultVendor i18n=\"Device vendor default text@@bb-transaction-signing-oob-device.default-vendor\">\n    <span data-role=\"oob-device-vendor-default\">Unknown</span>\n  </ng-template>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ChallengeError, ChallengeSmsOtpData, CountdownService, SmsOtpResponse } from '../../util';\n\n@Component({\n  selector: 'bb-transaction-signing-sms-otp',\n  templateUrl: 'sms-otp.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionSigningSmsOtpComponent implements OnChanges {\n  @Output() cancel = new EventEmitter<void>();\n  @Output() submitResponse = new EventEmitter<SmsOtpResponse>();\n  @Output() acceptError = new EventEmitter<Error>();\n  @Output() resend = new EventEmitter<void>();\n  @Input() previousData: ChallengeSmsOtpData | undefined;\n\n  @Input()\n  set data(value: ChallengeSmsOtpData) {\n    this.setOtpValidators(value.expectedOtpLength);\n    this.clearAlerts();\n    this.setResendCountdown(value);\n  }\n\n  get data() {\n    if (!this.challengeData) {\n      throw new Error('No challenge data set');\n    }\n    return this.challengeData;\n  }\n\n  @Input()\n  set error(value: ChallengeError | undefined) {\n    if (!value || !this.isRecognizedError(value)) {\n      this.errorValue = value;\n      return;\n    }\n\n    this.clearAlerts();\n    this.form.reset();\n    this.form.markAllAsTouched();\n    this.displayMissingAlert = true;\n  }\n\n  get error() {\n    return this.errorValue;\n  }\n\n  private readonly invalidRequestError = 'invalid_request';\n  readonly form: FormGroup = this.formBuilder.group({\n    otp: ['', [Validators.required, Validators.pattern(/^\\d{6}$/)]],\n  });\n  readonly timeUntilResend$: Observable<number> = this.countdown.remainingTime$;\n  errorValue: ChallengeError | undefined;\n  challengeData: ChallengeSmsOtpData | undefined;\n  displayIncorrectAlert = false;\n  displayMissingAlert = false;\n  displayRemainingAlert = false;\n  displayResendAlert = false;\n\n  constructor(private readonly formBuilder: FormBuilder, private countdown: CountdownService) {}\n\n  ngOnChanges(changes: any) {\n    this.setResendOptions(changes.data.currentValue.remainingOtpRequests);\n    this.setRemainingOptions(changes.data.currentValue.remainingAuthenticationAttempts);\n    this.challengeData = { ...this.previousData, ...changes.data.currentValue };\n  }\n\n  onSubmit() {\n    this.clearAlerts();\n    if (this.form.valid) {\n      return this.submitResponse.emit({ ...this.form.value } as SmsOtpResponse);\n    }\n\n    if (!this.form.value.otp || !this.form.value.otp.length) {\n      this.displayMissingAlert = true;\n      this.form.markAllAsTouched();\n    }\n\n    if (this.form.controls.otp.errors && this.form.controls.otp.errors.pattern) {\n      this.displayIncorrectAlert = true;\n      this.form.reset();\n      this.form.markAllAsTouched();\n    }\n  }\n\n  showInvalidError() {\n    return (this.displayIncorrectAlert || this.displayRemainingAlert) && !this.form.value.otp;\n  }\n\n  showMissingError() {\n    return this.displayMissingAlert && !this.form.value.otp;\n  }\n\n  private clearAlerts() {\n    this.displayIncorrectAlert = false;\n    this.displayMissingAlert = false;\n    this.displayRemainingAlert = false;\n    this.displayResendAlert = false;\n  }\n\n  private setOtpValidators(patternLength: number) {\n    const regex = new RegExp('^\\\\d{' + patternLength + '}$');\n    this.form.controls.otp.setValidators([Validators.required, Validators.pattern(regex)]);\n  }\n\n  private isRecognizedError(error: ChallengeError) {\n    return error.errorCode === this.invalidRequestError && error.errorDescription === this.invalidRequestError;\n  }\n\n  private setResendCountdown(challenge: ChallengeSmsOtpData) {\n    if (challenge.nextOtpTime > 0 && challenge.remainingOtpRequests !== 0) {\n      this.countdown.start(challenge.nextOtpTime);\n    }\n  }\n\n  private setResendOptions(remaining?: number) {\n    if (remaining === undefined || !this.previousData) {\n      return;\n    }\n\n    const previousRemaining = this.previousData && this.previousData.remainingOtpRequests;\n    if (!previousRemaining || remaining < previousRemaining) {\n      this.displayResendAlert = true;\n      this.displayRemainingAlert = false;\n    }\n  }\n\n  private setRemainingOptions(remaining?: number) {\n    if (remaining === undefined || !this.previousData) {\n      return;\n    }\n\n    const previousRemaining = this.previousData.remainingAuthenticationAttempts;\n    if (!previousRemaining || remaining < previousRemaining) {\n      this.form.reset();\n      this.form.markAllAsTouched();\n      this.displayRemainingAlert = true;\n      this.displayResendAlert = false;\n    }\n  }\n}\n","<bb-transaction-signing-error\n  *ngIf=\"errorValue; else displayForm\"\n  [error]=\"errorValue\"\n  (closeModal)=\"acceptError.emit($event)\"\n>\n</bb-transaction-signing-error>\n\n<ng-template #displayForm>\n  <bb-alert-ui\n    *ngIf=\"displayMissingAlert\"\n    data-role=\"ts-sms-otp-missing-alert\"\n    i18n-title=\"No value alert title for sms otp signing@@bb-sms-otp-signing.alert.missing.title\"\n    title=\"No value entered\"\n  >\n    <span i18n=\"No value alert message for sms otp signing@@bb-sms-otp-signing.alert.missing.message\">\n      Please enter the value displayed on your device.\n    </span>\n  </bb-alert-ui>\n  <bb-alert-ui\n    *ngIf=\"displayIncorrectAlert\"\n    data-role=\"ts-sms-otp-incorrect-alert\"\n    i18n-title=\"Incorrect attempts alert title for sms otp signing@@bb-sms-otp-signing.alert.incorrect.title\"\n    title=\"Authorization failed\"\n  >\n    <span i18n=\"Incorrect attempts alert message for sms otp signing@@bb-sms-otp-signing.alert.incorrect.message\">\n      The number you entered was incorrect.\n    </span>\n  </bb-alert-ui>\n  <bb-alert-ui\n    *ngIf=\"displayRemainingAlert\"\n    data-role=\"ts-sms-otp-remaining-alert\"\n    i18n-title=\"Remaining attempts alert title for sms otp signing@@bb-sms-otp-signing.alert.remaining.title\"\n    title=\"Authorization failed\"\n  >\n    <span i18n=\"Remaining attempts alert message for sms otp signing@@bb-sms-otp-signing.alert.remaining.message\">\n      The number you entered was incorrect. <br />\n      You have {{ data.remainingAuthenticationAttempts }} other {data.remainingAuthenticationAttempts, plural, =1\n      {attempt} other {attempts}} remaining.\n    </span>\n  </bb-alert-ui>\n  <bb-alert-ui\n    *ngIf=\"displayResendAlert\"\n    data-role=\"ts-sms-otp-resend-alert\"\n    modifier=\"info\"\n    i18n-title=\"Message resend alert title for sms otp signing@@bb-sms-otp-signing.alert.resend.title\"\n    title=\"SMS message resent\"\n  >\n    <span i18n=\"Message resend alert message for sms otp signing@@bb-sms-otp-signing.alert.resend.message\">\n      The SMS message has been successfully sent. <br />\n      You have {data.remainingOtpRequests, plural, =0 {no} other {{{data.remainingOtpRequests}} SMS}} resend\n      {data.remainingOtpRequests, plural, =1 {attempt} other {attempts}} left.\n    </span>\n  </bb-alert-ui>\n  <div class=\"bb-block bb-block--sm\" i18n=\"Instruction for sms otp signing@@bb-sms-otp-signing.instruction\">\n    SMS message sent to {{ data.phoneNumber }}\n  </div>\n  <div class=\"bb-block bb-block--lg\">\n    <ng-container *ngIf=\"data.remainingOtpRequests !== 0; else displayNoRemainingRequests\">\n      <ng-container *ngIf=\"timeUntilResend$ | async as time; else displayResendButton\">\n        <span\n          class=\"bb-subtitle bb-text-support bb-block bb-block--sm\"\n          i18n=\"Time before resend@@bb-sms-otp-signing.resend.time-before\"\n          data-role=\"ts-sms-otp-resend-helper\"\n        >\n          Next resend available in {{ time }} {time, plural, =1 {second} other {seconds}}\n        </span>\n        <bb-progressbar-ui height=\"0.5rem\" [value]=\"data.nextOtpTime - time\" [max]=\"data.nextOtpTime\">\n        </bb-progressbar-ui>\n      </ng-container>\n      <ng-template #displayResendButton>\n        <button\n          bbButton\n          data-role=\"ts-sms-otp-resend\"\n          color=\"secondary\"\n          buttonSize=\"sm\"\n          i18n=\"Resend SMS OTP button@@bb-sms-otp-signing.resend\"\n          (click)=\"resend.emit()\"\n        >\n          Resend message\n        </button>\n      </ng-template>\n    </ng-container>\n    <ng-template #displayNoRemainingRequests>\n      <span\n        data-role=\"ts-sms-otp-no-resend\"\n        class=\"bb-subtitle bb-text-danger\"\n        i18n=\"No otp resend attempts remaining@@bb-sms-otp-signing.no-resend\"\n      >\n        You have no SMS resend attempts left. <br />\n        Please enter the correct OTP code or cancel this transaction.\n      </span>\n    </ng-template>\n  </div>\n\n  <form [formGroup]=\"form\" (submit)=\"onSubmit()\" class=\"bb-block bb-block--md\">\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"ts-sms-otp-field\"\n        class=\"bb-form-field bb-form-field--xs\"\n        formControlName=\"otp\"\n        i18n-label=\"Aria label for otp field input@@bb-sms-otp-signing.label\"\n        label=\"Input OTP code\"\n        [maxLength]=\"data.expectedOtpLength\"\n        [minLength]=\"data.expectedOtpLength\"\n      >\n      </bb-input-text-ui>\n      <bb-input-validation-message-ui [showErrors]=\"true\">\n        <span\n          *ngIf=\"showInvalidError()\"\n          data-role=\"ts-sms-otp-incorrect-error\"\n          i18n=\"Otp input invalid error message@@bb-sms-otp-signing.errors.invalid\"\n        >\n          Incorrect code. Try again.\n        </span>\n        <span\n          *ngIf=\"showMissingError()\"\n          data-role=\"ts-sms-otp-missing-error\"\n          i18n=\"Otp input missing error message@@bb-sms-otp-signing.errors.missing\"\n        >\n          You must enter an OTP.\n        </span>\n      </bb-input-validation-message-ui>\n      <small class=\"bb-text-support\" i18n=\"Otp input helper text@@bb-sms-otp-signing.helper\">\n        Value must be exactly {{ data.expectedOtpLength }} digits\n      </small>\n    </div>\n    <div class=\"bb-button-bar\">\n      <button\n        bbButton\n        data-role=\"ts-sms-otp-complete\"\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        type=\"submit\"\n        i18n=\"Complete button@@bb-sms-otp-signing.complete\"\n      >\n        Complete\n      </button>\n      <button\n        bbButton\n        data-role=\"ts-sms-otp-cancel\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"cancel.emit()\"\n        i18n=\"Cancel button@@bb-sms-otp-signing.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n</ng-template>\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { CapabilityData, ChallengeError } from '../../util';\n\n@Component({\n  selector: 'bb-transaction-signing-interface',\n  templateUrl: 'interface.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionSigningInterfaceComponent {\n  @Output() failure = new EventEmitter<Error>();\n  @Output() postSuccess = new EventEmitter<void>();\n  @Output() poll = new EventEmitter<object>();\n  @Output() post = new EventEmitter<object>();\n  /**\n   * Whether a signing is pending.\n   */\n  @Input() isPending = false;\n  /**\n   * An error received during signing.\n   */\n  @Input() error: ChallengeError | undefined;\n  /**\n   * Data defining the transaction.\n   */\n  @Input() transactionData: CapabilityData | undefined;\n  /**\n   * The type of challenge.\n   */\n  @Input() challengeType: string | undefined;\n\n  /**\n   * Enable the resending of push notifications\n   */\n  @Input() enableResendPushNotification!: boolean;\n\n  /**\n   * An error received during authentication.\n   */\n  @Input() challengeError: ChallengeError | undefined;\n\n  /**\n   * The data involved in the challenge.\n   */\n  get challengeData() {\n    if (!this.currentChallengeData) {\n      throw new Error('No current challenge data set');\n    }\n    return this.currentChallengeData;\n  }\n\n  @Input()\n  set challengeData(newData: any | undefined) {\n    this.previousChallengeData = this.currentChallengeData;\n    this.currentChallengeData = { ...this.previousChallengeData, ...newData };\n  }\n\n  readonly modalOptions: NgbModalOptions = {\n    keyboard: false,\n    backdrop: 'static',\n  };\n  previousChallengeData: any | undefined;\n  private currentChallengeData: any | undefined;\n}\n","<bb-modal-ui [isOpen]=\"true\" [modalOptions]=\"modalOptions\">\n  <bb-modal-header-ui data-role=\"ts-modal\">\n    <ng-template bbCustomModalHeader>\n      <bb-transaction-signing-header [data]=\"transactionData\"></bb-transaction-signing-header>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <hr class=\"mt-0\" />\n      <bb-transaction-signing-action-pending *ngIf=\"isPending\"></bb-transaction-signing-action-pending>\n      <ng-container *ngIf=\"!isPending\">\n        <bb-transaction-signing-error\n          *ngIf=\"challengeError\"\n          [error]=\"challengeError\"\n          (closeModal)=\"failure.emit($event)\"\n        >\n        </bb-transaction-signing-error>\n        <bb-transaction-signing-hard-token\n          *ngIf=\"challengeType === 'hard-token-auth'\"\n          [data]=\"challengeData\"\n          [error]=\"error\"\n          (submitResponse)=\"post.emit($event)\"\n          (cancel)=\"post.emit({ responseType: 'confirmation-abort' })\"\n          (acceptError)=\"failure.emit($event)\"\n        >\n        </bb-transaction-signing-hard-token>\n        <bb-transaction-signing-oob-select-device\n          *ngIf=\"challengeType === 'oob-ts-select-device'\"\n          [data]=\"challengeData\"\n          [error]=\"error\"\n          (submitResponse)=\"post.emit($event)\"\n          (cancel)=\"post.emit({ responseType: 'confirmation-abort' })\"\n          (acceptError)=\"failure.emit($event)\"\n        >\n        </bb-transaction-signing-oob-select-device>\n        <bb-transaction-signing-oob-device\n          *ngIf=\"challengeType === 'oob-uaf-auth'\"\n          [data]=\"challengeData\"\n          [enableResendPushNotification]=\"enableResendPushNotification\"\n          [error]=\"error\"\n          (poll)=\"poll.emit({ responseType: 'system-poll' })\"\n          (cancel)=\"post.emit({ responseType: 'confirmation-abort' })\"\n          (acceptError)=\"failure.emit($event)\"\n          (resend)=\"post.emit({ responseType: 'pn-resend' })\"\n        >\n        </bb-transaction-signing-oob-device>\n        <bb-transaction-signing-sms-otp\n          *ngIf=\"challengeType === 'sms-otp-auth'\"\n          [data]=\"challengeData\"\n          [previousData]=\"previousChallengeData\"\n          [error]=\"error\"\n          (submitResponse)=\"post.emit($event)\"\n          (cancel)=\"post.emit({ responseType: 'confirmation-abort' })\"\n          (acceptError)=\"failure.emit($event)\"\n          (resend)=\"post.emit({ responseType: 'otp-resend' })\"\n        >\n        </bb-transaction-signing-sms-otp>\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n</bb-modal-ui>\n","import { Component, Inject, OnDestroy, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription, throwError, timer } from 'rxjs';\nimport { retryWhen, switchMap } from 'rxjs/operators';\nimport { TransactionSigningService } from '../service/transaction-signing.service';\nimport {\n  CapabilityData,\n  ChallengeError,\n  ChallengeResponse,\n  TransactionSigningConfig,\n  TransactionSigningHandler,\n  TRANSACTION_SIGNING_CONFIG,\n} from '../util';\n\n@Component({\n  selector: 'bb-transaction-signing',\n  templateUrl: 'transaction-signing.component.html',\n})\nexport class TransactionSigningComponent implements OnDestroy {\n  private readonly errorSubject = new BehaviorSubject<ChallengeError | undefined>(undefined);\n  private readonly pendingSubject = new BehaviorSubject<boolean>(false);\n  private readonly challengeSubject = new BehaviorSubject<ChallengeResponse | undefined>(undefined);\n  private readonly requestSubscription = this.setupRequestSubscription();\n  private pollingSubscription: Subscription | undefined;\n  readonly challenge = this.challengeSubject.asObservable();\n  readonly error = this.errorSubject.asObservable();\n  readonly pending = this.pendingSubject.asObservable();\n  txnData: CapabilityData | undefined;\n\n  enableResendPushNotification = this.config.enableResendPushNotification;\n\n  constructor(\n    private readonly transactionSigningService: TransactionSigningService,\n    @Optional() @Inject(TRANSACTION_SIGNING_CONFIG) private readonly config: TransactionSigningConfig,\n  ) {}\n\n  ngOnDestroy(): void {\n    this.requestSubscription.unsubscribe();\n    if (this.pollingSubscription) {\n      this.pollingSubscription.unsubscribe();\n    }\n  }\n\n  onFailure(error: Error) {\n    this.transactionSigningService.completeWithFailure(error);\n    this.clearChallenge();\n  }\n\n  onSuccess() {\n    this.transactionSigningService.completeWithSuccess();\n    this.clearChallenge();\n  }\n\n  onPoll(data: unknown) {\n    this.pollingSubscription = of(data)\n      .pipe(\n        switchMap((d) => this.transactionSigningService.respondToChallenge(d)),\n        retryWhen((errors: Observable<ChallengeResponse>) => {\n          return errors.pipe(\n            switchMap((response: ChallengeResponse) => {\n              if (response.error) {\n                return throwError(response);\n              }\n              return timer(this.config.pollingCycleTime);\n            }),\n          );\n        }),\n      )\n      .subscribe({\n        next: () => this.onSuccess(),\n        error: (response: ChallengeResponse) => {\n          this.errorSubject.next(response.error);\n        },\n      });\n  }\n\n  onPost(data: unknown) {\n    if (this.pollingSubscription) {\n      this.pollingSubscription.unsubscribe();\n    }\n    this.pendingSubject.next(true);\n    this.transactionSigningService.respondToChallenge(data).subscribe({\n      next: () => this.onSuccess(),\n      error: (response: ChallengeResponse) => {\n        if (response.error) {\n          if (response.error.errorDescription === 'rejected_by_user') {\n            this.onFailure(new Error(response.error.errorDescription));\n          } else {\n            this.errorSubject.next(response.error);\n          }\n        } else {\n          this.challengeSubject.next(response);\n        }\n        this.pendingSubject.next(false);\n      },\n    });\n  }\n\n  private setupRequestSubscription() {\n    return this.transactionSigningService.requestSubject.subscribe((value) => this.updateChallenge(value));\n  }\n\n  private updateChallenge(handler: TransactionSigningHandler) {\n    this.txnData = handler.transactionData;\n    this.pendingSubject.next(false);\n    if (handler.challenge) {\n      this.challengeSubject.next(handler.challenge);\n    }\n  }\n\n  private clearChallenge() {\n    this.challengeSubject.next(undefined);\n    this.errorSubject.next(undefined);\n    this.txnData = undefined;\n    this.pendingSubject.next(false);\n  }\n}\n","<bb-transaction-signing-interface\n  *ngIf=\"challenge | async as challengeData\"\n  [isPending]=\"(pending | async) || false\"\n  [error]=\"(error | async) || undefined\"\n  [transactionData]=\"txnData\"\n  [challengeType]=\"challengeData.challengeType\"\n  [challengeData]=\"challengeData.challengeData\"\n  [challengeError]=\"challengeData.error\"\n  [enableResendPushNotification]=\"enableResendPushNotification\"\n  (failure)=\"onFailure($event)\"\n  (postSuccess)=\"onSuccess()\"\n  (poll)=\"onPoll($event)\"\n  (post)=\"onPost($event)\"\n>\n</bb-transaction-signing-interface>\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TransactionSigningService } from '../service/transaction-signing.service';\n\n/**\n * Interceptor used to check for reauthentication errors\n */\n@Injectable()\nexport class TransactionSigningInterceptor implements HttpInterceptor {\n  constructor(private readonly transactionSigningService: TransactionSigningService) {}\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next\n      .handle(request)\n      .pipe(catchError((error) => this.transactionSigningService.initiateTransactionSigning(error)));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { ProgressbarModule } from '@backbase/ui-ang/progressbar';\nimport { TransactionSigningComponent } from './feature/transaction-signing.component';\nimport { TransactionSigningInterceptor } from './interceptor/transaction-signing.interceptor';\nimport { TransactionSigningService } from './service/transaction-signing.service';\nimport {\n  TransactionSigningActionPendingComponent,\n  TransactionSigningErrorComponent,\n  TransactionSigningHardTokenComponent,\n  TransactionSigningHeaderComponent,\n  TransactionSigningInterfaceComponent,\n  TransactionSigningOobDeviceComponent,\n  TransactionSigningOobSelectDeviceComponent,\n  TransactionSigningSmsOtpComponent,\n} from './ui';\nimport { TransactionAmountPipe, TransactionSigningConfig, TRANSACTION_SIGNING_CONFIG } from './util';\n\nconst tsDefaults = {\n  useRedirectFlow: false,\n  pollingCycleTime: 3000,\n  enableResendPushNotification: false,\n};\n\nconst providers = [\n  TransactionSigningService,\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TransactionSigningInterceptor,\n    multi: true,\n  },\n];\n\nconst defaultConfigProviders = [\n  {\n    provide: TRANSACTION_SIGNING_CONFIG,\n    useValue: tsDefaults,\n  },\n];\n\nconst uiComponents = [\n  ModalModule,\n  HeaderModule,\n  ButtonModule,\n  ReactiveFormsModule,\n  AmountModule,\n  InputTextModule,\n  InputValidationMessageModule,\n  LoadingIndicatorModule,\n  EmptyStateModule,\n  AlertModule,\n  IconModule,\n  ProgressbarModule,\n  DropdownSingleSelectModule,\n];\n\nconst components = [\n  TransactionSigningComponent,\n  TransactionSigningErrorComponent,\n  TransactionSigningInterfaceComponent,\n  TransactionSigningActionPendingComponent,\n  TransactionSigningHeaderComponent,\n  TransactionSigningHardTokenComponent,\n  TransactionSigningOobDeviceComponent,\n  TransactionSigningOobSelectDeviceComponent,\n  TransactionSigningSmsOtpComponent,\n  TransactionAmountPipe,\n];\n\n/**\n * Module used to initialize Transaction Signing with a configuration\n */\n@NgModule({\n  imports: [CommonModule, ...uiComponents],\n  declarations: [...components],\n  providers: [...providers, ...defaultConfigProviders],\n  exports: [TransactionSigningComponent],\n})\nexport class TransactionSigningModule {\n  /**\n   * Creates a configured TransactionSigningModule.\n   *\n   * This should be called only once per app.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * ```\n   * @NgModule({\n   *   imports: [\n   *     TransactionSigningModule.withConfig({\n   *        useRedirectFlow: true,\n   *        pollingCycleTime: 5000,\n   *        enableResendPushNotification: true,\n   *     })\n   *   ]\n   * })\n   * class AppModule {}\n   * ```\n   */\n  static withConfig(config: Partial<TransactionSigningConfig>): ModuleWithProviders<TransactionSigningModule> {\n    return {\n      ngModule: TransactionSigningModule,\n      providers: [\n        {\n          provide: TRANSACTION_SIGNING_CONFIG,\n          useValue: {\n            ...tsDefaults,\n            ...config,\n          },\n        },\n        ...providers,\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}