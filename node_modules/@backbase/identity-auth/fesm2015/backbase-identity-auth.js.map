{"version":3,"file":"backbase-identity-auth.js","sources":["../../../../libs/identity-auth/src/lib/activity-monitor/activity-monitor.model.ts","../../../../libs/identity-auth/src/lib/auth/auth.model.ts","../../../../libs/identity-auth/src/lib/activity-monitor/activity-monitor.service.ts","../../../../libs/identity-auth/src/lib/oidc-auth/oidc-auth.service.ts","../../../../libs/identity-auth/src/lib/auth/auth.service.ts","../../../../libs/identity-auth/src/lib/auth.module.ts","../../../../libs/identity-auth/src/backbase-identity-auth.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const ACTIVITY_MONITOR_CONFIG = new InjectionToken<Partial<ActivityMonitorConfig>>('activity-monitor-config');\n\nexport interface ActivityMonitorConfig {\n  /**\n   * Duration of user inactivity that ends the countdown.\n   * Default value is 180 seconds.\n   */\n  maxInactivityDuration: number;\n  /**\n   * Duration of countdown.\n   * Default value is 30 seconds.\n   */\n  countdownDuration: number;\n}\n\nexport type ActivityEvent = { type: 'start' | 'end' | 'reset' } | { type: 'tick'; remaining: number };\n","import { InjectionToken } from '@angular/core';\n\nexport const WINDOW = new InjectionToken('Window');\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { WINDOW } from '../auth/auth.model';\nimport { ActivityEvent, ActivityMonitorConfig, ACTIVITY_MONITOR_CONFIG } from './activity-monitor.model';\n\n/**\n * Service for monitoring user activity\n */\n@Injectable()\nexport class ActivityMonitorService {\n  private events$ = new Subject<ActivityEvent>();\n  private isActive = false;\n  private lastActiveEpoch = 0;\n  private config: ActivityMonitorConfig = {\n    maxInactivityDuration: 180,\n    countdownDuration: 30,\n  };\n  private listenerCallback = this.setLastActiveEpoch.bind(this);\n  private intervalId?: number;\n  private countdownActive = false;\n  private window: Window;\n\n  readonly events = this.events$.asObservable();\n\n  // https://angular.io/guide/aot-metadata-errors#could-not-resolve-type\n  constructor(\n    @Inject(WINDOW) _window: any,\n    @Optional() @Inject(ACTIVITY_MONITOR_CONFIG) _config?: Partial<ActivityMonitorConfig>,\n  ) {\n    this.window = _window as Window;\n    Object.assign(this.config, _config || {});\n  }\n\n  /**\n   * Starts activity monitoring.\n   */\n  start(_config: Partial<ActivityMonitorConfig> = {}) {\n    Object.assign(this.config, _config);\n    if (this.isActive) {\n      this.stop();\n    }\n    this.listen(true, { passive: true, capture: true });\n  }\n\n  // Stops activity monitoring.\n  stop() {\n    if (this.isActive) {\n      this.listen(false, true);\n    }\n  }\n\n  private getInactivityDuration(): number {\n    const now: number = Math.floor(Date.now() / 1000);\n    const last: number = Math.floor(this.lastActiveEpoch / 1000);\n    return Math.floor(now - last);\n  }\n\n  private setLastActiveEpoch() {\n    this.lastActiveEpoch = Date.now();\n  }\n\n  private listen(activate: boolean, options: AddEventListenerOptions | boolean) {\n    this.isActive = activate;\n    const func = activate ? this.window.document.addEventListener : this.window.document.removeEventListener;\n    this.setLastActiveEpoch();\n    func('mousemove', this.listenerCallback, options);\n    func('mousedown', this.listenerCallback, options);\n    func('keydown', this.listenerCallback, options);\n    func('mousewheel', this.listenerCallback, options);\n    func('touchmove', this.listenerCallback, options);\n    if (activate) {\n      this.intervalId = this.window.setInterval(this.onEverySecond.bind(this), 1000);\n    } else {\n      this.window.clearInterval(this.intervalId);\n      if (this.countdownActive) {\n        this.countdownActive = false;\n        this.events$.next({ type: 'reset' });\n      }\n    }\n  }\n\n  private onEverySecond() {\n    const ttl = this.config.maxInactivityDuration - this.getInactivityDuration();\n    if (ttl > -1 && ttl <= this.config.countdownDuration) {\n      if (!this.countdownActive) {\n        this.countdownActive = true;\n        this.events$.next({ type: 'start' });\n        this.events$.next({ type: 'tick', remaining: ttl });\n        return;\n      }\n      if (ttl > 0) {\n        this.events$.next({ type: 'tick', remaining: ttl });\n      } else {\n        this.countdownActive = false;\n        this.events$.next({ type: 'end' });\n        this.stop();\n      }\n    } else if (this.countdownActive) {\n      this.countdownActive = false;\n      this.events$.next({ type: 'reset' });\n    }\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { AuthConfig, OAuthEvent, OAuthService, OAuthStorage, OAuthSuccessEvent } from 'angular-oauth2-oidc';\nimport { from, Observable, ReplaySubject } from 'rxjs';\nimport { filter, map, mapTo, take } from 'rxjs/operators';\nimport { WINDOW } from '../auth/auth.model';\nimport { AccessToken } from './oidc-auth.model';\n\n/** @internal */\n@Injectable()\nexport class ɵɵOidcAuthService {\n  private readonly window: Window;\n  private readonly authenticated$$ = new ReplaySubject<void>();\n\n  readonly storage = this.oAuthStorage;\n  readonly authConfig = this.oAuthConfig;\n  readonly events$ = this.oAuthService?.events;\n  readonly isAuthenticated$: Observable<boolean> = this.authenticated$$.pipe(\n    map(() => this.oAuthService.hasValidAccessToken()),\n  );\n  readonly accessToken$: Observable<AccessToken | undefined> = this.isAuthenticated$.pipe(\n    filter((loaded) => loaded),\n    map(() => {\n      const raw = this.oAuthService.getAccessToken();\n      return {\n        raw,\n        parsed: this.parseJwt(raw),\n      };\n    }),\n  );\n\n  // https://angular.io/guide/aot-metadata-errors#could-not-resolve-type\n  constructor(\n    @Optional() private readonly oAuthService: OAuthService,\n    @Inject(OAuthStorage) private readonly oAuthStorage: OAuthStorage,\n    @Inject(AuthConfig) private readonly oAuthConfig: AuthConfig,\n    @Inject(WINDOW) private readonly _window: any,\n  ) {\n    if (!oAuthService) {\n      throw new Error(\n        `In order to use ɵɵOidcAuthService, please include OAuthModule.forRoot() to your application module`,\n      );\n    }\n    this.window = this._window as Window;\n    this.oAuthService.events.subscribe((event: OAuthEvent) => {\n      switch (event.type) {\n        case 'discovery_document_loaded':\n        case 'token_received':\n        case 'logout':\n          this.authenticated$$.next();\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  logout(redirectUri?: string): Promise<void> {\n    if (redirectUri) {\n      this.oAuthService.postLogoutRedirectUri = redirectUri;\n    }\n    this.oAuthService.logOut();\n\n    return this.oAuthService.events\n      .pipe(\n        filter((event) => event.type === 'logout'),\n        mapTo(undefined),\n        take(1),\n      )\n      .toPromise();\n  }\n\n  timeToLive(): number {\n    const expiration = this.oAuthService.getAccessTokenExpiration();\n\n    if (expiration) {\n      return expiration - Math.ceil(new Date().getTime() / 1000) + (this.oAuthService.clockSkewInSec || 0);\n    }\n\n    return -1;\n  }\n\n  refresh(): Promise<void> {\n    this.oAuthService.refreshToken();\n\n    return this.oAuthService.events\n      .pipe(\n        filter((event) => event.type === 'token_refreshed'),\n        mapTo(undefined),\n        take(1),\n      )\n      .toPromise();\n  }\n\n  loadDiscoveryDocument(): Promise<OAuthSuccessEvent> {\n    return this.oAuthService.loadDiscoveryDocument();\n  }\n\n  authorizationHeader(): string {\n    return this.oAuthService.authorizationHeader();\n  }\n\n  createReauthLoginUrl(scope: string, acr_values: string): Observable<string> {\n    return from(\n      (this.oAuthService as any).createLoginUrl(\n        '', // state\n        '', // login hint\n        location.href, // custom redirect uri\n        false, // no prompt\n        {\n          acr_values,\n          response_mode: 'fragment',\n        }, // params\n      ) as string,\n    ).pipe(\n      map((preUrl) => {\n        const urlParsed = new URL(preUrl);\n        urlParsed.searchParams.set('scope', `${urlParsed.searchParams.get('scope')} ${scope}`);\n        return urlParsed.href;\n      }),\n    );\n  }\n\n  private parseJwt(token: string): any {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      return JSON.parse(this.window.atob(base64));\n    } catch (e) {\n      return undefined;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ɵɵOidcAuthService } from '../oidc-auth/oidc-auth.service';\n\n@Injectable()\nexport class AuthService {\n  readonly isAuthenticated$: Observable<boolean> = this.oidcAuthService.isAuthenticated$;\n\n  constructor(private readonly oidcAuthService: ɵɵOidcAuthService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ActivityMonitorService } from './activity-monitor';\nimport { AuthService, WINDOW } from './auth';\nimport { ɵɵOidcAuthService } from './oidc-auth';\n\nexport function _window() {\n  return window;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: WINDOW,\n      useValue: _window,\n    },\n    AuthService,\n    ɵɵOidcAuthService,\n    ActivityMonitorService,\n  ],\n})\nexport class IdentityAuthModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}