{"version":3,"file":"challenge.model.js","sourceRoot":"","sources":["../../../../../../../libs/identity-auth/transaction-signing/util/challenge/challenge.model.ts"],"names":[],"mappings":"AAAA,iDAAiD","sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n\n/**\n * Data object for a reauthentication request.\n * A response containing an attribute implies that reauthentication did not immediately succeed.\n */\nexport interface ChallengeResponse {\n  /**\n   * The challenge type received after reauthentication.\n   */\n  challengeType?: string;\n  /**\n   * The challenge data used to identify what the user is signing.\n   */\n  challengeData?: object;\n  /**\n   * An error object describing how reauthentication failed.\n   */\n  error?: ChallengeError;\n}\n\n/**\n * Error response for a reauthentication or challenge request.\n * Implies the reauthentication process has failed.\n */\nexport interface ChallengeError {\n  /**\n   * A code identifying the error type to the user.\n   */\n  errorCode: string;\n  /**\n   * A code identifying the error description to the user.\n   */\n  errorDescription?: string;\n}\n\n/**\n * The body returned from the auth server on a challenge error.\n */\nexport interface ChallengeResponseBody {\n  /**\n   * A list of challenges issued by the auth service.\n   */\n  challenges: Challenge[];\n}\n\n/**\n * The body of an individual challenge.\n */\nexport interface Challenge {\n  /**\n   * The type of the challenge.\n   */\n  challengeType: string;\n  /**\n   * The url for posting a response to the challenge.\n   */\n  actionUrl: string;\n  /**\n   * Optional data object defining extra data for the challenge.\n   */\n  data?: object;\n}\n\n/**\n * The type for resolving the challenge flow.\n */\nexport type ChallengeResolve = () => void;\n/**\n * The type for rejecting the challenge flow.\n */\nexport type ChallengeReject = (response: ChallengeResponse) => void;\n\nexport interface CapabilityResponse {\n  challenges: Array<CapabilityChallenge>;\n  data: CapabilityData;\n}\n\nexport interface CapabilityChallenge {\n  challengeType: string;\n  acrValues: string;\n  scope: string;\n}\n\nexport interface CapabilityData {\n  'confirmation-type'?: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n}\n\n/**\n * An interface for a UI component looking to handle transaction signing flow.\n */\nexport interface TransactionSigningHandler {\n  /**\n   * The challenge response received from a reauthentication request.\n   */\n  challenge?: ChallengeResponse;\n  /**\n   * The data returned when the challenge was issued.\n   */\n  transactionData: CapabilityData;\n}\n"]}