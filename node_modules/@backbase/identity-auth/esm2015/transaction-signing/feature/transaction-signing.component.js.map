{"version":3,"file":"transaction-signing.component.js","sourceRoot":"","sources":["../../../../../../libs/identity-auth/transaction-signing/feature/transaction-signing.component.ts","../../../../../../libs/identity-auth/transaction-signing/feature/transaction-signing.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, OnDestroy, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription, throwError, timer } from 'rxjs';\nimport { retryWhen, switchMap } from 'rxjs/operators';\nimport { TransactionSigningService } from '../service/transaction-signing.service';\nimport {\n  CapabilityData,\n  ChallengeError,\n  ChallengeResponse,\n  TransactionSigningConfig,\n  TransactionSigningHandler,\n  TRANSACTION_SIGNING_CONFIG,\n} from '../util';\n\n@Component({\n  selector: 'bb-transaction-signing',\n  templateUrl: 'transaction-signing.component.html',\n})\nexport class TransactionSigningComponent implements OnDestroy {\n  private readonly errorSubject = new BehaviorSubject<ChallengeError | undefined>(undefined);\n  private readonly pendingSubject = new BehaviorSubject<boolean>(false);\n  private readonly challengeSubject = new BehaviorSubject<ChallengeResponse | undefined>(undefined);\n  private readonly requestSubscription = this.setupRequestSubscription();\n  private pollingSubscription: Subscription | undefined;\n  readonly challenge = this.challengeSubject.asObservable();\n  readonly error = this.errorSubject.asObservable();\n  readonly pending = this.pendingSubject.asObservable();\n  txnData: CapabilityData | undefined;\n\n  enableResendPushNotification = this.config.enableResendPushNotification;\n\n  constructor(\n    private readonly transactionSigningService: TransactionSigningService,\n    @Optional() @Inject(TRANSACTION_SIGNING_CONFIG) private readonly config: TransactionSigningConfig,\n  ) {}\n\n  ngOnDestroy(): void {\n    this.requestSubscription.unsubscribe();\n    if (this.pollingSubscription) {\n      this.pollingSubscription.unsubscribe();\n    }\n  }\n\n  onFailure(error: Error) {\n    this.transactionSigningService.completeWithFailure(error);\n    this.clearChallenge();\n  }\n\n  onSuccess() {\n    this.transactionSigningService.completeWithSuccess();\n    this.clearChallenge();\n  }\n\n  onPoll(data: unknown) {\n    this.pollingSubscription = of(data)\n      .pipe(\n        switchMap((d) => this.transactionSigningService.respondToChallenge(d)),\n        retryWhen((errors: Observable<ChallengeResponse>) => {\n          return errors.pipe(\n            switchMap((response: ChallengeResponse) => {\n              if (response.error) {\n                return throwError(response);\n              }\n              return timer(this.config.pollingCycleTime);\n            }),\n          );\n        }),\n      )\n      .subscribe({\n        next: () => this.onSuccess(),\n        error: (response: ChallengeResponse) => {\n          this.errorSubject.next(response.error);\n        },\n      });\n  }\n\n  onPost(data: unknown) {\n    if (this.pollingSubscription) {\n      this.pollingSubscription.unsubscribe();\n    }\n    this.pendingSubject.next(true);\n    this.transactionSigningService.respondToChallenge(data).subscribe({\n      next: () => this.onSuccess(),\n      error: (response: ChallengeResponse) => {\n        if (response.error) {\n          if (response.error.errorDescription === 'rejected_by_user') {\n            this.onFailure(new Error(response.error.errorDescription));\n          } else {\n            this.errorSubject.next(response.error);\n          }\n        } else {\n          this.challengeSubject.next(response);\n        }\n        this.pendingSubject.next(false);\n      },\n    });\n  }\n\n  private setupRequestSubscription() {\n    return this.transactionSigningService.requestSubject.subscribe((value) => this.updateChallenge(value));\n  }\n\n  private updateChallenge(handler: TransactionSigningHandler) {\n    this.txnData = handler.transactionData;\n    this.pendingSubject.next(false);\n    if (handler.challenge) {\n      this.challengeSubject.next(handler.challenge);\n    }\n  }\n\n  private clearChallenge() {\n    this.challengeSubject.next(undefined);\n    this.errorSubject.next(undefined);\n    this.txnData = undefined;\n    this.pendingSubject.next(false);\n  }\n}\n","<bb-transaction-signing-interface\n  *ngIf=\"challenge | async as challengeData\"\n  [isPending]=\"(pending | async) || false\"\n  [error]=\"(error | async) || undefined\"\n  [transactionData]=\"txnData\"\n  [challengeType]=\"challengeData.challengeType\"\n  [challengeData]=\"challengeData.challengeData\"\n  [challengeError]=\"challengeData.error\"\n  [enableResendPushNotification]=\"enableResendPushNotification\"\n  (failure)=\"onFailure($event)\"\n  (postSuccess)=\"onSuccess()\"\n  (poll)=\"onPoll($event)\"\n  (post)=\"onPost($event)\"\n>\n</bb-transaction-signing-interface>\n"]}