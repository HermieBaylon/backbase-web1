import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { CountdownService, } from '../../util';
import * as i0 from "@angular/core";
import * as i1 from "../../util";
import * as i2 from "../error/error.component";
import * as i3 from "@backbase/ui-ang/alert";
import * as i4 from "@backbase/ui-ang/icon";
import * as i5 from "@angular/common";
import * as i6 from "@backbase/ui-ang/button";
export class TransactionSigningOobDeviceComponent {
    constructor(countdown) {
        this.countdown = countdown;
        this.acceptError = new EventEmitter();
        this.cancel = new EventEmitter();
        this.poll = new EventEmitter();
        this.resend = new EventEmitter();
        this.icon = '';
        this.timeUntilResend$ = this.countdown.remainingTime$;
    }
    get data() {
        if (!this.challengeData) {
            throw new Error('No challenge data set');
        }
        return this.challengeData;
    }
    set data(value) {
        this.challengeData = value;
        if (this.challengeData) {
            this.deviceInfo = this.challengeData.data.deviceInformation;
            this.pushNotificationData = this.challengeData.data.pushNotificationInformation;
            this.setResendTime();
        }
        if (this.deviceInfo) {
            this.icon = this.deviceInfo.vendor === 'Apple' ? 'phone-iphone' : 'phone-android';
        }
    }
    get pushData() {
        if (!this.pushNotificationData) {
            throw new Error('No push notification data set');
        }
        return this.pushNotificationData;
    }
    get pushFailure() {
        return this.enableResendPushNotification && !this.pushData.sendSuccessful;
    }
    ngOnInit() {
        this.poll.emit();
    }
    setResendTime() {
        if (this.pushData.nextResendSeconds > 0) {
            this.countdown.start(this.pushData.nextResendSeconds);
        }
    }
}
/** @nocollapse */ TransactionSigningOobDeviceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionSigningOobDeviceComponent, deps: [{ token: i1.CountdownService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ TransactionSigningOobDeviceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: TransactionSigningOobDeviceComponent, selector: "bb-transaction-signing-oob-device", inputs: { error: "error", enableResendPushNotification: "enableResendPushNotification", data: "data" }, outputs: { acceptError: "acceptError", cancel: "cancel", poll: "poll", resend: "resend" }, ngImport: i0, template: "<bb-transaction-signing-error\n  *ngIf=\"error; else displayHoldingScreen\"\n  [error]=\"error\"\n  (closeModal)=\"acceptError.emit($event)\"\n>\n</bb-transaction-signing-error>\n\n<ng-template #displayHoldingScreen>\n  <bb-alert-ui\n    *ngIf=\"pushFailure\"\n    data-role=\"ts-oob-device-incorrect-alert\"\n    i18n-title=\"\n      Failure to send push notification for out of band device transaction\n      signing@@bb-transaction-signing-oob-device.alert.failure.title\"\n    title=\"Push notification failure\"\n  >\n    <span\n      i18n=\"\n        Incorrect attempts alert message for sms otp signing@@bb-transaction-signing-oob-device.alert.failure.message\"\n    >\n      Failure to send push notification. Please open your app to complete the transaction.\n    </span>\n  </bb-alert-ui>\n\n  <div class=\"bb-block bb-block--md\">\n    <div\n      data-role=\"oob-device-title\"\n      class=\"bb-highlight bb-block bb-block--md\"\n      i18n=\"Instruction for oob device signing@@bb-transaction-signing-oob-device.instruction.check-device-header\"\n    >\n      Check your device:\n    </div>\n    <div class=\"bb-stack\">\n      <bb-icon-ui class=\"bb-stack__item\" [name]=\"icon\" size=\"xl\" data-role=\"oob-device-icon\"></bb-icon-ui>\n      <div>\n        <div *ngIf=\"deviceInfo?.friendlyName; else defaultFriendlyName\" class=\"bb-stack__item bb-highlight\">\n          <span data-role=\"oob-device-friendly-name\">{{ deviceInfo?.friendlyName }}</span>\n        </div>\n        <div *ngIf=\"deviceInfo?.vendor && deviceInfo?.model; else defaultVendor\" class=\"bb-stack__item bb-text-support\">\n          <span data-role=\"oob-device-vendor-model\">{{ deviceInfo?.vendor }} {{ deviceInfo?.model }}</span>\n        </div>\n        <div class=\"bb-stack__item bb-text-support bb-subheader bb-subheader--regular\">\n          <span\n            data-role=\"oob-device-registered-date\"\n            i18n=\"Device registered date@@bb-transaction-signing-oob-device.registered-date\"\n          >\n            Registered on: {{ deviceInfo?.created | date: 'medium' }}</span\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"bb-block bb-block--md\"\n    i18n=\"Instruction for oob device signing@@bb-transaction-signing-oob-device.instruction\"\n  >\n    <strong>Please sign this transaction through your banking app. When confirmed, this page will refresh.</strong>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <ng-container *ngIf=\"enableResendPushNotification\">\n      <hr />\n\n      <div class=\"bb-block bb-block--sm\">\n        <span\n          data-role=\"oob-no-notification-title\"\n          class=\"bb-highlight\"\n          i18n=\"No notification received@@bb-oob-notification-signing.resend.no-notification\"\n        >\n          Didn't receive the notification?\n        </span>\n      </div>\n\n      <ng-container *ngIf=\"pushData.resendAttemptsLeft > 0; else displayNoRemainingRequests\">\n        <ng-container *ngIf=\"timeUntilResend$ | async as time; else displayResendButton\">\n          <span\n            class=\"bb-subtitle bb-text-support bb-block bb-block--sm\"\n            i18n=\"Time before resend@@bb-oob-notification-signing.resend.time-before\"\n          >\n            Next resend available in {{ time }} {time, plural, =1 {second} other {seconds}}\n          </span>\n        </ng-container>\n\n        <ng-template #displayResendButton>\n          <div class=\"bb-block bb-block--sm\">\n            <button\n              bbButton\n              buttonSize=\"md\"\n              data-role=\"oob-device-resend\"\n              color=\"link-text\"\n              i18n=\"Resend OOB notification button@@bb-oob-notification-signing.resend\"\n              (click)=\"this.resend.emit()\"\n            >\n              Send another notification\n            </button>\n          </div>\n\n          <div class=\"bb-text-support\">\n            <span\n              [ngClass]=\"{ 'bb-text-danger': pushData.resendAttemptsLeft === 1 }\"\n              i18n=\"Message resend alert message for oob signin@@bb-oob-signing.alert.resend.message\"\n            >\n              You have {{ pushData.resendAttemptsLeft }} resend {pushData.resendAttemptsLeft, plural, =1 {attempt} other\n              {attempts}} left.\n            </span>\n          </div>\n        </ng-template>\n      </ng-container>\n\n      <ng-template #displayNoRemainingRequests>\n        <span\n          data-role=\"ts-oob-device-no-resend\"\n          class=\"bb-subtitle bb-text-danger\"\n          i18n=\"No device push notification resend attempts remaining@@bb-transaction-signing-oob-device.no-resend\"\n        >\n          You are out of resend attempts.\n        </span>\n      </ng-template>\n    </ng-container>\n  </div>\n\n  <hr />\n\n  <div class=\"bb-block bb-block--lg\">\n    <small i18n=\"Helper text for oob device signing@@bb-transaction-signing-oob-device.helper\">\n      Note: Navigation away from this modal will result in a cancellation of this transaction signing process.\n    </small>\n  </div>\n\n  <div class=\"bb-button-bar\">\n    <button\n      bbButton\n      data-role=\"oob-device-cancel\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n      (click)=\"cancel.emit()\"\n      i18n=\"Cancel button@@bb-transaction-signing-oob-device.cancel\"\n    >\n      Cancel transaction\n    </button>\n  </div>\n\n  <ng-template\n    #defaultFriendlyName\n    i18n=\"Default friendly name@@bb-transaction-signing-oob-device.default-friendly-name\"\n  >\n    <span data-role=\"oob-device-friendly-name-default\">Unknown Device</span>\n  </ng-template>\n\n  <ng-template #defaultVendor i18n=\"Device vendor default text@@bb-transaction-signing-oob-device.default-vendor\">\n    <span data-role=\"oob-device-vendor-default\">Unknown</span>\n  </ng-template>\n</ng-template>\n", components: [{ type: i2.TransactionSigningErrorComponent, selector: "bb-transaction-signing-error", inputs: ["error"], outputs: ["closeModal"] }, { type: i3.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i4.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i6.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "date": i5.DatePipe, "async": i5.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionSigningOobDeviceComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transaction-signing-oob-device',
                    templateUrl: 'oob-device.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.CountdownService }]; }, propDecorators: { acceptError: [{
                type: Output
            }], cancel: [{
                type: Output
            }], poll: [{
                type: Output
            }], resend: [{
                type: Output
            }], error: [{
                type: Input
            }], enableResendPushNotification: [{
                type: Input
            }], data: [{
                type: Input
            }] } });
//# sourceMappingURL=oob-device.component.js.map