{"version":3,"file":"impersonation-data.service.js","sourceRoot":"","sources":["../../../../../../libs/identity-auth/impersonation/impersonation-data/impersonation-data.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,4BAA4B,EAAE,MAAM,qCAAqC,CAAC;AACnF,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;;;;AAKhE,MAAM,OAAO,wBAAwB;IACnC,YACmB,4BAA0D,EAC1D,WAAkC;QADlC,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,gBAAW,GAAX,WAAW,CAAuB;IAClD,CAAC;IAEJ,mBAAmB,CAAC,WAAmB,EAAE,YAAoB,EAAE,YAAoB;QACjF,OAAO,IAAI,CAAC,4BAA4B,CAAC,8BAA8B,CAAC;YACtE,qBAAqB,EAAE;gBACrB,YAAY;gBACZ,YAAY;gBACZ,YAAY,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ;gBAC/D,WAAW;aACZ;SACF,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,GAAW,EAAE,MAAc,EAAE,KAAa;QACvD,OAAO,IAAI,CAAC,4BAA4B,CAAC,2BAA2B,CAAC;YACnE,kBAAkB,EAAE;gBAClB,KAAK;gBACL,MAAM;gBACN,GAAG;aACJ;SACF,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;;yIA7BU,wBAAwB;6IAAxB,wBAAwB,cAFvB,MAAM;4FAEP,wBAAwB;kBAHpC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { IdentityImpersonationService } from '@backbase/data-ang/impersonation-v1';\nimport { UserManagementService } from '@backbase/data-ang/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImpersonationDataService {\n  constructor(\n    private readonly identityImpersonationService: IdentityImpersonationService,\n    private readonly userService: UserManagementService,\n  ) {}\n\n  getImpersonationUrl(accessToken: string, targetUserId: string, targetWebApp: string) {\n    return this.identityImpersonationService.getImpersonationTokenReference({\n      tokenReferenceRequest: {\n        targetUserId,\n        targetWebApp,\n        sourceWebApp: window.location.origin + window.location.pathname,\n        accessToken,\n      },\n    });\n  }\n\n  getAccessToken(ref: string, client: string, realm: string) {\n    return this.identityImpersonationService.getImpersonationAccessToken({\n      accessTokenRequest: {\n        realm,\n        client,\n        ref,\n      },\n    });\n  }\n\n  getOwnUser() {\n    return this.userService.getOwnUser();\n  }\n}\n"]}