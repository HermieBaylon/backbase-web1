import { EventEmitter, Renderer2 } from '@angular/core';
import { GetOwnUser } from '@backbase/data-ang/user';
import { Observable } from 'rxjs';
import { ImpersonationDataService } from '../impersonation-data/impersonation-data.service';
import { ImpersonationService } from '../impersonation-service/impersonation.service';
import * as i0 from "@angular/core";
export declare class ImpersonationBannerComponent {
    private readonly impersonationService;
    private readonly dataService;
    private readonly renderer;
    /**
     * Event Emitted when stop impersonation button is pressed.
     * Please logout the user as your app requires.
     */
    stopImpersonation: EventEmitter<any>;
    private readonly impersonatedClass;
    readonly user$: Observable<GetOwnUser>;
    /** @internal */
    constructor(impersonationService: ImpersonationService, dataService: ImpersonationDataService, renderer: Renderer2);
    private readonly setImpersonationClass;
    static ɵfac: i0.ɵɵFactoryDeclaration<ImpersonationBannerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ImpersonationBannerComponent, "bb-impersonation-banner", never, {}, { "stopImpersonation": "stopImpersonation"; }, never, never>;
}
