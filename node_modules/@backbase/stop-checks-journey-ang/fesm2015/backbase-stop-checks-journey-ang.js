import * as i0 from '@angular/core';
import { InjectionToken, Injectable, Optional, Inject, Component, NgModule } from '@angular/core';
import * as i5 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i1$1 from '@backbase/foundation-ang/core';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import * as i1 from '@backbase/payord-stop-checks-list-widget-ang';
import { StopChecksListCommunicationService, PayordStopChecksListWidgetAngModule } from '@backbase/payord-stop-checks-list-widget-ang';
import * as i2 from '@angular/router';
import { provideRoutes, RouterModule } from '@angular/router';
import { LoadMoreMethod, ChecksService } from '@backbase/payment-orders-ang';
import * as i3 from '@backbase/ui-ang/header';
import { HeaderModule } from '@backbase/ui-ang/header';
import * as i4 from '@backbase/ui-ang/icon';
import * as i6 from '@backbase/ui-ang/button';
import '@angular/localize/init';
import * as i3$1 from '@backbase/payord-stop-checks-widget-ang';
import { defaultStopChecksCreatePreferences, BB_STOP_CHECK_ACCESS_CONTROL_CONFIG_TOKEN, RequestStatus, StopChecksPreferencesService, NavigationService, StateService, ApiHttpService, PayordStopChecksWidgetAngModule } from '@backbase/payord-stop-checks-widget-ang';
import { BehaviorSubject, Subject } from 'rxjs';
import { pluck, takeUntil } from 'rxjs/operators';
import * as i4$1 from '@backbase/ui-ang/modal';
import { ModalModule } from '@backbase/ui-ang/modal';

const StopChecksJourneyConfigurationToken = new InjectionToken('StopChecksJourneyConfiguration injection token');
const stopChecksDefaultConfig = {
    currencies: ['USD'],
    pageSize: 50,
    maxNavPages: 3,
    notificationDismissTime: 3,
    paginationType: LoadMoreMethod.PAGINATION,
    checksRangeNumber: 0,
    shouldDisplayHeading: true,
    schemeName: 'BBAN',
};
class StopChecksJourneyService {
    constructor(config) {
        this.config = config;
        this._config = Object.assign(Object.assign({}, stopChecksDefaultConfig), (config || {}));
    }
    get currencies() {
        return this._config.currencies;
    }
    get pageSize() {
        return this._config.pageSize;
    }
    get schemeName() {
        return this._config.schemeName;
    }
    get maxNavPages() {
        return this._config.maxNavPages;
    }
    get notificationDismissTime() {
        return this._config.notificationDismissTime;
    }
    get paginationType() {
        return this._config.paginationType;
    }
    get checksRangeNumber() {
        return this._config.checksRangeNumber;
    }
    get shouldDisplayHeading() {
        return this._config.shouldDisplayHeading;
    }
    get configuration() {
        return this._config;
    }
}
/** @nocollapse */ StopChecksJourneyService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksJourneyService, deps: [{ token: StopChecksJourneyConfigurationToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ StopChecksJourneyService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksJourneyService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksJourneyService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [StopChecksJourneyConfigurationToken]
                }] }]; } });

class StopChecksJourneyComponent {
    constructor(config, route, router) {
        this.config = config;
        this.route = route;
        this.router = router;
        this.heading = $localize `:@@stop-checks-journey.title:Stop Checks`;
        this.stopChecksCreate = $localize `:@@stop-checks-journey.create-checks-button:New request`;
    }
    navigateToStopChecksCreate() {
        this.router.navigate(['form'], { relativeTo: this.route.firstChild });
    }
}
/** @nocollapse */ StopChecksJourneyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksJourneyComponent, deps: [{ token: StopChecksJourneyService }, { token: i2.ActivatedRoute }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ StopChecksJourneyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StopChecksJourneyComponent, selector: "bb-stop-checks-journey", ngImport: i0, template: "<ng-container *ngIf=\"config.shouldDisplayHeading; else outletTemplate\">\n  <div class=\"heading-widget bb-heading-widget bb-heading-widget--de-elevated\">\n    <bb-header-ui\n      headingClasses=\"bb-heading-widget__heading\"\n      headingType=\"h1\"\n      [heading]=\"heading\"\n    ></bb-header-ui>\n    <div class=\"btn-group bb-button-bar__button\">\n      <button\n        class=\"bb-button-bar__button\"\n        data-role=\"new-request\"\n        bbButton\n        color=\"primary\"\n        buttonSize=\"md\"\n        (click)=\"navigateToStopChecksCreate()\"\n      >\n        <bb-icon-ui name=\"add\"></bb-icon-ui>\n        <span>{{ stopChecksCreate }}</span>\n      </button>\n    </div>\n  </div>\n  <div class=\"container--drag-up container-fluid\">\n    <div class=\"card card-body\">\n      <ng-container *ngTemplateOutlet=\"outletTemplate\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #outletTemplate>\n  <router-outlet></router-outlet>\n</ng-template>\n", components: [{ type: i3.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i6.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksJourneyComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-stop-checks-journey',
                    templateUrl: './stop-checks-journey.component.html',
                }]
        }], ctorParameters: function () { return [{ type: StopChecksJourneyService }, { type: i2.ActivatedRoute }, { type: i2.Router }]; } });

class StopChecksListComponent {
    constructor(config) {
        this.config = config;
    }
}
/** @nocollapse */ StopChecksListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksListComponent, deps: [{ token: StopChecksJourneyService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ StopChecksListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StopChecksListComponent, selector: "bb-stop-checks-list-wrapper", ngImport: i0, template: "<bb-payord-stop-checks-list-widget-ang\n  [paginationType]=\"config.paginationType\"\n  [pageSize]=\"config.pageSize\"\n  [maxNavPages]=\"config.maxNavPages\"\n>\n</bb-payord-stop-checks-list-widget-ang>\n<router-outlet></router-outlet>\n", components: [{ type: i1.PayordStopChecksListWidgetAngComponent, selector: "bb-payord-stop-checks-list-widget-ang", inputs: ["pageSize", "maxNavPages", "paginationType"] }], directives: [{ type: i2.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-stop-checks-list-wrapper',
                    templateUrl: './stop-checks-list.component.html',
                }]
        }], ctorParameters: function () { return [{ type: StopChecksJourneyService }]; } });

/** @internal */
class StopChecksCreatePreferencesService {
    constructor(accessControlToken, journeyConfig) {
        this.accessControlToken = accessControlToken;
        this.journeyConfig = journeyConfig;
        this.config = Object.assign(Object.assign(Object.assign({}, defaultStopChecksCreatePreferences), this.journeyConfig.configuration), (this.accessControlToken || {}));
        this.resourceNameSub$ = new BehaviorSubject(this.config.resourceName);
        this.businessFunctionSub$ = new BehaviorSubject(this.config.businessFunction);
        this.privilegeSub$ = new BehaviorSubject(this.config.privilege);
        this.notificationDismissTimeSub$ = new BehaviorSubject(this.config.notificationDismissTime);
        this.currenciesSubject$ = new BehaviorSubject(this.config.currencies);
        this.checksRangeNumberSubject$ = new BehaviorSubject(this.config.checksRangeNumber);
        this.schemeNameSubject$ = new BehaviorSubject(this.config.schemeName);
        this.resourceName$ = this.resourceNameSub$.asObservable();
        this.businessFunction$ = this.businessFunctionSub$.asObservable();
        this.privilege$ = this.privilegeSub$.asObservable();
        this.notificationDismissTime$ = this.notificationDismissTimeSub$.asObservable();
        this.currencies$ = this.currenciesSubject$.asObservable();
        this.checksRangeNumber$ = this.checksRangeNumberSubject$.asObservable();
        this.schemeName$ = this.schemeNameSubject$.asObservable();
    }
}
/** @nocollapse */ StopChecksCreatePreferencesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksCreatePreferencesService, deps: [{ token: BB_STOP_CHECK_ACCESS_CONTROL_CONFIG_TOKEN, optional: true }, { token: StopChecksJourneyService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ StopChecksCreatePreferencesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksCreatePreferencesService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksCreatePreferencesService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [BB_STOP_CHECK_ACCESS_CONTROL_CONFIG_TOKEN]
                }] }, { type: StopChecksJourneyService }]; } });

/** @internal */
class StopChecksNavigationService {
    constructor(router, route) {
        this.router = router;
        this.route = route;
        this.defaultRouteParams = { relativeTo: this.route };
    }
    form(extras = {}) {
        this.router.navigate(['..', 'form'], Object.assign(Object.assign({}, this.defaultRouteParams), extras));
    }
    review(extras = {}) {
        this.router.navigate(['review'], Object.assign(Object.assign({}, this.defaultRouteParams), extras));
    }
}
/** @nocollapse */ StopChecksNavigationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksNavigationService, deps: [{ token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ StopChecksNavigationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksNavigationService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksNavigationService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i2.Router }, { type: i2.ActivatedRoute }]; } });

class StopChecksCreateModalComponent {
    constructor(communicationListService, router, activatedRoute, stateService) {
        this.communicationListService = communicationListService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.stateService = stateService;
        this.destroyed = new Subject();
        this.modalOptions = {
            centered: true,
            backdrop: 'static',
        };
    }
    navigateToList() {
        this.router.navigate(['..'], { relativeTo: this.activatedRoute });
    }
    ngOnInit() {
        this.stateService.store
            .pipe(pluck('status'))
            .pipe(takeUntil(this.destroyed))
            .subscribe((status) => {
            if (status === RequestStatus.REQUEST_IS_SUBMITTED ||
                status === RequestStatus.DISCARD) {
                this.communicationListService.refreshListSub.next();
                this.navigateToList();
            }
        });
    }
    ngOnDestroy() {
        this.destroyed.next();
    }
    closeModal() {
        this.navigateToList();
    }
}
/** @nocollapse */ StopChecksCreateModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksCreateModalComponent, deps: [{ token: i1.StopChecksListCommunicationService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: i3$1.StateService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ StopChecksCreateModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StopChecksCreateModalComponent, selector: "bb-stop-checks-create-modal", providers: [
        {
            provide: StopChecksPreferencesService,
            useClass: StopChecksCreatePreferencesService,
        },
        { provide: NavigationService, useClass: StopChecksNavigationService },
        StateService,
        ApiHttpService,
        ChecksService,
    ], ngImport: i0, template: `
    <bb-modal-ui
      [isOpen]="true"
      [modalOptions]="modalOptions"
      (cancel)="closeModal()"
    >
      <div class="card card-body">
        <router-outlet></router-outlet>
      </div>
    </bb-modal-ui>
  `, isInline: true, components: [{ type: i4$1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }], directives: [{ type: i2.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksCreateModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-stop-checks-create-modal',
                    template: `
    <bb-modal-ui
      [isOpen]="true"
      [modalOptions]="modalOptions"
      (cancel)="closeModal()"
    >
      <div class="card card-body">
        <router-outlet></router-outlet>
      </div>
    </bb-modal-ui>
  `,
                    providers: [
                        {
                            provide: StopChecksPreferencesService,
                            useClass: StopChecksCreatePreferencesService,
                        },
                        { provide: NavigationService, useClass: StopChecksNavigationService },
                        StateService,
                        ApiHttpService,
                        ChecksService,
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.StopChecksListCommunicationService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: i3$1.StateService }]; } });

class StopChecksCreateFormComponent {
}
/** @nocollapse */ StopChecksCreateFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksCreateFormComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ StopChecksCreateFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StopChecksCreateFormComponent, selector: "bb-stop-checks-form-view", ngImport: i0, template: `<bb-form-container></bb-form-container>`, isInline: true, components: [{ type: i3$1.ӨFormContainerComponent, selector: "bb-form-container" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksCreateFormComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-stop-checks-form-view',
                    template: `<bb-form-container></bb-form-container>`,
                }]
        }] });

/** @internal */
class CommunicationListService extends StopChecksListCommunicationService {
}
/** @nocollapse */ CommunicationListService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CommunicationListService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ CommunicationListService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CommunicationListService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CommunicationListService, decorators: [{
            type: Injectable
        }] });

class StopChecksReviewFormComponent {
}
/** @nocollapse */ StopChecksReviewFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksReviewFormComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ StopChecksReviewFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StopChecksReviewFormComponent, selector: "bb-stop-checks-review-view", ngImport: i0, template: ` <bb-review-container></bb-review-container> `, isInline: true, components: [{ type: i3$1.ӨReviewContainerComponent, selector: "bb-review-container" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksReviewFormComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-stop-checks-review-view',
                    template: ` <bb-review-container></bb-review-container> `,
                }]
        }] });

const StopChecksDefaultRoute = {
    path: '',
    component: StopChecksJourneyComponent,
    children: [
        {
            path: '',
            redirectTo: 'list',
            pathMatch: 'full',
        },
        {
            path: 'list',
            component: StopChecksListComponent,
            children: [
                {
                    path: 'form',
                    component: StopChecksCreateModalComponent,
                    children: [
                        {
                            path: '',
                            pathMatch: 'full',
                            component: StopChecksCreateFormComponent,
                        },
                        { path: 'review', component: StopChecksReviewFormComponent },
                    ],
                },
            ],
        },
    ],
};
/**
 * @deprecated Please use StopChecksDefaultRoute instead
 */
const stopChecksRoutes = StopChecksDefaultRoute;
class StopChecksJourneyModule {
    static forRoot(data = {
        route: StopChecksDefaultRoute,
    }) {
        return {
            ngModule: StopChecksJourneyModule,
            providers: [provideRoutes([data.route])],
        };
    }
}
/** @nocollapse */ StopChecksJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ StopChecksJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksJourneyModule, declarations: [StopChecksJourneyComponent,
        StopChecksListComponent,
        StopChecksCreateModalComponent,
        StopChecksCreateFormComponent,
        StopChecksReviewFormComponent], imports: [CommonModule,
        ModalModule, i1$1.BackbaseCoreModule, RouterModule,
        HeaderModule,
        PayordStopChecksListWidgetAngModule,
        PayordStopChecksWidgetAngModule,
        ModalModule] });
/** @nocollapse */ StopChecksJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksJourneyModule, providers: [
        StopChecksJourneyService,
        {
            provide: StopChecksListCommunicationService,
            useClass: CommunicationListService,
        },
    ], imports: [[
            CommonModule,
            ModalModule,
            BackbaseCoreModule.withConfig({
                classMap: {
                    StopChecksJourneyComponent,
                },
            }),
            RouterModule,
            HeaderModule,
            PayordStopChecksListWidgetAngModule,
            PayordStopChecksWidgetAngModule,
            ModalModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksJourneyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        StopChecksJourneyComponent,
                        StopChecksListComponent,
                        StopChecksCreateModalComponent,
                        StopChecksCreateFormComponent,
                        StopChecksReviewFormComponent,
                    ],
                    imports: [
                        CommonModule,
                        ModalModule,
                        BackbaseCoreModule.withConfig({
                            classMap: {
                                StopChecksJourneyComponent,
                            },
                        }),
                        RouterModule,
                        HeaderModule,
                        PayordStopChecksListWidgetAngModule,
                        PayordStopChecksWidgetAngModule,
                        ModalModule,
                    ],
                    providers: [
                        StopChecksJourneyService,
                        {
                            provide: StopChecksListCommunicationService,
                            useClass: CommunicationListService,
                        },
                    ],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { StopChecksCreateFormComponent, StopChecksCreateModalComponent, StopChecksDefaultRoute, StopChecksJourneyComponent, StopChecksJourneyConfigurationToken, StopChecksJourneyModule, StopChecksJourneyService, StopChecksListComponent, StopChecksNavigationService, StopChecksReviewFormComponent, stopChecksDefaultConfig, stopChecksRoutes };
//# sourceMappingURL=backbase-stop-checks-journey-ang.js.map
