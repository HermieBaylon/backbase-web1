{"version":3,"file":"stop-checks-create-preferences.service.js","sourceRoot":"","sources":["../../../../../../libs/stop-checks-journey-ang/src/lib/services/stop-checks-create-preferences.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,eAAe,EAAE,MAAM,MAAM,CAAC;AAEvC,OAAO,EACL,yCAAyC,EACzC,kCAAkC,GACnC,MAAM,yCAAyC,CAAC;AACjD,OAAO,EAAE,wBAAwB,EAAE,MAAM,sCAAsC,CAAC;;;AAGhF,gBAAgB;AAEhB,MAAM,OAAO,kCAAkC;IAsC7C,YAGmB,kBAA+C,EAC/C,aAAuC;QADvC,uBAAkB,GAAlB,kBAAkB,CAA6B;QAC/C,kBAAa,GAAb,aAAa,CAA0B;QAzCzC,WAAM,iDAClB,kCAAkC,GAClC,IAAI,CAAC,aAAa,CAAC,aAAa,GAChC,CAAC,IAAI,CAAC,kBAAkB,IAAI,EAAE,CAAC,EAClC;QAEe,qBAAgB,GAAG,IAAI,eAAe,CACrD,IAAI,CAAC,MAAM,CAAC,YAAY,CACzB,CAAC;QACe,yBAAoB,GAAG,IAAI,eAAe,CACzD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAC7B,CAAC;QACe,kBAAa,GAAG,IAAI,eAAe,CAClD,IAAI,CAAC,MAAM,CAAC,SAAS,CACtB,CAAC;QACe,gCAA2B,GAAG,IAAI,eAAe,CAEhE,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;QACtB,uBAAkB,GAAG,IAAI,eAAe,CAEvD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACT,8BAAyB,GAAG,IAAI,eAAe,CAE9D,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAChB,uBAAkB,GAAG,IAAI,eAAe,CAEvD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEjB,kBAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QACrD,sBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAC7D,eAAU,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAC/C,6BAAwB,GAC/B,IAAI,CAAC,2BAA2B,CAAC,YAAY,EAAE,CAAC;QACzC,gBAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QACrD,uBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC;QACnE,gBAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IAO3D,CAAC;;mJA3CO,kCAAkC,kBAwCnC,yCAAyC;uJAxCxC,kCAAkC;4FAAlC,kCAAkC;kBAD9C,UAAU;;0BAwCN,QAAQ;;0BACR,MAAM;2BAAC,yCAAyC","sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AccessControlConfigProvider } from '@backbase/payment-orders-ang';\nimport {\n  BB_STOP_CHECK_ACCESS_CONTROL_CONFIG_TOKEN,\n  defaultStopChecksCreatePreferences,\n} from '@backbase/payord-stop-checks-widget-ang';\nimport { StopChecksJourneyService } from './stop-checks-journey-config.service';\nimport { SchemeName } from '@backbase/data-ang/stop-checks';\n\n/** @internal */\n@Injectable()\nexport class StopChecksCreatePreferencesService {\n  private readonly config = {\n    ...defaultStopChecksCreatePreferences,\n    ...this.journeyConfig.configuration,\n    ...(this.accessControlToken || {}),\n  };\n\n  private readonly resourceNameSub$ = new BehaviorSubject<string>(\n    this.config.resourceName\n  );\n  private readonly businessFunctionSub$ = new BehaviorSubject<string>(\n    this.config.businessFunction\n  );\n  private readonly privilegeSub$ = new BehaviorSubject<string>(\n    this.config.privilege\n  );\n  private readonly notificationDismissTimeSub$ = new BehaviorSubject<\n    number | undefined\n  >(this.config.notificationDismissTime);\n  private readonly currenciesSubject$ = new BehaviorSubject<\n    string[] | undefined\n  >(this.config.currencies);\n  private readonly checksRangeNumberSubject$ = new BehaviorSubject<\n    number | undefined\n  >(this.config.checksRangeNumber);\n  private readonly schemeNameSubject$ = new BehaviorSubject<\n    SchemeName | undefined\n  >(this.config.schemeName);\n\n  readonly resourceName$ = this.resourceNameSub$.asObservable();\n  readonly businessFunction$ = this.businessFunctionSub$.asObservable();\n  readonly privilege$ = this.privilegeSub$.asObservable();\n  readonly notificationDismissTime$ =\n    this.notificationDismissTimeSub$.asObservable();\n  readonly currencies$ = this.currenciesSubject$.asObservable();\n  readonly checksRangeNumber$ = this.checksRangeNumberSubject$.asObservable();\n  readonly schemeName$ = this.schemeNameSubject$.asObservable();\n\n  constructor(\n    @Optional()\n    @Inject(BB_STOP_CHECK_ACCESS_CONTROL_CONFIG_TOKEN)\n    private readonly accessControlToken: AccessControlConfigProvider,\n    private readonly journeyConfig: StopChecksJourneyService\n  ) {}\n}\n"]}