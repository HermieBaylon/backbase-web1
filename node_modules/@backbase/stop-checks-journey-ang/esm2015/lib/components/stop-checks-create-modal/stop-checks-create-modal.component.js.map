{"version":3,"file":"stop-checks-create-modal.component.js","sourceRoot":"","sources":["../../../../../../../libs/stop-checks-journey-ang/src/lib/components/stop-checks-create-modal/stop-checks-create-modal.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzD,OAAO,EACL,cAAc,EACd,iBAAiB,EACjB,aAAa,EACb,YAAY,EACZ,4BAA4B,GAC7B,MAAM,yCAAyC,CAAC;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAC7D,OAAO,EAAE,kCAAkC,EAAE,MAAM,uDAAuD,CAAC;AAC3G,OAAO,EAAE,2BAA2B,EAAE,MAAM,mCAAmC,CAAC;AAChF,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAE/B,OAAO,EAAE,kCAAkC,EAAE,MAAM,8CAA8C,CAAC;;;;;;AA0BlG,MAAM,OAAO,8BAA8B;IAWzC,YACmB,wBAA4D,EAC5D,MAAc,EACd,cAA8B,EAC9B,YAA0B;QAH1B,6BAAwB,GAAxB,wBAAwB,CAAoC;QAC5D,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAd5B,cAAS,GAAG,IAAI,OAAO,EAAE,CAAC;QAClC,iBAAY,GAAoB;YACvC,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,QAAQ;SACnB,CAAC;IAWC,CAAC;IATI,cAAc;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IACpE,CAAC;IASD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,KAAK;aACpB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/B,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACpB,IACE,MAAM,KAAK,aAAa,CAAC,oBAAoB;gBAC7C,MAAM,KAAK,aAAa,CAAC,OAAO,EAChC;gBACA,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBACpD,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;;+IAvCU,8BAA8B;mIAA9B,8BAA8B,sDAX9B;QACT;YACE,OAAO,EAAE,4BAA4B;YACrC,QAAQ,EAAE,kCAAkC;SAC7C;QACD,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,2BAA2B,EAAE;QACrE,YAAY;QACZ,cAAc;QACd,aAAa;KACd,0BApBS;;;;;;;;;;GAUT;4FAYU,8BAA8B;kBAxB1C,SAAS;mBAAC;oBACT,QAAQ,EAAE,6BAA6B;oBACvC,QAAQ,EAAE;;;;;;;;;;GAUT;oBACD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,4BAA4B;4BACrC,QAAQ,EAAE,kCAAkC;yBAC7C;wBACD,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,2BAA2B,EAAE;wBACrE,YAAY;wBACZ,cAAc;wBACd,aAAa;qBACd;iBACF","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ApiHttpService,\n  NavigationService,\n  RequestStatus,\n  StateService,\n  StopChecksPreferencesService,\n} from '@backbase/payord-stop-checks-widget-ang';\nimport { ChecksService } from '@backbase/payment-orders-ang';\nimport { StopChecksCreatePreferencesService } from '../../services/stop-checks-create-preferences.service';\nimport { StopChecksNavigationService } from '../../services/navigation.service';\nimport { pluck, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { StopChecksListCommunicationService } from '@backbase/payord-stop-checks-list-widget-ang';\n\n@Component({\n  selector: 'bb-stop-checks-create-modal',\n  template: `\n    <bb-modal-ui\n      [isOpen]=\"true\"\n      [modalOptions]=\"modalOptions\"\n      (cancel)=\"closeModal()\"\n    >\n      <div class=\"card card-body\">\n        <router-outlet></router-outlet>\n      </div>\n    </bb-modal-ui>\n  `,\n  providers: [\n    {\n      provide: StopChecksPreferencesService,\n      useClass: StopChecksCreatePreferencesService,\n    },\n    { provide: NavigationService, useClass: StopChecksNavigationService },\n    StateService,\n    ApiHttpService,\n    ChecksService,\n  ],\n})\nexport class StopChecksCreateModalComponent implements OnInit, OnDestroy {\n  private readonly destroyed = new Subject();\n  readonly modalOptions: NgbModalOptions = {\n    centered: true,\n    backdrop: 'static',\n  };\n\n  private navigateToList() {\n    this.router.navigate(['..'], { relativeTo: this.activatedRoute });\n  }\n\n  constructor(\n    private readonly communicationListService: StopChecksListCommunicationService,\n    private readonly router: Router,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.stateService.store\n      .pipe(pluck('status'))\n      .pipe(takeUntil(this.destroyed))\n      .subscribe((status) => {\n        if (\n          status === RequestStatus.REQUEST_IS_SUBMITTED ||\n          status === RequestStatus.DISCARD\n        ) {\n          this.communicationListService.refreshListSub.next();\n          this.navigateToList();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n  }\n\n  closeModal() {\n    this.navigateToList();\n  }\n}\n"]}