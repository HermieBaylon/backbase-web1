export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"detailedAccount.js","sourceRoot":"","sources":["../../../model/detailedAccount.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Employee client\n * List service agreements, view arrangements, view transactions, view smart insights and manage cards for a given customer.\n *\n * The version of the OpenAPI document: 1.7.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { DetailedAccountProduct } from './detailedAccountProduct';\nimport { DetailedAccountUserPreferences } from './detailedAccountUserPreferences';\nimport { DetailedAccountState } from './detailedAccountState';\nimport { TimePeriod } from './timePeriod';\nimport { DetailedAccountDebitCards } from './detailedAccountDebitCards';\n\n\nexport interface DetailedAccount { \n    /**\n     * A unique identifier for the Arrangement object that is generated and used Internally in DBS\n     */\n    [\"id\"]: string;\n    /**\n     * A unique external identifier for the arrangement\n     */\n    [\"externalArrangementId\"]: string;\n    /**\n     * The name that can be assigned by the bank to label a arrangement\n     */\n    [\"name\"]?: string;\n    /**\n     * Amount of money available before any adjustments have been made for deposits in transit, checks that have not yet been cleared, reserve requirements and interest received\n     */\n    [\"bookedBalance\"]?: number;\n    /**\n     * The amount that is available for transactions\n     */\n    [\"availableBalance\"]?: number;\n    /**\n     * The maximum amount of credit that the financial institution will extend to the account holder for this arrangement\n     */\n    [\"creditLimit\"]?: number;\n    /**\n     * Specifying the IBAN - IBAN is short for International Bank Account Number of the account\n     */\n    [\"IBAN\"]?: string;\n    /**\n     * Specifying the BBAN of the account - BBAN is short for Basic Bank Account Number. It represents a country-specific bank account number\n     */\n    [\"BBAN\"]?: string;\n    /**\n     * The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount\n     */\n    [\"currency\"]: string;\n    /**\n     * Defines if transfer to another party is allowed\n     */\n    [\"externalTransferAllowed\"]?: boolean;\n    /**\n     * Defines if urgent transfer is allowed\n     */\n    [\"urgentTransferAllowed\"]?: boolean;\n    /**\n     * The interest that is earned (credit interest) or due (debit interest) but not settled yet\n     */\n    [\"accruedInterest\"]?: number;\n    /**\n     * First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.\n     */\n    [\"number\"]?: string;\n    /**\n     * The amount that was (originally) contracted for the respective product. This is mainly used in the context of loans and deposits. \n     */\n    [\"principalAmount\"]?: number;\n    /**\n     * The total current value of all the securities kept in the account\n     */\n    [\"currentInvestmentValue\"]?: number;\n    /**\n     * A unique identifier(number) assigned to identify the contract for the product\n     */\n    [\"productNumber\"]?: string;\n    /**\n     * Bank Identifier Code - international bank code that identifies particular banks worldwide\n     */\n    [\"BIC\"]?: string;\n    /**\n     * This is to accommodate additional country specific fields like Sort Code in UK\n     */\n    [\"bankBranchCode\"]?: string;\n    /**\n     * The date of activation of the account in the bank\\'s system\n     */\n    [\"accountOpeningDate\"]?: string;\n    /**\n     * The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal.\n     */\n    [\"accountInterestRate\"]?: number;\n    /**\n     * The balance of the account on a specific date that needs to be used for the calculation of interest. NB! If no date is specified (like for the book date balance) the current date can be assumed.\n     */\n    [\"valueDateBalance\"]?: number;\n    /**\n     * Monetary amount of the used overdraft\n     */\n    [\"creditLimitUsage\"]?: number;\n    /**\n     * Overdraft Interest is an interest applied to the account for any time throughout the month when the account is overdrawn\n     */\n    [\"creditLimitInterestRate\"]?: number;\n    /**\n     * The date after which overdraft will no longer be available to the account (renewed automatically or cancelled)\n     */\n    [\"creditLimitExpiryDate\"]?: string;\n    /**\n     * The date on which the credit card becomes active\n     */\n    [\"startDate\"]?: string;\n    [\"termUnit\"]?: TimePeriod;\n    /**\n     * Number for the Term Unit for the product arranged between Bank and customer\n     */\n    [\"termNumber\"]?: number;\n    [\"interestPaymentFrequencyUnit\"]?: TimePeriod;\n    /**\n     * Number of times per year when the accumulated interest is settled to the account on a regular basis. The frequency could be yearly, half-yearly, quarterly, monthly, weekly, daily (or not at all, until maturity).\n     */\n    [\"interestPaymentFrequencyNumber\"]?: number;\n    /**\n     * End term of a holding period\n     */\n    [\"maturityDate\"]?: string;\n    /**\n     * Amount payable at the end of a holding period of a product (maturity date). For deposit all of the interest is usualy paid at maturity date (IF the term is shorter then one year).\n     */\n    [\"maturityAmount\"]?: number;\n    /**\n     * Indicates whether or not an arrangement is to be continued after maturity automatically. Usually the product is renewed using the same principal and term unless renegotiation has taken place prior to expiration.\n     */\n    [\"autoRenewalIndicator\"]?: boolean;\n    /**\n     * Account for settlement of accumulated interest on a regular basis / Account that provides quick access to accumulated cash to facilitate daily settlements with other businesses\n     */\n    [\"interestSettlementAccount\"]?: string;\n    /**\n     * The remaining portion of the original loan amount, plus any interest that has been capitalized, that is still owed. Interest accrues on the outstanding principal balance / The value date balance of the arrangement\n     */\n    [\"outstandingPrincipalAmount\"]?: number;\n    /**\n     * A fixed payment amount paid by a borrower to the bank at a specified date each calendar month.\n     */\n    [\"monthlyInstalmentAmount\"]?: number;\n    /**\n     * The part of a debt that is overdue after missing one or more required payments. The amount of the arrears is the amount accrued from the date on which the first missed payment was due.\n     */\n    [\"amountInArrear\"]?: number;\n    /**\n     * Minimum amount that a customer must have in an account in order to receive some sort of service, such as keeping the account open or receive interest\n     */\n    [\"minimumRequiredBalance\"]?: number;\n    /**\n     * The number of the account the credit card transactions settle on (so actually the reference to the settlement account of the card)\n     */\n    [\"creditCardAccountNumber\"]?: string;\n    /**\n     * Expiration date of a credit card, after which is no longer valid\n     */\n    [\"validThru\"]?: string;\n    /**\n     * The interest rate or rates which would be used for a particular arrangement\n     */\n    [\"applicableInterestRate\"]?: number;\n    /**\n     * Amount of money the user is available to use from the Credit limit of the account\n     */\n    [\"remainingCredit\"]?: number;\n    /**\n     * Outstanding payment refers to the outstanding [unpaid] balance, i.e., the current amount due\n     */\n    [\"outstandingPayment\"]?: number;\n    /**\n     * The minimum payment set a percentage of balance, or a fixed cash amount\n     */\n    [\"minimumPayment\"]?: number;\n    /**\n     * Minimum Payment Due Date shown on your monthly statement to remain in good standing\n     */\n    [\"minimumPaymentDueDate\"]?: string;\n    /**\n     * The value of an asset to its owner, depending on his or her expectations\n     */\n    [\"totalInvestmentValue\"]?: number;\n    [\"debitCards\"]?: Array<DetailedAccountDebitCards>;\n    /**\n     * Address of the Payer/Payee - Alternate address line for the account\n     */\n    [\"accountHolderAddressLine1\"]?: string;\n    /**\n     * Address of the Payer/Payee - Alternate address line for the account\n     */\n    [\"accountHolderAddressLine2\"]?: string;\n    /**\n     * Street name of the Payer/Payee - Alternate street name for the account.\n     */\n    [\"accountHolderStreetName\"]?: string;\n    /**\n     * Town of the Payer/Payee - Alternate town for the account\n     */\n    [\"town\"]?: string;\n    /**\n     * Post Code of the Payer/Payee - - Alternate post code for the account\n     */\n    [\"postCode\"]?: string;\n    /**\n     * Post Code of the Payer/Payee - - Alternate country sub division for the account\n     */\n    [\"countrySubDivision\"]?: string;\n    /**\n     * Party(s) with a relationship to the account.\n     */\n    [\"accountHolderNames\"]?: string;\n    /**\n     * Country of the account holder\n     */\n    [\"accountHolderCountry\"]?: string;\n    /**\n     * Indicator whether or not the arrangement can be used in payment orders as credit account - account to transfer TO\n     */\n    [\"creditAccount\"]?: boolean;\n    /**\n     * Indicator whether or not the arrangement can be used in payment orders as debit account - account to transfer FROM\n     */\n    [\"debitAccount\"]?: boolean;\n    /**\n     * Last date of balance (or other parameter) update for the given arrangement\n     */\n    [\"lastUpdateDate\"]?: string;\n    /**\n     * The name that can be assigned by the customer to label the arrangement\n     */\n    [\"bankAlias\"]?: string;\n    /**\n     * Indicate if the account is regular or external\n     */\n    [\"sourceId\"]?: string;\n    /**\n     * Reference to the product of which the arrangement is an instantiation. This is an external product id\n     */\n    [\"productId\"]: string;\n    /**\n     * The label/name that is used for the respective product kind ex. Current Account, Savings Account\n     */\n    [\"productKindName\"]?: string;\n    /**\n     * DEPRECATED 2.12.2 AND REPLACED BY `userPreferences.visible`. Indicator whether to show or hide the arrangement on the widget\n     */\n    [\"visible\"]?: boolean;\n    /**\n     * References to the legal entities that is are owners of the arrangement.\n     */\n    [\"legalEntityIds\"]: Array<string>;\n    /**\n     * The label/name that is used to label a specific product type\n     */\n    [\"productTypeName\"]?: string;\n    /**\n     * A unique identifier for the legal entity for which the arrangement is assigned to (this property is being deprecated and its being replaced by legalEntityIds).\n     */\n    [\"externalLegalEntityId\"]: string;\n    /**\n     * A unique identifier for the product that the arrangement applies to\n     */\n    [\"externalProductId\"]: string;\n    [\"userPreferences\"]?: DetailedAccountUserPreferences;\n    [\"product\"]?: DetailedAccountProduct;\n    [\"state\"]?: DetailedAccountState;\n    /**\n     * External reference to the arrangement state\n     */\n    [\"externalStateId\"]?: string;\n    /**\n     * Indicate if the account has parent child relationship with another account\n     */\n    [\"parentId\"]?: string;\n    /**\n     * Indicate if the account has parent child relationship with another account\n     */\n    [\"externalParentId\"]?: string;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\n\n"]}