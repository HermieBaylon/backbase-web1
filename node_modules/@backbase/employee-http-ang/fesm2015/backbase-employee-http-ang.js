import * as i0 from '@angular/core';
import { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';
import * as i1 from '@angular/common/http';
import { HttpHeaders, HttpParams } from '@angular/common/http';
import * as i2 from '@backbase/foundation-ang/data-http';
import { createMocks } from '@backbase/foundation-ang/data-http';

const CreditDebitIndicator = {
    CRDT: 'CRDT',
    DBIT: 'DBIT'
};

var DeliveryTransitStep;
(function (DeliveryTransitStep) {
    DeliveryTransitStep.StatusEnum = {
        SUCCESS: 'SUCCESS',
        FAILED: 'FAILED',
        PENDING: 'PENDING'
    };
})(DeliveryTransitStep || (DeliveryTransitStep = {}));

const Direction = {
    ASC: 'ASC',
    DESC: 'DESC'
};

const LockStatus = {
    LOCKED: 'LOCKED',
    UNLOCKED: 'UNLOCKED'
};

const OrderByTransactions = {
    Description: 'description',
    BookingDate: 'bookingDate',
    ArrangementId: 'arrangementId',
    Reference: 'reference',
    TypeGroup: 'typeGroup',
    Type: 'type',
    Category: 'category',
    ValueDate: 'valueDate',
    Amount: 'amount',
    Currency: 'currency',
    CreditDebitIndicator: 'creditDebitIndicator',
    InstructedAmount: 'instructedAmount',
    InstructedCurrency: 'instructedCurrency',
    CurrencyExchangeRate: 'currencyExchangeRate',
    CounterPartyName: 'counterPartyName',
    CounterPartyAccountNumber: 'counterPartyAccountNumber',
    CheckSerialNumber: 'checkSerialNumber'
};

const StatusEnriched = {
    OPEN: 'OPEN',
    CLOSED: 'CLOSED'
};

const TimePeriod = {
    D: 'D',
    W: 'W',
    M: 'M',
    Y: 'Y'
};

const EMPLOYEE_BASE_PATH = new InjectionToken('EMPLOYEE_BASE_PATH');
const COLLECTION_FORMATS = {
    'csv': ',',
    'tsv': '   ',
    'ssv': ' ',
    'pipes': '|'
};

class EmployeeConfiguration {
    constructor(configurationParameters = {}) {
        this.apiKeys = configurationParameters.apiKeys;
        this.username = configurationParameters.username;
        this.password = configurationParameters.password;
        this.accessToken = configurationParameters.accessToken;
        this.basePath = configurationParameters.basePath;
        this.withCredentials = configurationParameters.withCredentials;
        this.encoder = configurationParameters.encoder;
        if (configurationParameters.credentials) {
            this.credentials = configurationParameters.credentials;
        }
        else {
            this.credentials = {};
        }
    }
    selectHeaderContentType(contentTypes) {
        if (contentTypes.length === 0) {
            return undefined;
        }
        const type = contentTypes.find((x) => this.isJsonMime(x));
        if (type === undefined) {
            return contentTypes[0];
        }
        return type;
    }
    selectHeaderAccept(accepts) {
        if (accepts.length === 0) {
            return undefined;
        }
        const type = accepts.find((x) => this.isJsonMime(x));
        if (type === undefined) {
            return accepts[0];
        }
        return type;
    }
    isJsonMime(mime) {
        const jsonMime = new RegExp('^(application\/json|[^;/ \t]+\/[^;/ \t]+[+]json)[ \t]*(;.*)?$', 'i');
        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');
    }
    lookupCredential(key) {
        const value = this.credentials[key];
        return typeof value === 'function'
            ? value()
            : value;
    }
}
const CONFIG_TOKEN = new InjectionToken('api-data-module EmployeeConfiguration');

class EmployeeApiModule {
    constructor(parentModule, http, dataModulesManager, config) {
        if (parentModule) {
            throw new Error('EmployeeApiModule is already loaded. Import in your base AppModule only.');
        }
        if (!http) {
            throw new Error('You need to import the HttpClientModule in your AppModule! \n' +
                'See also https://github.com/angular/angular/issues/20575');
        }
        if (dataModulesManager) {
            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {
                apiRoot: '',
                servicePath: config.basePath || '',
                headers: {},
            });
        }
    }
    static forRoot(configurationFactory) {
        return {
            ngModule: EmployeeApiModule,
            providers: [{ provide: EmployeeConfiguration, useFactory: configurationFactory }]
        };
    }
}
EmployeeApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EmployeeApiModule, deps: [{ token: EmployeeApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: EmployeeConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });
EmployeeApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EmployeeApiModule });
EmployeeApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EmployeeApiModule, providers: [], imports: [[]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EmployeeApiModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [],
                    declarations: [],
                    exports: [],
                    providers: []
                }]
        }], ctorParameters: function () { return [{ type: EmployeeApiModule, decorators: [{
                    type: Optional
                }, {
                    type: SkipSelf
                }] }, { type: i1.HttpClient, decorators: [{
                    type: Optional
                }] }, { type: i2.DataModulesManager, decorators: [{
                    type: Optional
                }] }, { type: EmployeeConfiguration }]; } });

class CustomHttpParameterCodec {
    encodeKey(k) {
        return encodeURIComponent(k);
    }
    encodeValue(v) {
        return encodeURIComponent(v);
    }
    decodeKey(k) {
        return decodeURIComponent(k);
    }
    decodeValue(v) {
        return decodeURIComponent(v);
    }
}

class AccountService {
    constructor(httpClient, basePath, configuration) {
        this.httpClient = httpClient;
        this.basePath = '';
        this.defaultHeaders = new HttpHeaders();
        this.configuration = new EmployeeConfiguration();
        if (configuration) {
            this.configuration = configuration;
        }
        if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
                basePath = this.basePath;
            }
            this.configuration.basePath = basePath;
        }
        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();
    }
    addToHttpParams(httpParams, value, key) {
        if (typeof value === "object" && value instanceof Date === false) {
            httpParams = this.addToHttpParamsRecursive(httpParams, value);
        }
        else {
            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
        }
        return httpParams;
    }
    addToHttpParamsRecursive(httpParams, value, key) {
        if (value == null) {
            return httpParams;
        }
        if (typeof value === "object") {
            if (Array.isArray(value)) {
                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));
            }
            else if (value instanceof Date) {
                if (key != null) {
                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                }
                else {
                    throw Error("key may not be null if value is Date");
                }
            }
            else {
                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));
            }
        }
        else if (key != null) {
            httpParams = httpParams.append(key, value);
        }
        else {
            throw Error("key may not be null if value is not object or array");
        }
        return httpParams;
    }
    getAccount(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getAccount.');
        }
        const _serviceAgreementId = requestParameters["serviceAgreementId"];
        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {
            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getAccount.');
        }
        const _accountId = requestParameters["accountId"];
        if (_accountId === null || _accountId === undefined) {
            throw new Error('Required parameter accountId was null or undefined when calling getAccount.');
        }
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/accounts/${encodeURIComponent(String(_accountId))}`, {
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    getAccountUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getAccount.');
        }
        const _serviceAgreementId = requestParameters["serviceAgreementId"];
        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {
            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getAccount.');
        }
        const _accountId = requestParameters["accountId"];
        if (_accountId === null || _accountId === undefined) {
            throw new Error('Required parameter accountId was null or undefined when calling getAccount.');
        }
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/accounts/${encodeURIComponent(String(_accountId))}`;
    }
    getAccounts(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getAccounts.');
        }
        const _serviceAgreementId = requestParameters["serviceAgreementId"];
        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {
            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getAccounts.');
        }
        const _from = requestParameters["from"];
        const _size = requestParameters["size"];
        let queryParameters = new HttpParams({ encoder: this.encoder });
        if (_from !== undefined && _from !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');
        }
        if (_size !== undefined && _size !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');
        }
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/accounts`, {
            params: queryParameters,
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    getAccountsUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getAccounts.');
        }
        const _serviceAgreementId = requestParameters["serviceAgreementId"];
        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {
            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getAccounts.');
        }
        const _from = requestParameters["from"];
        const _size = requestParameters["size"];
        let queryParameters = new HttpParams({ encoder: this.encoder });
        if (_from !== undefined && _from !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');
        }
        if (_size !== undefined && _size !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');
        }
        const queryString = queryParameters.toString();
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/accounts${queryString ? `?${queryString}` : ''}`;
    }
}
AccountService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountService, deps: [{ token: i1.HttpClient }, { token: EMPLOYEE_BASE_PATH, optional: true }, { token: EmployeeConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
AccountService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [EMPLOYEE_BASE_PATH]
                }] }, { type: EmployeeConfiguration, decorators: [{
                    type: Optional
                }] }]; } });

const AccountServiceGetAccountMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements/{serviceAgreementId}/accounts/{accountId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "1cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                    "externalArrangementId": "d64c31c4-50e4-11e7-b114-b2f933d5fe66",
                    "name": "Spending fee",
                    "bookedBalance": 100.1,
                    "availableBalance": 100.2,
                    "creditLimit": 100.3,
                    "IBAN": "GB29NWBK60161331926819",
                    "BBAN": "BBAN",
                    "currency": "EUR",
                    "bankAlias": "Secret account",
                    "externalTransferAllowed": true,
                    "urgentTransferAllowed": false,
                    "accruedInterest": 3.3,
                    "number": "PANSuffix",
                    "principalAmount": 100.4,
                    "currentInvestmentValue": 100.5,
                    "productNumber": "productNumber",
                    "BIC": "BICExample1",
                    "bankBranchCode": "bankBranchCode1",
                    "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                    "accountInterestRate": 100.2,
                    "valueDateBalance": 100.1,
                    "creditLimitUsage": 100.3,
                    "creditLimitInterestRate": 100.4,
                    "creditLimitExpiryDate": "2019-09-28T16:41:41.090Z",
                    "startDate": "2016-02-28T16:41:41.090Z",
                    "termUnit": "Y",
                    "termNumber": 50,
                    "interestPaymentFrequencyUnit": "M",
                    "interestPaymentFrequencyNumber": 15,
                    "maturityDate": "2017-02-28T16:41:41.090Z",
                    "maturityAmount": 99.5,
                    "autoRenewalIndicator": true,
                    "interestSettlementAccount": "interestSettlementAccount1",
                    "outstandingPrincipalAmount": 100.2,
                    "monthlyInstalmentAmount": 100.1,
                    "amountInArrear": 100.3,
                    "minimumRequiredBalance": 80.4,
                    "creditCardAccountNumber": "123456",
                    "validThru": "2019-02-28T16:41:41.090Z",
                    "applicableInterestRate": 101.2,
                    "remainingCredit": 50,
                    "outstandingPayment": 105.5,
                    "minimumPayment": 51.1,
                    "minimumPaymentDueDate": "2018-02-28T16:41:41.090Z",
                    "totalInvestmentValue": 110.2,
                    "debitCards": [{
                            "number": "4578",
                            "expiryDate": "2020-08-22",
                            "cardId": "id2",
                            "cardholderName": "John Doe",
                            "cardType": "Visa Electron",
                            "cardStatus": "Active"
                        }, {
                            "number": "3241",
                            "expiryDate": "2019-01-14",
                            "cardId": "id1",
                            "cardholderName": "John Doe",
                            "cardType": "Visa",
                            "cardStatus": "Active"
                        }],
                    "accountHolderAddressLine1": "accountHolderAddressLine11",
                    "accountHolderAddressLine2": "accountHolderAddressLine12",
                    "accountHolderStreetName": "street1",
                    "town": "Amsterdam",
                    "postCode": "5000",
                    "countrySubDivision": "subDivision",
                    "accountHolderNames": "Okuneva Spencer,Danthe Mohr",
                    "accountHolderCountry": "AF",
                    "creditAccount": true,
                    "debitAccount": true,
                    "lastUpdateDate": "2019-09-28T16:41:41.090Z",
                    "productId": "productId",
                    "productKindName": "Current Account",
                    "visible": true,
                    "legalEntityIds": ["le1", "le2"],
                    "productTypeName": "productTypeName",
                    "externalLegalEntityId": "le1",
                    "externalProductId": "externalProductidId",
                    "userPreferences": {
                        "arrangementId": "9aabca5b-63ae-47d9-8d63-c5ed0e831dfa",
                        "alias": "My Bank Account",
                        "visible": true,
                        "favorite": false
                    },
                    "product": {
                        "externalId": "externalProductidId",
                        "externalTypeId": "externalProductTypeId",
                        "typeName": "productTypeName",
                        "productKind": {
                            "externalKindId": "kind1",
                            "kindName": "Current Account",
                            "kindUri": "current-account"
                        }
                    },
                    "state": {
                        "externalStateId": "externalStateId1",
                        "state": "Active"
                    },
                    "sourceId": "LJBASI2XXXX",
                    "parentId": "100",
                    "externalParentId": "externalParentId100"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
const AccountServiceGetAccountsMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements/{serviceAgreementId}/accounts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "accounts": [{
                            "id": "9635966b-28e9-4479-8121-bb7bc9beeb62",
                            "name": "Mr Michael Scofield",
                            "number": "GB1234567890",
                            "IBAN": "GB29NWBK60161331926819",
                            "BBAN": "BBAN",
                            "accountNumber": "PANSuffix",
                            "creditCardAccountNumber": "5555555555554444",
                            "productNumber": "234",
                            "type": "SAVINGS",
                            "balance": {
                                "amount": "1.12",
                                "currencyCode": "USD"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
const AccountServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements/{serviceAgreementId}/accounts/{accountId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "1cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                    "externalArrangementId": "d64c31c4-50e4-11e7-b114-b2f933d5fe66",
                    "name": "Spending fee",
                    "bookedBalance": 100.1,
                    "availableBalance": 100.2,
                    "creditLimit": 100.3,
                    "IBAN": "GB29NWBK60161331926819",
                    "BBAN": "BBAN",
                    "currency": "EUR",
                    "bankAlias": "Secret account",
                    "externalTransferAllowed": true,
                    "urgentTransferAllowed": false,
                    "accruedInterest": 3.3,
                    "number": "PANSuffix",
                    "principalAmount": 100.4,
                    "currentInvestmentValue": 100.5,
                    "productNumber": "productNumber",
                    "BIC": "BICExample1",
                    "bankBranchCode": "bankBranchCode1",
                    "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                    "accountInterestRate": 100.2,
                    "valueDateBalance": 100.1,
                    "creditLimitUsage": 100.3,
                    "creditLimitInterestRate": 100.4,
                    "creditLimitExpiryDate": "2019-09-28T16:41:41.090Z",
                    "startDate": "2016-02-28T16:41:41.090Z",
                    "termUnit": "Y",
                    "termNumber": 50,
                    "interestPaymentFrequencyUnit": "M",
                    "interestPaymentFrequencyNumber": 15,
                    "maturityDate": "2017-02-28T16:41:41.090Z",
                    "maturityAmount": 99.5,
                    "autoRenewalIndicator": true,
                    "interestSettlementAccount": "interestSettlementAccount1",
                    "outstandingPrincipalAmount": 100.2,
                    "monthlyInstalmentAmount": 100.1,
                    "amountInArrear": 100.3,
                    "minimumRequiredBalance": 80.4,
                    "creditCardAccountNumber": "123456",
                    "validThru": "2019-02-28T16:41:41.090Z",
                    "applicableInterestRate": 101.2,
                    "remainingCredit": 50,
                    "outstandingPayment": 105.5,
                    "minimumPayment": 51.1,
                    "minimumPaymentDueDate": "2018-02-28T16:41:41.090Z",
                    "totalInvestmentValue": 110.2,
                    "debitCards": [{
                            "number": "4578",
                            "expiryDate": "2020-08-22",
                            "cardId": "id2",
                            "cardholderName": "John Doe",
                            "cardType": "Visa Electron",
                            "cardStatus": "Active"
                        }, {
                            "number": "3241",
                            "expiryDate": "2019-01-14",
                            "cardId": "id1",
                            "cardholderName": "John Doe",
                            "cardType": "Visa",
                            "cardStatus": "Active"
                        }],
                    "accountHolderAddressLine1": "accountHolderAddressLine11",
                    "accountHolderAddressLine2": "accountHolderAddressLine12",
                    "accountHolderStreetName": "street1",
                    "town": "Amsterdam",
                    "postCode": "5000",
                    "countrySubDivision": "subDivision",
                    "accountHolderNames": "Okuneva Spencer,Danthe Mohr",
                    "accountHolderCountry": "AF",
                    "creditAccount": true,
                    "debitAccount": true,
                    "lastUpdateDate": "2019-09-28T16:41:41.090Z",
                    "productId": "productId",
                    "productKindName": "Current Account",
                    "visible": true,
                    "legalEntityIds": ["le1", "le2"],
                    "productTypeName": "productTypeName",
                    "externalLegalEntityId": "le1",
                    "externalProductId": "externalProductidId",
                    "userPreferences": {
                        "arrangementId": "9aabca5b-63ae-47d9-8d63-c5ed0e831dfa",
                        "alias": "My Bank Account",
                        "visible": true,
                        "favorite": false
                    },
                    "product": {
                        "externalId": "externalProductidId",
                        "externalTypeId": "externalProductTypeId",
                        "typeName": "productTypeName",
                        "productKind": {
                            "externalKindId": "kind1",
                            "kindName": "Current Account",
                            "kindUri": "current-account"
                        }
                    },
                    "state": {
                        "externalStateId": "externalStateId1",
                        "state": "Active"
                    },
                    "sourceId": "LJBASI2XXXX",
                    "parentId": "100",
                    "externalParentId": "externalParentId100"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements/{serviceAgreementId}/accounts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "accounts": [{
                            "id": "9635966b-28e9-4479-8121-bb7bc9beeb62",
                            "name": "Mr Michael Scofield",
                            "number": "GB1234567890",
                            "IBAN": "GB29NWBK60161331926819",
                            "BBAN": "BBAN",
                            "accountNumber": "PANSuffix",
                            "creditCardAccountNumber": "5555555555554444",
                            "productNumber": "234",
                            "type": "SAVINGS",
                            "balance": {
                                "amount": "1.12",
                                "currencyCode": "USD"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
]);

class CardsService {
    constructor(httpClient, basePath, configuration) {
        this.httpClient = httpClient;
        this.basePath = '';
        this.defaultHeaders = new HttpHeaders();
        this.configuration = new EmployeeConfiguration();
        if (configuration) {
            this.configuration = configuration;
        }
        if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
                basePath = this.basePath;
            }
            this.configuration.basePath = basePath;
        }
        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();
    }
    addToHttpParams(httpParams, value, key) {
        if (typeof value === "object" && value instanceof Date === false) {
            httpParams = this.addToHttpParamsRecursive(httpParams, value);
        }
        else {
            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
        }
        return httpParams;
    }
    addToHttpParamsRecursive(httpParams, value, key) {
        if (value == null) {
            return httpParams;
        }
        if (typeof value === "object") {
            if (Array.isArray(value)) {
                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));
            }
            else if (value instanceof Date) {
                if (key != null) {
                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                }
                else {
                    throw Error("key may not be null if value is Date");
                }
            }
            else {
                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));
            }
        }
        else if (key != null) {
            httpParams = httpParams.append(key, value);
        }
        else {
            throw Error("key may not be null if value is not object or array");
        }
        return httpParams;
    }
    activate(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling activate.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling activate.');
        }
        const _body = requestParameters["body"];
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        const consumes = [
            'application/json'
        ];
        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);
        if (httpContentTypeSelected !== undefined) {
            headers = headers.set('Content-Type', httpContentTypeSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}/activation`, _body, {
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    activateUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling activate.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling activate.');
        }
        const _body = requestParameters["body"];
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}/activation`;
    }
    changeLimits(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling changeLimits.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling changeLimits.');
        }
        const _body = requestParameters["body"];
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        const consumes = [
            'application/json'
        ];
        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);
        if (httpContentTypeSelected !== undefined) {
            headers = headers.set('Content-Type', httpContentTypeSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}/limits`, _body, {
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    changeLimitsUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling changeLimits.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling changeLimits.');
        }
        const _body = requestParameters["body"];
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}/limits`;
    }
    getCardById(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getCardById.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling getCardById.');
        }
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}`, {
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    getCardByIdUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getCardById.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling getCardById.');
        }
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}`;
    }
    getCards(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getCards.');
        }
        const _cardIds = requestParameters["cardIds"];
        const _status = requestParameters["status"];
        const _statusEnriched = requestParameters["statusEnriched"];
        const _types = requestParameters["types"];
        const _from = requestParameters["from"];
        const _size = requestParameters["size"];
        let queryParameters = new HttpParams({ encoder: this.encoder });
        if (_cardIds) {
            _cardIds.forEach((element) => {
                queryParameters = this.addToHttpParams(queryParameters, element, 'cardIds');
            });
        }
        if (_status) {
            _status.forEach((element) => {
                queryParameters = this.addToHttpParams(queryParameters, element, 'status');
            });
        }
        if (_statusEnriched !== undefined && _statusEnriched !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _statusEnriched, 'statusEnriched');
        }
        if (_types) {
            _types.forEach((element) => {
                queryParameters = this.addToHttpParams(queryParameters, element, 'types');
            });
        }
        if (_from !== undefined && _from !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');
        }
        if (_size !== undefined && _size !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');
        }
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards`, {
            params: queryParameters,
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    getCardsUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getCards.');
        }
        const _cardIds = requestParameters["cardIds"];
        const _status = requestParameters["status"];
        const _statusEnriched = requestParameters["statusEnriched"];
        const _types = requestParameters["types"];
        const _from = requestParameters["from"];
        const _size = requestParameters["size"];
        let queryParameters = new HttpParams({ encoder: this.encoder });
        if (_cardIds) {
            _cardIds.forEach((element) => {
                queryParameters = this.addToHttpParams(queryParameters, element, 'cardIds');
            });
        }
        if (_status) {
            _status.forEach((element) => {
                queryParameters = this.addToHttpParams(queryParameters, element, 'status');
            });
        }
        if (_statusEnriched !== undefined && _statusEnriched !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _statusEnriched, 'statusEnriched');
        }
        if (_types) {
            _types.forEach((element) => {
                queryParameters = this.addToHttpParams(queryParameters, element, 'types');
            });
        }
        if (_from !== undefined && _from !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');
        }
        if (_size !== undefined && _size !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');
        }
        const queryString = queryParameters.toString();
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards${queryString ? `?${queryString}` : ''}`;
    }
    requestReplacement(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling requestReplacement.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling requestReplacement.');
        }
        const _body = requestParameters["body"];
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        const consumes = [
            'application/json'
        ];
        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);
        if (httpContentTypeSelected !== undefined) {
            headers = headers.set('Content-Type', httpContentTypeSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}/replacement`, _body, {
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    requestReplacementUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling requestReplacement.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling requestReplacement.');
        }
        const _body = requestParameters["body"];
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}/replacement`;
    }
    updateLockStatus(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling updateLockStatus.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling updateLockStatus.');
        }
        const _body = requestParameters["body"];
        if (_body === null || _body === undefined) {
            throw new Error('Required parameter body was null or undefined when calling updateLockStatus.');
        }
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        const consumes = [
            'application/json'
        ];
        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);
        if (httpContentTypeSelected !== undefined) {
            headers = headers.set('Content-Type', httpContentTypeSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}/lock-status`, _body, {
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    updateLockStatusUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling updateLockStatus.');
        }
        const _cardId = requestParameters["cardId"];
        if (_cardId === null || _cardId === undefined) {
            throw new Error('Required parameter cardId was null or undefined when calling updateLockStatus.');
        }
        const _body = requestParameters["body"];
        if (_body === null || _body === undefined) {
            throw new Error('Required parameter body was null or undefined when calling updateLockStatus.');
        }
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/cards/${encodeURIComponent(String(_cardId))}/lock-status`;
    }
}
CardsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsService, deps: [{ token: i1.HttpClient }, { token: EMPLOYEE_BASE_PATH, optional: true }, { token: EmployeeConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
CardsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [EMPLOYEE_BASE_PATH]
                }] }, { type: EmployeeConfiguration, decorators: [{
                    type: Optional
                }] }]; } });

const CardsServiceActivateMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}/activation",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "sara-card-3",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5237",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-04T12:52:20.906+00:00"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING"
                            }]
                    },
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 201,
                body: {
                    "id": "elon-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "World Elite",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2050",
                        "month": "12"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5235",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING",
                                "stepDateTime": "2019-06-20T14:21:25.001Z"
                            }]
                    },
                    "limits": [{
                            "id": "elon-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 500000.0,
                            "maxAmount": 100000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "elon-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 1000000.0,
                            "maxAmount": 800000.0,
                            "minAmount": 10000.0
                        }]
                }
            },
            {
                status: 201,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    },
                    "limits": [{
                            "id": "john-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 5000.0,
                            "maxAmount": 1000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "john-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 20000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 201,
                body: {
                    "id": "kim-card-2",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
        ]
    }]);
const CardsServiceChangeLimitsMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}/limits",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "sara-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "elon-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "World Elite",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2050",
                        "month": "12"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5235",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING",
                                "stepDateTime": "2019-06-20T14:21:25.001Z"
                            }]
                    },
                    "limits": [{
                            "id": "elon-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 500000.0,
                            "maxAmount": 100000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "elon-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 1000000.0,
                            "maxAmount": 800000.0,
                            "minAmount": 10000.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    },
                    "limits": [{
                            "id": "john-limit-1",
                            "channel": "ATM",
                            "frequency": "WEEKLY",
                            "amount": 1000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "john-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 20000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "kim-card-1",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Inactive",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
        ]
    }]);
const CardsServiceGetCardByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "sara-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "elon-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "World Elite",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2050",
                        "month": "12"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5235",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING",
                                "stepDateTime": "2019-06-20T14:21:25.001Z"
                            }]
                    },
                    "limits": [{
                            "id": "elon-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 500000.0,
                            "maxAmount": 100000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "elon-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 1000000.0,
                            "maxAmount": 800000.0,
                            "minAmount": 10000.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    },
                    "limits": [{
                            "id": "john-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 5000.0,
                            "maxAmount": 1000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "john-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 20000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "kim-card-1",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Inactive",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
            {
                status: 200,
                body: {
                    "id": "expired-card-3",
                    "brand": "visa debit",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Blue Card",
                    "status": "Expired",
                    "lockStatus": "LOCKED",
                    "replacement": {
                        "status": "UnderReplacement",
                        "reason": "Lost",
                        "replacedById": "4"
                    },
                    "holder": {
                        "name": "Jason Carter"
                    },
                    "expiryDate": {
                        "year": "2048",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "1262",
                    "limits": [{
                            "id": "expired-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "expired-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "inactive-card-4",
                    "brand": "union pay",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Black Card",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Jessie Carter"
                    },
                    "expiryDate": {
                        "year": "2048",
                        "month": "07"
                    },
                    "currency": "GBP",
                    "maskedNumber": "1289",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-04T12:52:20.906+00:00"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING"
                            }]
                    },
                    "limits": [{
                            "id": "inactive-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "inactive-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "locked-card-10",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Green Card",
                    "status": "Active",
                    "lockStatus": "LOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Jason Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "locked-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "locked-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "value": {
                        "ref": "examples/unusable/card-item.json"
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "damaged-card-9",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Damaged"
                    },
                    "holder": {
                        "name": "Jessie Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "damaged-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "damaged-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }],
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2021-07-01T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "replaced-card-8",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Canceled",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "Replaced",
                        "reason": "Lost"
                    },
                    "holder": {
                        "name": "Jason Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "replaced-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "replaced-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }],
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2021-07-01T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-20T14:21:25.001Z"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "replacing-card-10",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "Replacing",
                        "reason": "Lost"
                    },
                    "holder": {
                        "name": "Randy Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "replacing-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "replacing-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }],
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2021-07-01T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "stolen-card-11",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Canceled",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "Replacing",
                        "reason": "Stolen"
                    },
                    "holder": {
                        "name": "Lisa Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "stolen-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "stolen-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "replacement-card-9",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Lost"
                    },
                    "holder": {
                        "name": "Lisa Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "replacement-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "replacement-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }],
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2021-07-01T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "fraud-card-4",
                    "brand": "union pay",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Black Card",
                    "status": "Fraud",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Jessie Carter"
                    },
                    "expiryDate": {
                        "year": "2048",
                        "month": "07"
                    },
                    "currency": "GBP",
                    "maskedNumber": "1289",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-04T12:52:20.906+00:00"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-06T12:52:20.906+00:00"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-07T12:52:20.906+00:00"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-09T12:52:20.906+00:00"
                            }]
                    },
                    "limits": [{
                            "id": "fraud-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "fraud-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
        ]
    }]);
const CardsServiceGetCardsMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/cards",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "sara-card-1",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }, {
                        "id": "sara-card-2",
                        "brand": "visa",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Green Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "01"
                        },
                        "currency": "USD",
                        "maskedNumber": "5236"
                    }, {
                        "id": "sara-card-3",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5237",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2020-05-04T12:52:20.906+00:00"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }, {
                                    "name": "In Transit",
                                    "status": "PENDING"
                                }, {
                                    "name": "Delivered",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "sara-card-4",
                        "brand": "mastercard",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Black Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "6235"
                    }, {
                        "id": "sara-card-5",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Blue Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "6236"
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "elon-card-1",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "World Elite",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "12"
                        },
                        "currency": "EUR",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }, {
                                    "name": "In Transit",
                                    "status": "PENDING"
                                }, {
                                    "name": "Delivered",
                                    "status": "PENDING",
                                    "stepDateTime": "2019-06-20T14:21:25.001Z"
                                }]
                        }
                    }, {
                        "id": "elon-card-2",
                        "brand": "visa",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Infinite Privilege",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2045",
                            "month": "01"
                        },
                        "currency": "EUR",
                        "maskedNumber": "6782"
                    }, {
                        "id": "elon-card-3",
                        "brand": "american_express",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Reserve",
                        "status": "Cancelled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "UnderReplacement",
                            "reason": "Lost",
                            "replacedById": "4"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "06"
                        },
                        "currency": "EUR",
                        "maskedNumber": "1262"
                    }, {
                        "id": "elon-card-4",
                        "brand": "american_express",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Reserve",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "07"
                        },
                        "currency": "EUR",
                        "maskedNumber": "1289"
                    }, {
                        "id": "elon-card-5",
                        "brand": "mastercard",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Platinum",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "11"
                        },
                        "currency": "EUR",
                        "maskedNumber": "4627",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T14:32:20.906Z"
                                }, {
                                    "name": "In Transit",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T15:12:20.906Z"
                                }, {
                                    "name": "Delivered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-21T11:28:25.001Z"
                                }]
                        }
                    }, {
                        "id": "elon-card-6",
                        "brand": "american_express",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Reserve",
                        "status": "Active",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "EUR",
                        "maskedNumber": "8291"
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "john-card-1",
                        "brand": "visa",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "John Doe"
                        },
                        "expiryDate": {
                            "year": "2030",
                            "month": "06"
                        },
                        "currency": "EUR",
                        "maskedNumber": "5827",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "SUCCESS"
                                }, {
                                    "name": "In Transit",
                                    "status": "SUCCESS"
                                }, {
                                    "name": "Delivered",
                                    "status": "SUCCESS"
                                }]
                        },
                        "limits": [{
                                "id": "john-limit-1",
                                "channel": "ATM",
                                "frequency": "DAILY",
                                "amount": 3000.0,
                                "maxAmount": 9000.0,
                                "minAmount": 0.0
                            }, {
                                "id": "john-limit-2",
                                "channel": "ONLINE",
                                "frequency": "DAILY",
                                "amount": 20000.0,
                                "maxAmount": 9000.0,
                                "minAmount": 0.0
                            }]
                    }, {
                        "id": "john-card-2",
                        "brand": "mastercard",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Gold",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "John Doe"
                        },
                        "expiryDate": {
                            "year": "2031",
                            "month": "02"
                        },
                        "currency": "EUR",
                        "maskedNumber": "8299"
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "kim-card-1",
                        "brand": "mastercard",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Copper",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Kim Sook"
                        },
                        "expiryDate": {
                            "year": "2027",
                            "month": "03"
                        },
                        "currency": "EUR",
                        "maskedNumber": "9292"
                    }, {
                        "id": "kim-card-2",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Iron",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Kim Sook"
                        },
                        "expiryDate": {
                            "year": "2010",
                            "month": "04"
                        },
                        "currency": "EUR",
                        "maskedNumber": "9494"
                    }, {
                        "id": "kim-card-3",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Iron",
                        "status": "Expired",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Kim Sook"
                        },
                        "expiryDate": {
                            "year": "2010",
                            "month": "04"
                        },
                        "currency": "EUR",
                        "maskedNumber": "9494"
                    }]
            },
            {
                status: 200,
                body: []
            },
            {
                status: 200,
                body: [{
                        "id": "current-card-1",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "12"
                        },
                        "currency": "EUR",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }, {
                                    "name": "In Transit",
                                    "status": "PENDING"
                                }, {
                                    "name": "Delivered",
                                    "status": "PENDING",
                                    "stepDateTime": "2019-06-20T14:21:25.001Z"
                                }]
                        }
                    }, {
                        "id": "current-card-2",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Green Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2045",
                            "month": "01"
                        },
                        "currency": "EUR",
                        "maskedNumber": "6782"
                    }, {
                        "id": "current-card-3",
                        "brand": "american express",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Blue Card",
                        "status": "Inactive",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "UnderReplacement",
                            "reason": "Lost",
                            "replacedById": "4"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "06"
                        },
                        "currency": "EUR",
                        "maskedNumber": "1262"
                    }, {
                        "id": "current-card-4",
                        "brand": "union pay",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Black Card",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "07"
                        },
                        "currency": "GBP",
                        "maskedNumber": "1289"
                    }, {
                        "id": "current-card-5",
                        "brand": "maestro",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Platinum",
                        "status": "Active",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "11"
                        },
                        "currency": "USD",
                        "maskedNumber": "4627",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T14:32:20.906Z"
                                }, {
                                    "name": "In Transit",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T15:12:20.906Z"
                                }, {
                                    "name": "Delivered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-21T11:28:25.001Z"
                                }]
                        }
                    }, {
                        "id": "current-card-6",
                        "brand": "diners club",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "White Card",
                        "status": "Active",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "GBP",
                        "maskedNumber": "8291"
                    }, {
                        "id": "current-card-7",
                        "brand": "visa debit",
                        "type": "debit",
                        "subType": "ATM",
                        "name": "Platinum Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Randy Carter"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "EUR",
                        "maskedNumber": "8291"
                    }, {
                        "id": "current-card-8",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }, {
                        "id": "current-card-9",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "ReplacementRequested",
                            "reason": "Damaged"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "current-card-10",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Green Card",
                        "status": "Active",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }, {
                        "id": "current-card-11",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "Replaced",
                            "reason": "Lost"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "current-card-12",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "Replacing",
                            "reason": "Stolen"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }, {
                        "id": "current-card-13",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Unknown",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2030",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5299"
                    }, {
                        "id": "current-card-13",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Fraud",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2035",
                            "month": "01"
                        },
                        "currency": "GBP",
                        "maskedNumber": "1399"
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "closed-card-1",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "12"
                        },
                        "currency": "EUR",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }, {
                                    "name": "In Transit",
                                    "status": "PENDING"
                                }, {
                                    "name": "Delivered",
                                    "status": "PENDING",
                                    "stepDateTime": "2019-06-20T14:21:25.001Z"
                                }]
                        }
                    }, {
                        "id": "closed-card-2",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Green Card",
                        "status": "Canceled",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2045",
                            "month": "01"
                        },
                        "currency": "EUR",
                        "maskedNumber": "6782"
                    }, {
                        "id": "closed-card-3",
                        "brand": "american express",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Blue Card",
                        "status": "Expired",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "UnderReplacement",
                            "reason": "Lost",
                            "replacedById": "4"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "06"
                        },
                        "currency": "EUR",
                        "maskedNumber": "1262"
                    }, {
                        "id": "closed-card-4",
                        "brand": "union pay",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Black Card",
                        "status": "Expired",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "07"
                        },
                        "currency": "GBP",
                        "maskedNumber": "1289"
                    }, {
                        "id": "closed-card-5",
                        "brand": "maestro",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Platinum",
                        "status": "Expired",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "11"
                        },
                        "currency": "USD",
                        "maskedNumber": "4627",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T14:32:20.906Z"
                                }, {
                                    "name": "In Transit",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T15:12:20.906Z"
                                }, {
                                    "name": "Delivered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-21T11:28:25.001Z"
                                }]
                        }
                    }, {
                        "id": "closed-card-6",
                        "brand": "diners club",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "White Card",
                        "status": "Canceled",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "GBP",
                        "maskedNumber": "8291"
                    }, {
                        "id": "closed-card-7",
                        "brand": "visa debit",
                        "type": "debit",
                        "subType": "ATM",
                        "name": "Platinum Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Randy Carter"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "EUR",
                        "maskedNumber": "8291"
                    }, {
                        "id": "closed-card-8",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "Replaced",
                            "reason": "Lost"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "limits": [{
                                "id": "closed-limit-1",
                                "channel": "ATM",
                                "frequency": "DAILY",
                                "amount": 3000.0,
                                "maxAmount": 10000.0,
                                "minAmount": 0.0
                            }, {
                                "id": "closed-limit-2",
                                "channel": "ONLINE",
                                "frequency": "DAILY",
                                "amount": 2000.0,
                                "maxAmount": 15000.0,
                                "minAmount": 0.0
                            }],
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "closed-card-9",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "ReplacementRequested",
                            "reason": "Lost"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "limits": [{
                                "id": "closed-limit-1",
                                "channel": "ATM",
                                "frequency": "DAILY",
                                "amount": 3000.0,
                                "maxAmount": 10000.0,
                                "minAmount": 0.0
                            }, {
                                "id": "closed-limit-2",
                                "channel": "ONLINE",
                                "frequency": "DAILY",
                                "amount": 2000.0,
                                "maxAmount": 15000.0,
                                "minAmount": 0.0
                            }],
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "closed-card-10",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "ReplacementRequested",
                            "reason": "Lost"
                        },
                        "holder": {
                            "name": "Randy Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "closed-card-11",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "Replacing",
                            "reason": "Stolen"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }]
            },
        ]
    }]);
const CardsServiceRequestReplacementMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}/replacement",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "sara-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 201,
                body: {
                    "id": "elon-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "World Elite",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Damaged"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2050",
                        "month": "12"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5235",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }]
                    }
                }
            },
            {
                status: 201,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Stolen"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    }
                }
            },
            {
                status: 201,
                body: {
                    "id": "kim-card-1",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Lost"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
        ]
    }]);
const CardsServiceUpdateLockStatusMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}/lock-status",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "sara-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "elon-card-6",
                    "brand": "american_express",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Reserve",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2047",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "8291"
                }
            },
            {
                status: 200,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Active",
                    "lockStatus": "LOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    },
                    "limits": [{
                            "id": "john-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 5000.0,
                            "maxAmount": 1000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "john-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 20000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "kim-card-1",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Inactive",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
        ]
    }]);
const CardsServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}/activation",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "sara-card-3",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5237",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-04T12:52:20.906+00:00"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING"
                            }]
                    },
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 201,
                body: {
                    "id": "elon-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "World Elite",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2050",
                        "month": "12"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5235",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING",
                                "stepDateTime": "2019-06-20T14:21:25.001Z"
                            }]
                    },
                    "limits": [{
                            "id": "elon-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 500000.0,
                            "maxAmount": 100000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "elon-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 1000000.0,
                            "maxAmount": 800000.0,
                            "minAmount": 10000.0
                        }]
                }
            },
            {
                status: 201,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    },
                    "limits": [{
                            "id": "john-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 5000.0,
                            "maxAmount": 1000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "john-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 20000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 201,
                body: {
                    "id": "kim-card-2",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}/limits",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "sara-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "elon-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "World Elite",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2050",
                        "month": "12"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5235",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING",
                                "stepDateTime": "2019-06-20T14:21:25.001Z"
                            }]
                    },
                    "limits": [{
                            "id": "elon-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 500000.0,
                            "maxAmount": 100000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "elon-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 1000000.0,
                            "maxAmount": 800000.0,
                            "minAmount": 10000.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    },
                    "limits": [{
                            "id": "john-limit-1",
                            "channel": "ATM",
                            "frequency": "WEEKLY",
                            "amount": 1000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "john-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 20000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "kim-card-1",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Inactive",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "sara-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "elon-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "World Elite",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2050",
                        "month": "12"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5235",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING",
                                "stepDateTime": "2019-06-20T14:21:25.001Z"
                            }]
                    },
                    "limits": [{
                            "id": "elon-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 500000.0,
                            "maxAmount": 100000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "elon-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 1000000.0,
                            "maxAmount": 800000.0,
                            "minAmount": 10000.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    },
                    "limits": [{
                            "id": "john-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 5000.0,
                            "maxAmount": 1000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "john-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 20000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "kim-card-1",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Inactive",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
            {
                status: 200,
                body: {
                    "id": "expired-card-3",
                    "brand": "visa debit",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Blue Card",
                    "status": "Expired",
                    "lockStatus": "LOCKED",
                    "replacement": {
                        "status": "UnderReplacement",
                        "reason": "Lost",
                        "replacedById": "4"
                    },
                    "holder": {
                        "name": "Jason Carter"
                    },
                    "expiryDate": {
                        "year": "2048",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "1262",
                    "limits": [{
                            "id": "expired-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "expired-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "inactive-card-4",
                    "brand": "union pay",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Black Card",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Jessie Carter"
                    },
                    "expiryDate": {
                        "year": "2048",
                        "month": "07"
                    },
                    "currency": "GBP",
                    "maskedNumber": "1289",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-04T12:52:20.906+00:00"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }, {
                                "name": "Delivered",
                                "status": "PENDING"
                            }]
                    },
                    "limits": [{
                            "id": "inactive-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "inactive-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "locked-card-10",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Green Card",
                    "status": "Active",
                    "lockStatus": "LOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Jason Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "locked-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "locked-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "value": {
                        "ref": "examples/unusable/card-item.json"
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "damaged-card-9",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Damaged"
                    },
                    "holder": {
                        "name": "Jessie Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "damaged-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "damaged-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }],
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2021-07-01T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "replaced-card-8",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Canceled",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "Replaced",
                        "reason": "Lost"
                    },
                    "holder": {
                        "name": "Jason Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "replaced-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "replaced-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }],
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2021-07-01T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-20T14:21:25.001Z"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "replacing-card-10",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "Replacing",
                        "reason": "Lost"
                    },
                    "holder": {
                        "name": "Randy Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "replacing-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "replacing-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }],
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2021-07-01T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "PENDING"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "stolen-card-11",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Canceled",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "Replacing",
                        "reason": "Stolen"
                    },
                    "holder": {
                        "name": "Lisa Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "stolen-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "stolen-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "replacement-card-9",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Lost"
                    },
                    "holder": {
                        "name": "Lisa Carter"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "replacement-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "replacement-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 15000.0,
                            "minAmount": 0.0
                        }],
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2021-07-01T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "id": "fraud-card-4",
                    "brand": "union pay",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Black Card",
                    "status": "Fraud",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Jessie Carter"
                    },
                    "expiryDate": {
                        "year": "2048",
                        "month": "07"
                    },
                    "currency": "GBP",
                    "maskedNumber": "1289",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-04T12:52:20.906+00:00"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-06T12:52:20.906+00:00"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-07T12:52:20.906+00:00"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS",
                                "stepDateTime": "2020-05-09T12:52:20.906+00:00"
                            }]
                    },
                    "limits": [{
                            "id": "fraud-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "fraud-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/cards",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "sara-card-1",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }, {
                        "id": "sara-card-2",
                        "brand": "visa",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Green Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "01"
                        },
                        "currency": "USD",
                        "maskedNumber": "5236"
                    }, {
                        "id": "sara-card-3",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5237",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2020-05-04T12:52:20.906+00:00"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }, {
                                    "name": "In Transit",
                                    "status": "PENDING"
                                }, {
                                    "name": "Delivered",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "sara-card-4",
                        "brand": "mastercard",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Black Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "6235"
                    }, {
                        "id": "sara-card-5",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Blue Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Sara Williams"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "6236"
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "elon-card-1",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "World Elite",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "12"
                        },
                        "currency": "EUR",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }, {
                                    "name": "In Transit",
                                    "status": "PENDING"
                                }, {
                                    "name": "Delivered",
                                    "status": "PENDING",
                                    "stepDateTime": "2019-06-20T14:21:25.001Z"
                                }]
                        }
                    }, {
                        "id": "elon-card-2",
                        "brand": "visa",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Infinite Privilege",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2045",
                            "month": "01"
                        },
                        "currency": "EUR",
                        "maskedNumber": "6782"
                    }, {
                        "id": "elon-card-3",
                        "brand": "american_express",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Reserve",
                        "status": "Cancelled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "UnderReplacement",
                            "reason": "Lost",
                            "replacedById": "4"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "06"
                        },
                        "currency": "EUR",
                        "maskedNumber": "1262"
                    }, {
                        "id": "elon-card-4",
                        "brand": "american_express",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Reserve",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "07"
                        },
                        "currency": "EUR",
                        "maskedNumber": "1289"
                    }, {
                        "id": "elon-card-5",
                        "brand": "mastercard",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Platinum",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "11"
                        },
                        "currency": "EUR",
                        "maskedNumber": "4627",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T14:32:20.906Z"
                                }, {
                                    "name": "In Transit",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T15:12:20.906Z"
                                }, {
                                    "name": "Delivered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-21T11:28:25.001Z"
                                }]
                        }
                    }, {
                        "id": "elon-card-6",
                        "brand": "american_express",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Reserve",
                        "status": "Active",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Elon"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "EUR",
                        "maskedNumber": "8291"
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "john-card-1",
                        "brand": "visa",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "John Doe"
                        },
                        "expiryDate": {
                            "year": "2030",
                            "month": "06"
                        },
                        "currency": "EUR",
                        "maskedNumber": "5827",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "SUCCESS"
                                }, {
                                    "name": "In Transit",
                                    "status": "SUCCESS"
                                }, {
                                    "name": "Delivered",
                                    "status": "SUCCESS"
                                }]
                        },
                        "limits": [{
                                "id": "john-limit-1",
                                "channel": "ATM",
                                "frequency": "DAILY",
                                "amount": 3000.0,
                                "maxAmount": 9000.0,
                                "minAmount": 0.0
                            }, {
                                "id": "john-limit-2",
                                "channel": "ONLINE",
                                "frequency": "DAILY",
                                "amount": 20000.0,
                                "maxAmount": 9000.0,
                                "minAmount": 0.0
                            }]
                    }, {
                        "id": "john-card-2",
                        "brand": "mastercard",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Gold",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "John Doe"
                        },
                        "expiryDate": {
                            "year": "2031",
                            "month": "02"
                        },
                        "currency": "EUR",
                        "maskedNumber": "8299"
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "kim-card-1",
                        "brand": "mastercard",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Copper",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Kim Sook"
                        },
                        "expiryDate": {
                            "year": "2027",
                            "month": "03"
                        },
                        "currency": "EUR",
                        "maskedNumber": "9292"
                    }, {
                        "id": "kim-card-2",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Iron",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Kim Sook"
                        },
                        "expiryDate": {
                            "year": "2010",
                            "month": "04"
                        },
                        "currency": "EUR",
                        "maskedNumber": "9494"
                    }, {
                        "id": "kim-card-3",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Iron",
                        "status": "Expired",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Kim Sook"
                        },
                        "expiryDate": {
                            "year": "2010",
                            "month": "04"
                        },
                        "currency": "EUR",
                        "maskedNumber": "9494"
                    }]
            },
            {
                status: 200,
                body: []
            },
            {
                status: 200,
                body: [{
                        "id": "current-card-1",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "12"
                        },
                        "currency": "EUR",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }, {
                                    "name": "In Transit",
                                    "status": "PENDING"
                                }, {
                                    "name": "Delivered",
                                    "status": "PENDING",
                                    "stepDateTime": "2019-06-20T14:21:25.001Z"
                                }]
                        }
                    }, {
                        "id": "current-card-2",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Green Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2045",
                            "month": "01"
                        },
                        "currency": "EUR",
                        "maskedNumber": "6782"
                    }, {
                        "id": "current-card-3",
                        "brand": "american express",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Blue Card",
                        "status": "Inactive",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "UnderReplacement",
                            "reason": "Lost",
                            "replacedById": "4"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "06"
                        },
                        "currency": "EUR",
                        "maskedNumber": "1262"
                    }, {
                        "id": "current-card-4",
                        "brand": "union pay",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Black Card",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "07"
                        },
                        "currency": "GBP",
                        "maskedNumber": "1289"
                    }, {
                        "id": "current-card-5",
                        "brand": "maestro",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Platinum",
                        "status": "Active",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "11"
                        },
                        "currency": "USD",
                        "maskedNumber": "4627",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T14:32:20.906Z"
                                }, {
                                    "name": "In Transit",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T15:12:20.906Z"
                                }, {
                                    "name": "Delivered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-21T11:28:25.001Z"
                                }]
                        }
                    }, {
                        "id": "current-card-6",
                        "brand": "diners club",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "White Card",
                        "status": "Active",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "GBP",
                        "maskedNumber": "8291"
                    }, {
                        "id": "current-card-7",
                        "brand": "visa debit",
                        "type": "debit",
                        "subType": "ATM",
                        "name": "Platinum Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Randy Carter"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "EUR",
                        "maskedNumber": "8291"
                    }, {
                        "id": "current-card-8",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }, {
                        "id": "current-card-9",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Active",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "ReplacementRequested",
                            "reason": "Damaged"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "current-card-10",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Green Card",
                        "status": "Active",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }, {
                        "id": "current-card-11",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "Replaced",
                            "reason": "Lost"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "current-card-12",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Inactive",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "Replacing",
                            "reason": "Stolen"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }, {
                        "id": "current-card-13",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Unknown",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2030",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5299"
                    }, {
                        "id": "current-card-13",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Fraud",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2035",
                            "month": "01"
                        },
                        "currency": "GBP",
                        "maskedNumber": "1399"
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "closed-card-1",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "12"
                        },
                        "currency": "EUR",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }, {
                                    "name": "In Transit",
                                    "status": "PENDING"
                                }, {
                                    "name": "Delivered",
                                    "status": "PENDING",
                                    "stepDateTime": "2019-06-20T14:21:25.001Z"
                                }]
                        }
                    }, {
                        "id": "closed-card-2",
                        "brand": "visa",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Green Card",
                        "status": "Canceled",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2045",
                            "month": "01"
                        },
                        "currency": "EUR",
                        "maskedNumber": "6782"
                    }, {
                        "id": "closed-card-3",
                        "brand": "american express",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Blue Card",
                        "status": "Expired",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "UnderReplacement",
                            "reason": "Lost",
                            "replacedById": "4"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "06"
                        },
                        "currency": "EUR",
                        "maskedNumber": "1262"
                    }, {
                        "id": "closed-card-4",
                        "brand": "union pay",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Black Card",
                        "status": "Expired",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2048",
                            "month": "07"
                        },
                        "currency": "GBP",
                        "maskedNumber": "1289"
                    }, {
                        "id": "closed-card-5",
                        "brand": "maestro",
                        "type": "Debit",
                        "subType": "ATM",
                        "name": "Platinum",
                        "status": "Expired",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Jessie Carter"
                        },
                        "expiryDate": {
                            "year": "2050",
                            "month": "11"
                        },
                        "currency": "USD",
                        "maskedNumber": "4627",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-19T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T14:32:20.906Z"
                                }, {
                                    "name": "In Transit",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-20T15:12:20.906Z"
                                }, {
                                    "name": "Delivered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2019-06-21T11:28:25.001Z"
                                }]
                        }
                    }, {
                        "id": "closed-card-6",
                        "brand": "diners club",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "White Card",
                        "status": "Canceled",
                        "lockStatus": "LOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "GBP",
                        "maskedNumber": "8291"
                    }, {
                        "id": "closed-card-7",
                        "brand": "visa debit",
                        "type": "debit",
                        "subType": "ATM",
                        "name": "Platinum Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "NotUnderReplacement"
                        },
                        "holder": {
                            "name": "Randy Carter"
                        },
                        "expiryDate": {
                            "year": "2047",
                            "month": "03"
                        },
                        "currency": "EUR",
                        "maskedNumber": "8291"
                    }, {
                        "id": "closed-card-8",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "Replaced",
                            "reason": "Lost"
                        },
                        "holder": {
                            "name": "Jason Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "limits": [{
                                "id": "closed-limit-1",
                                "channel": "ATM",
                                "frequency": "DAILY",
                                "amount": 3000.0,
                                "maxAmount": 10000.0,
                                "minAmount": 0.0
                            }, {
                                "id": "closed-limit-2",
                                "channel": "ONLINE",
                                "frequency": "DAILY",
                                "amount": 2000.0,
                                "maxAmount": 15000.0,
                                "minAmount": 0.0
                            }],
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "closed-card-9",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "ReplacementRequested",
                            "reason": "Lost"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "limits": [{
                                "id": "closed-limit-1",
                                "channel": "ATM",
                                "frequency": "DAILY",
                                "amount": 3000.0,
                                "maxAmount": 10000.0,
                                "minAmount": 0.0
                            }, {
                                "id": "closed-limit-2",
                                "channel": "ONLINE",
                                "frequency": "DAILY",
                                "amount": 2000.0,
                                "maxAmount": 15000.0,
                                "minAmount": 0.0
                            }],
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "closed-card-10",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "ReplacementRequested",
                            "reason": "Lost"
                        },
                        "holder": {
                            "name": "Randy Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235",
                        "delivery": {
                            "transitSteps": [{
                                    "name": "Ordered",
                                    "status": "SUCCESS",
                                    "stepDateTime": "2021-07-01T12:52:20.906Z"
                                }, {
                                    "name": "Processed",
                                    "status": "PENDING"
                                }]
                        }
                    }, {
                        "id": "closed-card-11",
                        "brand": "mastercard",
                        "type": "Credit",
                        "subType": "ATM",
                        "name": "Gold Card",
                        "status": "Canceled",
                        "lockStatus": "UNLOCKED",
                        "replacement": {
                            "status": "Replacing",
                            "reason": "Stolen"
                        },
                        "holder": {
                            "name": "Lisa Carter"
                        },
                        "expiryDate": {
                            "year": "2022",
                            "month": "12"
                        },
                        "currency": "USD",
                        "maskedNumber": "5235"
                    }]
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}/replacement",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "sara-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 201,
                body: {
                    "id": "elon-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "World Elite",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Damaged"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2050",
                        "month": "12"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5235",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "PENDING"
                            }]
                    }
                }
            },
            {
                status: 201,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Stolen"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    }
                }
            },
            {
                status: 201,
                body: {
                    "id": "kim-card-1",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Inactive",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "ReplacementRequested",
                        "reason": "Lost"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/cards/{cardId}/lock-status",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "sara-card-1",
                    "brand": "mastercard",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold Card",
                    "status": "Active",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Sara Williams"
                    },
                    "expiryDate": {
                        "year": "2022",
                        "month": "12"
                    },
                    "currency": "USD",
                    "maskedNumber": "5235",
                    "limits": [{
                            "id": "sara-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 3000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "sara-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 2000.0,
                            "maxAmount": 10000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "elon-card-6",
                    "brand": "american_express",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Reserve",
                    "status": "Active",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Elon"
                    },
                    "expiryDate": {
                        "year": "2047",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "8291"
                }
            },
            {
                status: 200,
                body: {
                    "id": "john-card-1",
                    "brand": "visa",
                    "type": "Credit",
                    "subType": "ATM",
                    "name": "Gold",
                    "status": "Active",
                    "lockStatus": "LOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "John Doe"
                    },
                    "expiryDate": {
                        "year": "2030",
                        "month": "06"
                    },
                    "currency": "EUR",
                    "maskedNumber": "5827",
                    "delivery": {
                        "transitSteps": [{
                                "name": "Ordered",
                                "status": "SUCCESS",
                                "stepDateTime": "2019-06-19T12:52:20.906Z"
                            }, {
                                "name": "Processed",
                                "status": "SUCCESS"
                            }, {
                                "name": "In Transit",
                                "status": "SUCCESS"
                            }, {
                                "name": "Delivered",
                                "status": "SUCCESS"
                            }]
                    },
                    "limits": [{
                            "id": "john-limit-1",
                            "channel": "ATM",
                            "frequency": "DAILY",
                            "amount": 5000.0,
                            "maxAmount": 1000.0,
                            "minAmount": 0.0
                        }, {
                            "id": "john-limit-2",
                            "channel": "ONLINE",
                            "frequency": "DAILY",
                            "amount": 20000.0,
                            "maxAmount": 9000.0,
                            "minAmount": 0.0
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "id": "kim-card-1",
                    "brand": "mastercard",
                    "type": "Debit",
                    "subType": "ATM",
                    "name": "Copper",
                    "status": "Inactive",
                    "statusEnriched": "OPEN",
                    "lockStatus": "UNLOCKED",
                    "replacement": {
                        "status": "NotUnderReplacement"
                    },
                    "holder": {
                        "name": "Kim Sook"
                    },
                    "expiryDate": {
                        "year": "2027",
                        "month": "03"
                    },
                    "currency": "EUR",
                    "maskedNumber": "9292"
                }
            },
        ]
    },
]);

class ServiceAgreementsService {
    constructor(httpClient, basePath, configuration) {
        this.httpClient = httpClient;
        this.basePath = '';
        this.defaultHeaders = new HttpHeaders();
        this.configuration = new EmployeeConfiguration();
        if (configuration) {
            this.configuration = configuration;
        }
        if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
                basePath = this.basePath;
            }
            this.configuration.basePath = basePath;
        }
        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();
    }
    addToHttpParams(httpParams, value, key) {
        if (typeof value === "object" && value instanceof Date === false) {
            httpParams = this.addToHttpParamsRecursive(httpParams, value);
        }
        else {
            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
        }
        return httpParams;
    }
    addToHttpParamsRecursive(httpParams, value, key) {
        if (value == null) {
            return httpParams;
        }
        if (typeof value === "object") {
            if (Array.isArray(value)) {
                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));
            }
            else if (value instanceof Date) {
                if (key != null) {
                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                }
                else {
                    throw Error("key may not be null if value is Date");
                }
            }
            else {
                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));
            }
        }
        else if (key != null) {
            httpParams = httpParams.append(key, value);
        }
        else {
            throw Error("key may not be null if value is not object or array");
        }
        return httpParams;
    }
    getServiceAgreements(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getServiceAgreements.');
        }
        const _query = requestParameters["query"];
        const _from = requestParameters["from"];
        const _size = requestParameters["size"];
        let queryParameters = new HttpParams({ encoder: this.encoder });
        if (_query !== undefined && _query !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');
        }
        if (_from !== undefined && _from !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');
        }
        if (_size !== undefined && _size !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');
        }
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements`, {
            params: queryParameters,
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    getServiceAgreementsUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getServiceAgreements.');
        }
        const _query = requestParameters["query"];
        const _from = requestParameters["from"];
        const _size = requestParameters["size"];
        let queryParameters = new HttpParams({ encoder: this.encoder });
        if (_query !== undefined && _query !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');
        }
        if (_from !== undefined && _from !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');
        }
        if (_size !== undefined && _size !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');
        }
        const queryString = queryParameters.toString();
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements${queryString ? `?${queryString}` : ''}`;
    }
}
ServiceAgreementsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ServiceAgreementsService, deps: [{ token: i1.HttpClient }, { token: EMPLOYEE_BASE_PATH, optional: true }, { token: EmployeeConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
ServiceAgreementsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ServiceAgreementsService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ServiceAgreementsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [EMPLOYEE_BASE_PATH]
                }] }, { type: EmployeeConfiguration, decorators: [{
                    type: Optional
                }] }]; } });

const ServiceAgreementsServiceGetServiceAgreementsMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "serviceAgreements": [{
                            "name": "SA Name 1",
                            "id": "8b4fc047-c98a-4e58-975a-6d3f2bde4ebe",
                            "master": true,
                            "description": "SA 1 Description"
                        }, {
                            "name": "SA Name 2",
                            "id": "8b4fc047-c98a-4e58-975a-6d3f222de4ebe",
                            "master": true
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
const ServiceAgreementsServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "serviceAgreements": [{
                            "name": "SA Name 1",
                            "id": "8b4fc047-c98a-4e58-975a-6d3f2bde4ebe",
                            "master": true,
                            "description": "SA 1 Description"
                        }, {
                            "name": "SA Name 2",
                            "id": "8b4fc047-c98a-4e58-975a-6d3f222de4ebe",
                            "master": true
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
]);

class SmartInsightsService {
    constructor(httpClient, basePath, configuration) {
        this.httpClient = httpClient;
        this.basePath = '';
        this.defaultHeaders = new HttpHeaders();
        this.configuration = new EmployeeConfiguration();
        if (configuration) {
            this.configuration = configuration;
        }
        if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
                basePath = this.basePath;
            }
            this.configuration.basePath = basePath;
        }
        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();
    }
    addToHttpParams(httpParams, value, key) {
        if (typeof value === "object" && value instanceof Date === false) {
            httpParams = this.addToHttpParamsRecursive(httpParams, value);
        }
        else {
            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
        }
        return httpParams;
    }
    addToHttpParamsRecursive(httpParams, value, key) {
        if (value == null) {
            return httpParams;
        }
        if (typeof value === "object") {
            if (Array.isArray(value)) {
                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));
            }
            else if (value instanceof Date) {
                if (key != null) {
                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                }
                else {
                    throw Error("key may not be null if value is Date");
                }
            }
            else {
                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));
            }
        }
        else if (key != null) {
            httpParams = httpParams.append(key, value);
        }
        else {
            throw Error("key may not be null if value is not object or array");
        }
        return httpParams;
    }
    getSmartInsightById(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getSmartInsightById.');
        }
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/smart-insights`, {
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    getSmartInsightByIdUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getSmartInsightById.');
        }
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/smart-insights`;
    }
}
SmartInsightsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: SmartInsightsService, deps: [{ token: i1.HttpClient }, { token: EMPLOYEE_BASE_PATH, optional: true }, { token: EmployeeConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
SmartInsightsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: SmartInsightsService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: SmartInsightsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [EMPLOYEE_BASE_PATH]
                }] }, { type: EmployeeConfiguration, decorators: [{
                    type: Optional
                }] }]; } });

const SmartInsightsServiceGetSmartInsightByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/smart-insights",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "userAccount": {
                        "locked": false
                    },
                    "devices": {
                        "lockedDevices": [{
                                "friendlyName": "Mark's Phone",
                                "vendor": "Google",
                                "model": "Pixel 3",
                                "id": "4b1a0300-ea8f-4008-a6bd-e1c6cea5f93e"
                            }, {
                                "friendlyName": "Mark's Work Phone",
                                "vendor": "Apple",
                                "model": "12",
                                "id": "b7e7c546-60f0-4234-aeb8-021b88e73880"
                            }]
                    },
                    "actions": {
                        "requiredActions": ["VERIFY_EMAIL", "ACCEPT_TERMS_AND_CONDITIONS"]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "userAccount": {
                        "errors": [{
                                "message": "Internal Service Error"
                            }]
                    },
                    "devices": {
                        "lockedDevices": [{
                                "friendlyName": "Mark's Phone",
                                "vendor": "Google",
                                "model": "Pixel 3",
                                "id": "4b1a0300-ea8f-4008-a6bd-e1c6cea5f93e"
                            }, {
                                "friendlyName": "Mark's Work Phone",
                                "vendor": "Apple",
                                "model": "12",
                                "id": "b7e7c546-60f0-4234-aeb8-021b88e73880"
                            }]
                    },
                    "actions": {
                        "errors": [{
                                "message": "Internal Service Error"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "userAccount": {
                        "locked": true
                    },
                    "devices": {
                        "errors": [{
                                "message": "Internal Service Error"
                            }]
                    },
                    "actions": {
                        "requiredActions": ["VERIFY_EMAIL", "ACCEPT_TERMS_AND_CONDITIONS"]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "userAccountLocked": {
                        "locked": false
                    },
                    "devices": {
                        "lockedDevices": []
                    },
                    "actions": {
                        "requiredActions": []
                    }
                }
            },
        ]
    }]);
const SmartInsightsServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/smart-insights",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "userAccount": {
                        "locked": false
                    },
                    "devices": {
                        "lockedDevices": [{
                                "friendlyName": "Mark's Phone",
                                "vendor": "Google",
                                "model": "Pixel 3",
                                "id": "4b1a0300-ea8f-4008-a6bd-e1c6cea5f93e"
                            }, {
                                "friendlyName": "Mark's Work Phone",
                                "vendor": "Apple",
                                "model": "12",
                                "id": "b7e7c546-60f0-4234-aeb8-021b88e73880"
                            }]
                    },
                    "actions": {
                        "requiredActions": ["VERIFY_EMAIL", "ACCEPT_TERMS_AND_CONDITIONS"]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "userAccount": {
                        "errors": [{
                                "message": "Internal Service Error"
                            }]
                    },
                    "devices": {
                        "lockedDevices": [{
                                "friendlyName": "Mark's Phone",
                                "vendor": "Google",
                                "model": "Pixel 3",
                                "id": "4b1a0300-ea8f-4008-a6bd-e1c6cea5f93e"
                            }, {
                                "friendlyName": "Mark's Work Phone",
                                "vendor": "Apple",
                                "model": "12",
                                "id": "b7e7c546-60f0-4234-aeb8-021b88e73880"
                            }]
                    },
                    "actions": {
                        "errors": [{
                                "message": "Internal Service Error"
                            }]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "userAccount": {
                        "locked": true
                    },
                    "devices": {
                        "errors": [{
                                "message": "Internal Service Error"
                            }]
                    },
                    "actions": {
                        "requiredActions": ["VERIFY_EMAIL", "ACCEPT_TERMS_AND_CONDITIONS"]
                    }
                }
            },
            {
                status: 200,
                body: {
                    "userAccountLocked": {
                        "locked": false
                    },
                    "devices": {
                        "lockedDevices": []
                    },
                    "actions": {
                        "requiredActions": []
                    }
                }
            },
        ]
    },
]);

class TransactionsService {
    constructor(httpClient, basePath, configuration) {
        this.httpClient = httpClient;
        this.basePath = '';
        this.defaultHeaders = new HttpHeaders();
        this.configuration = new EmployeeConfiguration();
        if (configuration) {
            this.configuration = configuration;
        }
        if (typeof this.configuration.basePath !== 'string') {
            if (typeof basePath !== 'string') {
                basePath = this.basePath;
            }
            this.configuration.basePath = basePath;
        }
        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();
    }
    addToHttpParams(httpParams, value, key) {
        if (typeof value === "object" && value instanceof Date === false) {
            httpParams = this.addToHttpParamsRecursive(httpParams, value);
        }
        else {
            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
        }
        return httpParams;
    }
    addToHttpParamsRecursive(httpParams, value, key) {
        if (value == null) {
            return httpParams;
        }
        if (typeof value === "object") {
            if (Array.isArray(value)) {
                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));
            }
            else if (value instanceof Date) {
                if (key != null) {
                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                }
                else {
                    throw Error("key may not be null if value is Date");
                }
            }
            else {
                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));
            }
        }
        else if (key != null) {
            httpParams = httpParams.append(key, value);
        }
        else {
            throw Error("key may not be null if value is not object or array");
        }
        return httpParams;
    }
    getTransaction(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getTransaction.');
        }
        const _serviceAgreementId = requestParameters["serviceAgreementId"];
        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {
            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getTransaction.');
        }
        const _transactionId = requestParameters["transactionId"];
        if (_transactionId === null || _transactionId === undefined) {
            throw new Error('Required parameter transactionId was null or undefined when calling getTransaction.');
        }
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/transactions/${encodeURIComponent(String(_transactionId))}`, {
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    getTransactionUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getTransaction.');
        }
        const _serviceAgreementId = requestParameters["serviceAgreementId"];
        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {
            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getTransaction.');
        }
        const _transactionId = requestParameters["transactionId"];
        if (_transactionId === null || _transactionId === undefined) {
            throw new Error('Required parameter transactionId was null or undefined when calling getTransaction.');
        }
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/transactions/${encodeURIComponent(String(_transactionId))}`;
    }
    getTransactions(requestParameters, observe = 'body', reportProgress = false, options) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getTransactions.');
        }
        const _serviceAgreementId = requestParameters["serviceAgreementId"];
        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {
            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getTransactions.');
        }
        const _query = requestParameters["query"];
        const _arrangementIds = requestParameters["arrangementIds"];
        const _from = requestParameters["from"];
        const _size = requestParameters["size"];
        const _orderBy = requestParameters["orderBy"];
        const _direction = requestParameters["direction"];
        let queryParameters = new HttpParams({ encoder: this.encoder });
        if (_query !== undefined && _query !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');
        }
        if (_arrangementIds) {
            _arrangementIds.forEach((element) => {
                queryParameters = this.addToHttpParams(queryParameters, element, 'arrangementIds');
            });
        }
        if (_from !== undefined && _from !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');
        }
        if (_size !== undefined && _size !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');
        }
        if (_orderBy !== undefined && _orderBy !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');
        }
        if (_direction !== undefined && _direction !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');
        }
        let headers = this.defaultHeaders;
        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;
        if (httpHeaderAcceptSelected === undefined) {
            const httpHeaderAccepts = [
                'application/json'
            ];
            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
        }
        if (httpHeaderAcceptSelected !== undefined) {
            headers = headers.set('Accept', httpHeaderAcceptSelected);
        }
        let responseType = 'json';
        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
            responseType = 'text';
        }
        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/transactions`, {
            params: queryParameters,
            responseType: responseType,
            withCredentials: this.configuration.withCredentials,
            headers: headers,
            observe: observe,
            reportProgress: reportProgress
        });
    }
    getTransactionsUrl(requestParameters) {
        const _userId = requestParameters["userId"];
        if (_userId === null || _userId === undefined) {
            throw new Error('Required parameter userId was null or undefined when calling getTransactions.');
        }
        const _serviceAgreementId = requestParameters["serviceAgreementId"];
        if (_serviceAgreementId === null || _serviceAgreementId === undefined) {
            throw new Error('Required parameter serviceAgreementId was null or undefined when calling getTransactions.');
        }
        const _query = requestParameters["query"];
        const _arrangementIds = requestParameters["arrangementIds"];
        const _from = requestParameters["from"];
        const _size = requestParameters["size"];
        const _orderBy = requestParameters["orderBy"];
        const _direction = requestParameters["direction"];
        let queryParameters = new HttpParams({ encoder: this.encoder });
        if (_query !== undefined && _query !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');
        }
        if (_arrangementIds) {
            _arrangementIds.forEach((element) => {
                queryParameters = this.addToHttpParams(queryParameters, element, 'arrangementIds');
            });
        }
        if (_from !== undefined && _from !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');
        }
        if (_size !== undefined && _size !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');
        }
        if (_orderBy !== undefined && _orderBy !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');
        }
        if (_direction !== undefined && _direction !== null) {
            queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');
        }
        const queryString = queryParameters.toString();
        return `${this.configuration.basePath}/client-api/v1/employee/users/${encodeURIComponent(String(_userId))}/service-agreements/${encodeURIComponent(String(_serviceAgreementId))}/transactions${queryString ? `?${queryString}` : ''}`;
    }
}
TransactionsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionsService, deps: [{ token: i1.HttpClient }, { token: EMPLOYEE_BASE_PATH, optional: true }, { token: EmployeeConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
TransactionsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionsService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [EMPLOYEE_BASE_PATH]
                }] }, { type: EmployeeConfiguration, decorators: [{
                    type: Optional
                }] }]; } });

const TransactionsServiceGetTransactionMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements/{serviceAgreementId}/transactions/{transactionId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c371",
                    "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                    "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                    "description": "www.starbucks.com",
                    "typeGroup": "Payment",
                    "type": "Card Payment",
                    "category": "Food Drinks",
                    "bookingDate": "2019-05-29",
                    "valueDate": "2019-05-29",
                    "creditDebitIndicator": "DBIT",
                    "transactionAmountCurrency": {
                        "amount": "7.5",
                        "currencyCode": "EUR"
                    },
                    "counterPartyName": "Starbucks",
                    "counterPartyAccountNumber": "NL91ABNA0423164312",
                    "counterPartyCity": "Amsterdam",
                    "counterPartyAddress": "Zuidplein 10, 1077 XV",
                    "additions": {
                        "settlementDate": "2020-06-01",
                        "additionalCharges": "183.56",
                        "purpose": "vacation",
                        "purposeCode": "1",
                        "fees": "62",
                        "feeReferenceId": "FEE-01",
                        "ultimateDebtorName": "John Doe",
                        "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                        "ultimateDebtorId": "e7a2da343421",
                        "ultimateCreditorId": "df8e1cac",
                        "ultimateCreditorName": "Julia Pence",
                        "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                        "MMCCode": "V"
                    }
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
const TransactionsServiceGetTransactionsMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements/{serviceAgreementId}/transactions",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c371",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "www.starbucks.com",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Food Drinks",
                        "bookingDate": "2019-05-29",
                        "valueDate": "2019-05-29",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "7.5",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Starbucks",
                        "counterPartyAccountNumber": "NL91ABNA0423164312",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Zuidplein 10, 1077 XV",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c372",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "www.medimarket.com",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-05-25",
                        "valueDate": "2019-05-25",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "320.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "MediaMarkt",
                        "counterPartyAccountNumber": "NL91ABNA0541164300",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Zuidplein 10, 1077 XV",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c373",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "albertheijn.nl",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-05-20",
                        "valueDate": "2019-05-20",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "919.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Albert Heijn",
                        "counterPartyAccountNumber": "BE68539007547034",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c3731214",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "International Payment",
                        "category": "Transfers",
                        "bookingDate": "2019-05-15",
                        "valueDate": "2019-05-16",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "887.31",
                            "currencyCode": "EUR"
                        },
                        "currencyExchangeRate": 0.8945,
                        "counterPartyName": "Tusk Williams B.V",
                        "counterPartyAccountNumber": "BE68539007547034",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c373c342",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Income",
                        "bookingDate": "2019-05-22",
                        "valueDate": "2019-05-22",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "1919.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Backbase B.V",
                        "counterPartyAccountNumber": "NL40ABNA0541164350",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Jacob Bontiusplaats 9, 1018 LL",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c374",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-04-28",
                        "valueDate": "2019-04-28",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "111.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Eneco Bank11",
                        "counterPartyAccountNumber": "BA391290079401028494",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c375",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "albertheijn.nl",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-04-24",
                        "valueDate": "2019-08-24",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "86.54",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Albert Heijn",
                        "counterPartyAccountNumber": "BG80BNBG96611020345678",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c376",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Standing Order",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Other Income",
                        "bookingDate": "2019-04-15",
                        "valueDate": "2019-04-15",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "5200",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Simons & Co. B.V.",
                        "counterPartyAccountNumber": "HR1210010051863000160",
                        "counterPartyCity": "Utrecht",
                        "counterPartyAddress": "Vendelier 71. 3905PD",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c377",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "Payment Sent",
                        "category": "Transfers",
                        "bookingDate": "2019-04-15",
                        "valueDate": "2019-04-15",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "10",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Sally Lambert",
                        "counterPartyAccountNumber": "CY17002001280000001200527600",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c378",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "www.medimarket.com",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-03-13",
                        "valueDate": "2019-03-13",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "199.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "MediaMarkt",
                        "counterPartyAccountNumber": "CZ6508000000192000145399",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c379",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Transfers",
                        "bookingDate": "2019-02-13",
                        "valueDate": "2019-02-13",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "25",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "John White",
                        "counterPartyAccountNumber": "DK5000400440116243",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c380",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "www.starbucks.com",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Food Drinks",
                        "bookingDate": "2019-02-13",
                        "valueDate": "2019-02-13",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "7.5",
                            "currencyCode": "EUR"
                        },
                        "counterPartyAddress": "Zuidplein 10, 1077 XV",
                        "counterPartyCity": "Amsterdam",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c381",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-02-13",
                        "valueDate": "2019-02-14",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "66.54",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Eneco Bank8",
                        "counterPartyAccountNumber": "FO1464600009692713",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "imageType": "albert",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c382",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Standing Order",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Category",
                        "bookingDate": "2019-01-10",
                        "valueDate": "2019-01-10",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "400",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Simons & Co. B.V.",
                        "counterPartyAccountNumber": "FI2112345600000785",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c383",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Transfers",
                        "bookingDate": "2018-10-01",
                        "valueDate": "2018-10-01",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "31",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Sally Lambert",
                        "counterPartyAccountNumber": "FR1420041010050500013M02606",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c384",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Standing Order",
                        "typeGroup": "Payment",
                        "type": "Payment Received",
                        "category": "Other Income",
                        "bookingDate": "2018-08-15",
                        "valueDate": "2018-08-15",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "25",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Eneco Bank12",
                        "counterPartyAccountNumber": "GE29NB0000000101904917",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c385",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Transfers",
                        "bookingDate": "2018-10-13",
                        "valueDate": "2018-08-15",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "640",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Sally Lambert",
                        "counterPartyAccountNumber": "DE89370400440532013000",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c386",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Income",
                        "bookingDate": "2018-07-13",
                        "valueDate": "2018-07-15",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "7200",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Simons & Co. B.V.",
                        "counterPartyAccountNumber": "GI75NWBK000000007099453",
                        "counterPartyCity": "Utrecht",
                        "counterPartyAddress": "Vendelier 71. 3905PD",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c387",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "bookingDate": "2018-07-13",
                        "valueDate": "2018-07-15",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "7200",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Simons & Co. B.V.",
                        "counterPartyAccountNumber": "GI75NWBK000000007099453",
                        "counterPartyCity": "Utrecht",
                        "counterPartyAddress": "Vendelier 71. 3905PD",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
const TransactionsServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements/{serviceAgreementId}/transactions/{transactionId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c371",
                    "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                    "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                    "description": "www.starbucks.com",
                    "typeGroup": "Payment",
                    "type": "Card Payment",
                    "category": "Food Drinks",
                    "bookingDate": "2019-05-29",
                    "valueDate": "2019-05-29",
                    "creditDebitIndicator": "DBIT",
                    "transactionAmountCurrency": {
                        "amount": "7.5",
                        "currencyCode": "EUR"
                    },
                    "counterPartyName": "Starbucks",
                    "counterPartyAccountNumber": "NL91ABNA0423164312",
                    "counterPartyCity": "Amsterdam",
                    "counterPartyAddress": "Zuidplein 10, 1077 XV",
                    "additions": {
                        "settlementDate": "2020-06-01",
                        "additionalCharges": "183.56",
                        "purpose": "vacation",
                        "purposeCode": "1",
                        "fees": "62",
                        "feeReferenceId": "FEE-01",
                        "ultimateDebtorName": "John Doe",
                        "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                        "ultimateDebtorId": "e7a2da343421",
                        "ultimateCreditorId": "df8e1cac",
                        "ultimateCreditorName": "Julia Pence",
                        "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                        "MMCCode": "V"
                    }
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/employee/users/{userId}/service-agreements/{serviceAgreementId}/transactions",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c371",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "www.starbucks.com",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Food Drinks",
                        "bookingDate": "2019-05-29",
                        "valueDate": "2019-05-29",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "7.5",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Starbucks",
                        "counterPartyAccountNumber": "NL91ABNA0423164312",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Zuidplein 10, 1077 XV",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c372",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "www.medimarket.com",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-05-25",
                        "valueDate": "2019-05-25",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "320.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "MediaMarkt",
                        "counterPartyAccountNumber": "NL91ABNA0541164300",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Zuidplein 10, 1077 XV",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c373",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "albertheijn.nl",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-05-20",
                        "valueDate": "2019-05-20",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "919.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Albert Heijn",
                        "counterPartyAccountNumber": "BE68539007547034",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c3731214",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "International Payment",
                        "category": "Transfers",
                        "bookingDate": "2019-05-15",
                        "valueDate": "2019-05-16",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "887.31",
                            "currencyCode": "EUR"
                        },
                        "currencyExchangeRate": 0.8945,
                        "counterPartyName": "Tusk Williams B.V",
                        "counterPartyAccountNumber": "BE68539007547034",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c373c342",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Income",
                        "bookingDate": "2019-05-22",
                        "valueDate": "2019-05-22",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "1919.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Backbase B.V",
                        "counterPartyAccountNumber": "NL40ABNA0541164350",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Jacob Bontiusplaats 9, 1018 LL",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c374",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-04-28",
                        "valueDate": "2019-04-28",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "111.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Eneco Bank11",
                        "counterPartyAccountNumber": "BA391290079401028494",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c375",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "albertheijn.nl",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-04-24",
                        "valueDate": "2019-08-24",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "86.54",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Albert Heijn",
                        "counterPartyAccountNumber": "BG80BNBG96611020345678",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c376",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Standing Order",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Other Income",
                        "bookingDate": "2019-04-15",
                        "valueDate": "2019-04-15",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "5200",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Simons & Co. B.V.",
                        "counterPartyAccountNumber": "HR1210010051863000160",
                        "counterPartyCity": "Utrecht",
                        "counterPartyAddress": "Vendelier 71. 3905PD",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c377",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "Payment Sent",
                        "category": "Transfers",
                        "bookingDate": "2019-04-15",
                        "valueDate": "2019-04-15",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "10",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Sally Lambert",
                        "counterPartyAccountNumber": "CY17002001280000001200527600",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c378",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "www.medimarket.com",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-03-13",
                        "valueDate": "2019-03-13",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "199.95",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "MediaMarkt",
                        "counterPartyAccountNumber": "CZ6508000000192000145399",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c379",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Transfers",
                        "bookingDate": "2019-02-13",
                        "valueDate": "2019-02-13",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "25",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "John White",
                        "counterPartyAccountNumber": "DK5000400440116243",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c380",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "www.starbucks.com",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Food Drinks",
                        "bookingDate": "2019-02-13",
                        "valueDate": "2019-02-13",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "7.5",
                            "currencyCode": "EUR"
                        },
                        "counterPartyAddress": "Zuidplein 10, 1077 XV",
                        "counterPartyCity": "Amsterdam",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c381",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "Card Payment",
                        "category": "Shopping",
                        "bookingDate": "2019-02-13",
                        "valueDate": "2019-02-14",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "66.54",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Eneco Bank8",
                        "counterPartyAccountNumber": "FO1464600009692713",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "imageType": "albert",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c382",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Standing Order",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Category",
                        "bookingDate": "2019-01-10",
                        "valueDate": "2019-01-10",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "400",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Simons & Co. B.V.",
                        "counterPartyAccountNumber": "FI2112345600000785",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c383",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Transfers",
                        "bookingDate": "2018-10-01",
                        "valueDate": "2018-10-01",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "31",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Sally Lambert",
                        "counterPartyAccountNumber": "FR1420041010050500013M02606",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c384",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Standing Order",
                        "typeGroup": "Payment",
                        "type": "Payment Received",
                        "category": "Other Income",
                        "bookingDate": "2018-08-15",
                        "valueDate": "2018-08-15",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "25",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Eneco Bank12",
                        "counterPartyAccountNumber": "GE29NB0000000101904917",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c385",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Transfers",
                        "bookingDate": "2018-10-13",
                        "valueDate": "2018-08-15",
                        "creditDebitIndicator": "DBIT",
                        "transactionAmountCurrency": {
                            "amount": "640",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Sally Lambert",
                        "counterPartyAccountNumber": "DE89370400440532013000",
                        "counterPartyCity": "Amsterdam",
                        "counterPartyAddress": "Stationsplein, 1012 AB",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c386",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "category": "Income",
                        "bookingDate": "2018-07-13",
                        "valueDate": "2018-07-15",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "7200",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Simons & Co. B.V.",
                        "counterPartyAccountNumber": "GI75NWBK000000007099453",
                        "counterPartyCity": "Utrecht",
                        "counterPartyAddress": "Vendelier 71. 3905PD",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }, {
                        "id": "ec9ec6fd-a99c-4cee-a73e-51f84b11c387",
                        "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                        "reference": "7e8f5718-946c-4a86-a8bb-d903a1a20db8",
                        "description": "Internet Banking",
                        "typeGroup": "Payment",
                        "type": "SEPA Payment",
                        "bookingDate": "2018-07-13",
                        "valueDate": "2018-07-15",
                        "creditDebitIndicator": "CRDT",
                        "transactionAmountCurrency": {
                            "amount": "7200",
                            "currencyCode": "EUR"
                        },
                        "counterPartyName": "Simons & Co. B.V.",
                        "counterPartyAccountNumber": "GI75NWBK000000007099453",
                        "counterPartyCity": "Utrecht",
                        "counterPartyAddress": "Vendelier 71. 3905PD",
                        "additions": {
                            "settlementDate": "2020-06-01",
                            "additionalCharges": "183.56",
                            "purpose": "vacation",
                            "purposeCode": "1",
                            "fees": "62",
                            "feeReferenceId": "FEE-01",
                            "ultimateDebtorName": "John Doe",
                            "debtorId": "df8e1cac-e483-4ad1-87e6-e7a2da343421",
                            "ultimateDebtorId": "e7a2da343421",
                            "ultimateCreditorId": "df8e1cac",
                            "ultimateCreditorName": "Julia Pence",
                            "debtorReference": "[{'name':'CLEO V MONROE SR','role':'PRIMARY'},{'name':'LANIE Q PIERCE','role':'JOINT'}]",
                            "MMCCode": "V"
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
]);

export { AccountService, AccountServiceGetAccountMocksProvider, AccountServiceGetAccountsMocksProvider, AccountServiceMocksProvider, COLLECTION_FORMATS, CONFIG_TOKEN, CardsService, CardsServiceActivateMocksProvider, CardsServiceChangeLimitsMocksProvider, CardsServiceGetCardByIdMocksProvider, CardsServiceGetCardsMocksProvider, CardsServiceMocksProvider, CardsServiceRequestReplacementMocksProvider, CardsServiceUpdateLockStatusMocksProvider, CreditDebitIndicator, DeliveryTransitStep, Direction, EMPLOYEE_BASE_PATH, EmployeeApiModule, EmployeeConfiguration, LockStatus, OrderByTransactions, ServiceAgreementsService, ServiceAgreementsServiceGetServiceAgreementsMocksProvider, ServiceAgreementsServiceMocksProvider, SmartInsightsService, SmartInsightsServiceGetSmartInsightByIdMocksProvider, SmartInsightsServiceMocksProvider, StatusEnriched, TimePeriod, TransactionsService, TransactionsServiceGetTransactionMocksProvider, TransactionsServiceGetTransactionsMocksProvider, TransactionsServiceMocksProvider };
//# sourceMappingURL=backbase-employee-http-ang.js.map
