import { Type } from '@angular/core';
import { Loan } from '../models/loan.model';
export interface LoanItemCustomBase<T extends Loan = Loan> {
    loan: T;
}
export declare enum LoanInfoItemType {
    String = "String",
    StringArray = "StringArray",
    Date = "Date",
    Amount = "Amount",
    Percent = "Percent",
    PaymentFrequency = "PaymentFrequency"
}
export interface LoanInfoTitleBase {
    title: string;
}
interface LoanInfoItemBase<T> extends LoanInfoTitleBase {
    cssClasses: string;
    showItem?: (item: T) => boolean;
}
export interface LoanInfoItemCustom<T, U> extends Omit<Required<LoanInfoItemBase<T>>, 'title'> {
    componentRef: Type<U>;
}
export interface LoanInfoDataItem<T> extends LoanInfoItemBase<T> {
    fieldKey: keyof T;
    fieldType: LoanInfoItemType;
}
export declare type LoanInfoItem<T, U> = LoanInfoDataItem<T> | LoanInfoItemCustom<T, U>;
export interface LoanInfoSection<T, U> extends LoanInfoTitleBase {
    items: LoanInfoItem<T, U>[];
}
export declare type LoanInfoDataConfig<T extends Loan, U extends LoanItemCustomBase<T>> = LoanInfoSection<T, U>[];
export {};
