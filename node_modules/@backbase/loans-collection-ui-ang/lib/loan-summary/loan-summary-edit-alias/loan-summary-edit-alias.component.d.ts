import { EventEmitter } from '@angular/core';
import { InputInlineEditState } from '@backbase/ui-ang/input-inline-edit';
import { AccountAliasDisplayingLevel } from '@backbase/product-summary-common-ang';
import * as i0 from "@angular/core";
export declare class LoanSummaryEditAliasComponent {
    private readonly accountAliasDisplayingLevel;
    private newAlias;
    private _editState;
    /**
     * The alias text
     */
    alias: string | undefined;
    /**
     * Max length for alias
     */
    aliasMaxLength: number;
    /**
     * Flag to show/hide edit alias button
     */
    showEditButton: boolean;
    /**
     * Alias inline edit state
     *
     * @param value
     */
    set editState(value: InputInlineEditState);
    get editState(): InputInlineEditState;
    /**
     * Emit on alias edit state changes
     */
    editStateChange: EventEmitter<InputInlineEditState>;
    /**
     * Emits on alias changes
     */
    updateAlias: EventEmitter<string>;
    /**
     * Emits on canceling update for alias
     */
    cancelAliasUpdate: EventEmitter<void>;
    /**
     * Hint for alias editing
     */
    readonly aliasHint: string;
    /**
     *  Flag represents modal open state
     */
    isOpen: boolean;
    constructor(accountAliasDisplayingLevel: AccountAliasDisplayingLevel);
    onAcceptAlias(alias: string): void;
    onConfirmModal(): void;
    onCloseModal(): void;
    onEditStateChange(state: InputInlineEditState): void;
    private getAliasHint;
    static ɵfac: i0.ɵɵFactoryDeclaration<LoanSummaryEditAliasComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LoanSummaryEditAliasComponent, "bb-loan-summary-edit-alias", never, { "alias": "alias"; "aliasMaxLength": "aliasMaxLength"; "showEditButton": "showEditButton"; "editState": "editState"; }, { "editStateChange": "editStateChange"; "updateAlias": "updateAlias"; "cancelAliasUpdate": "cancelAliasUpdate"; }, never, never>;
}
