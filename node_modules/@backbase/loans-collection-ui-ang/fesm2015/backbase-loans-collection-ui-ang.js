import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Input, NgModule, EventEmitter, Output, Directive, Optional, Inject, HostListener, Host } from '@angular/core';
import * as i2 from '@angular/common';
import { CommonModule, DOCUMENT } from '@angular/common';
import * as i2$1 from '@angular/router';
import { RouterModule } from '@angular/router';
import * as i13 from '@backbase/ui-ang/button';
import { ButtonModule } from '@backbase/ui-ang/button';
import * as i1 from '@backbase/ui-ang/header';
import { HeaderModule } from '@backbase/ui-ang/header';
import * as i2$2 from '@backbase/ui-ang/empty-state';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import * as i1$1 from '@backbase/ui-ang/loading-indicator';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import * as i2$3 from '@backbase/ui-ang/amount';
import { AmountModule } from '@backbase/ui-ang/amount';
import * as i3 from '@backbase/ui-ang/date-pipe';
import { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';
import * as i1$3 from '@backbase/ui-ang/icon';
import { IconModule } from '@backbase/ui-ang/icon';
import * as i7 from '@backbase/ui-ang/keyboard-click-directive';
import { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';
import * as i1$2 from '@backbase/ui-ang/badge';
import { BadgeModule } from '@backbase/ui-ang/badge';
import * as i1$4 from '@backbase/ui-ang/alert';
import { AlertModule } from '@backbase/ui-ang/alert';
import * as i2$4 from '@backbase/ui-ang/progressbar';
import { ProgressbarModule } from '@backbase/ui-ang/progressbar';
import BigNumber from 'bignumber.js';
import * as i2$5 from '@backbase/ui-ang/collapsible-card';
import { CollapsibleCardModule } from '@backbase/ui-ang/collapsible-card';
import * as i1$5 from '@backbase/ui-ang/media-query-lib';
import { MediaQueryModule } from '@backbase/ui-ang/media-query-lib';
import * as i1$6 from '@backbase/ui-ang/input-inline-edit';
import { InputInlineEditState, InputInlineEditModule } from '@backbase/ui-ang/input-inline-edit';
import * as i4 from '@backbase/product-summary-common-ang';
import { AccountAliasDisplayingLevel, ACCOUNT_ALIAS_DISPLAYING_LEVEL } from '@backbase/product-summary-common-ang';
import * as i11 from '@backbase/ui-ang/modal';
import { ModalModule } from '@backbase/ui-ang/modal';
import * as i1$7 from '@backbase/ui-ang/dropdown-menu';
import { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';
import * as i1$a from '@backbase/data-ang/loans';
import { PresentationAmortizationPaymentStatus } from '@backbase/data-ang/loans';
import * as i3$1 from '@backbase/ui-ang/table';
import { TableModule } from '@backbase/ui-ang/table';
import * as i1$8 from '@backbase/ui-ang/tooltip-directive';
import { TooltipModule } from '@backbase/ui-ang/tooltip-directive';
import { debounceTime, takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import * as i1$9 from '@angular/forms';
import { PUBSUB } from '@backbase/foundation-ang/web-sdk';
import * as i4$1 from '@backbase/identity-auth/transaction-signing';
import * as i2$6 from '@backbase/payment-orders-ang';
import { getRelativeDate, getDateOnly, BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN, PaymentOrdersUiModule } from '@backbase/payment-orders-ang';
import * as i3$2 from '@backbase/payments-collection-ui-ang';
import { ӨScheduleDetailsComponent, ReviewPaymentContainerComponent, ReviewPaymentModule } from '@backbase/payments-collection-ui-ang';
import * as i8 from '@backbase/ui-ang/load-button';
import '@angular/localize/init';
import * as i3$3 from '@backbase/ui-ang/ellipsis';
import { EllipsisModule } from '@backbase/ui-ang/ellipsis';

class LoansTabsComponent {
}
/** @nocollapse */ LoansTabsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansTabsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoansTabsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoansTabsComponent, selector: "bb-loans-tabs", inputs: { tabs: "tabs" }, ngImport: i0, template: "<div class=\"bb-tab-container\">\n  <div class=\"bb-tab-container__tabs nav nav-tabs\" role=\"tablist\">\n    <a\n      *ngFor=\"let tab of tabs\"\n      [routerLink]=\"tab.route\"\n      routerLinkActive=\"active\"\n      class=\"nav-link nav-item\"\n      data-role=\"loans-tab-link\"\n      role=\"tab\"\n    >\n      {{ tab.title }}\n    </a>\n  </div>\n</div>\n\n<div class=\"bb-tab-container__content tab-content\" role=\"tabpanel\">\n  <router-outlet></router-outlet>\n</div>\n", directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2$1.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i2$1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "routerLinkActive"], exportAs: ["routerLinkActive"] }, { type: i2$1.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansTabsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loans-tabs',
                    templateUrl: './loans-tabs.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { tabs: [{
                type: Input
            }] } });

class LoansTabsModule {
}
/** @nocollapse */ LoansTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoansTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansTabsModule, declarations: [LoansTabsComponent], imports: [CommonModule, RouterModule], exports: [LoansTabsComponent] });
/** @nocollapse */ LoansTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansTabsModule, imports: [[CommonModule, RouterModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansTabsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoansTabsComponent],
                    imports: [CommonModule, RouterModule],
                    exports: [LoansTabsComponent],
                }]
        }] });

class LoansHeadingComponent {
    constructor() {
        /**
         * Heading navigation button press action
         */
        this.navigationButtonAction = new EventEmitter();
        /**
         * Heading main button press action
         */
        this.mainButtonAction = new EventEmitter();
    }
}
/** @nocollapse */ LoansHeadingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansHeadingComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoansHeadingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoansHeadingComponent, selector: "bb-loans-heading", inputs: { headingTitle: "headingTitle", mainButtonTitle: "mainButtonTitle", showMainButton: "showMainButton", showNavigationButton: "showNavigationButton", navigationButtonTitle: "navigationButtonTitle" }, outputs: { navigationButtonAction: "navigationButtonAction", mainButtonAction: "mainButtonAction" }, ngImport: i0, template: "<div\n  class=\"bb-heading-widget bb-heading-widget--de-elevated\"\n  data-role=\"loans-heading\"\n  [class.bb-heading-widget--button-above]=\"showNavigationButton\"\n>\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading text-white\"\n    [heading]=\"headingTitle\"\n  ></bb-header-ui>\n\n  <button\n    *ngIf=\"showNavigationButton\"\n    data-role=\"loans-heading-button__navigation\"\n    (click)=\"navigationButtonAction.emit()\"\n    class=\"bb-heading-widget__button btn btn-link-text-light btn-sm bb-block bb-block--xl\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back bb-icon--sm\"></i>\n    <span>{{ navigationButtonTitle }}</span>\n  </button>\n\n  <button\n    *ngIf=\"showMainButton\"\n    data-role=\"loans-heading-button__main\"\n    (click)=\"mainButtonAction.emit()\"\n    class=\"bb-heading-widget__button btn btn-primary\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-add\"></i>\n    <span>{{ mainButtonTitle }}</span>\n  </button>\n</div>\n", components: [{ type: i1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansHeadingComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loans-heading',
                    templateUrl: './loans-heading.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { headingTitle: [{
                type: Input
            }], mainButtonTitle: [{
                type: Input
            }], showMainButton: [{
                type: Input
            }], showNavigationButton: [{
                type: Input
            }], navigationButtonTitle: [{
                type: Input
            }], navigationButtonAction: [{
                type: Output
            }], mainButtonAction: [{
                type: Output
            }] } });

class LoansHeadingModule {
}
/** @nocollapse */ LoansHeadingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansHeadingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoansHeadingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansHeadingModule, declarations: [LoansHeadingComponent], imports: [CommonModule, RouterModule, HeaderModule, ButtonModule], exports: [LoansHeadingComponent] });
/** @nocollapse */ LoansHeadingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansHeadingModule, imports: [[CommonModule, RouterModule, HeaderModule, ButtonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansHeadingModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoansHeadingComponent],
                    imports: [CommonModule, RouterModule, HeaderModule, ButtonModule],
                    exports: [LoansHeadingComponent],
                }]
        }] });

class LoansMainContainerComponent {
    constructor() {
        /**
         * Flag represents error state
         *
         * @default: false
         */
        this.isErrorState = false;
        /**
         * Flag represents loading  state
         *
         * @default: false
         */
        this.isLoadingState = false;
        /**
         * Flag represents empty state
         *
         * @default: false
         */
        this.isEmptyState = false;
        /**
         * Flag will add the additional class for state containers to have some min height
         * Applicable for empty error and loading default states only
         *
         * @default: false
         */
        this.containerHeightFitToContent = false;
        /**
         * Classes for inner content element wrapper
         *
         * @default: card-body
         */
        this.contentWrapperClasses = 'bb-card__body';
        /**
         * Classes for root wrapper element
         */
        this.rootWrapperClasses = 'bb-card';
    }
}
/** @nocollapse */ LoansMainContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansMainContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoansMainContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoansMainContainerComponent, selector: "bb-loans-main-container", inputs: { isErrorState: "isErrorState", isLoadingState: "isLoadingState", isEmptyState: "isEmptyState", containerHeightFitToContent: "containerHeightFitToContent", contentWrapperClasses: "contentWrapperClasses", rootWrapperClasses: "rootWrapperClasses", customErrorState: "customErrorState", customLoadingState: "customLoadingState", customEmptyState: "customEmptyState" }, ngImport: i0, template: "<div [ngClass]=\"rootWrapperClasses\">\n  <div [ngClass]=\"contentWrapperClasses\">\n    <ng-container *ngIf=\"!isErrorState; else customErrorState || errorStateDefault\">\n      <ng-container *ngIf=\"!isLoadingState; else customLoadingState || loadingStateDefault\">\n        <ng-container *ngIf=\"!isEmptyState; else customEmptyState || emptyStateDefault\">\n          <ng-content></ng-content>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #loadingStateDefault>\n  <div\n    class=\"bb-state-container\"\n    [class.bb-state-container--min-height]=\"!containerHeightFitToContent\"\n    data-role=\"loans-loading-state-default\"\n  >\n    <bb-loading-indicator-ui loaderSize=\"md\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #errorStateDefault>\n  <div\n    class=\"bb-state-container\"\n    [class.bb-state-container--min-height]=\"!containerHeightFitToContent\"\n    data-role=\"loans-error-state-default\"\n  >\n    <bb-empty-state-ui\n      title=\"Unknown Error\"\n      i18n-title=\"Error state title@@loans.state.error.title\"\n      subtitle=\"Try to reload the page or contact the system administrator.\"\n      i18n-subtitle=\"Error state subtitle@@loans.state.error.subtitle\"\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n    >\n    </bb-empty-state-ui>\n  </div>\n</ng-template>\n\n<ng-template #emptyStateDefault>\n  <div\n    class=\"bb-state-container\"\n    [class.bb-state-container--min-height]=\"!containerHeightFitToContent\"\n    data-role=\"loans-empty-state-default\"\n  >\n    <bb-empty-state-ui\n      title=\"No Data\"\n      i18n-title=\"Empty state title@@loans.state.empty.title\"\n      iconModifier=\"currency-trade\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n", components: [{ type: i1$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i2$2.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansMainContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loans-main-container',
                    templateUrl: './loans-main-container.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { isErrorState: [{
                type: Input
            }], isLoadingState: [{
                type: Input
            }], isEmptyState: [{
                type: Input
            }], containerHeightFitToContent: [{
                type: Input
            }], contentWrapperClasses: [{
                type: Input
            }], rootWrapperClasses: [{
                type: Input
            }], customErrorState: [{
                type: Input
            }], customLoadingState: [{
                type: Input
            }], customEmptyState: [{
                type: Input
            }] } });

class LoansMainContainerModule {
}
/** @nocollapse */ LoansMainContainerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansMainContainerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoansMainContainerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansMainContainerModule, declarations: [LoansMainContainerComponent], imports: [CommonModule, LoadingIndicatorModule, EmptyStateModule], exports: [LoansMainContainerComponent] });
/** @nocollapse */ LoansMainContainerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansMainContainerModule, imports: [[CommonModule, LoadingIndicatorModule, EmptyStateModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansMainContainerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoansMainContainerComponent],
                    imports: [CommonModule, LoadingIndicatorModule, EmptyStateModule],
                    exports: [LoansMainContainerComponent],
                }]
        }] });

class LoansInitialEmptyComponent {
    constructor() {
        /**
         * Emits on apply for loans button click
         */
        this.applyForLoan = new EventEmitter();
    }
}
/** @nocollapse */ LoansInitialEmptyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansInitialEmptyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoansInitialEmptyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoansInitialEmptyComponent, selector: "bb-loans-initial-empty", inputs: { showApplyButton: "showApplyButton" }, outputs: { applyForLoan: "applyForLoan" }, ngImport: i0, template: "<div class=\"bb-state-container bb-state-container--min-height\">\n  <bb-empty-state-ui\n    title=\"No loans available\"\n    i18n-title=\"Initial no loans title@@loans.no-loans.initial.empty-state.title\"\n    subtitle=\"You don\u2019t have any loans to show at the moment.\"\n    i18n-subtitle=\"Initial no loans subtitle@@loans.no-loans.initial.empty-state.subtitle\"\n    iconModifier=\"current-accounts\"\n    iconSize=\"xxl\"\n  >\n  </bb-empty-state-ui>\n\n  <div class=\"bb-state-container__footer bb-text-align-center\">\n    <button\n      *ngIf=\"showApplyButton\"\n      (click)=\"applyForLoan.emit()\"\n      bbButton\n      data-role=\"loans-initial-no-loans-btn\"\n      i18n=\"Apply for loan button text@@loans.apply-for-loan.button.text\"\n    >\n      Apply for loan\n    </button>\n  </div>\n</div>\n", components: [{ type: i2$2.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansInitialEmptyComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loans-initial-empty',
                    templateUrl: './loans-initial-empty.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { showApplyButton: [{
                type: Input
            }], applyForLoan: [{
                type: Output
            }] } });

class LoansInitialEmptyModule {
}
/** @nocollapse */ LoansInitialEmptyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansInitialEmptyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoansInitialEmptyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansInitialEmptyModule, declarations: [LoansInitialEmptyComponent], imports: [CommonModule, EmptyStateModule, ButtonModule], exports: [LoansInitialEmptyComponent] });
/** @nocollapse */ LoansInitialEmptyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansInitialEmptyModule, imports: [[CommonModule, EmptyStateModule, ButtonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansInitialEmptyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoansInitialEmptyComponent],
                    imports: [CommonModule, EmptyStateModule, ButtonModule],
                    exports: [LoansInitialEmptyComponent],
                }]
        }] });

class LoanItemTypeComponent {
}
/** @nocollapse */ LoanItemTypeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemTypeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanItemTypeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanItemTypeComponent, selector: "bb-loan-item-type", inputs: { loanType: "loanType", useSubtitleClass: "useSubtitleClass" }, ngImport: i0, template: "<span class=\"sr-only\" i18n=\"Loan item type a11y prefix@@loans.loan-item.loan-type.a11y.prefix\"> Type: </span>\n<span\n  data-role=\"bb-loans-loan-type\"\n  class=\"bb-text-support bb-loans-margin-right-sm\"\n  [ngClass]=\"{\n    'bb-subheader': !useSubtitleClass,\n    'bb-subtitle': useSubtitleClass\n  }\"\n>\n  {{ loanType }}\n</span>\n<span class=\"sr-only\">,</span>\n", directives: [{ type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemTypeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-item-type',
                    templateUrl: './loan-item-type.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { loanType: [{
                type: Input
            }], useSubtitleClass: [{
                type: Input
            }] } });

class LoanItemTypeModule {
}
/** @nocollapse */ LoanItemTypeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemTypeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanItemTypeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemTypeModule, declarations: [LoanItemTypeComponent], imports: [CommonModule], exports: [LoanItemTypeComponent] });
/** @nocollapse */ LoanItemTypeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemTypeModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemTypeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanItemTypeComponent],
                    imports: [CommonModule],
                    exports: [LoanItemTypeComponent],
                }]
        }] });

var CustomLoanStatus;
(function (CustomLoanStatus) {
    CustomLoanStatus["Overdue"] = "Overdue";
})(CustomLoanStatus || (CustomLoanStatus = {}));
const loanItemStatusColorMap = {
    Active: 'primary',
    Pending: 'warning',
    Inactive: 'secondary',
    [CustomLoanStatus.Overdue]: 'danger',
};

class LoanItemStatusComponent {
    constructor() {
        /**
         * Map of colors for each status
         */
        this.itemStatusColorMap = loanItemStatusColorMap;
    }
}
/** @nocollapse */ LoanItemStatusComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemStatusComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanItemStatusComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanItemStatusComponent, selector: "bb-loan-item-status", inputs: { status: "status", itemStatusColorMap: "itemStatusColorMap" }, ngImport: i0, template: "<ng-container *ngIf=\"status\">\n  <span class=\"sr-only\" i18n=\"Loan item status a11y prefix@@loans.loan-item.loan-status.a11y.prefix\"> Status: </span>\n  <span class=\"d-none\" i18n=\"Loan item status@@loans.loan-item.status\" #textLabel\n    >{status, select, Active {Active} Inactive {Inactive} Pending {Pending} Overdue {Overdue}}</span\n  >\n  <bb-badge-ui\n    [color]=\"itemStatusColorMap[status]\"\n    [text]=\"textLabel.textContent! | titlecase\"\n    data-role=\"bb-loans-badge\"\n  ></bb-badge-ui>\n  <span class=\"sr-only\">,</span>\n</ng-container>\n", components: [{ type: i1$2.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "titlecase": i2.TitleCasePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemStatusComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-item-status',
                    templateUrl: './loan-item-status.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { status: [{
                type: Input
            }], itemStatusColorMap: [{
                type: Input
            }] } });

class LoanItemStatusModule {
}
/** @nocollapse */ LoanItemStatusModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemStatusModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanItemStatusModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemStatusModule, declarations: [LoanItemStatusComponent], imports: [CommonModule, BadgeModule], exports: [LoanItemStatusComponent] });
/** @nocollapse */ LoanItemStatusModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemStatusModule, imports: [[CommonModule, BadgeModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemStatusModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanItemStatusComponent],
                    imports: [CommonModule, BadgeModule],
                    exports: [LoanItemStatusComponent],
                }]
        }] });

class LoanItemNameComponent {
}
/** @nocollapse */ LoanItemNameComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemNameComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanItemNameComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanItemNameComponent, selector: "bb-loan-item-name", inputs: { loanName: "loanName", headingLevel: "headingLevel" }, ngImport: i0, template: "<span class=\"sr-only\" i18n=\"Loan item name a11y prefix@@loans.loan-item.loan-name.a11y.prefix\">Name:</span>\n<span\n  role=\"heading\"\n  [attr.aria-level]=\"headingLevel\"\n  class=\"bb-heading-{{ headingLevel }} bb-text-bold bb-block bb-block--xs break-word\"\n  >{{ loanName }}</span\n>\n<span class=\"sr-only\">,</span>\n", changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemNameComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-item-name',
                    templateUrl: './loan-item-name.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { loanName: [{
                type: Input
            }], headingLevel: [{
                type: Input
            }] } });

class LoanItemNameModule {
}
/** @nocollapse */ LoanItemNameModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemNameModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanItemNameModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemNameModule, declarations: [LoanItemNameComponent], imports: [CommonModule, HeaderModule], exports: [LoanItemNameComponent] });
/** @nocollapse */ LoanItemNameModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemNameModule, imports: [[CommonModule, HeaderModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemNameModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanItemNameComponent],
                    imports: [CommonModule, HeaderModule],
                    exports: [LoanItemNameComponent],
                }]
        }] });

// eslint-disable-next-line @angular-eslint/directive-class-suffix
class LoanConfigBaseComponent {
    ngOnInit() {
        if (!this.loan) {
            throw new Error(this.getErrorMessage('loan'));
        }
        if (!this.dataConfig) {
            throw new Error(this.getErrorMessage('dataConfig'));
        }
    }
    getErrorMessage(fieldName) {
        return `[bb-loans]: "${fieldName}" input is required in "${this.constructor.name}"`;
    }
}
/** @nocollapse */ LoanConfigBaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanConfigBaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ LoanConfigBaseComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: LoanConfigBaseComponent, inputs: { loan: "loan", dataConfig: "dataConfig" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanConfigBaseComponent, decorators: [{
            type: Directive
        }], propDecorators: { loan: [{
                type: Input
            }], dataConfig: [{
                type: Input
            }] } });

var LoanDefaultViewType;
(function (LoanDefaultViewType) {
    LoanDefaultViewType["LineOfCredit"] = "LineOfCredit";
    LoanDefaultViewType["Mortgage"] = "Mortgage";
    LoanDefaultViewType["TermLoan"] = "TermLoan";
})(LoanDefaultViewType || (LoanDefaultViewType = {}));

/**
 * Check for loan overdue
 *
 * @param isOverdue
 * @param inArrearsAmount
 * @param inArrearsDate
 */
function isLoanOverdue({ isOverdue, inArrearsAmount, inArrearsDate, overduePaymentsCount, }) {
    return Boolean(isOverdue || inArrearsAmount || inArrearsDate || overduePaymentsCount);
}
/**
 * Return the alias for loan account
 *
 * @param alias
 * @param name
 */
function getLoanAlias({ alias, name }) {
    return alias || alias === '' ? alias : name;
}

var LoanPaymentInfoType;
(function (LoanPaymentInfoType) {
    LoanPaymentInfoType["ScheduledNext"] = "ScheduledNext";
    LoanPaymentInfoType["ScheduledLast"] = "ScheduledLast";
    LoanPaymentInfoType["Overdue"] = "Overdue";
    LoanPaymentInfoType["FullyPaid"] = "FullyPaid";
})(LoanPaymentInfoType || (LoanPaymentInfoType = {}));

class LoanItemPaymentInfoComponent extends LoanConfigBaseComponent {
    ngOnChanges() {
        this.paymentInfo = this.dataConfig.call(undefined, this.loan);
        this.isAmountVisible = Boolean(this.loan.currencyCode && this.paymentInfo.amount);
        this.isFullyPaid = this.paymentInfo.paymentType === LoanPaymentInfoType.FullyPaid;
    }
}
/** @nocollapse */ LoanItemPaymentInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemPaymentInfoComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanItemPaymentInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanItemPaymentInfoComponent, selector: "bb-loan-item-payment-info", usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<span\n  *ngIf=\"isFullyPaid; else amountBased\"\n  class=\"bb-text-support\"\n  data-role=\"bb-loans-loan-payment-info__label\"\n  i18n=\"Loan item no payments text@@loans.loan-item.no-payments.text\"\n  >No upcoming payments</span\n>\n<ng-template #amountBased>\n  <div *ngIf=\"isAmountVisible || paymentInfo.date\" class=\"bb-text-support\" data-role=\"bb-loans-loan-payment-info\">\n    <span\n      i18n=\"Loan item payment info text@@loans.loan-item.payment-info.text\"\n      data-role=\"bb-loans-loan-payment-info__label\"\n    >\n      {paymentInfo.paymentType, select, ScheduledNext {Next payment} ScheduledLast {Last payment} Overdue {Overdue}}:\n    </span>\n    <bb-amount-ui\n      data-role=\"bb-loans-loan-payment-info__amount\"\n      *ngIf=\"isAmountVisible\"\n      [amount]=\"paymentInfo.amount!\"\n      [currency]=\"loan.currencyCode!\"\n      [mapCurrency]=\"false\"\n    ></bb-amount-ui>\n    <span\n      *ngIf=\"paymentInfo.date as date\"\n      data-role=\"bb-loans-loan-payment-info__date\"\n      i18n=\"Loan item next payment date@@loans.loan-item.next-payment.date\"\n    >\n      on {{ date | bbDate }}\n    </span>\n    <span class=\"sr-only\">,</span>\n  </div>\n</ng-template>\n", components: [{ type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "bbDate": i3.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemPaymentInfoComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-item-payment-info',
                    templateUrl: './loan-item-payment-info.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }] });

/**
 * @dynamic
 */
class LoanListItemComponent extends LoanConfigBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * Loan select emitter
         */
        this.selectLoan = new EventEmitter();
        /**
         * Container unique id
         */
        this.itemId = LoanListItemComponent.id++;
        /**
         * Loan overdue status
         */
        this.overdueStatus = CustomLoanStatus.Overdue;
    }
    /**
     * @internal
     */
    ngOnChanges() {
        const { viewType, availableBalance, paidAmount } = this.loan;
        this.loanIconName = this.dataConfig.icons[viewType];
        this.amountByType = viewType === LoanDefaultViewType.LineOfCredit ? availableBalance : paidAmount;
        this.isOverdue = isLoanOverdue(this.loan);
        this.loanAlias = getLoanAlias(this.loan);
    }
}
LoanListItemComponent.id = 0;
/** @nocollapse */ LoanListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanListItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanListItemComponent, selector: "bb-loan-list-item", outputs: { selectLoan: "selectLoan" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div\n  class=\"bb-loans-list-item-wrapper\"\n  [class.bb-loans-list-item-wrapper--overdue]=\"isOverdue\"\n  role=\"button\"\n  tabindex=\"0\"\n  aria-label=\"View loan details\"\n  [attr.aria-describedby]=\"'loan-item-text-' + itemId\"\n  data-role=\"bb-loans-list-item__button\"\n  i18n-aria-label=\"Loan list item button aria label@@loans.loan-list-item.button.aria-label\"\n  (bbKeyboardClick)=\"selectLoan.emit(loan)\"\n>\n  <div class=\"bb-stack bb-stack--align-top bb-table-text-default bb-loans-list-item\" id=\"loan-item-text-{{ itemId }}\">\n    <bb-icon-ui\n      class=\"bb-stack__item bb-stack__item--align-top bb-loans-list-item__icon\"\n      data-role=\"bb-loans-list-item__icon\"\n      [name]=\"loanIconName\"\n      backgroundType=\"square\"\n      color=\"secondary\"\n      size=\"lg\"\n    ></bb-icon-ui>\n    <div class=\"bb-stack__item bb-stack__item--fill bb-loans-list-item__base-info-wrapper\">\n      <div class=\"bb-block bb-block--xs bb-loans-list-item__type\">\n        <bb-loan-item-type [loanType]=\"loan.loanTypeAlias\"></bb-loan-item-type>\n        <bb-loan-item-status\n          *ngIf=\"isOverdue\"\n          [status]=\"overdueStatus\"\n          data-role=\"bb-loans-list-item__status\"\n        ></bb-loan-item-status>\n      </div>\n      <bb-loan-item-name [headingLevel]=\"3\" [loanName]=\"loanAlias\"></bb-loan-item-name>\n      <div class=\"bb-block bb-block--sm\">\n        <bb-loan-item-payment-info\n          [loan]=\"loan\"\n          [dataConfig]=\"dataConfig.paymentInfo\"\n          class=\"bb-subheader bb-subheader--regular\"\n        >\n        </bb-loan-item-payment-info>\n      </div>\n    </div>\n    <div\n      *ngIf=\"loan.currencyCode as currencyCode\"\n      class=\"bb-stack__item bb-stack__item--push-right bb-text-align-right bb-loans-list-item__amounts\"\n      data-role=\"bb-loans-list-item__amounts-wrapper\"\n    >\n      <div *ngIf=\"amountByType as amount\" class=\"bb-block bb-block--xs\">\n        <span\n          class=\"bb-text-bold\"\n          i18n=\"Loan list item amount balance text@@loans.loan-list-item.amount-balance.text\"\n          data-role=\"bb-loans-list-item__available-balance-label\"\n        >\n          {loan.viewType, select, LineOfCredit {Available balance} other {Amount repaid}}:\n        </span>\n        <bb-amount-ui\n          [amount]=\"amount\"\n          [currency]=\"currencyCode\"\n          [mapCurrency]=\"false\"\n          data-role=\"bb-loans-list-item__available-balance-amount\"\n        ></bb-amount-ui>\n        <span class=\"sr-only\">,</span>\n      </div>\n      <div *ngIf=\"loan.outstandingAmount as outstandingAmount\">\n        <span\n          class=\"bb-text-bold\"\n          i18n=\"Loan list item outstanding amount text@@loans.loan-list-item.outstanding-amount.text\"\n        >\n          Outstanding amount:\n        </span>\n        <bb-amount-ui\n          [amount]=\"outstandingAmount\"\n          [currency]=\"currencyCode\"\n          [mapCurrency]=\"false\"\n          data-role=\"bb-loans-list-item__outstanding-amount\"\n        >\n        </bb-amount-ui>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: LoanItemTypeComponent, selector: "bb-loan-item-type", inputs: ["loanType", "useSubtitleClass"] }, { type: LoanItemStatusComponent, selector: "bb-loan-item-status", inputs: ["status", "itemStatusColorMap"] }, { type: LoanItemNameComponent, selector: "bb-loan-item-name", inputs: ["loanName", "headingLevel"] }, { type: LoanItemPaymentInfoComponent, selector: "bb-loan-item-payment-info" }, { type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i7.KeyboardClickDirective, selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanListItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-list-item',
                    templateUrl: './loan-list-item.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { selectLoan: [{
                type: Output
            }] } });

class RetailLoanItemPaymentInfoComponent extends LoanConfigBaseComponent {
    ngOnChanges() {
        this.paymentInfo = this.dataConfig.call(undefined, this.loan);
        this.isAmountVisible = Boolean(this.loan.currencyCode && this.paymentInfo.amount);
        this.isFullyPaid = this.paymentInfo.paymentType === LoanPaymentInfoType.FullyPaid;
    }
}
/** @nocollapse */ RetailLoanItemPaymentInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanItemPaymentInfoComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ RetailLoanItemPaymentInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RetailLoanItemPaymentInfoComponent, selector: "bb-retail-loan-item-payment-info", usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<bb-alert-ui\n  *ngIf=\"isFullyPaid; else amountBased\"\n  title=\"\"\n  data-role=\"bb-loans-loan-payment-info__alert\"\n  [modifier]=\"'info'\"\n  [dismissible]=\"false\"\n>\n  <span\n    data-role=\"bb-loans-loan-payment-info__label\"\n    i18n=\"Loan item no payments text@@loans.loan-item.no-payments.text\"\n    >No upcoming payments</span\n  >\n</bb-alert-ui>\n<ng-template #amountBased>\n  <div *ngIf=\"isAmountVisible || paymentInfo.date\" class=\"bb-text-support\" data-role=\"bb-loans-loan-payment-info\">\n    <bb-alert-ui title=\"\" data-role=\"bb-loans-loan-payment-info__alert\" [modifier]=\"'info'\" [dismissible]=\"false\">\n      <span\n        i18n=\"Loan item payment info text@@loans.loan-item.payment-info.text\"\n        data-role=\"bb-loans-loan-payment-info__label\"\n      >\n        {paymentInfo.paymentType, select, ScheduledNext {Next payment} ScheduledLast {Last payment} Overdue {Overdue}}:\n      </span>\n      <bb-amount-ui\n        data-role=\"bb-loans-loan-payment-info__amount\"\n        *ngIf=\"isAmountVisible\"\n        [amount]=\"paymentInfo.amount!\"\n        [currency]=\"loan.currencyCode!\"\n        [mapCurrency]=\"true\"\n      ></bb-amount-ui>\n      <span\n        *ngIf=\"paymentInfo.date as date\"\n        data-role=\"bb-loans-loan-payment-info__date\"\n        i18n=\"Loan item next payment date@@loans.loan-item.next-payment.date\"\n      >\n        on {{ date | bbDate }}\n      </span>\n      <span class=\"sr-only\">,</span>\n    </bb-alert-ui>\n  </div>\n</ng-template>\n", components: [{ type: i1$4.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "bbDate": i3.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanItemPaymentInfoComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-retail-loan-item-payment-info',
                    templateUrl: './retail-loan-item-payment-info.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }] });

class LoanItemPaymentInfoModule {
}
/** @nocollapse */ LoanItemPaymentInfoModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemPaymentInfoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanItemPaymentInfoModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemPaymentInfoModule, declarations: [LoanItemPaymentInfoComponent, RetailLoanItemPaymentInfoComponent], imports: [CommonModule, AmountModule, BbDatePipeModule, AlertModule], exports: [LoanItemPaymentInfoComponent, RetailLoanItemPaymentInfoComponent] });
/** @nocollapse */ LoanItemPaymentInfoModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemPaymentInfoModule, imports: [[CommonModule, AmountModule, BbDatePipeModule, AlertModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemPaymentInfoModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanItemPaymentInfoComponent, RetailLoanItemPaymentInfoComponent],
                    imports: [CommonModule, AmountModule, BbDatePipeModule, AlertModule],
                    exports: [LoanItemPaymentInfoComponent, RetailLoanItemPaymentInfoComponent],
                }]
        }] });

const innerModules = [LoanItemTypeModule, LoanItemStatusModule, LoanItemNameModule, LoanItemPaymentInfoModule];
const uiModules$1 = [IconModule, BbDatePipeModule, AmountModule, KeyboardClickModule];
class LoanListItemModule {
}
/** @nocollapse */ LoanListItemModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanListItemModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanListItemModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanListItemModule, declarations: [LoanListItemComponent], imports: [CommonModule, IconModule, BbDatePipeModule, AmountModule, KeyboardClickModule, LoanItemTypeModule, LoanItemStatusModule, LoanItemNameModule, LoanItemPaymentInfoModule], exports: [LoanListItemComponent] });
/** @nocollapse */ LoanListItemModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanListItemModule, imports: [[CommonModule, ...uiModules$1, ...innerModules]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanListItemModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanListItemComponent],
                    imports: [CommonModule, ...uiModules$1, ...innerModules],
                    exports: [LoanListItemComponent],
                }]
        }] });

class LoanSummaryOverdueBannerComponent {
    constructor() {
        this.id = LoanSummaryOverdueBannerComponent._id++;
        /**
         * Ids for banner a11y references
         */
        this.elementIds = {
            title: `loan-overdue-title-${this.id}`,
            description: `loan-overdue-description-${this.id}`,
            amount: `loan-overdue-amount-${this.id}`,
        };
        /**
         * Indicator to show/hide `payNow` button
         *
         * @default true
         */
        this.showPayNowButton = true;
        /**
         * Pay now event emitter
         */
        this.payNow = new EventEmitter();
    }
    ngOnChanges() {
        const { amount, description } = this.elementIds;
        const describedByIds = [];
        this.showOverdueDate = Boolean(this.overdueDate && Date.parse(this.overdueDate) - Date.now() <= 0);
        this.showOverdueAmount = Boolean(this.currencyCode && this.overdueAmount);
        if ((!this.overdueDate && !this.overdueAmount) || this.showOverdueDate) {
            describedByIds.push(description);
        }
        if (this.showOverdueAmount) {
            describedByIds.push(amount);
        }
        this.describedByIds = describedByIds.join(' ') || null;
    }
}
LoanSummaryOverdueBannerComponent._id = 0;
/** @nocollapse */ LoanSummaryOverdueBannerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryOverdueBannerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanSummaryOverdueBannerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryOverdueBannerComponent, selector: "bb-loan-summary-overdue-banner", inputs: { overdueAmount: "overdueAmount", overdueDate: "overdueDate", currencyCode: "currencyCode", showPayNowButton: "showPayNowButton" }, outputs: { payNow: "payNow" }, usesOnChanges: true, ngImport: i0, template: "<div\n  class=\"alert bb-loans-summary-overdue-alert bb-block bb-block--lg bb-block--md-md-down\"\n  [class.bb-loans-summary-overdue-alert--with-amount]=\"showOverdueAmount\"\n  role=\"alert\"\n  data-role=\"loan-overdue-banner\"\n  [attr.aria-describedby]=\"describedByIds\"\n  [attr.aria-labelledby]=\"elementIds.title\"\n>\n  <div class=\"bb-loans-summary-overdue-alert__body alert-body bb-stack bb-stack--wrap\">\n    <bb-icon-ui class=\"bb-stack__item bb-stack__item--align-top\" name=\"error-outline\" color=\"danger\"></bb-icon-ui>\n    <div class=\"alert-content bb-stack__item bb-stack__item--align-top bb-stack__item--fill\">\n      <strong\n        [id]=\"elementIds.title\"\n        class=\"alert-heading\"\n        i18n=\"Loan summary overdue banner title@@loans.loan-summary.overdue-banner.title\"\n      >\n        Overdue\n      </strong>\n      <div\n        *ngIf=\"showOverdueDate\"\n        [id]=\"elementIds.description\"\n        class=\"alert-description\"\n        data-role=\"loan-overdue-banner__payment-date\"\n        i18n=\"Loan summary overdue banner payment date@@loans.loan-summary.overdue-banner.payment-date\"\n      >\n        Payments missed since {{ overdueDate | bbDate }}\n      </div>\n      <div\n        *ngIf=\"!overdueDate && !overdueAmount\"\n        [id]=\"elementIds.description\"\n        class=\"alert-description\"\n        data-role=\"loan-overdue-banner__contact-manager\"\n        i18n=\"Loan summary overdue banner contact admin@@loans.loan-summary.overdue-banner.contact-admin\"\n      >\n        Please contact your account manager\n      </div>\n    </div>\n    <ng-container *ngIf=\"overdueAmount && currencyCode\">\n      <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-sm\"></div>\n      <div class=\"bb-stack__item\">\n        <div class=\"bb-stack\">\n          <div class=\"bb-stack__item bb-highlight\" [id]=\"elementIds.amount\">\n            <span\n              class=\"sr-only\"\n              i18n=\"Loan summary overdue banner a11y amount title@@loans.loan-summary.overdue-banner.a11y.amount-title\"\n            >\n              Overdue amount:\n            </span>\n            <bb-amount-ui\n              data-role=\"loan-overdue-banner__amount\"\n              [amount]=\"overdueAmount\"\n              [currency]=\"currencyCode\"\n              [mapCurrency]=\"false\"\n            ></bb-amount-ui>\n          </div>\n          <div class=\"bb-stack__item bb-stack__item--no-shrink\">\n            <button\n              *ngIf=\"showPayNowButton\"\n              (click)=\"payNow.emit()\"\n              class=\"bb-loans-summary-overdue-alert__button\"\n              bbButton\n              color=\"primary\"\n              data-role=\"loan-overdue-banner__pay-btn\"\n            >\n              <span\n                class=\"bb-d-md-inline-flex bb-d-none\"\n                i18n=\"\n                  Loan summary overdue banner pay now button text@@loans.loan-summary.overdue-banner.button.pay-now.text\"\n              >\n                Pay Now\n              </span>\n              <bb-icon-ui name=\"call-received\" class=\"bb-d-md-none bb-d-inline-flex\"></bb-icon-ui>\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n", components: [{ type: i1$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "bbDate": i3.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryOverdueBannerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-summary-overdue-banner',
                    templateUrl: './loan-summary-overdue-banner.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { overdueAmount: [{
                type: Input
            }], overdueDate: [{
                type: Input
            }], currencyCode: [{
                type: Input
            }], showPayNowButton: [{
                type: Input
            }], payNow: [{
                type: Output
            }] } });

class LoanSummaryOverdueBannerModule {
}
/** @nocollapse */ LoanSummaryOverdueBannerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryOverdueBannerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanSummaryOverdueBannerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryOverdueBannerModule, declarations: [LoanSummaryOverdueBannerComponent], imports: [CommonModule, ButtonModule, IconModule, AmountModule, BbDatePipeModule], exports: [LoanSummaryOverdueBannerComponent] });
/** @nocollapse */ LoanSummaryOverdueBannerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryOverdueBannerModule, imports: [[CommonModule, ButtonModule, IconModule, AmountModule, BbDatePipeModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryOverdueBannerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanSummaryOverdueBannerComponent],
                    imports: [CommonModule, ButtonModule, IconModule, AmountModule, BbDatePipeModule],
                    exports: [LoanSummaryOverdueBannerComponent],
                }]
        }] });

class LoanSummaryAmountItemComponent {
    constructor() {
        /**
         * Whether amount will be as percentage
         */
        this.showPercent = false;
    }
}
/** @nocollapse */ LoanSummaryAmountItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryAmountItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanSummaryAmountItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryAmountItemComponent, selector: "bb-loan-summary-amount-item", inputs: { title: "title", amount: "amount", currency: "currency", isCurrencySymbolUsed: "isCurrencySymbolUsed", showPercent: "showPercent", titleClasses: "titleClasses", amountClasses: "amountClasses", totalAmount: "totalAmount", showLabel: "showLabel" }, ngImport: i0, template: "<div\n  *ngIf=\"amount && (currency || showPercent)\"\n  class=\"bb-loans-summary-amount-item\"\n  data-role=\"loan-summary-amount-item__wrapper\"\n>\n  <div\n    class=\"bb-subtitle bb-loans-summary-amount-item__title text-capitalize\"\n    [ngClass]=\"titleClasses\"\n    data-role=\"loan-summary-amount-item__title\"\n  >\n    {{ title }}\n  </div>\n  <div class=\"bb-text-bold bb-heading-3\" [ngClass]=\"amountClasses\" data-role=\"loan-summary-amount-item__amount-wrapper\">\n    <bb-amount-ui\n      [amount]=\"amount\"\n      [currency]=\"currency || ''\"\n      [mapCurrency]=\"!!isCurrencySymbolUsed\"\n      [showPercent]=\"showPercent\"\n    ></bb-amount-ui>\n\n    <span *ngIf=\"totalAmount && showLabel\" class=\"bb-loans-summary-amount-item__label bb-subtitle\">\n      of\n      <bb-amount-ui\n        [amount]=\"totalAmount\"\n        [currency]=\"currency || ''\"\n        [mapCurrency]=\"!!isCurrencySymbolUsed\"\n        [showPercent]=\"showPercent\"\n      ></bb-amount-ui>\n    </span>\n  </div>\n  <span class=\"sr-only\">,</span>\n</div>\n", components: [{ type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryAmountItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-summary-amount-item',
                    templateUrl: './loan-summary-amount-item.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { title: [{
                type: Input
            }], amount: [{
                type: Input
            }], currency: [{
                type: Input
            }], isCurrencySymbolUsed: [{
                type: Input
            }], showPercent: [{
                type: Input
            }], titleClasses: [{
                type: Input
            }], amountClasses: [{
                type: Input
            }], totalAmount: [{
                type: Input
            }], showLabel: [{
                type: Input
            }] } });

class LoanSummaryProgressBarComponent extends LoanConfigBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * Percentage value for progress bar
         */
        this.progressPercentage = NaN;
        /**
         * Progress type for progress bar
         */
        this.progressType = 'primary';
        /**
         * Flag represents progress bar visibility
         */
        this.isProgressBarVisible = false;
    }
    ngOnChanges() {
        this.updateProperties();
    }
    // TODO move to config logic
    updateProperties() {
        this.activeAmount = this.loan[this.dataConfig.activeAmount.fieldKey];
        this.totalAmount = this.loan[this.dataConfig.totalAmount.fieldKey];
        if (this.activeAmount && this.totalAmount) {
            const totalAmount = new BigNumber(this.totalAmount);
            const activeAmount = new BigNumber(this.activeAmount);
            this.progressPercentage =
                totalAmount.isLessThanOrEqualTo(0) || activeAmount.isLessThan(0)
                    ? NaN
                    : Math.floor(activeAmount.div(totalAmount).toNumber() * 100);
        }
        else {
            this.progressPercentage = NaN;
        }
        this.progressType = this.progressPercentage >= 100 ? 'success' : 'primary';
        const showProgressBar = this.dataConfig.showProgressBar ? this.dataConfig.showProgressBar(this.loan) : true;
        this.isProgressBarVisible = !isNaN(this.progressPercentage) && showProgressBar;
    }
}
/** @nocollapse */ LoanSummaryProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryProgressBarComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanSummaryProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryProgressBarComponent, selector: "bb-loan-summary-progress-bar", usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div class=\"bb-loans-summary-progress\">\n  <div class=\"row no-gutters bb-block bb-block--sm bb-loans-summary-progress__legend-wrapper\">\n    <div class=\"col-12 col-sm-9\">\n      <div class=\"row no-gutters\" *ngIf=\"loan.currencyCode as currencyCode\">\n        <div *ngIf=\"activeAmount\" class=\"col-12 col-md-6 bb-block bb-block--md\">\n          <div\n            [ngClass]=\"{\n              'bb-loans-summary-progress__legend-item': isProgressBarVisible,\n              'bb-loans-summary-progress__legend-item--success': isProgressBarVisible && progressType === 'success',\n              'bb-loans-summary-progress__legend-item--active': isProgressBarVisible && progressType === 'primary'\n            }\"\n            data-role=\"loan-summary-progress__active-wrapper\"\n          >\n            <bb-loan-summary-amount-item\n              [amount]=\"activeAmount\"\n              [currency]=\"currencyCode\"\n              [title]=\"dataConfig.activeAmount.title\"\n              titleClasses=\"bb-text-support\"\n              data-role=\"loan-summary-progress__active\"\n            >\n            </bb-loan-summary-amount-item>\n          </div>\n        </div>\n        <div *ngIf=\"totalAmount\" class=\"col-12 col-md-6 bb-block bb-block--md\">\n          <div\n            [class.bb-loans-summary-progress__legend-item]=\"isProgressBarVisible\"\n            data-role=\"loan-summary-progress__total-wrapper\"\n          >\n            <bb-loan-summary-amount-item\n              [amount]=\"totalAmount\"\n              [currency]=\"currencyCode\"\n              [title]=\"dataConfig.totalAmount.title\"\n              titleClasses=\"bb-text-support\"\n              data-role=\"loan-summary-progress__total\"\n            >\n            </bb-loan-summary-amount-item>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-sm-3\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <div *ngIf=\"isProgressBarVisible && loan.currencyCode\" class=\"row no-gutters bb-block bb-block--md\">\n    <div class=\"col-12\">\n      <bb-progressbar-ui\n        class=\"bb-loans-summary-progress__progressbar\"\n        [animated]=\"true\"\n        [max]=\"100\"\n        [value]=\"progressPercentage\"\n        [type]=\"progressType\"\n        data-role=\"loan-summary-progress__progressbar\"\n      >\n      </bb-progressbar-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: LoanSummaryAmountItemComponent, selector: "bb-loan-summary-amount-item", inputs: ["title", "amount", "currency", "isCurrencySymbolUsed", "showPercent", "titleClasses", "amountClasses", "totalAmount", "showLabel"] }, { type: i2$4.ProgressbarComponent, selector: "bb-progressbar-ui", inputs: ["height", "max", "showValue", "striped", "animated", "type", "value"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryProgressBarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-summary-progress-bar',
                    templateUrl: './loan-summary-progress-bar.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }] });

class LoanSummaryAmountItemModule {
}
/** @nocollapse */ LoanSummaryAmountItemModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryAmountItemModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanSummaryAmountItemModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryAmountItemModule, declarations: [LoanSummaryAmountItemComponent], imports: [CommonModule, AmountModule], exports: [LoanSummaryAmountItemComponent] });
/** @nocollapse */ LoanSummaryAmountItemModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryAmountItemModule, imports: [[CommonModule, AmountModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryAmountItemModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanSummaryAmountItemComponent],
                    imports: [CommonModule, AmountModule],
                    exports: [LoanSummaryAmountItemComponent],
                }]
        }] });

class LoanSummaryProgressBarModule {
}
/** @nocollapse */ LoanSummaryProgressBarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryProgressBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanSummaryProgressBarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryProgressBarModule, declarations: [LoanSummaryProgressBarComponent], imports: [CommonModule, LoanSummaryAmountItemModule, ProgressbarModule], exports: [LoanSummaryProgressBarComponent] });
/** @nocollapse */ LoanSummaryProgressBarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryProgressBarModule, imports: [[CommonModule, LoanSummaryAmountItemModule, ProgressbarModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryProgressBarModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanSummaryProgressBarComponent],
                    imports: [CommonModule, LoanSummaryAmountItemModule, ProgressbarModule],
                    exports: [LoanSummaryProgressBarComponent],
                }]
        }] });

var LoanSummaryFormulaViewType;
(function (LoanSummaryFormulaViewType) {
    LoanSummaryFormulaViewType["Equation"] = "Equation";
    LoanSummaryFormulaViewType["CollapsibleList"] = "CollapsibleList";
    LoanSummaryFormulaViewType["OnlyTotal"] = "OnlyTotal";
    LoanSummaryFormulaViewType["AmountsInRows"] = "AmountsInRows";
    LoanSummaryFormulaViewType["AmountsInColumns"] = "AmountsInColumns";
})(LoanSummaryFormulaViewType || (LoanSummaryFormulaViewType = {}));

class LoanSummaryFormulaComponent extends LoanConfigBaseComponent {
    constructor(mediaQueryService) {
        super();
        this.mediaQueryService = mediaQueryService;
        /**
         * Loan formula view types
         */
        this.viewTypes = LoanSummaryFormulaViewType;
        /**
         * Flag represents the tablet screen resolution
         */
        this.isTabletResolution$ = this.mediaQueryService.isMediaBreakpointMatches('max-width', 'lg');
    }
    /**
     * @internal
     */
    ngOnChanges() {
        this.formulaData = this.dataConfig.call(undefined, this.loan);
    }
}
/** @nocollapse */ LoanSummaryFormulaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryFormulaComponent, deps: [{ token: i1$5.MediaQueryService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanSummaryFormulaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryFormulaComponent, selector: "bb-loan-summary-formula", usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<ng-container *ngIf=\"formulaData.shouldShow\">\n  <bb-collapsible-card-ui\n    *ngIf=\"\n      formulaData.viewType === viewTypes.CollapsibleList ||\n        (formulaData.viewType === viewTypes.Equation && (isTabletResolution$ | async));\n      else staticCard\n    \"\n    [highlight]=\"true\"\n    [shadow]=\"false\"\n    [aria-label]=\"null\"\n    size=\"sm\"\n    data-role=\"loan-summary-formula\"\n    class=\"bb-loans-summary-formula bb-loans-summary-formula--list\"\n  >\n    <div bbCollapsibleTitle>\n      <ng-container *ngTemplateOutlet=\"total\"></ng-container>\n    </div>\n    <div bbCollapsibleBody>\n      <ng-container *ngTemplateOutlet=\"amounts\"></ng-container>\n    </div>\n  </bb-collapsible-card-ui>\n</ng-container>\n\n<ng-template #staticCard>\n  <div\n    class=\"bb-card bb-card--shadowless bb-card--highlight bb-card--sm bb-loans-summary-formula\"\n    [class.bb-loans-summary-formula--list]=\"formulaData.viewType === viewTypes.AmountsInRows\"\n    data-role=\"loan-summary-formula\"\n  >\n    <div class=\"bb-card__body row no-gutters\">\n      <ng-container [ngSwitch]=\"formulaData.viewType\">\n        <ng-container *ngSwitchCase=\"viewTypes.OnlyTotal\">\n          <ng-container *ngTemplateOutlet=\"total\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngSwitchCase=\"viewTypes.AmountsInColumns\">\n          <ng-container *ngTemplateOutlet=\"amounts; context: { classes: 'col-12 col-sm-6 col-lg-3' }\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngSwitchCase=\"viewTypes.AmountsInRows\">\n          <div class=\"col-12\">\n            <ng-container *ngTemplateOutlet=\"amounts\"></ng-container>\n          </div>\n        </ng-container>\n\n        <ng-container *ngSwitchCase=\"viewTypes.Equation\">\n          <div class=\"col-12 bb-stack bb-stack--wrap bb-loans-summary-formula__amounts-wrapper\">\n            <ng-container\n              *ngTemplateOutlet=\"total; context: { classes: 'bb-stack__item', showIcon: true }\"\n            ></ng-container>\n            <div class=\"bb-stack__break bb-stack__break--xl-down d-xl-none\"></div>\n            <ng-container\n              *ngTemplateOutlet=\"amounts; context: { classes: 'bb-stack__item', showIcon: true }\"\n            ></ng-container>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #total let-classes=\"classes\" let-showIcon=\"showIcon\">\n  <bb-loan-summary-amount-item\n    data-role=\"loan-summary-formula__total-amount\"\n    [amount]=\"formulaData.totalAmount.value\"\n    [title]=\"formulaData.totalAmount.title\"\n    [currency]=\"loan.currencyCode\"\n    amountClasses=\"bb-highlight\"\n    [ngClass]=\"classes\"\n  >\n  </bb-loan-summary-amount-item>\n  <bb-icon-ui\n    *ngIf=\"showIcon\"\n    [ngClass]=\"classes\"\n    name=\"drag-n-drop\"\n    aria-label=\"Equal\"\n    i18n-aria-label=\"Loan summary formula equal icon aria label@@loans.loan-summary-formula.equal-icon.aria-label\"\n  ></bb-icon-ui>\n</ng-template>\n\n<ng-template #amounts let-classes=\"classes\" let-showIcon=\"showIcon\">\n  <ng-container *ngFor=\"let amount of formulaData.amounts; let last = last\">\n    <div [ngClass]=\"classes\" data-role=\"loan-summary-formula__amount-wrapper\">\n      <bb-loan-summary-amount-item\n        data-role=\"loan-summary-formula__amount\"\n        [amount]=\"amount.value\"\n        [currency]=\"loan.currencyCode\"\n        [title]=\"amount.title\"\n      ></bb-loan-summary-amount-item>\n    </div>\n    <bb-icon-ui\n      *ngIf=\"showIcon && !last\"\n      [ngClass]=\"classes\"\n      name=\"add\"\n      aria-label=\"Plus\"\n      i18n-aria-label=\"Loan summary formula plus icon aria label@@loans.loan-summary-formula.plus-icon.aria-label\"\n    ></bb-icon-ui>\n  </ng-container>\n</ng-template>\n", components: [{ type: i2$5.CollapsibleCardComponent, selector: "bb-collapsible-card-ui", inputs: ["isOpen", "ariaLabelForIcon", "aria-label", "hasChevron", "highlight", "shadow", "size"], outputs: ["isOpenChange"] }, { type: LoanSummaryAmountItemComponent, selector: "bb-loan-summary-amount-item", inputs: ["title", "amount", "currency", "isCurrencySymbolUsed", "showPercent", "titleClasses", "amountClasses", "totalAmount", "showLabel"] }, { type: i1$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryFormulaComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-summary-formula',
                    templateUrl: './loan-summary-formula.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1$5.MediaQueryService }]; } });

class LoanSummaryFormulaModule {
}
/** @nocollapse */ LoanSummaryFormulaModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryFormulaModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanSummaryFormulaModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryFormulaModule, declarations: [LoanSummaryFormulaComponent], imports: [CommonModule, LoanSummaryAmountItemModule, CollapsibleCardModule, IconModule, MediaQueryModule], exports: [LoanSummaryFormulaComponent] });
/** @nocollapse */ LoanSummaryFormulaModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryFormulaModule, imports: [[CommonModule, LoanSummaryAmountItemModule, CollapsibleCardModule, IconModule, MediaQueryModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryFormulaModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanSummaryFormulaComponent],
                    imports: [CommonModule, LoanSummaryAmountItemModule, CollapsibleCardModule, IconModule, MediaQueryModule],
                    exports: [LoanSummaryFormulaComponent],
                }]
        }] });

const editAliasMenuItem = {
    key: 'editAlias',
    label: $localize `:Loan summary edit alias menu item@@loans.loan-summary.menu-item.edit-alias:Edit alias`,
};
const payDownMenuItem = {
    key: 'payDown',
    label: $localize `:Loan summary pay down menu item@@loans.loan-summary.menu-item.pay-down:Pay down`,
};
const drawAmountMenuItem = {
    key: 'drawAmount',
    label: $localize `:Loan summary draw amount menu item@@loans.loan-summary.menu-item.draw-amount:Draw amount`,
};

const aliasDisplayLevel = {
    user: $localize `:Loan summary alias hint for user@@loans.loan-summary-edit-alias.user.hint:This is only visible to you`,
    account: $localize `:Loan summary alias hint for account@@loans.loan-summary-edit-alias.account.hint:This is visible to everyone with access to this account`,
};

class LoanSummaryEditAliasConfirmModalComponent {
    constructor() {
        /**
         * Emits on closing / dismissing the modal
         */
        this.closeModal = new EventEmitter();
        /**
         * Emits on modal confirm
         */
        this.confirmModal = new EventEmitter();
        /**
         * Modal options
         */
        this.modalOptions = {
            backdrop: 'static',
            keyboard: true,
            centered: true,
        };
    }
}
/** @nocollapse */ LoanSummaryEditAliasConfirmModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasConfirmModalComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanSummaryEditAliasConfirmModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryEditAliasConfirmModalComponent, selector: "bb-loan-summary-edit-alias-confirm-modal", inputs: { isOpen: "isOpen" }, outputs: { closeModal: "closeModal", confirmModal: "confirmModal" }, ngImport: i0, template: "<bb-modal-ui\n  *ngIf=\"isOpen\"\n  [modalOptions]=\"modalOptions\"\n  [isOpen]=\"true\"\n  (cancel)=\"closeModal.emit()\"\n  (confirm)=\"confirmModal.emit()\"\n  data-role=\"bb-loan-summary-edit-alias-confirm-modal\"\n>\n  <bb-modal-header-ui\n    title=\"This alias will be visible to users who have access to this account\"\n    i18n-title=\"Loan summary edit alias confirm modal title@@loans.loan-summary-edit-alias.confirm-modal.title\"\n  >\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <ng-container i18n=\"Loan summary edit alias confirm modal body@@loans.loan-summary-edit-alias.confirm-modal.body\">\n        Are you sure to change the account alias?\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui\n    confirmText=\"Continue\"\n    i18n-confirmText=\"\n      Loan summary edit alias confirm modal confirm button\n      text@@loans.loan-summary-edit-alias.confirm-modal.confirm-button\"\n  ></bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i11.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i11.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i11.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i11.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasConfirmModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-summary-edit-alias-confirm-modal',
                    templateUrl: './loan-summary-edit-alias-confirm-modal.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { isOpen: [{
                type: Input
            }], closeModal: [{
                type: Output
            }], confirmModal: [{
                type: Output
            }] } });

class LoanSummaryEditAliasComponent {
    constructor(accountAliasDisplayingLevel) {
        this.accountAliasDisplayingLevel = accountAliasDisplayingLevel;
        this._editState = InputInlineEditState.IDLE;
        /**
         * Max length for alias
         */
        this.aliasMaxLength = 50;
        /**
         * Emit on alias edit state changes
         */
        this.editStateChange = new EventEmitter();
        /**
         * Emits on alias changes
         */
        this.updateAlias = new EventEmitter();
        /**
         * Emits on canceling update for alias
         */
        this.cancelAliasUpdate = new EventEmitter();
        /**
         *  Flag represents modal open state
         */
        this.isOpen = false;
        this.accountAliasDisplayingLevel = accountAliasDisplayingLevel || AccountAliasDisplayingLevel.USER;
        this.aliasHint = this.getAliasHint();
    }
    /**
     * Alias inline edit state
     *
     * @param value
     */
    set editState(value) {
        this._editState = value;
    }
    get editState() {
        return this._editState;
    }
    onAcceptAlias(alias) {
        if ([this.newAlias, this.alias].includes(alias)) {
            this.onEditStateChange(InputInlineEditState.IDLE);
            return;
        }
        if (this.accountAliasDisplayingLevel === AccountAliasDisplayingLevel.ACCOUNT) {
            this.newAlias = alias;
            this.isOpen = true;
        }
        else {
            this.updateAlias.emit(alias);
        }
    }
    onConfirmModal() {
        this.isOpen = false;
        this.updateAlias.emit(this.newAlias);
    }
    onCloseModal() {
        this.isOpen = false;
        this.onEditStateChange(InputInlineEditState.IDLE);
    }
    onEditStateChange(state) {
        this._editState = state;
        this.editStateChange.emit(state);
    }
    getAliasHint() {
        switch (this.accountAliasDisplayingLevel) {
            case AccountAliasDisplayingLevel.USER: {
                return aliasDisplayLevel.user;
            }
            case AccountAliasDisplayingLevel.ACCOUNT: {
                return aliasDisplayLevel.account;
            }
        }
    }
}
/** @nocollapse */ LoanSummaryEditAliasComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasComponent, deps: [{ token: ACCOUNT_ALIAS_DISPLAYING_LEVEL, optional: true }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanSummaryEditAliasComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryEditAliasComponent, selector: "bb-loan-summary-edit-alias", inputs: { alias: "alias", aliasMaxLength: "aliasMaxLength", showEditButton: "showEditButton", editState: "editState" }, outputs: { editStateChange: "editStateChange", updateAlias: "updateAlias", cancelAliasUpdate: "cancelAliasUpdate" }, ngImport: i0, template: "<bb-input-inline-edit-ui\n  [inputText]=\"alias\"\n  [maxLength]=\"aliasMaxLength\"\n  [canEdit]=\"showEditButton\"\n  [hint]=\"aliasHint\"\n  [inputInlineTemplate]=\"customTemplate\"\n  [hasLoadingState]=\"true\"\n  [state]=\"editState\"\n  (accept)=\"onAcceptAlias($event)\"\n  (stateChange)=\"onEditStateChange($event)\"\n  (cancel)=\"cancelAliasUpdate.emit()\"\n  data-role=\"bb-loan-summary-edit-alias__inline-edit\"\n>\n</bb-input-inline-edit-ui>\n\n<ng-template let-text=\"inputText\" #customTemplate>\n  <bb-loan-item-name\n    [headingLevel]=\"3\"\n    [loanName]=\"text\"\n    class=\"bb-stack__item bb-stack__item--spacing-sm\"\n  ></bb-loan-item-name>\n</ng-template>\n\n<bb-loan-summary-edit-alias-confirm-modal\n  data-role=\"bb-loan-summary-edit-alias__confirm-modal\"\n  [isOpen]=\"isOpen\"\n  (confirmModal)=\"onConfirmModal()\"\n  (closeModal)=\"onCloseModal()\"\n></bb-loan-summary-edit-alias-confirm-modal>\n", components: [{ type: i1$6.InputInlineEditComponent, selector: "bb-input-inline-edit-ui", inputs: ["state", "canEdit", "hasLoadingState", "inputInlineTemplate", "inputText", "maxLength", "minLength", "maxValue", "minValue", "autofocus", "ariaLabelAccept", "ariaLabelCancel", "ariaLabelEdit", "tooltipAccept", "tooltipCancel", "tooltipEdit", "autocomplete", "pattern", "hint"], outputs: ["stateChange", "cancel", "accept"] }, { type: LoanItemNameComponent, selector: "bb-loan-item-name", inputs: ["loanName", "headingLevel"] }, { type: LoanSummaryEditAliasConfirmModalComponent, selector: "bb-loan-summary-edit-alias-confirm-modal", inputs: ["isOpen"], outputs: ["closeModal", "confirmModal"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-summary-edit-alias',
                    templateUrl: './loan-summary-edit-alias.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i4.AccountAliasDisplayingLevel, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [ACCOUNT_ALIAS_DISPLAYING_LEVEL]
                }] }]; }, propDecorators: { alias: [{
                type: Input
            }], aliasMaxLength: [{
                type: Input
            }], showEditButton: [{
                type: Input
            }], editState: [{
                type: Input
            }], editStateChange: [{
                type: Output
            }], updateAlias: [{
                type: Output
            }], cancelAliasUpdate: [{
                type: Output
            }] } });

class LoanItemMenuComponent {
    constructor() {
        /**
         * placement of the dropdown
         */
        this.position = 'bottom-right';
        /**
         * Emit on menu item select
         */
        this.itemSelect = new EventEmitter();
    }
}
/** @nocollapse */ LoanItemMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemMenuComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanItemMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanItemMenuComponent, selector: "bb-loan-item-menu", inputs: { items: "items", dropDownButtonLabel: "dropDownButtonLabel", position: "position" }, outputs: { itemSelect: "itemSelect" }, ngImport: i0, template: "<bb-dropdown-menu-ui\n  icon=\"ellipsis-h\"\n  iconSize=\"md\"\n  buttonSize=\"md\"\n  btnColor=\"link-dark\"\n  [btnCircle]=\"true\"\n  [autoClose]=\"true\"\n  [dropDownButtonLabel]=\"dropDownButtonLabel\"\n  [position]=\"position\"\n>\n  <ng-template bbDropdownMenuItem>\n    <button\n      *ngFor=\"let item of items\"\n      role=\"menuitem\"\n      class=\"dropdown-item bb-loans-list-menu-item\"\n      data-role=\"bb-loans-list-item-menu__item\"\n      (click)=\"itemSelect.emit(item.key)\"\n    >\n      {{ item.label }}\n    </button>\n  </ng-template>\n</bb-dropdown-menu-ui>\n", components: [{ type: i1$7.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }], directives: [{ type: i1$7.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemMenuComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-item-menu',
                    templateUrl: './loan-item-menu.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { items: [{
                type: Input
            }], dropDownButtonLabel: [{
                type: Input
            }], position: [{
                type: Input
            }], itemSelect: [{
                type: Output
            }] } });

class LoanSummaryContainerComponent extends LoanConfigBaseComponent {
    constructor(mediaQueryService) {
        super();
        this.mediaQueryService = mediaQueryService;
        /**
         * Indicator to show/hide `payDown` button
         *
         * @default true
         */
        this.showPayDownButton = true;
        /**
         * Indicator to show/hide `payDown` button
         *
         * @default true
         */
        this.showDrawAmountButton = true;
        /**
         * Indicator to show/hide `edit alias` button
         *
         * @default true
         */
        this.showEditAliasButton = true;
        /**
         * Draw amount event emitter
         */
        this.drawAmount = new EventEmitter();
        /**
         * Pay down event emitter
         */
        this.payDown = new EventEmitter();
        /**
         * Emits on accepting new alias for save
         */
        this.updateAlias = new EventEmitter();
        /**
         * Emits in canceling current alias update
         */
        this.cancelAliasUpdate = new EventEmitter();
        /**
         * Flag represents the screen resolution wider that `md` breakpoint
         */
        this.isWiderThanMobile$ = this.mediaQueryService.isMediaBreakpointMatches('min-width', 'md');
    }
    /**
     * Represents alias update state
     */
    set aliasEditState(value) {
        this._aliasEditState = value;
    }
    get aliasEditState() {
        return this._aliasEditState;
    }
    /**
     * Flag represents IDLE state for alias editing
     */
    get isAliasEditIdleState() {
        return this._aliasEditState === InputInlineEditState.IDLE;
    }
    /**
     * @internal
     */
    ngOnChanges() {
        this.showOverdueBanner = isLoanOverdue(this.loan);
        this.loanAlias = getLoanAlias(this.loan);
        this.menuItems = this.getMenuItems();
        this.loanIconName = this.dataConfig.icons[this.loan.viewType];
    }
    /**
     * Select an item for the context menu
     *
     * @param itemKey
     */
    onSelectMenuItem(itemKey) {
        switch (itemKey) {
            case 'editAlias':
                this._aliasEditState = InputInlineEditState.EDITING;
                break;
            case 'payDown':
                this.payDown.emit();
                break;
            case 'drawAmount':
                this.drawAmount.emit();
        }
    }
    getMenuItems() {
        const menuItems = [];
        if (this.showPayDownButton) {
            menuItems.push(payDownMenuItem);
        }
        if (this.showDrawAmountButton) {
            menuItems.push(drawAmountMenuItem);
        }
        if (this.showEditAliasButton) {
            menuItems.push(editAliasMenuItem);
        }
        return menuItems;
    }
}
/** @nocollapse */ LoanSummaryContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryContainerComponent, deps: [{ token: i1$5.MediaQueryService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanSummaryContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryContainerComponent, selector: "bb-loan-summary-container", inputs: { showPayDownButton: "showPayDownButton", showDrawAmountButton: "showDrawAmountButton", showEditAliasButton: "showEditAliasButton", aliasEditState: "aliasEditState" }, outputs: { drawAmount: "drawAmount", payDown: "payDown", updateAlias: "updateAlias", cancelAliasUpdate: "cancelAliasUpdate" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div class=\"bb-stack\">\n  <bb-icon-ui\n    *ngIf=\"isAliasEditIdleState\"\n    [name]=\"loanIconName\"\n    class=\"bb-stack__item bb-stack__item--align-top bb-d-lg-inline-flex bb-d-none\"\n    data-role=\"loans-summary__loan-icon\"\n    backgroundType=\"square\"\n    color=\"secondary\"\n    size=\"lg\"\n  ></bb-icon-ui>\n  <div class=\"bb-stack__item bb-stack__item--fill\">\n    <div class=\"bb-loans-summary-alias-wrapper\" [class.bb-loans-summary-alias-wrapper--editing]=\"!isAliasEditIdleState\">\n      <bb-loan-summary-edit-alias\n        [alias]=\"loanAlias\"\n        [showEditButton]=\"showEditAliasButton && (isWiderThanMobile$ | async)!\"\n        [(editState)]=\"aliasEditState\"\n        (updateAlias)=\"updateAlias.emit($event)\"\n        (cancelAliasUpdate)=\"cancelAliasUpdate.emit()\"\n        data-role=\"loans-summary__edit-alias\"\n      >\n      </bb-loan-summary-edit-alias>\n    </div>\n    <div *ngIf=\"isAliasEditIdleState\">\n      <bb-loan-item-type [loanType]=\"loan.loanTypeAlias\"></bb-loan-item-type>\n      <bb-loan-item-status [status]=\"loan.loanStatus\"></bb-loan-item-status>\n    </div>\n  </div>\n  <div class=\"bb-stack__item bb-stack__item--no-shrink bb-stack__item--align-top\">\n    <ng-container *ngIf=\"isWiderThanMobile$ | async; else contextMenuRef\">\n      <button\n        *ngIf=\"showPayDownButton\"\n        (click)=\"payDown.emit()\"\n        class=\"bb-stack__item bb-inline-stack bb-inline-stack--density-sm\"\n        color=\"primary\"\n        bbButton\n        data-role=\"loans-summary__pay-down-btn\"\n      >\n        <bb-icon-ui name=\"call-received\" class=\"bb-inline-stack__item\"></bb-icon-ui>\n        <span\n          class=\"bb-inline-stack__item\"\n          i18n=\"Loan summary pay down button text@@loans.loan-summary.button.pay-down.text\"\n        >\n          Pay Down\n        </span>\n      </button>\n      <button\n        *ngIf=\"showDrawAmountButton\"\n        (click)=\"drawAmount.emit()\"\n        class=\"bb-stack__item bb-inline-stack bb-inline-stack--density-sm\"\n        color=\"secondary\"\n        bbButton\n        data-role=\"loans-summary__draw-amount-btn\"\n      >\n        <bb-icon-ui name=\"savings-accounts\" class=\"bb-inline-stack__item\"></bb-icon-ui>\n        <span\n          class=\"bb-inline-stack__item\"\n          i18n=\"Loan summary draw amount button text@@loans.loan-summary.button.draw-amount.text\"\n        >\n          Draw Amount\n        </span>\n      </button>\n    </ng-container>\n\n    <ng-template #contextMenuRef>\n      <bb-loan-item-menu\n        data-role=\"loans-summary__menu-items\"\n        *ngIf=\"menuItems.length > 0 && isAliasEditIdleState\"\n        [items]=\"menuItems\"\n        (itemSelect)=\"onSelectMenuItem($event)\"\n      ></bb-loan-item-menu>\n    </ng-template>\n  </div>\n</div>\n\n<hr class=\"bb-block bb-block--md\" />\n\n<div class=\"bb-block bb-block--xl\">\n  <bb-loan-item-payment-info [loan]=\"loan\" [dataConfig]=\"dataConfig.paymentInfo\" class=\"bb-subtitle\">\n  </bb-loan-item-payment-info>\n</div>\n\n<bb-loan-summary-overdue-banner\n  *ngIf=\"showOverdueBanner\"\n  [showPayNowButton]=\"false\"\n  [overdueAmount]=\"loan.inArrearsAmount\"\n  [overdueDate]=\"loan.inArrearsDate\"\n  [currencyCode]=\"loan.currencyCode\"\n  (payNow)=\"payDown.emit()\"\n></bb-loan-summary-overdue-banner>\n\n<div class=\"bb-block bb-block--xl\">\n  <bb-loan-summary-progress-bar [loan]=\"loan\" [dataConfig]=\"dataConfig.progressBar\">\n    <div class=\"bb-block bb-block--md bb-text-align-right--sm-up bb-text-align-left\">\n      <bb-loan-summary-amount-item\n        [amount]=\"loan.interestRate\"\n        [showPercent]=\"true\"\n        title=\"Interest rate\"\n        i18n-title=\"Loan summary interest rate title@@loans.loan-summary.interest-rate.title\"\n        titleClasses=\"bb-text-support\"\n      >\n      </bb-loan-summary-amount-item>\n    </div>\n  </bb-loan-summary-progress-bar>\n</div>\n\n<bb-loan-summary-formula [loan]=\"loan\" [dataConfig]=\"dataConfig.formula\"></bb-loan-summary-formula>\n", components: [{ type: i1$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: LoanSummaryEditAliasComponent, selector: "bb-loan-summary-edit-alias", inputs: ["alias", "aliasMaxLength", "showEditButton", "editState"], outputs: ["editStateChange", "updateAlias", "cancelAliasUpdate"] }, { type: LoanItemTypeComponent, selector: "bb-loan-item-type", inputs: ["loanType", "useSubtitleClass"] }, { type: LoanItemStatusComponent, selector: "bb-loan-item-status", inputs: ["status", "itemStatusColorMap"] }, { type: LoanItemMenuComponent, selector: "bb-loan-item-menu", inputs: ["items", "dropDownButtonLabel", "position"], outputs: ["itemSelect"] }, { type: LoanItemPaymentInfoComponent, selector: "bb-loan-item-payment-info" }, { type: LoanSummaryOverdueBannerComponent, selector: "bb-loan-summary-overdue-banner", inputs: ["overdueAmount", "overdueDate", "currencyCode", "showPayNowButton"], outputs: ["payNow"] }, { type: LoanSummaryProgressBarComponent, selector: "bb-loan-summary-progress-bar" }, { type: LoanSummaryAmountItemComponent, selector: "bb-loan-summary-amount-item", inputs: ["title", "amount", "currency", "isCurrencySymbolUsed", "showPercent", "titleClasses", "amountClasses", "totalAmount", "showLabel"] }, { type: LoanSummaryFormulaComponent, selector: "bb-loan-summary-formula" }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-summary-container',
                    templateUrl: './loan-summary-container.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1$5.MediaQueryService }]; }, propDecorators: { showPayDownButton: [{
                type: Input
            }], showDrawAmountButton: [{
                type: Input
            }], showEditAliasButton: [{
                type: Input
            }], aliasEditState: [{
                type: Input
            }], drawAmount: [{
                type: Output
            }], payDown: [{
                type: Output
            }], updateAlias: [{
                type: Output
            }], cancelAliasUpdate: [{
                type: Output
            }] } });

class LoanSummaryEditAliasConfirmModalModule {
}
/** @nocollapse */ LoanSummaryEditAliasConfirmModalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasConfirmModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanSummaryEditAliasConfirmModalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasConfirmModalModule, declarations: [LoanSummaryEditAliasConfirmModalComponent], imports: [CommonModule, ModalModule], exports: [LoanSummaryEditAliasConfirmModalComponent] });
/** @nocollapse */ LoanSummaryEditAliasConfirmModalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasConfirmModalModule, imports: [[CommonModule, ModalModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasConfirmModalModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanSummaryEditAliasConfirmModalComponent],
                    exports: [LoanSummaryEditAliasConfirmModalComponent],
                    imports: [CommonModule, ModalModule],
                }]
        }] });

class LoanSummaryEditAliasModule {
}
/** @nocollapse */ LoanSummaryEditAliasModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanSummaryEditAliasModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasModule, declarations: [LoanSummaryEditAliasComponent], imports: [CommonModule, InputInlineEditModule, LoanItemNameModule, LoanSummaryEditAliasConfirmModalModule], exports: [LoanSummaryEditAliasComponent] });
/** @nocollapse */ LoanSummaryEditAliasModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasModule, imports: [[CommonModule, InputInlineEditModule, LoanItemNameModule, LoanSummaryEditAliasConfirmModalModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanSummaryEditAliasComponent],
                    imports: [CommonModule, InputInlineEditModule, LoanItemNameModule, LoanSummaryEditAliasConfirmModalModule],
                    exports: [LoanSummaryEditAliasComponent],
                }]
        }] });

class LoanItemMenuModule {
}
/** @nocollapse */ LoanItemMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanItemMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemMenuModule, declarations: [LoanItemMenuComponent], imports: [CommonModule, DropdownMenuModule], exports: [LoanItemMenuComponent] });
/** @nocollapse */ LoanItemMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemMenuModule, imports: [[CommonModule, DropdownMenuModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanItemMenuModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanItemMenuComponent],
                    imports: [CommonModule, DropdownMenuModule],
                    exports: [LoanItemMenuComponent],
                }]
        }] });

class LoanSummaryContainerModule {
}
/** @nocollapse */ LoanSummaryContainerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryContainerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanSummaryContainerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryContainerModule, declarations: [LoanSummaryContainerComponent], imports: [CommonModule,
        IconModule,
        ButtonModule,
        LoanItemNameModule,
        LoanItemTypeModule,
        LoanItemStatusModule,
        LoanSummaryFormulaModule,
        LoanItemPaymentInfoModule,
        LoanSummaryAmountItemModule,
        LoanSummaryOverdueBannerModule,
        LoanSummaryProgressBarModule,
        LoanSummaryEditAliasModule,
        LoanItemMenuModule], exports: [LoanSummaryContainerComponent] });
/** @nocollapse */ LoanSummaryContainerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryContainerModule, imports: [[
            CommonModule,
            IconModule,
            ButtonModule,
            LoanItemNameModule,
            LoanItemTypeModule,
            LoanItemStatusModule,
            LoanSummaryFormulaModule,
            LoanItemPaymentInfoModule,
            LoanSummaryAmountItemModule,
            LoanSummaryOverdueBannerModule,
            LoanSummaryProgressBarModule,
            LoanSummaryEditAliasModule,
            LoanItemMenuModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryContainerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanSummaryContainerComponent],
                    imports: [
                        CommonModule,
                        IconModule,
                        ButtonModule,
                        LoanItemNameModule,
                        LoanItemTypeModule,
                        LoanItemStatusModule,
                        LoanSummaryFormulaModule,
                        LoanItemPaymentInfoModule,
                        LoanSummaryAmountItemModule,
                        LoanSummaryOverdueBannerModule,
                        LoanSummaryProgressBarModule,
                        LoanSummaryEditAliasModule,
                        LoanItemMenuModule,
                    ],
                    exports: [LoanSummaryContainerComponent],
                }]
        }] });

var LoanPaymentScheduleViewType;
(function (LoanPaymentScheduleViewType) {
    LoanPaymentScheduleViewType["List"] = "List";
    LoanPaymentScheduleViewType["Table"] = "Table";
})(LoanPaymentScheduleViewType || (LoanPaymentScheduleViewType = {}));

// eslint-disable-next-line @angular-eslint/directive-class-suffix
class LoanAmortizedPaymentScheduleBaseComponent {
    constructor() {
        /**
         * Emits on row select
         */
        this.selectItem = new EventEmitter();
    }
    /**
     * Indicates the overdue state for amortized payment schedule item
     *
     * @param status
     */
    isOverdue({ status }) {
        return status === PresentationAmortizationPaymentStatus.Overdue;
    }
    /**
     * Track by func for NgFor directive
     *
     * @param _index
     * @param item
     */
    trackById(_index, item) {
        return item.id;
    }
}
/** @nocollapse */ LoanAmortizedPaymentScheduleBaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleBaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ LoanAmortizedPaymentScheduleBaseComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: LoanAmortizedPaymentScheduleBaseComponent, inputs: { items: "items" }, outputs: { selectItem: "selectItem" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleBaseComponent, decorators: [{
            type: Directive
        }], propDecorators: { items: [{
                type: Input
            }], selectItem: [{
                type: Output
            }] } });

const loanPaymentScheduleStatusColorMap = {
    Overdue: 'danger',
    Scheduled: 'success',
};

class LoanPaymentScheduleStatusComponent {
    constructor() {
        /**
         * Whether the status should be truncated
         *
         * @default: false
         */
        this.truncate = false;
        /**
         * Map of colors for each status
         */
        this.statusColorMap = loanPaymentScheduleStatusColorMap;
    }
}
/** @nocollapse */ LoanPaymentScheduleStatusComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleStatusComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanPaymentScheduleStatusComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanPaymentScheduleStatusComponent, selector: "bb-loan-payment-schedule-status", inputs: { status: "status", truncate: "truncate", statusColorMap: "statusColorMap" }, ngImport: i0, template: "<span class=\"sr-only\" i18n=\"Loan payments schedule status a11y prefix@@loans.payment-schedule.status.a11y.prefix\">\n  Payment status:\n</span>\n<span class=\"sr-only\" i18n=\"Loan payments schedule full status@@loans.payment-schedule.full-status\" #textLabelFull\n  >{status, select, Scheduled {Scheduled} Overdue {Overdue}}</span\n>\n<span class=\"d-none\" i18n=\"Loan payments schedule short status@@loans.payment-schedule.short-status\" #textLabelShort\n  >{status, select, Scheduled {Sch} Overdue {Over}}</span\n>\n<bb-badge-ui\n  aria-hidden=\"true\"\n  [color]=\"statusColorMap[status]\"\n  [abbr]=\"(truncate ? textLabelShort.textContent : textLabelFull.textContent)! | titlecase\"\n  [text]=\"textLabelFull.textContent! | titlecase\"\n  data-role=\"bb-payment-schedule-status__badge\"\n></bb-badge-ui>\n<span class=\"sr-only\">,</span>\n", components: [{ type: i1$2.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], pipes: { "titlecase": i2.TitleCasePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleStatusComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-payment-schedule-status',
                    templateUrl: './loan-payment-schedule-status.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { status: [{
                type: Input
            }], truncate: [{
                type: Input
            }], statusColorMap: [{
                type: Input
            }] } });

class AccessibilityKeyboardDirective {
    constructor(element) {
        this.element = element;
        element.nativeElement.tabIndex = 0;
    }
    eventListener(event) {
        this.element.nativeElement.click(event);
    }
}
/** @nocollapse */ AccessibilityKeyboardDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccessibilityKeyboardDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ AccessibilityKeyboardDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: AccessibilityKeyboardDirective, selector: "[bbAccessibilityKeyboard]", host: { listeners: { "keydown.enter": "eventListener($event)", "keydown.space": "eventListener($event)" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccessibilityKeyboardDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbAccessibilityKeyboard]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { eventListener: [{
                type: HostListener,
                args: ['keydown.enter', ['$event']]
            }, {
                type: HostListener,
                args: ['keydown.space', ['$event']]
            }] } });

class LoanAmortizedPaymentScheduleTableComponent extends LoanAmortizedPaymentScheduleBaseComponent {
}
/** @nocollapse */ LoanAmortizedPaymentScheduleTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleTableComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanAmortizedPaymentScheduleTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanAmortizedPaymentScheduleTableComponent, selector: "bb-loan-amortized-payment-schedule-table", inputs: { showPaymentStatus: "showPaymentStatus" }, usesInheritance: true, ngImport: i0, template: "<table\n  [bbTable]=\"items\"\n  (rowClick)=\"selectItem.emit($event)\"\n  class=\"table\"\n  data-role=\"bb-payment-amortized-schedule-table\"\n>\n  <caption\n    class=\"sr-only\"\n    i18n=\"Loan amortized payments schedule table caption@@loans.payment-schedule.amortized.table.caption\"\n  >\n    Payment schedule table\n  </caption>\n\n  <thead>\n    <tr>\n      <th\n        *ngIf=\"showPaymentStatus\"\n        scope=\"col\"\n        i18n=\"Loan amortized payments schedule table status heading@@loans.payment-schedule.table.heading.status\"\n      >\n        Status\n      </th>\n      <th\n        scope=\"col\"\n        i18n=\"Loan amortized payments schedule table date heading@@loans.payment-schedule.table.heading.date\"\n        #dateHeadingRef\n      >\n        Date\n      </th>\n      <th\n        scope=\"col\"\n        i18n=\"\n          Loan amortized payments schedule table payment type\n          heading@@loans.payment-schedule.amortized.table.heading.payment-type\"\n        #paymentTypeHeadingRef\n      >\n        Payment type\n      </th>\n      <th\n        scope=\"col\"\n        class=\"bb-text-align-right\"\n        i18n=\"\n          Loan amortized payments schedule table payment due\n          heading@@loans.payment-schedule.amortized.table.heading.payment-due\"\n        #paymentDueHeadingRef\n      >\n        Payment Due\n      </th>\n      <th\n        scope=\"col\"\n        class=\"bb-text-align-right\"\n        i18n=\"\n          Loan amortized payments schedule table outstanding balance\n          heading@@loans.payment-schedule.amortized.table.heading.outstanding-balance\"\n        #outstandingBalanceHeadingRef\n      >\n        Outstanding balance\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr\n      *ngFor=\"let item of items; trackBy: trackById\"\n      data-role=\"bb-payment-amortized-schedule-table__row\"\n      [bbRow]=\"item\"\n      class=\"bb-loans-table-row\"\n      [class.bb-loans-table-row--overdue]=\"isOverdue(item)\"\n      bbAccessibilityKeyboard\n    >\n      <td *ngIf=\"showPaymentStatus\">\n        <bb-loan-payment-schedule-status [status]=\"item.status\" [truncate]=\"true\"></bb-loan-payment-schedule-status>\n      </td>\n      <td>\n        <span class=\"sr-only\">{{ dateHeadingRef.textContent }}</span>\n        <span data-role=\"bb-payment-amortized-schedule-table__date\">{{ item.paymentDate | bbDate }}</span>\n      </td>\n      <td>\n        <span class=\"sr-only\">{{ paymentTypeHeadingRef.textContent }}</span>\n        {{ item.paymentType }}\n      </td>\n      <td class=\"bb-text-align-right\">\n        <span class=\"sr-only\">{{ paymentDueHeadingRef.textContent }}</span>\n        <bb-amount-ui [amount]=\"item.paymentAmount\" [currency]=\"item.currencyCode\" [mapCurrency]=\"false\"></bb-amount-ui>\n      </td>\n      <td class=\"bb-text-align-right\">\n        <span class=\"sr-only\">{{ outstandingBalanceHeadingRef.textContent }}</span>\n        <bb-amount-ui\n          [amount]=\"item.endingPrincipalBalance\"\n          [currency]=\"item.currencyCode\"\n          [mapCurrency]=\"false\"\n        ></bb-amount-ui>\n      </td>\n    </tr>\n  </tbody>\n</table>\n", components: [{ type: LoanPaymentScheduleStatusComponent, selector: "bb-loan-payment-schedule-status", inputs: ["status", "truncate", "statusColorMap"] }, { type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i3$1.TableDirective, selector: "table[bbTable]", inputs: ["bbTable"], outputs: ["selectRow", "rowClick", "sort"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3$1.TableRowDirective, selector: "tr[bbRow]", inputs: ["bbRow"] }, { type: AccessibilityKeyboardDirective, selector: "[bbAccessibilityKeyboard]" }], pipes: { "bbDate": i3.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleTableComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-amortized-payment-schedule-table',
                    templateUrl: './loan-amortized-payment-schedule-table.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { showPaymentStatus: [{
                type: Input
            }] } });

class LoanAmortizedPaymentScheduleListComponent extends LoanAmortizedPaymentScheduleBaseComponent {
}
/** @nocollapse */ LoanAmortizedPaymentScheduleListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleListComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanAmortizedPaymentScheduleListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanAmortizedPaymentScheduleListComponent, selector: "bb-loan-amortized-payment-schedule-list", usesInheritance: true, ngImport: i0, template: "<ul class=\"bb-list bb-list--density-none bb-block bb-block--lg bb-table-text-default\">\n  <li *ngFor=\"let item of items; let index = index; trackBy: trackById\" class=\"bb-list__item\">\n    <div\n      role=\"button\"\n      tabindex=\"0\"\n      aria-label=\"View payment schedule details\"\n      class=\"bb-loans-list-item-wrapper\"\n      [class.bb-loans-list-item-wrapper--overdue]=\"isOverdue(item)\"\n      [attr.aria-describedby]=\"'payment-amortized-schedule-list-item-' + index\"\n      data-role=\"bb-payment-amortized-schedule-list__button\"\n      i18n-aria-label=\"\n        Loan amortized payment schedule list button aria label@@loans.payment-schedule.amortized.list.button.aria-label\"\n      (bbKeyboardClick)=\"selectItem.emit(item)\"\n    >\n      <div id=\"payment-amortized-schedule-list-item-{{ index }}\">\n        <div class=\"bb-stack bb-block bb-block--md\">\n          <div class=\"bb-stack__item\">\n            <div class=\"bb-block bb-block--sm\">\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"Loan amortized payment schedule list date@@loans.payment-schedule.amortized.list.date\"\n              >\n                Date\n              </div>\n              <div\n                class=\"bb-subheader bb-subheader--regular bb-text-support\"\n                data-role=\"bb-payment-amortized-schedule-list__date\"\n              >\n                {{ item.paymentDate | bbDate }}\n              </div>\n            </div>\n            <div>\n              <div\n                class=\"bb-text-bold\"\n                i18n=\"\n                  Loan amortized payment schedule list payment type@@loans.payment-schedule.amortized.list.payment-type\"\n              >\n                Payment type\n              </div>\n              <div class=\"bb-text-support\">{{ item.paymentType }}</div>\n            </div>\n          </div>\n          <bb-loan-payment-schedule-status\n            [status]=\"item.status\"\n            class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--push-right\"\n          ></bb-loan-payment-schedule-status>\n        </div>\n\n        <div class=\"bb-text-align-right bb-block bb-block--sm\">\n          <div\n            class=\"bb-text-bold\"\n            i18n=\"Loan amortized payment schedule list payment due@@loans.payment-schedule.amortized.list.payment-due\"\n          >\n            Payment due\n          </div>\n          <div>\n            <bb-amount-ui\n              [amount]=\"item.paymentAmount\"\n              [currency]=\"item.currencyCode\"\n              [mapCurrency]=\"false\"\n              class=\"bb-highlight bb-highlight--regular\"\n            ></bb-amount-ui>\n          </div>\n        </div>\n\n        <div class=\"bb-text-align-right\">\n          <div\n            class=\"bb-text-bold\"\n            i18n=\"\n              Loan amortized payment schedule list outstanding\n              balance@@loans.payment-schedule.amortized.list.outstanding-balance\"\n          >\n            Outstanding balance\n          </div>\n          <bb-amount-ui\n            [amount]=\"item.endingPrincipalBalance\"\n            [currency]=\"item.currencyCode\"\n            [mapCurrency]=\"false\"\n            class=\"bb-highlight bb-highlight--regular\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </div>\n  </li>\n</ul>\n", components: [{ type: LoanPaymentScheduleStatusComponent, selector: "bb-loan-payment-schedule-status", inputs: ["status", "truncate", "statusColorMap"] }, { type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i7.KeyboardClickDirective, selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }], pipes: { "bbDate": i3.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-amortized-payment-schedule-list',
                    templateUrl: './loan-amortized-payment-schedule-list.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }] });

class LoanPaymentScheduleComponent {
    constructor() {
        /**
         * Schedule payment view type
         */
        this.viewType = LoanPaymentScheduleViewType.Table;
        /**
         * Emits on item selection
         */
        this.selectItem = new EventEmitter();
        /**
         * Available view types
         */
        this.LoanPaymentScheduleViewType = LoanPaymentScheduleViewType;
    }
}
/** @nocollapse */ LoanPaymentScheduleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanPaymentScheduleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanPaymentScheduleComponent, selector: "bb-loan-payment-schedule", inputs: { items: "items", viewType: "viewType" }, outputs: { selectItem: "selectItem" }, ngImport: i0, template: "<ng-container [ngSwitch]=\"viewType\">\n  <bb-loan-amortized-payment-schedule-table\n    *ngSwitchCase=\"LoanPaymentScheduleViewType.Table\"\n    [items]=\"items\"\n    (selectItem)=\"selectItem.emit($event)\"\n  >\n  </bb-loan-amortized-payment-schedule-table>\n  <bb-loan-amortized-payment-schedule-list\n    *ngSwitchCase=\"LoanPaymentScheduleViewType.List\"\n    [items]=\"items\"\n    (selectItem)=\"selectItem.emit($event)\"\n  ></bb-loan-amortized-payment-schedule-list>\n</ng-container>\n", components: [{ type: LoanAmortizedPaymentScheduleTableComponent, selector: "bb-loan-amortized-payment-schedule-table", inputs: ["showPaymentStatus"] }, { type: LoanAmortizedPaymentScheduleListComponent, selector: "bb-loan-amortized-payment-schedule-list" }], directives: [{ type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-payment-schedule',
                    templateUrl: './loan-payment-schedule.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { items: [{
                type: Input
            }], viewType: [{
                type: Input
            }], selectItem: [{
                type: Output
            }] } });

class LoanPaymentScheduleStatusModule {
}
/** @nocollapse */ LoanPaymentScheduleStatusModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleStatusModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanPaymentScheduleStatusModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleStatusModule, declarations: [LoanPaymentScheduleStatusComponent], imports: [CommonModule, BadgeModule], exports: [LoanPaymentScheduleStatusComponent] });
/** @nocollapse */ LoanPaymentScheduleStatusModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleStatusModule, imports: [[CommonModule, BadgeModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleStatusModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanPaymentScheduleStatusComponent],
                    imports: [CommonModule, BadgeModule],
                    exports: [LoanPaymentScheduleStatusComponent],
                }]
        }] });

class AccessibilityKeyboardModule {
}
/** @nocollapse */ AccessibilityKeyboardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccessibilityKeyboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ AccessibilityKeyboardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccessibilityKeyboardModule, declarations: [AccessibilityKeyboardDirective], imports: [CommonModule], exports: [AccessibilityKeyboardDirective] });
/** @nocollapse */ AccessibilityKeyboardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccessibilityKeyboardModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccessibilityKeyboardModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AccessibilityKeyboardDirective],
                    imports: [CommonModule],
                    exports: [AccessibilityKeyboardDirective],
                }]
        }] });

class LoanAmortizedPaymentScheduleTableModule {
}
/** @nocollapse */ LoanAmortizedPaymentScheduleTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanAmortizedPaymentScheduleTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleTableModule, declarations: [LoanAmortizedPaymentScheduleTableComponent], imports: [CommonModule,
        TableModule,
        AmountModule,
        BbDatePipeModule,
        LoanPaymentScheduleStatusModule,
        AccessibilityKeyboardModule], exports: [LoanAmortizedPaymentScheduleTableComponent] });
/** @nocollapse */ LoanAmortizedPaymentScheduleTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleTableModule, imports: [[
            CommonModule,
            TableModule,
            AmountModule,
            BbDatePipeModule,
            LoanPaymentScheduleStatusModule,
            AccessibilityKeyboardModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleTableModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanAmortizedPaymentScheduleTableComponent],
                    imports: [
                        CommonModule,
                        TableModule,
                        AmountModule,
                        BbDatePipeModule,
                        LoanPaymentScheduleStatusModule,
                        AccessibilityKeyboardModule,
                    ],
                    exports: [LoanAmortizedPaymentScheduleTableComponent],
                }]
        }] });

class LoanAmortizedPaymentScheduleListModule {
}
/** @nocollapse */ LoanAmortizedPaymentScheduleListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanAmortizedPaymentScheduleListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleListModule, declarations: [LoanAmortizedPaymentScheduleListComponent], imports: [CommonModule, LoanPaymentScheduleStatusModule, AmountModule, BbDatePipeModule, KeyboardClickModule], exports: [LoanAmortizedPaymentScheduleListComponent] });
/** @nocollapse */ LoanAmortizedPaymentScheduleListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleListModule, imports: [[CommonModule, LoanPaymentScheduleStatusModule, AmountModule, BbDatePipeModule, KeyboardClickModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleListModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanAmortizedPaymentScheduleListComponent],
                    imports: [CommonModule, LoanPaymentScheduleStatusModule, AmountModule, BbDatePipeModule, KeyboardClickModule],
                    exports: [LoanAmortizedPaymentScheduleListComponent],
                }]
        }] });

class LoanPaymentScheduleModule {
}
/** @nocollapse */ LoanPaymentScheduleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanPaymentScheduleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleModule, declarations: [LoanPaymentScheduleComponent], imports: [CommonModule,
        LoanAmortizedPaymentScheduleTableModule,
        LoanPaymentScheduleStatusModule,
        LoanAmortizedPaymentScheduleListModule], exports: [LoanPaymentScheduleComponent,
        LoanAmortizedPaymentScheduleTableModule,
        LoanAmortizedPaymentScheduleListModule] });
/** @nocollapse */ LoanPaymentScheduleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleModule, imports: [[
            CommonModule,
            LoanAmortizedPaymentScheduleTableModule,
            LoanPaymentScheduleStatusModule,
            LoanAmortizedPaymentScheduleListModule,
        ], LoanAmortizedPaymentScheduleTableModule,
        LoanAmortizedPaymentScheduleListModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanPaymentScheduleModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanPaymentScheduleComponent],
                    imports: [
                        CommonModule,
                        LoanAmortizedPaymentScheduleTableModule,
                        LoanPaymentScheduleStatusModule,
                        LoanAmortizedPaymentScheduleListModule,
                    ],
                    exports: [
                        LoanPaymentScheduleComponent,
                        LoanAmortizedPaymentScheduleTableModule,
                        LoanAmortizedPaymentScheduleListModule,
                    ],
                }]
        }] });

// @dynamic
class LoanInfoPrintButtonComponent {
    constructor(document) {
        this.document = document;
    }
    /**
     * Print the document
     */
    print() {
        var _a;
        (_a = this.document.defaultView) === null || _a === void 0 ? void 0 : _a.print();
    }
}
/** @nocollapse */ LoanInfoPrintButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoPrintButtonComponent, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanInfoPrintButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoPrintButtonComponent, selector: "bb-loan-info-print-button", ngImport: i0, template: "<button\n  data-role=\"bb-loans-list-info-print-btn\"\n  bbButton\n  class=\"d-print-none\"\n  color=\"secondary\"\n  aria-label=\"Print page\"\n  i18n-aria-label=\"Loan info print button aria label@@loans.loan-info.print.button.aria-label\"\n  type=\"button\"\n  [circle]=\"true\"\n  (click)=\"print()\"\n>\n  <bb-icon-ui name=\"print\"></bb-icon-ui>\n</button>\n", components: [{ type: i1$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoPrintButtonComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-info-print-button',
                    templateUrl: './loan-info-print-button.component.html',
                }]
        }], ctorParameters: function () { return [{ type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; } });

var LoanInfoItemType;
(function (LoanInfoItemType) {
    LoanInfoItemType["String"] = "String";
    LoanInfoItemType["StringArray"] = "StringArray";
    LoanInfoItemType["Date"] = "Date";
    LoanInfoItemType["Amount"] = "Amount";
    LoanInfoItemType["Percent"] = "Percent";
    LoanInfoItemType["PaymentFrequency"] = "PaymentFrequency";
})(LoanInfoItemType || (LoanInfoItemType = {}));

class LoanInfoItemComponent {
    constructor() {
        /**
         * Item types config
         */
        this.itemTypes = LoanInfoItemType;
    }
}
/** @nocollapse */ LoanInfoItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanInfoItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoItemComponent, selector: "bb-loan-info-item", inputs: { title: "title", value: "value", type: "type", currencyCode: "currencyCode", isCurrencySymbolUsed: "isCurrencySymbolUsed" }, ngImport: i0, template: "<div class=\"bb-text-bold bb-block bb-block--xs\" data-role=\"loan-info-item__title\">{{ title }}</div>\n<ng-container [ngSwitch]=\"type\">\n  <div *ngSwitchCase=\"itemTypes.Amount\" data-role=\"loan-info-item__amount\">\n    <bb-amount-ui\n      [amount]=\"$any(value)\"\n      [currency]=\"currencyCode!\"\n      [mapCurrency]=\"!!isCurrencySymbolUsed\"\n      data-role=\"loan-info-item__value\"\n    ></bb-amount-ui>\n  </div>\n  <div *ngSwitchCase=\"itemTypes.Percent\">\n    <bb-amount-ui\n      [amount]=\"$any(value)\"\n      [showPercent]=\"true\"\n      [mapCurrency]=\"isCurrencySymbolUsed\"\n      data-role=\"loan-info-item__value\"\n    ></bb-amount-ui>\n  </div>\n  <div *ngSwitchCase=\"itemTypes.Date\" data-role=\"loan-info-item__value\">\n    <span data-role=\"loan-info-item__date\">{{ value | bbDate }}</span>\n  </div>\n  <ul *ngSwitchCase=\"itemTypes.StringArray\" class=\"bb-list bb-list--no-separator bb-list--density-none\">\n    <li *ngFor=\"let item of $any(value)\" class=\"bb-list__item\" data-role=\"loan-info-item__value\">\n      {{ item }}\n    </li>\n  </ul>\n  <div\n    *ngSwitchCase=\"itemTypes.PaymentFrequency\"\n    data-role=\"loan-info-item__value\"\n    i18n=\"Loan info item payment frequency@@loans.loan-info-item.payment-frequency.value\"\n  >\n    <!-- prettier-ignore -->\n    { value, select,\n      Weekly {Weekly}\n      Biweekly {Biweekly}\n      Twicemonthly {Twice a month}\n      Monthly {Monthly}\n      Fourweeks {Every four weeks}\n      Bimonthly {Bimonthly}\n      Quarterly {Quarterly}\n      Semiannually {Semiannually}\n      Annually {Annually}\n      Maturity {Payment is only due upon maturity of loan}\n    }\n  </div>\n  <div *ngSwitchCase=\"itemTypes.String\" data-role=\"loan-info-item__value\">\n    {{ value }}\n  </div>\n</ng-container>\n", components: [{ type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "bbDate": i3.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-info-item',
                    templateUrl: './loan-info-item.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { title: [{
                type: Input
            }], value: [{
                type: Input
            }], type: [{
                type: Input
            }], currencyCode: [{
                type: Input
            }], isCurrencySymbolUsed: [{
                type: Input
            }] } });

class LoanInfoCustomSectionDirective {
    constructor(viewContainerRef, componentFactoryResolver) {
        this.viewContainerRef = viewContainerRef;
        this.componentFactoryResolver = componentFactoryResolver;
    }
    ngOnInit() {
        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentRef);
        this.viewContainerRef.clear();
        const componentRef = this.viewContainerRef.createComponent(componentFactory);
        componentRef.instance.loan = this.loan;
    }
}
/** @nocollapse */ LoanInfoCustomSectionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCustomSectionDirective, deps: [{ token: i0.ViewContainerRef }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ LoanInfoCustomSectionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoCustomSectionDirective, selector: "[bbLoanInfoCustomSection]", inputs: { componentRef: "componentRef", loan: "loan" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCustomSectionDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbLoanInfoCustomSection]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ComponentFactoryResolver }]; }, propDecorators: { componentRef: [{
                type: Input
            }], loan: [{
                type: Input
            }] } });

class LoanInfoComponent extends LoanConfigBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * Whether currency local should be transformed to symbol
         */
        this.isCurrencySymbolUsed = false;
        /**
         * Filtered info sections
         */
        this.sections = [];
    }
    ngOnChanges() {
        this.filterSections();
    }
    /**
     * Typed reference to info item
     *
     * @param item
     */
    getTypedDataItem(item) {
        return item;
    }
    /**
     * Typed reference to custom item component ref
     *
     * @param item
     */
    getItemComponentRef(item) {
        return item.componentRef;
    }
    /**
     * Track by method used by *ngFor directive
     *
     * @param _index
     * @param title
     */
    trackByTitle(_index, { title }) {
        return title;
    }
    /**
     * Filter sections by the items.
     * There are two options:
     * - check for the `showItem` function execution
     * - check the property value by `fieldKey`
     *
     * In case if all items in the section do not fit the condition, the sections will be omitted
     *
     * @private
     */
    filterSections() {
        this.sections = this.dataConfig.reduce((accum, section) => {
            const items = section.items.filter((item) => item.showItem
                ? item.showItem.call(undefined, this.loan)
                : Boolean(this.loan[item.fieldKey]));
            if (items.length) {
                accum.push(Object.assign(Object.assign({}, section), { items }));
            }
            return accum;
        }, []);
    }
}
/** @nocollapse */ LoanInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoComponent, selector: "bb-loan-info", inputs: { isCurrencySymbolUsed: "isCurrencySymbolUsed" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div class=\"bb-loans-loan-info\">\n  <bb-loan-info-print-button class=\"bb-loans-loan-info__print-btn\"></bb-loan-info-print-button>\n\n  <div class=\"bb-list\">\n    <section\n      *ngFor=\"let section of sections; trackBy: trackByTitle\"\n      class=\"bb-list__item\"\n      data-role=\"loan-info-section\"\n    >\n      <bb-header-ui\n        [heading]=\"section.title\"\n        headingType=\"h3\"\n        headingClasses=\"bb-block bb-block--lg\"\n        data-role=\"loan-info-section__header\"\n      ></bb-header-ui>\n\n      <div class=\"row bb-loans-loan-info__section\">\n        <div\n          *ngFor=\"let item of section.items\"\n          [ngClass]=\"item.cssClasses\"\n          class=\"bb-block bb-block--lg\"\n          data-role=\"loan-info-section__item-wrapper\"\n        >\n          <ng-container *ngIf=\"getTypedDataItem(item).fieldKey; else customItemRef\">\n            <bb-loan-info-item\n              data-role=\"loan-info-section__data-item\"\n              *ngIf=\"getTypedDataItem(item) as dataItem\"\n              [value]=\"loan[dataItem.fieldKey]\"\n              [title]=\"dataItem.title\"\n              [type]=\"dataItem.fieldType\"\n              [currencyCode]=\"loan.currencyCode\"\n            >\n            </bb-loan-info-item>\n          </ng-container>\n\n          <ng-template #customItemRef>\n            <ng-container\n              bbLoanInfoCustomSection\n              [componentRef]=\"getItemComponentRef(item)\"\n              [loan]=\"loan\"\n            ></ng-container>\n          </ng-template>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n", components: [{ type: LoanInfoPrintButtonComponent, selector: "bb-loan-info-print-button" }, { type: i1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: LoanInfoItemComponent, selector: "bb-loan-info-item", inputs: ["title", "value", "type", "currencyCode", "isCurrencySymbolUsed"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: LoanInfoCustomSectionDirective, selector: "[bbLoanInfoCustomSection]", inputs: ["componentRef", "loan"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-info',
                    templateUrl: './loan-info.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { isCurrencySymbolUsed: [{
                type: Input
            }] } });

class LoanInfoItemModule {
}
/** @nocollapse */ LoanInfoItemModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoItemModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanInfoItemModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoItemModule, declarations: [LoanInfoItemComponent], imports: [CommonModule, AmountModule, BbDatePipeModule], exports: [LoanInfoItemComponent] });
/** @nocollapse */ LoanInfoItemModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoItemModule, imports: [[CommonModule, AmountModule, BbDatePipeModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoItemModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanInfoItemComponent],
                    imports: [CommonModule, AmountModule, BbDatePipeModule],
                    exports: [LoanInfoItemComponent],
                }]
        }] });

class LoanInfoPrintButtonModule {
}
/** @nocollapse */ LoanInfoPrintButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoPrintButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanInfoPrintButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoPrintButtonModule, declarations: [LoanInfoPrintButtonComponent], imports: [CommonModule, ButtonModule, IconModule], exports: [LoanInfoPrintButtonComponent] });
/** @nocollapse */ LoanInfoPrintButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoPrintButtonModule, imports: [[CommonModule, ButtonModule, IconModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoPrintButtonModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanInfoPrintButtonComponent],
                    imports: [CommonModule, ButtonModule, IconModule],
                    exports: [LoanInfoPrintButtonComponent],
                }]
        }] });

const components = [LoanInfoComponent, LoanInfoCustomSectionDirective];
const uiModules = [ButtonModule, IconModule, HeaderModule];
const modules$1 = [LoanInfoPrintButtonModule, LoanInfoItemModule];
class LoanInfoModule {
}
/** @nocollapse */ LoanInfoModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanInfoModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoModule, declarations: [LoanInfoComponent, LoanInfoCustomSectionDirective], imports: [CommonModule, ButtonModule, IconModule, HeaderModule, LoanInfoPrintButtonModule, LoanInfoItemModule], exports: [LoanInfoComponent, LoanInfoCustomSectionDirective] });
/** @nocollapse */ LoanInfoModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoModule, imports: [[CommonModule, ...uiModules, ...modules$1]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...components],
                    imports: [CommonModule, ...uiModules, ...modules$1],
                    exports: [...components],
                }]
        }] });

/* eslint-disable-next-line @angular-eslint/directive-class-suffix */
class DestroyableComponent {
    constructor() {
        this.componentDestroyed$$ = new Subject();
        /**
         * Emits value on component destroy
         *
         * @protected
         */
        this.componentDestroyed$ = this.componentDestroyed$$.asObservable();
    }
    ngOnDestroy() {
        this.componentDestroyed$$.next();
        this.componentDestroyed$$.complete();
    }
}
/** @nocollapse */ DestroyableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DestroyableComponent, deps: [], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ DestroyableComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: DestroyableComponent, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DestroyableComponent, decorators: [{
            type: Directive
        }] });

class TooltipTriggerDirective extends DestroyableComponent {
    constructor(tooltip, elementRef, renderer) {
        super();
        this.tooltip = tooltip;
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.tooltipVisibility$$ = new Subject();
        this.tooltip.triggers = 'manual';
        this.renderer.setAttribute(this.elementRef.nativeElement, 'tabindex', '0');
    }
    ngOnInit() {
        this.tooltipVisibility$$.pipe(debounceTime(100), takeUntil(this.componentDestroyed$)).subscribe((isVisible) => {
            if (isVisible) {
                this.tooltip.open();
            }
            else {
                this.tooltip.close();
            }
        });
    }
    open() {
        this.tooltipVisibility$$.next(true);
    }
    close() {
        this.tooltipVisibility$$.next(false);
    }
    toggle() {
        this.tooltipVisibility$$.next(!this.tooltip.isOpen());
    }
}
/** @nocollapse */ TooltipTriggerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipTriggerDirective, deps: [{ token: i1$8.TooltipDirective, host: true }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ TooltipTriggerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: TooltipTriggerDirective, selector: "[bbTooltipTrigger]", host: { listeners: { "mouseover": "open()", "focusin": "open()", "mouseleave": "close()", "focusout": "close()", "click": "toggle()" } }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbTooltipTrigger]',
                }]
        }], ctorParameters: function () { return [{ type: i1$8.TooltipDirective, decorators: [{
                    type: Host
                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { open: [{
                type: HostListener,
                args: ['mouseover']
            }, {
                type: HostListener,
                args: ['focusin']
            }], close: [{
                type: HostListener,
                args: ['mouseleave']
            }, {
                type: HostListener,
                args: ['focusout']
            }], toggle: [{
                type: HostListener,
                args: ['click']
            }] } });

class LoanAmortizedPaymentScheduleDetailsComponent {
}
/** @nocollapse */ LoanAmortizedPaymentScheduleDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleDetailsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanAmortizedPaymentScheduleDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanAmortizedPaymentScheduleDetailsComponent, selector: "bb-loan-amortized-payment-schedule-details", inputs: { amortizationPayment: "amortizationPayment", loan: "loan", showStatus: "showStatus" }, ngImport: i0, template: "<div *ngIf=\"showStatus\" class=\"bb-block bb-block--lg\">\n  <bb-loan-payment-schedule-status [status]=\"amortizationPayment.status\"></bb-loan-payment-schedule-status>\n</div>\n\n<div\n  *ngIf=\"loan.defaultSettlementAccountNumber\"\n  data-role=\"bb-payment-amortized-schedule-details__accounts\"\n  class=\"bb-loans-amortized-payment-details-account-card bb-block bb-block--lg\"\n>\n  <div class=\"bb-stack bb-stack--wrap bb-block bb-block--sm bb-d-sm-flex bb-d-none bb-text-bold\" aria-hidden=\"true\">\n    <div\n      class=\"bb-stack__item bb-stack__item--spacing-none bb-stack__item--fill\"\n      i18n=\"Payment schedule details from account title@loans.payment-schedule-details.from-account.title\"\n      #fromRef\n    >\n      From\n    </div>\n    <ng-container *ngTemplateOutlet=\"iconRef; context: { $implicit: true }\"></ng-container>\n    <div\n      class=\"bb-stack__item bb-stack__item--spacing-none bb-stack__item--fill\"\n      i18n=\"Payment schedule details to account title@loans.payment-schedule-details.to-account.title\"\n      #toRef\n    >\n      To\n    </div>\n  </div>\n  <div class=\"bb-stack bb-stack--wrap\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        accountCardRef;\n        context: {\n          accountName: loan.defaultSettlementAccountName,\n          accountNumber: loan.defaultSettlementAccountNumber,\n          iconName: 'account',\n          title: fromRef.textContent\n        }\n      \"\n    ></ng-container>\n    <ng-container *ngTemplateOutlet=\"iconRef\"></ng-container>\n    <div class=\"bb-stack__break bb-stack__break--down bb-stack__break--spacing-md\"></div>\n    <ng-container\n      *ngTemplateOutlet=\"\n        accountCardRef;\n        context: {\n          accountName: loan.alias,\n          accountNumber: loan.accountNumber,\n          iconName: 'payments',\n          title: toRef.textContent\n        }\n      \"\n    ></ng-container>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <div class=\"bb-block bb-block--sm\">\n    <h3 i18n=\"Payment schedule details payment amounts title@loans.payment-schedule-details.payment-amounts.title\">\n      Amounts\n    </h3>\n    <bb-amount-ui\n      class=\"bb-heading-3\"\n      data-role=\"bb-payment-amortized-schedule-details__amounts\"\n      [amount]=\"amortizationPayment.paymentAmount\"\n      [mapCurrency]=\"false\"\n      [currency]=\"amortizationPayment.currencyCode\"\n    ></bb-amount-ui>\n  </div>\n  <div\n    *ngIf=\"amortizationPayment.principal as principal\"\n    data-role=\"bb-payment-amortized-schedule-details__principal-amount\"\n  >\n    <span class=\"bb-inline-stack\">\n      <span\n        class=\"bb-inline-stack__item\"\n        i18n=\"Payment schedule details principal amount title@loans.payment-schedule-details.principal-amount.title\"\n      >\n        Principal amount:\n      </span>\n      <bb-amount-ui\n        class=\"bb-inline-stack__item\"\n        [amount]=\"principal\"\n        [mapCurrency]=\"false\"\n        [currency]=\"amortizationPayment.currencyCode\"\n      ></bb-amount-ui>\n    </span>\n  </div>\n  <div\n    *ngIf=\"amortizationPayment.interest as interest\"\n    data-role=\"bb-payment-amortized-schedule-details__interest-amount\"\n  >\n    <span class=\"bb-inline-stack\">\n      <span\n        class=\"bb-inline-stack__item\"\n        i18n=\"Payment schedule details interest amount title@loans.payment-schedule-details.interest-amount.title\"\n      >\n        Interest amount:\n      </span>\n      <bb-amount-ui\n        class=\"bb-inline-stack__item\"\n        [amount]=\"interest\"\n        [mapCurrency]=\"false\"\n        [currency]=\"amortizationPayment.currencyCode\"\n      ></bb-amount-ui>\n    </span>\n  </div>\n</div>\n\n<hr class=\"bb-block bb-block--lg\" />\n\n<div class=\"bb-block bb-block--lg\">\n  <div\n    class=\"bb-text-bold\"\n    i18n=\"Payment schedule details execution date title@loans.payment-schedule-details.execution-date.title\"\n  >\n    Execution date\n  </div>\n  <div data-role=\"bb-payment-amortized-schedule-details__execution-date\">\n    {{ amortizationPayment.paymentDate | bbDate }}\n  </div>\n</div>\n\n<hr class=\"bb-block bb-block--lg\" />\n\n<div>\n  <div class=\"bb-inline-stack\">\n    <span\n      class=\"bb-inline-stack__item bb-text-bold\"\n      i18n=\"Payment schedule details total balance title@loans.payment-schedule-details.total-balance.title\"\n    >\n      Total outstanding balance (after payment)</span\n    >\n\n    <bb-icon-ui\n      class=\"bb-inline-stack__item btn btn-unstyled bb-inline-stack__item--spacing-none\"\n      name=\"info\"\n      color=\"primary\"\n      size=\"md\"\n      role=\"button\"\n      i18n-bbTooltip=\"\n        Payment schedule details total balance info tooltip@loans.payment-schedule-details.total-balance.info.tooltip\n      \"\n      bbTooltip=\"Amount based on automatic schedule and may be subject to change.\"\n      bbTooltipTrigger\n    ></bb-icon-ui>\n  </div>\n  <div>\n    <bb-amount-ui\n      data-role=\"bb-payment-amortized-schedule-details__outstanding-balance\"\n      [amount]=\"amortizationPayment.endingPrincipalBalance\"\n      [mapCurrency]=\"false\"\n      [currency]=\"amortizationPayment.currencyCode\"\n    ></bb-amount-ui>\n  </div>\n</div>\n\n<ng-template\n  let-accountName=\"accountName\"\n  let-accountNumber=\"accountNumber\"\n  let-iconName=\"iconName\"\n  let-title=\"title\"\n  #accountCardRef\n>\n  <div class=\"bb-stack__item bb-stack__item--spacing-none bb-stack__item--fill\">\n    <div class=\"sr-only bb-text-bold bb-block bb-block--sm bb-loans-amortized-payment-details-account-card__title\">\n      {{ title }}\n    </div>\n    <div class=\"bb-card bb-card--sm bb-card--shadowless bb-card--highlight\">\n      <div class=\"bb-card__body\">\n        <div class=\"bb-block bb-block--sm\">\n          <bb-icon-ui [name]=\"iconName\" backgroundType=\"square\" color=\"secondary\" size=\"sm\"></bb-icon-ui>\n        </div>\n\n        <div class=\"bb-subtitle bb-text-bold\">{{ accountName || \"&nbsp;\" }}</div>\n        <div class=\"bb-subtitle bb-text-support\">{{ accountNumber }}</div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #iconRef let-isHidden>\n  <bb-icon-ui\n    class=\"bb-stack__item bb-loans-amortized-payment-details-account-card__separator-icon bb-d-none bb-d-sm-block\"\n    [class.bb-loans-amortized-payment-details-account-card__separator-icon--hidden]=\"isHidden\"\n    name=\"arrow-forward\"\n    size=\"md\"\n  ></bb-icon-ui>\n</ng-template>\n", components: [{ type: LoanPaymentScheduleStatusComponent, selector: "bb-loan-payment-schedule-status", inputs: ["status", "truncate", "statusColorMap"] }, { type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i1$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i1$8.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: TooltipTriggerDirective, selector: "[bbTooltipTrigger]" }], pipes: { "bbDate": i3.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-amortized-payment-schedule-details',
                    templateUrl: './loan-amortized-payment-schedule-details.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { amortizationPayment: [{
                type: Input
            }], loan: [{
                type: Input
            }], showStatus: [{
                type: Input
            }] } });

class TooltipTriggerModule {
}
/** @nocollapse */ TooltipTriggerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipTriggerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ TooltipTriggerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipTriggerModule, declarations: [TooltipTriggerDirective], imports: [CommonModule], exports: [TooltipTriggerDirective] });
/** @nocollapse */ TooltipTriggerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipTriggerModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipTriggerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TooltipTriggerDirective],
                    imports: [CommonModule],
                    exports: [TooltipTriggerDirective],
                }]
        }] });

class LoanAmortizedPaymentScheduleDetailsModule {
}
/** @nocollapse */ LoanAmortizedPaymentScheduleDetailsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleDetailsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanAmortizedPaymentScheduleDetailsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleDetailsModule, declarations: [LoanAmortizedPaymentScheduleDetailsComponent], imports: [CommonModule,
        LoanPaymentScheduleStatusModule,
        IconModule,
        AmountModule,
        BbDatePipeModule,
        TooltipModule,
        TooltipTriggerModule], exports: [LoanAmortizedPaymentScheduleDetailsComponent] });
/** @nocollapse */ LoanAmortizedPaymentScheduleDetailsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleDetailsModule, imports: [[
            CommonModule,
            LoanPaymentScheduleStatusModule,
            IconModule,
            AmountModule,
            BbDatePipeModule,
            TooltipModule,
            TooltipTriggerModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanAmortizedPaymentScheduleDetailsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanAmortizedPaymentScheduleDetailsComponent],
                    imports: [
                        CommonModule,
                        LoanPaymentScheduleStatusModule,
                        IconModule,
                        AmountModule,
                        BbDatePipeModule,
                        TooltipModule,
                        TooltipTriggerModule,
                    ],
                    exports: [LoanAmortizedPaymentScheduleDetailsComponent],
                }]
        }] });

class RetailLoanSummaryOverdueBannerComponent {
    constructor() {
        this.id = RetailLoanSummaryOverdueBannerComponent._id++;
        /**
         * Ids for banner a11y references
         */
        this.elementIds = {
            title: `retail-loan-overdue-title-${this.id}`,
            description: `retail-loan-overdue-description-${this.id}`,
            amount: `retail-loan-overdue-amount-${this.id}`,
        };
    }
    ngOnChanges() {
        const { amount, description } = this.elementIds;
        const describedByIds = [];
        this.showOverdueDate = Boolean(this.overdueDate && Date.parse(this.overdueDate) - Date.now() <= 0);
        this.showOverdueAmount = Boolean(this.currencyCode && this.overdueAmount);
        if ((!this.overdueDate && !this.overdueAmount) || this.showOverdueDate) {
            describedByIds.push(description);
        }
        if (this.showOverdueAmount) {
            describedByIds.push(amount);
        }
        this.describedByIds = describedByIds.join(' ') || null;
    }
}
RetailLoanSummaryOverdueBannerComponent._id = 0;
/** @nocollapse */ RetailLoanSummaryOverdueBannerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryOverdueBannerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ RetailLoanSummaryOverdueBannerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RetailLoanSummaryOverdueBannerComponent, selector: "bb-retail-loan-summary-overdue-banner", inputs: { overdueAmount: "overdueAmount", overdueDate: "overdueDate", overduePaymentsCount: "overduePaymentsCount", currencyCode: "currencyCode" }, usesOnChanges: true, ngImport: i0, template: "<bb-alert-ui\n  role=\"alert\"\n  title=\"\"\n  data-role=\"retail-loan-overdue-banner\"\n  [attr.aria-describedby]=\"describedByIds\"\n  [attr.aria-labelledby]=\"elementIds.title\"\n>\n  <div class=\"bb-stack bb-stack--wrap\">\n    <div class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--fill bb-text-bold bb-text-default\">\n      <ng-container *ngIf=\"overduePaymentsCount; else amountOverdue\">\n        <div\n          [id]=\"elementIds.description\"\n          data-role=\"retail-loan-overdue-banner__payments-count\"\n          i18n=\"Loan summary overdue banner payments count@@loans.retail-loan-summary.overdue-banner.payments-count\"\n        >\n          {{ overduePaymentsCount }} missed payment{{ overduePaymentsCount === 1 ? \"\" : \"s\" }}\n          <span *ngIf=\"showOverdueDate\">since {{ overdueDate | bbDate }}</span>\n        </div>\n      </ng-container>\n      <ng-template #amountOverdue>\n        <ng-container *ngIf=\"overdueAmount && currencyCode; else dateOverdue\">\n          <div\n            *ngIf=\"overdueAmount && currencyCode\"\n            [id]=\"elementIds.description\"\n            data-role=\"retail-loan-overdue-banner__overdue-amount\"\n            i18n=\"Loan summary overdue banner payment date@@loans.retail-loan-summary.overdue-banner.overdue-amount\"\n          >\n            <bb-amount-ui\n              data-role=\"retail-loan-overdue-banner__amount\"\n              [amount]=\"overdueAmount\"\n              [currency]=\"currencyCode\"\n              [mapCurrency]=\"true\"\n            ></bb-amount-ui>\n            overdue\n            <span *ngIf=\"showOverdueDate\">since {{ overdueDate | bbDate }}</span>\n          </div>\n        </ng-container>\n      </ng-template>\n      <ng-template #dateOverdue>\n        <div\n          *ngIf=\"showOverdueDate\"\n          [id]=\"elementIds.description\"\n          data-role=\"retail-loan-overdue-banner__payment-date\"\n          i18n=\"Loan summary overdue banner payment date@@loans.retail-loan-summary.overdue-banner.payment-date\"\n        >\n          Overdue since {{ overdueDate | bbDate }}\n        </div>\n      </ng-template>\n      <div\n        *ngIf=\"!overdueDate && (!overdueAmount || !currencyCode) && !overduePaymentsCount\"\n        [id]=\"elementIds.description\"\n        data-role=\"retail-loan-overdue-banner__default-message\"\n        i18n=\"Loan summary overdue banner contact admin@@loans.retail-loan-summary.overdue-banner.default-message\"\n      >\n        This account is overdue\n      </div>\n    </div>\n  </div>\n</bb-alert-ui>\n", components: [{ type: i1$4.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "bbDate": i3.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryOverdueBannerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-retail-loan-summary-overdue-banner',
                    templateUrl: './retail-loan-summary-overdue-banner.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { overdueAmount: [{
                type: Input
            }], overdueDate: [{
                type: Input
            }], overduePaymentsCount: [{
                type: Input
            }], currencyCode: [{
                type: Input
            }] } });

class RetailLoanSummaryProgressBarComponent extends LoanConfigBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * Whether all conditions for displaying the activeAmount are met
         */
        this.showActiveAmount = false;
        /**
         * Whether all conditions for displaying the availableAmount are met
         */
        this.showAvailableAmount = false;
        /**
         * Whether all conditions for displaying the totalAmount are met
         */
        this.showTotalAmount = false;
        /**
         * Percentage value for progress bar
         */
        this.progressPercentage = NaN;
        /**
         * Progress type for progress bar
         */
        this.progressType = 'primary';
        /**
         * Flag represents progress bar visibility
         */
        this.isProgressBarVisible = false;
    }
    ngOnChanges() {
        this.updateProperties();
    }
    getProgressPercentage(activeAmount, totalAmount) {
        return totalAmount.isLessThanOrEqualTo(0) || activeAmount.isLessThan(0)
            ? NaN
            : Math.floor(activeAmount.div(totalAmount).toNumber() * 100);
    }
    updateProperties() {
        this.activeAmount = this.loan[this.dataConfig.activeAmount.fieldKey];
        this.availableAmount = this.loan[this.dataConfig.availableAmount.fieldKey];
        this.totalAmount = this.loan[this.dataConfig.totalAmount.fieldKey];
        let showProgressBar;
        if (this.dataConfig.showData) {
            this.showActiveAmount = this.dataConfig.showData(this.loan);
            this.showAvailableAmount = this.dataConfig.showData(this.loan);
            this.showTotalAmount = this.dataConfig.showData(this.loan);
            showProgressBar = this.dataConfig.showData(this.loan);
        }
        else {
            this.showActiveAmount = this.dataConfig.showActiveAmount ? this.dataConfig.showActiveAmount(this.loan) : false;
            this.showAvailableAmount = this.dataConfig.showAvailableAmount
                ? this.dataConfig.showAvailableAmount(this.loan)
                : false;
            this.showTotalAmount = this.dataConfig.showTotalAmount ? this.dataConfig.showTotalAmount(this.loan) : false;
            showProgressBar = this.dataConfig.showProgressBar ? this.dataConfig.showProgressBar(this.loan) : true;
        }
        const activeAmount = this.activeAmount && new BigNumber(this.activeAmount);
        const totalAmount = this.totalAmount && new BigNumber(this.totalAmount);
        if (activeAmount && totalAmount) {
            this.progressPercentage = this.getProgressPercentage(activeAmount, totalAmount);
        }
        this.isProgressBarVisible = !isNaN(this.progressPercentage) && showProgressBar;
    }
}
/** @nocollapse */ RetailLoanSummaryProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryProgressBarComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ RetailLoanSummaryProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RetailLoanSummaryProgressBarComponent, selector: "bb-retail-loan-summary-progress-bar", inputs: { owedAmountFocus: "owedAmountFocus" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div class=\"bb-loans-summary-progress\">\n  <div class=\"row no-gutters bb-block bb-block--sm\">\n    <div class=\"col-12 col-sm-9\">\n      <div class=\"row no-gutters\" *ngIf=\"loan.currencyCode as currencyCode\">\n        <div *ngIf=\"activeAmount && showActiveAmount\" class=\"col-12 col-md-6 bb-block bb-block--md\">\n          <div\n            [ngClass]=\"{\n              'bb-loans-summary-progress__legend-item': isProgressBarVisible,\n              'bb-loans-summary-progress__legend-item--success': isProgressBarVisible && progressType === 'success',\n              'bb-loans-summary-progress__legend-item--active': isProgressBarVisible && progressType === 'primary'\n            }\"\n            data-role=\"loan-summary-progress__active-wrapper\"\n          >\n            <bb-loan-summary-amount-item\n              [amount]=\"activeAmount\"\n              [currency]=\"currencyCode\"\n              [title]=\"dataConfig.activeAmount.title\"\n              [showLabel]=\"showTotalAmount\"\n              [totalAmount]=\"totalAmount\"\n              [isCurrencySymbolUsed]=\"true\"\n              titleClasses=\"bb-text-support\"\n              data-role=\"loan-summary-progress__active\"\n            >\n            </bb-loan-summary-amount-item>\n          </div>\n        </div>\n        <div *ngIf=\"availableAmount && showAvailableAmount\" class=\"col-12 col-md-6 bb-block bb-block--md\">\n          <div\n            [class.bb-loans-summary-progress__legend-item]=\"isProgressBarVisible\"\n            data-role=\"loan-summary-progress__total-wrapper\"\n          >\n            <bb-loan-summary-amount-item\n              [amount]=\"availableAmount\"\n              [currency]=\"currencyCode\"\n              [title]=\"dataConfig.availableAmount.title\"\n              [isCurrencySymbolUsed]=\"true\"\n              titleClasses=\"bb-text-support\"\n              data-role=\"loan-summary-progress__total\"\n            >\n            </bb-loan-summary-amount-item>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-sm-3\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <div *ngIf=\"isProgressBarVisible && loan.currencyCode\" class=\"row no-gutters bb-block bb-block--md\">\n    <div class=\"col-12\">\n      <bb-progressbar-ui\n        class=\"bb-loans-summary-progress__progressbar\"\n        [animated]=\"true\"\n        [max]=\"100\"\n        [value]=\"progressPercentage\"\n        [type]=\"progressType\"\n        data-role=\"loan-summary-progress__progressbar\"\n      >\n      </bb-progressbar-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: LoanSummaryAmountItemComponent, selector: "bb-loan-summary-amount-item", inputs: ["title", "amount", "currency", "isCurrencySymbolUsed", "showPercent", "titleClasses", "amountClasses", "totalAmount", "showLabel"] }, { type: i2$4.ProgressbarComponent, selector: "bb-progressbar-ui", inputs: ["height", "max", "showValue", "striped", "animated", "type", "value"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryProgressBarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-retail-loan-summary-progress-bar',
                    templateUrl: './retail-loan-summary-progress-bar.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { owedAmountFocus: [{
                type: Input
            }] } });

class RetailLoanSummaryContainerComponent extends LoanConfigBaseComponent {
    constructor(mediaQueryService) {
        super();
        this.mediaQueryService = mediaQueryService;
        /**
         * Indicator to show/hide `payDown` button
         *
         * @default true
         */
        this.showPayDownButton = true;
        /**
         * Indicator to show/hide `payDown` button
         *
         * @default true
         */
        this.showDrawAmountButton = true;
        /**
         * Indicator to show/hide `summary formula`
         *
         * @default true
         */
        this.showFormula = true;
        /**
         * Indicator to show `interest rate` over or below the progress bar
         *
         * @default false
         */
        this.showInterestRateOnTop = false;
        /**
         * Draw amount event emitter
         */
        this.drawAmount = new EventEmitter();
        /**
         * Pay down event emitter
         */
        this.payDown = new EventEmitter();
        /**
         * Emits on accepting new alias for save
         */
        this.updateAlias = new EventEmitter();
        /**
         * Emits in canceling current alias update
         */
        this.cancelAliasUpdate = new EventEmitter();
        /**
         * Flag represents the screen resolution wider that `md` breakpoint
         */
        this.isWiderThanMobile$ = this.mediaQueryService.isMediaBreakpointMatches('min-width', 'md');
    }
    /**
     * @internal
     */
    ngOnChanges() {
        this.showOverdueBanner = isLoanOverdue(this.loan);
        this.loanAlias = getLoanAlias(this.loan);
        this.menuItems = this.getMenuItems();
        this.loanIconName = this.dataConfig.icons[this.loan.viewType];
    }
    /**
     * Select an item for the context menu
     *
     * @param itemKey
     */
    onSelectMenuItem(itemKey) {
        switch (itemKey) {
            case 'payDown':
                this.payDown.emit();
                break;
            case 'drawAmount':
                this.drawAmount.emit();
        }
    }
    getMenuItems() {
        const menuItems = [];
        if (this.showPayDownButton) {
            menuItems.push(payDownMenuItem);
        }
        if (this.showDrawAmountButton) {
            menuItems.push(drawAmountMenuItem);
        }
        return menuItems;
    }
}
/** @nocollapse */ RetailLoanSummaryContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryContainerComponent, deps: [{ token: i1$5.MediaQueryService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ RetailLoanSummaryContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RetailLoanSummaryContainerComponent, selector: "bb-retail-loan-summary-container", inputs: { showPayDownButton: "showPayDownButton", showDrawAmountButton: "showDrawAmountButton", showFormula: "showFormula", showInterestRateOnTop: "showInterestRateOnTop", owedAmountFocus: "owedAmountFocus" }, outputs: { drawAmount: "drawAmount", payDown: "payDown", updateAlias: "updateAlias", cancelAliasUpdate: "cancelAliasUpdate" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<bb-retail-loan-summary-overdue-banner\n  *ngIf=\"showOverdueBanner\"\n  [overdueAmount]=\"loan.inArrearsAmount\"\n  [overdueDate]=\"loan.inArrearsDate\"\n  [currencyCode]=\"loan.currencyCode\"\n  [overduePaymentsCount]=\"loan.overduePaymentsCount\"\n></bb-retail-loan-summary-overdue-banner>\n<div class=\"bb-block\">\n  <bb-retail-loan-item-payment-info\n    [loan]=\"loan\"\n    [dataConfig]=\"dataConfig.paymentInfo\"\n    class=\"bb-subtitle\"\n  ></bb-retail-loan-item-payment-info>\n</div>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui\n    [name]=\"loanIconName\"\n    class=\"bb-stack__item bb-stack__item--align-top bb-d-lg-inline-flex bb-d-none\"\n    data-role=\"loans-summary__loan-icon\"\n    backgroundType=\"square\"\n    color=\"secondary\"\n    size=\"lg\"\n  ></bb-icon-ui>\n  <div class=\"bb-stack__item bb-stack__item--fill\">\n    <bb-loan-item-name\n      [headingLevel]=\"2\"\n      [loanName]=\"loanAlias\"\n      class=\"bb-stack__item bb-stack__item--spacing-sm\"\n    ></bb-loan-item-name>\n    <div>\n      <bb-loan-item-type [loanType]=\"loan.loanTypeAlias\" [useSubtitleClass]=\"true\"></bb-loan-item-type>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <bb-retail-loan-summary-progress-bar\n    [loan]=\"loan\"\n    [dataConfig]=\"dataConfig.progressBar\"\n    [owedAmountFocus]=\"owedAmountFocus\"\n  >\n    <bb-loan-summary-amount-item\n      *ngIf=\"showInterestRateOnTop\"\n      [amount]=\"loan.interestRate\"\n      [showPercent]=\"true\"\n      title=\"Interest rate\"\n      i18n-title=\"Loan summary interest rate title@@loans.loan-summary.interest-rate.title\"\n      titleClasses=\"bb-text-support\"\n    >\n    </bb-loan-summary-amount-item>\n  </bb-retail-loan-summary-progress-bar>\n</div>\n\n<div class=\"bb-block bb-stack justify-content-between\">\n  <div class=\"bb-stack__item bb-stack__item--no-shrink bb-stack__item--align-top\">\n    <ng-container *ngIf=\"isWiderThanMobile$ | async; else contextMenuRef\">\n      <button\n        *ngIf=\"showPayDownButton\"\n        (click)=\"payDown.emit()\"\n        class=\"bb-stack__item bb-inline-stack bb-inline-stack--density-sm\"\n        color=\"primary\"\n        bbButton\n        data-role=\"loans-summary__pay-down-btn\"\n      >\n        <bb-icon-ui name=\"call-received\" class=\"bb-inline-stack__item\"></bb-icon-ui>\n        <span\n          class=\"bb-inline-stack__item\"\n          i18n=\"Loan summary pay down button text@@loans.loan-summary.button.pay-down.text\"\n        >\n          Pay Down\n        </span>\n      </button>\n      <button\n        *ngIf=\"showDrawAmountButton\"\n        (click)=\"drawAmount.emit()\"\n        class=\"bb-stack__item bb-inline-stack bb-inline-stack--density-sm\"\n        color=\"secondary\"\n        bbButton\n        data-role=\"loans-summary__draw-amount-btn\"\n      >\n        <bb-icon-ui name=\"savings-accounts\" class=\"bb-inline-stack__item\"></bb-icon-ui>\n        <span\n          class=\"bb-inline-stack__item\"\n          i18n=\"Loan summary draw amount button text@@loans.loan-summary.button.draw-amount.text\"\n        >\n          Draw Amount\n        </span>\n      </button>\n    </ng-container>\n\n    <ng-template #contextMenuRef>\n      <bb-loan-item-menu\n        data-role=\"loans-summary__menu-items\"\n        *ngIf=\"menuItems.length > 0\"\n        [items]=\"menuItems\"\n        [position]=\"'bottom-left'\"\n        (itemSelect)=\"onSelectMenuItem($event)\"\n      ></bb-loan-item-menu>\n    </ng-template>\n  </div>\n\n  <div *ngIf=\"!showInterestRateOnTop\" class=\"bb-inline-stack bb-text-align-center\">\n    <bb-loan-summary-amount-item\n      [amount]=\"loan.interestRate\"\n      [showPercent]=\"true\"\n      title=\"Interest rate\"\n      i18n-title=\"Loan summary interest rate title@@loans.loan-summary.interest-rate.title\"\n      titleClasses=\"bb-text-support\"\n    >\n    </bb-loan-summary-amount-item>\n  </div>\n</div>\n\n<bb-loan-summary-formula *ngIf=\"showFormula\" [loan]=\"loan\" [dataConfig]=\"dataConfig.formula\"></bb-loan-summary-formula>\n", components: [{ type: RetailLoanSummaryOverdueBannerComponent, selector: "bb-retail-loan-summary-overdue-banner", inputs: ["overdueAmount", "overdueDate", "overduePaymentsCount", "currencyCode"] }, { type: RetailLoanItemPaymentInfoComponent, selector: "bb-retail-loan-item-payment-info" }, { type: i1$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: LoanItemNameComponent, selector: "bb-loan-item-name", inputs: ["loanName", "headingLevel"] }, { type: LoanItemTypeComponent, selector: "bb-loan-item-type", inputs: ["loanType", "useSubtitleClass"] }, { type: RetailLoanSummaryProgressBarComponent, selector: "bb-retail-loan-summary-progress-bar", inputs: ["owedAmountFocus"] }, { type: LoanSummaryAmountItemComponent, selector: "bb-loan-summary-amount-item", inputs: ["title", "amount", "currency", "isCurrencySymbolUsed", "showPercent", "titleClasses", "amountClasses", "totalAmount", "showLabel"] }, { type: LoanItemMenuComponent, selector: "bb-loan-item-menu", inputs: ["items", "dropDownButtonLabel", "position"], outputs: ["itemSelect"] }, { type: LoanSummaryFormulaComponent, selector: "bb-loan-summary-formula" }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-retail-loan-summary-container',
                    templateUrl: './retail-loan-summary-container.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1$5.MediaQueryService }]; }, propDecorators: { showPayDownButton: [{
                type: Input
            }], showDrawAmountButton: [{
                type: Input
            }], showFormula: [{
                type: Input
            }], showInterestRateOnTop: [{
                type: Input
            }], owedAmountFocus: [{
                type: Input
            }], drawAmount: [{
                type: Output
            }], payDown: [{
                type: Output
            }], updateAlias: [{
                type: Output
            }], cancelAliasUpdate: [{
                type: Output
            }] } });

class RetailLoanSummaryProgressBarModule {
}
/** @nocollapse */ RetailLoanSummaryProgressBarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryProgressBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ RetailLoanSummaryProgressBarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryProgressBarModule, declarations: [RetailLoanSummaryProgressBarComponent], imports: [CommonModule, LoanSummaryAmountItemModule, ProgressbarModule], exports: [RetailLoanSummaryProgressBarComponent] });
/** @nocollapse */ RetailLoanSummaryProgressBarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryProgressBarModule, imports: [[CommonModule, LoanSummaryAmountItemModule, ProgressbarModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryProgressBarModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [RetailLoanSummaryProgressBarComponent],
                    imports: [CommonModule, LoanSummaryAmountItemModule, ProgressbarModule],
                    exports: [RetailLoanSummaryProgressBarComponent],
                }]
        }] });

class RetailLoanSummaryOverdueBannerModule {
}
/** @nocollapse */ RetailLoanSummaryOverdueBannerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryOverdueBannerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ RetailLoanSummaryOverdueBannerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryOverdueBannerModule, declarations: [RetailLoanSummaryOverdueBannerComponent], imports: [CommonModule, ButtonModule, IconModule, AmountModule, BbDatePipeModule, AlertModule], exports: [RetailLoanSummaryOverdueBannerComponent] });
/** @nocollapse */ RetailLoanSummaryOverdueBannerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryOverdueBannerModule, imports: [[CommonModule, ButtonModule, IconModule, AmountModule, BbDatePipeModule, AlertModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryOverdueBannerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [RetailLoanSummaryOverdueBannerComponent],
                    imports: [CommonModule, ButtonModule, IconModule, AmountModule, BbDatePipeModule, AlertModule],
                    exports: [RetailLoanSummaryOverdueBannerComponent],
                }]
        }] });

class RetailLoanSummaryContainerModule {
}
/** @nocollapse */ RetailLoanSummaryContainerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryContainerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ RetailLoanSummaryContainerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryContainerModule, declarations: [RetailLoanSummaryContainerComponent], imports: [CommonModule,
        IconModule,
        ButtonModule,
        LoanItemNameModule,
        LoanItemTypeModule,
        LoanItemStatusModule,
        LoanSummaryFormulaModule,
        LoanItemPaymentInfoModule,
        RetailLoanSummaryOverdueBannerModule,
        LoanSummaryAmountItemModule,
        LoanSummaryProgressBarModule,
        RetailLoanSummaryProgressBarModule,
        LoanSummaryEditAliasModule,
        LoanItemMenuModule], exports: [RetailLoanSummaryContainerComponent] });
/** @nocollapse */ RetailLoanSummaryContainerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryContainerModule, imports: [[
            CommonModule,
            IconModule,
            ButtonModule,
            LoanItemNameModule,
            LoanItemTypeModule,
            LoanItemStatusModule,
            LoanSummaryFormulaModule,
            LoanItemPaymentInfoModule,
            RetailLoanSummaryOverdueBannerModule,
            LoanSummaryAmountItemModule,
            LoanSummaryProgressBarModule,
            RetailLoanSummaryProgressBarModule,
            LoanSummaryEditAliasModule,
            LoanItemMenuModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryContainerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [RetailLoanSummaryContainerComponent],
                    imports: [
                        CommonModule,
                        IconModule,
                        ButtonModule,
                        LoanItemNameModule,
                        LoanItemTypeModule,
                        LoanItemStatusModule,
                        LoanSummaryFormulaModule,
                        LoanItemPaymentInfoModule,
                        RetailLoanSummaryOverdueBannerModule,
                        LoanSummaryAmountItemModule,
                        LoanSummaryProgressBarModule,
                        RetailLoanSummaryProgressBarModule,
                        LoanSummaryEditAliasModule,
                        LoanItemMenuModule,
                    ],
                    exports: [RetailLoanSummaryContainerComponent],
                }]
        }] });

const modules = [
    LoansTabsModule,
    LoansHeadingModule,
    LoansMainContainerModule,
    LoansInitialEmptyModule,
    LoanListItemModule,
    LoanSummaryContainerModule,
    RetailLoanSummaryContainerModule,
    LoanInfoModule,
    LoanPaymentScheduleModule,
    LoanAmortizedPaymentScheduleDetailsModule,
];
class LoansCollectionUiAngModule {
}
/** @nocollapse */ LoansCollectionUiAngModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansCollectionUiAngModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoansCollectionUiAngModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansCollectionUiAngModule, imports: [CommonModule, LoansTabsModule,
        LoansHeadingModule,
        LoansMainContainerModule,
        LoansInitialEmptyModule,
        LoanListItemModule,
        LoanSummaryContainerModule,
        RetailLoanSummaryContainerModule,
        LoanInfoModule,
        LoanPaymentScheduleModule,
        LoanAmortizedPaymentScheduleDetailsModule], exports: [LoansTabsModule,
        LoansHeadingModule,
        LoansMainContainerModule,
        LoansInitialEmptyModule,
        LoanListItemModule,
        LoanSummaryContainerModule,
        RetailLoanSummaryContainerModule,
        LoanInfoModule,
        LoanPaymentScheduleModule,
        LoanAmortizedPaymentScheduleDetailsModule] });
/** @nocollapse */ LoansCollectionUiAngModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansCollectionUiAngModule, imports: [[CommonModule, ...modules], LoansTabsModule,
        LoansHeadingModule,
        LoansMainContainerModule,
        LoansInitialEmptyModule,
        LoanListItemModule,
        LoanSummaryContainerModule,
        RetailLoanSummaryContainerModule,
        LoanInfoModule,
        LoanPaymentScheduleModule,
        LoanAmortizedPaymentScheduleDetailsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoansCollectionUiAngModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...modules],
                    exports: [...modules],
                }]
        }] });

class CustomScheduleDetailsComponent extends ӨScheduleDetailsComponent {
    constructor() {
        super();
    }
    isToday(startDate) {
        const today = getRelativeDate();
        const date = getDateOnly(new Date(startDate));
        return date === today;
    }
}
/** @nocollapse */ CustomScheduleDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomScheduleDetailsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ CustomScheduleDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CustomScheduleDetailsComponent, selector: "bb-custom-schedule-details", usesInheritance: true, ngImport: i0, template: "<div\n  class=\"bb-block bb-block--md bb-stack bb-stack--align-top\"\n  *ngIf=\"data?.frequency?.value || data?.frequency as freq\"\n>\n  <div class=\"bb-stack__item\" *ngIf=\"freq !== 'ONCE'\">\n    <div class=\"bb-text-bold bb-block bb-block--xs\">\n      <bb-payord-dynamic-label\n        name=\"frequency\"\n        parentName=\"schedule\"\n        defaultLabel=\"Frequency\"\n        i18n-defaultLabel=\"@@omni-payment-review-schedule-details.frequency.label\"\n      ></bb-payord-dynamic-label>\n    </div>\n    <div data-role=\"frequency-value\" i18n=\"@@omni-payment-review-schedule-details.frequency\">\n      {freq, select, other {Once} DAILY {Daily} WEEKLY {Weekly} BIWEEKLY {Bi-Weekly} MONTHLY {Monthly} QUARTERLY\n      {Quarterly} YEARLY {Annually}}\n    </div>\n  </div>\n</div>\n<div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\" *ngIf=\"data?.startDate\">\n  <div class=\"bb-stack__item\" *ngIf=\"data?.frequency?.value || data?.frequency as freq\">\n    <div class=\"bb-text-bold bb-block bb-block--xs\">\n      <bb-payord-dynamic-label\n        name=\"startDate\"\n        parentName=\"schedule\"\n        [defaultLabel]=\"freq === 'ONCE' ? 'Execution date' : 'Start on'\"\n        i18n-defaultLabel=\"@@omni-payment-review-schedule-details.start-date.label\"\n      ></bb-payord-dynamic-label>\n    </div>\n    <div data-role=\"execution-date\">\n      {{ data?.startDate | date: \"mediumDate\" }} <span *ngIf=\"isToday(data.startDate)\">(Today)</span>\n    </div>\n    <div class=\"row\">\n      <span class=\"bb-text-support bb-subtitle col-md-6\">{{ data?.scheduleInfo }}</span>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"data?.frequency?.value || data?.frequency as freq\">\n  <ng-container *ngIf=\"freq !== 'ONCE'\">\n    <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\" *ngIf=\"data?.endType === 'after' && data?.repeat\">\n      <div class=\"bb-stack__item\">\n        <div class=\"bb-text-bold bb-block bb-block--xs\" data-role=\"end-after-label\">\n          <bb-payord-dynamic-label\n            name=\"repeat\"\n            parentName=\"schedule\"\n            defaultLabel=\"End after\"\n            i18n-defaultLabel=\"@@omni-payment-review-schedule-details.end-after.label\"\n          ></bb-payord-dynamic-label>\n        </div>\n        <div data-role=\"end-after\">\n          {{ data?.repeat }} <span i18n=\"@@omni-payment-review-schedule-details.occurances.label\">occurrences</span>\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\" *ngIf=\"data?.endType === 'on' && data?.endDate\">\n      <div class=\"bb-stack__item\">\n        <div class=\"bb-text-bold bb-block bb-block--xs\" data-role=\"end-date-label\">\n          <bb-payord-dynamic-label\n            name=\"endDate\"\n            parentName=\"schedule\"\n            defaultLabel=\"End date\"\n            i18n-defaultLabel=\"@@omni-payment-review-schedule-details.end-date.label\"\n          ></bb-payord-dynamic-label>\n        </div>\n        <div data-role=\"end-date\">\n          {{ data?.endDate | date: \"mediumDate\" }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n", components: [{ type: i2$6.ӨPayordDynamicLabelComponent, selector: "bb-payord-dynamic-label", inputs: ["config", "name", "defaultLabel", "parentName"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "date": i2.DatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomScheduleDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-custom-schedule-details',
                    templateUrl: './custom-schedule-details.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return []; } });

class CustomReviewScreenComponent extends ReviewPaymentContainerComponent {
    constructor(formBuilder, stateService, eventBus, navigationService, createPaymentService, modalService, paymentOrderHttpService, createPaymentSetup, transactionSigningHelper, paymentErrors) {
        super(formBuilder, stateService, eventBus, navigationService, createPaymentService, modalService, paymentOrderHttpService, createPaymentSetup, transactionSigningHelper, paymentErrors);
    }
    ngOnInit() {
        super.ngOnInit();
    }
    ngOnDestroy() {
        super.ngOnDestroy();
    }
}
/** @nocollapse */ CustomReviewScreenComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomReviewScreenComponent, deps: [{ token: i1$9.FormBuilder }, { token: i2$6.StateService }, { token: PUBSUB }, { token: i2$6.NavigationService }, { token: i3$2.CreatePaymentService }, { token: i2$6.RoutableModalService, optional: true }, { token: i2$6.PaymentOrderHttpService }, { token: i3$2.CreatePaymentConfigSetupService }, { token: i4$1.TransactionSigningHelperService, optional: true }, { token: BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ CustomReviewScreenComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CustomReviewScreenComponent, selector: "bb-custom-review-screen", usesInheritance: true, ngImport: i0, template: "<div class=\"position-relative\">\n  <ng-container\n    *ngTemplateOutlet=\"\n      reviewTemplate || (widgetOptions.reviewScreenType === reviewScreens.ADAPTED ? adaptedReviewTmpl : defaultTmpl);\n      context: {\n        $implicit: paymentItem,\n        status: paymentStatus$ | async,\n        isSubmitting: submitting$ | async,\n        methods: methods,\n        paymentConfig: selectedPaymentConfig$ | async,\n        breachError: breachError\n      }\n    \"\n  ></ng-container>\n</div>\n\n<ng-template let-payment let-paymentConfig=\"paymentConfig\" let-status=\"status\" let-methods=\"methods\" #adaptedReviewTmpl>\n  <bb-adapted-review-container\n    [payment]=\"payment\"\n    [paymentConfig]=\"paymentConfig\"\n    [status]=\"status\"\n    [methods]=\"methods\"\n  ></bb-adapted-review-container>\n</ng-template>\n\n<ng-template\n  let-payment\n  let-paymentConfig=\"paymentConfig\"\n  let-status=\"status\"\n  let-methods=\"methods\"\n  let-isSubmitting=\"isSubmitting\"\n  let-breachError=\"breachError\"\n  #defaultTmpl\n>\n  <fieldset class=\"bb-fieldset bb-fieldset__no-outline\">\n    <legend\n      class=\"bb-label bb-block bb-block--md\"\n      *ngIf=\"!status || status === 'LIMIT_BREACH' || status === 'USER_DECLINED'; else paymentSubmitted\"\n    >\n      <span\n        *ngIf=\"widgetOptions?.paymentMode !== paymentMode.EDIT_PAYMENT\"\n        i18n=\"@@initiate-payment.review.page-title.label\"\n        >Review payment</span\n      >\n      <span\n        *ngIf=\"widgetOptions?.paymentMode === paymentMode.EDIT_PAYMENT\"\n        i18n=\"@@initiate-payment.review.page-edited-title.label\"\n        >Review Edited Payment</span\n      >\n    </legend>\n\n    <ng-template #paymentSubmitted>\n      <legend class=\"bb-label bb-block bb-block--md\">\n        <span\n          *ngIf=\"widgetOptions?.paymentMode !== paymentMode.EDIT_PAYMENT\"\n          i18n=\"@@initiate-payment.review.page-title.payment-submitted.label\"\n          >Payment submitted</span\n        >\n        <span\n          *ngIf=\"widgetOptions?.paymentMode === paymentMode.EDIT_PAYMENT\"\n          i18n=\"@@initiate-payment.review.page-title.payment-modal-submitted.label\"\n          >Edited Payment Submitted</span\n        >\n      </legend>\n    </ng-template>\n\n    <div #alertContainer></div>\n    <ng-container *ngIf=\"payment\">\n      <div class=\"bb-block bb-block--md\" *ngIf=\"status\">\n        <bb-payord-status-card\n          [status]=\"methods.getPaymentStatusType()\"\n          *ngIf=\"status === 'SUCCESS'\"\n          message=\"Payment was submitted for approval\"\n          i18n-message=\"@@initiate-payment.review.payment-success-alert.message\"\n        ></bb-payord-status-card>\n\n        <ng-container *ngIf=\"!!status && status !== 'SUCCESS'\">\n          <ng-container *ngIf=\"errors?.length; else noSpecificError\">\n            <ng-container *ngFor=\"let error of errors\">\n              <ng-container *ngIf=\"error.message; else noSpecificError\">\n                <bb-alert-ui title=\"\" (close)=\"(false)\" modifier=\"error\">\n                  <div data-role=\"failure-message\" class=\"bb-text-bold bb-text-default d-inline-flex\">\n                    <ng-container *ngIf=\"isErrorTitleDisplayed\">\n                      <span i18n=\"@@initiate-payment.review.payment-failed-alert.title\">Payment data error:</span>&nbsp;\n                    </ng-container>\n                    <span>{{ $any(error)?.message }}</span>\n                  </div>\n                </bb-alert-ui>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n\n          <ng-template #noSpecificError>\n            <ng-container *ngIf=\"genericError; else unknownError\">\n              <bb-alert-ui title=\"\" modifier=\"error\">\n                <div class=\"bb-text-bold bb-text-default\">\n                  <ng-container *ngIf=\"isErrorTitleDisplayed\">\n                    <span i18n=\"@@initiate-payment-payments-generic-message-alert-title\"> Payment data error: </span>\n                  </ng-container>\n                  <span>{{ genericError }}</span>\n                </div>\n              </bb-alert-ui>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #unknownError>\n            <ng-container *ngIf=\"status !== 'USER_DECLINED' && status !== 'LIMIT_BREACH'\">\n              <div class=\"bb-stack__item bb-text-bold\">\n                <bb-alert-ui\n                  i18n-title=\"@@initiate-payment-review.payments-unknown-error-alert-title\"\n                  title=\"Server error: Unknown error occurred.\"\n                  modifier=\"error\"\n                >\n                </bb-alert-ui>\n              </div>\n            </ng-container>\n          </ng-template>\n\n          <ng-container *ngIf=\"status === 'USER_DECLINED' || status === 'LIMIT_BREACH'\">\n            <ng-container [ngSwitch]=\"status\">\n              <bb-alert-ui title=\"\" (close)=\"(false)\" modifier=\"error\" [ngSwitch]=\"status\">\n                <div class=\"bb-stack bb-text-default\" *ngSwitchCase=\"'LIMIT_BREACH'\">\n                  <div\n                    class=\"bb-stack__item bb-text-bold\"\n                    data-role=\"failure-message\"\n                    i18n=\"@@initiate-payment.review.limit-breach-error\"\n                  >\n                    Payment cannot be submitted because your limits have been breached\n                  </div>\n                  <button\n                    bbButton\n                    color=\"unstyled\"\n                    buttonSize=\"sm\"\n                    i18n=\"@@initiate-payment.review.limit-breach-error-see-details-button\"\n                    class=\"bb-stack__item bb-stack__item--push-right alert-link\"\n                    data-role=\"failure-see-details\"\n                    (click)=\"methods.showBreachModal()\"\n                  >\n                    See details\n                  </button>\n                </div>\n                <div *ngSwitchCase=\"'USER_DECLINED'\" data-role=\"failure-message\">\n                  <div\n                    i18n=\"@@initiate-payment.review.txn-signing-cancelled-error-title\"\n                    class=\"bb-text-bold bb-text-default\"\n                  >\n                    Payment not submitted\n                  </div>\n                  <div i18n=\"@@initiate-payment.review.txn-signing-cancelled-error-msg\" class=\"bb-text-default\">\n                    The transaction signing request was cancelled\n                  </div>\n                </div>\n              </bb-alert-ui>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <div\n        *ngIf=\"payment?.isIntraLegalEntity || payment?.remittanceInfo?.urgent\"\n        class=\"bb-block bb-block--md bb-inline-stack bb-text-support\"\n      >\n        <div class=\"bb-inline-stack bb-inline-stack__item\" *ngIf=\"payment?.isIntraLegalEntity\">\n          <bb-icon-ui name=\"domain\"></bb-icon-ui>\n          <div class=\"bb-inline-stack__item\"></div>\n          <div\n            class=\"bb-inline-stack__item bb-text-bold bb-inline-stack__item--spacing-sm\"\n            i18n=\"@@initiate-payment.review.intra-company-transfer-label\"\n          >\n            Intracompany payment\n          </div>\n        </div>\n        <div *ngIf=\"payment?.remittanceInfo?.urgent\" class=\"bb-inline-stack bb-inline-stack__item\">\n          <bb-icon-ui name=\"priority-high\"></bb-icon-ui>\n          <div class=\"bb-inline-stack__item\"></div>\n          <div\n            class=\"bb-inline-stack__item bb-text-bold\"\n            data-role=\"payment-is-urgent\"\n            i18n=\"@@initiate-payment.review.urgent-transfer-label\"\n          >\n            Urgent payment\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-payment-account-details-card__container d-none d-md-flex\">\n        <div class=\"bb-text-bold w-md-50\">\n          <ng-container *ngTemplateOutlet=\"dynamicLabelInitiator\"></ng-container>\n        </div>\n        <div class=\"mr-3\">&nbsp;</div>\n        <div class=\"bb-text-bold w-md-50\">\n          <ng-container *ngTemplateOutlet=\"dynamicLabelCounterparty\"></ng-container>\n        </div>\n      </div>\n\n      <div class=\"bb-payment-account-details-card__container bb-block bb-block--md break-word\">\n        <div class=\"w-md-50\">\n          <div class=\"bb-text-bold d-md-none\">\n            <ng-container *ngTemplateOutlet=\"dynamicLabelInitiator\"></ng-container>\n          </div>\n          <bb-debitor-details-card [details]=\"payment?.initiator\"></bb-debitor-details-card>\n        </div>\n\n        <div class=\"justify-content-center align-items-center d-md-flex d-none\">\n          <bb-icon-ui class=\"bb-account-transfer-icon\" name=\"arrow-forward\"></bb-icon-ui>\n        </div>\n        <div class=\"d-md-none\">&nbsp;</div>\n\n        <div class=\"w-md-50\">\n          <div class=\"bb-text-bold d-md-none\">\n            <ng-container *ngTemplateOutlet=\"dynamicLabelCounterparty\"></ng-container>\n          </div>\n          <bb-creditor-details-card [details]=\"payment?.counterparty\"></bb-creditor-details-card>\n        </div>\n      </div>\n\n      <ng-template #dynamicLabelInitiator>\n        <bb-payord-dynamic-label\n          name=\"initiator\"\n          [config]=\"paymentConfig\"\n          defaultLabel=\"From\"\n          i18n-defaultLabel=\"@@initiate-payment.review.initiator-title\"\n        ></bb-payord-dynamic-label>\n      </ng-template>\n\n      <ng-template #dynamicLabelCounterparty>\n        <bb-payord-dynamic-label\n          name=\"counterparty\"\n          [config]=\"paymentConfig\"\n          defaultLabel=\"To\"\n          i18n-defaultLabel=\"@@initiate-payment.review.counterparty-title\"\n        ></bb-payord-dynamic-label>\n      </ng-template>\n\n      <bb-payord-amount-details\n        [config]=\"paymentConfig\"\n        [details]=\"payment?.remittanceInfo\"\n        [transferFee]=\"payment?.transferFee\"\n        [chargeBearer]=\"payment?.chargeBearer\"\n        [forexDetails]=\"methods.getForexDetails(payment)\"\n      ></bb-payord-amount-details>\n      <hr />\n      <bb-payord-counterparty-details\n        [details]=\"payment?.counterparty\"\n        [config]=\"paymentConfig\"\n      ></bb-payord-counterparty-details>\n\n      <div\n        *ngIf=\"\n          payment?.messageToBank ||\n          payment?.remittanceInfo?.description ||\n          payment?.remittanceInfo?.paymentReference ||\n          payment?.counterparty.messageToBank ||\n          payment?.counterparty.remittanceInformation ||\n          payment?.remittanceInfo?.purposeOfPayment\n        \"\n      >\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.paymentReference\">\n          <div class=\"bb-text-bold\" data-role=\"payment-reference-label\">\n            <bb-payord-dynamic-label\n              name=\"paymentReference\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Payment reference\"\n              i18n-defaultLabel=\"@@initiate-payment.review.payment-reference-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-reference\">\n            {{ payment?.remittanceInfo?.paymentReference }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.description\">\n          <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n            <bb-payord-dynamic-label\n              name=\"description\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Description\"\n              i18n-defaultLabel=\"@@initiate-payment.review.description-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-description\">\n            {{ payment?.remittanceInfo?.description }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.counterparty.remittanceInformation\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"remittanceInformation\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-beneficiary-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div data-role=\"description\" class=\"break-word\">{{ payment?.counterparty?.remittanceInformation }}</div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.purposeOfPayment\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"purposeOfPayment\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Purpose of payment\"\n              i18n-defaultLabel=\"@@initiate-payment.review.purpose-of-payment-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"bb-stack\">\n            <div data-role=\"purpose-of-payment\" class=\"bb-stack__item bb-stack__item--align-top\">\n              {{ payment?.remittanceInfo?.purposeOfPayment }}\n            </div>\n            <div data-role=\"purpose-of-payment-description\" class=\"bb-stack__item bb-text-support\">\n              {{ methods.getPurposeDescription(payment?.remittanceInfo?.purposeOfPayment) }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.messageToBank || payment?.counterparty?.messageToBank\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"messageToBank\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary bank\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-bank.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"message-to-bank\">\n            {{ payment?.counterparty?.messageToBank || payment?.messageToBank }}\n          </div>\n        </div>\n        <hr />\n      </div>\n\n      <bb-custom-schedule-details\n        [paymentConfig]=\"paymentConfig\"\n        [data]=\"payment?.schedule\"\n      ></bb-custom-schedule-details>\n    </ng-container>\n  </fieldset>\n\n  <ng-container *ngIf=\"!status || status === 'LIMIT_BREACH' || status === 'USER_DECLINED'; else closureSwitch\">\n    <div class=\"bb-button-bar\" [class.bb-button-bar--reverse]=\"!widgetOptions?.isModalView\">\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        data-role=\"submit-button\"\n        (click)=\"methods.submit()\"\n        *ngIf=\"!methods.isApprovalEnabled()\"\n        [disabled]=\"isSubmitting\"\n        i18n=\"@@initiate-payment.review.submit-dropdown-btn\"\n      >\n        Submit\n      </button>\n      <div class=\"btn-group bb-button-bar__button\" data-role=\"button-group\" *ngIf=\"methods.isApprovalEnabled()\">\n        <bb-load-button-ui\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          data-role=\"submit-button\"\n          [isLoading]=\"isSubmitting\"\n          (click)=\"methods.submit()\"\n          i18n=\"@@initiate-payment.review.submit-btn\"\n        >\n          Submit\n        </bb-load-button-ui>\n\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          btnColor=\"primary\"\n          icon=\"caret-down\"\n          data-role=\"dropdown-menu\"\n          position=\"top-right\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <button\n              role=\"menuitem\"\n              type=\"button\"\n              class=\"dropdown-item\"\n              data-role=\"bus-submit-and-approve-button\"\n              [disabled]=\"isSubmitting\"\n              (bbKeyboardClick)=\"methods.submit(true)\"\n              i18n=\"@@initiate-payment.review.submit-and-approve-btn\"\n            >\n              Submit and Approve\n            </button>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n      <button\n        class=\"bb-button-bar__button\"\n        bbButton\n        color=\"secondary\"\n        (click)=\"methods.edit()\"\n        [disabled]=\"isSubmitting\"\n        data-role=\"edit-button\"\n        i18n=\"@@initiate-payment.review.edit-btn\"\n      >\n        Edit\n      </button>\n\n      <button\n        bbButton\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        color=\"link\"\n        data-role=\"cancel-button\"\n        (click)=\"methods.toggleDiscardDialog()\"\n        [disabled]=\"isSubmitting\"\n        i18n=\"@@initiate-payment.review.discard-btn\"\n      >\n        Discard\n      </button>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"isSubmitting\" class=\"position-absolute w-100 h-100 top-0 fixed-top bg-white\" [style.opacity]=\"0.6\">\n    <bb-loading-indicator-ui loaderSize=\"lg\" class=\"absolute-center\"></bb-loading-indicator-ui>\n  </div>\n\n  <ng-template #closureSwitch>\n    <ng-container *ngIf=\"widgetOptions?.isModalView; else newPayment\">\n      <div class=\"bb-button-bar bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          data-role=\"done-payment-edit-button\"\n          *ngIf=\"status\"\n          (click)=\"methods.doneEditing()\"\n          i18n=\"@@initiate-payment.review.btn-done-edit-payment.label\"\n        >\n          Done\n        </button>\n        <ng-container *ngIf=\"widgetOptions?.paymentMode !== paymentMode.EDIT_PAYMENT\">\n          <ng-container *ngTemplateOutlet=\"newPaymentButton; context: { color: 'secondary' }\"></ng-container>\n          <div class=\"bb-button-bar__button bb-button-bar__button--across\">\n            <ng-container *ngTemplateOutlet=\"saveTemplateButton; context: { color: 'link' }\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #newPayment>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <ng-container *ngTemplateOutlet=\"newPaymentButton; context: { color: 'primary' }\"></ng-container>\n      <ng-container *ngTemplateOutlet=\"saveTemplateButton; context: { color: 'secondary' }\"></ng-container>\n    </div>\n  </ng-template>\n\n  <ng-template #newPaymentButton let-color=\"color\">\n    <button\n      *ngIf=\"status && methods.isNewPaymentEnabled()\"\n      bbButton\n      [color]=\"color\"\n      class=\"bb-button-bar__button\"\n      data-role=\"new-payment-button\"\n      (click)=\"methods.reset()\"\n      [disabled]=\"methods.isSavingTemplate$() | async\"\n      i18n=\"@@initiate-payment.review.btn-group-new-payment.label\"\n    >\n      New Payment\n    </button>\n  </ng-template>\n\n  <ng-template #saveTemplateButton let-color=\"color\">\n    <button\n      *ngIf=\"status === 'SUCCESS' && methods.isPaymentTemplateEnabled() && (createTemplatePermission$ | async)\"\n      bbButton\n      [color]=\"color\"\n      class=\"bb-button-bar__button\"\n      data-role=\"save-as-template-button\"\n      (click)=\"methods.openTemplateModal()\"\n      [disabled]=\"methods.isTemplateSaved()\"\n      i18n=\"@@initiate-payment.review.btn-group-save-as-template.label\"\n    >\n      Save as a template\n    </button>\n  </ng-template>\n\n  <bb-modal-ui\n    [isOpen]=\"methods.showDiscardDialog()\"\n    (cancel)=\"methods.toggleDiscardDialog()\"\n    (confirm)=\"methods.discard()\"\n  >\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <div data-role=\"modal-header\">\n          <h2 class=\"modal-title\" i18n=\"omni-payment-edit-review-discard-modal-title\">\n            Discard {widgetOptions?.paymentMode === paymentMode.EDIT_PAYMENT, select, true {edited} other {entered}}\n            data?\n          </h2>\n        </div>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <ng-container i18n=\"@@initiate-payment.review.discard-modal-content\">\n          Are you sure you want to exit and discard all changes? {widgetOptions?.paymentMode ===\n          paymentMode.EDIT_PAYMENT, select, true {Edited} other {Entered}} data will be lost.\n        </ng-container>\n      </ng-template>\n    </bb-modal-body-ui>\n\n    <bb-modal-footer-ui #modalFooterRef>\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            color=\"danger\"\n            class=\"bb-button-bar__button\"\n            (click)=\"methods.discard()\"\n            data-role=\"discard-action-btn\"\n            i18n=\"@@initiate-payment.review.discard-modal-discard-btn\"\n          >\n            Discard\n          </button>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"link\"\n            (click)=\"methods.toggleDiscardDialog()\"\n            data-role=\"cancel-action-btn\"\n            i18n=\"@@initiate-payment.review.discard-modal-cancel-btn\"\n          >\n            Not now\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n<div *ngIf=\"(paymentTemplateModalState | async) !== undefined\">\n  <bb-payment-template-form\n    *ngIf=\"savingTemplate$ | async as savingTemplate\"\n    [paymentTemplateForm]=\"paymentTemplateForm\"\n    [isSavingTemplate]=\"savingTemplate\"\n    (closeModal)=\"closeTemplateModal()\"\n    (openModal)=\"openTemplateModal()\"\n    (submitForm)=\"submitPaymentTemplate()\"\n  ></bb-payment-template-form>\n</div>\n", components: [{ type: i3$2.ӨAdaptedReviewComponent, selector: "bb-adapted-review-container", inputs: ["payment", "status", "paymentConfig", "methods", "breachError"] }, { type: i2$6.ӨPayordStatusComponent, selector: "bb-payord-status-card", inputs: ["status", "message", "isDebitPayment"] }, { type: i1$4.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i1$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2$6.ӨPaymentDebitorDetailsCardComponent, selector: "bb-debitor-details-card", inputs: ["details"] }, { type: i2$6.ӨPaymentCreditorDetailsCardComponent, selector: "bb-creditor-details-card", inputs: ["details"] }, { type: i2$6.ӨPayordDynamicLabelComponent, selector: "bb-payord-dynamic-label", inputs: ["config", "name", "defaultLabel", "parentName"] }, { type: i2$6.ӨPayordAmountDetailsComponent, selector: "bb-payord-amount-details", inputs: ["config", "details", "transferFee", "chargeBearer", "forexDetails"] }, { type: i2$6.ӨPayordCounterpartyDetailsComponent, selector: "bb-payord-counterparty-details", inputs: ["config", "details", "isDebitPayment"] }, { type: CustomScheduleDetailsComponent, selector: "bb-custom-schedule-details" }, { type: i8.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i1$7.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i1$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i11.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i11.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i11.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i11.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }, { type: i2$6.ӨPaymentTemplateComponent, selector: "bb-payment-template-form", inputs: ["modalState", "paymentTemplateForm", "isSavingTemplate"], outputs: ["closeModal", "openModal", "submitForm"] }], directives: [{ type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1$7.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i7.KeyboardClickDirective, selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i11.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i11.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i11.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomReviewScreenComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-custom-review-screen',
                    templateUrl: './custom-review-screen.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1$9.FormBuilder }, { type: i2$6.StateService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [PUBSUB]
                }] }, { type: i2$6.NavigationService }, { type: i3$2.CreatePaymentService }, { type: i2$6.RoutableModalService, decorators: [{
                    type: Optional
                }] }, { type: i2$6.PaymentOrderHttpService }, { type: i3$2.CreatePaymentConfigSetupService }, { type: i4$1.TransactionSigningHelperService, decorators: [{
                    type: Optional
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN]
                }] }]; } });

class CustomLoanPaymentsModule {
}
/** @nocollapse */ CustomLoanPaymentsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomLoanPaymentsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ CustomLoanPaymentsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomLoanPaymentsModule, declarations: [CustomReviewScreenComponent, CustomScheduleDetailsComponent], imports: [CommonModule, ReviewPaymentModule, PaymentOrdersUiModule] });
/** @nocollapse */ CustomLoanPaymentsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomLoanPaymentsModule, imports: [[CommonModule, ReviewPaymentModule, PaymentOrdersUiModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomLoanPaymentsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ReviewPaymentModule, PaymentOrdersUiModule],
                    declarations: [CustomReviewScreenComponent, CustomScheduleDetailsComponent],
                    schemas: [],
                }]
        }] });

// @dynamic
class LoanInfoCustomLinkDirective {
    constructor(document, renderer) {
        this.document = document;
        this.renderer = renderer;
        /**
         * Link target
         *
         * @default '_self'
         */
        this.target = '_self';
    }
    simulateLinkClick() {
        const linkEl = this.renderer.createElement('a');
        this.renderer.setAttribute(linkEl, 'href', this.linkUrl);
        this.renderer.setAttribute(linkEl, 'target', this.target);
        if (this.downloadName) {
            this.renderer.setAttribute(linkEl, 'download', this.downloadName);
        }
        this.renderer.appendChild(this.document.body, linkEl);
        linkEl.click();
        this.renderer.removeChild(this.document.body, linkEl);
    }
}
/** @nocollapse */ LoanInfoCustomLinkDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCustomLinkDirective, deps: [{ token: DOCUMENT }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ LoanInfoCustomLinkDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoCustomLinkDirective, selector: "[bbLoanInfoCustomLink]", inputs: { linkUrl: ["bbLoanInfoCustomLink", "linkUrl"], downloadName: ["bbLoanInfoCustomLinkDownloadName", "downloadName"], target: ["bbLoanInfoCustomLinkTarget", "target"] }, host: { listeners: { "click": "simulateLinkClick()", "keydown.enter": "simulateLinkClick()", "keydown.space": "simulateLinkClick()" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCustomLinkDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbLoanInfoCustomLink]',
                }]
        }], ctorParameters: function () { return [{ type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i0.Renderer2 }]; }, propDecorators: { linkUrl: [{
                type: Input,
                args: ['bbLoanInfoCustomLink']
            }], downloadName: [{
                type: Input,
                args: ['bbLoanInfoCustomLinkDownloadName']
            }], target: [{
                type: Input,
                args: ['bbLoanInfoCustomLinkTarget']
            }], simulateLinkClick: [{
                type: HostListener,
                args: ['click']
            }, {
                type: HostListener,
                args: ['keydown.enter']
            }, {
                type: HostListener,
                args: ['keydown.space']
            }] } });

class LoanInfoDocumentsSectionComponent {
    constructor(loansHttpService) {
        this.loansHttpService = loansHttpService;
        this.defaultDocumentName = $localize `:Loan info document default name@@loans.loan-info.document.default-name:Document`;
    }
    /**
     * Loan item
     */
    set loan(value) {
        this.updateLoanDocuments(value);
    }
    /**
     * Document name tag id
     *
     * @param id
     */
    getDocumentNameId(id) {
        return `bb-loan-info-document-${id}`;
    }
    /**
     * Updates loan documents collection
     *
     * @private
     */
    updateLoanDocuments(loan) {
        var _a;
        const loanId = loan.id;
        let id = 1;
        this.loanDocuments = (_a = loan.documents) === null || _a === void 0 ? void 0 : _a.reduce((accum, { documentId, contentType, name }) => {
            if (documentId) {
                const isPreviewAvailable = contentType === 'application/pdf';
                accum.push({
                    name: (name === null || name === void 0 ? void 0 : name.trim()) || `${this.defaultDocumentName} ${id++}`,
                    downloadUrl: this.getLoanDocumentUrl(loanId, documentId),
                    previewUrl: isPreviewAvailable ? this.getLoanDocumentUrl(loanId, documentId, true) : undefined,
                });
            }
            return accum;
        }, []);
    }
    /**
     * Construct formatted url for preview or download
     *
     * @private
     */
    getLoanDocumentUrl(loanId, documentId, inline) {
        return this.loansHttpService.downloadDocumentByLoanIdAndDocumentIdUrl({
            loanId,
            documentId,
            inline,
        });
    }
}
/** @nocollapse */ LoanInfoDocumentsSectionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoDocumentsSectionComponent, deps: [{ token: i1$a.LoansHttpService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanInfoDocumentsSectionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoDocumentsSectionComponent, selector: "bb-loan-info-documents-section", inputs: { loan: "loan" }, ngImport: i0, template: "<ul class=\"bb-list bb-list--no-separator bb-list--density-none\">\n  <li\n    *ngFor=\"let document of loanDocuments; let index = index\"\n    class=\"bb-list__item bb-stack bb-loans-loan-info-documents-section\"\n    [class.bb-loans-loan-info-documents-section--no-preview]=\"!document.previewUrl\"\n    data-role=\"loan-info-document\"\n  >\n    <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-sm\" name=\"description\" color=\"neutral-dark\"></bb-icon-ui>\n    <bb-ellipsis-ui\n      [id]=\"getDocumentNameId(index)\"\n      class=\"bb-stack__item bb-stack__item--fill bb-loans-loan-info-documents-section__name\"\n      [text]=\"document.name\"\n      tooltipTriggers=\"hover click\"\n      data-role=\"loan-info-document__name\"\n    ></bb-ellipsis-ui>\n    <button\n      *ngIf=\"document.previewUrl as previewUrl\"\n      class=\"bb-stack__item d-print-none\"\n      bbButton\n      color=\"link\"\n      type=\"button\"\n      [circle]=\"true\"\n      [bbLoanInfoCustomLink]=\"previewUrl\"\n      bbLoanInfoCustomLinkTarget=\"_blank\"\n      [attr.aria-describedby]=\"getDocumentNameId(index)\"\n      i18n-aria-label=\"Loan info preview document button aria label@@loans.loan-info.preview-document.button.aria-label\"\n      aria-label=\"View online\"\n      data-role=\"loan-info-document__preview-btn\"\n    >\n      <bb-icon-ui name=\"open-in-new\"></bb-icon-ui>\n    </button>\n    <button\n      class=\"bb-stack__item d-print-none\"\n      bbButton\n      color=\"link\"\n      type=\"button\"\n      [circle]=\"true\"\n      [bbLoanInfoCustomLink]=\"document.downloadUrl\"\n      [bbLoanInfoCustomLinkDownloadName]=\"document.name\"\n      [attr.aria-describedby]=\"getDocumentNameId(index)\"\n      i18n-aria-label=\"\n        Loan info download document button aria label@@loans.loan-info.download-document.button.aria-label\"\n      aria-label=\"Download\"\n      data-role=\"loan-info-document__download-btn\"\n    >\n      <bb-icon-ui name=\"get-app\"></bb-icon-ui>\n    </button>\n  </li>\n</ul>\n", components: [{ type: i1$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3$3.EllipsisComponent, selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: LoanInfoCustomLinkDirective, selector: "[bbLoanInfoCustomLink]", inputs: ["bbLoanInfoCustomLink", "bbLoanInfoCustomLinkDownloadName", "bbLoanInfoCustomLinkTarget"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoDocumentsSectionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-info-documents-section',
                    templateUrl: './loan-info-documents-section.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1$a.LoansHttpService }]; }, propDecorators: { loan: [{
                type: Input
            }] } });

class LoanInfoCustomLinkModule {
}
/** @nocollapse */ LoanInfoCustomLinkModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCustomLinkModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanInfoCustomLinkModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCustomLinkModule, declarations: [LoanInfoCustomLinkDirective], imports: [CommonModule], exports: [LoanInfoCustomLinkDirective] });
/** @nocollapse */ LoanInfoCustomLinkModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCustomLinkModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCustomLinkModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanInfoCustomLinkDirective],
                    imports: [CommonModule],
                    exports: [LoanInfoCustomLinkDirective],
                }]
        }] });

class LoanInfoDocumentsSectionModule {
}
/** @nocollapse */ LoanInfoDocumentsSectionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoDocumentsSectionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanInfoDocumentsSectionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoDocumentsSectionModule, declarations: [LoanInfoDocumentsSectionComponent], imports: [CommonModule, EllipsisModule, ButtonModule, IconModule, LoanInfoCustomLinkModule], exports: [LoanInfoDocumentsSectionComponent] });
/** @nocollapse */ LoanInfoDocumentsSectionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoDocumentsSectionModule, imports: [[CommonModule, EllipsisModule, ButtonModule, IconModule, LoanInfoCustomLinkModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoDocumentsSectionModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanInfoDocumentsSectionComponent],
                    imports: [CommonModule, EllipsisModule, ButtonModule, IconModule, LoanInfoCustomLinkModule],
                    exports: [LoanInfoDocumentsSectionComponent],
                }]
        }] });

class LoanInfoTermItemComponent {
}
/** @nocollapse */ LoanInfoTermItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoTermItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanInfoTermItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoTermItemComponent, selector: "bb-loan-info-term-item", inputs: { loan: "loan" }, ngImport: i0, template: "<div class=\"bb-text-bold bb-block bb-block--xs\" i18n=\"Loan info term title@@loans.loan-info.term.title\">Term</div>\n<div i18n=\"Loan info term value@@loans.loan-info.term.value\" data-role=\"loan-info-term-value\">\n  {{ loan.termCount }} {loan.termUnit, select, Day {day} Week {week} Month {month} Year {year}}{loan.termCount, plural,\n  =1 {} other {s}}\n</div>\n", changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoTermItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-info-term-item',
                    templateUrl: './loan-info-term-item.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { loan: [{
                type: Input
            }] } });

class LoanInfoTermItemModule {
}
/** @nocollapse */ LoanInfoTermItemModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoTermItemModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanInfoTermItemModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoTermItemModule, declarations: [LoanInfoTermItemComponent], imports: [CommonModule], exports: [LoanInfoTermItemComponent] });
/** @nocollapse */ LoanInfoTermItemModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoTermItemModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoTermItemModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanInfoTermItemComponent],
                    imports: [CommonModule],
                    exports: [LoanInfoTermItemComponent],
                }]
        }] });

class LoanInfoCollateralSectionComponent {
    /**
     * Loan item
     */
    set loan(loan) {
        var _a;
        this.collaterals = (_a = loan.collateral) === null || _a === void 0 ? void 0 : _a.filter((item) => Object.values(item).some((val) => val));
    }
}
/** @nocollapse */ LoanInfoCollateralSectionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCollateralSectionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanInfoCollateralSectionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoCollateralSectionComponent, selector: "bb-loan-info-collateral-section", inputs: { loan: "loan" }, ngImport: i0, template: "<div class=\"bb-list bb-list--density-sm bb-list--no-separator\">\n  <div class=\"bb-list__item\" *ngFor=\"let collateral of collaterals\" data-role=\"loan-info-collateral\">\n    <div class=\"bb-card bb-card--sm bb-card--shadowless bb-card--highlight\">\n      <div class=\"bb-card__body row bb-loans-loan-info-collateral-card\">\n        <div *ngIf=\"collateral.type\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n          <div\n            class=\"bb-text-bold bb-block bb-block--xs\"\n            data-role=\"loan-info-collateral__type-label\"\n            i18n=\"Loan info collateral type title@@loans.loan-info.collateral.type.title\"\n          >\n            Type of collateral\n          </div>\n          <div data-role=\"loan-info-collateral__type\">{{ collateral.type }}</div>\n        </div>\n        <div *ngIf=\"collateral.currencyCode && collateral.currentValue\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n          <div\n            class=\"bb-text-bold bb-block bb-block--xs\"\n            data-role=\"loan-info-collateral__current-value-label\"\n            i18n=\"Loan info collateral current value title@@loans.loan-info.collateral.current-value.title\"\n          >\n            Current value\n          </div>\n          <div>\n            <bb-amount-ui\n              data-role=\"loan-info-collateral__current-value\"\n              [amount]=\"collateral.currentValue\"\n              [currency]=\"collateral.currencyCode\"\n              [mapCurrency]=\"false\"\n            ></bb-amount-ui>\n          </div>\n        </div>\n        <div *ngIf=\"collateral.specification\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n          <div\n            class=\"bb-text-bold bb-block bb-block--xs\"\n            data-role=\"loan-info-collateral__specification-label\"\n            i18n=\"Loan info collateral specification title@@loans.loan-info.collateral.specification.title\"\n          >\n            Specification\n          </div>\n          <div data-role=\"loan-info-collateral__specification\">{{ collateral.specification }}</div>\n        </div>\n        <div *ngIf=\"collateral.nextRevaluationDate\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n          <div\n            class=\"bb-text-bold bb-block bb-block--xs\"\n            data-role=\"loan-info-collateral__next-revaluation-date-label\"\n            i18n=\"\n              Loan info collateral next revaluation date title@@loans.loan-info.collateral.next-revaluation-date.title\"\n          >\n            Next revaluation date\n          </div>\n          <div data-role=\"loan-info-collateral__next-revaluation-date\">\n            {{ collateral.nextRevaluationDate | bbDate }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i2$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "bbDate": i3.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCollateralSectionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-info-collateral-section',
                    templateUrl: './loan-info-collateral-section.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { loan: [{
                type: Input
            }] } });

class LoanInfoCollateralSectionModule {
}
/** @nocollapse */ LoanInfoCollateralSectionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCollateralSectionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanInfoCollateralSectionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCollateralSectionModule, declarations: [LoanInfoCollateralSectionComponent], imports: [CommonModule, AmountModule, BbDatePipeModule], exports: [LoanInfoCollateralSectionComponent] });
/** @nocollapse */ LoanInfoCollateralSectionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCollateralSectionModule, imports: [[CommonModule, AmountModule, BbDatePipeModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoCollateralSectionModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanInfoCollateralSectionComponent],
                    imports: [CommonModule, AmountModule, BbDatePipeModule],
                    exports: [LoanInfoCollateralSectionComponent],
                }]
        }] });

class LoanInfoEscrowSectionComponent {
    constructor() {
        /**
         * Amount item type
         */
        this.amountItemType = LoanInfoItemType.Amount;
    }
}
/** @nocollapse */ LoanInfoEscrowSectionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoEscrowSectionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanInfoEscrowSectionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoEscrowSectionComponent, selector: "bb-loan-info-escrow-section", inputs: { loan: "loan" }, ngImport: i0, template: "<div class=\"row bb-loans-loan-info__section\">\n  <div *ngIf=\"loan.escrow?.totalAmount as totalAmount\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n    <bb-loan-info-item\n      [value]=\"totalAmount\"\n      [currencyCode]=\"loan.currencyCode\"\n      [type]=\"amountItemType\"\n      title=\"Total amount\"\n      i18n-title=\"Loan info escrow total amount title@@loans.loan-info.escrow.total-amount.title\"\n    >\n    </bb-loan-info-item>\n  </div>\n  <div *ngIf=\"loan.escrow?.tax as tax\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n    <bb-loan-info-item\n      [value]=\"tax\"\n      [currencyCode]=\"loan.currencyCode\"\n      [type]=\"amountItemType\"\n      title=\"Tax\"\n      i18n-title=\"Loan info escrow tax title@@loans.loan-info.escrow.tax.title\"\n    >\n    </bb-loan-info-item>\n  </div>\n  <div *ngIf=\"loan.escrow?.insurance as insurance\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n    <bb-loan-info-item\n      [value]=\"insurance\"\n      [currencyCode]=\"loan.currencyCode\"\n      [type]=\"amountItemType\"\n      title=\"Insurance\"\n      i18n-title=\"Loan info escrow insurance title@@loans.loan-info.escrow.insurance.title\"\n    >\n    </bb-loan-info-item>\n  </div>\n  <div *ngIf=\"loan.escrow?.pmi as pmi\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n    <bb-loan-info-item\n      [value]=\"pmi\"\n      [currencyCode]=\"loan.currencyCode\"\n      [type]=\"amountItemType\"\n      title=\"PMI\"\n      i18n-title=\"Loan info escrow pmi title@@loans.loan-info.escrow.pmi.title\"\n    >\n    </bb-loan-info-item>\n  </div>\n  <div *ngIf=\"loan.escrow?.fees as fees\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n    <bb-loan-info-item\n      [value]=\"fees\"\n      [currencyCode]=\"loan.currencyCode\"\n      [type]=\"amountItemType\"\n      title=\"Fees\"\n      i18n-title=\"Loan info escrow fees title@@loans.loan-info.escrow.fees.title\"\n    >\n    </bb-loan-info-item>\n  </div>\n  <div *ngIf=\"loan.escrow?.other as other\" class=\"col-sm-6 col-12 bb-block bb-block--lg\">\n    <bb-loan-info-item\n      [value]=\"other\"\n      [currencyCode]=\"loan.currencyCode\"\n      [type]=\"amountItemType\"\n      title=\"Other\"\n      i18n-title=\"Loan info escrow other title@@loans.loan-info.escrow.other.title\"\n    >\n    </bb-loan-info-item>\n  </div>\n</div>\n", components: [{ type: LoanInfoItemComponent, selector: "bb-loan-info-item", inputs: ["title", "value", "type", "currencyCode", "isCurrencySymbolUsed"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoEscrowSectionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-info-escrow-section',
                    templateUrl: './loan-info-escrow-section.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { loan: [{
                type: Input
            }] } });

class LoanInfoEscrowSectionModule {
}
/** @nocollapse */ LoanInfoEscrowSectionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoEscrowSectionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ LoanInfoEscrowSectionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoEscrowSectionModule, declarations: [LoanInfoEscrowSectionComponent], imports: [CommonModule, AmountModule, LoanInfoItemModule], exports: [LoanInfoEscrowSectionComponent] });
/** @nocollapse */ LoanInfoEscrowSectionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoEscrowSectionModule, imports: [[CommonModule, AmountModule, LoanInfoItemModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoEscrowSectionModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LoanInfoEscrowSectionComponent],
                    imports: [CommonModule, AmountModule, LoanInfoItemModule],
                    exports: [LoanInfoEscrowSectionComponent],
                }]
        }] });

var AccountRole;
(function (AccountRole) {
    AccountRole["DEBTOR"] = "DEBTOR";
    AccountRole["CREDITOR"] = "CREDITOR";
})(AccountRole || (AccountRole = {}));
var PaymentOptions;
(function (PaymentOptions) {
    PaymentOptions["LoanPayment"] = "LoanPayment";
    PaymentOptions["LoanAdvance"] = "LoanAdvance";
})(PaymentOptions || (PaymentOptions = {}));

/**
 * Generated bundle index. Do not edit.
 */

export { AccountRole, CustomLoanPaymentsModule, CustomLoanStatus, CustomReviewScreenComponent, DestroyableComponent, LoanAmortizedPaymentScheduleDetailsComponent, LoanAmortizedPaymentScheduleDetailsModule, LoanAmortizedPaymentScheduleListComponent, LoanAmortizedPaymentScheduleListModule, LoanAmortizedPaymentScheduleTableComponent, LoanAmortizedPaymentScheduleTableModule, LoanConfigBaseComponent, LoanDefaultViewType, LoanInfoCollateralSectionComponent, LoanInfoCollateralSectionModule, LoanInfoComponent, LoanInfoCustomLinkDirective, LoanInfoCustomLinkModule, LoanInfoCustomSectionDirective, LoanInfoDocumentsSectionComponent, LoanInfoDocumentsSectionModule, LoanInfoEscrowSectionComponent, LoanInfoEscrowSectionModule, LoanInfoItemComponent, LoanInfoItemModule, LoanInfoItemType, LoanInfoModule, LoanInfoPrintButtonComponent, LoanInfoPrintButtonModule, LoanInfoTermItemComponent, LoanInfoTermItemModule, LoanItemMenuComponent, LoanItemMenuModule, LoanItemNameComponent, LoanItemNameModule, LoanItemPaymentInfoComponent, LoanItemPaymentInfoModule, LoanItemStatusComponent, LoanItemStatusModule, LoanItemTypeComponent, LoanItemTypeModule, LoanListItemComponent, LoanListItemModule, LoanPaymentInfoType, LoanPaymentScheduleComponent, LoanPaymentScheduleModule, LoanSummaryAmountItemComponent, LoanSummaryAmountItemModule, LoanSummaryContainerComponent, LoanSummaryContainerModule, LoanSummaryFormulaComponent, LoanSummaryFormulaModule, LoanSummaryFormulaViewType, LoanSummaryOverdueBannerComponent, LoanSummaryOverdueBannerModule, LoanSummaryProgressBarComponent, LoanSummaryProgressBarModule, LoansCollectionUiAngModule, LoansHeadingComponent, LoansHeadingModule, LoansInitialEmptyComponent, LoansInitialEmptyModule, LoansMainContainerComponent, LoansMainContainerModule, LoansTabsComponent, LoansTabsModule, PaymentOptions, RetailLoanItemPaymentInfoComponent, RetailLoanSummaryContainerComponent, RetailLoanSummaryContainerModule, getLoanAlias, isLoanOverdue, loanItemStatusColorMap };
//# sourceMappingURL=backbase-loans-collection-ui-ang.js.map
