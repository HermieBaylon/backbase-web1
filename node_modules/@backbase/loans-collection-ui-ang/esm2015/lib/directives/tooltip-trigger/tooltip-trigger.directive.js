import { Directive, ElementRef, Host, HostListener, Renderer2 } from '@angular/core';
import { debounceTime, takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import { TooltipDirective } from '@backbase/ui-ang/tooltip-directive';
import { DestroyableComponent } from '../../base/destroyable.component';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/tooltip-directive";
export class TooltipTriggerDirective extends DestroyableComponent {
    constructor(tooltip, elementRef, renderer) {
        super();
        this.tooltip = tooltip;
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.tooltipVisibility$$ = new Subject();
        this.tooltip.triggers = 'manual';
        this.renderer.setAttribute(this.elementRef.nativeElement, 'tabindex', '0');
    }
    ngOnInit() {
        this.tooltipVisibility$$.pipe(debounceTime(100), takeUntil(this.componentDestroyed$)).subscribe((isVisible) => {
            if (isVisible) {
                this.tooltip.open();
            }
            else {
                this.tooltip.close();
            }
        });
    }
    open() {
        this.tooltipVisibility$$.next(true);
    }
    close() {
        this.tooltipVisibility$$.next(false);
    }
    toggle() {
        this.tooltipVisibility$$.next(!this.tooltip.isOpen());
    }
}
/** @nocollapse */ TooltipTriggerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipTriggerDirective, deps: [{ token: i1.TooltipDirective, host: true }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ TooltipTriggerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: TooltipTriggerDirective, selector: "[bbTooltipTrigger]", host: { listeners: { "mouseover": "open()", "focusin": "open()", "mouseleave": "close()", "focusout": "close()", "click": "toggle()" } }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbTooltipTrigger]',
                }]
        }], ctorParameters: function () { return [{ type: i1.TooltipDirective, decorators: [{
                    type: Host
                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { open: [{
                type: HostListener,
                args: ['mouseover']
            }, {
                type: HostListener,
                args: ['focusin']
            }], close: [{
                type: HostListener,
                args: ['mouseleave']
            }, {
                type: HostListener,
                args: ['focusout']
            }], toggle: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=tooltip-trigger.directive.js.map