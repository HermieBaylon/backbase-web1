import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { LoanConfigBaseComponent } from '../base/loan-config-base.component';
import * as i0 from "@angular/core";
import * as i1 from "./loan-info-print-button/loan-info-print-button.component";
import * as i2 from "@backbase/ui-ang/header";
import * as i3 from "./loan-info-item/loan-info-item.component";
import * as i4 from "@angular/common";
import * as i5 from "./loan-info-custom-section/loan-info-custom-section.directive";
export class LoanInfoComponent extends LoanConfigBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * Whether currency local should be transformed to symbol
         */
        this.isCurrencySymbolUsed = false;
        /**
         * Filtered info sections
         */
        this.sections = [];
    }
    ngOnChanges() {
        this.filterSections();
    }
    /**
     * Typed reference to info item
     *
     * @param item
     */
    getTypedDataItem(item) {
        return item;
    }
    /**
     * Typed reference to custom item component ref
     *
     * @param item
     */
    getItemComponentRef(item) {
        return item.componentRef;
    }
    /**
     * Track by method used by *ngFor directive
     *
     * @param _index
     * @param title
     */
    trackByTitle(_index, { title }) {
        return title;
    }
    /**
     * Filter sections by the items.
     * There are two options:
     * - check for the `showItem` function execution
     * - check the property value by `fieldKey`
     *
     * In case if all items in the section do not fit the condition, the sections will be omitted
     *
     * @private
     */
    filterSections() {
        this.sections = this.dataConfig.reduce((accum, section) => {
            const items = section.items.filter((item) => item.showItem
                ? item.showItem.call(undefined, this.loan)
                : Boolean(this.loan[item.fieldKey]));
            if (items.length) {
                accum.push(Object.assign(Object.assign({}, section), { items }));
            }
            return accum;
        }, []);
    }
}
/** @nocollapse */ LoanInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanInfoComponent, selector: "bb-loan-info", inputs: { isCurrencySymbolUsed: "isCurrencySymbolUsed" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div class=\"bb-loans-loan-info\">\n  <bb-loan-info-print-button class=\"bb-loans-loan-info__print-btn\"></bb-loan-info-print-button>\n\n  <div class=\"bb-list\">\n    <section\n      *ngFor=\"let section of sections; trackBy: trackByTitle\"\n      class=\"bb-list__item\"\n      data-role=\"loan-info-section\"\n    >\n      <bb-header-ui\n        [heading]=\"section.title\"\n        headingType=\"h3\"\n        headingClasses=\"bb-block bb-block--lg\"\n        data-role=\"loan-info-section__header\"\n      ></bb-header-ui>\n\n      <div class=\"row bb-loans-loan-info__section\">\n        <div\n          *ngFor=\"let item of section.items\"\n          [ngClass]=\"item.cssClasses\"\n          class=\"bb-block bb-block--lg\"\n          data-role=\"loan-info-section__item-wrapper\"\n        >\n          <ng-container *ngIf=\"getTypedDataItem(item).fieldKey; else customItemRef\">\n            <bb-loan-info-item\n              data-role=\"loan-info-section__data-item\"\n              *ngIf=\"getTypedDataItem(item) as dataItem\"\n              [value]=\"loan[dataItem.fieldKey]\"\n              [title]=\"dataItem.title\"\n              [type]=\"dataItem.fieldType\"\n              [currencyCode]=\"loan.currencyCode\"\n            >\n            </bb-loan-info-item>\n          </ng-container>\n\n          <ng-template #customItemRef>\n            <ng-container\n              bbLoanInfoCustomSection\n              [componentRef]=\"getItemComponentRef(item)\"\n              [loan]=\"loan\"\n            ></ng-container>\n          </ng-template>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n", components: [{ type: i1.LoanInfoPrintButtonComponent, selector: "bb-loan-info-print-button" }, { type: i2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i3.LoanInfoItemComponent, selector: "bb-loan-info-item", inputs: ["title", "value", "type", "currencyCode", "isCurrencySymbolUsed"] }], directives: [{ type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.LoanInfoCustomSectionDirective, selector: "[bbLoanInfoCustomSection]", inputs: ["componentRef", "loan"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanInfoComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-info',
                    templateUrl: './loan-info.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { isCurrencySymbolUsed: [{
                type: Input
            }] } });
//# sourceMappingURL=loan-info.component.js.map