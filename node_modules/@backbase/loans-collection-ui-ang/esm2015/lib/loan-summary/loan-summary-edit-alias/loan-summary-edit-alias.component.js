import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Optional, Output } from '@angular/core';
import { InputInlineEditState } from '@backbase/ui-ang/input-inline-edit';
import { ACCOUNT_ALIAS_DISPLAYING_LEVEL, AccountAliasDisplayingLevel } from '@backbase/product-summary-common-ang';
import { aliasDisplayLevel } from './loan-summary-edit-alias.model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/input-inline-edit";
import * as i2 from "../../loan-list-item/loan-item-name/loan-item-name.component";
import * as i3 from "./loan-summary-edit-alias-confirm-modal/loan-summary-edit-alias-confirm-modal.component";
import * as i4 from "@backbase/product-summary-common-ang";
export class LoanSummaryEditAliasComponent {
    constructor(accountAliasDisplayingLevel) {
        this.accountAliasDisplayingLevel = accountAliasDisplayingLevel;
        this._editState = InputInlineEditState.IDLE;
        /**
         * Max length for alias
         */
        this.aliasMaxLength = 50;
        /**
         * Emit on alias edit state changes
         */
        this.editStateChange = new EventEmitter();
        /**
         * Emits on alias changes
         */
        this.updateAlias = new EventEmitter();
        /**
         * Emits on canceling update for alias
         */
        this.cancelAliasUpdate = new EventEmitter();
        /**
         *  Flag represents modal open state
         */
        this.isOpen = false;
        this.accountAliasDisplayingLevel = accountAliasDisplayingLevel || AccountAliasDisplayingLevel.USER;
        this.aliasHint = this.getAliasHint();
    }
    /**
     * Alias inline edit state
     *
     * @param value
     */
    set editState(value) {
        this._editState = value;
    }
    get editState() {
        return this._editState;
    }
    onAcceptAlias(alias) {
        if ([this.newAlias, this.alias].includes(alias)) {
            this.onEditStateChange(InputInlineEditState.IDLE);
            return;
        }
        if (this.accountAliasDisplayingLevel === AccountAliasDisplayingLevel.ACCOUNT) {
            this.newAlias = alias;
            this.isOpen = true;
        }
        else {
            this.updateAlias.emit(alias);
        }
    }
    onConfirmModal() {
        this.isOpen = false;
        this.updateAlias.emit(this.newAlias);
    }
    onCloseModal() {
        this.isOpen = false;
        this.onEditStateChange(InputInlineEditState.IDLE);
    }
    onEditStateChange(state) {
        this._editState = state;
        this.editStateChange.emit(state);
    }
    getAliasHint() {
        switch (this.accountAliasDisplayingLevel) {
            case AccountAliasDisplayingLevel.USER: {
                return aliasDisplayLevel.user;
            }
            case AccountAliasDisplayingLevel.ACCOUNT: {
                return aliasDisplayLevel.account;
            }
        }
    }
}
/** @nocollapse */ LoanSummaryEditAliasComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasComponent, deps: [{ token: ACCOUNT_ALIAS_DISPLAYING_LEVEL, optional: true }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanSummaryEditAliasComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryEditAliasComponent, selector: "bb-loan-summary-edit-alias", inputs: { alias: "alias", aliasMaxLength: "aliasMaxLength", showEditButton: "showEditButton", editState: "editState" }, outputs: { editStateChange: "editStateChange", updateAlias: "updateAlias", cancelAliasUpdate: "cancelAliasUpdate" }, ngImport: i0, template: "<bb-input-inline-edit-ui\n  [inputText]=\"alias\"\n  [maxLength]=\"aliasMaxLength\"\n  [canEdit]=\"showEditButton\"\n  [hint]=\"aliasHint\"\n  [inputInlineTemplate]=\"customTemplate\"\n  [hasLoadingState]=\"true\"\n  [state]=\"editState\"\n  (accept)=\"onAcceptAlias($event)\"\n  (stateChange)=\"onEditStateChange($event)\"\n  (cancel)=\"cancelAliasUpdate.emit()\"\n  data-role=\"bb-loan-summary-edit-alias__inline-edit\"\n>\n</bb-input-inline-edit-ui>\n\n<ng-template let-text=\"inputText\" #customTemplate>\n  <bb-loan-item-name\n    [headingLevel]=\"3\"\n    [loanName]=\"text\"\n    class=\"bb-stack__item bb-stack__item--spacing-sm\"\n  ></bb-loan-item-name>\n</ng-template>\n\n<bb-loan-summary-edit-alias-confirm-modal\n  data-role=\"bb-loan-summary-edit-alias__confirm-modal\"\n  [isOpen]=\"isOpen\"\n  (confirmModal)=\"onConfirmModal()\"\n  (closeModal)=\"onCloseModal()\"\n></bb-loan-summary-edit-alias-confirm-modal>\n", components: [{ type: i1.InputInlineEditComponent, selector: "bb-input-inline-edit-ui", inputs: ["state", "canEdit", "hasLoadingState", "inputInlineTemplate", "inputText", "maxLength", "minLength", "maxValue", "minValue", "autofocus", "ariaLabelAccept", "ariaLabelCancel", "ariaLabelEdit", "tooltipAccept", "tooltipCancel", "tooltipEdit", "autocomplete", "pattern", "hint"], outputs: ["stateChange", "cancel", "accept"] }, { type: i2.LoanItemNameComponent, selector: "bb-loan-item-name", inputs: ["loanName", "headingLevel"] }, { type: i3.LoanSummaryEditAliasConfirmModalComponent, selector: "bb-loan-summary-edit-alias-confirm-modal", inputs: ["isOpen"], outputs: ["closeModal", "confirmModal"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryEditAliasComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-summary-edit-alias',
                    templateUrl: './loan-summary-edit-alias.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i4.AccountAliasDisplayingLevel, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [ACCOUNT_ALIAS_DISPLAYING_LEVEL]
                }] }]; }, propDecorators: { alias: [{
                type: Input
            }], aliasMaxLength: [{
                type: Input
            }], showEditButton: [{
                type: Input
            }], editState: [{
                type: Input
            }], editStateChange: [{
                type: Output
            }], updateAlias: [{
                type: Output
            }], cancelAliasUpdate: [{
                type: Output
            }] } });
//# sourceMappingURL=loan-summary-edit-alias.component.js.map