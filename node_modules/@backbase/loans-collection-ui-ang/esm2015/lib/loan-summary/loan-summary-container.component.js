import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { drawAmountMenuItem, editAliasMenuItem, payDownMenuItem, } from './loan-summary-container.model';
import { LoanConfigBaseComponent } from '../base/loan-config-base.component';
import { getLoanAlias, isLoanOverdue } from '../utils/loan.util';
import { InputInlineEditState } from '@backbase/ui-ang/input-inline-edit';
import { MediaQueryService } from '@backbase/ui-ang/media-query-lib';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/media-query-lib";
import * as i2 from "@backbase/ui-ang/icon";
import * as i3 from "./loan-summary-edit-alias/loan-summary-edit-alias.component";
import * as i4 from "../loan-list-item/loan-item-type/loan-item-type.component";
import * as i5 from "../loan-list-item/loan-item-status/loan-item-status.component";
import * as i6 from "../loan-list-item/loan-item-menu/loan-item-menu.component";
import * as i7 from "../loan-list-item/loan-item-payment-info/loan-item-payment-info.component";
import * as i8 from "./loan-summary-overdue-banner/loan-summary-overdue-banner.component";
import * as i9 from "./loan-summary-progress-bar/loan-summary-progress-bar.component";
import * as i10 from "./loan-summary-amount-item/loan-summary-amount-item.component";
import * as i11 from "./loan-summary-formula/loan-summary-formula.component";
import * as i12 from "@angular/common";
import * as i13 from "@backbase/ui-ang/button";
export class LoanSummaryContainerComponent extends LoanConfigBaseComponent {
    constructor(mediaQueryService) {
        super();
        this.mediaQueryService = mediaQueryService;
        /**
         * Indicator to show/hide `payDown` button
         *
         * @default true
         */
        this.showPayDownButton = true;
        /**
         * Indicator to show/hide `payDown` button
         *
         * @default true
         */
        this.showDrawAmountButton = true;
        /**
         * Indicator to show/hide `edit alias` button
         *
         * @default true
         */
        this.showEditAliasButton = true;
        /**
         * Draw amount event emitter
         */
        this.drawAmount = new EventEmitter();
        /**
         * Pay down event emitter
         */
        this.payDown = new EventEmitter();
        /**
         * Emits on accepting new alias for save
         */
        this.updateAlias = new EventEmitter();
        /**
         * Emits in canceling current alias update
         */
        this.cancelAliasUpdate = new EventEmitter();
        /**
         * Flag represents the screen resolution wider that `md` breakpoint
         */
        this.isWiderThanMobile$ = this.mediaQueryService.isMediaBreakpointMatches('min-width', 'md');
    }
    /**
     * Represents alias update state
     */
    set aliasEditState(value) {
        this._aliasEditState = value;
    }
    get aliasEditState() {
        return this._aliasEditState;
    }
    /**
     * Flag represents IDLE state for alias editing
     */
    get isAliasEditIdleState() {
        return this._aliasEditState === InputInlineEditState.IDLE;
    }
    /**
     * @internal
     */
    ngOnChanges() {
        this.showOverdueBanner = isLoanOverdue(this.loan);
        this.loanAlias = getLoanAlias(this.loan);
        this.menuItems = this.getMenuItems();
        this.loanIconName = this.dataConfig.icons[this.loan.viewType];
    }
    /**
     * Select an item for the context menu
     *
     * @param itemKey
     */
    onSelectMenuItem(itemKey) {
        switch (itemKey) {
            case 'editAlias':
                this._aliasEditState = InputInlineEditState.EDITING;
                break;
            case 'payDown':
                this.payDown.emit();
                break;
            case 'drawAmount':
                this.drawAmount.emit();
        }
    }
    getMenuItems() {
        const menuItems = [];
        if (this.showPayDownButton) {
            menuItems.push(payDownMenuItem);
        }
        if (this.showDrawAmountButton) {
            menuItems.push(drawAmountMenuItem);
        }
        if (this.showEditAliasButton) {
            menuItems.push(editAliasMenuItem);
        }
        return menuItems;
    }
}
/** @nocollapse */ LoanSummaryContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryContainerComponent, deps: [{ token: i1.MediaQueryService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ LoanSummaryContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanSummaryContainerComponent, selector: "bb-loan-summary-container", inputs: { showPayDownButton: "showPayDownButton", showDrawAmountButton: "showDrawAmountButton", showEditAliasButton: "showEditAliasButton", aliasEditState: "aliasEditState" }, outputs: { drawAmount: "drawAmount", payDown: "payDown", updateAlias: "updateAlias", cancelAliasUpdate: "cancelAliasUpdate" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div class=\"bb-stack\">\n  <bb-icon-ui\n    *ngIf=\"isAliasEditIdleState\"\n    [name]=\"loanIconName\"\n    class=\"bb-stack__item bb-stack__item--align-top bb-d-lg-inline-flex bb-d-none\"\n    data-role=\"loans-summary__loan-icon\"\n    backgroundType=\"square\"\n    color=\"secondary\"\n    size=\"lg\"\n  ></bb-icon-ui>\n  <div class=\"bb-stack__item bb-stack__item--fill\">\n    <div class=\"bb-loans-summary-alias-wrapper\" [class.bb-loans-summary-alias-wrapper--editing]=\"!isAliasEditIdleState\">\n      <bb-loan-summary-edit-alias\n        [alias]=\"loanAlias\"\n        [showEditButton]=\"showEditAliasButton && (isWiderThanMobile$ | async)!\"\n        [(editState)]=\"aliasEditState\"\n        (updateAlias)=\"updateAlias.emit($event)\"\n        (cancelAliasUpdate)=\"cancelAliasUpdate.emit()\"\n        data-role=\"loans-summary__edit-alias\"\n      >\n      </bb-loan-summary-edit-alias>\n    </div>\n    <div *ngIf=\"isAliasEditIdleState\">\n      <bb-loan-item-type [loanType]=\"loan.loanTypeAlias\"></bb-loan-item-type>\n      <bb-loan-item-status [status]=\"loan.loanStatus\"></bb-loan-item-status>\n    </div>\n  </div>\n  <div class=\"bb-stack__item bb-stack__item--no-shrink bb-stack__item--align-top\">\n    <ng-container *ngIf=\"isWiderThanMobile$ | async; else contextMenuRef\">\n      <button\n        *ngIf=\"showPayDownButton\"\n        (click)=\"payDown.emit()\"\n        class=\"bb-stack__item bb-inline-stack bb-inline-stack--density-sm\"\n        color=\"primary\"\n        bbButton\n        data-role=\"loans-summary__pay-down-btn\"\n      >\n        <bb-icon-ui name=\"call-received\" class=\"bb-inline-stack__item\"></bb-icon-ui>\n        <span\n          class=\"bb-inline-stack__item\"\n          i18n=\"Loan summary pay down button text@@loans.loan-summary.button.pay-down.text\"\n        >\n          Pay Down\n        </span>\n      </button>\n      <button\n        *ngIf=\"showDrawAmountButton\"\n        (click)=\"drawAmount.emit()\"\n        class=\"bb-stack__item bb-inline-stack bb-inline-stack--density-sm\"\n        color=\"secondary\"\n        bbButton\n        data-role=\"loans-summary__draw-amount-btn\"\n      >\n        <bb-icon-ui name=\"savings-accounts\" class=\"bb-inline-stack__item\"></bb-icon-ui>\n        <span\n          class=\"bb-inline-stack__item\"\n          i18n=\"Loan summary draw amount button text@@loans.loan-summary.button.draw-amount.text\"\n        >\n          Draw Amount\n        </span>\n      </button>\n    </ng-container>\n\n    <ng-template #contextMenuRef>\n      <bb-loan-item-menu\n        data-role=\"loans-summary__menu-items\"\n        *ngIf=\"menuItems.length > 0 && isAliasEditIdleState\"\n        [items]=\"menuItems\"\n        (itemSelect)=\"onSelectMenuItem($event)\"\n      ></bb-loan-item-menu>\n    </ng-template>\n  </div>\n</div>\n\n<hr class=\"bb-block bb-block--md\" />\n\n<div class=\"bb-block bb-block--xl\">\n  <bb-loan-item-payment-info [loan]=\"loan\" [dataConfig]=\"dataConfig.paymentInfo\" class=\"bb-subtitle\">\n  </bb-loan-item-payment-info>\n</div>\n\n<bb-loan-summary-overdue-banner\n  *ngIf=\"showOverdueBanner\"\n  [showPayNowButton]=\"false\"\n  [overdueAmount]=\"loan.inArrearsAmount\"\n  [overdueDate]=\"loan.inArrearsDate\"\n  [currencyCode]=\"loan.currencyCode\"\n  (payNow)=\"payDown.emit()\"\n></bb-loan-summary-overdue-banner>\n\n<div class=\"bb-block bb-block--xl\">\n  <bb-loan-summary-progress-bar [loan]=\"loan\" [dataConfig]=\"dataConfig.progressBar\">\n    <div class=\"bb-block bb-block--md bb-text-align-right--sm-up bb-text-align-left\">\n      <bb-loan-summary-amount-item\n        [amount]=\"loan.interestRate\"\n        [showPercent]=\"true\"\n        title=\"Interest rate\"\n        i18n-title=\"Loan summary interest rate title@@loans.loan-summary.interest-rate.title\"\n        titleClasses=\"bb-text-support\"\n      >\n      </bb-loan-summary-amount-item>\n    </div>\n  </bb-loan-summary-progress-bar>\n</div>\n\n<bb-loan-summary-formula [loan]=\"loan\" [dataConfig]=\"dataConfig.formula\"></bb-loan-summary-formula>\n", components: [{ type: i2.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3.LoanSummaryEditAliasComponent, selector: "bb-loan-summary-edit-alias", inputs: ["alias", "aliasMaxLength", "showEditButton", "editState"], outputs: ["editStateChange", "updateAlias", "cancelAliasUpdate"] }, { type: i4.LoanItemTypeComponent, selector: "bb-loan-item-type", inputs: ["loanType", "useSubtitleClass"] }, { type: i5.LoanItemStatusComponent, selector: "bb-loan-item-status", inputs: ["status", "itemStatusColorMap"] }, { type: i6.LoanItemMenuComponent, selector: "bb-loan-item-menu", inputs: ["items", "dropDownButtonLabel", "position"], outputs: ["itemSelect"] }, { type: i7.LoanItemPaymentInfoComponent, selector: "bb-loan-item-payment-info" }, { type: i8.LoanSummaryOverdueBannerComponent, selector: "bb-loan-summary-overdue-banner", inputs: ["overdueAmount", "overdueDate", "currencyCode", "showPayNowButton"], outputs: ["payNow"] }, { type: i9.LoanSummaryProgressBarComponent, selector: "bb-loan-summary-progress-bar" }, { type: i10.LoanSummaryAmountItemComponent, selector: "bb-loan-summary-amount-item", inputs: ["title", "amount", "currency", "isCurrencySymbolUsed", "showPercent", "titleClasses", "amountClasses", "totalAmount", "showLabel"] }, { type: i11.LoanSummaryFormulaComponent, selector: "bb-loan-summary-formula" }], directives: [{ type: i12.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i12.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoanSummaryContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-loan-summary-container',
                    templateUrl: './loan-summary-container.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.MediaQueryService }]; }, propDecorators: { showPayDownButton: [{
                type: Input
            }], showDrawAmountButton: [{
                type: Input
            }], showEditAliasButton: [{
                type: Input
            }], aliasEditState: [{
                type: Input
            }], drawAmount: [{
                type: Output
            }], payDown: [{
                type: Output
            }], updateAlias: [{
                type: Output
            }], cancelAliasUpdate: [{
                type: Output
            }] } });
//# sourceMappingURL=loan-summary-container.component.js.map