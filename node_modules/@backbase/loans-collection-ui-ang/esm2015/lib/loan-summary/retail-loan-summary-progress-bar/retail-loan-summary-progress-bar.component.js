import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import BigNumber from 'bignumber.js';
import { LoanConfigBaseComponent } from '../../base/loan-config-base.component';
import * as i0 from "@angular/core";
import * as i1 from "../loan-summary-amount-item/loan-summary-amount-item.component";
import * as i2 from "@backbase/ui-ang/progressbar";
import * as i3 from "@angular/common";
export class RetailLoanSummaryProgressBarComponent extends LoanConfigBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * Whether all conditions for displaying the activeAmount are met
         */
        this.showActiveAmount = false;
        /**
         * Whether all conditions for displaying the availableAmount are met
         */
        this.showAvailableAmount = false;
        /**
         * Whether all conditions for displaying the totalAmount are met
         */
        this.showTotalAmount = false;
        /**
         * Percentage value for progress bar
         */
        this.progressPercentage = NaN;
        /**
         * Progress type for progress bar
         */
        this.progressType = 'primary';
        /**
         * Flag represents progress bar visibility
         */
        this.isProgressBarVisible = false;
    }
    ngOnChanges() {
        this.updateProperties();
    }
    getProgressPercentage(activeAmount, totalAmount) {
        return totalAmount.isLessThanOrEqualTo(0) || activeAmount.isLessThan(0)
            ? NaN
            : Math.floor(activeAmount.div(totalAmount).toNumber() * 100);
    }
    updateProperties() {
        this.activeAmount = this.loan[this.dataConfig.activeAmount.fieldKey];
        this.availableAmount = this.loan[this.dataConfig.availableAmount.fieldKey];
        this.totalAmount = this.loan[this.dataConfig.totalAmount.fieldKey];
        let showProgressBar;
        if (this.dataConfig.showData) {
            this.showActiveAmount = this.dataConfig.showData(this.loan);
            this.showAvailableAmount = this.dataConfig.showData(this.loan);
            this.showTotalAmount = this.dataConfig.showData(this.loan);
            showProgressBar = this.dataConfig.showData(this.loan);
        }
        else {
            this.showActiveAmount = this.dataConfig.showActiveAmount ? this.dataConfig.showActiveAmount(this.loan) : false;
            this.showAvailableAmount = this.dataConfig.showAvailableAmount
                ? this.dataConfig.showAvailableAmount(this.loan)
                : false;
            this.showTotalAmount = this.dataConfig.showTotalAmount ? this.dataConfig.showTotalAmount(this.loan) : false;
            showProgressBar = this.dataConfig.showProgressBar ? this.dataConfig.showProgressBar(this.loan) : true;
        }
        const activeAmount = this.activeAmount && new BigNumber(this.activeAmount);
        const totalAmount = this.totalAmount && new BigNumber(this.totalAmount);
        if (activeAmount && totalAmount) {
            this.progressPercentage = this.getProgressPercentage(activeAmount, totalAmount);
        }
        this.isProgressBarVisible = !isNaN(this.progressPercentage) && showProgressBar;
    }
}
/** @nocollapse */ RetailLoanSummaryProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryProgressBarComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ RetailLoanSummaryProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RetailLoanSummaryProgressBarComponent, selector: "bb-retail-loan-summary-progress-bar", inputs: { owedAmountFocus: "owedAmountFocus" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div class=\"bb-loans-summary-progress\">\n  <div class=\"row no-gutters bb-block bb-block--sm\">\n    <div class=\"col-12 col-sm-9\">\n      <div class=\"row no-gutters\" *ngIf=\"loan.currencyCode as currencyCode\">\n        <div *ngIf=\"activeAmount && showActiveAmount\" class=\"col-12 col-md-6 bb-block bb-block--md\">\n          <div\n            [ngClass]=\"{\n              'bb-loans-summary-progress__legend-item': isProgressBarVisible,\n              'bb-loans-summary-progress__legend-item--success': isProgressBarVisible && progressType === 'success',\n              'bb-loans-summary-progress__legend-item--active': isProgressBarVisible && progressType === 'primary'\n            }\"\n            data-role=\"loan-summary-progress__active-wrapper\"\n          >\n            <bb-loan-summary-amount-item\n              [amount]=\"activeAmount\"\n              [currency]=\"currencyCode\"\n              [title]=\"dataConfig.activeAmount.title\"\n              [showLabel]=\"showTotalAmount\"\n              [totalAmount]=\"totalAmount\"\n              [isCurrencySymbolUsed]=\"true\"\n              titleClasses=\"bb-text-support\"\n              data-role=\"loan-summary-progress__active\"\n            >\n            </bb-loan-summary-amount-item>\n          </div>\n        </div>\n        <div *ngIf=\"availableAmount && showAvailableAmount\" class=\"col-12 col-md-6 bb-block bb-block--md\">\n          <div\n            [class.bb-loans-summary-progress__legend-item]=\"isProgressBarVisible\"\n            data-role=\"loan-summary-progress__total-wrapper\"\n          >\n            <bb-loan-summary-amount-item\n              [amount]=\"availableAmount\"\n              [currency]=\"currencyCode\"\n              [title]=\"dataConfig.availableAmount.title\"\n              [isCurrencySymbolUsed]=\"true\"\n              titleClasses=\"bb-text-support\"\n              data-role=\"loan-summary-progress__total\"\n            >\n            </bb-loan-summary-amount-item>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-sm-3\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <div *ngIf=\"isProgressBarVisible && loan.currencyCode\" class=\"row no-gutters bb-block bb-block--md\">\n    <div class=\"col-12\">\n      <bb-progressbar-ui\n        class=\"bb-loans-summary-progress__progressbar\"\n        [animated]=\"true\"\n        [max]=\"100\"\n        [value]=\"progressPercentage\"\n        [type]=\"progressType\"\n        data-role=\"loan-summary-progress__progressbar\"\n      >\n      </bb-progressbar-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.LoanSummaryAmountItemComponent, selector: "bb-loan-summary-amount-item", inputs: ["title", "amount", "currency", "isCurrencySymbolUsed", "showPercent", "titleClasses", "amountClasses", "totalAmount", "showLabel"] }, { type: i2.ProgressbarComponent, selector: "bb-progressbar-ui", inputs: ["height", "max", "showValue", "striped", "animated", "type", "value"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RetailLoanSummaryProgressBarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-retail-loan-summary-progress-bar',
                    templateUrl: './retail-loan-summary-progress-bar.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { owedAmountFocus: [{
                type: Input
            }] } });
//# sourceMappingURL=retail-loan-summary-progress-bar.component.js.map