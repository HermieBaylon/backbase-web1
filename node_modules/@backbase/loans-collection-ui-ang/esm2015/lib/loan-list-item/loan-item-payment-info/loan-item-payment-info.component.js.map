{"version":3,"file":"loan-item-payment-info.component.js","sourceRoot":"","sources":["../../../../../../../libs/loans-collection-ui-ang/src/lib/loan-list-item/loan-item-payment-info/loan-item-payment-info.component.ts","../../../../../../../libs/loans-collection-ui-ang/src/lib/loan-list-item/loan-item-payment-info/loan-item-payment-info.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAa,MAAM,eAAe,CAAC;AAI9E,OAAO,EAAkD,mBAAmB,EAAE,MAAM,gCAAgC,CAAC;AACrH,OAAO,EAAE,uBAAuB,EAAE,MAAM,uCAAuC,CAAC;;;;;AAOhF,MAAM,OAAO,4BACX,SAAQ,uBAAwD;IAgBhE,WAAW;QACT,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE9D,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,KAAK,mBAAmB,CAAC,SAAS,CAAC;IACpF,CAAC;;6IAtBU,4BAA4B;iIAA5B,4BAA4B,6GCZzC,+rCAgCA;4FDpBa,4BAA4B;kBALxC,SAAS;mBAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,WAAW,EAAE,yCAAyC;oBACtD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD","sourcesContent":["import { ChangeDetectionStrategy, Component, OnChanges } from '@angular/core';\n\nimport { PresentationLoan } from '@backbase/data-ang/loans';\n\nimport { LoanPaymentInfoData, LoanPaymentInfoDataConfig, LoanPaymentInfoType } from './loan-item-payment-info.model';\nimport { LoanConfigBaseComponent } from '../../base/loan-config-base.component';\n\n@Component({\n  selector: 'bb-loan-item-payment-info',\n  templateUrl: './loan-item-payment-info.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoanItemPaymentInfoComponent<T extends PresentationLoan = PresentationLoan>\n  extends LoanConfigBaseComponent<T, LoanPaymentInfoDataConfig<T>>\n  implements OnChanges\n{\n  /**\n   * Payment info data\n   */\n  paymentInfo!: LoanPaymentInfoData;\n  /**\n   * Flag represents fully paid loan\n   */\n  isFullyPaid!: boolean;\n  /**\n   * Flag represents visibility of the amount\n   */\n  isAmountVisible!: boolean;\n\n  ngOnChanges(): void {\n    this.paymentInfo = this.dataConfig.call(undefined, this.loan);\n\n    this.isAmountVisible = Boolean(this.loan.currencyCode && this.paymentInfo.amount);\n    this.isFullyPaid = this.paymentInfo.paymentType === LoanPaymentInfoType.FullyPaid;\n  }\n}\n","<span\n  *ngIf=\"isFullyPaid; else amountBased\"\n  class=\"bb-text-support\"\n  data-role=\"bb-loans-loan-payment-info__label\"\n  i18n=\"Loan item no payments text@@loans.loan-item.no-payments.text\"\n  >No upcoming payments</span\n>\n<ng-template #amountBased>\n  <div *ngIf=\"isAmountVisible || paymentInfo.date\" class=\"bb-text-support\" data-role=\"bb-loans-loan-payment-info\">\n    <span\n      i18n=\"Loan item payment info text@@loans.loan-item.payment-info.text\"\n      data-role=\"bb-loans-loan-payment-info__label\"\n    >\n      {paymentInfo.paymentType, select, ScheduledNext {Next payment} ScheduledLast {Last payment} Overdue {Overdue}}:\n    </span>\n    <bb-amount-ui\n      data-role=\"bb-loans-loan-payment-info__amount\"\n      *ngIf=\"isAmountVisible\"\n      [amount]=\"paymentInfo.amount!\"\n      [currency]=\"loan.currencyCode!\"\n      [mapCurrency]=\"false\"\n    ></bb-amount-ui>\n    <span\n      *ngIf=\"paymentInfo.date as date\"\n      data-role=\"bb-loans-loan-payment-info__date\"\n      i18n=\"Loan item next payment date@@loans.loan-item.next-payment.date\"\n    >\n      on {{ date | bbDate }}\n    </span>\n    <span class=\"sr-only\">,</span>\n  </div>\n</ng-template>\n"]}