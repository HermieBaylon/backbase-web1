{"version":3,"file":"stop-checks-list-container.component.js","sourceRoot":"","sources":["../../../../../../libs/payord-stop-checks-list-widget-ang/src/lib/containers/stop-checks-list-container.component.ts","../../../../../../libs/payord-stop-checks-list-widget-ang/src/lib/containers/stop-checks-list-container.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, OnDestroy, Optional } from '@angular/core';\nimport { BbTemplate, ItemModel } from '@backbase/foundation-ang/core';\nimport { LoadMoreMethod, StopCheck } from '@backbase/payment-orders-ang';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { PaginationConfig } from '../helpers/constants';\nimport { StopChecksListService } from '../services/stop-checks-list.service';\nimport { StopChecksListCommunicationService } from '../services/stop-checks-list-communication.service';\nimport { LoadMoreParams } from '@backbase/ui-ang/load-button';\n\n@Component({\n  selector: 'bb-stop-checks-list-container',\n  templateUrl: 'stop-checks-list-container.component.html',\n})\nexport class StopChecksListContainerComponent implements OnDestroy {\n  private readonly destroyed$ = new Subject();\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  readonly loading$ = this.checkService.loading$;\n  readonly paginationConfig$: Observable<PaginationConfig> =\n    this.checkService.paginationConfig$;\n  readonly checksList$ = this.checkService.getData$;\n\n  error?: HttpErrorResponse;\n  checksList?: Array<StopCheck>;\n  selectedCheck?: StopCheck;\n  openDetails = false;\n\n  constructor(\n    @Optional()\n    private readonly communicationService: StopChecksListCommunicationService,\n    @Optional() private readonly model: ItemModel,\n    private readonly checkService: StopChecksListService\n  ) {\n    this.communicationService?.refreshList$.subscribe(() =>\n      this.checkService.loadMore(0)\n    );\n\n    this.checkService.error$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((val) => {\n        this.error = val;\n      });\n\n    this.checksList$.pipe(takeUntil(this.destroyed$)).subscribe((res) => {\n      this.checksList = res;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n  }\n\n  onCheckItemClick(selectedCheckItem: StopCheck) {\n    this.openDetails = true;\n    this.selectedCheck = selectedCheckItem;\n  }\n\n  onCloseDetails() {\n    this.openDetails = false;\n  }\n\n  onPageChange(page: number) {\n    this.checkService.loadMore(page++);\n  }\n\n  onLoadMore(params: LoadMoreParams) {\n    this.checkService.loadMore(params.from);\n  }\n\n  isPagination(paginationType: LoadMoreMethod): boolean {\n    return paginationType === LoadMoreMethod.PAGINATION;\n  }\n\n  showListLoading(\n    isLoading: boolean,\n    { paginationType, currentPage }: PaginationConfig\n  ): boolean {\n    const isFirstPage = currentPage === 0;\n    return isLoading && (this.isPagination(paginationType) || isFirstPage);\n  }\n}\n\n@Directive({\n  selector: '[bbStopChecksListContainerCustomizableDirective]',\n})\nexport class StopChecksListContainerCustomizableDirective extends BbTemplate<\n  StopChecksListContainerComponent,\n  undefined\n> {}\n","<ng-container\n  bbStopChecksListContainerCustomizableDirective\n  [bbTemplateContext]=\"{\n    isLoading: loading$ | async,\n    paginationConfig: paginationConfig$ | async\n  }\"\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template\n  bbStopChecksListContainerCustomizableDirective\n  let-hostRef\n  let-isLoading=\"context.isLoading\"\n  let-paginationConfig=\"context.paginationConfig\"\n>\n  <ng-container\n    *ngIf=\"hostRef.showListLoading(isLoading, paginationConfig); else list\"\n  >\n    <ng-container *ngTemplateOutlet=\"loading\"></ng-container>\n  </ng-container>\n\n  <ng-template #list>\n    <ng-container *ngIf=\"!hostRef.error; else errorState\">\n      <ng-container *ngIf=\"hostRef.checksList?.length; else emptyState\">\n        <div class=\"bb-block bb-block--md\">\n          <bb-stop-checks-list\n            [checks]=\"hostRef.checksList\"\n            (checkItemClick)=\"hostRef.onCheckItemClick($event)\"\n          ></bb-stop-checks-list>\n        </div>\n\n        <div data-role=\"paging-method-wrapper\">\n          <ng-container\n            *ngIf=\"\n              hostRef.isPagination(paginationConfig.paginationType);\n              else loadMore\n            \"\n          >\n            <bb-pagination-ui\n              *ngIf=\"!isLoading\"\n              [page]=\"paginationConfig.currentPage\"\n              [maxNavPages]=\"paginationConfig.maxNavPages\"\n              [totalItems]=\"paginationConfig.totalItems\"\n              [itemsPerPage]=\"paginationConfig.size\"\n              (pageChange)=\"hostRef.onPageChange($event)\"\n            ></bb-pagination-ui>\n          </ng-container>\n\n          <ng-template #loadMore>\n            <bb-load-button-ui\n              class=\"bb-pagination\"\n              color=\"secondary\"\n              i18n=\"\n                Load more payment orders|Load more button for loading more\n                payment orders@@manage-payments-list.load.more\"\n              [isLoading]=\"isLoading\"\n              [size]=\"paginationConfig.size\"\n              [from]=\"paginationConfig.currentPage\"\n              [totalCount]=\"paginationConfig.totalItems\"\n              (paramChange)=\"hostRef.onLoadMore($event)\"\n            >\n              Load more\n            </bb-load-button-ui>\n          </ng-template>\n        </div>\n      </ng-container>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #loading>\n    <bb-loading-indicator-ui\n      i18n-text=\"@@manage-stop-checks.loading.text\"\n      text=\"Loading data...\"\n    >\n    </bb-loading-indicator-ui>\n  </ng-template>\n\n  <ng-template #emptyState>\n    <bb-empty-stop-checks-list></bb-empty-stop-checks-list>\n  </ng-template>\n\n  <ng-template #errorState>\n    <div class=\"bb-stop-checks-error__container\">\n      <bb-empty-state-ui\n        data-role=\"stop-checks-list-error-state\"\n        i18n-title=\"@@manage-stop-checks.error.generic.title\"\n        title=\"Page couldn't be load!\"\n        i18n-subtitle=\"@@manage-stop-checks.error.generic.subtitle\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        iconSize=\"xxl\"\n        iconModifier=\"error\"\n      ></bb-empty-state-ui>\n    </div>\n  </ng-template>\n\n  <bb-stop-checks-details\n    [isOpen]=\"hostRef.openDetails\"\n    (close)=\"hostRef.onCloseDetails()\"\n    [check]=\"hostRef.selectedCheck\"\n  ></bb-stop-checks-details>\n</ng-template>\n"]}