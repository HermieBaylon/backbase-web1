import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Output, } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/modal";
import * as i2 from "@backbase/ui-ang/header";
import * as i3 from "@backbase/payment-orders-ang";
import * as i4 from "@backbase/ui-ang/icon";
import * as i5 from "@backbase/ui-ang/amount";
import * as i6 from "@backbase/ui-ang/loading-indicator";
import * as i7 from "@angular/common";
import * as i8 from "@backbase/ui-ang/button";
export class StopChecksDetailsComponent {
    constructor() {
        /**
         * Reference to instance of customizable component.
         */
        this.hostRef = this;
        /**
         * Indicator for details dialog open state.
         * Default value is `false`.
         */
        this.isOpen = false;
        /**
         * Changes will be trigged on close event emit.
         */
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.close = new EventEmitter();
    }
    onClose() {
        this.isOpen = false;
        this.close.emit();
    }
    onPrint() {
        window.print();
    }
}
/** @nocollapse */ StopChecksDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksDetailsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ StopChecksDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StopChecksDetailsComponent, selector: "bb-stop-checks-details", inputs: { isOpen: "isOpen", check: "check" }, outputs: { close: "close" }, ngImport: i0, template: "<ng-container\n  bbStopChecksDetailsCustomizableDirective\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n<ng-template bbStopChecksDetailsCustomizableDirective let-hostRef>\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isOpen\"\n    (cancel)=\"hostRef.onClose()\"\n    (confirm)=\"hostRef.onClose()\"\n  >\n    <ng-container *ngIf=\"hostRef.check; else loading\">\n      <bb-modal-header-ui>\n        <ng-template bbCustomModalHeader>\n          <div class=\"bb-stack\" data-role=\"stop-checks-details-header\">\n            <div class=\"bb-stack__item\">\n              <bb-header-ui\n                headingType=\"h2\"\n                heading=\"Stop check request\"\n                i18n-heading=\"@@stop-checks.details.header.title\"\n              ></bb-header-ui>\n              <bb-payord-status-badge\n                [status]=\"hostRef.check.status\"\n              ></bb-payord-status-badge>\n              <span class=\"text-small bb-text-support\">\n                <span i18n=\"@@stop-checks.details.submitted.on\">\n                  Submitted on\n                </span>\n                <span>{{ hostRef.check.dateOfRequest | date: 'MM/dd/y' }}</span>\n              </span>\n            </div>\n\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--align-top d-print-none\"\n            >\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item\">\n                  <button\n                    bbButton\n                    [circle]=\"true\"\n                    buttonSize=\"sm\"\n                    color=\"link-dark\"\n                    (click)=\"hostRef.onPrint()\"\n                    (keydown.enter)=\"hostRef.onPrint()\"\n                    type=\"button\"\n                    aria-label=\"Print stop check detail dialog\"\n                    data-role=\"print-stop-checks-details-modal\"\n                    i18n-aria-label=\"@@stop-checks.check.header.print\"\n                  >\n                    <bb-icon-ui color=\"muted\" name=\"print\"></bb-icon-ui>\n                  </button>\n                </div>\n                <div class=\"bb-stack__item\">\n                  <button\n                    bbButton\n                    [circle]=\"true\"\n                    buttonSize=\"sm\"\n                    color=\"unstyled\"\n                    (click)=\"hostRef.onClose()\"\n                    (keydown.enter)=\"hostRef.onClose()\"\n                    aria-label=\"Close stop check detail dialog\"\n                    data-role=\"close-stop-checks-details-modal\"\n                    i18n-aria-label=\"@@stop-checks.stop-checks.header.close\"\n                  >\n                    <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </bb-modal-header-ui>\n\n      <bb-modal-body-ui>\n        <ng-template bbCustomModalBody>\n          <div class=\"bb-block--md\">\n            <bb-header-ui\n              headingType=\"h4\"\n              heading=\"Check details\"\n              i18n-heading=\"@@stop-checks.details.body.title\"\n            ></bb-header-ui>\n          </div>\n\n          <div class=\"bb-block--md\">\n            <div\n              class=\"bb-label bb-block--xs\"\n              i18n=\"@@stop-checks.details.body.account.label\"\n            >\n              Check Account\n            </div>\n            <div>{{ hostRef.check.originatorAccount.name }}</div>\n            <div class=\"bb-text-support\">\n              {{ hostRef.check.originatorAccount.identification }}\n            </div>\n          </div>\n\n          <ng-container *ngIf=\"hostRef.check.check; else numbersRange\">\n            <div class=\"bb-stack row break-word\">\n              <div\n                class=\"bb-stack__item col-12 bb-block--md\"\n                [ngClass]=\"{ 'col-md-6': hostRef.check.check.amount }\"\n              >\n                <div\n                  class=\"bb-label bb-block--xs\"\n                  i18n=\"@@stop-checks.details.body.check.number\"\n                >\n                  Check number\n                </div>\n                <div>{{ hostRef.check.check.number }}</div>\n              </div>\n              <div\n                *ngIf=\"hostRef.check.check.amount\"\n                class=\"bb-stack__item col-12 col-md-6 bb-block--md\"\n              >\n                <div\n                  class=\"bb-label bb-block--xs\"\n                  i18n=\"@@stop-checks.details.body.check.amount\"\n                >\n                  Check amount\n                </div>\n                <bb-amount-ui\n                  [amount]=\"hostRef.check.check.amount?.amount\"\n                  [currency]=\"hostRef.check.check.amount?.currencyCode\"\n                ></bb-amount-ui>\n              </div>\n            </div>\n\n            <div class=\"bb-stack row break-word\">\n              <div\n                *ngIf=\"hostRef.check.check.dateIssued\"\n                class=\"bb-stack__item col-12 bb-block--md\"\n                [ngClass]=\"{ 'col-md-6': hostRef.check.check.payeeName }\"\n              >\n                <div\n                  class=\"bb-label bb-block--xs\"\n                  i18n=\"@@stop-checks.details.body.check.date\"\n                >\n                  Check date\n                </div>\n                <div>\n                  {{ hostRef.check.check.dateIssued | date: 'MM/dd/y' }}\n                </div>\n              </div>\n              <div\n                *ngIf=\"hostRef.check.check.payeeName\"\n                class=\"bb-stack__item col-12 col-md-6 bb-block--md\"\n              >\n                <div\n                  class=\"bb-label bb-block--xs\"\n                  i18n=\"@@stop-checks.details.body.check.payee.name\"\n                >\n                  Payee name\n                </div>\n                <div>{{ hostRef.check.check.payeeName }}</div>\n              </div>\n            </div>\n          </ng-container>\n\n          <div class=\"bb-stack row break-word\">\n            <div\n              *ngIf=\"hostRef.check.reason\"\n              class=\"bb-stack__item\"\n              [ngClass]=\"{ 'col-md-6': hostRef.check.expirationDate }\"\n            >\n              <div\n                class=\"bb-label bb-block--xs\"\n                i18n=\"@@stop-checks.details.body.stop.reason\"\n              >\n                Stop reason\n              </div>\n              <div>{{ hostRef.check.reason }}</div>\n            </div>\n            <div class=\"d-md-none\">&nbsp;</div>\n            <div\n              *ngIf=\"hostRef.check.expirationDate\"\n              class=\"bb-stack__item col-md-6\"\n            >\n              <div\n                class=\"bb-label bb-block--xs\"\n                i18n=\"@@stop-checks.details.body.expiration.date\"\n              >\n                Stop expiration date\n              </div>\n              <div>{{ hostRef.check.expirationDate | date: 'MM/dd/y' }}</div>\n            </div>\n          </div>\n        </ng-template>\n      </bb-modal-body-ui>\n    </ng-container>\n\n    <ng-template #numbersRange>\n      <div class=\"bb-stack row break-word\">\n        <div class=\"bb-stack__item col-12 col-md-6 bb-block--md\">\n          <div\n            class=\"bb-label bb-block--xs\"\n            i18n=\"@@stop-checks.details.body.range.first.label\"\n          >\n            First check number\n          </div>\n          <div>{{ hostRef.check.checkNumberRange.firstNumber }}</div>\n        </div>\n        <div class=\"bb-stack__item col-12 col-md-6 bb-block--md\">\n          <div\n            class=\"bb-label bb-block--xs\"\n            i18n=\"@@stop-checks.details.body.range.last.label\"\n          >\n            Last check number\n          </div>\n          <div>{{ hostRef.check.checkNumberRange.lastNumber }}</div>\n        </div>\n      </div>\n    </ng-template>\n\n    <ng-template #loading>\n      <bb-loading-indicator-ui></bb-loading-indicator-ui>\n    </ng-template>\n  </bb-modal-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i1.ModalHeaderComponent; }), selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i2.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i3.PayordStatusBadgeComponent; }), selector: "bb-payord-status-badge", inputs: ["status", "statusColorMap", "statusColorDefault", "showAbbreviated"] }, { type: i0.forwardRef(function () { return i4.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i1.ModalBodyComponent; }), selector: "bb-modal-body-ui" }, { type: i0.forwardRef(function () { return i5.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0.forwardRef(function () { return i6.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i0.forwardRef(function () { return StopChecksDetailsCustomizableDirective; }), selector: "[bbStopChecksDetailsCustomizableDirective]" }, { type: i0.forwardRef(function () { return i7.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i1.CustomModalHeaderDirective; }), selector: "ng-template[bbCustomModalHeader]" }, { type: i0.forwardRef(function () { return i8.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0.forwardRef(function () { return i1.CustomModalBodyDirective; }), selector: "ng-template[bbCustomModalBody]" }, { type: i0.forwardRef(function () { return i7.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "date": i0.forwardRef(function () { return i7.DatePipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-stop-checks-details',
                    templateUrl: './stop-checks-details.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { isOpen: [{
                type: Input
            }], check: [{
                type: Input
            }], close: [{
                type: Output
            }] } });
export class StopChecksDetailsCustomizableDirective extends BbTemplate {
}
/** @nocollapse */ StopChecksDetailsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksDetailsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ StopChecksDetailsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: StopChecksDetailsCustomizableDirective, selector: "[bbStopChecksDetailsCustomizableDirective]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StopChecksDetailsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbStopChecksDetailsCustomizableDirective]',
                }]
        }] });
//# sourceMappingURL=stop-checks-details.component.js.map