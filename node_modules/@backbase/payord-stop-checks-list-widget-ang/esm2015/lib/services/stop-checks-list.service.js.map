{"version":3,"file":"stop-checks-list.service.js","sourceRoot":"","sources":["../../../../../../libs/payord-stop-checks-list-widget-ang/src/lib/services/stop-checks-list.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  EMPTY,\n  Observable,\n  Subject,\n} from 'rxjs';\nimport {\n  catchError,\n  finalize,\n  map,\n  scan,\n  shareReplay,\n  startWith,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { StopChecksListPropertiesService } from './stop-checks-list-properties.service';\nimport {\n  StopChecksGetResponse,\n  StopChecksHttpService,\n  GetStopChecksRequestParams,\n} from '@backbase/data-ang/stop-checks';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {\n  fromResponse,\n  LoadMoreMethod,\n  StopCheck,\n} from '@backbase/payment-orders-ang';\n\n@Injectable()\nexport class StopChecksListService {\n  private readonly currentPage$ = new BehaviorSubject<number>(0);\n  private readonly params$ = combineLatest([\n    this.currentPage$,\n    this.preferences.pageSize$,\n  ]).pipe(\n    map(([currentPage, size]) => {\n      const from = currentPage * size;\n      return { from, size };\n    })\n  );\n\n  private readonly stopChecksData$ = this.params$.pipe(\n    tap(() => this.loading$.next(true)),\n    switchMap((config) =>\n      this.getStopChecks(config).pipe(\n        catchError((error) => {\n          this.error$.next(error);\n          this.loading$.next(false);\n          return EMPTY;\n        }),\n        tap(() => {\n          this.loading$.next(false);\n        })\n      )\n    ),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  private readonly totalItems$ = this.stopChecksData$.pipe(\n    map((res) => res.totalStopChecks)\n  );\n\n  readonly error$ = new Subject<HttpErrorResponse>();\n  readonly loading$ = new BehaviorSubject<boolean>(true);\n  readonly getData$ = this.stopChecksData$.pipe(\n    map((res) => res.stopChecks),\n    withLatestFrom(this.preferences.paginationType$),\n    scan<[StopCheck[], LoadMoreMethod], StopCheck[]>(\n      (acc, [data, paginationType]) => {\n        if (paginationType !== LoadMoreMethod.PAGINATION) {\n          return acc.concat(data);\n        }\n\n        return data;\n      },\n      []\n    )\n  );\n\n  readonly paginationConfig$ = combineLatest([\n    this.currentPage$,\n    this.totalItems$.pipe(startWith(undefined)),\n    this.preferences.maxNavPages$,\n    this.preferences.pageSize$,\n    this.preferences.paginationType$,\n  ]).pipe(\n    map(([currentPage, totalItems, maxNavPages, size, paginationType]) => ({\n      currentPage,\n      totalItems,\n      maxNavPages,\n      size,\n      paginationType,\n    }))\n  );\n\n  constructor(\n    private readonly stopChecksDataHttpService: StopChecksHttpService,\n    private readonly preferences: StopChecksListPropertiesService\n  ) {}\n\n  private getStopChecks(\n    params: GetStopChecksRequestParams\n  ): Observable<StopChecksGetResponse> {\n    return this.stopChecksDataHttpService\n      .getStopChecks(params, 'response')\n      .pipe(map(fromResponse));\n  }\n\n  loadMore(page: number) {\n    this.currentPage$.next(page);\n  }\n}\n"]}