{"version":3,"file":"stop-checks-list-properties.service.js","sourceRoot":"","sources":["../../../../../../libs/payord-stop-checks-list-widget-ang/src/lib/services/stop-checks-list-properties.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { map } from 'rxjs/operators';\nimport { defaultChecksParams } from '../helpers/constants';\nimport { LoadMoreMethod, toInteger } from '@backbase/payment-orders-ang';\n\n@Injectable()\nexport class StopChecksListPropertiesService {\n  private readonly pageSizeSubject$ = new BehaviorSubject<number | undefined>(\n    undefined\n  );\n  private readonly maxNavPagesSubject$ = new BehaviorSubject<\n    number | undefined\n  >(undefined);\n  private readonly paginationTypeSubject$ = new BehaviorSubject<\n    LoadMoreMethod | undefined\n  >(undefined);\n\n  private get pageSizeIM(): Observable<number> {\n    return (\n      this.itemModel\n        ?.property('pageSize', defaultChecksParams.size)\n        .pipe(map(toInteger)) || of(defaultChecksParams.size)\n    );\n  }\n\n  private get maxNavPagesIM(): Observable<number> {\n    return (\n      this.itemModel\n        ?.property('maxNavPages', defaultChecksParams.maxNavPages)\n        .pipe(map(toInteger)) || of(defaultChecksParams.maxNavPages)\n    );\n  }\n\n  private get paginationTypeIM(): Observable<LoadMoreMethod> {\n    return (\n      this.itemModel?.property(\n        'paginationType',\n        defaultChecksParams.paginationType\n      ) || of(defaultChecksParams.paginationType)\n    );\n  }\n\n  readonly pageSize$ = combineLatest([\n    this.pageSizeSubject$,\n    this.pageSizeIM,\n  ]).pipe(map(([value, valueIM]) => value ?? valueIM));\n\n  readonly maxNavPages$ = combineLatest([\n    this.maxNavPagesSubject$,\n    this.maxNavPagesIM,\n  ]).pipe(map(([value, valueIM]) => value ?? valueIM));\n\n  readonly paginationType$ = combineLatest([\n    this.paginationTypeSubject$,\n    this.paginationTypeIM,\n  ]).pipe(map(([value, valueIM]) => value ?? valueIM));\n\n  setPageSize(value: number) {\n    this.pageSizeSubject$.next(value);\n  }\n\n  setMaxNavPages(value: number) {\n    this.maxNavPagesSubject$.next(value);\n  }\n\n  setPaginationType(value: LoadMoreMethod) {\n    this.paginationTypeSubject$.next(value);\n  }\n\n  constructor(@Optional() private readonly itemModel: ItemModel) {}\n}\n"]}