import { createMocks } from '@backbase/foundation-ang/data-http';
export const TravelNoticesHttpServiceCreateTravelNoticeMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/travel-notices",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "id": "sara-travel-notice-1",
                    "cardIds": ["sara-card-1"],
                    "departureDate": "2020-05-06",
                    "arrivalDate": "2020-05-10",
                    "destinations": [{
                            "country": "USA",
                            "region": "US-TX"
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example"
                }
            },
            {
                status: 200,
                body: {
                    "id": "john-travel-notice-1",
                    "cardIds": ["john-card-1", "john-card-2"],
                    "departureDate": "2020-01-09",
                    "arrivalDate": "2020-01-18",
                    "destinations": [{
                            "country": "NL"
                        }],
                    "contact": {
                        "phoneNumber": "+1 646 432 3000"
                    }
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "destinations": [{
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }, {
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }],
                    "contact": {
                        "phoneNumber": "phoneNumber",
                        "additions": {
                            "key": "additions"
                        }
                    },
                    "id": "id",
                    "departureDate": "departureDate",
                    "cardIds": ["cardIds", "cardIds"],
                    "arrivalDate": "arrivalDate"
                }
            },
        ]
    }]);
export const TravelNoticesHttpServiceDeleteTravelNoticeByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/travel-notices/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
        ]
    }]);
export const TravelNoticesHttpServiceGetTravelNoticeByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/travel-notices/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value"
                }
            },
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example"
                }
            },
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value"
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "destinations": [{
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }, {
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }],
                    "contact": {
                        "phoneNumber": "phoneNumber",
                        "additions": {
                            "key": "additions"
                        }
                    },
                    "id": "id",
                    "departureDate": "departureDate",
                    "cardIds": ["cardIds", "cardIds"],
                    "arrivalDate": "arrivalDate"
                }
            },
        ]
    }]);
export const TravelNoticesHttpServiceGetTravelNoticesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/travel-notices",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "sara-travel-notice-1",
                        "cardIds": ["sara-card-1", "sara-card-4"],
                        "departureDate": "2020-01-09",
                        "arrivalDate": "2020-01-18",
                        "destinations": [{
                                "country": "MEX"
                            }, {
                                "country": "USA",
                                "region": "US-TX"
                            }]
                    }, {
                        "id": "sara-travel-notice-2",
                        "cardIds": ["sara-card-1", "sara-card-2", "sara-card-4", "sara-card-5"],
                        "departureDate": "2019-12-10",
                        "arrivalDate": "2019-12-23",
                        "destinations": [{
                                "country": "JPN"
                            }, {
                                "country": "USA",
                                "region": "US-CA"
                            }],
                        "contact": {
                            "phoneNumber": "+1 646 432 3000"
                        }
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "elon-travel-notice-1",
                        "cardIds": ["elon-card-1"],
                        "departureDate": "2020-05-06",
                        "arrivalDate": "2020-05-10",
                        "destinations": [{
                                "country": "USA",
                                "region": "US-TX"
                            }, {
                                "country": "MEX"
                            }]
                    }, {
                        "id": "elon-travel-notice-2",
                        "cardIds": ["elon-card-1", "elon-card-2", "elon-card-3", "elon-card-4"],
                        "departureDate": "2019-12-10",
                        "arrivalDate": "2019-12-23",
                        "destinations": [{
                                "country": "JPN"
                            }, {
                                "country": "USA",
                                "region": "US-CA"
                            }],
                        "contact": {
                            "phoneNumber": "+1 646 432 3000"
                        }
                    }, {
                        "id": "elon-travel-notice-3",
                        "cardIds": ["elon-card-4"],
                        "departureDate": "2019-07-23",
                        "arrivalDate": "2020-08-11",
                        "destinations": [{
                                "country": "KHM"
                            }, {
                                "country": "KOR"
                            }, {
                                "country": "IND"
                            }],
                        "contact": {
                            "phoneNumber": "+1 646 432 3000"
                        }
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "john-travel-notice-1",
                        "cardIds": ["john-card-1", "john-card-2"],
                        "departureDate": "2020-01-09",
                        "arrivalDate": "2020-01-18",
                        "destinations": [{
                                "country": "NL"
                            }],
                        "contact": {
                            "phoneNumber": "+1 646 432 3000"
                        }
                    }]
            },
            {
                status: 200,
                body: []
            },
            {
                status: 200,
                body: []
            },
        ]
    }]);
export const TravelNoticesHttpServiceUpdateTravelNoticeMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/travel-notices/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value"
                }
            },
            {
                status: 200,
                body: {
                    "id": "elon-travel-notice-1",
                    "cardIds": ["elon-card-1", "elon-card-6"],
                    "departureDate": "2020-05-06",
                    "arrivalDate": "2020-05-10",
                    "destinations": [{
                            "country": "USA",
                            "region": "US-TX"
                        }, {
                            "country": "MEX"
                        }],
                    "contact": {
                        "phoneNumber": "Other_Number"
                    }
                }
            },
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value"
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "destinations": [{
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }, {
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }],
                    "contact": {
                        "phoneNumber": "phoneNumber",
                        "additions": {
                            "key": "additions"
                        }
                    },
                    "id": "id",
                    "departureDate": "departureDate",
                    "cardIds": ["cardIds", "cardIds"],
                    "arrivalDate": "arrivalDate"
                }
            },
        ]
    }]);
export const TravelNoticesHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/travel-notices",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "id": "sara-travel-notice-1",
                    "cardIds": ["sara-card-1"],
                    "departureDate": "2020-05-06",
                    "arrivalDate": "2020-05-10",
                    "destinations": [{
                            "country": "USA",
                            "region": "US-TX"
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example"
                }
            },
            {
                status: 200,
                body: {
                    "id": "john-travel-notice-1",
                    "cardIds": ["john-card-1", "john-card-2"],
                    "departureDate": "2020-01-09",
                    "arrivalDate": "2020-01-18",
                    "destinations": [{
                            "country": "NL"
                        }],
                    "contact": {
                        "phoneNumber": "+1 646 432 3000"
                    }
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "destinations": [{
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }, {
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }],
                    "contact": {
                        "phoneNumber": "phoneNumber",
                        "additions": {
                            "key": "additions"
                        }
                    },
                    "id": "id",
                    "departureDate": "departureDate",
                    "cardIds": ["cardIds", "cardIds"],
                    "arrivalDate": "arrivalDate"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/travel-notices/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/travel-notices/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value"
                }
            },
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example"
                }
            },
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value"
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "destinations": [{
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }, {
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }],
                    "contact": {
                        "phoneNumber": "phoneNumber",
                        "additions": {
                            "key": "additions"
                        }
                    },
                    "id": "id",
                    "departureDate": "departureDate",
                    "cardIds": ["cardIds", "cardIds"],
                    "arrivalDate": "arrivalDate"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/travel-notices",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "sara-travel-notice-1",
                        "cardIds": ["sara-card-1", "sara-card-4"],
                        "departureDate": "2020-01-09",
                        "arrivalDate": "2020-01-18",
                        "destinations": [{
                                "country": "MEX"
                            }, {
                                "country": "USA",
                                "region": "US-TX"
                            }]
                    }, {
                        "id": "sara-travel-notice-2",
                        "cardIds": ["sara-card-1", "sara-card-2", "sara-card-4", "sara-card-5"],
                        "departureDate": "2019-12-10",
                        "arrivalDate": "2019-12-23",
                        "destinations": [{
                                "country": "JPN"
                            }, {
                                "country": "USA",
                                "region": "US-CA"
                            }],
                        "contact": {
                            "phoneNumber": "+1 646 432 3000"
                        }
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "elon-travel-notice-1",
                        "cardIds": ["elon-card-1"],
                        "departureDate": "2020-05-06",
                        "arrivalDate": "2020-05-10",
                        "destinations": [{
                                "country": "USA",
                                "region": "US-TX"
                            }, {
                                "country": "MEX"
                            }]
                    }, {
                        "id": "elon-travel-notice-2",
                        "cardIds": ["elon-card-1", "elon-card-2", "elon-card-3", "elon-card-4"],
                        "departureDate": "2019-12-10",
                        "arrivalDate": "2019-12-23",
                        "destinations": [{
                                "country": "JPN"
                            }, {
                                "country": "USA",
                                "region": "US-CA"
                            }],
                        "contact": {
                            "phoneNumber": "+1 646 432 3000"
                        }
                    }, {
                        "id": "elon-travel-notice-3",
                        "cardIds": ["elon-card-4"],
                        "departureDate": "2019-07-23",
                        "arrivalDate": "2020-08-11",
                        "destinations": [{
                                "country": "KHM"
                            }, {
                                "country": "KOR"
                            }, {
                                "country": "IND"
                            }],
                        "contact": {
                            "phoneNumber": "+1 646 432 3000"
                        }
                    }]
            },
            {
                status: 200,
                body: [{
                        "id": "john-travel-notice-1",
                        "cardIds": ["john-card-1", "john-card-2"],
                        "departureDate": "2020-01-09",
                        "arrivalDate": "2020-01-18",
                        "destinations": [{
                                "country": "NL"
                            }],
                        "contact": {
                            "phoneNumber": "+1 646 432 3000"
                        }
                    }]
            },
            {
                status: 200,
                body: []
            },
            {
                status: 200,
                body: []
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/travel-notices/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value"
                }
            },
            {
                status: 200,
                body: {
                    "id": "elon-travel-notice-1",
                    "cardIds": ["elon-card-1", "elon-card-6"],
                    "departureDate": "2020-05-06",
                    "arrivalDate": "2020-05-10",
                    "destinations": [{
                            "country": "USA",
                            "region": "US-TX"
                        }, {
                            "country": "MEX"
                        }],
                    "contact": {
                        "phoneNumber": "Other_Number"
                    }
                }
            },
            {
                status: 200,
                body: {
                    "$ref": "#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value"
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "destinations": [{
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }, {
                            "country": "country",
                            "additions": {
                                "key": "additions"
                            },
                            "region": "region"
                        }],
                    "contact": {
                        "phoneNumber": "phoneNumber",
                        "additions": {
                            "key": "additions"
                        }
                    },
                    "id": "id",
                    "departureDate": "departureDate",
                    "cardIds": ["cardIds", "cardIds"],
                    "arrivalDate": "arrivalDate"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,