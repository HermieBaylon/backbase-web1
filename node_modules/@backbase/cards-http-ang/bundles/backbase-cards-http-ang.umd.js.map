{"version":3,"file":"backbase-cards-http-ang.umd.js","sources":["../../model/deliveryTransitStep.ts","../../model/lockStatus.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/cards.service.ts","../../api/cards.service.mocks.ts","../../api/travelNotices.service.ts","../../api/travelNotices.service.mocks.ts"],"sourcesContent":["/**\n * Cards\n * Cards Client API\n *\n * The version of the OpenAPI document: 2.2.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface DeliveryTransitStep { \n    /**\n     * Name of the step.\n     */\n    [\"name\"]: string;\n    /**\n     * Status of this step.\n     */\n    [\"status\"]: DeliveryTransitStep.StatusEnum;\n    /**\n     * DateTime in UTC ISO8601, defines when the step will probably happen (a.k.a status=PENDING and stepDateTime &gt; now()) or when step has already happened. CONVENTION: when time is 00:00:00.000Z it means that it\\'s date-only information\n     */\n    [\"stepDateTime\"]?: string;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace DeliveryTransitStep {\n    export type StatusEnum = 'SUCCESS' | 'FAILED' | 'PENDING';\n    export const StatusEnum = {\n        SUCCESS: 'SUCCESS' as StatusEnum,\n        FAILED: 'FAILED' as StatusEnum,\n        PENDING: 'PENDING' as StatusEnum\n    };\n}\n\n\n","/**\n * Cards\n * Cards Client API\n *\n * The version of the OpenAPI document: 2.2.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Lock Status of card\n */\nexport type LockStatus = 'LOCKED' | 'UNLOCKED';\n\nexport const LockStatus = {\n    LOCKED: 'LOCKED' as LockStatus,\n    UNLOCKED: 'UNLOCKED' as LockStatus\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const CARDS_BASE_PATH = new InjectionToken<string>('CARDS_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface CardsConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class CardsConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: CardsConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link CardsConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link CardsConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module CardsConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { CardsConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class CardsApiModule {\n    public static forRoot(configurationFactory: () => CardsConfiguration): ModuleWithProviders<CardsApiModule> {\n        return {\n            ngModule: CardsApiModule,\n            providers: [ { provide: CardsConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: CardsApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: CardsConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('CardsApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Cards\n * Cards Client API\n *\n * The version of the OpenAPI document: 2.2.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ActivatePost } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { CardItem } from '../model/models';\nimport { ChangeLimitsPostItem } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { LockStatusPost } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { RequestPinPost } from '../model/models';\nimport { RequestReplacementPost } from '../model/models';\nimport { ResetPinPost } from '../model/models';\n\nimport { CARDS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CardsConfiguration }                                     from '../configuration';\n\n\nexport interface ActivateRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Activates an inactive card. */\n    [\"activatePost\"]?: ActivatePost;\n}\n\nexport interface ChangeLimitsRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Change multiple limits at once for a specific card. */\n    [\"changeLimitsPostItem\"]?: Array<ChangeLimitsPostItem>;\n}\n\nexport interface GetCardByIdRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n}\n\nexport interface GetCardsRequestParams {\n    /** A list of card identifiers */\n    [\"ids\"]?: Array<string>;\n    /** The card status */\n    [\"status\"]?: Array<string>;\n    /** An array of card types */\n    [\"types\"]?: Array<string>;\n}\n\nexport interface RequestPinRequestParams {\n    /** Unique ID of the card that will receive a new PIN */\n    [\"id\"]: string;\n    [\"requestPinPost\"]?: RequestPinPost;\n}\n\nexport interface RequestReplacementRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    [\"requestReplacementPost\"]?: RequestReplacementPost;\n}\n\nexport interface ResetPinRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Request to reset the pin. */\n    [\"resetPinPost\"]?: ResetPinPost;\n}\n\nexport interface UpdateLockStatusRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Allow to update lock status of the card. */\n    [\"lockStatusPost\"]?: LockStatusPost;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CardsConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CARDS_BASE_PATH) basePath: string, @Optional() configuration: CardsConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Activates an inactive card.\n     * Activates an inactive card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public activate(requestParameters: ActivateRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Activates an inactive card.\n     * Activates an inactive card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public activate(requestParameters: ActivateRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Activates an inactive card.\n     * Activates an inactive card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public activate(requestParameters: ActivateRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Activates an inactive card.\n     * Activates an inactive card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public activate(requestParameters: ActivateRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling activate.');\n        }\n        const _activatePost = requestParameters[\"activatePost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/activation`,\n            _activatePost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public activateUrl(requestParameters: ActivateRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling activate.');\n        }\n        const _activatePost = requestParameters[\"activatePost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/activation`;\n    }\n\n    /**\n     * Change multiple limits at once for a specific card.\n     * Change multiple limits at once for a specific card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changeLimits(requestParameters: ChangeLimitsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Change multiple limits at once for a specific card.\n     * Change multiple limits at once for a specific card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changeLimits(requestParameters: ChangeLimitsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Change multiple limits at once for a specific card.\n     * Change multiple limits at once for a specific card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changeLimits(requestParameters: ChangeLimitsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Change multiple limits at once for a specific card.\n     * Change multiple limits at once for a specific card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changeLimits(requestParameters: ChangeLimitsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling changeLimits.');\n        }\n        const _changeLimitsPostItem = requestParameters[\"changeLimitsPostItem\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/limits`,\n            _changeLimitsPostItem,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public changeLimitsUrl(requestParameters: ChangeLimitsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling changeLimits.');\n        }\n        const _changeLimitsPostItem = requestParameters[\"changeLimitsPostItem\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/limits`;\n    }\n\n    /**\n     * Retrieve a card by id.\n     * Retrieve a card by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCardById(requestParameters: GetCardByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Retrieve a card by id.\n     * Retrieve a card by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCardById(requestParameters: GetCardByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Retrieve a card by id.\n     * Retrieve a card by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCardById(requestParameters: GetCardByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Retrieve a card by id.\n     * Retrieve a card by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCardById(requestParameters: GetCardByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getCardById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCardByIdUrl(requestParameters: GetCardByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getCardById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Retrieve a list of cards based on various criteria associated with the user.\n     * Retrieve a list of cards based on various criteria associated with the user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCards(requestParameters: GetCardsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<CardItem>>;\n    /**\n     * Retrieve a list of cards based on various criteria associated with the user.\n     * Retrieve a list of cards based on various criteria associated with the user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCards(requestParameters: GetCardsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<CardItem>>>;\n    /**\n     * Retrieve a list of cards based on various criteria associated with the user.\n     * Retrieve a list of cards based on various criteria associated with the user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCards(requestParameters: GetCardsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<CardItem>>>;\n    /**\n     * Retrieve a list of cards based on various criteria associated with the user.\n     * Retrieve a list of cards based on various criteria associated with the user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCards(requestParameters: GetCardsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _ids = requestParameters[\"ids\"];\n        const _status = requestParameters[\"status\"];\n        const _types = requestParameters[\"types\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_types) {\n            _types.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'types');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<CardItem>>(`${this.configuration.basePath}/client-api/v2/cards`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCardsUrl(requestParameters: GetCardsRequestParams): string {\n        const _ids = requestParameters[\"ids\"];\n        const _status = requestParameters[\"status\"];\n        const _types = requestParameters[\"types\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_types) {\n            _types.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'types');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/cards${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Requests a new PIN for the specified card\n     * Users may request a new PIN for a card when they forget it for example\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestPin(requestParameters: RequestPinRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Requests a new PIN for the specified card\n     * Users may request a new PIN for a card when they forget it for example\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestPin(requestParameters: RequestPinRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Requests a new PIN for the specified card\n     * Users may request a new PIN for a card when they forget it for example\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestPin(requestParameters: RequestPinRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Requests a new PIN for the specified card\n     * Users may request a new PIN for a card when they forget it for example\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestPin(requestParameters: RequestPinRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling requestPin.');\n        }\n        const _requestPinPost = requestParameters[\"requestPinPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/pin/request`,\n            _requestPinPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public requestPinUrl(requestParameters: RequestPinRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling requestPin.');\n        }\n        const _requestPinPost = requestParameters[\"requestPinPost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/pin/request`;\n    }\n\n    /**\n     * Allow to request a replacement of the card.\n     * Allow to request a replacement of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestReplacement(requestParameters: RequestReplacementRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Allow to request a replacement of the card.\n     * Allow to request a replacement of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestReplacement(requestParameters: RequestReplacementRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Allow to request a replacement of the card.\n     * Allow to request a replacement of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestReplacement(requestParameters: RequestReplacementRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Allow to request a replacement of the card.\n     * Allow to request a replacement of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestReplacement(requestParameters: RequestReplacementRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling requestReplacement.');\n        }\n        const _requestReplacementPost = requestParameters[\"requestReplacementPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/replacement`,\n            _requestReplacementPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public requestReplacementUrl(requestParameters: RequestReplacementRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling requestReplacement.');\n        }\n        const _requestReplacementPost = requestParameters[\"requestReplacementPost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/replacement`;\n    }\n\n    /**\n     * Request to reset the pin.\n     * Request to reset the pin.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public resetPin(requestParameters: ResetPinRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Request to reset the pin.\n     * Request to reset the pin.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public resetPin(requestParameters: ResetPinRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Request to reset the pin.\n     * Request to reset the pin.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public resetPin(requestParameters: ResetPinRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Request to reset the pin.\n     * Request to reset the pin.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public resetPin(requestParameters: ResetPinRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling resetPin.');\n        }\n        const _resetPinPost = requestParameters[\"resetPinPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/pin/reset`,\n            _resetPinPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public resetPinUrl(requestParameters: ResetPinRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling resetPin.');\n        }\n        const _resetPinPost = requestParameters[\"resetPinPost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/pin/reset`;\n    }\n\n    /**\n     * Allow to update lock status of the card.\n     * Allow to update lock status of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLockStatus(requestParameters: UpdateLockStatusRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Allow to update lock status of the card.\n     * Allow to update lock status of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLockStatus(requestParameters: UpdateLockStatusRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Allow to update lock status of the card.\n     * Allow to update lock status of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLockStatus(requestParameters: UpdateLockStatusRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Allow to update lock status of the card.\n     * Allow to update lock status of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLockStatus(requestParameters: UpdateLockStatusRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateLockStatus.');\n        }\n        const _lockStatusPost = requestParameters[\"lockStatusPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/lock-status`,\n            _lockStatusPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateLockStatusUrl(requestParameters: UpdateLockStatusRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateLockStatus.');\n        }\n        const _lockStatusPost = requestParameters[\"lockStatusPost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/lock-status`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/cards/{id}/activation URL pattern\n*/\nexport const CardsHttpServiceActivateMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/activation\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"sara-card-3\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5237\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2020-05-04T12:52:20.906+00:00\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"sara-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"sara-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 2000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"kim-card-2\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/limits URL pattern\n*/\nexport const CardsHttpServiceChangeLimitsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/limits\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"WEEKLY\",\n    \"amount\" : 1000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id} URL pattern\n*/\nexport const CardsHttpServiceGetCardByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"sara-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5235\",\n  \"limits\" : [ {\n    \"id\" : \"sara-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"sara-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 2000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\",\n      \"stepDateTime\" : \"2019-06-20T14:21:25.001Z\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"elon-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 500000,\n    \"maxAmount\" : 100000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"elon-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 1000000,\n    \"maxAmount\" : 800000,\n    \"minAmount\" : 10000\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 5000,\n    \"maxAmount\" : 1000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards URL pattern\n*/\nexport const CardsHttpServiceGetCardsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"sara-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5235\"\n}, {\n  \"id\" : \"sara-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Green Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"01\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5236\"\n}, {\n  \"id\" : \"sara-card-3\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5237\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2020-05-04T12:52:20.906+00:00\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\"\n    } ]\n  }\n}, {\n  \"id\" : \"sara-card-4\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Black Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"6235\"\n}, {\n  \"id\" : \"sara-card-5\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Blue Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"6236\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\",\n      \"stepDateTime\" : \"2019-06-20T14:21:25.001Z\"\n    } ]\n  }\n}, {\n  \"id\" : \"elon-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Infinite Privilege\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2045\",\n    \"month\" : \"01\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"6782\"\n}, {\n  \"id\" : \"elon-card-3\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Cancelled\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"UnderReplacement\",\n    \"reason\" : \"Lost\",\n    \"replacedById\" : \"4\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2048\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"1262\"\n}, {\n  \"id\" : \"elon-card-4\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2048\",\n    \"month\" : \"07\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"1289\"\n}, {\n  \"id\" : \"elon-card-5\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Platinum\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"11\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"4627\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-20T14:32:20.906Z\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-20T15:12:20.906Z\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-21T11:28:25.001Z\"\n    } ]\n  }\n}, {\n  \"id\" : \"elon-card-6\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"LOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2047\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8291\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}, {\n  \"id\" : \"john-card-2\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2031\",\n    \"month\" : \"02\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8299\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}, {\n  \"id\" : \"kim-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Iron\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2010\",\n    \"month\" : \"04\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9494\"\n}, {\n  \"id\" : \"kim-card-3\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Iron\",\n  \"status\" : \"Expired\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2010\",\n    \"month\" : \"04\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9494\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/pin/request URL pattern\n*/\nexport const CardsHttpServiceRequestPinMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/pin/request\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/replacement URL pattern\n*/\nexport const CardsHttpServiceRequestReplacementMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/replacement\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Damaged\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    } ]\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Stolen\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Lost\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/pin/reset URL pattern\n*/\nexport const CardsHttpServiceResetPinMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/pin/reset\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/lock-status URL pattern\n*/\nexport const CardsHttpServiceUpdateLockStatusMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/lock-status\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"elon-card-6\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2047\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8291\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"LOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 5000,\n    \"maxAmount\" : 1000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n\nexport const CardsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/activation\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"sara-card-3\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5237\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2020-05-04T12:52:20.906+00:00\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"sara-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"sara-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 2000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"kim-card-2\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/limits\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"WEEKLY\",\n    \"amount\" : 1000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"sara-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5235\",\n  \"limits\" : [ {\n    \"id\" : \"sara-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"sara-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 2000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\",\n      \"stepDateTime\" : \"2019-06-20T14:21:25.001Z\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"elon-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 500000,\n    \"maxAmount\" : 100000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"elon-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 1000000,\n    \"maxAmount\" : 800000,\n    \"minAmount\" : 10000\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 5000,\n    \"maxAmount\" : 1000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"sara-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5235\"\n}, {\n  \"id\" : \"sara-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Green Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"01\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5236\"\n}, {\n  \"id\" : \"sara-card-3\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5237\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2020-05-04T12:52:20.906+00:00\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\"\n    } ]\n  }\n}, {\n  \"id\" : \"sara-card-4\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Black Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"6235\"\n}, {\n  \"id\" : \"sara-card-5\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Blue Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"6236\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\",\n      \"stepDateTime\" : \"2019-06-20T14:21:25.001Z\"\n    } ]\n  }\n}, {\n  \"id\" : \"elon-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Infinite Privilege\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2045\",\n    \"month\" : \"01\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"6782\"\n}, {\n  \"id\" : \"elon-card-3\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Cancelled\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"UnderReplacement\",\n    \"reason\" : \"Lost\",\n    \"replacedById\" : \"4\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2048\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"1262\"\n}, {\n  \"id\" : \"elon-card-4\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2048\",\n    \"month\" : \"07\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"1289\"\n}, {\n  \"id\" : \"elon-card-5\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Platinum\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"11\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"4627\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-20T14:32:20.906Z\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-20T15:12:20.906Z\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-21T11:28:25.001Z\"\n    } ]\n  }\n}, {\n  \"id\" : \"elon-card-6\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"LOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2047\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8291\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}, {\n  \"id\" : \"john-card-2\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2031\",\n    \"month\" : \"02\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8299\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}, {\n  \"id\" : \"kim-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Iron\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2010\",\n    \"month\" : \"04\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9494\"\n}, {\n  \"id\" : \"kim-card-3\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Iron\",\n  \"status\" : \"Expired\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2010\",\n    \"month\" : \"04\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9494\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ ]\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/pin/request\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/replacement\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Damaged\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    } ]\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Stolen\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Lost\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/pin/reset\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/lock-status\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"elon-card-6\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2047\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8291\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"LOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 5000,\n    \"maxAmount\" : 1000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n]\n);\n\n\n","/**\n * Cards\n * Cards Client API\n *\n * The version of the OpenAPI document: 2.2.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { TravelNotice } from '../model/models';\n\nimport { CARDS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CardsConfiguration }                                     from '../configuration';\n\n\nexport interface CreateTravelNoticeRequestParams {\n    /** Create a new travel notice */\n    [\"travelNotice\"]?: TravelNotice;\n}\n\nexport interface DeleteTravelNoticeByIdRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n}\n\nexport interface GetTravelNoticeByIdRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n}\n\nexport interface UpdateTravelNoticeRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Update a travel notice */\n    [\"travelNotice\"]?: TravelNotice;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TravelNoticesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CardsConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CARDS_BASE_PATH) basePath: string, @Optional() configuration: CardsConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Create a new travel notice.\n     * Create a new travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createTravelNotice(requestParameters: CreateTravelNoticeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<TravelNotice>;\n    /**\n     * Create a new travel notice.\n     * Create a new travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createTravelNotice(requestParameters: CreateTravelNoticeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<TravelNotice>>;\n    /**\n     * Create a new travel notice.\n     * Create a new travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createTravelNotice(requestParameters: CreateTravelNoticeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<TravelNotice>>;\n    /**\n     * Create a new travel notice.\n     * Create a new travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createTravelNotice(requestParameters: CreateTravelNoticeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _travelNotice = requestParameters[\"travelNotice\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<TravelNotice>(`${this.configuration.basePath}/client-api/v2/travel-notices`,\n            _travelNotice,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public createTravelNoticeUrl(requestParameters: CreateTravelNoticeRequestParams): string {\n        const _travelNotice = requestParameters[\"travelNotice\"];\n        return `${this.configuration.basePath}/client-api/v2/travel-notices`;\n    }\n\n    /**\n     * Delete a travel notice.\n     * Delete a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTravelNoticeById(requestParameters: DeleteTravelNoticeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a travel notice.\n     * Delete a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTravelNoticeById(requestParameters: DeleteTravelNoticeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a travel notice.\n     * Delete a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTravelNoticeById(requestParameters: DeleteTravelNoticeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a travel notice.\n     * Delete a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTravelNoticeById(requestParameters: DeleteTravelNoticeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteTravelNoticeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteTravelNoticeByIdUrl(requestParameters: DeleteTravelNoticeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteTravelNoticeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Read a travel notice.\n     * Read a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNoticeById(requestParameters: GetTravelNoticeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<TravelNotice>;\n    /**\n     * Read a travel notice.\n     * Read a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNoticeById(requestParameters: GetTravelNoticeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<TravelNotice>>;\n    /**\n     * Read a travel notice.\n     * Read a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNoticeById(requestParameters: GetTravelNoticeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<TravelNotice>>;\n    /**\n     * Read a travel notice.\n     * Read a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNoticeById(requestParameters: GetTravelNoticeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getTravelNoticeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<TravelNotice>(`${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getTravelNoticeByIdUrl(requestParameters: GetTravelNoticeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getTravelNoticeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Sorted list of travel notices, the client must honor the provided order.\n     * Sorted list of travel notices, the client must honor the provided order\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNotices(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<TravelNotice>>;\n    /**\n     * Sorted list of travel notices, the client must honor the provided order.\n     * Sorted list of travel notices, the client must honor the provided order\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNotices(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<TravelNotice>>>;\n    /**\n     * Sorted list of travel notices, the client must honor the provided order.\n     * Sorted list of travel notices, the client must honor the provided order\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNotices(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<TravelNotice>>>;\n    /**\n     * Sorted list of travel notices, the client must honor the provided order.\n     * Sorted list of travel notices, the client must honor the provided order\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNotices(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<TravelNotice>>(`${this.configuration.basePath}/client-api/v2/travel-notices`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getTravelNoticesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/travel-notices`;\n    }\n\n    /**\n     * Update a travel notice.\n     * Update a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTravelNotice(requestParameters: UpdateTravelNoticeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<TravelNotice>;\n    /**\n     * Update a travel notice.\n     * Update a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTravelNotice(requestParameters: UpdateTravelNoticeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<TravelNotice>>;\n    /**\n     * Update a travel notice.\n     * Update a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTravelNotice(requestParameters: UpdateTravelNoticeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<TravelNotice>>;\n    /**\n     * Update a travel notice.\n     * Update a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTravelNotice(requestParameters: UpdateTravelNoticeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateTravelNotice.');\n        }\n        const _travelNotice = requestParameters[\"travelNotice\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<TravelNotice>(`${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`,\n            _travelNotice,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateTravelNoticeUrl(requestParameters: UpdateTravelNoticeRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateTravelNotice.');\n        }\n        const _travelNotice = requestParameters[\"travelNotice\"];\n        return `${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/travel-notices URL pattern\n*/\nexport const TravelNoticesHttpServiceCreateTravelNoticeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"sara-travel-notice-1\",\n  \"cardIds\" : [ \"sara-card-1\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-travel-notice-1\",\n  \"cardIds\" : [ \"john-card-1\", \"john-card-2\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"NL\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/travel-notices/{id} URL pattern\n*/\nexport const TravelNoticesHttpServiceDeleteTravelNoticeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/travel-notices/{id} URL pattern\n*/\nexport const TravelNoticesHttpServiceGetTravelNoticeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/travel-notices URL pattern\n*/\nexport const TravelNoticesHttpServiceGetTravelNoticesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"sara-travel-notice-1\",\n  \"cardIds\" : [ \"sara-card-1\", \"sara-card-4\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"MEX\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  } ]\n}, {\n  \"id\" : \"sara-travel-notice-2\",\n  \"cardIds\" : [ \"sara-card-1\", \"sara-card-2\", \"sara-card-4\", \"sara-card-5\" ],\n  \"departureDate\" : \"2019-12-10\",\n  \"arrivalDate\" : \"2019-12-23\",\n  \"destinations\" : [ {\n    \"country\" : \"JPN\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-CA\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"elon-travel-notice-1\",\n  \"cardIds\" : [ \"elon-card-1\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  }, {\n    \"country\" : \"MEX\"\n  } ]\n}, {\n  \"id\" : \"elon-travel-notice-2\",\n  \"cardIds\" : [ \"elon-card-1\", \"elon-card-2\", \"elon-card-3\", \"elon-card-4\" ],\n  \"departureDate\" : \"2019-12-10\",\n  \"arrivalDate\" : \"2019-12-23\",\n  \"destinations\" : [ {\n    \"country\" : \"JPN\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-CA\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n}, {\n  \"id\" : \"elon-travel-notice-3\",\n  \"cardIds\" : [ \"elon-card-4\" ],\n  \"departureDate\" : \"2019-07-23\",\n  \"arrivalDate\" : \"2020-08-11\",\n  \"destinations\" : [ {\n    \"country\" : \"KHM\"\n  }, {\n    \"country\" : \"KOR\"\n  }, {\n    \"country\" : \"IND\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"john-travel-notice-1\",\n  \"cardIds\" : [ \"john-card-1\", \"john-card-2\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"NL\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ ]\n                },\n                {\n                    status: 200,\n                    body: [ ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/travel-notices/{id} URL pattern\n*/\nexport const TravelNoticesHttpServiceUpdateTravelNoticeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"elon-travel-notice-1\",\n  \"cardIds\" : [ \"elon-card-1\", \"elon-card-6\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  }, {\n    \"country\" : \"MEX\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"Other_Number\"\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n                },\n    ]\n}]);\n\nexport const TravelNoticesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/travel-notices\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"sara-travel-notice-1\",\n  \"cardIds\" : [ \"sara-card-1\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-travel-notice-1\",\n  \"cardIds\" : [ \"john-card-1\", \"john-card-2\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"NL\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/travel-notices\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"sara-travel-notice-1\",\n  \"cardIds\" : [ \"sara-card-1\", \"sara-card-4\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"MEX\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  } ]\n}, {\n  \"id\" : \"sara-travel-notice-2\",\n  \"cardIds\" : [ \"sara-card-1\", \"sara-card-2\", \"sara-card-4\", \"sara-card-5\" ],\n  \"departureDate\" : \"2019-12-10\",\n  \"arrivalDate\" : \"2019-12-23\",\n  \"destinations\" : [ {\n    \"country\" : \"JPN\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-CA\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"elon-travel-notice-1\",\n  \"cardIds\" : [ \"elon-card-1\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  }, {\n    \"country\" : \"MEX\"\n  } ]\n}, {\n  \"id\" : \"elon-travel-notice-2\",\n  \"cardIds\" : [ \"elon-card-1\", \"elon-card-2\", \"elon-card-3\", \"elon-card-4\" ],\n  \"departureDate\" : \"2019-12-10\",\n  \"arrivalDate\" : \"2019-12-23\",\n  \"destinations\" : [ {\n    \"country\" : \"JPN\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-CA\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n}, {\n  \"id\" : \"elon-travel-notice-3\",\n  \"cardIds\" : [ \"elon-card-4\" ],\n  \"departureDate\" : \"2019-07-23\",\n  \"arrivalDate\" : \"2020-08-11\",\n  \"destinations\" : [ {\n    \"country\" : \"KHM\"\n  }, {\n    \"country\" : \"KOR\"\n  }, {\n    \"country\" : \"IND\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"john-travel-notice-1\",\n  \"cardIds\" : [ \"john-card-1\", \"john-card-2\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"NL\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n            },\n            {\n                status: 200,\n                body: [ ]\n            },\n            {\n                status: 200,\n                body: [ ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"elon-travel-notice-1\",\n  \"cardIds\" : [ \"elon-card-1\", \"elon-card-6\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  }, {\n    \"country\" : \"MEX\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"Other_Number\"\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n            },\n\n\n\n\n    ]\n},\n]\n);\n\n\n"],"names":["DeliveryTransitStep","InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}