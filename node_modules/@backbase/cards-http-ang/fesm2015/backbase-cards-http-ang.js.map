{"version":3,"file":"backbase-cards-http-ang.js","sources":["../../model/deliveryTransitStep.ts","../../model/lockStatus.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/cards.service.ts","../../api/cards.service.mocks.ts","../../api/travelNotices.service.ts","../../api/travelNotices.service.mocks.ts"],"sourcesContent":["/**\n * Cards\n * Cards Client API\n *\n * The version of the OpenAPI document: 2.2.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface DeliveryTransitStep { \n    /**\n     * Name of the step.\n     */\n    [\"name\"]: string;\n    /**\n     * Status of this step.\n     */\n    [\"status\"]: DeliveryTransitStep.StatusEnum;\n    /**\n     * DateTime in UTC ISO8601, defines when the step will probably happen (a.k.a status=PENDING and stepDateTime &gt; now()) or when step has already happened. CONVENTION: when time is 00:00:00.000Z it means that it\\'s date-only information\n     */\n    [\"stepDateTime\"]?: string;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace DeliveryTransitStep {\n    export type StatusEnum = 'SUCCESS' | 'FAILED' | 'PENDING';\n    export const StatusEnum = {\n        SUCCESS: 'SUCCESS' as StatusEnum,\n        FAILED: 'FAILED' as StatusEnum,\n        PENDING: 'PENDING' as StatusEnum\n    };\n}\n\n\n","/**\n * Cards\n * Cards Client API\n *\n * The version of the OpenAPI document: 2.2.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Lock Status of card\n */\nexport type LockStatus = 'LOCKED' | 'UNLOCKED';\n\nexport const LockStatus = {\n    LOCKED: 'LOCKED' as LockStatus,\n    UNLOCKED: 'UNLOCKED' as LockStatus\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const CARDS_BASE_PATH = new InjectionToken<string>('CARDS_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface CardsConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class CardsConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: CardsConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link CardsConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link CardsConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module CardsConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { CardsConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class CardsApiModule {\n    public static forRoot(configurationFactory: () => CardsConfiguration): ModuleWithProviders<CardsApiModule> {\n        return {\n            ngModule: CardsApiModule,\n            providers: [ { provide: CardsConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: CardsApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: CardsConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('CardsApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Cards\n * Cards Client API\n *\n * The version of the OpenAPI document: 2.2.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ActivatePost } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { CardItem } from '../model/models';\nimport { ChangeLimitsPostItem } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { LockStatusPost } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { RequestPinPost } from '../model/models';\nimport { RequestReplacementPost } from '../model/models';\nimport { ResetPinPost } from '../model/models';\n\nimport { CARDS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CardsConfiguration }                                     from '../configuration';\n\n\nexport interface ActivateRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Activates an inactive card. */\n    [\"activatePost\"]?: ActivatePost;\n}\n\nexport interface ChangeLimitsRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Change multiple limits at once for a specific card. */\n    [\"changeLimitsPostItem\"]?: Array<ChangeLimitsPostItem>;\n}\n\nexport interface GetCardByIdRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n}\n\nexport interface GetCardsRequestParams {\n    /** A list of card identifiers */\n    [\"ids\"]?: Array<string>;\n    /** The card status */\n    [\"status\"]?: Array<string>;\n    /** An array of card types */\n    [\"types\"]?: Array<string>;\n}\n\nexport interface RequestPinRequestParams {\n    /** Unique ID of the card that will receive a new PIN */\n    [\"id\"]: string;\n    [\"requestPinPost\"]?: RequestPinPost;\n}\n\nexport interface RequestReplacementRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    [\"requestReplacementPost\"]?: RequestReplacementPost;\n}\n\nexport interface ResetPinRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Request to reset the pin. */\n    [\"resetPinPost\"]?: ResetPinPost;\n}\n\nexport interface UpdateLockStatusRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Allow to update lock status of the card. */\n    [\"lockStatusPost\"]?: LockStatusPost;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CardsConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CARDS_BASE_PATH) basePath: string, @Optional() configuration: CardsConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Activates an inactive card.\n     * Activates an inactive card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public activate(requestParameters: ActivateRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Activates an inactive card.\n     * Activates an inactive card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public activate(requestParameters: ActivateRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Activates an inactive card.\n     * Activates an inactive card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public activate(requestParameters: ActivateRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Activates an inactive card.\n     * Activates an inactive card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public activate(requestParameters: ActivateRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling activate.');\n        }\n        const _activatePost = requestParameters[\"activatePost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/activation`,\n            _activatePost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public activateUrl(requestParameters: ActivateRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling activate.');\n        }\n        const _activatePost = requestParameters[\"activatePost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/activation`;\n    }\n\n    /**\n     * Change multiple limits at once for a specific card.\n     * Change multiple limits at once for a specific card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changeLimits(requestParameters: ChangeLimitsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Change multiple limits at once for a specific card.\n     * Change multiple limits at once for a specific card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changeLimits(requestParameters: ChangeLimitsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Change multiple limits at once for a specific card.\n     * Change multiple limits at once for a specific card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changeLimits(requestParameters: ChangeLimitsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Change multiple limits at once for a specific card.\n     * Change multiple limits at once for a specific card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changeLimits(requestParameters: ChangeLimitsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling changeLimits.');\n        }\n        const _changeLimitsPostItem = requestParameters[\"changeLimitsPostItem\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/limits`,\n            _changeLimitsPostItem,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public changeLimitsUrl(requestParameters: ChangeLimitsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling changeLimits.');\n        }\n        const _changeLimitsPostItem = requestParameters[\"changeLimitsPostItem\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/limits`;\n    }\n\n    /**\n     * Retrieve a card by id.\n     * Retrieve a card by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCardById(requestParameters: GetCardByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Retrieve a card by id.\n     * Retrieve a card by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCardById(requestParameters: GetCardByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Retrieve a card by id.\n     * Retrieve a card by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCardById(requestParameters: GetCardByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Retrieve a card by id.\n     * Retrieve a card by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCardById(requestParameters: GetCardByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getCardById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCardByIdUrl(requestParameters: GetCardByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getCardById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Retrieve a list of cards based on various criteria associated with the user.\n     * Retrieve a list of cards based on various criteria associated with the user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCards(requestParameters: GetCardsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<CardItem>>;\n    /**\n     * Retrieve a list of cards based on various criteria associated with the user.\n     * Retrieve a list of cards based on various criteria associated with the user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCards(requestParameters: GetCardsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<CardItem>>>;\n    /**\n     * Retrieve a list of cards based on various criteria associated with the user.\n     * Retrieve a list of cards based on various criteria associated with the user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCards(requestParameters: GetCardsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<CardItem>>>;\n    /**\n     * Retrieve a list of cards based on various criteria associated with the user.\n     * Retrieve a list of cards based on various criteria associated with the user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCards(requestParameters: GetCardsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _ids = requestParameters[\"ids\"];\n        const _status = requestParameters[\"status\"];\n        const _types = requestParameters[\"types\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_types) {\n            _types.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'types');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<CardItem>>(`${this.configuration.basePath}/client-api/v2/cards`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCardsUrl(requestParameters: GetCardsRequestParams): string {\n        const _ids = requestParameters[\"ids\"];\n        const _status = requestParameters[\"status\"];\n        const _types = requestParameters[\"types\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_types) {\n            _types.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'types');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/cards${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Requests a new PIN for the specified card\n     * Users may request a new PIN for a card when they forget it for example\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestPin(requestParameters: RequestPinRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Requests a new PIN for the specified card\n     * Users may request a new PIN for a card when they forget it for example\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestPin(requestParameters: RequestPinRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Requests a new PIN for the specified card\n     * Users may request a new PIN for a card when they forget it for example\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestPin(requestParameters: RequestPinRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Requests a new PIN for the specified card\n     * Users may request a new PIN for a card when they forget it for example\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestPin(requestParameters: RequestPinRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling requestPin.');\n        }\n        const _requestPinPost = requestParameters[\"requestPinPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/pin/request`,\n            _requestPinPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public requestPinUrl(requestParameters: RequestPinRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling requestPin.');\n        }\n        const _requestPinPost = requestParameters[\"requestPinPost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/pin/request`;\n    }\n\n    /**\n     * Allow to request a replacement of the card.\n     * Allow to request a replacement of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestReplacement(requestParameters: RequestReplacementRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Allow to request a replacement of the card.\n     * Allow to request a replacement of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestReplacement(requestParameters: RequestReplacementRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Allow to request a replacement of the card.\n     * Allow to request a replacement of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestReplacement(requestParameters: RequestReplacementRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Allow to request a replacement of the card.\n     * Allow to request a replacement of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public requestReplacement(requestParameters: RequestReplacementRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling requestReplacement.');\n        }\n        const _requestReplacementPost = requestParameters[\"requestReplacementPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/replacement`,\n            _requestReplacementPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public requestReplacementUrl(requestParameters: RequestReplacementRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling requestReplacement.');\n        }\n        const _requestReplacementPost = requestParameters[\"requestReplacementPost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/replacement`;\n    }\n\n    /**\n     * Request to reset the pin.\n     * Request to reset the pin.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public resetPin(requestParameters: ResetPinRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Request to reset the pin.\n     * Request to reset the pin.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public resetPin(requestParameters: ResetPinRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Request to reset the pin.\n     * Request to reset the pin.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public resetPin(requestParameters: ResetPinRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Request to reset the pin.\n     * Request to reset the pin.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public resetPin(requestParameters: ResetPinRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling resetPin.');\n        }\n        const _resetPinPost = requestParameters[\"resetPinPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/pin/reset`,\n            _resetPinPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public resetPinUrl(requestParameters: ResetPinRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling resetPin.');\n        }\n        const _resetPinPost = requestParameters[\"resetPinPost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/pin/reset`;\n    }\n\n    /**\n     * Allow to update lock status of the card.\n     * Allow to update lock status of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLockStatus(requestParameters: UpdateLockStatusRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CardItem>;\n    /**\n     * Allow to update lock status of the card.\n     * Allow to update lock status of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLockStatus(requestParameters: UpdateLockStatusRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CardItem>>;\n    /**\n     * Allow to update lock status of the card.\n     * Allow to update lock status of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLockStatus(requestParameters: UpdateLockStatusRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CardItem>>;\n    /**\n     * Allow to update lock status of the card.\n     * Allow to update lock status of the card.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLockStatus(requestParameters: UpdateLockStatusRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateLockStatus.');\n        }\n        const _lockStatusPost = requestParameters[\"lockStatusPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CardItem>(`${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/lock-status`,\n            _lockStatusPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateLockStatusUrl(requestParameters: UpdateLockStatusRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateLockStatus.');\n        }\n        const _lockStatusPost = requestParameters[\"lockStatusPost\"];\n        return `${this.configuration.basePath}/client-api/v2/cards/${encodeURIComponent(String(_id))}/lock-status`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/cards/{id}/activation URL pattern\n*/\nexport const CardsHttpServiceActivateMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/activation\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"sara-card-3\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5237\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2020-05-04T12:52:20.906+00:00\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"sara-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"sara-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 2000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"kim-card-2\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/limits URL pattern\n*/\nexport const CardsHttpServiceChangeLimitsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/limits\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"WEEKLY\",\n    \"amount\" : 1000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id} URL pattern\n*/\nexport const CardsHttpServiceGetCardByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"sara-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5235\",\n  \"limits\" : [ {\n    \"id\" : \"sara-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"sara-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 2000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\",\n      \"stepDateTime\" : \"2019-06-20T14:21:25.001Z\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"elon-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 500000,\n    \"maxAmount\" : 100000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"elon-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 1000000,\n    \"maxAmount\" : 800000,\n    \"minAmount\" : 10000\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 5000,\n    \"maxAmount\" : 1000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards URL pattern\n*/\nexport const CardsHttpServiceGetCardsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"sara-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5235\"\n}, {\n  \"id\" : \"sara-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Green Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"01\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5236\"\n}, {\n  \"id\" : \"sara-card-3\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5237\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2020-05-04T12:52:20.906+00:00\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\"\n    } ]\n  }\n}, {\n  \"id\" : \"sara-card-4\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Black Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"6235\"\n}, {\n  \"id\" : \"sara-card-5\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Blue Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"6236\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\",\n      \"stepDateTime\" : \"2019-06-20T14:21:25.001Z\"\n    } ]\n  }\n}, {\n  \"id\" : \"elon-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Infinite Privilege\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2045\",\n    \"month\" : \"01\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"6782\"\n}, {\n  \"id\" : \"elon-card-3\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Cancelled\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"UnderReplacement\",\n    \"reason\" : \"Lost\",\n    \"replacedById\" : \"4\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2048\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"1262\"\n}, {\n  \"id\" : \"elon-card-4\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2048\",\n    \"month\" : \"07\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"1289\"\n}, {\n  \"id\" : \"elon-card-5\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Platinum\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"11\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"4627\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-20T14:32:20.906Z\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-20T15:12:20.906Z\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-21T11:28:25.001Z\"\n    } ]\n  }\n}, {\n  \"id\" : \"elon-card-6\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"LOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2047\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8291\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}, {\n  \"id\" : \"john-card-2\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2031\",\n    \"month\" : \"02\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8299\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}, {\n  \"id\" : \"kim-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Iron\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2010\",\n    \"month\" : \"04\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9494\"\n}, {\n  \"id\" : \"kim-card-3\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Iron\",\n  \"status\" : \"Expired\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2010\",\n    \"month\" : \"04\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9494\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/pin/request URL pattern\n*/\nexport const CardsHttpServiceRequestPinMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/pin/request\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/replacement URL pattern\n*/\nexport const CardsHttpServiceRequestReplacementMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/replacement\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Damaged\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    } ]\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Stolen\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Lost\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/pin/reset URL pattern\n*/\nexport const CardsHttpServiceResetPinMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/pin/reset\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/cards/{id}/lock-status URL pattern\n*/\nexport const CardsHttpServiceUpdateLockStatusMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/cards/{id}/lock-status\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"elon-card-6\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2047\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8291\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"LOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 5000,\n    \"maxAmount\" : 1000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n                },\n    ]\n}]);\n\nexport const CardsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/activation\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"sara-card-3\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5237\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2020-05-04T12:52:20.906+00:00\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"sara-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"sara-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 2000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"kim-card-2\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/limits\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"WEEKLY\",\n    \"amount\" : 1000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"sara-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5235\",\n  \"limits\" : [ {\n    \"id\" : \"sara-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"sara-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 2000,\n    \"maxAmount\" : 10000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\",\n      \"stepDateTime\" : \"2019-06-20T14:21:25.001Z\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"elon-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 500000,\n    \"maxAmount\" : 100000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"elon-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 1000000,\n    \"maxAmount\" : 800000,\n    \"minAmount\" : 10000\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 5000,\n    \"maxAmount\" : 1000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"sara-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5235\"\n}, {\n  \"id\" : \"sara-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Green Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"01\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5236\"\n}, {\n  \"id\" : \"sara-card-3\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold Card\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"5237\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2020-05-04T12:52:20.906+00:00\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\"\n    } ]\n  }\n}, {\n  \"id\" : \"sara-card-4\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Black Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"6235\"\n}, {\n  \"id\" : \"sara-card-5\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Blue Card\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Sara Williams\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2022\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"USD\",\n  \"maskedNumber\" : \"6236\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"PENDING\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"PENDING\",\n      \"stepDateTime\" : \"2019-06-20T14:21:25.001Z\"\n    } ]\n  }\n}, {\n  \"id\" : \"elon-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Infinite Privilege\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2045\",\n    \"month\" : \"01\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"6782\"\n}, {\n  \"id\" : \"elon-card-3\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Cancelled\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"UnderReplacement\",\n    \"reason\" : \"Lost\",\n    \"replacedById\" : \"4\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2048\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"1262\"\n}, {\n  \"id\" : \"elon-card-4\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2048\",\n    \"month\" : \"07\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"1289\"\n}, {\n  \"id\" : \"elon-card-5\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Platinum\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"11\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"4627\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-20T14:32:20.906Z\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-20T15:12:20.906Z\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-21T11:28:25.001Z\"\n    } ]\n  }\n}, {\n  \"id\" : \"elon-card-6\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"LOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2047\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8291\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 3000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}, {\n  \"id\" : \"john-card-2\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2031\",\n    \"month\" : \"02\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8299\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}, {\n  \"id\" : \"kim-card-2\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Iron\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2010\",\n    \"month\" : \"04\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9494\"\n}, {\n  \"id\" : \"kim-card-3\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Iron\",\n  \"status\" : \"Expired\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2010\",\n    \"month\" : \"04\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9494\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ ]\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/pin/request\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/replacement\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"elon-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"World Elite\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Damaged\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2050\",\n    \"month\" : \"12\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5235\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"PENDING\"\n    } ]\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Stolen\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"kim-card-1\",\n  \"brand\" : \"mastercard\",\n  \"type\" : \"Debit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Copper\",\n  \"status\" : \"Inactive\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"ReplacementRequested\",\n    \"reason\" : \"Lost\"\n  },\n  \"holder\" : {\n    \"name\" : \"Kim Sook\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2027\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"9292\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/pin/reset\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/elon/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/cards/{id}/lock-status\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"elon-card-6\",\n  \"brand\" : \"american_express\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Reserve\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"UNLOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"Elon\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2047\",\n    \"month\" : \"03\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"8291\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-card-1\",\n  \"brand\" : \"visa\",\n  \"type\" : \"Credit\",\n  \"subType\" : \"ATM\",\n  \"name\" : \"Gold\",\n  \"status\" : \"Active\",\n  \"lockStatus\" : \"LOCKED\",\n  \"replacement\" : {\n    \"status\" : \"NotUnderReplacement\"\n  },\n  \"holder\" : {\n    \"name\" : \"John Doe\"\n  },\n  \"expiryDate\" : {\n    \"year\" : \"2030\",\n    \"month\" : \"06\"\n  },\n  \"currency\" : \"EUR\",\n  \"maskedNumber\" : \"5827\",\n  \"delivery\" : {\n    \"transitSteps\" : [ {\n      \"name\" : \"Ordered\",\n      \"status\" : \"SUCCESS\",\n      \"stepDateTime\" : \"2019-06-19T12:52:20.906Z\"\n    }, {\n      \"name\" : \"Processed\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"In Transit\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"name\" : \"Delivered\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"limits\" : [ {\n    \"id\" : \"john-limit-1\",\n    \"channel\" : \"ATM\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 5000,\n    \"maxAmount\" : 1000,\n    \"minAmount\" : 0\n  }, {\n    \"id\" : \"john-limit-2\",\n    \"channel\" : \"ONLINE\",\n    \"frequency\" : \"DAILY\",\n    \"amount\" : 20000,\n    \"maxAmount\" : 9000,\n    \"minAmount\" : 0\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1cards~1%7Bid%7D/get/responses/200/content/application~1json/examples/kim/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"delivery\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"transitSteps\" : [ {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    }, {\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"name\" : \"name\",\n      \"stepDateTime\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"status\" : \"SUCCESS\"\n    } ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"holder\" : {\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"name\" : \"name\"\n  },\n  \"type\" : \"type\",\n  \"expiryDate\" : {\n    \"month\" : \"month\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"year\" : \"year\"\n  },\n  \"maskedNumber\" : \"maskedNumber\",\n  \"name\" : \"name\",\n  \"subType\" : \"subType\",\n  \"currency\" : \"currency\",\n  \"id\" : \"id\",\n  \"brand\" : \"brand\",\n  \"replacement\" : {\n    \"reason\" : \"reason\",\n    \"replacingId\" : \"replacingId\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"replacedById\" : \"replacedById\",\n    \"status\" : \"status\"\n  },\n  \"limits\" : [ {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  }, {\n    \"minAmount\" : 1.4658129805029452,\n    \"amount\" : 0.8008281904610115,\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"channel\" : \"channel\",\n    \"id\" : \"id\",\n    \"maxAmount\" : 6.027456183070403,\n    \"frequency\" : \"frequency\"\n  } ],\n  \"status\" : \"status\"\n}\n            },\n\n\n\n    ]\n},\n]\n);\n\n\n","/**\n * Cards\n * Cards Client API\n *\n * The version of the OpenAPI document: 2.2.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { TravelNotice } from '../model/models';\n\nimport { CARDS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CardsConfiguration }                                     from '../configuration';\n\n\nexport interface CreateTravelNoticeRequestParams {\n    /** Create a new travel notice */\n    [\"travelNotice\"]?: TravelNotice;\n}\n\nexport interface DeleteTravelNoticeByIdRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n}\n\nexport interface GetTravelNoticeByIdRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n}\n\nexport interface UpdateTravelNoticeRequestParams {\n    /** Generated parameter by Raml2OpenAPI. Please specify the URI parameter in RAML */\n    [\"id\"]: string;\n    /** Update a travel notice */\n    [\"travelNotice\"]?: TravelNotice;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TravelNoticesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CardsConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CARDS_BASE_PATH) basePath: string, @Optional() configuration: CardsConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Create a new travel notice.\n     * Create a new travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createTravelNotice(requestParameters: CreateTravelNoticeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<TravelNotice>;\n    /**\n     * Create a new travel notice.\n     * Create a new travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createTravelNotice(requestParameters: CreateTravelNoticeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<TravelNotice>>;\n    /**\n     * Create a new travel notice.\n     * Create a new travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createTravelNotice(requestParameters: CreateTravelNoticeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<TravelNotice>>;\n    /**\n     * Create a new travel notice.\n     * Create a new travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createTravelNotice(requestParameters: CreateTravelNoticeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _travelNotice = requestParameters[\"travelNotice\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<TravelNotice>(`${this.configuration.basePath}/client-api/v2/travel-notices`,\n            _travelNotice,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public createTravelNoticeUrl(requestParameters: CreateTravelNoticeRequestParams): string {\n        const _travelNotice = requestParameters[\"travelNotice\"];\n        return `${this.configuration.basePath}/client-api/v2/travel-notices`;\n    }\n\n    /**\n     * Delete a travel notice.\n     * Delete a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTravelNoticeById(requestParameters: DeleteTravelNoticeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a travel notice.\n     * Delete a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTravelNoticeById(requestParameters: DeleteTravelNoticeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a travel notice.\n     * Delete a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTravelNoticeById(requestParameters: DeleteTravelNoticeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a travel notice.\n     * Delete a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTravelNoticeById(requestParameters: DeleteTravelNoticeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteTravelNoticeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteTravelNoticeByIdUrl(requestParameters: DeleteTravelNoticeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteTravelNoticeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Read a travel notice.\n     * Read a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNoticeById(requestParameters: GetTravelNoticeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<TravelNotice>;\n    /**\n     * Read a travel notice.\n     * Read a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNoticeById(requestParameters: GetTravelNoticeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<TravelNotice>>;\n    /**\n     * Read a travel notice.\n     * Read a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNoticeById(requestParameters: GetTravelNoticeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<TravelNotice>>;\n    /**\n     * Read a travel notice.\n     * Read a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNoticeById(requestParameters: GetTravelNoticeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getTravelNoticeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<TravelNotice>(`${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getTravelNoticeByIdUrl(requestParameters: GetTravelNoticeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getTravelNoticeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Sorted list of travel notices, the client must honor the provided order.\n     * Sorted list of travel notices, the client must honor the provided order\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNotices(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<TravelNotice>>;\n    /**\n     * Sorted list of travel notices, the client must honor the provided order.\n     * Sorted list of travel notices, the client must honor the provided order\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNotices(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<TravelNotice>>>;\n    /**\n     * Sorted list of travel notices, the client must honor the provided order.\n     * Sorted list of travel notices, the client must honor the provided order\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNotices(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<TravelNotice>>>;\n    /**\n     * Sorted list of travel notices, the client must honor the provided order.\n     * Sorted list of travel notices, the client must honor the provided order\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTravelNotices(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<TravelNotice>>(`${this.configuration.basePath}/client-api/v2/travel-notices`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getTravelNoticesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/travel-notices`;\n    }\n\n    /**\n     * Update a travel notice.\n     * Update a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTravelNotice(requestParameters: UpdateTravelNoticeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<TravelNotice>;\n    /**\n     * Update a travel notice.\n     * Update a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTravelNotice(requestParameters: UpdateTravelNoticeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<TravelNotice>>;\n    /**\n     * Update a travel notice.\n     * Update a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTravelNotice(requestParameters: UpdateTravelNoticeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<TravelNotice>>;\n    /**\n     * Update a travel notice.\n     * Update a travel notice\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateTravelNotice(requestParameters: UpdateTravelNoticeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateTravelNotice.');\n        }\n        const _travelNotice = requestParameters[\"travelNotice\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<TravelNotice>(`${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`,\n            _travelNotice,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateTravelNoticeUrl(requestParameters: UpdateTravelNoticeRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateTravelNotice.');\n        }\n        const _travelNotice = requestParameters[\"travelNotice\"];\n        return `${this.configuration.basePath}/client-api/v2/travel-notices/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/travel-notices URL pattern\n*/\nexport const TravelNoticesHttpServiceCreateTravelNoticeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"sara-travel-notice-1\",\n  \"cardIds\" : [ \"sara-card-1\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"john-travel-notice-1\",\n  \"cardIds\" : [ \"john-card-1\", \"john-card-2\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"NL\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/travel-notices/{id} URL pattern\n*/\nexport const TravelNoticesHttpServiceDeleteTravelNoticeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/travel-notices/{id} URL pattern\n*/\nexport const TravelNoticesHttpServiceGetTravelNoticeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/travel-notices URL pattern\n*/\nexport const TravelNoticesHttpServiceGetTravelNoticesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"sara-travel-notice-1\",\n  \"cardIds\" : [ \"sara-card-1\", \"sara-card-4\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"MEX\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  } ]\n}, {\n  \"id\" : \"sara-travel-notice-2\",\n  \"cardIds\" : [ \"sara-card-1\", \"sara-card-2\", \"sara-card-4\", \"sara-card-5\" ],\n  \"departureDate\" : \"2019-12-10\",\n  \"arrivalDate\" : \"2019-12-23\",\n  \"destinations\" : [ {\n    \"country\" : \"JPN\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-CA\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"elon-travel-notice-1\",\n  \"cardIds\" : [ \"elon-card-1\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  }, {\n    \"country\" : \"MEX\"\n  } ]\n}, {\n  \"id\" : \"elon-travel-notice-2\",\n  \"cardIds\" : [ \"elon-card-1\", \"elon-card-2\", \"elon-card-3\", \"elon-card-4\" ],\n  \"departureDate\" : \"2019-12-10\",\n  \"arrivalDate\" : \"2019-12-23\",\n  \"destinations\" : [ {\n    \"country\" : \"JPN\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-CA\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n}, {\n  \"id\" : \"elon-travel-notice-3\",\n  \"cardIds\" : [ \"elon-card-4\" ],\n  \"departureDate\" : \"2019-07-23\",\n  \"arrivalDate\" : \"2020-08-11\",\n  \"destinations\" : [ {\n    \"country\" : \"KHM\"\n  }, {\n    \"country\" : \"KOR\"\n  }, {\n    \"country\" : \"IND\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"john-travel-notice-1\",\n  \"cardIds\" : [ \"john-card-1\", \"john-card-2\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"NL\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ ]\n                },\n                {\n                    status: 200,\n                    body: [ ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/travel-notices/{id} URL pattern\n*/\nexport const TravelNoticesHttpServiceUpdateTravelNoticeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"elon-travel-notice-1\",\n  \"cardIds\" : [ \"elon-card-1\", \"elon-card-6\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  }, {\n    \"country\" : \"MEX\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"Other_Number\"\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n                },\n    ]\n}]);\n\nexport const TravelNoticesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/travel-notices\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"sara-travel-notice-1\",\n  \"cardIds\" : [ \"sara-card-1\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"john-travel-notice-1\",\n  \"cardIds\" : [ \"john-card-1\", \"john-card-2\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"NL\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/requestBody/content/application~1json/example\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n            },\n\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/travel-notices\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"sara-travel-notice-1\",\n  \"cardIds\" : [ \"sara-card-1\", \"sara-card-4\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"MEX\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  } ]\n}, {\n  \"id\" : \"sara-travel-notice-2\",\n  \"cardIds\" : [ \"sara-card-1\", \"sara-card-2\", \"sara-card-4\", \"sara-card-5\" ],\n  \"departureDate\" : \"2019-12-10\",\n  \"arrivalDate\" : \"2019-12-23\",\n  \"destinations\" : [ {\n    \"country\" : \"JPN\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-CA\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"elon-travel-notice-1\",\n  \"cardIds\" : [ \"elon-card-1\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  }, {\n    \"country\" : \"MEX\"\n  } ]\n}, {\n  \"id\" : \"elon-travel-notice-2\",\n  \"cardIds\" : [ \"elon-card-1\", \"elon-card-2\", \"elon-card-3\", \"elon-card-4\" ],\n  \"departureDate\" : \"2019-12-10\",\n  \"arrivalDate\" : \"2019-12-23\",\n  \"destinations\" : [ {\n    \"country\" : \"JPN\"\n  }, {\n    \"country\" : \"USA\",\n    \"region\" : \"US-CA\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n}, {\n  \"id\" : \"elon-travel-notice-3\",\n  \"cardIds\" : [ \"elon-card-4\" ],\n  \"departureDate\" : \"2019-07-23\",\n  \"arrivalDate\" : \"2020-08-11\",\n  \"destinations\" : [ {\n    \"country\" : \"KHM\"\n  }, {\n    \"country\" : \"KOR\"\n  }, {\n    \"country\" : \"IND\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"john-travel-notice-1\",\n  \"cardIds\" : [ \"john-card-1\", \"john-card-2\" ],\n  \"departureDate\" : \"2020-01-09\",\n  \"arrivalDate\" : \"2020-01-18\",\n  \"destinations\" : [ {\n    \"country\" : \"NL\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"+1 646 432 3000\"\n  }\n} ]\n            },\n            {\n                status: 200,\n                body: [ ]\n            },\n            {\n                status: 200,\n                body: [ ]\n            },\n\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/travel-notices/{id}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/sara/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"id\" : \"elon-travel-notice-1\",\n  \"cardIds\" : [ \"elon-card-1\", \"elon-card-6\" ],\n  \"departureDate\" : \"2020-05-06\",\n  \"arrivalDate\" : \"2020-05-10\",\n  \"destinations\" : [ {\n    \"country\" : \"USA\",\n    \"region\" : \"US-TX\"\n  }, {\n    \"country\" : \"MEX\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"Other_Number\"\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"$ref\" : \"#/paths/~1client-api~1v2~1travel-notices/post/responses/200/content/application~1json/examples/john/value\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"destinations\" : [ {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  }, {\n    \"country\" : \"country\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"region\" : \"region\"\n  } ],\n  \"contact\" : {\n    \"phoneNumber\" : \"phoneNumber\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    }\n  },\n  \"id\" : \"id\",\n  \"departureDate\" : \"departureDate\",\n  \"cardIds\" : [ \"cardIds\", \"cardIds\" ],\n  \"arrivalDate\" : \"arrivalDate\"\n}\n            },\n\n\n\n\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":"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"}