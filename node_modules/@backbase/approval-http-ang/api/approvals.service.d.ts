import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { PresentationGetApprovalDetailResponse } from '../model/models';
import { PresentationGetApprovalRecordProgressStatusResponse } from '../model/models';
import { PresentationGetApprovalsResponse } from '../model/models';
import { ApprovalConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetApprovalByApprovalIdRequestParams {
    ["approvalId"]: string;
}
export interface GetApprovalsRequestParams {
    ["businessFunctions"]: Array<string>;
    ["cursor"]?: string;
    ["size"]?: number;
}
export interface GetProgressStatusByApprovalRecordIdRequestParams {
    ["approvalRecordId"]: string;
}
export declare class ApprovalsHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: ApprovalConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: ApprovalConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getApprovalByApprovalId(requestParameters: GetApprovalByApprovalIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationGetApprovalDetailResponse>;
    getApprovalByApprovalId(requestParameters: GetApprovalByApprovalIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationGetApprovalDetailResponse>>;
    getApprovalByApprovalId(requestParameters: GetApprovalByApprovalIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationGetApprovalDetailResponse>>;
    getApprovalByApprovalIdUrl(requestParameters: GetApprovalByApprovalIdRequestParams): string;
    getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationGetApprovalsResponse>;
    getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationGetApprovalsResponse>>;
    getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationGetApprovalsResponse>>;
    getApprovalsUrl(requestParameters: GetApprovalsRequestParams): string;
    getProgressStatusByApprovalRecordId(requestParameters: GetProgressStatusByApprovalRecordIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationGetApprovalRecordProgressStatusResponse>;
    getProgressStatusByApprovalRecordId(requestParameters: GetProgressStatusByApprovalRecordIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationGetApprovalRecordProgressStatusResponse>>;
    getProgressStatusByApprovalRecordId(requestParameters: GetProgressStatusByApprovalRecordIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationGetApprovalRecordProgressStatusResponse>>;
    getProgressStatusByApprovalRecordIdUrl(requestParameters: GetProgressStatusByApprovalRecordIdRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ApprovalsHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ApprovalsHttpService>;
}
