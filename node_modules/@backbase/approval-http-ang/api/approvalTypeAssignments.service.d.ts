import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { PostApprovalTypeAssignmentRequest } from '../model/models';
import { PresentationGetApprovalTypeResponse } from '../model/models';
import { PresentationPutApprovalTypeAssignmentRequest } from '../model/models';
import { ApprovalConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface DeleteApprovalTypeAssignmentByIdRequestParams {
    ["id"]: string;
}
export interface GetAssignedApprovalTypeByIdRequestParams {
    ["id"]: string;
}
export interface PostAssignApprovalTypeRequestParams {
    ["postApprovalTypeAssignmentRequest"]?: PostApprovalTypeAssignmentRequest;
}
export interface PutUpdateApprovalTypeAssignmentByIdRequestParams {
    ["id"]: string;
    ["presentationPutApprovalTypeAssignmentRequest"]?: PresentationPutApprovalTypeAssignmentRequest;
}
export declare class ApprovalTypeAssignmentsHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: ApprovalConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: ApprovalConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    deleteApprovalTypeAssignmentById(requestParameters: DeleteApprovalTypeAssignmentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    deleteApprovalTypeAssignmentById(requestParameters: DeleteApprovalTypeAssignmentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    deleteApprovalTypeAssignmentById(requestParameters: DeleteApprovalTypeAssignmentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    deleteApprovalTypeAssignmentByIdUrl(requestParameters: DeleteApprovalTypeAssignmentByIdRequestParams): string;
    getAssignedApprovalTypeById(requestParameters: GetAssignedApprovalTypeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PresentationGetApprovalTypeResponse>;
    getAssignedApprovalTypeById(requestParameters: GetAssignedApprovalTypeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PresentationGetApprovalTypeResponse>>;
    getAssignedApprovalTypeById(requestParameters: GetAssignedApprovalTypeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PresentationGetApprovalTypeResponse>>;
    getAssignedApprovalTypeByIdUrl(requestParameters: GetAssignedApprovalTypeByIdRequestParams): string;
    postAssignApprovalType(requestParameters: PostAssignApprovalTypeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    postAssignApprovalType(requestParameters: PostAssignApprovalTypeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    postAssignApprovalType(requestParameters: PostAssignApprovalTypeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    postAssignApprovalTypeUrl(requestParameters: PostAssignApprovalTypeRequestParams): string;
    putUpdateApprovalTypeAssignmentById(requestParameters: PutUpdateApprovalTypeAssignmentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    putUpdateApprovalTypeAssignmentById(requestParameters: PutUpdateApprovalTypeAssignmentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    putUpdateApprovalTypeAssignmentById(requestParameters: PutUpdateApprovalTypeAssignmentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    putUpdateApprovalTypeAssignmentByIdUrl(requestParameters: PutUpdateApprovalTypeAssignmentByIdRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ApprovalTypeAssignmentsHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ApprovalTypeAssignmentsHttpService>;
}
