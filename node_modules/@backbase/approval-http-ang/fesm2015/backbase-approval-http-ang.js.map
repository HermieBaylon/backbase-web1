{"version":3,"file":"backbase-approval-http-ang.js","sources":["../../model/approvalRecordStatus.ts","../../model/approvalStatus.ts","../../model/logicalOperator.ts","../../model/policyAssignmentStatus.ts","../../model/recordStatus.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/approvalTypeAssignments.service.ts","../../api/approvalTypeAssignments.service.mocks.ts","../../api/approvalTypes.service.ts","../../api/approvalTypes.service.mocks.ts","../../api/approvals.service.ts","../../api/approvals.service.mocks.ts","../../api/policies.service.ts","../../api/policies.service.mocks.ts","../../api/policyAssignments.service.ts","../../api/policyAssignments.service.mocks.ts"],"sourcesContent":["/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The list of approval record statuses.\n */\nexport type ApprovalRecordStatus = 'INITIATED' | 'PROCESSING' | 'SUCCESS' | 'FAILED';\n\nexport const ApprovalRecordStatus = {\n    INITIATED: 'INITIATED' as ApprovalRecordStatus,\n    PROCESSING: 'PROCESSING' as ApprovalRecordStatus,\n    SUCCESS: 'SUCCESS' as ApprovalRecordStatus,\n    FAILED: 'FAILED' as ApprovalRecordStatus\n};\n\n","/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The status of the approval.\n */\nexport type ApprovalStatus = 'PENDING' | 'APPROVED' | 'REJECTED' | 'CANCELLED';\n\nexport const ApprovalStatus = {\n    PENDING: 'PENDING' as ApprovalStatus,\n    APPROVED: 'APPROVED' as ApprovalStatus,\n    REJECTED: 'REJECTED' as ApprovalStatus,\n    CANCELLED: 'CANCELLED' as ApprovalStatus\n};\n\n","/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of logical operation, please see Community for each operation implementation\n */\nexport type LogicalOperator = 'OR';\n\nexport const LogicalOperator = {\n    OR: 'OR' as LogicalOperator\n};\n\n","/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The status of a policy assignment.\n */\nexport type PolicyAssignmentStatus = 'ACTIVE' | 'PENDING' | 'REJECTED' | 'PENDING_DELETE' | 'DELETED';\n\nexport const PolicyAssignmentStatus = {\n    ACTIVE: 'ACTIVE' as PolicyAssignmentStatus,\n    PENDING: 'PENDING' as PolicyAssignmentStatus,\n    REJECTED: 'REJECTED' as PolicyAssignmentStatus,\n    PENDINGDELETE: 'PENDING_DELETE' as PolicyAssignmentStatus,\n    DELETED: 'DELETED' as PolicyAssignmentStatus\n};\n\n","/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The list of accepted statuses that a user can request to update an approval to.\n */\nexport type RecordStatus = 'APPROVED' | 'REJECTED';\n\nexport const RecordStatus = {\n    APPROVED: 'APPROVED' as RecordStatus,\n    REJECTED: 'REJECTED' as RecordStatus\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const APPROVAL_BASE_PATH = new InjectionToken<string>('APPROVAL_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface ApprovalConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class ApprovalConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: ApprovalConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link ApprovalConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link ApprovalConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module ApprovalConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { ApprovalConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class ApprovalApiModule {\n    public static forRoot(configurationFactory: () => ApprovalConfiguration): ModuleWithProviders<ApprovalApiModule> {\n        return {\n            ngModule: ApprovalApiModule,\n            providers: [ { provide: ApprovalConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApprovalApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: ApprovalConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('ApprovalApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PostApprovalTypeAssignmentRequest } from '../model/models';\nimport { PresentationGetApprovalTypeResponse } from '../model/models';\nimport { PresentationPutApprovalTypeAssignmentRequest } from '../model/models';\n\nimport { APPROVAL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ApprovalConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteApprovalTypeAssignmentByIdRequestParams {\n    /** The id of the job profile. */\n    [\"id\"]: string;\n}\n\nexport interface GetAssignedApprovalTypeByIdRequestParams {\n    /** The id of the job profile. */\n    [\"id\"]: string;\n}\n\nexport interface PostAssignApprovalTypeRequestParams {\n    /** Assign an approval type to a job profile. */\n    [\"postApprovalTypeAssignmentRequest\"]?: PostApprovalTypeAssignmentRequest;\n}\n\nexport interface PutUpdateApprovalTypeAssignmentByIdRequestParams {\n    /** The id of the job profile. */\n    [\"id\"]: string;\n    /** Updates an existing type assignment to a new one. */\n    [\"presentationPutApprovalTypeAssignmentRequest\"]?: PresentationPutApprovalTypeAssignmentRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApprovalTypeAssignmentsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ApprovalConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(APPROVAL_BASE_PATH) basePath: string, @Optional() configuration: ApprovalConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * This endpoint is used to delete the approval type that is assigned to the given job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteApprovalTypeAssignmentById(requestParameters: DeleteApprovalTypeAssignmentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * This endpoint is used to delete the approval type that is assigned to the given job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteApprovalTypeAssignmentById(requestParameters: DeleteApprovalTypeAssignmentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * This endpoint is used to delete the approval type that is assigned to the given job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteApprovalTypeAssignmentById(requestParameters: DeleteApprovalTypeAssignmentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * This endpoint is used to delete the approval type that is assigned to the given job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteApprovalTypeAssignmentById(requestParameters: DeleteApprovalTypeAssignmentByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteApprovalTypeAssignmentById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteApprovalTypeAssignmentByIdUrl(requestParameters: DeleteApprovalTypeAssignmentByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteApprovalTypeAssignmentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Retrieve the approval type that is assigned to the given job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedApprovalTypeById(requestParameters: GetAssignedApprovalTypeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationGetApprovalTypeResponse>;\n    /**\n     * Retrieve the approval type that is assigned to the given job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedApprovalTypeById(requestParameters: GetAssignedApprovalTypeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationGetApprovalTypeResponse>>;\n    /**\n     * Retrieve the approval type that is assigned to the given job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedApprovalTypeById(requestParameters: GetAssignedApprovalTypeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationGetApprovalTypeResponse>>;\n    /**\n     * Retrieve the approval type that is assigned to the given job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedApprovalTypeById(requestParameters: GetAssignedApprovalTypeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getAssignedApprovalTypeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationGetApprovalTypeResponse>(`${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAssignedApprovalTypeByIdUrl(requestParameters: GetAssignedApprovalTypeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getAssignedApprovalTypeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Assign an approval type to a job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postAssignApprovalType(requestParameters: PostAssignApprovalTypeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Assign an approval type to a job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postAssignApprovalType(requestParameters: PostAssignApprovalTypeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Assign an approval type to a job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postAssignApprovalType(requestParameters: PostAssignApprovalTypeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Assign an approval type to a job profile.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postAssignApprovalType(requestParameters: PostAssignApprovalTypeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postApprovalTypeAssignmentRequest = requestParameters[\"postApprovalTypeAssignmentRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/approval-type-assignments`,\n            _postApprovalTypeAssignmentRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postAssignApprovalTypeUrl(requestParameters: PostAssignApprovalTypeRequestParams): string {\n        const _postApprovalTypeAssignmentRequest = requestParameters[\"postApprovalTypeAssignmentRequest\"];\n        return `${this.configuration.basePath}/client-api/v2/approval-type-assignments`;\n    }\n\n    /**\n     * Updates an existing type assignment to a new one.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putUpdateApprovalTypeAssignmentById(requestParameters: PutUpdateApprovalTypeAssignmentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Updates an existing type assignment to a new one.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putUpdateApprovalTypeAssignmentById(requestParameters: PutUpdateApprovalTypeAssignmentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Updates an existing type assignment to a new one.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putUpdateApprovalTypeAssignmentById(requestParameters: PutUpdateApprovalTypeAssignmentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Updates an existing type assignment to a new one.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putUpdateApprovalTypeAssignmentById(requestParameters: PutUpdateApprovalTypeAssignmentByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putUpdateApprovalTypeAssignmentById.');\n        }\n        const _presentationPutApprovalTypeAssignmentRequest = requestParameters[\"presentationPutApprovalTypeAssignmentRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`,\n            _presentationPutApprovalTypeAssignmentRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putUpdateApprovalTypeAssignmentByIdUrl(requestParameters: PutUpdateApprovalTypeAssignmentByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putUpdateApprovalTypeAssignmentById.');\n        }\n        const _presentationPutApprovalTypeAssignmentRequest = requestParameters[\"presentationPutApprovalTypeAssignmentRequest\"];\n        return `${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/approval-type-assignments/{id} URL pattern\n*/\nexport const ApprovalTypeAssignmentsHttpServiceDeleteApprovalTypeAssignmentByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/approval-type-assignments/{id} URL pattern\n*/\nexport const ApprovalTypeAssignmentsHttpServiceGetAssignedApprovalTypeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalType\" : {\n    \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n    \"name\" : \"A\",\n    \"description\" : \"1st approval\",\n    \"rank\" : 100\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/approval-type-assignments URL pattern\n*/\nexport const ApprovalTypeAssignmentsHttpServicePostAssignApprovalTypeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-type-assignments\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad request\",\n  \"errors\" : [ {\n    \"message\" : \"Job profile is already assigned to an approval type\",\n    \"key\" : \"approval.api.ApprovalTypeAssignmentConflict\",\n    \"context\" : {\n      \"conflictingJobProfileId\" : \"0f5cfbb507054d589d149e921838dc80\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad request\",\n  \"errors\" : [ {\n    \"message\" : \"Approval type not found\",\n    \"key\" : \"approval.api.ApprovalTypeNotFound\",\n    \"context\" : {\n      \"invalidApprovalTypeId\" : \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/approval-type-assignments/{id} URL pattern\n*/\nexport const ApprovalTypeAssignmentsHttpServicePutUpdateApprovalTypeAssignmentByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad request\",\n  \"errors\" : [ {\n    \"message\" : \"Approval type not found\",\n    \"key\" : \"approval.api.ApprovalTypeNotFound\",\n    \"context\" : {\n      \"invalidApprovalTypeId\" : \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\"\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Not found\",\n  \"errors\" : [ {\n    \"message\" : \"Assigned approval type not found\",\n    \"key\" : \"approval.api.AssignedApprovalTypeNotFound\",\n    \"context\" : {\n      \"jobProfileId\" : \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const ApprovalTypeAssignmentsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvalType\" : {\n    \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n    \"name\" : \"A\",\n    \"description\" : \"1st approval\",\n    \"rank\" : 100\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/approval-type-assignments\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad request\",\n  \"errors\" : [ {\n    \"message\" : \"Job profile is already assigned to an approval type\",\n    \"key\" : \"approval.api.ApprovalTypeAssignmentConflict\",\n    \"context\" : {\n      \"conflictingJobProfileId\" : \"0f5cfbb507054d589d149e921838dc80\"\n    }\n  } ]\n}\n            },\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad request\",\n  \"errors\" : [ {\n    \"message\" : \"Approval type not found\",\n    \"key\" : \"approval.api.ApprovalTypeNotFound\",\n    \"context\" : {\n      \"invalidApprovalTypeId\" : \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad request\",\n  \"errors\" : [ {\n    \"message\" : \"Approval type not found\",\n    \"key\" : \"approval.api.ApprovalTypeNotFound\",\n    \"context\" : {\n      \"invalidApprovalTypeId\" : \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\"\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Not found\",\n  \"errors\" : [ {\n    \"message\" : \"Assigned approval type not found\",\n    \"key\" : \"approval.api.AssignedApprovalTypeNotFound\",\n    \"context\" : {\n      \"jobProfileId\" : \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ForbiddenError } from '../model/models';\nimport { PresentationGetApprovalTypesResponse } from '../model/models';\n\nimport { APPROVAL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ApprovalConfiguration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApprovalTypesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ApprovalConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(APPROVAL_BASE_PATH) basePath: string, @Optional() configuration: ApprovalConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve list of all available approval types. The result is sorted by rank in ascending order (highest rank first).\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailableApprovalTypes(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationGetApprovalTypesResponse>;\n    /**\n     * Retrieve list of all available approval types. The result is sorted by rank in ascending order (highest rank first).\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailableApprovalTypes(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationGetApprovalTypesResponse>>;\n    /**\n     * Retrieve list of all available approval types. The result is sorted by rank in ascending order (highest rank first).\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailableApprovalTypes(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationGetApprovalTypesResponse>>;\n    /**\n     * Retrieve list of all available approval types. The result is sorted by rank in ascending order (highest rank first).\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailableApprovalTypes(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationGetApprovalTypesResponse>(`${this.configuration.basePath}/client-api/v2/approval-types`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAvailableApprovalTypesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/approval-types`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/approval-types URL pattern\n*/\nexport const ApprovalTypesHttpServiceGetAvailableApprovalTypesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-types\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalTypes\" : [ {\n    \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n    \"name\" : \"A\",\n    \"description\" : \"1st approval\",\n    \"rank\" : 100\n  }, {\n    \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n    \"name\" : \"B\",\n    \"description\" : \"2nd approval\",\n    \"rank\" : 101\n  }, {\n    \"id\" : \"7b9459a3-03be-4b80-97da-53005bad9fb7\",\n    \"name\" : \"C\",\n    \"description\" : \"3rd approval\",\n    \"rank\" : 300\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const ApprovalTypesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/approval-types\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvalTypes\" : [ {\n    \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n    \"name\" : \"A\",\n    \"description\" : \"1st approval\",\n    \"rank\" : 100\n  }, {\n    \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n    \"name\" : \"B\",\n    \"description\" : \"2nd approval\",\n    \"rank\" : 101\n  }, {\n    \"id\" : \"7b9459a3-03be-4b80-97da-53005bad9fb7\",\n    \"name\" : \"C\",\n    \"description\" : \"3rd approval\",\n    \"rank\" : 300\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationGetApprovalDetailResponse } from '../model/models';\nimport { PresentationGetApprovalRecordProgressStatusResponse } from '../model/models';\nimport { PresentationGetApprovalsResponse } from '../model/models';\n\nimport { APPROVAL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ApprovalConfiguration }                                     from '../configuration';\n\n\nexport interface GetApprovalByApprovalIdRequestParams {\n    /** The Id of the approval request. Example: \\&quot;b3e4692d-6772-4fb2-9446-b8f4607f49b1\\&quot; */\n    [\"approvalId\"]: string;\n}\n\nexport interface GetApprovalsRequestParams {\n    /** Comma separated business functions to filter pending approval requests on. */\n    [\"businessFunctions\"]: Array<string>;\n    /** Approval UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the approval to start the selection from. */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor. */\n    [\"size\"]?: number;\n}\n\nexport interface GetProgressStatusByApprovalRecordIdRequestParams {\n    /** Approval record ID */\n    [\"approvalRecordId\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApprovalsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ApprovalConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(APPROVAL_BASE_PATH) basePath: string, @Optional() configuration: ApprovalConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Get approval by approval id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalByApprovalId(requestParameters: GetApprovalByApprovalIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationGetApprovalDetailResponse>;\n    /**\n     * Get approval by approval id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalByApprovalId(requestParameters: GetApprovalByApprovalIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationGetApprovalDetailResponse>>;\n    /**\n     * Get approval by approval id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalByApprovalId(requestParameters: GetApprovalByApprovalIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationGetApprovalDetailResponse>>;\n    /**\n     * Get approval by approval id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalByApprovalId(requestParameters: GetApprovalByApprovalIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovalByApprovalId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationGetApprovalDetailResponse>(`${this.configuration.basePath}/client-api/v2/approvals/${encodeURIComponent(String(_approvalId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getApprovalByApprovalIdUrl(requestParameters: GetApprovalByApprovalIdRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovalByApprovalId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/approvals/${encodeURIComponent(String(_approvalId))}`;\n    }\n\n    /**\n     * Get approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationGetApprovalsResponse>;\n    /**\n     * Get approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationGetApprovalsResponse>>;\n    /**\n     * Get approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationGetApprovalsResponse>>;\n    /**\n     * Get approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _businessFunctions = requestParameters[\"businessFunctions\"];\n        if (_businessFunctions === null || _businessFunctions === undefined) {\n            throw new Error('Required parameter businessFunctions was null or undefined when calling getApprovals.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_businessFunctions) {\n            _businessFunctions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'businessFunctions');\n            })\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationGetApprovalsResponse>(`${this.configuration.basePath}/client-api/v2/approvals`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getApprovalsUrl(requestParameters: GetApprovalsRequestParams): string {\n        const _businessFunctions = requestParameters[\"businessFunctions\"];\n        if (_businessFunctions === null || _businessFunctions === undefined) {\n            throw new Error('Required parameter businessFunctions was null or undefined when calling getApprovals.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_businessFunctions) {\n            _businessFunctions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'businessFunctions');\n            })\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/approvals${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Provides the progress status of the approval record to the user that initiated the approve or reject action.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getProgressStatusByApprovalRecordId(requestParameters: GetProgressStatusByApprovalRecordIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationGetApprovalRecordProgressStatusResponse>;\n    /**\n     * Provides the progress status of the approval record to the user that initiated the approve or reject action.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getProgressStatusByApprovalRecordId(requestParameters: GetProgressStatusByApprovalRecordIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationGetApprovalRecordProgressStatusResponse>>;\n    /**\n     * Provides the progress status of the approval record to the user that initiated the approve or reject action.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getProgressStatusByApprovalRecordId(requestParameters: GetProgressStatusByApprovalRecordIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationGetApprovalRecordProgressStatusResponse>>;\n    /**\n     * Provides the progress status of the approval record to the user that initiated the approve or reject action.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getProgressStatusByApprovalRecordId(requestParameters: GetProgressStatusByApprovalRecordIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalRecordId = requestParameters[\"approvalRecordId\"];\n        if (_approvalRecordId === null || _approvalRecordId === undefined) {\n            throw new Error('Required parameter approvalRecordId was null or undefined when calling getProgressStatusByApprovalRecordId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationGetApprovalRecordProgressStatusResponse>(`${this.configuration.basePath}/client-api/v2/approval-records/${encodeURIComponent(String(_approvalRecordId))}/progress-status`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getProgressStatusByApprovalRecordIdUrl(requestParameters: GetProgressStatusByApprovalRecordIdRequestParams): string {\n        const _approvalRecordId = requestParameters[\"approvalRecordId\"];\n        if (_approvalRecordId === null || _approvalRecordId === undefined) {\n            throw new Error('Required parameter approvalRecordId was null or undefined when calling getProgressStatusByApprovalRecordId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/approval-records/${encodeURIComponent(String(_approvalRecordId))}/progress-status`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/approvals/{approvalId} URL pattern\n*/\nexport const ApprovalsHttpServiceGetApprovalByApprovalIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approvals/{approvalId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalDetails\" : {\n    \"id\" : \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n    \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n    \"userFullName\" : \"Paddy Brian\",\n    \"externalUserId\" : \"paddy-brian\",\n    \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n    \"itemId\" : \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n    \"dataAccessItemId\" : \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA_CT\",\n    \"status\" : \"PENDING\",\n    \"createdAt\" : \"2018-07-22T13:44:02Z\",\n    \"records\" : [ {\n      \"id\" : \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n      \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n      \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n      \"externalUserId\" : \"robin-green\",\n      \"userFullName\" : \"Robin Green\",\n      \"approvalTypeId\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n      \"status\" : \"APPROVED\",\n      \"createdAt\" : \"2018-01-22T13:44:02Z\"\n    } ],\n    \"approvalTypes\" : [ {\n      \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n      \"name\" : \"A\",\n      \"description\" : \"1st approval\",\n      \"rank\" : 100\n    }, {\n      \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n      \"name\" : \"B\",\n      \"description\" : \"2nd approval\",\n      \"rank\" : 101\n    } ],\n    \"policy\" : {\n      \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n      \"name\" : \"Default policy\",\n      \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n      \"items\" : [ {\n        \"approvalTypeId\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n        \"approvalType\" : {\n          \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\" : \"A\",\n          \"description\" : \"1st approval\",\n          \"rank\" : 100\n        },\n        \"numberOfApprovals\" : 1\n      }, {\n        \"approvalTypeId\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n        \"approvalType\" : {\n          \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\" : \"B\",\n          \"description\" : \"2nd approval\",\n          \"rank\" : 101\n        },\n        \"numberOfApprovals\" : 1\n      } ]\n    },\n    \"canApprove\" : false,\n    \"canReject\" : false,\n    \"finalApprover\" : false\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/approvals URL pattern\n*/\nexport const ApprovalsHttpServiceGetApprovalsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approvals\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvals\" : [ {\n    \"id\" : \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n    \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n    \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n    \"itemId\" : \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n    \"dataAccessItemId\" : \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA_CT\",\n    \"status\" : \"PENDING\",\n    \"records\" : [ {\n      \"id\" : \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n      \"userId\" : \"fc546710-cb4d-40a2-9a5c-52f6772a907b\",\n      \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n      \"approvalTypeId\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n      \"status\" : \"APPROVED\",\n      \"createdAt\" : \"2018-01-22T13:44:02Z\"\n    } ],\n    \"finalApprover\" : true,\n    \"createdAt\" : \"2018-01-22T13:44:02Z\"\n  }, {\n    \"id\" : \"21339aac-9e00-4dd5-9dd9-c9b1727471cf\",\n    \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n    \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n    \"itemId\" : \"4af6d50e-cde5-401d-95c9-2a78f51672c9\",\n    \"dataAccessItemId\" : \"4f727cdf-426f-42aa-bbf1-6a4548d1d4a9\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"US_DOMESTIC\",\n    \"status\" : \"PENDING\",\n    \"records\" : [ ],\n    \"finalApprover\" : false,\n    \"createdAt\" : \"2018-01-22T13:44:02Z\"\n  } ],\n  \"cursor\" : \"3aa95dcf-fba8-41b8-a97b-bfae602e1a7d\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/approval-records/{approvalRecordId}/progress-status URL pattern\n*/\nexport const ApprovalsHttpServiceGetProgressStatusByApprovalRecordIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-records/{approvalRecordId}/progress-status\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"status\" : \"INITIATED\",\n  \"statusCode\" : \"CONFIRMATION_PENDING\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const ApprovalsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/approvals/{approvalId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvalDetails\" : {\n    \"id\" : \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n    \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n    \"userFullName\" : \"Paddy Brian\",\n    \"externalUserId\" : \"paddy-brian\",\n    \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n    \"itemId\" : \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n    \"dataAccessItemId\" : \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA_CT\",\n    \"status\" : \"PENDING\",\n    \"createdAt\" : \"2018-07-22T13:44:02Z\",\n    \"records\" : [ {\n      \"id\" : \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n      \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n      \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n      \"externalUserId\" : \"robin-green\",\n      \"userFullName\" : \"Robin Green\",\n      \"approvalTypeId\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n      \"status\" : \"APPROVED\",\n      \"createdAt\" : \"2018-01-22T13:44:02Z\"\n    } ],\n    \"approvalTypes\" : [ {\n      \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n      \"name\" : \"A\",\n      \"description\" : \"1st approval\",\n      \"rank\" : 100\n    }, {\n      \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n      \"name\" : \"B\",\n      \"description\" : \"2nd approval\",\n      \"rank\" : 101\n    } ],\n    \"policy\" : {\n      \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n      \"name\" : \"Default policy\",\n      \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n      \"items\" : [ {\n        \"approvalTypeId\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n        \"approvalType\" : {\n          \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\" : \"A\",\n          \"description\" : \"1st approval\",\n          \"rank\" : 100\n        },\n        \"numberOfApprovals\" : 1\n      }, {\n        \"approvalTypeId\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n        \"approvalType\" : {\n          \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\" : \"B\",\n          \"description\" : \"2nd approval\",\n          \"rank\" : 101\n        },\n        \"numberOfApprovals\" : 1\n      } ]\n    },\n    \"canApprove\" : false,\n    \"canReject\" : false,\n    \"finalApprover\" : false\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/approvals\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvals\" : [ {\n    \"id\" : \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n    \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n    \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n    \"itemId\" : \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n    \"dataAccessItemId\" : \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA_CT\",\n    \"status\" : \"PENDING\",\n    \"records\" : [ {\n      \"id\" : \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n      \"userId\" : \"fc546710-cb4d-40a2-9a5c-52f6772a907b\",\n      \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n      \"approvalTypeId\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n      \"status\" : \"APPROVED\",\n      \"createdAt\" : \"2018-01-22T13:44:02Z\"\n    } ],\n    \"finalApprover\" : true,\n    \"createdAt\" : \"2018-01-22T13:44:02Z\"\n  }, {\n    \"id\" : \"21339aac-9e00-4dd5-9dd9-c9b1727471cf\",\n    \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n    \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n    \"itemId\" : \"4af6d50e-cde5-401d-95c9-2a78f51672c9\",\n    \"dataAccessItemId\" : \"4f727cdf-426f-42aa-bbf1-6a4548d1d4a9\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"US_DOMESTIC\",\n    \"status\" : \"PENDING\",\n    \"records\" : [ ],\n    \"finalApprover\" : false,\n    \"createdAt\" : \"2018-01-22T13:44:02Z\"\n  } ],\n  \"cursor\" : \"3aa95dcf-fba8-41b8-a97b-bfae602e1a7d\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/approval-records/{approvalRecordId}/progress-status\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"status\" : \"INITIATED\",\n  \"statusCode\" : \"CONFIRMATION_PENDING\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ForbiddenError } from '../model/models';\nimport { PresentationGetPoliciesResponse } from '../model/models';\n\nimport { APPROVAL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ApprovalConfiguration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoliciesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ApprovalConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(APPROVAL_BASE_PATH) basePath: string, @Optional() configuration: ApprovalConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve a list of all available approval policies. The policies are ordered by name in ascending order.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailablePolicies(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationGetPoliciesResponse>;\n    /**\n     * Retrieve a list of all available approval policies. The policies are ordered by name in ascending order.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailablePolicies(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationGetPoliciesResponse>>;\n    /**\n     * Retrieve a list of all available approval policies. The policies are ordered by name in ascending order.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailablePolicies(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationGetPoliciesResponse>>;\n    /**\n     * Retrieve a list of all available approval policies. The policies are ordered by name in ascending order.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailablePolicies(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationGetPoliciesResponse>(`${this.configuration.basePath}/client-api/v2/policies`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAvailablePoliciesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/policies`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/policies URL pattern\n*/\nexport const PoliciesHttpServiceGetAvailablePoliciesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/policies\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"policies\" : [ {\n    \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n    \"name\" : \"Simple policy\",\n    \"description\" : \"A basic policy, requires one approval of type 'A' and one of type 'B'.\",\n    \"items\" : [ {\n      \"approvalType\" : {\n        \"id\" : \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n        \"name\" : \"A\",\n        \"description\" : \"1st approval\",\n        \"rank\" : 100\n      },\n      \"numberOfApprovals\" : 1\n    }, {\n      \"approvalType\" : {\n        \"id\" : \"9c666d9e-92d4-4d8f-9366-a4d3ee336c0c\",\n        \"name\" : \"B\",\n        \"description\" : \"2nd approval\",\n        \"rank\" : 200\n      },\n      \"numberOfApprovals\" : 1\n    } ]\n  }, {\n    \"id\" : \"5a2d069a-d4c8-43aa-ba93-9069c65458ec\",\n    \"name\" : \"Secondary policy\",\n    \"description\" : \"A secondary policy that requires two approvals of the same type: A + A\",\n    \"items\" : [ {\n      \"approvalType\" : {\n        \"id\" : \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n        \"name\" : \"A\",\n        \"description\" : \"1st approval\",\n        \"rank\" : 100\n      },\n      \"numberOfApprovals\" : 2\n    } ]\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const PoliciesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/policies\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"policies\" : [ {\n    \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n    \"name\" : \"Simple policy\",\n    \"description\" : \"A basic policy, requires one approval of type 'A' and one of type 'B'.\",\n    \"items\" : [ {\n      \"approvalType\" : {\n        \"id\" : \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n        \"name\" : \"A\",\n        \"description\" : \"1st approval\",\n        \"rank\" : 100\n      },\n      \"numberOfApprovals\" : 1\n    }, {\n      \"approvalType\" : {\n        \"id\" : \"9c666d9e-92d4-4d8f-9366-a4d3ee336c0c\",\n        \"name\" : \"B\",\n        \"description\" : \"2nd approval\",\n        \"rank\" : 200\n      },\n      \"numberOfApprovals\" : 1\n    } ]\n  }, {\n    \"id\" : \"5a2d069a-d4c8-43aa-ba93-9069c65458ec\",\n    \"name\" : \"Secondary policy\",\n    \"description\" : \"A secondary policy that requires two approvals of the same type: A + A\",\n    \"items\" : [ {\n      \"approvalType\" : {\n        \"id\" : \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n        \"name\" : \"A\",\n        \"description\" : \"1st approval\",\n        \"rank\" : 100\n      },\n      \"numberOfApprovals\" : 2\n    } ]\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Approvals client\n * Admin users assign approval levels and policies. End users retrieve approvals.\n *\n * The version of the OpenAPI document: 2.2.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationDeletePolicyAssignmentResponse } from '../model/models';\nimport { PresentationGetApprovableBusinessFunctionsResponse } from '../model/models';\nimport { PresentationGetPolicyAssignmentsResponse } from '../model/models';\nimport { PresentationPolicyAssignmentApprovalRequest } from '../model/models';\nimport { PresentationPolicyAssignmentCollectionRequest } from '../model/models';\n\nimport { APPROVAL_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ApprovalConfiguration }                                     from '../configuration';\n\n\nexport interface DeletePolicyAssignmentsRequestParams {\n    /** The internal ServiceAgreementId to remove the policies assigned to. The logged in user is checked to be allowed to operate in this service agreement; in case this parameter is omitted, the value from the users context is used instead. */\n    [\"serviceAgreementId\"]?: string;\n    /** When specified, only policies assigned to this resource will be deleted. E.g. \\&quot;Payments\\&quot; to delete every policy assigned to any Payments function. */\n    [\"resource\"]?: string;\n    /** When specified, only policies assigned to this function will be deleted. E.g. \\&quot;SEPA CT\\&quot; to delete the policies assigned to this function only. */\n    [\"function\"]?: string;\n}\n\nexport interface GetApprovableBusinessFunctionsRequestParams {\n    /** An internal service agreement identifier which is used instead of one from the token for getting business functions. You must be allowed to operate on the given service agreement.  */\n    [\"serviceAgreementId\"]?: string;\n}\n\nexport interface PostPolicyAssignmentsRequestParams {\n    /** Create a policy assignment with different bounded ranges. */\n    [\"presentationPolicyAssignmentCollectionRequest\"]?: PresentationPolicyAssignmentCollectionRequest;\n}\n\nexport interface PutApprovalsByPolicyAssignmentIdRequestParams {\n    /** The id of the policy assignment. */\n    [\"id\"]: string;\n    /** Approves or rejects the policy assignment. */\n    [\"presentationPolicyAssignmentApprovalRequest\"]: PresentationPolicyAssignmentApprovalRequest;\n}\n\nexport interface RetrievePolicyAssignmentByIdRequestParams {\n    /** The id of the policy assignment. */\n    [\"id\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PolicyAssignmentsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ApprovalConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(APPROVAL_BASE_PATH) basePath: string, @Optional() configuration: ApprovalConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete policies assigned to a service agreement. Optionally a resource or function can be specified to delete only a subset. Returns 200 when the policy assignments are successfully deleted. Returns 202 when approval is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePolicyAssignments(requestParameters: DeletePolicyAssignmentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationDeletePolicyAssignmentResponse>;\n    /**\n     * Delete policies assigned to a service agreement. Optionally a resource or function can be specified to delete only a subset. Returns 200 when the policy assignments are successfully deleted. Returns 202 when approval is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePolicyAssignments(requestParameters: DeletePolicyAssignmentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationDeletePolicyAssignmentResponse>>;\n    /**\n     * Delete policies assigned to a service agreement. Optionally a resource or function can be specified to delete only a subset. Returns 200 when the policy assignments are successfully deleted. Returns 202 when approval is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePolicyAssignments(requestParameters: DeletePolicyAssignmentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationDeletePolicyAssignmentResponse>>;\n    /**\n     * Delete policies assigned to a service agreement. Optionally a resource or function can be specified to delete only a subset. Returns 200 when the policy assignments are successfully deleted. Returns 202 when approval is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePolicyAssignments(requestParameters: DeletePolicyAssignmentsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _resource = requestParameters[\"resource\"];\n        const _function = requestParameters[\"function\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_resource !== undefined && _resource !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resource, 'resource');\n        }\n        if (_function !== undefined && _function !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_function, 'function');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<PresentationDeletePolicyAssignmentResponse>(`${this.configuration.basePath}/client-api/v2/policy-assignments`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deletePolicyAssignmentsUrl(requestParameters: DeletePolicyAssignmentsRequestParams): string {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _resource = requestParameters[\"resource\"];\n        const _function = requestParameters[\"function\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_resource !== undefined && _resource !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_resource, 'resource');\n        }\n        if (_function !== undefined && _function !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_function, 'function');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve a list of all approvable business functions, sorted by resource in ascending order followed by function in ascending order.\n     * Retrieve a list of all approvable business functions, sorted by resource in ascending order followed by function in ascending order.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovableBusinessFunctions(requestParameters: GetApprovableBusinessFunctionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationGetApprovableBusinessFunctionsResponse>;\n    /**\n     * Retrieve a list of all approvable business functions, sorted by resource in ascending order followed by function in ascending order.\n     * Retrieve a list of all approvable business functions, sorted by resource in ascending order followed by function in ascending order.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovableBusinessFunctions(requestParameters: GetApprovableBusinessFunctionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationGetApprovableBusinessFunctionsResponse>>;\n    /**\n     * Retrieve a list of all approvable business functions, sorted by resource in ascending order followed by function in ascending order.\n     * Retrieve a list of all approvable business functions, sorted by resource in ascending order followed by function in ascending order.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovableBusinessFunctions(requestParameters: GetApprovableBusinessFunctionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationGetApprovableBusinessFunctionsResponse>>;\n    /**\n     * Retrieve a list of all approvable business functions, sorted by resource in ascending order followed by function in ascending order.\n     * Retrieve a list of all approvable business functions, sorted by resource in ascending order followed by function in ascending order.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovableBusinessFunctions(requestParameters: GetApprovableBusinessFunctionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationGetApprovableBusinessFunctionsResponse>(`${this.configuration.basePath}/client-api/v2/policy-assignments/approvable-business-functions`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getApprovableBusinessFunctionsUrl(requestParameters: GetApprovableBusinessFunctionsRequestParams): string {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments/approvable-business-functions${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Create a policy assignment with different bounded ranges. Returns 204 when the policy assignment is successfully created. 202 is returned when approval is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postPolicyAssignments(requestParameters: PostPolicyAssignmentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Create a policy assignment with different bounded ranges. Returns 204 when the policy assignment is successfully created. 202 is returned when approval is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postPolicyAssignments(requestParameters: PostPolicyAssignmentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Create a policy assignment with different bounded ranges. Returns 204 when the policy assignment is successfully created. 202 is returned when approval is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postPolicyAssignments(requestParameters: PostPolicyAssignmentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Create a policy assignment with different bounded ranges. Returns 204 when the policy assignment is successfully created. 202 is returned when approval is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postPolicyAssignments(requestParameters: PostPolicyAssignmentsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _presentationPolicyAssignmentCollectionRequest = requestParameters[\"presentationPolicyAssignmentCollectionRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/policy-assignments`,\n            _presentationPolicyAssignmentCollectionRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postPolicyAssignmentsUrl(requestParameters: PostPolicyAssignmentsRequestParams): string {\n        const _presentationPolicyAssignmentCollectionRequest = requestParameters[\"presentationPolicyAssignmentCollectionRequest\"];\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments`;\n    }\n\n    /**\n     * Approves or rejects the policy assignment. This will return status 202 (Accepted) when one or more approvals are still required, returns 204 (success with No Content) when policy assignment is approved or rejected and no more approvals are needed.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovalsByPolicyAssignmentId(requestParameters: PutApprovalsByPolicyAssignmentIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Approves or rejects the policy assignment. This will return status 202 (Accepted) when one or more approvals are still required, returns 204 (success with No Content) when policy assignment is approved or rejected and no more approvals are needed.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovalsByPolicyAssignmentId(requestParameters: PutApprovalsByPolicyAssignmentIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Approves or rejects the policy assignment. This will return status 202 (Accepted) when one or more approvals are still required, returns 204 (success with No Content) when policy assignment is approved or rejected and no more approvals are needed.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovalsByPolicyAssignmentId(requestParameters: PutApprovalsByPolicyAssignmentIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Approves or rejects the policy assignment. This will return status 202 (Accepted) when one or more approvals are still required, returns 204 (success with No Content) when policy assignment is approved or rejected and no more approvals are needed.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovalsByPolicyAssignmentId(requestParameters: PutApprovalsByPolicyAssignmentIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n        }\n        const _presentationPolicyAssignmentApprovalRequest = requestParameters[\"presentationPolicyAssignmentApprovalRequest\"];\n        if (_presentationPolicyAssignmentApprovalRequest === null || _presentationPolicyAssignmentApprovalRequest === undefined) {\n            throw new Error('Required parameter presentationPolicyAssignmentApprovalRequest was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}/approvals`,\n            _presentationPolicyAssignmentApprovalRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putApprovalsByPolicyAssignmentIdUrl(requestParameters: PutApprovalsByPolicyAssignmentIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n        }\n        const _presentationPolicyAssignmentApprovalRequest = requestParameters[\"presentationPolicyAssignmentApprovalRequest\"];\n        if (_presentationPolicyAssignmentApprovalRequest === null || _presentationPolicyAssignmentApprovalRequest === undefined) {\n            throw new Error('Required parameter presentationPolicyAssignmentApprovalRequest was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}/approvals`;\n    }\n\n    /**\n     * Retrieve a policy assignment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public retrievePolicyAssignmentById(requestParameters: RetrievePolicyAssignmentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationGetPolicyAssignmentsResponse>;\n    /**\n     * Retrieve a policy assignment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public retrievePolicyAssignmentById(requestParameters: RetrievePolicyAssignmentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationGetPolicyAssignmentsResponse>>;\n    /**\n     * Retrieve a policy assignment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public retrievePolicyAssignmentById(requestParameters: RetrievePolicyAssignmentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationGetPolicyAssignmentsResponse>>;\n    /**\n     * Retrieve a policy assignment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public retrievePolicyAssignmentById(requestParameters: RetrievePolicyAssignmentByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling retrievePolicyAssignmentById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationGetPolicyAssignmentsResponse>(`${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public retrievePolicyAssignmentByIdUrl(requestParameters: RetrievePolicyAssignmentByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling retrievePolicyAssignmentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/policy-assignments URL pattern\n*/\nexport const PolicyAssignmentsHttpServiceDeletePolicyAssignmentsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"numberOfRowsAffected\" : 2\n}\n                },\n                {\n                    status: 202,\n                    body: {\n  \"numberOfRowsAffected\" : 2\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/policy-assignments/approvable-business-functions URL pattern\n*/\nexport const PolicyAssignmentsHttpServiceGetApprovableBusinessFunctionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments/approvable-business-functions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvableBusinessFunctions\" : [ {\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA CT\",\n    \"status\" : \"ACTIVE\",\n    \"assignedPolicies\" : [ {\n      \"id\" : \"4a12d988-bac2-42b7-980c-f09686e3d7db\",\n      \"policyId\" : \"ac007558-970f-45fc-9939-48f78d8622fa\",\n      \"name\" : \"No-op policy\",\n      \"description\" : \"A policy that does not require any approval\"\n    } ],\n    \"dataGroupSpecificPolicies\" : [ {\n      \"dataGroups\" : [ {\n        \"id\" : \"8a49404e7750618601775066a0130006\",\n        \"name\" : \"Salary Accounts\",\n        \"deleted\" : false\n      }, {\n        \"id\" : \"8a49404e7750618601775066a0130006\",\n        \"name\" : \"Tax Accounts\",\n        \"deleted\" : false\n      } ],\n      \"assignedPolicies\" : [ {\n        \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n        \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n        \"name\" : \"Simple policy\",\n        \"description\" : \"A simple policy that requires one approval of type A\",\n        \"upperBound\" : {\n          \"amount\" : \"100.00\",\n          \"currencyCode\" : \"EUR\"\n        }\n      }, {\n        \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n        \"policyId\" : \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n        \"name\" : \"Default policy\",\n        \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n        \"upperBound\" : {\n          \"amount\" : \"200.00\",\n          \"currencyCode\" : \"EUR\"\n        }\n      } ]\n    }, {\n      \"dataGroups\" : [ {\n        \"id\" : \"8a49404e7750618601775066a0130034\",\n        \"name\" : \"Marketing US\",\n        \"deleted\" : false\n      } ],\n      \"assignedPolicies\" : [ {\n        \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n        \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n        \"name\" : \"Simple policy\",\n        \"description\" : \"A simple policy that requires one approval of type A\"\n      } ]\n    } ]\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/policy-assignments URL pattern\n*/\nexport const PolicyAssignmentsHttpServicePostPolicyAssignmentsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 204,\n                    body: { }\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Policy not found\",\n  \"errors\" : [ {\n    \"message\" : \"Policy not found\",\n    \"key\" : \"approval.api.PolicyNotFound\",\n    \"context\" : {\n      \"policy id\" : \"7d466fef-de4d-48f2-8e72-c31ca5774b5a\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Policy assignment already exists\",\n  \"errors\" : [ {\n    \"message\" : \"Policy assignment already exists\",\n    \"key\" : \"approval.api.PolicyAssignmentAlreadyExists\",\n    \"context\" : {\n      \"policy id\" : \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n      \"service agreement id\" : \"8a48e61a69918d12016994f9d9160001\",\n      \"business function\" : \"SEPA CT\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Policy assignment with no bounds already exists\",\n  \"errors\" : [ {\n    \"message\" : \"Policy assignment with no bounds already exists\",\n    \"key\" : \"approval.api.PolicyAssignmentAlreadyUnbounded\",\n    \"context\" : {\n      \"policy id\" : \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n      \"service agreement id\" : \"8a48e61a69918d12016994f9d9160001\",\n      \"business function\" : \"SEPA CT\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Policy assignment has invalid bounds\",\n  \"errors\" : [ {\n    \"message\" : \"Policy assignment has invalid bounds\",\n    \"key\" : \"approval.api.PolicyAssignmentInvalidBound\",\n    \"context\" : {\n      \"amount\" : \"-10\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/policy-assignments/{id}/approvals URL pattern\n*/\nexport const PolicyAssignmentsHttpServicePutApprovalsByPolicyAssignmentIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments/{id}/approvals\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 204,\n                    body: { }\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/policy-assignments/{id} URL pattern\n*/\nexport const PolicyAssignmentsHttpServiceRetrievePolicyAssignmentByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"serviceAgreementId\" : \"92058e99-88f7-45d9-bb99-s4s4s4s4s4s4\",\n  \"serviceAgreementName\" : \"Service agreement name\",\n  \"serviceAgreementDescription\" : \"Service agreement description\",\n  \"function\" : \"Sepa CT\",\n  \"resource\" : \"Payments\",\n  \"status\" : \"ACTIVE\",\n  \"assignedPolicies\" : [ {\n    \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n    \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n    \"name\" : \"Simple policy\",\n    \"description\" : \"A simple policy that requires one approval of type A\",\n    \"upperBound\" : {\n      \"amount\" : \"100.00\",\n      \"currencyCode\" : \"EUR\"\n    }\n  }, {\n    \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n    \"policyId\" : \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n    \"name\" : \"Default policy\",\n    \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n    \"upperBound\" : {\n      \"amount\" : \"200.00\",\n      \"currencyCode\" : \"EUR\"\n    }\n  } ],\n  \"dataGroupSpecificPolicies\" : [ {\n    \"dataGroups\" : [ {\n      \"id\" : \"8a49404e7750618601775066a0130006\",\n      \"name\" : \"Salary Accounts\",\n      \"deleted\" : false\n    }, {\n      \"id\" : \"8a49404e7750618601775066a0130006\",\n      \"name\" : \"Tax Accounts\",\n      \"deleted\" : false\n    } ],\n    \"assignedPolicies\" : [ {\n      \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n      \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n      \"name\" : \"Simple policy\",\n      \"description\" : \"A simple policy that requires one approval of type A\",\n      \"upperBound\" : {\n        \"amount\" : \"100.00\",\n        \"currencyCode\" : \"EUR\"\n      }\n    }, {\n      \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n      \"policyId\" : \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n      \"name\" : \"Default policy\",\n      \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n      \"upperBound\" : {\n        \"amount\" : \"200.00\",\n        \"currencyCode\" : \"EUR\"\n      }\n    } ]\n  }, {\n    \"dataGroups\" : [ {\n      \"id\" : \"8a49404e7750618601775066a0130034\",\n      \"name\" : \"Marketing US\",\n      \"deleted\" : false\n    } ],\n    \"assignedPolicies\" : [ {\n      \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n      \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n      \"name\" : \"Simple policy\",\n      \"description\" : \"A simple policy that requires one approval of type A\"\n    } ]\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const PolicyAssignmentsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/policy-assignments\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"numberOfRowsAffected\" : 2\n}\n            },\n\n            {\n                status: 202,\n                body: {\n  \"numberOfRowsAffected\" : 2\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/policy-assignments/approvable-business-functions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvableBusinessFunctions\" : [ {\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA CT\",\n    \"status\" : \"ACTIVE\",\n    \"assignedPolicies\" : [ {\n      \"id\" : \"4a12d988-bac2-42b7-980c-f09686e3d7db\",\n      \"policyId\" : \"ac007558-970f-45fc-9939-48f78d8622fa\",\n      \"name\" : \"No-op policy\",\n      \"description\" : \"A policy that does not require any approval\"\n    } ],\n    \"dataGroupSpecificPolicies\" : [ {\n      \"dataGroups\" : [ {\n        \"id\" : \"8a49404e7750618601775066a0130006\",\n        \"name\" : \"Salary Accounts\",\n        \"deleted\" : false\n      }, {\n        \"id\" : \"8a49404e7750618601775066a0130006\",\n        \"name\" : \"Tax Accounts\",\n        \"deleted\" : false\n      } ],\n      \"assignedPolicies\" : [ {\n        \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n        \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n        \"name\" : \"Simple policy\",\n        \"description\" : \"A simple policy that requires one approval of type A\",\n        \"upperBound\" : {\n          \"amount\" : \"100.00\",\n          \"currencyCode\" : \"EUR\"\n        }\n      }, {\n        \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n        \"policyId\" : \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n        \"name\" : \"Default policy\",\n        \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n        \"upperBound\" : {\n          \"amount\" : \"200.00\",\n          \"currencyCode\" : \"EUR\"\n        }\n      } ]\n    }, {\n      \"dataGroups\" : [ {\n        \"id\" : \"8a49404e7750618601775066a0130034\",\n        \"name\" : \"Marketing US\",\n        \"deleted\" : false\n      } ],\n      \"assignedPolicies\" : [ {\n        \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n        \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n        \"name\" : \"Simple policy\",\n        \"description\" : \"A simple policy that requires one approval of type A\"\n      } ]\n    } ]\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/policy-assignments\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 204,\n                body: { }\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Policy not found\",\n  \"errors\" : [ {\n    \"message\" : \"Policy not found\",\n    \"key\" : \"approval.api.PolicyNotFound\",\n    \"context\" : {\n      \"policy id\" : \"7d466fef-de4d-48f2-8e72-c31ca5774b5a\"\n    }\n  } ]\n}\n            },\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Policy assignment already exists\",\n  \"errors\" : [ {\n    \"message\" : \"Policy assignment already exists\",\n    \"key\" : \"approval.api.PolicyAssignmentAlreadyExists\",\n    \"context\" : {\n      \"policy id\" : \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n      \"service agreement id\" : \"8a48e61a69918d12016994f9d9160001\",\n      \"business function\" : \"SEPA CT\"\n    }\n  } ]\n}\n            },\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Policy assignment with no bounds already exists\",\n  \"errors\" : [ {\n    \"message\" : \"Policy assignment with no bounds already exists\",\n    \"key\" : \"approval.api.PolicyAssignmentAlreadyUnbounded\",\n    \"context\" : {\n      \"policy id\" : \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n      \"service agreement id\" : \"8a48e61a69918d12016994f9d9160001\",\n      \"business function\" : \"SEPA CT\"\n    }\n  } ]\n}\n            },\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Policy assignment has invalid bounds\",\n  \"errors\" : [ {\n    \"message\" : \"Policy assignment has invalid bounds\",\n    \"key\" : \"approval.api.PolicyAssignmentInvalidBound\",\n    \"context\" : {\n      \"amount\" : \"-10\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/policy-assignments/{id}/approvals\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 204,\n                body: { }\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/policy-assignments/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"serviceAgreementId\" : \"92058e99-88f7-45d9-bb99-s4s4s4s4s4s4\",\n  \"serviceAgreementName\" : \"Service agreement name\",\n  \"serviceAgreementDescription\" : \"Service agreement description\",\n  \"function\" : \"Sepa CT\",\n  \"resource\" : \"Payments\",\n  \"status\" : \"ACTIVE\",\n  \"assignedPolicies\" : [ {\n    \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n    \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n    \"name\" : \"Simple policy\",\n    \"description\" : \"A simple policy that requires one approval of type A\",\n    \"upperBound\" : {\n      \"amount\" : \"100.00\",\n      \"currencyCode\" : \"EUR\"\n    }\n  }, {\n    \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n    \"policyId\" : \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n    \"name\" : \"Default policy\",\n    \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n    \"upperBound\" : {\n      \"amount\" : \"200.00\",\n      \"currencyCode\" : \"EUR\"\n    }\n  } ],\n  \"dataGroupSpecificPolicies\" : [ {\n    \"dataGroups\" : [ {\n      \"id\" : \"8a49404e7750618601775066a0130006\",\n      \"name\" : \"Salary Accounts\",\n      \"deleted\" : false\n    }, {\n      \"id\" : \"8a49404e7750618601775066a0130006\",\n      \"name\" : \"Tax Accounts\",\n      \"deleted\" : false\n    } ],\n    \"assignedPolicies\" : [ {\n      \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n      \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n      \"name\" : \"Simple policy\",\n      \"description\" : \"A simple policy that requires one approval of type A\",\n      \"upperBound\" : {\n        \"amount\" : \"100.00\",\n        \"currencyCode\" : \"EUR\"\n      }\n    }, {\n      \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n      \"policyId\" : \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n      \"name\" : \"Default policy\",\n      \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n      \"upperBound\" : {\n        \"amount\" : \"200.00\",\n        \"currencyCode\" : \"EUR\"\n      }\n    } ]\n  }, {\n    \"dataGroups\" : [ {\n      \"id\" : \"8a49404e7750618601775066a0130034\",\n      \"name\" : \"Marketing US\",\n      \"deleted\" : false\n    } ],\n    \"assignedPolicies\" : [ {\n      \"id\" : \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n      \"policyId\" : \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n      \"name\" : \"Simple policy\",\n      \"description\" : \"A simple policy that requires one approval of type A\"\n    } ]\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":";;;;;;;MAmBa,oBAAoB,GAAG;IAChC,SAAS,EAAE,WAAmC;IAC9C,UAAU,EAAE,YAAoC;IAChD,OAAO,EAAE,SAAiC;IAC1C,MAAM,EAAE,QAAgC;;;MCJ/B,cAAc,GAAG;IAC1B,OAAO,EAAE,SAA2B;IACpC,QAAQ,EAAE,UAA4B;IACtC,QAAQ,EAAE,UAA4B;IACtC,SAAS,EAAE,WAA6B;;;MCJ/B,eAAe,GAAG;IAC3B,EAAE,EAAE,IAAuB;;;MCDlB,sBAAsB,GAAG;IAClC,MAAM,EAAE,QAAkC;IAC1C,OAAO,EAAE,SAAmC;IAC5C,QAAQ,EAAE,UAAoC;IAC9C,aAAa,EAAE,gBAA0C;IACzD,OAAO,EAAE,SAAmC;;;MCLnC,YAAY,GAAG;IACxB,QAAQ,EAAE,UAA0B;IACpC,QAAQ,EAAE,UAA0B;;;MCnB3B,kBAAkB,GAAG,IAAI,cAAc,CAAS,oBAAoB,EAAE;MACtE,kBAAkB,GAAG;IAC9B,KAAK,EAAE,GAAG;IACV,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,GAAG;IACV,OAAO,EAAE,GAAG;;;MCaH,qBAAqB;IAe9B,YAAY,0BAA2D,EAAE;QACrE,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,uBAAuB,CAAC,eAAe,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;QAC/C,IAAI,uBAAuB,CAAC,WAAW,EAAE;YACrC,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC;SAC1D;aACI;YACD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACzB;KACJ;IASM,uBAAuB,CAAE,YAAsB;QAClD,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,SAAS,CAAC;SACpB;QAED,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAS,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,IAAI,KAAK,SAAS,EAAE;YACpB,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;KACf;IASM,kBAAkB,CAAC,OAAiB;QACvC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO,SAAS,CAAC;SACpB;QAED,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,IAAI,KAAK,SAAS,EAAE;YACpB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;KACf;IAYM,UAAU,CAAC,IAAY;QAC1B,MAAM,QAAQ,GAAW,IAAI,MAAM,CAAC,+DAA+D,EAAE,GAAG,CAAC,CAAC;QAC1G,OAAO,IAAI,KAAK,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,6BAA6B,CAAC,CAAC;KACzG;IAEM,gBAAgB,CAAC,GAAW;QAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,OAAO,KAAK,KAAK,UAAU;cAC5B,KAAK,EAAE;cACP,KAAK,CAAC;KACf;CACJ;MAEY,YAAY,GAAG,IAAI,cAAc,CAAC,uCAAuC;;MCpGzE,iBAAiB;IAQ1B,YAAqC,YAA+B,EAC3C,IAAgB,EAChB,kBAA6C,EACzD,MAA6B;QAGtC,IAAI,YAAY,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;SAC/F;QACD,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,+DAA+D;gBAC/E,0DAA0D,CAAC,CAAC;SAC/D;QAED,IAAI,kBAAkB,EAAE;YACpB,kBAAkB,CAAC,eAAe,CAAC,YAAY,EAAE;gBAC7C,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,MAAM,CAAC,QAAQ,IAAI,EAAE;gBAClC,OAAO,EAAE,EAAE;aACd,CAAC,CAAC;SACN;KACJ;IA5BM,OAAO,OAAO,CAAC,oBAAiD;QACnE,OAAO;YACH,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,qBAAqB,EAAE,UAAU,EAAE,oBAAoB,EAAE,CAAE;SACtF,CAAC;KACL;;+GANQ,iBAAiB,kBAQyB,iBAAiB;gHAR3D,iBAAiB;gHAAjB,iBAAiB,aAFd,EAAE,YAHF,EAAE;4FAKL,iBAAiB;kBAN7B,QAAQ;mBAAC;oBACR,OAAO,EAAO,EAAE;oBAChB,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAO,EAAE;oBAChB,SAAS,EAAK,EAAE;iBACjB;0DASsD,iBAAiB;0BAAtD,QAAQ;;0BAAI,QAAQ;;0BACpB,QAAQ;;0BACR,QAAQ;;;MChBb,wBAAwB;IACjC,SAAS,CAAC,CAAS;QACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,WAAW,CAAC,CAAS;QACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,SAAS,CAAC,CAAS;QACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,WAAW,CAAC,CAAS;QACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;;;MCuCQ,kCAAkC;IAO3C,YAAsB,UAAsB,EAA0C,QAAgB,EAAc,aAAoC;QAAlI,eAAU,GAAV,UAAU,CAAY;QALlC,aAAQ,GAAG,EAAE,CAAC;QACjB,mBAAc,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;QAI/C,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1C;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;KAC/E;IAGO,eAAe,CAAC,UAAsB,EAAE,KAAU,EAAE,GAAY;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;YAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM;YACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAEO,wBAAwB,CAAC,UAAsB,EAAE,KAAW,EAAE,GAAY;QAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,UAAU,CAAC;SACrB;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,KAAe,CAAC,OAAO,CAAE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACxG;iBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;gBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9C;aAAM;YACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IA6BM,gCAAgC,CAAC,iBAAgE,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC/M,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,4FAA4F,CAAC,CAAC;SACjH;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,4CAA4C,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAC1I;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,mCAAmC,CAAC,iBAAgE;QACvG,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,4FAA4F,CAAC,CAAC;SACjH;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,4CAA4C,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;KACtH;IA6BM,2BAA2B,CAAC,iBAA2D,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QACrM,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;SAC5G;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,4CAA4C,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EACvK;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,8BAA8B,CAAC,iBAA2D;QAC7F,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;SAC5G;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,4CAA4C,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;KACtH;IA6BM,sBAAsB,CAAC,iBAAsD,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC3L,MAAM,kCAAkC,GAAG,iBAAiB,CAAC,mCAAmC,CAAC,CAAC;QAElG,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAID,MAAM,QAAQ,GAAa;YACvB,kBAAkB;SACrB,CAAC;QACF,MAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,0CAA0C,EACrG,kCAAkC,EAClC;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,yBAAyB,CAAC,iBAAsD;QACnF,MAAM,kCAAkC,GAAG,iBAAiB,CAAC,mCAAmC,CAAC,CAAC;QAClG,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,0CAA0C,CAAC;KACnF;IA6BM,mCAAmC,CAAC,iBAAmE,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QACrN,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,+FAA+F,CAAC,CAAC;SACpH;QACD,MAAM,6CAA6C,GAAG,iBAAiB,CAAC,8CAA8C,CAAC,CAAC;QAExH,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAID,MAAM,QAAQ,GAAa;YACvB,kBAAkB;SACrB,CAAC;QACF,MAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,4CAA4C,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EACvI,6CAA6C,EAC7C;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,sCAAsC,CAAC,iBAAmE;QAC7G,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,+FAA+F,CAAC,CAAC;SACpH;QACD,MAAM,6CAA6C,GAAG,iBAAiB,CAAC,8CAA8C,CAAC,CAAC;QACxH,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,4CAA4C,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;KACtH;;gIAvWQ,kCAAkC,4CAOuB,kBAAkB;oIAP3E,kCAAkC,cAFjC,MAAM;4FAEP,kCAAkC;kBAH9C,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAQkD,QAAQ;;0BAAI,MAAM;2BAAC,kBAAkB;;0BAAqB,QAAQ;;;MC1DxG,+EAA+E,GAAa,WAAW,CAAC,CAAC;QAC9G,UAAU,EAAE,+CAA+C;QAC3D,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;YACH;gBACA,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAE;aACP;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,0EAA0E,GAAa,WAAW,CAAC,CAAC;QACzG,UAAU,EAAE,+CAA+C;QAC3D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,cAAc,EAAG;wBACf,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,GAAG;wBACZ,aAAa,EAAG,cAAc;wBAC9B,MAAM,EAAG,GAAG;qBACb;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,qEAAqE,GAAa,WAAW,CAAC,CAAC;QACpG,UAAU,EAAE,0CAA0C;QACtD,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YACH;gBACA,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAE;aACP;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,qDAAqD;4BACjE,KAAK,EAAG,6CAA6C;4BACrD,SAAS,EAAG;gCACV,yBAAyB,EAAG,kCAAkC;6BAC/D;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,yBAAyB;4BACrC,KAAK,EAAG,mCAAmC;4BAC3C,SAAS,EAAG;gCACV,uBAAuB,EAAG,sCAAsC;6BACjE;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,kFAAkF,GAAa,WAAW,CAAC,CAAC;QACjH,UAAU,EAAE,+CAA+C;QAC3D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACA,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAE;aACP;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,yBAAyB;4BACrC,KAAK,EAAG,mCAAmC;4BAC3C,SAAS,EAAG;gCACV,uBAAuB,EAAG,sCAAsC;6BACjE;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;iBACnD;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,WAAW;oBACvB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kCAAkC;4BAC9C,KAAK,EAAG,2CAA2C;4BACnD,SAAS,EAAG;gCACV,cAAc,EAAG,sCAAsC;6BACxD;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAES,+CAA+C,GAAa,WAAW,CAChF;IACA;QACI,UAAU,EAAE,+CAA+C;QAC3D,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;YAEX;gBACE,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAE;aACT;YAEG;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,+CAA+C;QAC3D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,cAAc,EAAG;wBACf,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,GAAG;wBACZ,aAAa,EAAG,cAAc;wBAC9B,MAAM,EAAG,GAAG;qBACb;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,0CAA0C;QACtD,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YAEX;gBACE,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAE;aACT;YAEG;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,qDAAqD;4BACjE,KAAK,EAAG,6CAA6C;4BACrD,SAAS,EAAG;gCACV,yBAAyB,EAAG,kCAAkC;6BAC/D;yBACF,CAAE;iBACJ;aACY;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,yBAAyB;4BACrC,KAAK,EAAG,mCAAmC;4BAC3C,SAAS,EAAG;gCACV,uBAAuB,EAAG,sCAAsC;6BACjE;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,+CAA+C;QAC3D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEX;gBACE,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAE;aACT;YAEG;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,yBAAyB;4BACrC,KAAK,EAAG,mCAAmC;4BAC3C,SAAS,EAAG;gCACV,uBAAuB,EAAG,sCAAsC;6BACjE;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;iBACnD;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,WAAW;oBACvB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kCAAkC;4BAC9C,KAAK,EAAG,2CAA2C;4BACnD,SAAS,EAAG;gCACV,cAAc,EAAG,sCAAsC;6BACxD;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;CACA;;MCtVY,wBAAwB;IAOjC,YAAsB,UAAsB,EAA0C,QAAgB,EAAc,aAAoC;QAAlI,eAAU,GAAV,UAAU,CAAY;QALlC,aAAQ,GAAG,EAAE,CAAC;QACjB,mBAAc,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;QAI/C,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1C;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;KAC/E;IAGO,eAAe,CAAC,UAAsB,EAAE,KAAU,EAAE,GAAY;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;YAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM;YACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAEO,wBAAwB,CAAC,UAAsB,EAAE,KAAW,EAAE,GAAY;QAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,UAAU,CAAC;SACrB;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,KAAe,CAAC,OAAO,CAAE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACxG;iBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;gBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9C;aAAM;YACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAyBM,yBAAyB,CAAC,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAEtI,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAuC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,+BAA+B,EAC1H;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,4BAA4B;QAC/B,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,+BAA+B,CAAC;KACxE;;sHAnHQ,wBAAwB,4CAOiC,kBAAkB;0HAP3E,wBAAwB,cAFvB,MAAM;4FAEP,wBAAwB;kBAHpC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAQkD,QAAQ;;0BAAI,MAAM;2BAAC,kBAAkB;;0BAAqB,QAAQ;;;MChCxG,8DAA8D,GAAa,WAAW,CAAC,CAAC;QAC7F,UAAU,EAAE,+BAA+B;QAC3C,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,eAAe,EAAG,CAAE;4BAClB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,GAAG;4BACZ,aAAa,EAAG,cAAc;4BAC9B,MAAM,EAAG,GAAG;yBACb,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,GAAG;4BACZ,aAAa,EAAG,cAAc;4BAC9B,MAAM,EAAG,GAAG;yBACb,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,GAAG;4BACZ,aAAa,EAAG,cAAc;4BAC9B,MAAM,EAAG,GAAG;yBACb,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAES,qCAAqC,GAAa,WAAW,CACtE;IACA;QACI,UAAU,EAAE,+BAA+B;QAC3C,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,eAAe,EAAG,CAAE;4BAClB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,GAAG;4BACZ,aAAa,EAAG,cAAc;4BAC9B,MAAM,EAAG,GAAG;yBACb,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,GAAG;4BACZ,aAAa,EAAG,cAAc;4BAC9B,MAAM,EAAG,GAAG;yBACb,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,GAAG;4BACZ,aAAa,EAAG,cAAc;4BAC9B,MAAM,EAAG,GAAG;yBACb,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;CACA;;MCrCY,oBAAoB;IAO7B,YAAsB,UAAsB,EAA0C,QAAgB,EAAc,aAAoC;QAAlI,eAAU,GAAV,UAAU,CAAY;QALlC,aAAQ,GAAG,EAAE,CAAC;QACjB,mBAAc,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;QAI/C,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1C;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;KAC/E;IAGO,eAAe,CAAC,UAAsB,EAAE,KAAU,EAAE,GAAY;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;YAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM;YACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAEO,wBAAwB,CAAC,UAAsB,EAAE,KAAW,EAAE,GAAY;QAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,UAAU,CAAC;SACrB;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,KAAe,CAAC,OAAO,CAAE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACxG;iBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;gBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9C;aAAM;YACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IA6BM,uBAAuB,CAAC,iBAAuD,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC7L,MAAM,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;QACpD,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,SAAS,EAAE;YACnD,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;SAChH;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAwC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,4BAA4B,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,EACjK;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,0BAA0B,CAAC,iBAAuD;QACrF,MAAM,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;QACpD,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,SAAS,EAAE;YACnD,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;SAChH;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,4BAA4B,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC;KAC9G;IA6BM,YAAY,CAAC,iBAA4C,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QACvK,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;SAC5G;QACD,MAAM,OAAO,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAExC,IAAI,eAAe,GAAG,IAAI,UAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAC9D,IAAI,kBAAkB,EAAE;YACpB,kBAAkB,CAAC,OAAO,CAAC,CAAC,OAAO;gBAC/B,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,mBAAmB,CAAC,CAAC;aACxC,CAAC,CAAA;SACL;QACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;YAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,QAAQ,CAAC,CAAC;SAC3B;QACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;SACvB;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,0BAA0B,EACjH;YACI,MAAM,EAAE,eAAe;YACvB,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,eAAe,CAAC,iBAA4C;QAC/D,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;SAC5G;QACD,MAAM,OAAO,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,eAAe,GAAG,IAAI,UAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAC9D,IAAI,kBAAkB,EAAE;YACpB,kBAAkB,CAAC,OAAO,CAAC,CAAC,OAAO;gBAC/B,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,mBAAmB,CAAC,CAAC;aACxC,CAAC,CAAA;SACL;QACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;YAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,QAAQ,CAAC,CAAC;SAC3B;QACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;SACvB;QACD,MAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;QAC/C,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,2BAA2B,WAAW,GAAG,IAAI,WAAW,EAAE,GAAG,EAAE,EAAE,CAAC;KAC1G;IA6BM,mCAAmC,CAAC,iBAAmE,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QACrN,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;QAChE,IAAI,iBAAiB,KAAK,IAAI,IAAI,iBAAiB,KAAK,SAAS,EAAE;YAC/D,MAAM,IAAI,KAAK,CAAC,6GAA6G,CAAC,CAAC;SAClI;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsD,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,kBAAkB,EAC5M;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,sCAAsC,CAAC,iBAAmE;QAC7G,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;QAChE,IAAI,iBAAiB,KAAK,IAAI,IAAI,iBAAiB,KAAK,SAAS,EAAE;YAC/D,MAAM,IAAI,KAAK,CAAC,6GAA6G,CAAC,CAAC;SAClI;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,kBAAkB,CAAC;KAC3I;;kHApTQ,oBAAoB,4CAOqC,kBAAkB;sHAP3E,oBAAoB,cAFnB,MAAM;4FAEP,oBAAoB;kBAHhC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAQkD,QAAQ;;0BAAI,MAAM;2BAAC,kBAAkB;;0BAAqB,QAAQ;;;MCvDxG,wDAAwD,GAAa,WAAW,CAAC,CAAC;QACvF,UAAU,EAAE,uCAAuC;QACnD,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,iBAAiB,EAAG;wBAClB,IAAI,EAAG,sCAAsC;wBAC7C,QAAQ,EAAG,sCAAsC;wBACjD,cAAc,EAAG,aAAa;wBAC9B,gBAAgB,EAAG,aAAa;wBAChC,oBAAoB,EAAG,sCAAsC;wBAC7D,QAAQ,EAAG,sCAAsC;wBACjD,kBAAkB,EAAG,sCAAsC;wBAC3D,UAAU,EAAG,UAAU;wBACvB,UAAU,EAAG,SAAS;wBACtB,QAAQ,EAAG,SAAS;wBACpB,WAAW,EAAG,sBAAsB;wBACpC,SAAS,EAAG,CAAE;gCACZ,IAAI,EAAG,sCAAsC;gCAC7C,QAAQ,EAAG,sCAAsC;gCACjD,oBAAoB,EAAG,sCAAsC;gCAC7D,gBAAgB,EAAG,aAAa;gCAChC,cAAc,EAAG,aAAa;gCAC9B,gBAAgB,EAAG,sCAAsC;gCACzD,QAAQ,EAAG,UAAU;gCACrB,WAAW,EAAG,sBAAsB;6BACrC,CAAE;wBACH,eAAe,EAAG,CAAE;gCAClB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,GAAG;gCACZ,aAAa,EAAG,cAAc;gCAC9B,MAAM,EAAG,GAAG;6BACb,EAAE;gCACD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,GAAG;gCACZ,aAAa,EAAG,cAAc;gCAC9B,MAAM,EAAG,GAAG;6BACb,CAAE;wBACH,QAAQ,EAAG;4BACT,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,gBAAgB;4BACzB,aAAa,EAAG,wEAAwE;4BACxF,OAAO,EAAG,CAAE;oCACV,gBAAgB,EAAG,sCAAsC;oCACzD,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,EAAE;oCACD,gBAAgB,EAAG,sCAAsC;oCACzD,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,CAAE;yBACJ;wBACD,YAAY,EAAG,KAAK;wBACpB,WAAW,EAAG,KAAK;wBACnB,eAAe,EAAG,KAAK;qBACxB;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,6CAA6C,GAAa,WAAW,CAAC,CAAC;QAC5E,UAAU,EAAE,0BAA0B;QACtC,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,WAAW,EAAG,CAAE;4BACd,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sCAAsC;4BACjD,oBAAoB,EAAG,sCAAsC;4BAC7D,QAAQ,EAAG,sCAAsC;4BACjD,kBAAkB,EAAG,sCAAsC;4BAC3D,UAAU,EAAG,UAAU;4BACvB,UAAU,EAAG,SAAS;4BACtB,QAAQ,EAAG,SAAS;4BACpB,SAAS,EAAG,CAAE;oCACZ,IAAI,EAAG,sCAAsC;oCAC7C,QAAQ,EAAG,sCAAsC;oCACjD,oBAAoB,EAAG,sCAAsC;oCAC7D,gBAAgB,EAAG,sCAAsC;oCACzD,QAAQ,EAAG,UAAU;oCACrB,WAAW,EAAG,sBAAsB;iCACrC,CAAE;4BACH,eAAe,EAAG,IAAI;4BACtB,WAAW,EAAG,sBAAsB;yBACrC,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sCAAsC;4BACjD,oBAAoB,EAAG,sCAAsC;4BAC7D,QAAQ,EAAG,sCAAsC;4BACjD,kBAAkB,EAAG,sCAAsC;4BAC3D,UAAU,EAAG,UAAU;4BACvB,UAAU,EAAG,aAAa;4BAC1B,QAAQ,EAAG,SAAS;4BACpB,SAAS,EAAG,EAAG;4BACf,eAAe,EAAG,KAAK;4BACvB,WAAW,EAAG,sBAAsB;yBACrC,CAAE;oBACH,QAAQ,EAAG,sCAAsC;iBAClD;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,oEAAoE,GAAa,WAAW,CAAC,CAAC;QACnG,UAAU,EAAE,oEAAoE;QAChF,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,QAAQ,EAAG,WAAW;oBACtB,YAAY,EAAG,sBAAsB;iBACtC;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAES,iCAAiC,GAAa,WAAW,CAClE;IACA;QACI,UAAU,EAAE,uCAAuC;QACnD,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,iBAAiB,EAAG;wBAClB,IAAI,EAAG,sCAAsC;wBAC7C,QAAQ,EAAG,sCAAsC;wBACjD,cAAc,EAAG,aAAa;wBAC9B,gBAAgB,EAAG,aAAa;wBAChC,oBAAoB,EAAG,sCAAsC;wBAC7D,QAAQ,EAAG,sCAAsC;wBACjD,kBAAkB,EAAG,sCAAsC;wBAC3D,UAAU,EAAG,UAAU;wBACvB,UAAU,EAAG,SAAS;wBACtB,QAAQ,EAAG,SAAS;wBACpB,WAAW,EAAG,sBAAsB;wBACpC,SAAS,EAAG,CAAE;gCACZ,IAAI,EAAG,sCAAsC;gCAC7C,QAAQ,EAAG,sCAAsC;gCACjD,oBAAoB,EAAG,sCAAsC;gCAC7D,gBAAgB,EAAG,aAAa;gCAChC,cAAc,EAAG,aAAa;gCAC9B,gBAAgB,EAAG,sCAAsC;gCACzD,QAAQ,EAAG,UAAU;gCACrB,WAAW,EAAG,sBAAsB;6BACrC,CAAE;wBACH,eAAe,EAAG,CAAE;gCAClB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,GAAG;gCACZ,aAAa,EAAG,cAAc;gCAC9B,MAAM,EAAG,GAAG;6BACb,EAAE;gCACD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,GAAG;gCACZ,aAAa,EAAG,cAAc;gCAC9B,MAAM,EAAG,GAAG;6BACb,CAAE;wBACH,QAAQ,EAAG;4BACT,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,gBAAgB;4BACzB,aAAa,EAAG,wEAAwE;4BACxF,OAAO,EAAG,CAAE;oCACV,gBAAgB,EAAG,sCAAsC;oCACzD,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,EAAE;oCACD,gBAAgB,EAAG,sCAAsC;oCACzD,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,CAAE;yBACJ;wBACD,YAAY,EAAG,KAAK;wBACpB,WAAW,EAAG,KAAK;wBACnB,eAAe,EAAG,KAAK;qBACxB;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,0BAA0B;QACtC,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,WAAW,EAAG,CAAE;4BACd,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sCAAsC;4BACjD,oBAAoB,EAAG,sCAAsC;4BAC7D,QAAQ,EAAG,sCAAsC;4BACjD,kBAAkB,EAAG,sCAAsC;4BAC3D,UAAU,EAAG,UAAU;4BACvB,UAAU,EAAG,SAAS;4BACtB,QAAQ,EAAG,SAAS;4BACpB,SAAS,EAAG,CAAE;oCACZ,IAAI,EAAG,sCAAsC;oCAC7C,QAAQ,EAAG,sCAAsC;oCACjD,oBAAoB,EAAG,sCAAsC;oCAC7D,gBAAgB,EAAG,sCAAsC;oCACzD,QAAQ,EAAG,UAAU;oCACrB,WAAW,EAAG,sBAAsB;iCACrC,CAAE;4BACH,eAAe,EAAG,IAAI;4BACtB,WAAW,EAAG,sBAAsB;yBACrC,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sCAAsC;4BACjD,oBAAoB,EAAG,sCAAsC;4BAC7D,QAAQ,EAAG,sCAAsC;4BACjD,kBAAkB,EAAG,sCAAsC;4BAC3D,UAAU,EAAG,UAAU;4BACvB,UAAU,EAAG,aAAa;4BAC1B,QAAQ,EAAG,SAAS;4BACpB,SAAS,EAAG,EAAG;4BACf,eAAe,EAAG,KAAK;4BACvB,WAAW,EAAG,sBAAsB;yBACrC,CAAE;oBACH,QAAQ,EAAG,sCAAsC;iBAClD;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,oEAAoE;QAChF,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,QAAQ,EAAG,WAAW;oBACtB,YAAY,EAAG,sBAAsB;iBACtC;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;CACA;;MChYY,mBAAmB;IAO5B,YAAsB,UAAsB,EAA0C,QAAgB,EAAc,aAAoC;QAAlI,eAAU,GAAV,UAAU,CAAY;QALlC,aAAQ,GAAG,EAAE,CAAC;QACjB,mBAAc,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;QAI/C,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1C;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;KAC/E;IAGO,eAAe,CAAC,UAAsB,EAAE,KAAU,EAAE,GAAY;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;YAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM;YACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAEO,wBAAwB,CAAC,UAAsB,EAAE,KAAW,EAAE,GAAY;QAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,UAAU,CAAC;SACrB;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,KAAe,CAAC,OAAO,CAAE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACxG;iBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;gBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9C;aAAM;YACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAyBM,oBAAoB,CAAC,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAEjI,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,yBAAyB,EAC/G;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,uBAAuB;QAC1B,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,yBAAyB,CAAC;KAClE;;iHAnHQ,mBAAmB,4CAOsC,kBAAkB;qHAP3E,mBAAmB,cAFlB,MAAM;4FAEP,mBAAmB;kBAH/B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAQkD,QAAQ;;0BAAI,MAAM;2BAAC,kBAAkB;;0BAAqB,QAAQ;;;MChCxG,oDAAoD,GAAa,WAAW,CAAC,CAAC;QACnF,UAAU,EAAE,yBAAyB;QACrC,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,UAAU,EAAG,CAAE;4BACb,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,eAAe;4BACxB,aAAa,EAAG,wEAAwE;4BACxF,OAAO,EAAG,CAAE;oCACV,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,EAAE;oCACD,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,CAAE;yBACJ,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,kBAAkB;4BAC3B,aAAa,EAAG,wEAAwE;4BACxF,OAAO,EAAG,CAAE;oCACV,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,CAAE;yBACJ,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAES,gCAAgC,GAAa,WAAW,CACjE;IACA;QACI,UAAU,EAAE,yBAAyB;QACrC,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,UAAU,EAAG,CAAE;4BACb,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,eAAe;4BACxB,aAAa,EAAG,wEAAwE;4BACxF,OAAO,EAAG,CAAE;oCACV,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,EAAE;oCACD,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,CAAE;yBACJ,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,kBAAkB;4BAC3B,aAAa,EAAG,wEAAwE;4BACxF,OAAO,EAAG,CAAE;oCACV,cAAc,EAAG;wCACf,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,GAAG;wCACZ,aAAa,EAAG,cAAc;wCAC9B,MAAM,EAAG,GAAG;qCACb;oCACD,mBAAmB,EAAG,CAAC;iCACxB,CAAE;yBACJ,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;CACA;;MC7DY,4BAA4B;IAOrC,YAAsB,UAAsB,EAA0C,QAAgB,EAAc,aAAoC;QAAlI,eAAU,GAAV,UAAU,CAAY;QALlC,aAAQ,GAAG,EAAE,CAAC;QACjB,mBAAc,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;QAI/C,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1C;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;KAC/E;IAGO,eAAe,CAAC,UAAsB,EAAE,KAAU,EAAE,GAAY;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;YAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM;YACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAEO,wBAAwB,CAAC,UAAsB,EAAE,KAAW,EAAE,GAAY;QAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,UAAU,CAAC;SACrB;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,KAAe,CAAC,OAAO,CAAE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACxG;iBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;gBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9C;aAAM;YACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IA6BM,uBAAuB,CAAC,iBAAuD,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC7L,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;QACpE,MAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAEhD,IAAI,eAAe,GAAG,IAAI,UAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAC9D,IAAI,mBAAmB,KAAK,SAAS,IAAI,mBAAmB,KAAK,IAAI,EAAE;YACrE,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;SACnD;QACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;YACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;SAC/B;QACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;YACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;SAC/B;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAA6C,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,EACvI;YACI,MAAM,EAAE,eAAe;YACvB,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,0BAA0B,CAAC,iBAAuD;QACrF,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;QACpE,MAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,eAAe,GAAG,IAAI,UAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAC9D,IAAI,mBAAmB,KAAK,SAAS,IAAI,mBAAmB,KAAK,IAAI,EAAE;YACrE,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;SACnD;QACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;YACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;SAC/B;QACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;YACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;SAC/B;QACD,MAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;QAC/C,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,oCAAoC,WAAW,GAAG,IAAI,WAAW,EAAE,GAAG,EAAE,EAAE,CAAC;KACnH;IAiCM,8BAA8B,CAAC,iBAA8D,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC3M,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;QAEpE,IAAI,eAAe,GAAG,IAAI,UAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAC9D,IAAI,mBAAmB,KAAK,SAAS,IAAI,mBAAmB,KAAK,IAAI,EAAE;YACrE,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;SACnD;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAqD,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,iEAAiE,EAC1K;YACI,MAAM,EAAE,eAAe;YACvB,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,iCAAiC,CAAC,iBAA8D;QACnG,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;QACpE,IAAI,eAAe,GAAG,IAAI,UAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAC9D,IAAI,mBAAmB,KAAK,SAAS,IAAI,mBAAmB,KAAK,IAAI,EAAE;YACrE,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;SACnD;QACD,MAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;QAC/C,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,kEAAkE,WAAW,GAAG,IAAI,WAAW,EAAE,GAAG,EAAE,EAAE,CAAC;KACjJ;IA6BM,qBAAqB,CAAC,iBAAqD,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QACzL,MAAM,8CAA8C,GAAG,iBAAiB,CAAC,+CAA+C,CAAC,CAAC;QAE1H,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAID,MAAM,QAAQ,GAAa;YACvB,kBAAkB;SACrB,CAAC;QACF,MAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,EAC9F,8CAA8C,EAC9C;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,wBAAwB,CAAC,iBAAqD;QACjF,MAAM,8CAA8C,GAAG,iBAAiB,CAAC,+CAA+C,CAAC,CAAC;QAC1H,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,CAAC;KAC5E;IA6BM,gCAAgC,CAAC,iBAAgE,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC/M,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,4FAA4F,CAAC,CAAC;SACjH;QACD,MAAM,4CAA4C,GAAG,iBAAiB,CAAC,6CAA6C,CAAC,CAAC;QACtH,IAAI,4CAA4C,KAAK,IAAI,IAAI,4CAA4C,KAAK,SAAS,EAAE;YACrH,MAAM,IAAI,KAAK,CAAC,qIAAqI,CAAC,CAAC;SAC1J;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAID,MAAM,QAAQ,GAAa;YACvB,kBAAkB;SACrB,CAAC;QACF,MAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,qCAAqC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,YAAY,EAC1I,4CAA4C,EAC5C;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,mCAAmC,CAAC,iBAAgE;QACvG,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,4FAA4F,CAAC,CAAC;SACjH;QACD,MAAM,4CAA4C,GAAG,iBAAiB,CAAC,6CAA6C,CAAC,CAAC;QACtH,IAAI,4CAA4C,KAAK,IAAI,IAAI,4CAA4C,KAAK,SAAS,EAAE;YACrH,MAAM,IAAI,KAAK,CAAC,qIAAqI,CAAC,CAAC;SAC1J;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,qCAAqC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;KACzH;IA6BM,4BAA4B,CAAC,iBAA4D,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QACvM,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;SAC7G;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA2C,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,qCAAqC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EACrK;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,+BAA+B,CAAC,iBAA4D;QAC/F,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;SAC7G;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,qCAAqC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;KAC/G;;0HA3dQ,4BAA4B,4CAO6B,kBAAkB;8HAP3E,4BAA4B,cAF3B,MAAM;4FAEP,4BAA4B;kBAHxC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAQkD,QAAQ;;0BAAI,MAAM;2BAAC,kBAAkB;;0BAAqB,QAAQ;;;MCrExG,gEAAgE,GAAa,WAAW,CAAC,CAAC;QAC/F,UAAU,EAAE,mCAAmC;QAC/C,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,sBAAsB,EAAG,CAAC;iBAC3B;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,sBAAsB,EAAG,CAAC;iBAC3B;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,uEAAuE,GAAa,WAAW,CAAC,CAAC;QACtG,UAAU,EAAE,iEAAiE;QAC7E,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,6BAA6B,EAAG,CAAE;4BAChC,UAAU,EAAG,UAAU;4BACvB,UAAU,EAAG,SAAS;4BACtB,QAAQ,EAAG,QAAQ;4BACnB,kBAAkB,EAAG,CAAE;oCACrB,IAAI,EAAG,sCAAsC;oCAC7C,UAAU,EAAG,sCAAsC;oCACnD,MAAM,EAAG,cAAc;oCACvB,aAAa,EAAG,6CAA6C;iCAC9D,CAAE;4BACH,2BAA2B,EAAG,CAAE;oCAC9B,YAAY,EAAG,CAAE;4CACf,IAAI,EAAG,kCAAkC;4CACzC,MAAM,EAAG,iBAAiB;4CAC1B,SAAS,EAAG,KAAK;yCAClB,EAAE;4CACD,IAAI,EAAG,kCAAkC;4CACzC,MAAM,EAAG,cAAc;4CACvB,SAAS,EAAG,KAAK;yCAClB,CAAE;oCACH,kBAAkB,EAAG,CAAE;4CACrB,IAAI,EAAG,sCAAsC;4CAC7C,UAAU,EAAG,sCAAsC;4CACnD,MAAM,EAAG,eAAe;4CACxB,aAAa,EAAG,sDAAsD;4CACtE,YAAY,EAAG;gDACb,QAAQ,EAAG,QAAQ;gDACnB,cAAc,EAAG,KAAK;6CACvB;yCACF,EAAE;4CACD,IAAI,EAAG,sCAAsC;4CAC7C,UAAU,EAAG,sCAAsC;4CACnD,MAAM,EAAG,gBAAgB;4CACzB,aAAa,EAAG,wEAAwE;4CACxF,YAAY,EAAG;gDACb,QAAQ,EAAG,QAAQ;gDACnB,cAAc,EAAG,KAAK;6CACvB;yCACF,CAAE;iCACJ,EAAE;oCACD,YAAY,EAAG,CAAE;4CACf,IAAI,EAAG,kCAAkC;4CACzC,MAAM,EAAG,cAAc;4CACvB,SAAS,EAAG,KAAK;yCAClB,CAAE;oCACH,kBAAkB,EAAG,CAAE;4CACrB,IAAI,EAAG,sCAAsC;4CAC7C,UAAU,EAAG,sCAAsC;4CACnD,MAAM,EAAG,eAAe;4CACxB,aAAa,EAAG,sDAAsD;yCACvE,CAAE;iCACJ,CAAE;yBACJ,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,8DAA8D,GAAa,WAAW,CAAC,CAAC;QAC7F,UAAU,EAAE,mCAAmC;QAC/C,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,kBAAkB;oBAC9B,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kBAAkB;4BAC9B,KAAK,EAAG,6BAA6B;4BACrC,SAAS,EAAG;gCACV,WAAW,EAAG,sCAAsC;6BACrD;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,kCAAkC;oBAC9C,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kCAAkC;4BAC9C,KAAK,EAAG,4CAA4C;4BACpD,SAAS,EAAG;gCACV,WAAW,EAAG,sCAAsC;gCACpD,sBAAsB,EAAG,kCAAkC;gCAC3D,mBAAmB,EAAG,SAAS;6BAChC;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,iDAAiD;oBAC7D,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,iDAAiD;4BAC7D,KAAK,EAAG,+CAA+C;4BACvD,SAAS,EAAG;gCACV,WAAW,EAAG,sCAAsC;gCACpD,sBAAsB,EAAG,kCAAkC;gCAC3D,mBAAmB,EAAG,SAAS;6BAChC;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sCAAsC;4BAClD,KAAK,EAAG,2CAA2C;4BACnD,SAAS,EAAG;gCACV,QAAQ,EAAG,KAAK;6BACjB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,yEAAyE,GAAa,WAAW,CAAC,CAAC;QACxG,UAAU,EAAE,kDAAkD;QAC9D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,qEAAqE,GAAa,WAAW,CAAC,CAAC;QACpG,UAAU,EAAE,wCAAwC;QACpD,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,oBAAoB,EAAG,sCAAsC;oBAC7D,sBAAsB,EAAG,wBAAwB;oBACjD,6BAA6B,EAAG,+BAA+B;oBAC/D,UAAU,EAAG,SAAS;oBACtB,UAAU,EAAG,UAAU;oBACvB,QAAQ,EAAG,QAAQ;oBACnB,kBAAkB,EAAG,CAAE;4BACrB,IAAI,EAAG,sCAAsC;4BAC7C,UAAU,EAAG,sCAAsC;4BACnD,MAAM,EAAG,eAAe;4BACxB,aAAa,EAAG,sDAAsD;4BACtE,YAAY,EAAG;gCACb,QAAQ,EAAG,QAAQ;gCACnB,cAAc,EAAG,KAAK;6BACvB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,UAAU,EAAG,sCAAsC;4BACnD,MAAM,EAAG,gBAAgB;4BACzB,aAAa,EAAG,wEAAwE;4BACxF,YAAY,EAAG;gCACb,QAAQ,EAAG,QAAQ;gCACnB,cAAc,EAAG,KAAK;6BACvB;yBACF,CAAE;oBACH,2BAA2B,EAAG,CAAE;4BAC9B,YAAY,EAAG,CAAE;oCACf,IAAI,EAAG,kCAAkC;oCACzC,MAAM,EAAG,iBAAiB;oCAC1B,SAAS,EAAG,KAAK;iCAClB,EAAE;oCACD,IAAI,EAAG,kCAAkC;oCACzC,MAAM,EAAG,cAAc;oCACvB,SAAS,EAAG,KAAK;iCAClB,CAAE;4BACH,kBAAkB,EAAG,CAAE;oCACrB,IAAI,EAAG,sCAAsC;oCAC7C,UAAU,EAAG,sCAAsC;oCACnD,MAAM,EAAG,eAAe;oCACxB,aAAa,EAAG,sDAAsD;oCACtE,YAAY,EAAG;wCACb,QAAQ,EAAG,QAAQ;wCACnB,cAAc,EAAG,KAAK;qCACvB;iCACF,EAAE;oCACD,IAAI,EAAG,sCAAsC;oCAC7C,UAAU,EAAG,sCAAsC;oCACnD,MAAM,EAAG,gBAAgB;oCACzB,aAAa,EAAG,wEAAwE;oCACxF,YAAY,EAAG;wCACb,QAAQ,EAAG,QAAQ;wCACnB,cAAc,EAAG,KAAK;qCACvB;iCACF,CAAE;yBACJ,EAAE;4BACD,YAAY,EAAG,CAAE;oCACf,IAAI,EAAG,kCAAkC;oCACzC,MAAM,EAAG,cAAc;oCACvB,SAAS,EAAG,KAAK;iCAClB,CAAE;4BACH,kBAAkB,EAAG,CAAE;oCACrB,IAAI,EAAG,sCAAsC;oCAC7C,UAAU,EAAG,sCAAsC;oCACnD,MAAM,EAAG,eAAe;oCACxB,aAAa,EAAG,sDAAsD;iCACvE,CAAE;yBACJ,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAES,yCAAyC,GAAa,WAAW,CAC1E;IACA;QACI,UAAU,EAAE,mCAAmC;QAC/C,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,sBAAsB,EAAG,CAAC;iBAC3B;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,sBAAsB,EAAG,CAAC;iBAC3B;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,iEAAiE;QAC7E,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,6BAA6B,EAAG,CAAE;4BAChC,UAAU,EAAG,UAAU;4BACvB,UAAU,EAAG,SAAS;4BACtB,QAAQ,EAAG,QAAQ;4BACnB,kBAAkB,EAAG,CAAE;oCACrB,IAAI,EAAG,sCAAsC;oCAC7C,UAAU,EAAG,sCAAsC;oCACnD,MAAM,EAAG,cAAc;oCACvB,aAAa,EAAG,6CAA6C;iCAC9D,CAAE;4BACH,2BAA2B,EAAG,CAAE;oCAC9B,YAAY,EAAG,CAAE;4CACf,IAAI,EAAG,kCAAkC;4CACzC,MAAM,EAAG,iBAAiB;4CAC1B,SAAS,EAAG,KAAK;yCAClB,EAAE;4CACD,IAAI,EAAG,kCAAkC;4CACzC,MAAM,EAAG,cAAc;4CACvB,SAAS,EAAG,KAAK;yCAClB,CAAE;oCACH,kBAAkB,EAAG,CAAE;4CACrB,IAAI,EAAG,sCAAsC;4CAC7C,UAAU,EAAG,sCAAsC;4CACnD,MAAM,EAAG,eAAe;4CACxB,aAAa,EAAG,sDAAsD;4CACtE,YAAY,EAAG;gDACb,QAAQ,EAAG,QAAQ;gDACnB,cAAc,EAAG,KAAK;6CACvB;yCACF,EAAE;4CACD,IAAI,EAAG,sCAAsC;4CAC7C,UAAU,EAAG,sCAAsC;4CACnD,MAAM,EAAG,gBAAgB;4CACzB,aAAa,EAAG,wEAAwE;4CACxF,YAAY,EAAG;gDACb,QAAQ,EAAG,QAAQ;gDACnB,cAAc,EAAG,KAAK;6CACvB;yCACF,CAAE;iCACJ,EAAE;oCACD,YAAY,EAAG,CAAE;4CACf,IAAI,EAAG,kCAAkC;4CACzC,MAAM,EAAG,cAAc;4CACvB,SAAS,EAAG,KAAK;yCAClB,CAAE;oCACH,kBAAkB,EAAG,CAAE;4CACrB,IAAI,EAAG,sCAAsC;4CAC7C,UAAU,EAAG,sCAAsC;4CACnD,MAAM,EAAG,eAAe;4CACxB,aAAa,EAAG,sDAAsD;yCACvE,CAAE;iCACJ,CAAE;yBACJ,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,mCAAmC;QAC/C,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,kBAAkB;oBAC9B,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kBAAkB;4BAC9B,KAAK,EAAG,6BAA6B;4BACrC,SAAS,EAAG;gCACV,WAAW,EAAG,sCAAsC;6BACrD;yBACF,CAAE;iBACJ;aACY;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,kCAAkC;oBAC9C,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kCAAkC;4BAC9C,KAAK,EAAG,4CAA4C;4BACpD,SAAS,EAAG;gCACV,WAAW,EAAG,sCAAsC;gCACpD,sBAAsB,EAAG,kCAAkC;gCAC3D,mBAAmB,EAAG,SAAS;6BAChC;yBACF,CAAE;iBACJ;aACY;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,iDAAiD;oBAC7D,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,iDAAiD;4BAC7D,KAAK,EAAG,+CAA+C;4BACvD,SAAS,EAAG;gCACV,WAAW,EAAG,sCAAsC;gCACpD,sBAAsB,EAAG,kCAAkC;gCAC3D,mBAAmB,EAAG,SAAS;6BAChC;yBACF,CAAE;iBACJ;aACY;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sCAAsC;4BAClD,KAAK,EAAG,2CAA2C;4BACnD,SAAS,EAAG;gCACV,QAAQ,EAAG,KAAK;6BACjB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,kDAAkD;QAC9D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,wCAAwC;QACpD,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,oBAAoB,EAAG,sCAAsC;oBAC7D,sBAAsB,EAAG,wBAAwB;oBACjD,6BAA6B,EAAG,+BAA+B;oBAC/D,UAAU,EAAG,SAAS;oBACtB,UAAU,EAAG,UAAU;oBACvB,QAAQ,EAAG,QAAQ;oBACnB,kBAAkB,EAAG,CAAE;4BACrB,IAAI,EAAG,sCAAsC;4BAC7C,UAAU,EAAG,sCAAsC;4BACnD,MAAM,EAAG,eAAe;4BACxB,aAAa,EAAG,sDAAsD;4BACtE,YAAY,EAAG;gCACb,QAAQ,EAAG,QAAQ;gCACnB,cAAc,EAAG,KAAK;6BACvB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,UAAU,EAAG,sCAAsC;4BACnD,MAAM,EAAG,gBAAgB;4BACzB,aAAa,EAAG,wEAAwE;4BACxF,YAAY,EAAG;gCACb,QAAQ,EAAG,QAAQ;gCACnB,cAAc,EAAG,KAAK;6BACvB;yBACF,CAAE;oBACH,2BAA2B,EAAG,CAAE;4BAC9B,YAAY,EAAG,CAAE;oCACf,IAAI,EAAG,kCAAkC;oCACzC,MAAM,EAAG,iBAAiB;oCAC1B,SAAS,EAAG,KAAK;iCAClB,EAAE;oCACD,IAAI,EAAG,kCAAkC;oCACzC,MAAM,EAAG,cAAc;oCACvB,SAAS,EAAG,KAAK;iCAClB,CAAE;4BACH,kBAAkB,EAAG,CAAE;oCACrB,IAAI,EAAG,sCAAsC;oCAC7C,UAAU,EAAG,sCAAsC;oCACnD,MAAM,EAAG,eAAe;oCACxB,aAAa,EAAG,sDAAsD;oCACtE,YAAY,EAAG;wCACb,QAAQ,EAAG,QAAQ;wCACnB,cAAc,EAAG,KAAK;qCACvB;iCACF,EAAE;oCACD,IAAI,EAAG,sCAAsC;oCAC7C,UAAU,EAAG,sCAAsC;oCACnD,MAAM,EAAG,gBAAgB;oCACzB,aAAa,EAAG,wEAAwE;oCACxF,YAAY,EAAG;wCACb,QAAQ,EAAG,QAAQ;wCACnB,cAAc,EAAG,KAAK;qCACvB;iCACF,CAAE;yBACJ,EAAE;4BACD,YAAY,EAAG,CAAE;oCACf,IAAI,EAAG,kCAAkC;oCACzC,MAAM,EAAG,cAAc;oCACvB,SAAS,EAAG,KAAK;iCAClB,CAAE;4BACH,kBAAkB,EAAG,CAAE;oCACrB,IAAI,EAAG,sCAAsC;oCAC7C,UAAU,EAAG,sCAAsC;oCACnD,MAAM,EAAG,eAAe;oCACxB,aAAa,EAAG,sDAAsD;iCACvE,CAAE;yBACJ,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;CACA;;;;"}