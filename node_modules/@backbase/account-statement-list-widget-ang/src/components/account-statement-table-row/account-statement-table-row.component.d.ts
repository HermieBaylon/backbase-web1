import { TemplateRef } from '@angular/core';
import { AccountStatementDataService, MimeTypeExtensions } from '@backbase/account-statement-common-ang';
import { AccountStatement, AccountStatementDocument } from '@backbase/data-ang/account-statements';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { NotificationService } from '@backbase/ui-ang/notification';
import * as i0 from "@angular/core";
export declare class AccountStatementTableRowComponent {
    private readonly dataService;
    private readonly notificationsService;
    private static _id;
    /**
     * Whether Description content is presented for specific row in the account statement list table
     */
    showDescription: boolean | null;
    /**
     * Whether Category content is presented for specific row in the account statement list table
     */
    showCategory: boolean | null;
    /**
     * Time of displaying notification after download failure in milliseconds.
     */
    notificationDismissTimeProperty: number;
    downloadFailureNotificationHeader: TemplateRef<any>;
    /**
     * Table row id.
     * Used in creating unique ids for preview and download text for a11y
     */
    readonly accountStatementTableRowId: number;
    readonly mimeTypeExtensions: MimeTypeExtensions;
    /**
     * Setter for each account statement item that will be presented in table row
     */
    set item(value: AccountStatement | undefined);
    get item(): AccountStatement | undefined;
    documentPDF: AccountStatementDocument | undefined;
    documentPDFhref: string;
    readonly hostRef: this;
    private itemValue;
    constructor(dataService: AccountStatementDataService, notificationsService: NotificationService);
    onDownloadFailure(): void;
    private getDocumentLink;
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountStatementTableRowComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AccountStatementTableRowComponent, "tr[bb-account-statement-table-row]", never, { "showDescription": "showDescription"; "showCategory": "showCategory"; "notificationDismissTimeProperty": "notificationDismissTimeProperty"; "item": "item"; }, {}, never, never>;
}
export declare class AccountStatementTableRowCustomizableDirective extends BbTemplate<AccountStatementTableRowComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountStatementTableRowCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AccountStatementTableRowCustomizableDirective, "[bbAccountStatementTableRowCustomizable]", never, {}, {}, never>;
}
export declare class AccountStatementDownloadFailureNotificationHeaderCustomizableDirective extends BbTemplate<AccountStatementTableRowComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountStatementDownloadFailureNotificationHeaderCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AccountStatementDownloadFailureNotificationHeaderCustomizableDirective, "[bbAccountStatementDownloadFailureNotificationHeaderCustomizable]", never, {}, {}, never>;
}
