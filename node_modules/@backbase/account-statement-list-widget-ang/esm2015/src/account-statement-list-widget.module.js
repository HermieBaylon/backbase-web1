import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { AccountStatementCommonModule } from '@backbase/account-statement-common-ang';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';
import { AccountStatementListCustomizableDirective, AccountStatementListWidgetComponent, } from './account-statement-list-widget.component';
import { AccountStatementFilterFormComponent, AccountStatementFilterFormCustomizableDirective, } from './components/account-statement-filter-form/account-statement-filter-form.component';
import { AccountStatementDownloadFailureNotificationHeaderCustomizableDirective, AccountStatementTableRowComponent, AccountStatementTableRowCustomizableDirective, } from './components/account-statement-table-row/account-statement-table-row.component';
import { AccountStatementTableComponent, AccountStatementTableCustomizableDirective, } from './components/account-statement-table/account-statement-table.component';
import { ButtonModule } from '@backbase/ui-ang/button';
import { CollapsibleModule } from '@backbase/ui-ang/collapsible';
import { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';
import { DropdownMultiSelectModule } from '@backbase/ui-ang/dropdown-multi-select';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import { IconModule } from '@backbase/ui-ang/icon';
import { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';
import { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';
import { ListMultipleSelectModule } from '@backbase/ui-ang/list-multiple-select';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';
import { ProductSelectorModule } from '@backbase/ui-ang/product-selector';
import { TableModule } from '@backbase/ui-ang/table';
import { NotificationModule } from '@backbase/ui-ang/notification';
import { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
const components = [
    AccountStatementListWidgetComponent,
    AccountStatementFilterFormComponent,
    AccountStatementTableComponent,
    AccountStatementTableRowComponent,
];
const directives = [
    AccountStatementListCustomizableDirective,
    AccountStatementFilterFormCustomizableDirective,
    AccountStatementTableCustomizableDirective,
    AccountStatementTableRowCustomizableDirective,
    AccountStatementDownloadFailureNotificationHeaderCustomizableDirective,
];
const uiModules = [
    NgbDropdownModule,
    ButtonModule,
    CollapsibleModule,
    DropdownMenuModule,
    EmptyStateModule,
    IconModule,
    InputDatepickerModule,
    InputValidationMessageModule,
    ListMultipleSelectModule,
    LoadingIndicatorModule,
    ProductItemBasicAccountModule,
    ProductSelectorModule,
    DropdownMultiSelectModule,
    TableModule,
    NotificationModule,
    BbDatePipeModule,
];
export class AccountStatementListWidgetModule {
}
AccountStatementListWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementListWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AccountStatementListWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementListWidgetModule, declarations: [AccountStatementListWidgetComponent,
        AccountStatementFilterFormComponent,
        AccountStatementTableComponent,
        AccountStatementTableRowComponent, AccountStatementListCustomizableDirective,
        AccountStatementFilterFormCustomizableDirective,
        AccountStatementTableCustomizableDirective,
        AccountStatementTableRowCustomizableDirective,
        AccountStatementDownloadFailureNotificationHeaderCustomizableDirective], imports: [CommonModule,
        FormsModule,
        ReactiveFormsModule,
        AccountStatementCommonModule, i1.BackbaseCoreModule, NgbDropdownModule,
        ButtonModule,
        CollapsibleModule,
        DropdownMenuModule,
        EmptyStateModule,
        IconModule,
        InputDatepickerModule,
        InputValidationMessageModule,
        ListMultipleSelectModule,
        LoadingIndicatorModule,
        ProductItemBasicAccountModule,
        ProductSelectorModule,
        DropdownMultiSelectModule,
        TableModule,
        NotificationModule,
        BbDatePipeModule], exports: [AccountStatementCommonModule, AccountStatementListWidgetComponent,
        AccountStatementFilterFormComponent,
        AccountStatementTableComponent,
        AccountStatementTableRowComponent, AccountStatementListCustomizableDirective,
        AccountStatementFilterFormCustomizableDirective,
        AccountStatementTableCustomizableDirective,
        AccountStatementTableRowCustomizableDirective,
        AccountStatementDownloadFailureNotificationHeaderCustomizableDirective, NgbDropdownModule,
        ButtonModule,
        CollapsibleModule,
        DropdownMenuModule,
        EmptyStateModule,
        IconModule,
        InputDatepickerModule,
        InputValidationMessageModule,
        ListMultipleSelectModule,
        LoadingIndicatorModule,
        ProductItemBasicAccountModule,
        ProductSelectorModule,
        DropdownMultiSelectModule,
        TableModule,
        NotificationModule,
        BbDatePipeModule] });
AccountStatementListWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementListWidgetModule, imports: [[
            CommonModule,
            FormsModule,
            ReactiveFormsModule,
            AccountStatementCommonModule,
            BackbaseCoreModule.withConfig({
                // eslint-disable-next-line @typescript-eslint/naming-convention
                classMap: { AccountStatementListWidgetComponent },
            }),
            ...uiModules,
        ], AccountStatementCommonModule, NgbDropdownModule,
        ButtonModule,
        CollapsibleModule,
        DropdownMenuModule,
        EmptyStateModule,
        IconModule,
        InputDatepickerModule,
        InputValidationMessageModule,
        ListMultipleSelectModule,
        LoadingIndicatorModule,
        ProductItemBasicAccountModule,
        ProductSelectorModule,
        DropdownMultiSelectModule,
        TableModule,
        NotificationModule,
        BbDatePipeModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementListWidgetModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...components, ...directives],
                    imports: [
                        CommonModule,
                        FormsModule,
                        ReactiveFormsModule,
                        AccountStatementCommonModule,
                        BackbaseCoreModule.withConfig({
                            // eslint-disable-next-line @typescript-eslint/naming-convention
                            classMap: { AccountStatementListWidgetComponent },
                        }),
                        ...uiModules,
                    ],
                    exports: [AccountStatementCommonModule, ...components, ...directives, ...uiModules],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,