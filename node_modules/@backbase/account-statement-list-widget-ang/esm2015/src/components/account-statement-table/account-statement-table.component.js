import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "../account-statement-table-row/account-statement-table-row.component";
import * as i2 from "@backbase/ui-ang/loading-indicator";
import * as i3 from "@backbase/ui-ang/table";
import * as i4 from "@angular/common";
export class AccountStatementTableComponent {
    constructor() {
        /**
         * Array of account statements
         */
        this.accountStatements = [];
        /**
         * Whether Description column is presented in the account statement list table
         *
         * @default true
         */
        this.showDescription = true;
        /**
         * Whether Category column is presented in the account statement list table
         *
         * @default true
         */
        this.showCategory = true;
        this.loading = false;
        /**
         * Time after notification for download failure will be dismissed.
         */
        this.notificationDismissTimeProperty = 0;
        /**
         * Emit sorting parameters change event
         */
        this.sortingParamsChange = new EventEmitter();
        this.hostRef = this;
    }
    onSort(params) {
        this.sortingParamsChange.emit({
            direction: params.direction.toUpperCase(),
            orderBy: params.column,
        });
    }
}
AccountStatementTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementTableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AccountStatementTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementTableComponent, selector: "bb-account-statement-table", inputs: { accountStatements: "accountStatements", showDescription: "showDescription", showCategory: "showCategory", sortingParams: "sortingParams", loading: "loading", notificationDismissTimeProperty: "notificationDismissTimeProperty" }, outputs: { sortingParamsChange: "sortingParamsChange" }, ngImport: i0, template: "<ng-container bbAccountStatementTableCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbAccountStatementTableCustomizable let-host>\n  <div class=\"table-responsive\">\n    <table\n      class=\"table\"\n      aria-label=\"Account statements table\"\n      i18n-aria-label=\"Aria label for account statements table@@accountStatement.table.aria-label\"\n      [bbTable]=\"accountStatements\"\n      (sort)=\"host.onSort($event)\"\n      bbTableFocus\n    >\n      <colgroup>\n        <col width=\"20%\" />\n        <col width=\"20%\" />\n        <col width=\"40%\" />\n        <col width=\"10%\" />\n        <col width=\"10%\" />\n      </colgroup>\n      <thead>\n        <tr>\n          <th\n            bbSortable=\"date\"\n            [direction]=\"host.sortingParams?.orderBy === 'date' ? (host.sortingParams?.direction | lowercase) : ''\"\n            scope=\"col\"\n            data-role=\"header-date\"\n            [attr.colspan]=\"host.showCategory || host.showDescription ? null : 3\"\n          >\n            <span\n              class=\"th-content\"\n              i18n=\"Book date|Account statement table head title@@accountStatement.table.head.date.title\"\n              data-role=\"book-date-thead\"\n              >Book date</span\n            >\n          </th>\n          <th\n            *ngIf=\"host.showCategory\"\n            bbSortable=\"category\"\n            [direction]=\"host.sortingParams?.orderBy === 'category' ? (host.sortingParams?.direction | lowercase) : ''\"\n            scope=\"col\"\n            data-role=\"header-category\"\n            [attr.colspan]=\"host.showDescription ? null : 2\"\n          >\n            <span\n              class=\"th-content\"\n              i18n=\"\u0421ategory|Account statement table head title@@accountStatement.table.head.category.title\"\n              >Category</span\n            >\n          </th>\n          <th\n            *ngIf=\"host.showDescription\"\n            bbSortable=\"description\"\n            [attr.colspan]=\"host.showCategory ? null : 2\"\n            [direction]=\"\n              host.sortingParams?.orderBy === 'description' ? (host.sortingParams?.direction | lowercase) : ''\n            \"\n            scope=\"col\"\n            data-role=\"header-description\"\n          >\n            <span\n              class=\"th-content\"\n              i18n=\"Description|Account statement table head title@@accountStatement.table.head.description.title\"\n              >Description</span\n            >\n          </th>\n          <th scope=\"col\">\n            <span\n              class=\"th-content\"\n              i18n=\"Preview|Account statement table head title@@account-statement.table.head.preview.title\"\n              data-role=\"preview-thead\"\n              >Preview</span\n            >\n          </th>\n          <th scope=\"col\">\n            <span\n              class=\"th-content\"\n              i18n=\"Download|Account statement table head title@@account-statement.table.head.download.title\"\n              data-role=\"download-thead\"\n              >Download</span\n            >\n          </th>\n        </tr>\n      </thead>\n      <tbody *ngIf=\"!host.loading\">\n        <tr\n          bb-account-statement-table-row\n          [bbRow]=\"accountStatement\"\n          [showCategory]=\"host.showCategory\"\n          [showDescription]=\"host.showDescription\"\n          *ngFor=\"let accountStatement of host.accountStatements\"\n          [item]=\"accountStatement\"\n          [notificationDismissTimeProperty]=\"host.notificationDismissTimeProperty\"\n        ></tr>\n      </tbody>\n    </table>\n\n    <bb-loading-indicator-ui *ngIf=\"host.loading\" loaderSize=\"lg\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.AccountStatementTableRowComponent; }), selector: "tr[bb-account-statement-table-row]", inputs: ["showDescription", "showCategory", "notificationDismissTimeProperty", "item"] }, { type: i0.forwardRef(function () { return i2.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i0.forwardRef(function () { return AccountStatementTableCustomizableDirective; }), selector: "[bbAccountStatementTableCustomizable]" }, { type: i0.forwardRef(function () { return i3.TableDirective; }), selector: "table[bbTable]", inputs: ["bbTable"], outputs: ["selectRow", "rowClick", "sort"] }, { type: i0.forwardRef(function () { return i3.TableFocusDirective; }), selector: "[bbTableFocus]" }, { type: i0.forwardRef(function () { return i3.TableSortableDirective; }), selector: "th[bbSortable]", inputs: ["bbSortable", "direction"], outputs: ["sort"] }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i4.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0.forwardRef(function () { return i3.TableRowDirective; }), selector: "tr[bbRow]", inputs: ["bbRow"] }], pipes: { "lowercase": i0.forwardRef(function () { return i4.LowerCasePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementTableComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-statement-table',
                    templateUrl: './account-statement-table.component.html',
                }]
        }], propDecorators: { accountStatements: [{
                type: Input
            }], showDescription: [{
                type: Input
            }], showCategory: [{
                type: Input
            }], sortingParams: [{
                type: Input
            }], loading: [{
                type: Input
            }], notificationDismissTimeProperty: [{
                type: Input
            }], sortingParamsChange: [{
                type: Output
            }] } });
export class AccountStatementTableCustomizableDirective extends BbTemplate {
}
AccountStatementTableCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementTableCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
AccountStatementTableCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementTableCustomizableDirective, selector: "[bbAccountStatementTableCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementTableCustomizableDirective, decorators: [{
            type: Directive,
            args: [{ selector: '[bbAccountStatementTableCustomizable]' }]
        }] });
//# sourceMappingURL=data:application/json;base64,