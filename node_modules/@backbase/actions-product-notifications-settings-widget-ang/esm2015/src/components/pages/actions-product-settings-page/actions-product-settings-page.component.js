import { Component, Directive, Input, ViewChild } from '@angular/core';
import { getPropertyValue, SpecificationIds, } from '@backbase/actions-common-ang';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { BehaviorSubject, combineLatest, of } from 'rxjs';
import { catchError, first, map, mapTo, publishReplay, refCount, startWith, switchMap, withLatestFrom, } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/actions-store-ang";
import * as i2 from "../../../services/actions-product-notifications-settings-router.service";
import * as i3 from "../../../services/actions-product-notifications-settings-data.service";
import * as i4 from "../../../services/actions-product-notifications-settings-properties.service";
import * as i5 from "../../actions-product-item-card/actions-product-item-card.component";
import * as i6 from "@backbase/actions-common-ang";
import * as i7 from "@backbase/ui-ang/loading-indicator";
import * as i8 from "@backbase/ui-ang/empty-state";
import * as i9 from "@angular/common";
export class ActionsProductSettingsPageComponent {
    constructor(store, routerService, widgetDataService, widgetPropertiesService) {
        this.store = store;
        this.routerService = routerService;
        this.widgetDataService = widgetDataService;
        this.widgetPropertiesService = widgetPropertiesService;
        this.notificationDismissTime$$ = new BehaviorSubject(undefined);
        this.specificationIDs$$ = new BehaviorSubject(undefined);
        /**
         * Stream of Specifications with action recipe.
         */
        this.specificationsWithActionRecipe$ = this.store.specificationsWithActionRecipe$;
        this.hasAccountLoadingError = new BehaviorSubject(false);
        /**
         * Stream of loading errors.
         */
        this.loadingError$ = combineLatest([
            this.store.actionRecipesError$,
            this.store.specificationsError$,
            this.hasAccountLoadingError,
        ]).pipe(map(errors => errors.find(Boolean)));
        /**
         * Specification IDs enum.
         */
        this.specificationIds = SpecificationIds;
        this.accountId$ = this.routerService.selectedAccountId$;
        this.account$ = this.accountId$.pipe(switchMap(id => this.getAccount(id)), publishReplay(), refCount());
        this.isLoading$ = combineLatest([
            this.store.actionRecipesLoading$,
            this.store.specificationsLoading$,
            this.account$.pipe(mapTo(false), startWith(true)),
        ]).pipe(map(loadings => loadings.some(Boolean)));
    }
    /**
     * Notification dismiss time value setter.
     * Configurable via model property.
     */
    set notificationDismissTime(value) {
        this.notificationDismissTime$$.next(value);
    }
    /**
     * Specification IDs value setter.
     * Configurable via model property.
     */
    set specificationIDs(value) {
        this.specificationIDs$$.next(value);
    }
    ngOnInit() {
        const specificationIdsStream = getPropertyValue(this.specificationIDs$$, this.widgetPropertiesService.getSpecificationIDs());
        this.accountId$.pipe(first(), withLatestFrom(specificationIdsStream)).subscribe(([accountId, specificationIDs]) => {
            const specificationIDsSet = new Set(specificationIDs);
            this.store.dispatchLoadSpecifications({ specificationIds: specificationIDsSet });
            this.store.dispatchLoadActionRecipes({
                specificationIds: specificationIDsSet,
                arrangementId: accountId,
            });
        });
    }
    /**
     * Method to submit action recipe form.
     *
     * @param formValue - action recipe form value
     */
    onSubmit(formValue) {
        const notificationDismissTime$ = getPropertyValue(this.notificationDismissTime$$, this.widgetPropertiesService.getNotificationDismissTimeProperty());
        combineLatest([this.accountId$, notificationDismissTime$])
            .pipe(first())
            .subscribe(([arrangementId, ttl]) => {
            const errorNotification = {
                header: Object.create(this.errorNotificationHeaderTemplate),
                message: Object.create(this.errorNotificationMessageTemplate),
                modifier: 'error',
                ttl,
            };
            this.store.dispatchSaveActionRecipe({
                actionRecipe: formValue,
                arrangementId,
                warningNotification: errorNotification,
            });
        });
    }
    getAccount(id) {
        return this.widgetDataService.getAccountById(id).pipe(catchError(() => {
            this.hasAccountLoadingError.next(true);
            return of({});
        }));
    }
}
ActionsProductSettingsPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductSettingsPageComponent, deps: [{ token: i1.ActionsStoreModel }, { token: i2.ActionsProductNotificationsSettingsRouterService }, { token: i3.ActionsProductNotificationsSettingsDataService }, { token: i4.ActionsProductNotificationsSettingsPropertiesService }], target: i0.ɵɵFactoryTarget.Component });
ActionsProductSettingsPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: ActionsProductSettingsPageComponent, selector: "bb-actions-product-settings-page", inputs: { notificationDismissTime: "notificationDismissTime", specificationIDs: "specificationIDs" }, viewQueries: [{ propertyName: "errorNotificationHeaderTemplate", first: true, predicate: ["errorNotificationHeader"], descendants: true }, { propertyName: "errorNotificationMessageTemplate", first: true, predicate: ["errorNotificationMessage"], descendants: true }], ngImport: i0, template: "<ng-container\n  bbActionsProductSettingsPageCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    account: account$ | async,\n    loadingError: loadingError$ | async,\n    loading: isLoading$ | async,\n    specificationsWithAction: specificationsWithActionRecipe$ | async,\n    specificationIds: specificationIds\n  }\"\n></ng-container>\n\n<ng-template\n  bbActionsProductSettingsPageCustomizable\n  let-host\n  let-actions=\"context.actions\"\n  let-specifications=\"context.specifications\"\n  let-account=\"context.account\"\n  let-loadingError=\"context.loadingError\"\n  let-loading=\"context.loading\"\n  let-specificationsWithAction=\"context.specificationsWithAction\"\n  let-specificationIds=\"context.specificationIds\"\n>\n  <ng-container *ngIf=\"!loading; else loadingState\">\n    <ng-container *ngIf=\"!loadingError; else errorState\">\n      <bb-actions-product-item-card [account]=\"account\"></bb-actions-product-item-card>\n\n      <div class=\"bb-block bb-block--xl\">\n        <bb-actions-account-balance-recipe-form\n          *ngIf=\"specificationsWithAction[specificationIds.AccountBalance] as specificationWithAction\"\n          [account]=\"account\"\n          [specification]=\"specificationWithAction.specification\"\n          [actionRecipe]=\"specificationWithAction.actionRecipe\"\n          (submit)=\"host.onSubmit($event)\"\n        ></bb-actions-account-balance-recipe-form>\n      </div>\n\n      <div class=\"bb-block bb-block--xl\">\n        <bb-actions-transactions-recipe-form\n          *ngIf=\"specificationsWithAction[specificationIds.Transactions] as specificationWithAction\"\n          [specification]=\"specificationWithAction.specification\"\n          [actionRecipe]=\"specificationWithAction.actionRecipe\"\n          (submit)=\"host.onSubmit($event)\"\n        ></bb-actions-transactions-recipe-form>\n      </div>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #loadingState>\n    <div class=\"card\">\n      <bb-loading-indicator-ui\n        class=\"bb-state-container\"\n        loaderSize=\"lg\"\n        text=\"Loading...\"\n        i18n-text=\"Loading... text@@actions-product-settings-page.title\"\n      ></bb-loading-indicator-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <div class=\"card\">\n      <bb-empty-state-ui\n        class=\"bb-state-container\"\n        data-role=\"error-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"error-outline\"\n        title=\"Unknown Error\"\n        i18n-title=\"\n          Actions product notifications settings are not loading title@@actions-product-settings-page.error-state.title\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        i18n-subtitle=\"\n          Actions product notifications settings are not loading\n          subtitle@@actions-product-settings-page.error-state.subtitle\"\n      >\n      </bb-empty-state-ui>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #errorNotificationHeader>\n  <ng-container bbActionsProductSettingsPageErrorNotificationHeaderCustomizable [bbHostRef]=\"this\"> </ng-container>\n</ng-template>\n\n<ng-template #errorNotificationMessage>\n  <ng-container bbActionsProductSettingsPageErrorNotificationMessageCustomizable [bbHostRef]=\"this\"> </ng-container>\n</ng-template>\n\n<ng-template bbActionsProductSettingsPageErrorNotificationHeaderCustomizable>\n  <span i18n=\"Couldn't save changes@@actions-product-settings-page.error-notification.header\"\n    >Couldn't make changes</span\n  >\n</ng-template>\n\n<ng-template bbActionsProductSettingsPageErrorNotificationMessageCustomizable>\n  <div i18n=\"Please try again later@@actions-product-settings-page.error-notification.message\">\n    Please try again later\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i5.ActionsProductItemCardComponent; }), selector: "bb-actions-product-item-card", inputs: ["account"] }, { type: i0.forwardRef(function () { return i6.ӨActionsAccountBalanceRecipeFormComponent; }), selector: "bb-actions-account-balance-recipe-form" }, { type: i0.forwardRef(function () { return i6.ӨActionsTransactionsRecipeFormComponent; }), selector: "bb-actions-transactions-recipe-form" }, { type: i0.forwardRef(function () { return i7.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i0.forwardRef(function () { return i8.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i0.forwardRef(function () { return ActionsProductSettingsPageCustomizableDirective; }), selector: "[bbActionsProductSettingsPageCustomizable]" }, { type: i0.forwardRef(function () { return i9.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective; }), selector: "[bbActionsProductSettingsPageErrorNotificationHeaderCustomizable]" }, { type: i0.forwardRef(function () { return ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective; }), selector: "[bbActionsProductSettingsPageErrorNotificationMessageCustomizable]" }], pipes: { "async": i0.forwardRef(function () { return i9.AsyncPipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductSettingsPageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-actions-product-settings-page',
                    templateUrl: './actions-product-settings-page.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.ActionsStoreModel }, { type: i2.ActionsProductNotificationsSettingsRouterService }, { type: i3.ActionsProductNotificationsSettingsDataService }, { type: i4.ActionsProductNotificationsSettingsPropertiesService }]; }, propDecorators: { notificationDismissTime: [{
                type: Input
            }], specificationIDs: [{
                type: Input
            }], errorNotificationHeaderTemplate: [{
                type: ViewChild,
                args: ['errorNotificationHeader', { static: false }]
            }], errorNotificationMessageTemplate: [{
                type: ViewChild,
                args: ['errorNotificationMessage', { static: false }]
            }] } });
export class ActionsProductSettingsPageCustomizableDirective extends BbTemplate {
}
ActionsProductSettingsPageCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductSettingsPageCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ActionsProductSettingsPageCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: ActionsProductSettingsPageCustomizableDirective, selector: "[bbActionsProductSettingsPageCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductSettingsPageCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbActionsProductSettingsPageCustomizable]',
                }]
        }] });
export class ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective extends BbTemplate {
}
ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective, selector: "[bbActionsProductSettingsPageErrorNotificationHeaderCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbActionsProductSettingsPageErrorNotificationHeaderCustomizable]',
                }]
        }] });
export class ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective extends BbTemplate {
}
ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective, selector: "[bbActionsProductSettingsPageErrorNotificationMessageCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbActionsProductSettingsPageErrorNotificationMessageCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,