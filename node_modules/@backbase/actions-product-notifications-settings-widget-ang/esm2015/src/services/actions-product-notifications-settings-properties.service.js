import { Injectable } from '@angular/core';
import { ActionsBasePropertiesService } from '@backbase/actions-common-ang';
import { of } from 'rxjs';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
export const DEFAULT_SPECIFICATION_IDS = '5, 6, 13, 14';
export class ActionsProductNotificationsSettingsPropertiesService extends ActionsBasePropertiesService {
    constructor() {
        super();
    }
    /**
     * Method to get specification IDs.
     *
     * @returns specification IDs array
     */
    getSpecificationIDs() {
        return of(DEFAULT_SPECIFICATION_IDS).pipe(map(data => data.replace(/\s/g, '').split(',')));
    }
}
ActionsProductNotificationsSettingsPropertiesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductNotificationsSettingsPropertiesService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
ActionsProductNotificationsSettingsPropertiesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductNotificationsSettingsPropertiesService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsProductNotificationsSettingsPropertiesService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy1wcm9kdWN0LW5vdGlmaWNhdGlvbnMtc2V0dGluZ3MtcHJvcGVydGllcy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hY3Rpb25zLXByb2R1Y3Qtbm90aWZpY2F0aW9ucy1zZXR0aW5ncy13aWRnZXQtYW5nL3NyYy9zZXJ2aWNlcy9hY3Rpb25zLXByb2R1Y3Qtbm90aWZpY2F0aW9ucy1zZXR0aW5ncy1wcm9wZXJ0aWVzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM1RSxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFFckMsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsY0FBYyxDQUFDO0FBR3hELE1BQU0sT0FBTyxvREFBcUQsU0FBUSw0QkFBNEI7SUFDcEc7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsbUJBQW1CO1FBQ2pCLE9BQU8sRUFBRSxDQUFDLHlCQUF5QixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0YsQ0FBQzs7a0pBWlUsb0RBQW9EO3NKQUFwRCxvREFBb0Q7NEZBQXBELG9EQUFvRDtrQkFEaEUsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGlvbnNCYXNlUHJvcGVydGllc1NlcnZpY2UgfSBmcm9tICdAYmFja2Jhc2UvYWN0aW9ucy1jb21tb24tYW5nJztcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1NQRUNJRklDQVRJT05fSURTID0gJzUsIDYsIDEzLCAxNCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBY3Rpb25zUHJvZHVjdE5vdGlmaWNhdGlvbnNTZXR0aW5nc1Byb3BlcnRpZXNTZXJ2aWNlIGV4dGVuZHMgQWN0aW9uc0Jhc2VQcm9wZXJ0aWVzU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICAvKipcbiAgICogTWV0aG9kIHRvIGdldCBzcGVjaWZpY2F0aW9uIElEcy5cbiAgICpcbiAgICogQHJldHVybnMgc3BlY2lmaWNhdGlvbiBJRHMgYXJyYXlcbiAgICovXG4gIGdldFNwZWNpZmljYXRpb25JRHMoKTogT2JzZXJ2YWJsZTxzdHJpbmdbXT4ge1xuICAgIHJldHVybiBvZihERUZBVUxUX1NQRUNJRklDQVRJT05fSURTKS5waXBlKG1hcChkYXRhID0+IGRhdGEucmVwbGFjZSgvXFxzL2csICcnKS5zcGxpdCgnLCcpKSk7XG4gIH1cbn1cbiJdfQ==