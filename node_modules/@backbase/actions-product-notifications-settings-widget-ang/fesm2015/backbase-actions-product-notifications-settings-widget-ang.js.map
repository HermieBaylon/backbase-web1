{"version":3,"file":"backbase-actions-product-notifications-settings-widget-ang.js","sources":["../../../../libs/actions-product-notifications-settings-widget-ang/src/models/product-kind-names.ts","../../../../libs/actions-product-notifications-settings-widget-ang/src/components/actions-product-item-card/actions-product-item-card.component.ts","../../../../libs/actions-product-notifications-settings-widget-ang/src/components/actions-product-item-card/actions-product-item-card.component.html","../../../../libs/actions-product-notifications-settings-widget-ang/src/services/actions-product-notifications-settings-router.service.ts","../../../../libs/actions-product-notifications-settings-widget-ang/src/services/actions-product-notifications-settings-data.service.ts","../../../../libs/actions-product-notifications-settings-widget-ang/src/services/actions-product-notifications-settings-properties.service.ts","../../../../libs/actions-product-notifications-settings-widget-ang/src/components/pages/actions-product-settings-page/actions-product-settings-page.component.ts","../../../../libs/actions-product-notifications-settings-widget-ang/src/components/pages/actions-product-settings-page/actions-product-settings-page.component.html","../../../../libs/actions-product-notifications-settings-widget-ang/src/components/actions-product-notifications-settings-widget/actions-product-notifications-settings-widget.component.ts","../../../../libs/actions-product-notifications-settings-widget-ang/src/actions-product-notifications-settings-widget.module.ts","../../../../libs/actions-product-notifications-settings-widget-ang/backbase-actions-product-notifications-settings-widget-ang.ts"],"sourcesContent":["export enum ProductKindNames {\n  CurrentAccount = 'Current Account',\n  SavingsAccount = 'Savings Account',\n  TermDeposit = 'Term Deposit',\n  Loan = 'Loan',\n  CreditCard = 'Credit Card',\n  DebitCard = 'Debit Card',\n  InvestmentAccount = 'Investment Account',\n}\n","import { Component, Directive, Input } from '@angular/core';\nimport { AccountArrangementItem } from '@backbase/data-ang/arrangements';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ProductKindNames } from '../../models/product-kind-names';\nimport { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { firstNonEmptyString } from '@backbase/actions-common-ang';\n\n@Component({\n  selector: 'bb-actions-product-item-card',\n  templateUrl: './actions-product-item-card.component.html',\n})\nexport class ActionsProductItemCardComponent {\n  /**\n   * Account item.\n   */\n  @Input() account?: AccountArrangementItem;\n\n  /**\n   * Product kind names enum.\n   */\n  readonly productKindNames = ProductKindNames;\n\n  /**\n   * Configuration that determines how a payment card number should be formatted.\n   */\n  readonly productNumberFormat: PaymentCardNumberFormat = {\n    length: 0,\n    maskRange: [0, 12],\n    segments: 4,\n  };\n\n  /**\n   * Method to get account number.\n   *\n   * @param args - accounts array\n   */\n  retrieveAccountNumber(...args: AccountArrangementItem[]) {\n    const account = args[0];\n    switch (account.productKindName) {\n      case ProductKindNames.TermDeposit:\n        return firstNonEmptyString(account.IBAN);\n\n      case ProductKindNames.Loan:\n      case ProductKindNames.CreditCard:\n      case ProductKindNames.InvestmentAccount:\n        return firstNonEmptyString(account.creditCardAccountNumber, account.IBAN, account.BBAN);\n\n      case ProductKindNames.DebitCard:\n        return firstNonEmptyString(account.creditCardAccountNumber);\n\n      default:\n        return firstNonEmptyString(account.IBAN, account.BBAN);\n    }\n  }\n\n  /**\n   * Method to get account alias.\n   *\n   * @param account - account data\n   * @returns account alias name\n   */\n  getAlias(account: AccountArrangementItem): string {\n    return firstNonEmptyString(\n      account.userPreferences && account.userPreferences.alias,\n      account.bankAlias,\n      account.name,\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbActionsProductItemCardCustomizableDirective]',\n})\nexport class ActionsProductItemCardCustomizableDirective extends BbTemplate<\n  ActionsProductItemCardComponent,\n  AccountArrangementItem | undefined\n> {}\n","<ng-container bbActionsProductItemCardCustomizableDirective [bbHostRef]=\"this\" [bbTemplateContext]=\"account\">\n</ng-container>\n\n<ng-template bbActionsProductItemCardCustomizableDirective let-hostRef let-account=\"context\">\n  <ng-container>\n    <div>\n      <div data-role=\"card-title\" class=\"bb-text-bold\" role=\"heading\" aria-level=\"2\">\n        {{ hostRef.getAlias(account) }}\n      </div>\n      <div\n        data-role=\"card-sub-title\"\n        class=\"text-small bb-text-support bb-block bb-block--xl\"\n        role=\"heading\"\n        aria-level=\"3\"\n      >\n        {{ hostRef.retrieveAccountNumber(account) | bbIban | paymentCardNumber: productNumberFormat }}\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\n@Injectable()\nexport class ActionsProductNotificationsSettingsRouterService {\n  private readonly productNotificationsSettingsSavedSubject: Subject<void> = new Subject();\n\n  /**\n   * Stream of settings save events that trigger navigation.\n   */\n  readonly settingsSavedNavigation$: Observable<void> = this.productNotificationsSettingsSavedSubject.asObservable();\n\n  private readonly productNotificationsSettingsCancelledSubject: Subject<void> = new Subject();\n\n  /**\n   * Stream of settings cancel events that trigger navigation.\n   */\n  readonly settingsCancelledNavigation$: Observable<void> =\n    this.productNotificationsSettingsCancelledSubject.asObservable();\n\n  /**\n   * Selected account ID setter.\n   */\n  set selectedAccountId(value: string) {\n    this.selectedAccountIdSubject.next(value);\n  }\n  private readonly selectedAccountIdSubject: ReplaySubject<string> = new ReplaySubject(1);\n\n  /**\n   * Stream with selected account IDs.\n   */\n  readonly selectedAccountId$: Observable<string> = this.selectedAccountIdSubject.asObservable();\n\n  /**\n   * Method to emit settings saved event in a stream.\n   */\n  emitSettingsSavedNavigation() {\n    this.productNotificationsSettingsSavedSubject.next();\n  }\n\n  /**\n   * Method to emit settings cancelled event in a stream.\n   */\n  emitSettingsCancelledNavigation() {\n    this.productNotificationsSettingsCancelledSubject.next();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { fromHttpResponse } from '@backbase/actions-common-ang';\nimport { AccountArrangementItem, ArrangementsHttpService } from '@backbase/data-ang/arrangements';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ActionsProductNotificationsSettingsDataService {\n  constructor(private readonly accountHttpService: ArrangementsHttpService) {}\n\n  /**\n   * Method to get account by ID.\n   *\n   * @param arrangementId - arrangement ID\n   * @returns account data\n   */\n  getAccountById(arrangementId: string): Observable<AccountArrangementItem> {\n    return this.accountHttpService.getArrangementById({ arrangementId }).pipe(map(fromHttpResponse));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActionsBasePropertiesService } from '@backbase/actions-common-ang';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const DEFAULT_SPECIFICATION_IDS = '5, 6, 13, 14';\n\n@Injectable()\nexport class ActionsProductNotificationsSettingsPropertiesService extends ActionsBasePropertiesService {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Method to get specification IDs.\n   *\n   * @returns specification IDs array\n   */\n  getSpecificationIDs(): Observable<string[]> {\n    return of(DEFAULT_SPECIFICATION_IDS).pipe(map(data => data.replace(/\\s/g, '').split(',')));\n  }\n}\n","import { Component, Directive, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport {\n  ActionRecipeFormItemValue,\n  ActionRecipeItem,\n  getPropertyValue,\n  Notification,\n  SpecificationIds,\n  SpecificationsWithAction,\n} from '@backbase/actions-common-ang';\nimport { ActionRecipeGetResponseBody, ActionRecipeSpecification } from '@backbase/data-ang/actions';\nimport { ActionsStoreModel } from '@backbase/actions-store-ang';\nimport { AccountArrangementItem } from '@backbase/data-ang/arrangements';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  first,\n  map,\n  mapTo,\n  publishReplay,\n  refCount,\n  startWith,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { ActionsProductNotificationsSettingsDataService } from '../../../services/actions-product-notifications-settings-data.service';\nimport { ActionsProductNotificationsSettingsPropertiesService } from '../../../services/actions-product-notifications-settings-properties.service';\nimport { ActionsProductNotificationsSettingsRouterService } from '../../../services/actions-product-notifications-settings-router.service';\n\n@Component({\n  selector: 'bb-actions-product-settings-page',\n  templateUrl: './actions-product-settings-page.component.html',\n})\nexport class ActionsProductSettingsPageComponent implements OnInit {\n  private readonly notificationDismissTime$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly specificationIDs$$ = new BehaviorSubject<string[] | undefined>(undefined);\n\n  /**\n   * Notification dismiss time value setter.\n   * Configurable via model property.\n   */\n  @Input() set notificationDismissTime(value: number | undefined) {\n    this.notificationDismissTime$$.next(value);\n  }\n\n  /**\n   * Specification IDs value setter.\n   * Configurable via model property.\n   */\n  @Input() set specificationIDs(value: string[] | undefined) {\n    this.specificationIDs$$.next(value);\n  }\n\n  /**\n   * Stream of account arrangement item data.\n   */\n  readonly account$: Observable<AccountArrangementItem>;\n\n  private readonly accountId$: Observable<string>;\n\n  /**\n   * Stream of Specifications with action recipe.\n   */\n  readonly specificationsWithActionRecipe$?: Observable<SpecificationsWithAction> =\n    this.store.specificationsWithActionRecipe$;\n\n  /**\n   * Stream of loading flag indicators.\n   */\n  readonly isLoading$: Observable<boolean>;\n\n  private readonly hasAccountLoadingError = new BehaviorSubject(false);\n\n  /**\n   * Stream of loading errors.\n   */\n  readonly loadingError$ = combineLatest([\n    this.store.actionRecipesError$,\n    this.store.specificationsError$,\n    this.hasAccountLoadingError,\n  ]).pipe(map(errors => errors.find(Boolean)));\n\n  /**\n   * Specification IDs enum.\n   */\n  readonly specificationIds = SpecificationIds;\n\n  /**\n   * Error notification header template.\n   */\n  @ViewChild('errorNotificationHeader', { static: false }) errorNotificationHeaderTemplate!: TemplateRef<any>;\n\n  /**\n   * Error notification message template.\n   */\n  @ViewChild('errorNotificationMessage', { static: false }) errorNotificationMessageTemplate!: TemplateRef<any>;\n\n  constructor(\n    private readonly store: ActionsStoreModel,\n    private readonly routerService: ActionsProductNotificationsSettingsRouterService,\n    private readonly widgetDataService: ActionsProductNotificationsSettingsDataService,\n    private readonly widgetPropertiesService: ActionsProductNotificationsSettingsPropertiesService,\n  ) {\n    this.accountId$ = this.routerService.selectedAccountId$;\n    this.account$ = this.accountId$.pipe(\n      switchMap(id => this.getAccount(id)),\n      publishReplay(),\n      refCount(),\n    );\n\n    this.isLoading$ = combineLatest([\n      this.store.actionRecipesLoading$,\n      this.store.specificationsLoading$,\n      this.account$.pipe(mapTo(false), startWith(true)),\n    ]).pipe(map(loadings => loadings.some(Boolean)));\n  }\n\n  ngOnInit() {\n    const specificationIdsStream = getPropertyValue(\n      this.specificationIDs$$,\n      this.widgetPropertiesService.getSpecificationIDs(),\n    );\n\n    this.accountId$.pipe(first(), withLatestFrom(specificationIdsStream)).subscribe(([accountId, specificationIDs]) => {\n      const specificationIDsSet = new Set(specificationIDs);\n      this.store.dispatchLoadSpecifications({ specificationIds: specificationIDsSet });\n      this.store.dispatchLoadActionRecipes({\n        specificationIds: specificationIDsSet,\n        arrangementId: accountId,\n      });\n    });\n  }\n\n  /**\n   * Method to submit action recipe form.\n   *\n   * @param formValue - action recipe form value\n   */\n  onSubmit(formValue: ActionRecipeFormItemValue) {\n    const notificationDismissTime$ = getPropertyValue(\n      this.notificationDismissTime$$,\n      this.widgetPropertiesService.getNotificationDismissTimeProperty(),\n    );\n\n    combineLatest([this.accountId$, notificationDismissTime$])\n      .pipe(first())\n      .subscribe(([arrangementId, ttl]) => {\n        const errorNotification: Notification = {\n          header: Object.create(this.errorNotificationHeaderTemplate),\n          message: Object.create(this.errorNotificationMessageTemplate),\n          modifier: 'error',\n          ttl,\n        };\n\n        this.store.dispatchSaveActionRecipe({\n          actionRecipe: formValue,\n          arrangementId,\n          warningNotification: errorNotification,\n        });\n      });\n  }\n\n  private getAccount(id: string): Observable<AccountArrangementItem> {\n    return this.widgetDataService.getAccountById(id).pipe(\n      catchError(() => {\n        this.hasAccountLoadingError.next(true);\n\n        return of({} as AccountArrangementItem);\n      }),\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbActionsProductSettingsPageCustomizable]',\n})\nexport class ActionsProductSettingsPageCustomizableDirective extends BbTemplate<\n  ActionsProductSettingsPageComponent,\n  {\n    actions: (ActionRecipeGetResponseBody | ActionRecipeItem)[];\n    specifications: ActionRecipeSpecification[];\n    account: AccountArrangementItem;\n    specificationsWithAction: SpecificationsWithAction;\n    specificationIds: SpecificationIds;\n  }\n> {}\n\n@Directive({\n  selector: '[bbActionsProductSettingsPageErrorNotificationHeaderCustomizable]',\n})\nexport class ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective extends BbTemplate<\n  ActionsProductSettingsPageComponent,\n  void\n> {}\n\n@Directive({\n  selector: '[bbActionsProductSettingsPageErrorNotificationMessageCustomizable]',\n})\nexport class ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective extends BbTemplate<\n  ActionsProductSettingsPageComponent,\n  void\n> {}\n","<ng-container\n  bbActionsProductSettingsPageCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    account: account$ | async,\n    loadingError: loadingError$ | async,\n    loading: isLoading$ | async,\n    specificationsWithAction: specificationsWithActionRecipe$ | async,\n    specificationIds: specificationIds\n  }\"\n></ng-container>\n\n<ng-template\n  bbActionsProductSettingsPageCustomizable\n  let-host\n  let-actions=\"context.actions\"\n  let-specifications=\"context.specifications\"\n  let-account=\"context.account\"\n  let-loadingError=\"context.loadingError\"\n  let-loading=\"context.loading\"\n  let-specificationsWithAction=\"context.specificationsWithAction\"\n  let-specificationIds=\"context.specificationIds\"\n>\n  <ng-container *ngIf=\"!loading; else loadingState\">\n    <ng-container *ngIf=\"!loadingError; else errorState\">\n      <bb-actions-product-item-card [account]=\"account\"></bb-actions-product-item-card>\n\n      <div class=\"bb-block bb-block--xl\">\n        <bb-actions-account-balance-recipe-form\n          *ngIf=\"specificationsWithAction[specificationIds.AccountBalance] as specificationWithAction\"\n          [account]=\"account\"\n          [specification]=\"specificationWithAction.specification\"\n          [actionRecipe]=\"specificationWithAction.actionRecipe\"\n          (submit)=\"host.onSubmit($event)\"\n        ></bb-actions-account-balance-recipe-form>\n      </div>\n\n      <div class=\"bb-block bb-block--xl\">\n        <bb-actions-transactions-recipe-form\n          *ngIf=\"specificationsWithAction[specificationIds.Transactions] as specificationWithAction\"\n          [specification]=\"specificationWithAction.specification\"\n          [actionRecipe]=\"specificationWithAction.actionRecipe\"\n          (submit)=\"host.onSubmit($event)\"\n        ></bb-actions-transactions-recipe-form>\n      </div>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #loadingState>\n    <div class=\"card\">\n      <bb-loading-indicator-ui\n        class=\"bb-state-container\"\n        loaderSize=\"lg\"\n        text=\"Loading...\"\n        i18n-text=\"Loading... text@@actions-product-settings-page.title\"\n      ></bb-loading-indicator-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <div class=\"card\">\n      <bb-empty-state-ui\n        class=\"bb-state-container\"\n        data-role=\"error-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"error-outline\"\n        title=\"Unknown Error\"\n        i18n-title=\"\n          Actions product notifications settings are not loading title@@actions-product-settings-page.error-state.title\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        i18n-subtitle=\"\n          Actions product notifications settings are not loading\n          subtitle@@actions-product-settings-page.error-state.subtitle\"\n      >\n      </bb-empty-state-ui>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #errorNotificationHeader>\n  <ng-container bbActionsProductSettingsPageErrorNotificationHeaderCustomizable [bbHostRef]=\"this\"> </ng-container>\n</ng-template>\n\n<ng-template #errorNotificationMessage>\n  <ng-container bbActionsProductSettingsPageErrorNotificationMessageCustomizable [bbHostRef]=\"this\"> </ng-container>\n</ng-template>\n\n<ng-template bbActionsProductSettingsPageErrorNotificationHeaderCustomizable>\n  <span i18n=\"Couldn't save changes@@actions-product-settings-page.error-notification.header\"\n    >Couldn't make changes</span\n  >\n</ng-template>\n\n<ng-template bbActionsProductSettingsPageErrorNotificationMessageCustomizable>\n  <div i18n=\"Please try again later@@actions-product-settings-page.error-notification.message\">\n    Please try again later\n  </div>\n</ng-template>\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { ActionsStoreModel } from '@backbase/actions-store-ang';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { ActionsProductNotificationsSettingsRouterService } from '../../services/actions-product-notifications-settings-router.service';\nimport { ActionsProductNotificationsSettingsDataService } from '../../services/actions-product-notifications-settings-data.service';\nimport { ActionsProductNotificationsSettingsPropertiesService } from '../../services/actions-product-notifications-settings-properties.service';\nimport { secondsToMilliseconds } from '@backbase/actions-common-ang';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-actions-product-notifications-settings-widget',\n  template:\n    '<bb-actions-product-settings-page [specificationIDs]=\"specificationIDs$ | async\" [notificationDismissTime]=\"notificationDismissTime$ | async\"></bb-actions-product-settings-page>',\n  providers: [\n    ActionsStoreModel,\n    ActionsProductNotificationsSettingsPropertiesService,\n    ActionsProductNotificationsSettingsDataService,\n    ActionsProductNotificationsSettingsRouterService,\n  ],\n})\nexport class ActionsProductNotificationsSettingsWidgetComponent implements OnDestroy {\n  private readonly specificationIDs$$ = new BehaviorSubject<string[] | undefined>(undefined);\n  readonly specificationIDs$ = this.specificationIDs$$.asObservable();\n  private readonly notificationDismissTime$$ = new BehaviorSubject<number | undefined>(undefined);\n  readonly notificationDismissTime$ = this.notificationDismissTime$$\n    .asObservable()\n    .pipe(map(seconds => (seconds ? secondsToMilliseconds(seconds) : undefined)));\n  /**\n   * Input for selected account id.\n   */\n  @Input() set selectedAccountId(value: string) {\n    this.routerService.selectedAccountId = value;\n  }\n\n  /**\n   * Specification IDs value setter.\n   * Configurable via model property.\n   */\n  @Input() set specificationIDs(value: string[] | undefined) {\n    this.specificationIDs$$.next(value);\n  }\n\n  /**\n   * Notification dismiss time value setter\n   */\n  @Input() set notificationDismissTime(value: number | undefined) {\n    this.notificationDismissTime$$.next(value);\n  }\n\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(private readonly routerService: ActionsProductNotificationsSettingsRouterService) {}\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ActionsCommonModule } from '@backbase/actions-common-ang';\nimport { ActionsStoreModule } from '@backbase/actions-store-ang';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { BbIbanPipeModule } from '@backbase/ui-ang/iban-pipe';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport { ProductItemCreditCardModule } from '@backbase/ui-ang/product-item-credit-card';\nimport { ProductItemCurrentAccountModule } from '@backbase/ui-ang/product-item-current-account';\nimport { ProductItemDebitCardModule } from '@backbase/ui-ang/product-item-debit-card';\nimport { ProductItemInvestmentAccountModule } from '@backbase/ui-ang/product-item-investment-account';\nimport { ProductItemLoanModule } from '@backbase/ui-ang/product-item-loan';\nimport { ProductItemSavingsAccountModule } from '@backbase/ui-ang/product-item-savings-account';\nimport { ProductItemTermDepositModule } from '@backbase/ui-ang/product-item-term-deposit';\n\nimport {\n  ActionsProductItemCardComponent,\n  ActionsProductItemCardCustomizableDirective,\n} from './components/actions-product-item-card/actions-product-item-card.component';\nimport { ActionsProductNotificationsSettingsWidgetComponent } from './components/actions-product-notifications-settings-widget/actions-product-notifications-settings-widget.component';\nimport {\n  ActionsProductSettingsPageComponent,\n  ActionsProductSettingsPageCustomizableDirective,\n  ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective,\n  ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective,\n} from './components/pages/actions-product-settings-page/actions-product-settings-page.component';\n\nconst pages = [ActionsProductSettingsPageComponent];\nconst components = [\n  ...pages,\n  ActionsProductNotificationsSettingsWidgetComponent,\n  ActionsProductSettingsPageComponent,\n  ActionsProductItemCardComponent,\n];\nconst directives = [\n  ActionsProductItemCardCustomizableDirective,\n  ActionsProductSettingsPageCustomizableDirective,\n  ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective,\n  ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective,\n];\n\nconst uiModules = [\n  EmptyStateModule,\n  LoadingIndicatorModule,\n  BbIbanPipeModule,\n  ProductItemCurrentAccountModule,\n  AmountModule,\n  ButtonModule,\n  ProductItemSavingsAccountModule,\n  ProductItemTermDepositModule,\n  ProductItemLoanModule,\n  ProductItemCreditCardModule,\n  ProductItemDebitCardModule,\n  ProductItemInvestmentAccountModule,\n  ProductItemBasicAccountModule,\n  PaymentCardNumberModule,\n];\n\n@NgModule({\n  declarations: [...components, ...directives],\n  imports: [\n    CommonModule,\n    ActionsCommonModule,\n    ActionsStoreModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { ActionsProductNotificationsSettingsWidgetComponent },\n    }),\n    ...uiModules,\n  ],\n  entryComponents: [...pages],\n  exports: [...components, ...directives, ...uiModules],\n})\nexport class ActionsProductNotificationsSettingsWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}