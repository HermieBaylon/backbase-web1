import { AccountArrangementItem } from '@backbase/data-ang/arrangements';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { ProductKindNames } from '../../models/product-kind-names';
import { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';
import * as i0 from "@angular/core";
export declare class ActionsProductItemCardComponent {
    /**
     * Account item.
     */
    account?: AccountArrangementItem;
    /**
     * Product kind names enum.
     */
    readonly productKindNames: typeof ProductKindNames;
    /**
     * Configuration that determines how a payment card number should be formatted.
     */
    readonly productNumberFormat: PaymentCardNumberFormat;
    /**
     * Method to get account number.
     *
     * @param args - accounts array
     */
    retrieveAccountNumber(...args: AccountArrangementItem[]): string;
    /**
     * Method to get account alias.
     *
     * @param account - account data
     * @returns account alias name
     */
    getAlias(account: AccountArrangementItem): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsProductItemCardComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ActionsProductItemCardComponent, "bb-actions-product-item-card", never, { "account": "account"; }, {}, never, never>;
}
export declare class ActionsProductItemCardCustomizableDirective extends BbTemplate<ActionsProductItemCardComponent, AccountArrangementItem | undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsProductItemCardCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ActionsProductItemCardCustomizableDirective, "[bbActionsProductItemCardCustomizableDirective]", never, {}, {}, never>;
}
