import { OnInit, TemplateRef } from '@angular/core';
import { ActionRecipeFormItemValue, ActionRecipeItem, SpecificationIds, SpecificationsWithAction } from '@backbase/actions-common-ang';
import { ActionRecipeGetResponseBody, ActionRecipeSpecification } from '@backbase/data-ang/actions';
import { ActionsStoreModel } from '@backbase/actions-store-ang';
import { AccountArrangementItem } from '@backbase/data-ang/arrangements';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import { ActionsProductNotificationsSettingsDataService } from '../../../services/actions-product-notifications-settings-data.service';
import { ActionsProductNotificationsSettingsPropertiesService } from '../../../services/actions-product-notifications-settings-properties.service';
import { ActionsProductNotificationsSettingsRouterService } from '../../../services/actions-product-notifications-settings-router.service';
import * as i0 from "@angular/core";
export declare class ActionsProductSettingsPageComponent implements OnInit {
    private readonly store;
    private readonly routerService;
    private readonly widgetDataService;
    private readonly widgetPropertiesService;
    private readonly notificationDismissTime$$;
    private readonly specificationIDs$$;
    /**
     * Notification dismiss time value setter.
     * Configurable via model property.
     */
    set notificationDismissTime(value: number | undefined);
    /**
     * Specification IDs value setter.
     * Configurable via model property.
     */
    set specificationIDs(value: string[] | undefined);
    /**
     * Stream of account arrangement item data.
     */
    readonly account$: Observable<AccountArrangementItem>;
    private readonly accountId$;
    /**
     * Stream of Specifications with action recipe.
     */
    readonly specificationsWithActionRecipe$?: Observable<SpecificationsWithAction>;
    /**
     * Stream of loading flag indicators.
     */
    readonly isLoading$: Observable<boolean>;
    private readonly hasAccountLoadingError;
    /**
     * Stream of loading errors.
     */
    readonly loadingError$: Observable<boolean | Error | undefined>;
    /**
     * Specification IDs enum.
     */
    readonly specificationIds: typeof SpecificationIds;
    /**
     * Error notification header template.
     */
    errorNotificationHeaderTemplate: TemplateRef<any>;
    /**
     * Error notification message template.
     */
    errorNotificationMessageTemplate: TemplateRef<any>;
    constructor(store: ActionsStoreModel, routerService: ActionsProductNotificationsSettingsRouterService, widgetDataService: ActionsProductNotificationsSettingsDataService, widgetPropertiesService: ActionsProductNotificationsSettingsPropertiesService);
    ngOnInit(): void;
    /**
     * Method to submit action recipe form.
     *
     * @param formValue - action recipe form value
     */
    onSubmit(formValue: ActionRecipeFormItemValue): void;
    private getAccount;
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsProductSettingsPageComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ActionsProductSettingsPageComponent, "bb-actions-product-settings-page", never, { "notificationDismissTime": "notificationDismissTime"; "specificationIDs": "specificationIDs"; }, {}, never, never>;
}
export declare class ActionsProductSettingsPageCustomizableDirective extends BbTemplate<ActionsProductSettingsPageComponent, {
    actions: (ActionRecipeGetResponseBody | ActionRecipeItem)[];
    specifications: ActionRecipeSpecification[];
    account: AccountArrangementItem;
    specificationsWithAction: SpecificationsWithAction;
    specificationIds: SpecificationIds;
}> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsProductSettingsPageCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ActionsProductSettingsPageCustomizableDirective, "[bbActionsProductSettingsPageCustomizable]", never, {}, {}, never>;
}
export declare class ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective extends BbTemplate<ActionsProductSettingsPageComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ActionsProductSettingsPageErrorNotificationHeaderCustomizableDirective, "[bbActionsProductSettingsPageErrorNotificationHeaderCustomizable]", never, {}, {}, never>;
}
export declare class ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective extends BbTemplate<ActionsProductSettingsPageComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ActionsProductSettingsPageErrorNotificationMessageCustomizableDirective, "[bbActionsProductSettingsPageErrorNotificationMessageCustomizable]", never, {}, {}, never>;
}
