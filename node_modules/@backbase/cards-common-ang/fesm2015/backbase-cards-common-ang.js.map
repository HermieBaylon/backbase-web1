{"version":3,"file":"backbase-cards-common-ang.js","sources":["../../../../libs/cards-common-ang/mocks/data/cards-us.ts","../../../../libs/cards-common-ang/mocks/cards-get/index.ts","../../../../libs/cards-common-ang/mocks/cards-get/error.ts","../../../../libs/cards-common-ang/mocks/card-get/index.ts","../../../../libs/cards-common-ang/mocks/card-get/error.ts","../../../../libs/cards-common-ang/mocks/cards-lock-status-post/index.ts","../../../../libs/cards-common-ang/mocks/cards-replacement-post/index.ts","../../../../libs/cards-common-ang/mocks/cards-activation-post/index.ts","../../../../libs/cards-common-ang/mocks/cards-limit-post/index.ts","../../../../libs/cards-common-ang/mocks/data/travel-notice-list.ts","../../../../libs/cards-common-ang/mocks/travel-notice-get/index.ts","../../../../libs/cards-common-ang/mocks/travel-notice-post/index.ts","../../../../libs/cards-common-ang/mocks/travel-notice-delete/index.ts","../../../../libs/cards-common-ang/mocks/cards-mock-backend.provider.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-container-base/accessibility-keyboard.directive.ts","../../../../libs/cards-common-ang/src/model/payment-card-delivery-status.model.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-delivery-status/delivery-tracker.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-delivery-status/delivery-tracker.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-delivery-status/payment-card-delivery-status.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-delivery-status/payment-card-delivery-status.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-initiate-activation/payment-card-initiate-activation.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-initiate-activation/payment-card-initiate-activation.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-initiate-replacement/payment-card-initiate-replacement.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-initiate-replacement/payment-card-initiate-replacement.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-limits/payment-card-limit.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-limits/payment-card-limit.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-limits/payment-card-limits.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-limits/payment-card-limits.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-multiple-error-state/payment-card-multiple-error-state.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-multiple-error-state/payment-card-multiple-error-state.component.html","../../../../libs/cards-common-ang/src/model/payment-card-reset-pin.model.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-reset-pin/payment-card-reset-pin.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-reset-pin/payment-card-reset-pin.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-state-wrapper-ui/payment-card-state-wrapper.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-state-wrapper-ui/payment-card-state-wrapper.component.html","../../../../libs/cards-common-ang/src/model/payment-card-replacement-reason.model.ts","../../../../libs/cards-common-ang/src/model/payment-card.model.ts","../../../../libs/cards-common-ang/src/constants.ts","../../../../libs/cards-common-ang/src/model/cards-backend-error.model.ts","../../../../libs/cards-common-ang/src/services/cards-backend.service.ts","../../../../libs/cards-common-ang/src/services/cards.service.ts","../../../../libs/cards-common-ang/src/cards-common.module.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-container-base/payment-card-container-base.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-controls-base/payment-card-controls-base.component.ts","../../../../libs/cards-common-ang/src/model/travel-notice.model.ts","../../../../libs/cards-common-ang/src/services/base-widget-properties.service.ts","../../../../libs/cards-common-ang/src/services/card.service.ts","../../../../libs/cards-common-ang/src/data/destinations.ts","../../../../libs/cards-common-ang/src/services/default-destinations-service.service.ts","../../../../libs/cards-common-ang/backbase-cards-common-ang.ts"],"sourcesContent":["import { CardItem } from '@backbase/data-ang/cards';\n\nconst baseCardItem: CardItem = {\n  id: '0',\n  brand: 'Mastercard',\n  type: 'Credit',\n  subType: 'ATM',\n  name: 'Blue Card',\n  status: 'Active',\n  lockStatus: 'UNLOCKED',\n  holder: {\n    name: 'Jack Reacher',\n  },\n  expiryDate: {\n    year: '2023',\n    month: '12',\n  },\n  currency: 'USD',\n  maskedNumber: '1234',\n};\n\nconst generateCardItem = (() => {\n  let uid = 0;\n\n  return (changes: Partial<CardItem>) => ({\n    ...baseCardItem,\n    id: (++uid).toString(),\n    ...changes,\n  });\n})();\n\nexport default [\n  // with additions\n  generateCardItem({\n    maskedNumber: '0101',\n    additions: {\n      bonusPoints: '5',\n    },\n  }),\n\n  // deactivated card\n  generateCardItem({\n    maskedNumber: '0301',\n    status: 'Cancelled',\n    replacement: { status: 'ReplacementRequested' },\n    delivery: {\n      transitSteps: [\n        {\n          name: 'Ordered',\n          status: 'SUCCESS',\n          stepDateTime: '2019-01-28T16:41:41.090Z',\n        },\n        {\n          name: 'Processed',\n          status: 'SUCCESS',\n          stepDateTime: '2019-01-30T00:00:00.000Z',\n        },\n        {\n          name: 'In Transit',\n          status: 'PENDING',\n        },\n        {\n          name: 'Delivered',\n          status: 'PENDING',\n        },\n      ],\n    },\n  }),\n\n  // should have a visa logo and gold color\n  generateCardItem({\n    maskedNumber: '0204',\n    name: 'Gold Card',\n    brand: 'Visa',\n    type: 'Prepaid',\n  }),\n\n  // should have a visa logo and gold color\n  generateCardItem({\n    maskedNumber: '0201',\n    name: 'Gold Card',\n    brand: 'Visa',\n  }),\n\n  // needs to be activated\n  generateCardItem({\n    maskedNumber: '0401',\n    status: 'Inactive',\n  }),\n\n  // expired\n  generateCardItem({\n    maskedNumber: '0302',\n    status: 'Expired',\n    type: 'Debit',\n  }),\n\n  // under delivery\n  generateCardItem({\n    maskedNumber: '0501',\n    type: 'Debit',\n    status: 'Inactive',\n    delivery: {\n      transitSteps: [\n        {\n          name: 'Ordered',\n          status: 'SUCCESS',\n          stepDateTime: '2019-01-28T16:41:41.090Z',\n        },\n        {\n          name: 'Processed',\n          status: 'SUCCESS',\n          stepDateTime: '2019-01-30T00:00:00.000Z',\n        },\n        {\n          name: 'In Transit',\n          status: 'SUCCESS',\n          stepDateTime: '2019-02-01T00:00:00.000Z',\n        },\n        {\n          name: 'Delivered',\n          status: 'SUCCESS',\n          stepDateTime: '2019-02-03T00:00:00.000Z',\n        },\n      ],\n    },\n  }),\n\n  // should have a visa logo and black color\n  generateCardItem({\n    maskedNumber: '0202',\n    brand: 'Visa',\n    name: 'Black Card',\n    type: 'Debit',\n  }),\n\n  // with limits\n  generateCardItem({\n    maskedNumber: '1034',\n    name: 'Green Card',\n    limits: [\n      {\n        id: '1',\n        channel: 'ATM',\n        frequency: 'DAILY',\n        amount: 3000.0,\n        maxAmount: 10000.0,\n        minAmount: 0.0,\n      },\n      {\n        id: '2',\n        channel: 'ONLINE',\n        frequency: 'DAILY',\n        amount: 2000.0,\n        maxAmount: 10000.0,\n        minAmount: 0.0,\n      },\n    ],\n  }),\n];\n","import { HttpResponse } from '@angular/common/http';\n\nimport data from '../data/cards-us';\n\n// Replaces spec examples with a custom list of cards\nexport default () =>\n  new HttpResponse({\n    body: data,\n    status: 200,\n  });\n","import { HttpResponse, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\n// Throw HttpErrorResponse on wrong parameters\nexport default (response: HttpResponse<any>, params: HttpParams) => {\n  const errorCode = parseInt(params.get('error') as string, 10);\n\n  if (errorCode === 400) {\n    const responseBody = {\n      message: 'Bad Request',\n      errors: [\n        {\n          message: 'Mock error message: bad request',\n          key: 'cards.api.test.key',\n          context: {\n            arg0: 0,\n          },\n        },\n      ],\n    };\n\n    throw new HttpErrorResponse({\n      error: responseBody,\n      status: 400,\n    });\n  }\n\n  if (errorCode === 403) {\n    const responseBody = {\n      message: 'Forbidden',\n      errors: [\n        {\n          message: 'Mock error message: Forbidden',\n          key: 'cards.api.test.key',\n          context: {\n            arg0: 0,\n          },\n        },\n      ],\n    };\n\n    throw new HttpErrorResponse({\n      error: responseBody,\n      status: 403,\n    });\n  }\n\n  return response;\n};\n","import { HttpResponse } from '@angular/common/http';\n\nimport data from '../data/cards-us';\n\nexport default (paymentCardId: string) =>\n  new HttpResponse({\n    body: data.find((paymentCard) => paymentCard.id === paymentCardId),\n    status: 200,\n  });\n","import { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n// Throw HttpErrorResponse if not found\nexport default (response: HttpResponse<any>) => {\n  if (response.body === null) {\n    const responseBody = {\n      message: 'Not found',\n      errors: [\n        {\n          message: 'Mock error message: cannot find a card with this ID',\n          key: 'cards.api.test.key',\n          context: {\n            arg0: 0,\n          },\n        },\n      ],\n    };\n\n    throw new HttpErrorResponse({\n      error: responseBody,\n      status: 404,\n    });\n  }\n\n  return response;\n};\n","import { HttpRequest, HttpResponse } from '@angular/common/http';\n\nexport default (request: HttpRequest<any>, response: HttpResponse<any>) => {\n  const data = response.body;\n  const lockStatus = request.body.lockStatus;\n\n  data.lockStatus = lockStatus;\n\n  return new HttpResponse({\n    body: data,\n    status: 200,\n  });\n};\n","import { HttpResponse } from '@angular/common/http';\n\nexport default (response: HttpResponse<any>) => {\n  const data = response.body;\n\n  data.replacementStatus = 'ReplacementRequested';\n  data.status = 'Cancelled';\n\n  return new HttpResponse({\n    body: data,\n    status: 200,\n  });\n};\n","import { HttpResponse } from '@angular/common/http';\n\nexport default (response: HttpResponse<any>) => {\n  const data = response.body;\n\n  data.status = 'Active';\n\n  return new HttpResponse({\n    body: data,\n    status: 200,\n  });\n};\n","import { HttpResponse } from '@angular/common/http';\nimport { PaymentCardLimit } from '../../src/model/payment-card-limit.model';\n\nexport default (response: HttpResponse<any>, limits: Array<PaymentCardLimit>) => {\n  const card = response.body;\n\n  card.limits = card.limits.map((item: any, index: number) => ({\n    ...item,\n    ...limits[index],\n  }));\n\n  return new HttpResponse({\n    body: card,\n    status: 200,\n  });\n};\n","import { TravelNotice } from '@backbase/data-ang/cards';\n\nexport const generateTravelNotice = (() => {\n  let uid = 0;\n\n  return (properties: TravelNotice) => ({\n    id: (++uid).toString(),\n    ...properties,\n  });\n})();\n\nexport const travelNoticeList = [\n  generateTravelNotice({\n    cardIds: ['1'],\n    departureDate: '2020-01-09',\n    arrivalDate: '2020-01-18',\n    destinations: [\n      {\n        country: 'MEX',\n      },\n      {\n        country: 'USA',\n        region: 'US-TX',\n      },\n    ],\n  }),\n\n  generateTravelNotice({\n    cardIds: ['1', '2'],\n    departureDate: '2019-12-10',\n    arrivalDate: '2019-12-23',\n    destinations: [\n      {\n        country: 'JPN',\n      },\n      {\n        country: 'USA',\n        region: 'US-CA',\n      },\n    ],\n    contact: {\n      phoneNumber: '+1 646 432 3000',\n    },\n  }),\n\n  generateTravelNotice({\n    cardIds: ['1', '3', '7'],\n    departureDate: '2019-07-23',\n    arrivalDate: '2019-08-11',\n    destinations: [\n      {\n        country: 'KHM',\n      },\n      {\n        country: 'KOR',\n      },\n      {\n        country: 'IND',\n      },\n    ],\n    contact: {\n      phoneNumber: '+1 646 432 3000',\n    },\n  }),\n];\n","import { HttpResponse } from '@angular/common/http';\nimport { travelNoticeList } from '../data/travel-notice-list';\n\nexport default () =>\n  new HttpResponse({\n    body: travelNoticeList,\n    status: 200,\n  });\n","import { HttpResponse } from '@angular/common/http';\nimport { TravelNotice } from '@backbase/data-ang/cards';\nimport { generateTravelNotice, travelNoticeList } from '../data/travel-notice-list';\n\nexport default (travelNotice: TravelNotice) => {\n  const travelNoticeItem = generateTravelNotice(travelNotice);\n  travelNoticeList.unshift(travelNoticeItem);\n\n  return new HttpResponse({\n    body: travelNoticeItem,\n    status: 200,\n  });\n};\n","import { HttpResponse } from '@angular/common/http';\nimport { travelNoticeList } from '../data/travel-notice-list';\n\nexport default (id: string) => {\n  const index = travelNoticeList.findIndex((travelNoticeItem) => travelNoticeItem.id === id);\n  travelNoticeList.splice(index, 1);\n\n  return new HttpResponse({\n    body: [],\n    status: 200,\n  });\n};\n","import { Injectable, Provider, InjectionToken } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpResponse,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { flatMap, materialize, delay, dematerialize, map } from 'rxjs/operators';\n\nimport cardsGetHook from './cards-get';\nimport cardsGetErrorHook from './cards-get/error';\nimport cardGetHook from './card-get';\nimport cardGetErrorHook from './card-get/error';\nimport cardsLockStatusPostHook from './cards-lock-status-post';\nimport cardsReplacementPostHook from './cards-replacement-post';\nimport cardsActivationPostHook from './cards-activation-post';\nimport cardsLimitsPostHook from './cards-limit-post';\nimport travelNoticeGetHook from './travel-notice-get';\nimport travelNoticePostHook from './travel-notice-post';\nimport travelNoticeDeleteHook from './travel-notice-delete';\n\n@Injectable()\nexport class CardsMockBackendInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return of(undefined).pipe(\n      // eslint-disable-next-line\n      flatMap(() => {\n        console.log(request.method, request.urlWithParams);\n\n        if (request.url.endsWith('/cards') && request.method === 'GET') {\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(cardsGetHook),\n            map((response) => cardsGetErrorHook(response, request.params)),\n          );\n        }\n\n        if (request.url.indexOf('/cards/') > -1 && request.method === 'GET') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 1];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardGetErrorHook(response)),\n          );\n        }\n\n        if (request.url.endsWith('/travel-notices') && request.method === 'GET') {\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(travelNoticeGetHook));\n        }\n\n        if (request.url.endsWith('/travel-notices') && request.method === 'POST') {\n          const travelNoticeItem = request.body;\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(() => travelNoticePostHook(travelNoticeItem)));\n        }\n\n        if (request.url.indexOf('/travel-notices') !== -1 && request.method === 'DELETE') {\n          const travelNoticeItemId = request.url.split('/')[request.url.split('/').length - 1];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(() => travelNoticeDeleteHook(travelNoticeItemId)));\n        }\n\n        if (request.url.endsWith('/lock-status') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 2];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardsLockStatusPostHook(request, response)),\n          );\n        }\n\n        if (request.url.endsWith('/replacement') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 2];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardsReplacementPostHook(response)),\n          );\n        }\n\n        if (request.url.endsWith('/limits') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 2];\n          const limits = request.body;\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardsLimitsPostHook(response, limits)),\n          );\n        }\n\n        if (request.url.endsWith('/activation') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 2];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardsActivationPostHook(response)),\n          );\n        }\n\n        if (request.url.endsWith('/pin/reset') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 3];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(() => cardGetHook(paymentCardId)));\n        }\n\n        if (request.url.endsWith('/pin/request') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 3];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(() => cardGetHook(paymentCardId)));\n        }\n\n        return next.handle(request);\n      }),\n      materialize(),\n      delay(1000),\n      dematerialize(),\n    );\n  }\n}\n\nexport const CardsMockBackendProvider: Provider = {\n  provide: HTTP_INTERCEPTORS as InjectionToken<HttpInterceptor[]>,\n  useClass: CardsMockBackendInterceptor,\n  multi: true,\n};\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbAccessibilityKeyboard]',\n})\nexport class AccessibilityKeyboardDirective {\n  constructor(readonly element: ElementRef) {\n    element.nativeElement.tabIndex = 0;\n  }\n\n  // eslint-disable-next-line\n  @HostListener('keydown.enter', ['$event'])\n  // eslint-disable-next-line\n  @HostListener('keydown.space', ['$event'])\n  eventListener(event: any) {\n    this.element.nativeElement.click(event);\n  }\n}\n","/**\n * Possible payment card delivery transit step statuses.\n */\nexport enum PaymentCardDeliveryStepStatus {\n  Success = 'SUCCESS',\n  Pending = 'PENDING',\n  Failed = 'FAILED',\n}\n\n/**\n * Single transit step inside a delivery status.\n */\nexport interface PaymentCardDeliveryStep {\n  name: string;\n  status: PaymentCardDeliveryStepStatus;\n  stepDateTime?: Date;\n}\n\n/**\n * Delivery status.\n */\nexport interface PaymentCardDeliveryStatus {\n  transitSteps: Array<PaymentCardDeliveryStep>;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PaymentCardDeliveryStepStatus } from '../../model/payment-card-delivery-status.model';\n\nexport interface DeliveryTrackerStep {\n  name: string;\n  status: 'PENDING' | 'SUCCESS' | 'FAILED';\n  subtext?: string;\n  icon?: string;\n  stepDateTime?: string;\n}\n\n/**\n * @name DeliveryTrackerComponent\n *\n * @description\n * Component that displays the steps to fulfill an activity.\n */\n@Component({\n  selector: 'bb-delivery-tracker',\n  templateUrl: './delivery-tracker.component.html',\n})\nexport class DeliveryTrackerComponent implements OnInit {\n  /**\n   * The steps that this component displays the steps of.  Mandatory.\n   */\n  @Input() steps: Array<DeliveryTrackerStep> = [];\n  /**\n   * Color for the icons and the lines\n   */\n  @Input() color = 'primary';\n\n  get currentStep() {\n    const steps = this.steps.filter((step) => step.status === PaymentCardDeliveryStepStatus.Success);\n    if (steps.length > 0) {\n      return steps[steps.length - 1];\n    }\n\n    return undefined;\n  }\n\n  get stepColorClassName() {\n    return `bb-delivery-tracker__step-icon-${this.color}`;\n  }\n\n  getStepClassName(step: DeliveryTrackerStep) {\n    const stepClassName = step.name.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-');\n\n    return `bb-delivery-tracker__step--${stepClassName}`;\n  }\n\n  getStepIconClassName(name: string) {\n    const stepClassName = name.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-');\n\n    return `delivery-tracker__step--${stepClassName}`;\n  }\n\n  ngOnInit() {\n    if (typeof this.steps === 'undefined') {\n      throw new Error(`\"steps\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n","<div class=\"bb-delivery-tracker\">\n  <div\n    class=\"bb-delivery-tracker__step\"\n    *ngFor=\"let step of steps\"\n    [ngClass]=\"[\n      step === currentStep ? 'active' : '',\n      getStepClassName(step)\n    ]\"\n  >\n    <div\n      class=\"bb-delivery-tracker__step-icon\"\n      [ngClass]=\"[\n        stepColorClassName,\n        step.status !== 'SUCCESS' ? 'bb-delivery-tracker__step-icon--disabled' : ''\n      ]\"\n    >\n      <bb-icon-ui \n        [name]=\"getStepIconClassName(step.status === 'SUCCESS' ? 'ordered' : step.name)\"\n        backgroundType=\"circle\"\n        size=\"md\"\n        [color]=\"step.status === 'SUCCESS' ? color : 'light'\"\n      ></bb-icon-ui>\n    </div>\n    <div\n      class=\"bb-delivery-tracker__step-text\"\n      [ngClass]=\"{'bb-text-support': step.status !== 'SUCCESS'}\"\n    >\n      {{ step.name }}\n    </div>\n    <div\n      class=\"bb-delivery-tracker__step-date bb-subtitle\"\n      *ngIf=\"step.stepDateTime\"\n    >\n      {{ step.stepDateTime | date }} at {{step.stepDateTime | date:'shortTime'}}\n    </div>\n  </div>\n</div>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { PaymentCardDeliveryStatus } from '../../model/payment-card-delivery-status.model';\n\n@Component({\n  selector: 'bb-payment-card-delivery-status',\n  templateUrl: './payment-card-delivery-status.component.html',\n})\nexport class PaymentCardDeliveryStatusComponent {\n  /**\n   * Delivery status of the payment card to be displayed.\n   */\n  @Input() deliveryStatus: PaymentCardDeliveryStatus = { transitSteps: [] };\n\n  readonly hostRef = this;\n}\n\n@Directive({\n  selector: '[bbCardsDeliveryStatusCustomizable]',\n})\nexport class CardsDeliveryStatusCustomizableDirective extends BbTemplate<\n  PaymentCardDeliveryStatusComponent,\n  undefined\n> {}\n","<ng-container bbCardsDeliveryStatusCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsDeliveryStatusCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--lg\">\n    <bb-delivery-tracker [steps]=\"hostRef.deliveryStatus.transitSteps\" color=\"success\"></bb-delivery-tracker>\n  </div>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { PaymentCard } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-initiate-activation',\n  templateUrl: './payment-card-initiate-activation.component.html',\n})\nexport class PaymentCardInitiateActivationComponent implements OnInit {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Whether card activation has been initiated.\n   */\n  @Input() isInitiateActivationLoading = false;\n  /**\n   * Event to initiate activation of payment card;\n   */\n  @Output() readonly initiateActivation = new EventEmitter<string>();\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  /**\n   * Flag to denote whether the activation modal is open or not.\n   */\n  isModalOpen = false;\n\n  /**\n   * Form model for initiating activation.\n   */\n  form = new FormGroup({\n    token: new FormControl('', [Validators.required, Validators.minLength(3)]),\n  });\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  /**\n   * Submit handler for initiating activation.\n   *\n   * @param params - form model value\n   */\n  onSubmit(params: { token: string }) {\n    this.isModalOpen = false;\n    this.initiateActivation.emit(params.token);\n  }\n\n  /**\n   * Opens the modal.\n   */\n  onModalOpen() {\n    this.isModalOpen = true;\n  }\n\n  /**\n   * Closes the modal.\n   */\n  onModalClose() {\n    this.isModalOpen = false;\n    this.form.reset({ token: '' });\n  }\n\n  /**\n   * Form element validation control.\n   */\n  isFieldValid(fieldName: string) {\n    const control = this.form.get(fieldName);\n\n    return !!control && (control.valid || control.untouched);\n  }\n}\n\n@Directive({\n  selector: '[bbCardsInitiateActivationFormCustomizable]',\n})\nexport class CardsInitiateActivationFormCustomizableDirective extends BbTemplate<\n  PaymentCardInitiateActivationComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbCardsInitiateActivationCustomizable]',\n})\nexport class CardsInitiateActivationCustomizableDirective extends BbTemplate<\n  PaymentCardInitiateActivationComponent,\n  undefined\n> {}\n","<ng-container bbCardsInitiateActivationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsInitiateActivationCustomizable let-hostRef>\n  <bb-load-button-ui\n    data-role=\"activate-card-button\"\n    color=\"primary\"\n    [block]=\"true\"\n    [isLoading]=\"hostRef.isInitiateActivationLoading\"\n    (click)=\"!hostRef.isInitiateActivationLoading && hostRef.paymentCard?.status === 'INACTIVE' && hostRef.onModalOpen()\"\n    [disabled]=\"hostRef.paymentCard?.status !== 'INACTIVE'\"\n    i18n=\"Activate card button|Activate the card@@card.activation.button\"\n  >Activate card</bb-load-button-ui>\n\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isModalOpen\"\n    [modalOptions]=\"{ centered: true }\"\n    (cancel)=\"hostRef.onModalClose()\"\n  >\n    <div class=\"modal-header\">\n      <div class=\"bb-block bb-block--xs\">\n        <h2 i18n=\"Activate card heading|Activate card header@@card.activationForm.heading\">\n          Activate card\n        </h2>\n      </div>\n    </div>\n    <ng-container bbCardsInitiateActivationFormCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template bbCardsInitiateActivationFormCustomizable let-hostRef>\n  <form *ngIf=\"hostRef.isModalOpen\" [formGroup]=\"hostRef.form\" (ngSubmit)=\"hostRef.onSubmit(hostRef.form.value)\">\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 order-sm-2\">\n          <div data-role=\"modal-card-img\" class=\"bb-block bb-block--md bb-payment-card-back bb-payment-card-icon-dialog\"></div>\n        </div>\n        <div class=\"col-12 col-sm-6\">\n          <h3 i18n=\"Enter your code heading|Heading for enter your code@@card.activationForm.options.heading\">\n            Enter your CVV code\n          </h3>\n          <p\n            class=\"bb-text-support\"\n            i18n=\"Enter your code subtext|Subtext for enter your code@@card.activationForm.options.subtitle\"\n          >To activate your card, please enter your CVV code at the back of your card as shown.</p>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <bb-input-password-ui\n                data-role=\"card-details-cvv-input\"\n                [autofocus]=\"true\"\n                formControlName=\"token\"\n                label=\"CVV code\"\n                i18n-label='CVV Code heading|Heading for CVV@@card.activationForm.options.heading'\n              ></bb-input-password-ui>\n            </div>\n            <div class=\"col-12\">\n              <bb-input-validation-message-ui [showErrors]=\"!hostRef.isFieldValid('token')\">\n                <span i18n=\"CVV Code validation@@card.activationForm.options.token.error.msg\">\n                  You need to enter the full CVV code.\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"hostRef.form.invalid\"\n          i18n=\"Activate button|Activation confirm button@@card.activationForm.submitButton\"\n        >Activate</bb-button-ui>\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"button\"\n          color=\"link\"\n          (click)=\"hostRef.onModalClose()\"\n          i18n=\"Cancel button|Cancel card activation@@card.activationForm.cancelButton\"\n        >Cancel</bb-button-ui>\n      </div>\n    </div>\n  </form>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { PaymentCardReplacementReason } from '../../model/payment-card-replacement-reason.model';\nimport { PaymentCard } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-initiate-replacement',\n  templateUrl: './payment-card-initiate-replacement.component.html',\n})\nexport class PaymentCardInitiateReplacementComponent implements OnInit {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Whether card replacement has been initiated.\n   */\n  @Input() isInitiateReplacementLoading = false;\n  /**\n   * Event to initiate replacement of payment card;\n   */\n  @Output() readonly initiateReplacement = new EventEmitter<PaymentCardReplacementReason | string>();\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  /**\n   * Flag to denote whether the replacement modal is open or not.\n   */\n  isModalOpen = false;\n\n  /**\n   * The page of the replacement modal.\n   */\n  modalStep = 0;\n\n  /**\n   * Form model for initiating replacement.\n   */\n  form = new FormGroup({\n    replacementReason: new FormControl(),\n  });\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  /**\n   * Submit handler for initiating replacement.\n   *\n   * @param params - form model value\n   */\n  onSubmit(params: { replacementReason: PaymentCardReplacementReason | string }) {\n    this.isModalOpen = false;\n    this.initiateReplacement.emit(params.replacementReason);\n  }\n\n  /**\n   * Opens the modal (and resets the page to the first page).\n   */\n  onModalOpen() {\n    this.modalStep = 0;\n    this.isModalOpen = true;\n  }\n\n  /**\n   * Closes the modal.\n   */\n  onModalClose() {\n    this.isModalOpen = false;\n  }\n}\n@Directive({\n  selector: '[bbCardsInitiateReplacementFormCustomizable]',\n})\nexport class CardsInitiateReplacementFormCustomizableDirective extends BbTemplate<\n  PaymentCardInitiateReplacementComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbCardsInitiateReplacementCustomizable]',\n})\nexport class CardsInitiateReplacementCustomizableDirective extends BbTemplate<\n  PaymentCardInitiateReplacementComponent,\n  undefined\n> {}\n","<ng-container bbCardsInitiateReplacementCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsInitiateReplacementCustomizable let-hostRef>\n  <bb-load-button-ui\n    data-role=\"replace-card-button\"\n    color=\"secondary\"\n    aria-label=\"Replace payment card, Replace lost, stolen or damaged cards\"\n    i18n-aria-label=\"Replace payment card@@card.replace.button.aria-label\"\n    [block]=\"true\"\n    [isLoading]=\"hostRef.isInitiateReplacementLoading\"\n    (click)=\"!hostRef.isInitiateReplacementLoading && hostRef.paymentCard?.replacementStatus === 'NOT_UNDER_REPLACEMENT' && hostRef.onModalOpen()\"\n    [disabled]=\"hostRef.paymentCard?.replacementStatus !== 'NOT_UNDER_REPLACEMENT'\"\n    i18n=\"Replace card button|Replace the card@@card.replace.button\"\n  >Replace</bb-load-button-ui>\n\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isModalOpen\"\n    [modalOptions]=\"{ centered: true }\"\n    (cancel)=\"hostRef.onModalClose()\"\n  >\n  <div role=\"dialog\">\n    <div class=\"modal-header\">\n      <div class=\"bb-block\">\n        <h2 i18n=\"Replace card heading|Replace card header@@card.replaceForm.heading\">\n          Replace card\n        </h2>\n        <ng-container *ngIf=\"hostRef.modalStep === 0\">\n          <p\n            class=\"bb-text-support bb-block bb-block--no-margin\"\n            i18n=\"Replace card text|Why you want to replace card@@card.replaceForm.options.subtitle\"\n          >Tell us why you want to replace your card.</p>\n        </ng-container>\n      </div>\n    </div>\n    <ng-container bbCardsInitiateReplacementFormCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  </div>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template bbCardsInitiateReplacementFormCustomizable let-hostRef>\n  <form [formGroup]=\"hostRef.form\" (ngSubmit)=\"hostRef.onSubmit(hostRef.form.value)\">\n    <!-- Form step -->\n    <ng-container *ngIf=\"hostRef.modalStep === 0\">\n      <div class=\"modal-body\">\n        <bb-input-radio-group-ui\n          [required]=\"true\"\n          aria-label=\"Tell us why you want to replace your card, select a reason\"\n          i18n-aria-label=\"replacement reason radio group aria-label@@card.replaceForm.radioGroup.options.aria-label\"\n          formControlName=\"replacementReason\"\n        >\n          <bb-input-radio-ui\n            value=\"LOST\"\n            [labelTemplate]=\"cardLostLabel\"\n            aria-label=\"Card lost, Report a missing card and get a new one. Your current card will be locked automatically\"\n            i18n-aria-label=\"Card lost radio button label|Card lost option@@card.replaceForm.options.lost.aria-label\"\n          ></bb-input-radio-ui>\n          <bb-input-radio-ui\n            value=\"STOLEN\"\n            [labelTemplate]=\"cardStolenLabel\"\n            aria-label=\"Card stolen, Report a stolen card and get a new one. Your current card will be locked automatically\"\n            i18n-aria-label=\"Card stolen radio button label|Card stolen option@@card.replaceForm.options.stolen.aria-label\"\n          ></bb-input-radio-ui>\n          <bb-input-radio-ui\n            value=\"BROKEN\"\n            [labelTemplate]=\"cardBrokenLabel\"\n            aria-label=\"Card broken, Report a broken card and get a new one\"\n            i18n-aria-label=\"Card broken radio button label|Card broken option@@card.replaceForm.options.broken.aria-label\"\n          ></bb-input-radio-ui>\n        </bb-input-radio-group-ui>\n\n        <ng-template #cardLostLabel>\n          <strong i18n=\"Card lost radio button label|Card lost option@@card.replaceForm.options.lost\">\n            Card lost\n          </strong>\n          <br>\n          <p\n            class=\"bb-text-support bb-text-default\"\n            i18n=\"Card lost radio button label subtext|Card lost option@@card.replaceForm.options.lost.subtext\"\n          >Report a missing card and get a new one. Your current card will be locked automatically.</p>\n        </ng-template>\n\n        <ng-template #cardStolenLabel>\n          <strong i18n=\"Card stolen radio button label|Card stolen option@@card.replaceForm.options.stolen\">\n            Card stolen\n          </strong>\n          <br>\n          <p\n            class=\"bb-text-support bb-text-default\"\n            i18n=\"Card stolen radio button label subtext|Card stolen option@@card.replaceForm.options.stolen.subtext\"\n          >Report a stolen card and get a new one. Your current card will be locked automatically.</p>\n        </ng-template>\n\n        <ng-template #cardBrokenLabel>\n          <strong i18n=\"Card broken radio button label|Card broken option@@card.replaceForm.options.broken\">\n            Card broken\n          </strong>\n          <br>\n          <p\n            class=\"bb-text-support bb-text-default\"\n            i18n=\"Card broken radio button label subtext|Card broken option@@card.replaceForm.options.broken.subtext\"\n          >Report a broken card and get a new one.</p>\n        </ng-template>\n      </div>\n      <div class=\"modal-footer\">\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"submit\"\n            color=\"primary\"\n            (click)=\"hostRef.modalStep = 1\"\n            i18n=\"Next button|Next step for replace@@card.replaceForm.nextButton\"\n          >Continue</button>\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"button\"\n            color=\"link\"\n            (click)=\"hostRef.onModalClose()\"\n            i18n=\"Cancel button|Cancel replace card@@card.replaceForm.cancelButton\"\n          >Cancel</button>\n        </div>\n      </div>\n    </ng-container>\n\n    <!-- Confirm step -->\n    <ng-container *ngIf=\"hostRef.modalStep === 1\">\n      <div class=\"modal-body\" tabindex=\"0\">\n        <h5\n          class=\"bb-text-semi-bold\"\n          i18n=\"Delivery address header|Delivery address@@card.replaceForm.deliveryAddress.heading\"\n          >Delivery address</h5>\n        <p\n          class=\"bb-text-support\"\n          i18n=\"Delivery address subtext|Delivery address@@card.replaceForm.deliveryAddress.subtext\"\n        >The new card will be delivered at your currently registered address.</p>\n      </div>\n      <div class=\"modal-footer\">\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"submit\"\n            color=\"primary\"\n            i18n=\"Order New button|Order new card Confirm@@card.replaceForm.submitButton\"\n            aria-label=\"order new payment card to the provided delivery address\"\n            i18n-aria-label= \"order new button aria-label@@card.replaceForm.submitButton.aria-label\"\n            [bbFocus]=\"true\"\n            *ngIf=\"hostRef.modalStep === 1\"\n          >Order New</button>\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"button\"\n            color=\"link\"\n            (click)=\"hostRef.onModalClose()\"\n            i18n=\"Cancel button|Cancel card replace@@card.replaceForm.cancelButton\"\n          >Cancel</button>\n        </div>\n      </div>\n    </ng-container>\n  </form>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputInlineEditComponent } from '@backbase/ui-ang/input-inline-edit';\nimport { PaymentCardLimit, PaymentCardLimitUpdate } from '../../model/payment-card-limit.model';\n\n@Component({\n  selector: 'bb-payment-card-limit',\n  templateUrl: 'payment-card-limit.component.html',\n})\nexport class PaymentCardLimitComponent {\n  /**\n   * currency for payment card.\n   */\n  @Input() currency?: string;\n  /**\n   * one limit for payment card.\n   */\n  @Input() limit?: PaymentCardLimit;\n  /**\n   * Event to update limit of payment card;\n   */\n  // eslint-disable-next-line\n  @Output()\n  readonly updateLimit = new EventEmitter<PaymentCardLimitUpdate>();\n  @ViewChild(InputInlineEditComponent) inputEdit: InputInlineEditComponent | undefined;\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  onUpdateLimit(amount: string) {\n    if (this.limit) {\n      this.updateLimit.emit({ amount, cardLimit: this.limit });\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbCardsUpdateLimitCustomizable]',\n})\nexport class CardsUpdateLimitCustomizableDirective extends BbTemplate<PaymentCardLimitComponent, undefined> {}\n","<ng-container bbCardsUpdateLimitCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsUpdateLimitCustomizable let-hostRef>\n  <div class=\"row\">\n    <div class=\"col-12 col-sm-8\">\n      <h5 class=\"bb-block--no-margin\" data-role=\"limit-title\">\n        <span>{{hostRef?.limit?.frequency | titlecase }}&nbsp;</span>\n        <span>{{hostRef?.limit?.channel?.name}}</span>\n      </h5>\n      <span class=\"bb-text-support text-small\" data-role=\"limit-description\">{{hostRef?.limit?.channel?.description}}</span>\n    </div>\n\n    <div class=\"col-12 col-sm-4\">\n      <ng-template #amountTemplateRef>\n          <strong class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--spacing-sm\">\n            <bb-amount-ui\n              data-role=\"limit-max-amount\"\n              [currency]=\"hostRef?.currency\" \n              [amount]=\"hostRef.limit?.amount\" \n              [mapCurrency]=\"true\"\n              [decimalPlaces]=\"0\"\n            ></bb-amount-ui>\n          </strong>\n      </ng-template>\n\n      <bb-input-inline-edit-ui \n        [inputText]=\"hostRef.limit?.amount\" \n        [maxValue]=\"hostRef.limit?.maxAmount\"\n        [minValue]=\"hostRef.limit?.minAmount\"\n        pattern=\"[0-9]+\"\n        [inputInlineTemplate]=\"amountTemplateRef\"\n        (accept)=\"hostRef.onUpdateLimit($event)\"\n      ></bb-input-inline-edit-ui> \n\n      <p class=\"bb-text-support bb-text-align-right text-small\" data-role=\"limit-max-allowed-amount\">\n        <span i18n=\"limit max amount@@card.limit.amount.header.maxAmount\">\n          Max:\n        </span>\n        <bb-amount-ui \n          [currency]=\"hostRef?.currency\" \n          [amount]=\"hostRef.limit?.maxAmount\" \n          [mapCurrency]=\"true\"\n          [decimalPlaces]=\"0\"\n        ></bb-amount-ui>\n      </p>\n    </div>\n  </div>\n</ng-template>","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { PaymentCardLimit } from '../../model/payment-card-limit.model';\nimport { PaymentCard } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-limits',\n  templateUrl: './payment-card-limits.component.html',\n})\nexport class PaymentCardLimitsComponent {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Loading status of limit update API\n   */\n  @Input() isLimitsLoading?: boolean;\n  /**\n   * Event to update limit of payment card;\n   */\n  @Output() readonly updateLimit = new EventEmitter<PaymentCardLimit[]>();\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  onUpdateLimit(limit: { amount: string; cardLimit: PaymentCardLimit | undefined }) {\n    if (this.paymentCard) {\n      const limits = this.paymentCard.limits;\n      if (limits) {\n        this.updateLimit.emit(\n          limits.map((item) => {\n            let amount: number | string = item.amount;\n            if (limit.cardLimit && item.id === limit.cardLimit.id) {\n              amount = +limit.amount;\n            }\n\n            return {\n              amount,\n              id: item.id,\n              frequency: item.frequency,\n            };\n          }),\n        );\n      }\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbCardsUpdateLimitsCustomizable]',\n})\nexport class CardsUpdateLimitsCustomizableDirective extends BbTemplate<PaymentCardLimitsComponent, undefined> {}\n","<ng-container bbCardsUpdateLimitsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbCardsUpdateLimitsCustomizable let-hostRef>\n  <div class=\"card bb-list\" *ngIf=\"hostRef.paymentCard?.limits\">\n    <div class=\"card-header\">\n      <h2 i18n=\"Limits update heading|update card limits header@@card.updateLimit.heading\">\n        Limits\n      </h2>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-list\" *ngIf=\"!hostRef.isLimitsLoading; else loadingTemplate\">\n        <div class=\"bb-list__item\" *ngFor=\"let limit of hostRef.paymentCard.limits\">\n          <bb-payment-card-limit \n            [limit]=\"limit\"\n            [currency]=\"hostRef.paymentCard.currency\"\n            (updateLimit)=\"hostRef.onUpdateLimit($event)\"\n          ></bb-payment-card-limit>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #loadingTemplate>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { CardsBackendError } from '../../model/cards-backend-error.model';\n\n@Component({\n  selector: 'bb-payment-card-multiple-error-state',\n  templateUrl: 'payment-card-multiple-error-state.component.html',\n})\nexport class PaymentCardMultipleErrorStateComponent {\n  @Input() errors: CardsBackendError[] | undefined;\n\n  hostRef = this;\n}\n\n@Directive({\n  selector: '[bbCardsMultipleErrorStateCustomizable]',\n})\nexport class CardsMultipleErrorStateCustomizableDirective extends BbTemplate<\n  PaymentCardMultipleErrorStateComponent,\n  undefined\n> {}\n","\n<ng-container\n  bbCardsMultipleErrorStateCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template bbCardsMultipleErrorStateCustomizable let-hostRef>\n  <div class=\"card bb-state-container\">\n    <bb-empty-state-ui\n      title=\"Unknown Error\"\n      i18n-title=\"Error state title@@cards.common.errorState.title\"\n      iconModifier=\"error\"\n      iconSize=\"xxl\"\n      iconClasses=\"text-muted\"\n    ></bb-empty-state-ui>\n    <p \n      *ngFor=\"let error of hostRef.errors\" \n      data-role=\"custom-error-state-message\" \n      class=\"bb-empty-state__message bb-empty-state\"\n    >\n      {{error?.message}}\n    </p>\n  </div>\n</ng-template>\n","/**\n * Represents the values that can be sent dynamically to the reset pin endpoint\n */\nexport interface PaymentCardResetPin {\n  [token: string]: string;\n}\n\nexport interface PaymentCardResetPinTransport {\n  raw: PaymentCardResetPin;\n  model: PaymentCardResetPin;\n}\n\n/**\n * Enum values to determine whether a reset pin would be done via delivery address or immediate change\n * Reset stands for allowing users to change their pin using the web app\n * Request stands for a delivery letter with the new pin\n */\nexport enum ResetPinModeEnum {\n  Reset = 'RESET',\n  Request = 'REQUEST',\n}\n","import { Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  PaymentCardResetPin,\n  PaymentCardResetPinTransport,\n  ResetPinModeEnum,\n} from '../../model/payment-card-reset-pin.model';\nimport { PaymentCard } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-reset-pin',\n  templateUrl: 'payment-card-reset-pin.component.html',\n})\nexport class PaymentCardResetPinComponent implements OnInit {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Wether the modal should be Reset or Request\n   */\n  @Input() mode: ResetPinModeEnum | undefined;\n  /**\n   * Whether card reset pin has been initiated.\n   */\n  @Input() isResetPinLoading = false;\n  /**\n   * Event for reset pin of payment card;\n   */\n  @Output() readonly resetPin = new EventEmitter<PaymentCardResetPinTransport>();\n  /**\n   * Event for request pin of payment card;\n   */\n  @Output() readonly requestPin = new EventEmitter<PaymentCardResetPinTransport>();\n  /**\n   * Flag to denote whether the reset pin modal is open or not.\n   */\n  isModalOpen = false;\n  /**\n   * The page of the reset pin modal.\n   */\n  modalStep = 1;\n  /**\n   * Form model for reset pin.\n   */\n  model: PaymentCardResetPin = {};\n\n  /**\n   * Form model for reset pin.\n   */\n  modelExclude: PaymentCardResetPin = {};\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * Opens the modal.\n   */\n  onModalOpen() {\n    this.isModalOpen = true;\n  }\n  /**\n   * Submit handler for reset pin.\n   */\n  onSubmit() {\n    const model = { ...this.model };\n    const raw = { ...this.model, ...this.modelExclude };\n    if (this.mode === ResetPinModeEnum.Reset) {\n      this.resetPin.emit({ raw, model });\n    } else if (this.mode === ResetPinModeEnum.Request) {\n      this.requestPin.emit({ raw, model });\n    }\n\n    this.onModalClose();\n  }\n  /**\n   * Closes the modal.\n   */\n  onModalClose() {\n    this.modalStep = 1;\n    this.model = {};\n    this.modelExclude = {};\n    this.isModalOpen = false;\n  }\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbCardsResetPinCustomizable]',\n})\nexport class CardsResetPinCustomizableDirective extends BbTemplate<PaymentCardResetPinComponent, undefined> {}\n\n@Directive({\n  selector: '[bbCardsResetPinConfirmationCustomizable]',\n})\nexport class CardsResetPinConfirmationCustomizableDirective extends BbTemplate<\n  PaymentCardResetPinComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbCardsResetPinFormCustomizable]',\n})\nexport class CardsResetPinFormCustomizableDirective extends BbTemplate<PaymentCardResetPinComponent, undefined> {}\n\n@Directive({\n  selector: '[bbCardsResetPinNewPinCustomizable]',\n})\nexport class CardsResetPinNewPinCustomizableDirective extends BbTemplate<PaymentCardResetPinComponent, undefined> {}\n","<ng-container bbCardsResetPinCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsResetPinCustomizable let-hostRef>\n  <bb-load-button-ui\n    [block]=\"true\"\n    color=\"secondary\"\n    [isLoading]=\"hostRef.isResetPinLoading\"\n    (click)=\"hostRef.onModalOpen()\"\n  >\n    <ng-container *ngIf=\"hostRef.mode ==='REQUEST'\" i18n=\"Request PIN button|Request pin@@card.pin.request.button\">Request</ng-container>\n    <ng-container *ngIf=\"hostRef.mode ==='RESET'\" i18n=\"Reset PIN button|Reset pin@@card.pin.reset.button\">Reset</ng-container>\n  </bb-load-button-ui>\n\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isModalOpen\"\n    [modalOptions]=\"{ centered: true }\"\n    (cancel)=\"hostRef.onModalClose()\"\n  >\n    <div class=\"modal-header\">\n      <div class=\"bb-block bb-block--xs\">\n        <ng-container *ngIf=\"hostRef.mode === 'REQUEST'\">\n          <h2 i18n=\"Request PIN card heading|Request pin card header@@card.requestPinForm.heading\">\n            Request new PIN\n          </h2>\n        </ng-container>\n        <ng-container *ngIf=\"hostRef.mode === 'RESET'\">\n          <h2 i18n=\"Reset PIN card heading|Reset pin header@@card.resetPin.heading\">\n            Reset PIN\n          </h2>\n        </ng-container>\n      </div>\n    </div>\n\n    <ng-container \n      bbCardsResetPinFormCustomizable \n      *ngIf=\"hostRef.modalStep === 1 && hostRef.isModalOpen\" \n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n\n    <ng-container\n      bbCardsResetPinConfirmationCustomizable\n      *ngIf=\"hostRef.modalStep === 2 && hostRef.mode ==='REQUEST' && hostRef.isModalOpen\" \n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n\n    <ng-container\n      bbCardsResetPinNewPinCustomizable\n      *ngIf=\"(hostRef.modalStep === 2 || hostRef.modalStep === 3) && hostRef.mode ==='RESET' && hostRef.isModalOpen\" \n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template bbCardsResetPinFormCustomizable let-hostRef>\n  <!-- Form step for Request and Reset PIN-->\n  <form #pinForm=\"ngForm\" (ngSubmit)=\"hostRef.modalStep = hostRef.modalStep + 1\">\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 order-sm-2\">\n          <div data-role=\"modal-card-img\" class=\"bb-block bb-block--md bb-payment-card-back bb-payment-card-icon-dialog\"></div>\n        </div>\n        <div class=\"col-12 col-sm-6\">\n          <h3 i18n=\"Enter your code heading|Heading for enter your code@@card.resetPinForm.options.heading\">\n            Enter your CVV code\n          </h3>\n          <p\n            class=\"bb-text-support\"\n            i18n=\"Enter your code subtext|Subtext for enter your code@@card.resetPinForm.options.subtitle\"\n          >Continue by entering your CVV code found on the back of your card as shown in the image.</p>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <bb-input-password-ui\n                #cvvToken=\"ngModel\"\n                data-role=\"card-details-cvv-input\"\n                name=\"token\"\n                [autofocus]=\"true\"\n                [(ngModel)]=\"hostRef.model.token\"\n                [required]=\"true\"\n                [minlength]=\"3\"\n                label=\"CVV code\"\n                i18n-label='CVV Code heading|Heading for CVV@@card.resetPinForm.options.heading'\n              ></bb-input-password-ui>\n            </div>\n            <div class=\"col-12\">\n              <bb-input-validation-message-ui [showErrors]=\"!!cvvToken.errors && !!cvvToken.touched\">\n                <span i18n=\"CVV Code validation@@card.resetPinForm.options.token.error.msg\">\n                  You need to enter the full CVV code.\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"!!pinForm.invalid\"\n          i18n=\"Confirm continue pin button|Reset pin continue button@@card.resetPinForm.submitButton\"\n        >Continue</bb-button-ui>\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"button\"\n          color=\"link\"\n          (click)=\"hostRef.onModalClose()\"\n          i18n=\"Cancel button|Cancel card reset pin@@card.resetPinForm.cancelButton\"\n        >Cancel</bb-button-ui>\n      </div>\n    </div>\n  </form>\n</ng-template>\n\n<ng-template bbCardsResetPinConfirmationCustomizable let-hostRef>\n  <!-- Confirmation step for Request Pin -->\n  <div class=\"modal-body\">\n    <bb-alert-ui \n      modifier=\"warning\" \n      title=\"Your new PIN will be delivered to your address within approximately 3 to 5 working days.\" \n      i18n-title=\"Reset pin alert|Reset pin alert@card.resetPinForm.alert\"\n    >\n    </bb-alert-ui>\n    <div>\n      <h5\n        class=\"bb-text-semi-bold\"\n        i18n=\"Delivery address header|Delivery address@@card.resetPinForm.deliveryAddress.heading\"\n      >Delivery address</h5>\n      <p\n        class=\"bb-text-support\"\n        i18n=\"Delivery address subtext|Delivery address@@card.resetPinForm.deliveryAddress.subtext\"\n      >The card will be delivered at your address currently known by us.</p>\n    </div>\n  </div>\n    \n  <div class=\"modal-footer\">\n    <div class=\"bb-button-bar\">\n      <bb-button-ui\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        (click)=\"hostRef.onSubmit()\"\n        i18n=\"Request pin button|Request pin confirm button@@card.requestPinForm.submitButtonConfirm\"\n      >Request new PIN</bb-button-ui>\n      <bb-button-ui\n        class=\"bb-button-bar__button\"\n        type=\"button\"\n        color=\"link\"\n        (click)=\"hostRef.onModalClose()\"\n        i18n=\"Cancel button|Cancel card request pin@@card.requestPinForm.cancelButton\"\n      >Cancel</bb-button-ui>\n    </div>\n    \n  </div>\n</ng-template>\n\n<ng-template bbCardsResetPinNewPinCustomizable let-hostRef>\n  <!-- Confirmation step for Reset Pin -->\n  <form #pinForm=\"ngForm\" (ngSubmit)=\"hostRef.onSubmit()\">\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"bb-block bb-block--md col-12 col-sm-8 order-sm-2\">\n          <div class=\"bb-stack\">\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <bb-payment-card-ui\n                [paymentCard]=\"hostRef.paymentCard\"\n              ></bb-payment-card-ui>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-6 col-sm-4\">\n          <ng-container *ngIf=\"hostRef.modalStep === 2\">\n            <bb-input-password-ui\n              label=\"Enter new PIN\"\n              i18n-label=\"Enter your new pin|Enter new pin code@@card.resetPinForm.enterNewPin\"\n              name=\"pin\"\n              [(ngModel)]=\"hostRef.model.pin\"\n              [autofocus]=\"true\"\n              [required]=\"true\"\n            ></bb-input-password-ui>\n          </ng-container>\n    \n          <ng-container *ngIf=\"hostRef.modalStep === 3\">\n            <bb-input-password-ui\n              label=\"Re-enter new PIN\"\n              i18n-label=\"Re-enter your new pin|Re-enter new pin code@@card.resetPinForm.reEnterNewPin\"\n              name=\"pin2\"\n              [(ngModel)]=\"hostRef.modelExclude.pin2\"\n              [autofocus]=\"true\"\n              [required]=\"true\"\n            ></bb-input-password-ui>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <bb-button-ui\n          *ngIf=\"hostRef.modalStep === 2\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          (click)=\"hostRef.modalStep = hostRef.modalStep + 1\"\n          [disabled]=\"!!pinForm.invalid\"\n          i18n=\"Continue button|Continue card reset pin@@card.resetPinForm.continueButton\"\n        >Continue</bb-button-ui>\n        <bb-button-ui\n          *ngIf=\"hostRef.modalStep === 3\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!!pinForm.invalid\"\n          i18n=\"Confirm reset pin button|Reset pin confirm button@@card.resetPinForm.resetSubmitButton\"\n        >Confirm Reset</bb-button-ui>\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"button\"\n          color=\"link\"\n          (click)=\"hostRef.onModalClose()\"\n          i18n=\"Cancel button|Cancel card reset pin@@card.resetPinForm.cancelButton\"\n        >Cancel</bb-button-ui>\n      </div>\n    </div>\n  </form>  \n</ng-template>\n   ","import { Component, Input } from '@angular/core';\nimport { PaymentCardDisplayState } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-state-wrapper,bb-payment-card-state-wrapper-ui',\n  templateUrl: './payment-card-state-wrapper.component.html',\n})\nexport class PaymentCardStateWrapperComponent {\n  /**\n   * State of the card to display.  Overrides deprecated `lockStatus` input.\n   */\n  @Input() state: PaymentCardDisplayState | undefined;\n}\n","<div class=\"bb-payment-card-state\">\n  <div class=\"bb-payment-card-state__container\" *ngIf=\"state\">\n    <!-- Inactive -->\n    <ng-container *ngIf=\"state === 'INACTIVE'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"warning\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Inactive\"\n        i18n-text=\"Inactive label|Text for the inactive label@@cards.cardState.inactive\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n\n    <!-- Locked -->\n    <ng-container *ngIf=\"state === 'LOCKED'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"lock\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Locked\"\n        i18n-text=\"Locked label|Text for the locked label@@cards.cardState.locked\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n\n    <!-- Cancelled -->\n    <ng-container *ngIf=\"state === 'CANCELLED'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"not-interested\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Cancelled\"\n        i18n-text=\"Cancelled label|Text for the cancelled label@@cards.cardState.cancelled\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n\n    <!-- Expired -->\n    <ng-container *ngIf=\"state === 'EXPIRED'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"access-time\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Expired\"\n        i18n-text=\"Expired label|Text for the expired label@@cards.cardState.expired\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n  </div>\n\n  <div [ngClass]=\"{ 'bb-payment-card-state__overlay': state }\">\n    <ng-content></ng-content>\n  </div>\n</div>\n","/**\n * Possible payment card replacement reasons.\n */\nexport enum PaymentCardReplacementReason {\n  Lost = 'LOST',\n  Stolen = 'STOLEN',\n  Damaged = 'DAMAGED',\n}\n\n/**\n * Mapping from internal `PaymentCardReplacementReason` values to http post values for\n * `replacementReason`.\n */\nexport interface PaymentCardReplacementReasonMapping {\n  [replacementReason: string]: string;\n}\n","import { PaymentCardDeliveryStatus } from './payment-card-delivery-status.model';\nimport { PaymentCardLimit } from './payment-card-limit.model';\n\n/**\n * Possible payment card statuses.\n */\nexport enum PaymentCardStatus {\n  Active = 'ACTIVE',\n  Inactive = 'INACTIVE',\n  Canceled = 'CANCELED',\n  Expired = 'EXPIRED',\n}\n\n/**\n * Possible payment card replacement statuses.\n */\nexport enum PaymentCardReplacementStatus {\n  NotUnderReplacement = 'NOT_UNDER_REPLACEMENT',\n  UnderReplacement = 'UNDER_REPLACEMENT',\n  Replaced = 'REPLACED',\n}\n\n/**\n * Possible payment card lock statuses.\n */\nexport enum PaymentCardLockStatus {\n  Locked = 'LOCKED',\n  Unlocked = 'UNLOCKED',\n}\n\n/**\n * Payment card data.\n */\nexport interface PaymentCard {\n  /**\n   * Card uuid.\n   */\n  id: string;\n  /**\n   * Unformatted payment card number.\n   */\n  number: number | string;\n  /**\n   * Payment card vendor.\n   */\n  vendor: string;\n  /**\n   * Holder name to be displayed on the payment card.\n   */\n  name: string;\n  /**\n   * Date the payment card expires.\n   */\n  expirationDate: Date;\n  /**\n   * Payment card type.\n   */\n  type: string;\n  /**\n   * Payment card subtype.\n   */\n  subType?: string;\n  /**\n   * Payment card status.\n   */\n  status: PaymentCardStatus | string;\n  /**\n   * Payment card replacement status.\n   */\n  replacementStatus?: PaymentCardReplacementStatus | string;\n  /**\n   * Payment card lock status.\n   */\n  lockStatus?: PaymentCardLockStatus;\n  /**\n   * Payment card delivery status.\n   */\n  deliveryStatus?: PaymentCardDeliveryStatus;\n  /**\n   * Payment card currency.\n   */\n  currency?: string;\n  /**\n   * Payment card name.\n   */\n  cardName: string;\n  /**\n   * Payment card limits.\n   */\n  limits?: Array<PaymentCardLimit>;\n  additions?: { [key: string]: any };\n}\n\n/** @deprecated DEACTIVATED type is deprecated, use CANCELLED instead */\nexport type PaymentCardDisplayStateDeactivated = 'DEACTIVATED';\nexport type PaymentCardDisplayState =\n  | 'INACTIVE'\n  | 'LOCKED'\n  | 'CANCELLED'\n  | 'EXPIRED'\n  | PaymentCardDisplayStateDeactivated;\n","import { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PaymentCardDeliveryStepStatus } from './model/payment-card-delivery-status.model';\nimport { PaymentCardDeliveryStepStatusMapping } from './model/payment-card-delivery-step-status-mapping.model';\nimport { PaymentCardLimitChannelMapping } from './model/payment-card-limit-channel-mapping';\nimport { PaymentCardLockStatusMapping } from './model/payment-card-lock-status-mapping.model';\nimport {\n  PaymentCardReplacementReason,\n  PaymentCardReplacementReasonMapping,\n} from './model/payment-card-replacement-reason.model';\nimport { PaymentCardReplacementStatusMapping } from './model/payment-card-replacement-status-mapping.model';\nimport { PaymentCardStatusMapping } from './model/payment-card-status-mapping.model';\nimport { PaymentCardLockStatus, PaymentCardReplacementStatus, PaymentCardStatus } from './model/payment-card.model';\n\n/**\n * Timeout for the notification\n */\nexport const notificationTtl = 5000;\n\n/**\n * The default mapping of backend values to internal model representation for card status.  This\n * mapping can be overridden per app.\n */\n// prettier-ignore\nexport const defaultStatusMapping: PaymentCardStatusMapping = {\n  'Active': PaymentCardStatus.Active,\n  'Inactive': PaymentCardStatus.Inactive,\n  'Cancelled': PaymentCardStatus.Canceled,\n  'Expired': PaymentCardStatus.Expired,\n};\n\n/**\n * The default mapping of backend values to internal model representation for card replacement\n * status.  This mapping can be overridden per app.\n */\n// prettier-ignore\nexport const defaultReplacementStatusMapping: PaymentCardReplacementStatusMapping = {\n  'NotUnderReplacement': PaymentCardReplacementStatus.NotUnderReplacement,\n  'ReplacementRequested': PaymentCardReplacementStatus.UnderReplacement,\n  'ReplacementInTransit': PaymentCardReplacementStatus.UnderReplacement,\n  'ReplacementUnderCancellation': PaymentCardReplacementStatus.UnderReplacement,\n  'Replaced': PaymentCardReplacementStatus.Replaced,\n};\n\n/**\n * The mapping of backend values to internal model representation for card lock status.  This\n * mapping cannot be overridden (it is hardwired in the spec).\n */\n// prettier-ignore\nexport const defaultLockStatusMapping: PaymentCardLockStatusMapping = {\n  'LOCKED': PaymentCardLockStatus.Locked,\n  'UNLOCKED': PaymentCardLockStatus.Unlocked,\n};\n\n/**\n * The mapping of backend values to internal model representation for card delivery step status.\n * This mapping cannot be overridden (it is hardwired in the spec).\n */\n// prettier-ignore\nexport const defaultDeliveryStepStatusMapping: PaymentCardDeliveryStepStatusMapping = {\n  'SUCCESS': PaymentCardDeliveryStepStatus.Success,\n  'PENDING': PaymentCardDeliveryStepStatus.Pending,\n  'FAILED': PaymentCardDeliveryStepStatus.Failed,\n};\n\n/**\n * The default mapping of internal model representation to backend values for card replacement\n * reason.  This mapping can be overridden per app.\n */\nexport const defaultReplacementReasonMapping: PaymentCardReplacementReasonMapping = {\n  [PaymentCardReplacementReason.Lost]: 'Lost',\n  [PaymentCardReplacementReason.Stolen]: 'Stolen',\n  [PaymentCardReplacementReason.Damaged]: 'Damaged',\n};\n\n// prettier-ignore\nexport const defaultLimitChannelMapping: PaymentCardLimitChannelMapping = {\n  'ATM': { name: 'withdrawals', description: 'The amount you can withdraw from cash machines' },\n  'ONLINE': { name: 'online purchases', description: 'The limit for when using your card for payments online' },\n  'POS': {\n    name: 'terminal payments',\n    description: 'The limit for physical payments with your card (e.g. supermarkets, restaurants, etc.)',\n  },\n};\n\n/**\n * Enumeration of possible widget preferences\n */\nexport const WidgetProperties = {\n  NotificationTtl: 'notificationTtl',\n  updateAllLimits: 'bb.card.updateAllLimits',\n};\n\nexport const DEFAULT_PAYMENT_CARD_TYPE_GROUP = ['Credit', 'Debit'];\n\nexport const filterInputParameters = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n","import { HttpErrorResponse } from '@angular/common/http';\n\n/**\n * This interface is used by the template to display what is wrong to the user.\n */\nexport interface CardsBackendError {\n  message: string;\n  key?: string;\n  context?: { [key: string]: string };\n}\n\n/* eslint-disable no-redeclare*/\nexport namespace CardsBackendError {\n  const getMessageFromResponse = (error: HttpErrorResponse): string[] | undefined => {\n    const responseBody = error.error;\n    if (Array.isArray(responseBody && responseBody.errors)) {\n      return responseBody.errors.map((data: CardsBackendError) => {\n        const { context = {} } = data;\n        const message = data.message.replace(/{[_a-zA-Z][_a-zA-Z0-9]*}/g, (match) => {\n          const result = context[match.replace(/[\\{\\}']+/g, '')];\n\n          return result !== undefined ? result : match;\n        });\n\n        return `Error ${error.status}: ${message}`;\n      });\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @name fromHttpErrorResponse\n   * @param errorResponse The error response\n   * @returns An object containing a user-friendly error message\n   *\n   * @description\n   * Parse an HttpErrorResponse and return a CardsBackendError object that can be used to display a\n   * user-friendly error message.\n   */\n  export const fromHttpErrorResponse = (errorResponse: HttpErrorResponse): CardsBackendError => {\n    if (errorResponse.error instanceof ErrorEvent || !errorResponse.status) {\n      // Client-side or network error.\n      return {\n        message: 'An unexpected error occurred',\n      };\n    } else {\n      const error = getMessageFromResponse(errorResponse) || [];\n\n      return {\n        message: error[0] || `Error ${errorResponse.status}`,\n      };\n    }\n  };\n\n  export const fromHttpErrorsResponse = (errorResponse: HttpErrorResponse): CardsBackendError[] => {\n    if (errorResponse.error instanceof ErrorEvent || !errorResponse.status) {\n      // Client-side or network error.\n      return [\n        {\n          message: 'An unexpected error occurred',\n        },\n      ];\n    } else {\n      const errors = getMessageFromResponse(errorResponse) || [`Error ${errorResponse.status}`];\n\n      return errors.map((message) => ({ message }));\n    }\n  };\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {\n  CardItem,\n  YearMonth,\n  Delivery,\n  DeliveryTransitStep,\n  TravelNotice,\n  Destination,\n  Contact,\n  LockStatusPost,\n} from '@backbase/data-ang/cards';\n\nimport {\n  defaultReplacementStatusMapping,\n  defaultStatusMapping,\n  defaultLockStatusMapping,\n  defaultReplacementReasonMapping,\n  defaultDeliveryStepStatusMapping,\n  defaultLimitChannelMapping,\n} from '../constants';\nimport { CardsBackendError } from '../model/cards-backend-error.model';\nimport { PaymentCard, PaymentCardLockStatus, PaymentCardReplacementStatus } from '../model/payment-card.model';\nimport { PaymentCardLockStatusMapping } from '../model/payment-card-lock-status-mapping.model';\nimport { PaymentCardReplacementStatusMapping } from '../model/payment-card-replacement-status-mapping.model';\nimport { PaymentCardStatusMapping } from '../model/payment-card-status-mapping.model';\nimport { PaymentCardLimitChannelMapping } from '../model/payment-card-limit-channel-mapping';\nimport {\n  PaymentCardReplacementReason,\n  PaymentCardReplacementReasonMapping,\n} from '../model/payment-card-replacement-reason.model';\nimport { PaymentCardDeliveryStepStatus } from '../model/payment-card-delivery-status.model';\nimport { CardsBackendDestinations } from '../model/cards-backend-destination.model';\ntype CardItemList = CardItem[];\n/**\n * InjectionToken for overriding the default `PaymentCardStatusMapping` used to map backend\n * `status` values to internal status values.\n */\nexport const StatusMappingConfigToken = new InjectionToken<PaymentCardStatusMapping>('statusMapping injection token');\n\n/**\n * InjectionToken for overriding the default `PaymentCardReplacementStatusMapping` used to map\n * backend `replacementStatus` values to internal replacement status values.\n */\nexport const ReplacementStatusMappingConfigToken = new InjectionToken<PaymentCardReplacementStatusMapping>(\n  'replacementStatusMapping injection token',\n);\n\n/**\n * InjectionToken for overriding the default `PaymentCardReplacementReasonMapping` used to map\n * internal replacement reason values to backend `replacementReason` values.\n */\nexport const ReplacementReasonMappingConfigToken = new InjectionToken<PaymentCardReplacementReasonMapping>(\n  'replacementReasonMapping injection token',\n);\n\n/**\n * InjectionToken for overriding the default `limitChannelMappingConfigToken` used to map\n * internal limit channels to backend values.\n */\nexport const LimitChannelMappingConfigToken = new InjectionToken<PaymentCardLimitChannelMapping>(\n  'limitChannelMapping injection token',\n);\n\n/**\n * InjectionToken for overriding the default `CardsBackendDestinations` used to retrieve\n * countries from either a content-manager or database or any other third party.\n */\nexport const DestinationsServiceConfigToken = new InjectionToken<CardsBackendDestinations>(\n  'coutriesService injection token',\n);\n\n/**\n * @inner\n * @param maskedNumber - Number as returned in the http response\n * @returns Number\n *\n * @description\n * Process number provided by backend, removing whitespace.\n */\nfunction processNumber(maskedNumber: string) {\n  return maskedNumber.replace(/\\s/g, '');\n}\n\n/**\n * @inner\n * @param status - Status as returned in the http response\n * @param statusMapping - Mapping of http response value to model\n * @returns Mapped payment card status, of the passed status if it cannot be mapped\n *\n * @description\n * Process status provided by backend.\n */\nfunction processStatus(status: string, statusMapping: PaymentCardStatusMapping) {\n  if (statusMapping.hasOwnProperty(status)) {\n    return statusMapping[status];\n  } else {\n    return status;\n  }\n}\n\nfunction processLimitChannel(limitChannel: string = '', limitChannelMapping: PaymentCardLimitChannelMapping) {\n  if (limitChannelMapping.hasOwnProperty(limitChannel)) {\n    return limitChannelMapping[limitChannel];\n  } else {\n    return { name: limitChannel, description: '' };\n  }\n}\n\n/**\n * @inner\n * @param replacementStatus - Replacement status as returned in the http response\n * @param replacementStatusMapping - Mapping of http response value to model\n * @returns Mapped payment card replacement status, or\n * `PaymentCardReplacementStatus.NotUnderReplacement` if the passed status is empty, or the passed\n * status if it cannot be mapped\n *\n * @description\n * Process replacement status provided by backend.\n */\nfunction processReplacementStatus(\n  replacementStatus: string | undefined,\n  replacementStatusMapping: PaymentCardReplacementStatusMapping,\n) {\n  if (typeof replacementStatus === 'undefined') {\n    return PaymentCardReplacementStatus.NotUnderReplacement;\n  } else if (replacementStatusMapping.hasOwnProperty(replacementStatus)) {\n    return replacementStatusMapping[replacementStatus];\n  } else {\n    return replacementStatus;\n  }\n}\n\n/**\n * @inner\n * @param lockStatus - Lock status as returned in the http response\n * @param lockStatusMapping - Mapping of http response value to model\n * @returns Payment card lock status\n *\n * @description\n * Process lock status provided by backend.\n */\nfunction processLockStatus(lockStatus: string | undefined, lockStatusMapping: PaymentCardLockStatusMapping) {\n  if (lockStatus && lockStatusMapping.hasOwnProperty(lockStatus)) {\n    return lockStatusMapping[lockStatus];\n  } else {\n    return PaymentCardLockStatus.Unlocked;\n  }\n}\n\n/**\n * @inner\n * @param replacementReason - Replacement reason\n * @param replacementReasonMapping - Mapping of model to http POST value\n * @returns Mapped payment card replacement reason, or the passed replacement reason if it cannot\n * be mapped\n *\n * @description\n * Process replacement reason into value to pass to backend.\n */\nfunction processReplacementReason(\n  replacementReason: PaymentCardReplacementReason | string,\n  replacementReasonMapping: PaymentCardReplacementReasonMapping,\n) {\n  if (replacementReasonMapping.hasOwnProperty(replacementReason)) {\n    return replacementReasonMapping[replacementReason];\n  } else {\n    return replacementReason;\n  }\n}\n\n/**\n * @inner\n * @param deliveryStepStatus - delivery transit step status as returned in the http response\n * @returns Delivery transit step status\n *\n * @description\n * Process delivery transit step status provided by backend.\n */\nfunction processDeliveryStepStatus(deliveryStepStatus: string) {\n  if (deliveryStepStatus && defaultDeliveryStepStatusMapping.hasOwnProperty(deliveryStepStatus)) {\n    return defaultDeliveryStepStatusMapping[deliveryStepStatus];\n  } else {\n    return PaymentCardDeliveryStepStatus.Pending;\n  }\n}\n\n/**\n * @inner\n * @param deliveryStep - delivery transit step object as returned in the http response\n * @returns Delivery transit step\n *\n * @description\n * Process delivery transit step provided by backend.\n */\nfunction processDeliveryStep(deliveryStep: DeliveryTransitStep) {\n  return {\n    name: deliveryStep.name,\n    status: processDeliveryStepStatus(deliveryStep.status),\n    ...(deliveryStep.stepDateTime ? { stepDateTime: new Date(deliveryStep.stepDateTime) } : {}),\n  };\n}\n\n/**\n * @inner\n * @param delivery - delivery object as returned in the http response\n * @returns Delivery status\n *\n * @description\n * Process delivery status provided by backend.\n */\nfunction processDeliveryStatus(delivery: Delivery) {\n  return {\n    transitSteps: delivery.transitSteps.map(processDeliveryStep),\n  };\n}\n\n/**\n * @inner\n * @param yearMonth - expiration date as returned in the http response\n * @returns Date\n *\n * @description\n * Process expiration date provided by backend.\n */\nfunction processExpirationDate(yearMonth: YearMonth) {\n  return new Date(Number(yearMonth.year), Number(yearMonth.month) - 1);\n}\n\n/**\n * @name CardsBackendService\n *\n * @description\n * Utility functions for processing data returned by the backend.\n */\n@Injectable()\nexport class CardsBackendService {\n  private readonly statusMapping: PaymentCardStatusMapping;\n  private readonly replacementStatusMapping: PaymentCardReplacementStatusMapping;\n  private readonly lockStatusMapping: PaymentCardLockStatusMapping;\n  private readonly replacementReasonMapping: PaymentCardReplacementReasonMapping;\n  private readonly limitChannelMapping: PaymentCardLimitChannelMapping;\n\n  /**\n   * @name CardsBackendService#itemListToModel\n   * @param items - List of card items as returned in the http response\n   * @returns Array of payment cards\n   *\n   * @description\n   * Process data returned by the backend.\n   */\n  itemListToModel(items: CardItemList | null): Array<PaymentCard> {\n    return (items || []).map(this.itemToModel);\n  }\n\n  /**\n   * @name CardsBackendService#itemToModel\n   * @param item - Item as returned in the http response\n   * @returns Payment card\n   *\n   * @description\n   * Process payment card provided by backend.\n   */\n  // eslint-disable-next-line\n  itemToModel = (item: CardItem): PaymentCard => ({\n    id: item.id,\n    name: (item.holder && item.holder.name) || '',\n    number: processNumber(item.maskedNumber),\n    vendor: item.brand,\n    type: item.type,\n    status: processStatus(item.status, this.statusMapping),\n    replacementStatus: processReplacementStatus(\n      item.replacement && item.replacement.status,\n      this.replacementStatusMapping,\n    ),\n    lockStatus: processLockStatus(item.lockStatus, this.lockStatusMapping),\n    expirationDate: processExpirationDate(item.expiryDate || { year: '', month: '' }),\n    cardName: item.name || '',\n    ...(item.delivery ? { deliveryStatus: processDeliveryStatus(item.delivery) } : {}),\n    ...(item.subType ? { subType: item.subType } : {}),\n    ...(item.currency ? { currency: item.currency } : {}),\n    ...(item.additions ? { additions: item.additions } : {}),\n    ...(item.limits\n      ? {\n          limits: item.limits.map((limit) => ({\n            ...limit,\n            channel: processLimitChannel(limit.channel, this.limitChannelMapping),\n          })),\n        }\n      : {}),\n  });\n\n  travelNoticeToModel = (item: TravelNotice, paymentCards: PaymentCard[]) => ({\n    id: item.id,\n    cards: item.cardIds\n      .map((cardId) => paymentCards.find((card) => card.id === cardId))\n      .filter((card) => card !== undefined) as Array<PaymentCard>,\n    departureDate: new Date(item.departureDate),\n    arrivalDate: new Date(item.arrivalDate),\n    destinations: item.destinations as Destination[],\n    contact: item.contact as Contact,\n  });\n\n  /**\n   * @name CardsBackendService#getLockStatusUpdate\n   * @param lockStatus - New lock status\n   * @returns Update object to pass to `postCardsLockStatusRecordById` data module function\n   *\n   * @description\n   * Make lock status update object to pass to backend.\n   */\n  getLockStatusUpdate = (lockStatus: PaymentCardLockStatus): LockStatusPost => ({\n    lockStatus: lockStatus === PaymentCardLockStatus.Unlocked ? 'UNLOCKED' : 'LOCKED',\n  });\n\n  /**\n   * @name CardsBackendService#getReplacementUpdate\n   * @param replacementReason - Reason for the replacement\n   * @returns Update object to pass to `postCardsReplacementRecordById` data module function\n   *\n   * @description\n   * Make replacement update object to pass to backend.\n   */\n  getReplacementUpdate = (replacementReason: PaymentCardReplacementReason | string) => ({\n    replacementReason: processReplacementReason(replacementReason, this.replacementReasonMapping),\n  });\n\n  /**\n   * @name CardsBackendService#parseError\n   * @param error - The error response\n   * @returns An object containing a user-friendly error message\n   *\n   * @description\n   * Parse an HttpErrorResponse and return a CardsBackendError object that can be used to display a\n   * user-friendly error message.\n   */\n  parseError(error: HttpErrorResponse): CardsBackendError[] {\n    return CardsBackendError.fromHttpErrorsResponse(error);\n  }\n  /* eslint-disable */\n  constructor(\n    @Optional()\n    @Inject(StatusMappingConfigToken)\n    statusMapping: PaymentCardStatusMapping | undefined,\n    @Optional()\n    @Inject(ReplacementStatusMappingConfigToken)\n    replacementStatusMapping: PaymentCardReplacementStatusMapping | undefined,\n    @Optional()\n    @Inject(ReplacementReasonMappingConfigToken)\n    replacementReasonMapping: PaymentCardReplacementReasonMapping | undefined,\n    @Optional()\n    @Inject(LimitChannelMappingConfigToken)\n    limitChannelMapping: PaymentCardLimitChannelMapping | undefined,\n  ) {\n    this.statusMapping = { ...defaultStatusMapping, ...statusMapping };\n    this.replacementStatusMapping = { ...defaultReplacementStatusMapping, ...replacementStatusMapping };\n    this.lockStatusMapping = { ...defaultLockStatusMapping };\n    this.replacementReasonMapping = { ...defaultReplacementReasonMapping, ...replacementReasonMapping };\n    this.limitChannelMapping = { ...defaultLimitChannelMapping, ...limitChannelMapping };\n  }\n  /* eslint-enable */\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { CardsHttpService as ApiCardsService, TravelNotice, TravelNoticesHttpService } from '@backbase/data-ang/cards';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { catchError, distinctUntilChanged, map, publishReplay, refCount, switchMap } from 'rxjs/operators';\nimport { CardsGetParams } from '../model/cards-get-params.model';\nimport { PaymentCardLimit } from '../model/payment-card-limit.model';\nimport { PaymentCardReplacementReason } from '../model/payment-card-replacement-reason.model';\nimport {\n  PaymentCard,\n  PaymentCardLockStatus,\n  PaymentCardReplacementStatus,\n  PaymentCardStatus,\n} from '../model/payment-card.model';\nimport { FullTravelNoticeModel, TravelNotice as TravelNoticeModel } from '../model/travel-notice.model';\nimport { CardsBackendService } from './cards-backend.service';\n\nconst initialGetParams: CardsGetParams = {};\n\nconst deepEqual = (x: any, y: any): boolean =>\n  x && y && typeof x === 'object' && typeof x === typeof y\n    ? Object.keys(x).length === Object.keys(y).length && Object.keys(x).every((key) => deepEqual(x[key], y[key]))\n    : x === y;\n\nconst cacheRequest =\n  <Params, Result>(request: (params: Params) => Observable<Result>) =>\n  (source: Observable<Params>): Observable<Result> =>\n    source.pipe(switchMap(request), publishReplay(1), refCount());\n\n/**\n * @name CardsService\n *\n * @description\n * Service for retrieving cards from the backend.\n */\n@Injectable()\nexport class CardsService implements OnDestroy {\n  private readonly getParams = new BehaviorSubject<CardsGetParams>(initialGetParams);\n  private readonly paymentCards: Observable<Array<PaymentCard>> = this.getParams.pipe(\n    distinctUntilChanged(deepEqual),\n    cacheRequest((getParams) =>\n      this.cardsDataHttpService.getCards(getParams, 'response').pipe(\n        map((response) => this.cardsBackendService.itemListToModel(response.body)),\n        catchError((error) => {\n          throw this.cardsBackendService.parseError(error);\n        }),\n      ),\n    ),\n  );\n\n  private readonly travelNotice: Observable<TravelNotice[]> = this.cardsTravelNotice.getTravelNotices('response').pipe(\n    distinctUntilChanged(deepEqual),\n    map((response) => (response.body === null ? [] : response.body)),\n    catchError((error) => {\n      throw this.cardsBackendService.parseError(error);\n    }),\n  );\n\n  /**\n   * @name CardsService#getCards\n   * @returns The (single-instance) observable of payment cards retrieved from the backend.\n   *\n   * @description\n   * Returns the (single-instance) observable of payment cards retrieved from the backend.\n   */\n  getCards(): Observable<Array<PaymentCard>> {\n    return this.paymentCards;\n  }\n\n  setParameters(typesParams: Observable<string[]>) {\n    typesParams\n      .pipe(\n        map((types) => ({\n          types,\n        })),\n      )\n      .subscribe(this.getParams);\n  }\n\n  /**\n   * @name CardsService#updateLockStatus\n   * @returns An observable of the payment card with updated lock status.\n   *\n   * @description\n   * Calls the backend to change the lock status and returns an observable of updated payment card\n   * returned in the response.  If that response is empty, the existing payment card with the\n   * updated lock status is returned.\n   */\n  updateLockStatus(card: PaymentCard, lockStatus: PaymentCardLockStatus): Observable<PaymentCard> {\n    const body = this.cardsBackendService.getLockStatusUpdate(lockStatus);\n\n    return this.cardsDataHttpService.updateLockStatus({ id: card.id, lockStatusPost: body }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n              lockStatus,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  /**\n   * @name CardsService#initiateReplacement\n   * @returns An observable of the payment card with updated replacement status.\n   *\n   * @description\n   * Calls the backend to initiate replacement and returns an observable of the updated payment\n   * card returned in the response.  If the response is empty, the existing payment card with\n   * replacement status set to `UNDER_REPLACEMENT` is returned.\n   */\n  initiateReplacement(\n    card: PaymentCard,\n    replacementReason: PaymentCardReplacementReason | string,\n  ): Observable<PaymentCard> {\n    const body = this.cardsBackendService.getReplacementUpdate(replacementReason);\n\n    return this.cardsDataHttpService.requestReplacement({ id: card.id, requestReplacementPost: body }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n              replacementStatus: PaymentCardReplacementStatus.UnderReplacement,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  /**\n   * @name CardsService#initiateActivation\n   * @returns An observable of the payment card with updated status.\n   *\n   * @description\n   * Calls the backend to activate a payment card and returns an observable of the updated payment\n   * card returned in the response.  If the response is empty, the existing payment card with\n   * status set to `ACTIVE` is returned.\n   */\n  initiateActivation(card: PaymentCard, token: string): Observable<PaymentCard> {\n    const body = { token };\n\n    return this.cardsDataHttpService.activate({ id: card.id, activatePost: body }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n              status: PaymentCardStatus.Active,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  /**\n   * @name CardsService#updateLimit\n   * @returns An observable of the payment card with updated limits.\n   *\n   * @description\n   * Calls the backend to update a payment card and returns an observable of the updated payment\n   * card returned in the response.  If the response is empty, the existing payment card with\n   * limits updated is returned.\n   */\n  updateLimit(card: PaymentCard, limit: Array<PaymentCardLimit>, updateAllLimits?: boolean): Observable<PaymentCard> {\n    const limitPayload = updateAllLimits\n      ? limit\n      : limit.filter((newLimitItem, index) => newLimitItem.amount !== card.limits?.[index].amount);\n\n    return this.cardsDataHttpService.changeLimits({ id: card.id, changeLimitsPostItem: limitPayload }, 'response').pipe(\n      map((response) => {\n        const limits =\n          card.limits &&\n          card.limits.map((item: PaymentCardLimit, index: number) => ({\n            ...item,\n            amount: limit[index].amount,\n          }));\n\n        return response.body === null\n          ? {\n              ...card,\n              limits,\n            }\n          : this.cardsBackendService.itemToModel(response.body);\n      }),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  resetPIN(card: PaymentCard, paymentCardResetPin: any): Observable<PaymentCard> {\n    return this.cardsDataHttpService.resetPin({ id: card.id, resetPinPost: paymentCardResetPin }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  requestPIN(card: PaymentCard, paymentCardResetPin: any): Observable<PaymentCard> {\n    return this.cardsDataHttpService.requestPin({ id: card.id, requestPinPost: paymentCardResetPin }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  /**\n   *  Modified - added a observable to only respond with active cards.\n   *\n   * @returns Observable with all travel notices and payment cards with\n   * status active\n   */\n  getTravelNotice(): Observable<FullTravelNoticeModel> {\n    const activeCards = this.paymentCards.pipe(\n      map((cards: Array<PaymentCard>) => cards.filter((card: PaymentCard) => card.status === PaymentCardStatus.Active)),\n    );\n\n    return combineLatest([activeCards, this.travelNotice]).pipe(\n      map(([paymentCards, travelNotice]) => ({\n        travelNoticeList: travelNotice.map((item) => this.cardsBackendService.travelNoticeToModel(item, paymentCards)),\n        paymentCards,\n      })),\n    );\n  }\n\n  postTravelNotice(travelNoticeItem: TravelNoticeModel): Observable<TravelNotice> {\n    const { cards, ...otherTravelNoticeProperties } = travelNoticeItem;\n    const travelNoticeData = { ...otherTravelNoticeProperties, cardIds: cards.map((item) => item.id) } as any;\n\n    return this.cardsTravelNotice.createTravelNotice({ travelNotice: travelNoticeData });\n  }\n\n  deleteTravelNotice(travelNoticeItem: TravelNoticeModel): Observable<HttpResponse<any>> {\n    const { id } = travelNoticeItem;\n    if (!id) throw new Error('Error no matching id');\n\n    return this.cardsTravelNotice.deleteTravelNoticeById({ id }, 'response');\n  }\n\n  ngOnDestroy() {\n    this.getParams.complete();\n  }\n\n  constructor(\n    private readonly cardsDataHttpService: ApiCardsService,\n    private readonly cardsBackendService: CardsBackendService,\n    private readonly cardsTravelNotice: TravelNoticesHttpService,\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputInlineEditModule } from '@backbase/ui-ang/input-inline-edit';\nimport { InputPasswordModule } from '@backbase/ui-ang/input-password';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { PaymentCardModule } from '@backbase/ui-ang/payment-card';\nimport { AccessibilityKeyboardDirective } from './components/bb-payment-card-container-base/accessibility-keyboard.directive';\nimport { DeliveryTrackerComponent } from './components/bb-payment-card-delivery-status/delivery-tracker.component';\nimport {\n  CardsDeliveryStatusCustomizableDirective,\n  PaymentCardDeliveryStatusComponent,\n} from './components/bb-payment-card-delivery-status/payment-card-delivery-status.component';\nimport {\n  CardsInitiateActivationCustomizableDirective,\n  CardsInitiateActivationFormCustomizableDirective,\n  PaymentCardInitiateActivationComponent,\n} from './components/bb-payment-card-initiate-activation/payment-card-initiate-activation.component';\nimport {\n  CardsInitiateReplacementCustomizableDirective,\n  CardsInitiateReplacementFormCustomizableDirective,\n  PaymentCardInitiateReplacementComponent,\n} from './components/bb-payment-card-initiate-replacement/payment-card-initiate-replacement.component';\nimport {\n  CardsUpdateLimitCustomizableDirective,\n  PaymentCardLimitComponent,\n} from './components/bb-payment-card-limits/payment-card-limit.component';\nimport {\n  CardsUpdateLimitsCustomizableDirective,\n  PaymentCardLimitsComponent,\n} from './components/bb-payment-card-limits/payment-card-limits.component';\nimport {\n  CardsMultipleErrorStateCustomizableDirective,\n  PaymentCardMultipleErrorStateComponent,\n} from './components/bb-payment-card-multiple-error-state/payment-card-multiple-error-state.component';\nimport {\n  CardsResetPinConfirmationCustomizableDirective,\n  CardsResetPinCustomizableDirective,\n  CardsResetPinFormCustomizableDirective,\n  CardsResetPinNewPinCustomizableDirective,\n  PaymentCardResetPinComponent,\n} from './components/bb-payment-card-reset-pin/payment-card-reset-pin.component';\nimport { PaymentCardStateWrapperComponent } from './components/bb-payment-card-state-wrapper-ui/payment-card-state-wrapper.component';\nimport { CardsBackendService } from './services/cards-backend.service';\nimport { CardsService } from './services/cards.service';\n\nconst modules = [\n  BadgeModule,\n  ButtonModule,\n  IconModule,\n  InputPasswordModule,\n  InputRadioGroupModule,\n  LoadButtonModule,\n  ModalModule,\n  InputInlineEditModule,\n  InputValidationMessageModule,\n  AlertModule,\n  PaymentCardModule,\n  AmountModule,\n  FocusModule,\n  EmptyStateModule,\n  LoadingIndicatorModule,\n];\n\nconst components = [\n  PaymentCardMultipleErrorStateComponent,\n  PaymentCardStateWrapperComponent,\n  PaymentCardInitiateReplacementComponent,\n  PaymentCardInitiateActivationComponent,\n  PaymentCardDeliveryStatusComponent,\n  DeliveryTrackerComponent,\n  PaymentCardLimitsComponent,\n  PaymentCardLimitComponent,\n  PaymentCardResetPinComponent,\n  AccessibilityKeyboardDirective,\n];\n\nconst directives = [\n  CardsInitiateActivationCustomizableDirective,\n  CardsInitiateActivationFormCustomizableDirective,\n  CardsInitiateReplacementCustomizableDirective,\n  CardsInitiateReplacementFormCustomizableDirective,\n  CardsDeliveryStatusCustomizableDirective,\n  CardsUpdateLimitsCustomizableDirective,\n  CardsResetPinCustomizableDirective,\n  CardsResetPinFormCustomizableDirective,\n  CardsResetPinConfirmationCustomizableDirective,\n  CardsResetPinNewPinCustomizableDirective,\n  CardsUpdateLimitCustomizableDirective,\n  CardsMultipleErrorStateCustomizableDirective,\n];\n\nconst services = [CardsBackendService, CardsService];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, ...modules],\n  providers: [...services],\n  declarations: [...components, ...directives],\n  exports: [...modules, ...components, ...directives],\n})\nexport class CardsCommonModule {}\n","import { ChangeDetectorRef, Directive, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { Notification, NotificationService } from '@backbase/ui-ang/notification';\nimport { PaymentCardLimit } from '../../model/payment-card-limit.model';\nimport { PaymentCardReplacementReason } from '../../model/payment-card-replacement-reason.model';\nimport { PaymentCardResetPinTransport } from '../../model/payment-card-reset-pin.model';\nimport { PaymentCard, PaymentCardLockStatus } from '../../model/payment-card.model';\nimport { CardsService } from '../../services/cards.service';\n\nconst baseNotification: Notification = {\n  header: '',\n  message: '',\n  dismissible: true,\n  modifier: 'success',\n};\n\n@Directive()\n// eslint-disable-next-line\nexport class PaymentCardContainerBase implements OnInit {\n  /**\n   * Notification messages translations\n   */\n\n  protected localizations: { [key: string]: TemplateRef<any> | string } = {\n    activationErrorHeader: '',\n    activationErrorMessage: '',\n    activationSuccessHeader: '',\n    lockErrorHeader: '',\n    lockErrorMessage: '',\n    lockSuccessHeader: '',\n    lockSuccessMessage: '',\n    replacementErrorHeader: '',\n    replacementErrorMessage: '',\n    replacementSuccessHeader: '',\n    replacementSuccessMessage: '',\n    requestNewPinSuccessMessage: '',\n    requestPinErrorMessage: '',\n    resetPinSuccessMessage: '',\n    resetPinErrorMessage: '',\n    resetInvalidPinMessage: '',\n    unlockErrorHeader: '',\n    unlockErrorMessage: '',\n    unlockSuccessHeader: '',\n    unlockSuccessMessage: '',\n    updateLimitErrorHeader: '',\n    updateLimitErrorMessage: '',\n    updateLimitSuccessHeader: '',\n    updateLimitSuccessMessage: '',\n  };\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n\n  @Input() notificationTtl: number | undefined;\n  @Input() updateAllLimits: boolean | undefined;\n  /**\n   * Event emitter for selecting a card.\n   */\n  @Output() readonly selectCard = new EventEmitter<PaymentCard>();\n\n  isLockLoading = false;\n  isInitiateReplacementLoading = false;\n  isInitiateActivationLoading = false;\n  isResetPinLoading = false;\n  isLimitsLoading = false;\n\n  constructor(\n    protected readonly cardsService: CardsService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {}\n\n  private showNotification(notification: Partial<Notification>) {\n    this.notificationService.showNotification({\n      ...baseNotification,\n      ttl: this.notificationTtl,\n      ...notification,\n    });\n  }\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  onUpdateLockStatus(lockStatus: PaymentCardLockStatus) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isLockLoading = true;\n\n    const onUpdateLockStatusSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        const header =\n          lockStatus === PaymentCardLockStatus.Locked\n            ? this.localizations.lockSuccessHeader\n            : this.localizations.unlockSuccessHeader;\n        const message =\n          lockStatus === PaymentCardLockStatus.Locked\n            ? this.localizations.lockSuccessMessage\n            : this.localizations.unlockSuccessMessage;\n\n        this.showNotification({\n          header,\n          message,\n        });\n      }\n    };\n\n    const onUpdateLockStatusError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        const header =\n          lockStatus === PaymentCardLockStatus.Locked\n            ? this.localizations.lockErrorHeader\n            : this.localizations.unlockErrorHeader;\n        const message =\n          lockStatus === PaymentCardLockStatus.Locked\n            ? this.localizations.lockErrorMessage\n            : this.localizations.unlockErrorMessage;\n\n        this.showNotification({\n          header,\n          message,\n          modifier: 'error',\n        });\n      }\n\n      this.isLockLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onUpdateLockStatusComplete = () => {\n      this.isLockLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .updateLockStatus(this.paymentCard, lockStatus)\n      .subscribe(onUpdateLockStatusSuccess, onUpdateLockStatusError, onUpdateLockStatusComplete);\n  }\n\n  onInitiateReplacement(reason: PaymentCardReplacementReason | string) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isInitiateReplacementLoading = true;\n\n    const onInitiateReplacementSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          header: this.localizations.replacementSuccessHeader,\n          message: this.localizations.replacementSuccessMessage,\n        });\n      }\n    };\n\n    const onInitiateReplacementError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.showNotification({\n          header: this.localizations.replacementErrorHeader,\n          message: this.localizations.replacementErrorMessage,\n          modifier: 'error',\n        });\n      }\n\n      this.isInitiateReplacementLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onInitiateReplacementComplete = () => {\n      this.isInitiateReplacementLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .initiateReplacement(this.paymentCard, reason)\n      .subscribe(onInitiateReplacementSuccess, onInitiateReplacementError, onInitiateReplacementComplete);\n  }\n\n  onInitiateActivation(token: string) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isInitiateActivationLoading = true;\n\n    const onInitiateActivationSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          header: this.localizations.activationSuccessHeader,\n        });\n      }\n    };\n\n    const onInitiateActivationError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.showNotification({\n          header: this.localizations.activationErrorHeader,\n          message: this.localizations.activationErrorMessage,\n          modifier: 'error',\n        });\n      }\n\n      this.isInitiateActivationLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onInitiateActivationComplete = () => {\n      this.isInitiateActivationLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .initiateActivation(this.paymentCard, token)\n      .subscribe(onInitiateActivationSuccess, onInitiateActivationError, onInitiateActivationComplete);\n  }\n\n  onUpdateLimit(limit: Array<PaymentCardLimit>) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n    this.isLimitsLoading = true;\n\n    const onUpdateLimitSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          header: this.localizations.updateLimitSuccessHeader,\n          message: this.localizations.updateLimitSuccessMessage,\n        });\n      }\n    };\n\n    const onUpdateLimitError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.notificationService.showNotification({\n          ...baseNotification,\n          header: this.localizations.updateLimitErrorHeader,\n          message: this.localizations.updateLimitErrorMessage,\n          modifier: 'error',\n        });\n      }\n      this.isLimitsLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onUpdateLimitComplete = () => {\n      this.isLimitsLoading = false;\n      this.cd.markForCheck();\n    };\n    this.cardsService\n      .updateLimit(this.paymentCard, limit, this.updateAllLimits)\n      .subscribe(onUpdateLimitSuccess, onUpdateLimitError, onUpdateLimitComplete);\n  }\n\n  onResetPin(token: PaymentCardResetPinTransport) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isResetPinLoading = true;\n\n    if (token.raw.pin2 !== undefined && token.raw.pin !== token.raw.pin2) {\n      this.isResetPinLoading = false;\n      this.showNotification({\n        message: this.localizations.resetInvalidPinMessage,\n        modifier: 'error',\n      });\n\n      return;\n    }\n\n    const onResetPinSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          message: this.localizations.resetPinSuccessMessage,\n        });\n      }\n    };\n\n    const onResetPinError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.showNotification({\n          message: this.localizations.resetPinErrorMessage,\n          modifier: 'error',\n        });\n      }\n      this.isResetPinLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onResetPinComplete = () => {\n      this.isResetPinLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .resetPIN(this.paymentCard, token.model)\n      .subscribe(onResetPinSuccess, onResetPinError, onResetPinComplete);\n  }\n\n  onRequestPin(token: PaymentCardResetPinTransport) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isResetPinLoading = true;\n\n    const onRequestPinSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          message: this.localizations.requestNewPinSuccessMessage,\n        });\n      }\n    };\n\n    const onRequestPinError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.showNotification({\n          message: this.localizations.requestPinErrorMessage,\n          modifier: 'error',\n        });\n      }\n      this.isResetPinLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onRequestPinComplete = () => {\n      this.isResetPinLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .requestPIN(this.paymentCard, token.model)\n      .subscribe(onRequestPinSuccess, onRequestPinError, onRequestPinComplete);\n  }\n\n  onOpenDetails() {\n    if (typeof this.paymentCard !== 'undefined') {\n      this.selectCard.emit(this.paymentCard);\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PaymentCardReplacementReason } from '../../model/payment-card-replacement-reason.model';\nimport { PaymentCardResetPinTransport, ResetPinModeEnum } from '../../model/payment-card-reset-pin.model';\nimport { PaymentCard, PaymentCardLockStatus } from '../../model/payment-card.model';\n\n@Directive()\n// eslint-disable-next-line\nexport class PaymentCardControlsBase implements OnInit {\n  /**\n   * Payment card item this component controls.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Whether lock status is being updated.\n   */\n  @Input() isLockLoading = false;\n  /**\n   * Whether card replacement has been initiated.\n   */\n  @Input() isInitiateReplacementLoading = false;\n  /**\n   * Whether card replacement has been initiated.\n   */\n  @Input() isInitiateActivationLoading = false;\n  /**\n   * Whether card change pin has been initiated.\n   */\n  @Input() isResetPinLoading = false;\n  /**\n   * Event to update the lock status of the payment card.\n   */\n  @Output() readonly updateLockStatus = new EventEmitter<PaymentCardLockStatus>();\n  /**\n   * Event to initiate replacement of the payment card.\n   */\n  @Output() readonly initiateReplacement = new EventEmitter<PaymentCardReplacementReason | string>();\n  /**\n   * Event to initiate activation of the payment card.\n   */\n  @Output() readonly initiateActivation = new EventEmitter<string>();\n  /**\n   * Event to initiate reset pin of the payment card.\n   */\n  @Output() readonly resetPin = new EventEmitter<PaymentCardResetPinTransport>();\n  /**\n   * Event to initiate requestPin pin of the payment card.\n   */\n  @Output() readonly requestPin = new EventEmitter<PaymentCardResetPinTransport>();\n\n  readonly hostRef = this;\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n  onLock() {\n    this.updateLockStatus.emit(PaymentCardLockStatus.Locked);\n  }\n\n  onUnlock() {\n    this.updateLockStatus.emit(PaymentCardLockStatus.Unlocked);\n  }\n\n  get isLocked() {\n    return this.paymentCard && this.paymentCard.lockStatus === PaymentCardLockStatus.Locked;\n  }\n\n  get resetPinMode() {\n    if (this.paymentCard) {\n      if (this.paymentCard.type === 'Credit') {\n        return ResetPinModeEnum.Request;\n      }\n\n      return ResetPinModeEnum.Reset;\n    }\n\n    return '';\n  }\n\n  onInitiateReplacement(replacementReason: PaymentCardReplacementReason | string) {\n    this.initiateReplacement.emit(replacementReason);\n  }\n\n  onInitiateActivation(token: string) {\n    this.initiateActivation.emit(token);\n  }\n\n  onResetPin(token: PaymentCardResetPinTransport) {\n    this.resetPin.emit(token);\n  }\n\n  onRequestPin(token: PaymentCardResetPinTransport) {\n    this.requestPin.emit(token);\n  }\n}\n","import { PaymentCard } from './payment-card.model';\n\nexport interface TravelNoticeCountry {\n  country: string;\n  region?: string;\n}\n\nexport interface TravelNoticeContact {\n  phoneNumber?: string;\n}\n\nexport interface TravelNotice {\n  id?: string;\n  cards: PaymentCard[];\n  departureDate: Date | string;\n  arrivalDate: Date | string;\n  destinations: TravelNoticeCountry[];\n  contact?: TravelNoticeContact;\n  additions?: { [key: string]: any };\n}\n\nexport type TravelNoticeList = TravelNotice[];\n\nexport interface FullTravelNoticeModel {\n  travelNoticeList?: TravelNoticeList;\n  paymentCards?: PaymentCard[];\n}\n\nexport interface Destination {\n  name: string;\n  code: string;\n  regions?: Array<{\n    name: string;\n    code: string;\n  }>;\n}\n\nexport function getCountryName(destinationList: Destination[] | undefined, { country, region }: TravelNoticeCountry) {\n  if (!destinationList) {\n    return country;\n  }\n\n  const destinationCountry = destinationList.find((item) => item.code === country);\n\n  if (destinationCountry && region) {\n    const destinationRegion =\n      destinationCountry.regions && destinationCountry.regions.find((item) => item.code === region);\n\n    return destinationRegion ? `${destinationRegion.name} (${destinationCountry.code})` : destinationCountry.name;\n  }\n\n  return destinationCountry ? destinationCountry.name : country;\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { notificationTtl, WidgetProperties } from '../constants';\n\n@Injectable()\nexport class BaseWidgetPropertiesService {\n  get notificationTtl(): Observable<number> {\n    return this.itemModel\n      ? this.itemModel.property(WidgetProperties.NotificationTtl).pipe(\n          map((propertyValue) => parseInt(propertyValue as string, 10)),\n          map((ttl) => (ttl !== undefined && !isNaN(ttl) && ttl > 0 ? ttl : notificationTtl)),\n        )\n      : of(notificationTtl);\n  }\n\n  get updateAllLimits(): Observable<boolean> {\n    return this.itemModel\n      ? this.itemModel\n          .property(WidgetProperties.updateAllLimits)\n          .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')))\n      : of(false);\n  }\n\n  constructor(@Optional() protected readonly itemModel: ItemModel) {}\n}\n","import { Injectable } from '@angular/core';\nimport { CardsHttpService } from '@backbase/data-ang/cards';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, filter, map, publishReplay, refCount, switchMap } from 'rxjs/operators';\nimport { PaymentCard } from '../model/payment-card.model';\nimport { CardsBackendService } from './cards-backend.service';\n\nconst cacheRequest =\n  <Params, Result>(request: (params: Params) => Observable<Result>) =>\n  (source: Observable<Params>): Observable<Result> =>\n    source.pipe(switchMap(request), publishReplay(1), refCount());\n\n/**\n * @name CardService\n *\n * @description\n * Service for retrieving and updating a single card from the backend.\n */\n@Injectable()\nexport class CardService {\n  private readonly paymentCardId = new ReplaySubject<string>(1);\n\n  private readonly paymentCard: Observable<PaymentCard> = this.paymentCardId.pipe(\n    distinctUntilChanged(),\n    filter((paymentCardId) => typeof paymentCardId !== 'undefined'),\n    cacheRequest((paymentCardId) =>\n      this.cardsDataHttpService.getCardById({ id: paymentCardId }, 'response').pipe(\n        map((response) => {\n          if (response.body === null) {\n            throw new Error('Some error message');\n          }\n\n          return this.cardsBackendService.itemToModel(response.body);\n        }),\n        catchError((error) => {\n          throw this.cardsBackendService.parseError(error);\n        }),\n      ),\n    ),\n  );\n\n  getPaymentCardFrom(paymentCardId: Observable<string>) {\n    paymentCardId.subscribe(this.paymentCardId);\n  }\n\n  getPaymentCard() {\n    return this.paymentCard;\n  }\n\n  constructor(\n    private readonly cardsDataHttpService: CardsHttpService,\n    private readonly cardsBackendService: CardsBackendService,\n  ) {}\n}\n","import { Destination } from '../model/travel-notice.model';\n\nexport default [\n  { code: 'ABW', name: 'Aruba' },\n  { code: 'AFG', name: 'Afghanistan' },\n  { code: 'AGO', name: 'Angola' },\n  { code: 'ALB', name: 'Albania' },\n  { code: 'AND', name: 'Andorra' },\n  { code: 'ARE', name: 'United Arab Emirates' },\n  { code: 'ARG', name: 'Argentina' },\n  { code: 'ARM', name: 'Armenia' },\n  { code: 'ASM', name: 'American Samoa' },\n  { code: 'ATG', name: 'Antigua and Barbuda' },\n  { code: 'AUS', name: 'Australia' },\n  { code: 'AUT', name: 'Austria' },\n  { code: 'AZE', name: 'Azerbaijan' },\n  { code: 'BDI', name: 'Burundi' },\n  { code: 'BEL', name: 'Belgium' },\n  { code: 'BEN', name: 'Benin' },\n  { code: 'BFA', name: 'Burkina Faso' },\n  { code: 'BGD', name: 'Bangladesh' },\n  { code: 'BGR', name: 'Bulgaria' },\n  { code: 'BHR', name: 'Bahrain' },\n  { code: 'BHS', name: 'The Bahamas' },\n  { code: 'BIH', name: 'Bosnia and Herzegovina' },\n  { code: 'BLR', name: 'Belarus' },\n  { code: 'BLZ', name: 'Belize' },\n  { code: 'BMU', name: 'Bermuda' },\n  { code: 'BOL', name: 'Bolivia' },\n  { code: 'BRA', name: 'Brazil' },\n  { code: 'BRB', name: 'Barbados' },\n  { code: 'BRN', name: 'Brunei Darussalam' },\n  { code: 'BTN', name: 'Bhutan' },\n  { code: 'BWA', name: 'Botswana' },\n  { code: 'CAF', name: 'Central African Republic' },\n  {\n    code: 'CAN',\n    name: 'Canada',\n    regions: [\n      { code: 'CA-AB', name: 'Alberta' },\n      { code: 'CA-BC', name: 'British Columbia' },\n      { code: 'CA-MB', name: 'Manitoba' },\n      { code: 'CA-NB', name: 'New Brunswick' },\n      { code: 'CA-NL', name: 'Newfoundland and Labrador' },\n      { code: 'CA-NS', name: 'Nova Scotia' },\n      { code: 'CA-ON', name: 'Ontario' },\n      { code: 'CA-PE', name: 'Prince Edward Island' },\n      { code: 'CA-QC', name: 'Quebec' },\n      { code: 'CA-SK', name: 'Saskatchewan' },\n      { code: 'CA-NT', name: 'Northwest Territories' },\n      { code: 'CA-NU', name: 'Nunavut' },\n      { code: 'CA-YT', name: 'Yukon' },\n    ],\n  },\n  { code: 'CHE', name: 'Switzerland' },\n  { code: 'CHL', name: 'Chile' },\n  { code: 'CHN', name: 'China' },\n  { code: 'CIV', name: \"Cote d'Ivoire\" },\n  { code: 'CMR', name: 'Cameroon' },\n  { code: 'COD', name: 'Democratic Republic of Congo' },\n  { code: 'COG', name: 'Republic of Congo' },\n  { code: 'COL', name: 'Colombia' },\n  { code: 'COM', name: 'Comoros' },\n  { code: 'CPV', name: 'Cabo Verde' },\n  { code: 'CRI', name: 'Costa Rica' },\n  { code: 'CUB', name: 'Cuba' },\n  { code: 'CUW', name: 'Curacao' },\n  { code: 'CYM', name: 'Cayman Islands' },\n  { code: 'CYP', name: 'Cyprus' },\n  { code: 'CZE', name: 'Czech Republic' },\n  { code: 'DEU', name: 'Germany' },\n  { code: 'DJI', name: 'Djibouti' },\n  { code: 'DMA', name: 'Dominica' },\n  { code: 'DNK', name: 'Denmark' },\n  { code: 'DOM', name: 'Dominican Republic' },\n  { code: 'DZA', name: 'Algeria' },\n  { code: 'ECU', name: 'Ecuador' },\n  { code: 'EGY', name: 'Egypt' },\n  { code: 'ERI', name: 'Eritrea' },\n  { code: 'ESP', name: 'Spain' },\n  { code: 'EST', name: 'Estonia' },\n  { code: 'ETH', name: 'Ethiopia' },\n  { code: 'FIN', name: 'Finland' },\n  { code: 'FJI', name: 'Fiji' },\n  { code: 'FRA', name: 'France' },\n  { code: 'FRO', name: 'Faroe Islands' },\n  { code: 'GAB', name: 'Gabon' },\n  { code: 'GBR', name: 'United Kingdom' },\n  { code: 'GEO', name: 'Georgia' },\n  { code: 'GHA', name: 'Ghana' },\n  { code: 'GIB', name: 'Gibraltar' },\n  { code: 'GIN', name: 'Guinea' },\n  { code: 'GMB', name: 'The Gambia' },\n  { code: 'GNB', name: 'Guinea-Bissau' },\n  { code: 'GNQ', name: 'Equatorial Guinea' },\n  { code: 'GRC', name: 'Greece' },\n  { code: 'GRD', name: 'Grenada' },\n  { code: 'GRL', name: 'Greenland' },\n  { code: 'GTM', name: 'Guatemala' },\n  { code: 'GUM', name: 'Guam' },\n  { code: 'GUY', name: 'Guyana' },\n  { code: 'HKG', name: 'Hong Kong' },\n  { code: 'HND', name: 'Honduras' },\n  { code: 'HRV', name: 'Croatia' },\n  { code: 'HTI', name: 'Haiti' },\n  { code: 'HUN', name: 'Hungary' },\n  { code: 'IDN', name: 'Indonesia' },\n  { code: 'IMN', name: 'Isle of Man' },\n  { code: 'IND', name: 'India' },\n  { code: 'IRL', name: 'Ireland' },\n  { code: 'IRN', name: 'Islamic Republic of Iran' },\n  { code: 'IRQ', name: 'Iraq' },\n  { code: 'ISL', name: 'Iceland' },\n  { code: 'ISR', name: 'Israel' },\n  { code: 'ITA', name: 'Italy' },\n  { code: 'JAM', name: 'Jamaica' },\n  { code: 'JOR', name: 'Jordan' },\n  { code: 'JPN', name: 'Japan' },\n  { code: 'KAZ', name: 'Kazakhstan' },\n  { code: 'KEN', name: 'Kenya' },\n  { code: 'KGZ', name: 'Kyrgyz Republic' },\n  { code: 'KHM', name: 'Cambodia' },\n  { code: 'KIR', name: 'Kiribati' },\n  { code: 'KNA', name: 'St. Kitts and Nevis' },\n  { code: 'KOR', name: 'Republic of Korea' },\n  { code: 'KWT', name: 'Kuwait' },\n  { code: 'LBN', name: 'Lebanon' },\n  { code: 'LBR', name: 'Liberia' },\n  { code: 'LKA', name: 'Sri Lanka' },\n  { code: 'LBY', name: 'Libya' },\n  { code: 'LCA', name: 'St. Lucia' },\n  { code: 'LIE', name: 'Liechtenstein' },\n  { code: 'LSO', name: 'Lesotho' },\n  { code: 'LTU', name: 'Lithuania' },\n  { code: 'LUX', name: 'Luxembourg' },\n  { code: 'LVA', name: 'Latvia' },\n  { code: 'MAF', name: 'St. Martin (French part)' },\n  { code: 'MAR', name: 'Morocco' },\n  { code: 'MCO', name: 'Monaco' },\n  { code: 'MDA', name: 'Moldova' },\n  { code: 'MRT', name: 'Mauritania' },\n  { code: 'MUS', name: 'Mauritius' },\n  { code: 'MWI', name: 'Malawi' },\n  { code: 'MYS', name: 'Malaysia' },\n  { code: 'NAM', name: 'Namibia' },\n  { code: 'NCL', name: 'New Caledonia' },\n  { code: 'NER', name: 'Niger' },\n  { code: 'NGA', name: 'Nigeria' },\n  { code: 'NIC', name: 'Nicaragua' },\n  { code: 'NLD', name: 'Netherlands' },\n  { code: 'NOR', name: 'Norway' },\n  { code: 'NPL', name: 'Nepal' },\n  { code: 'NRU', name: 'Nauru' },\n  { code: 'NZL', name: 'New Zealand' },\n  { code: 'OMN', name: 'Oman' },\n  { code: 'PAK', name: 'Pakistan' },\n  { code: 'PAN', name: 'Panama' },\n  { code: 'PER', name: 'Peru' },\n  { code: 'PHL', name: 'Philippines' },\n  { code: 'PLW', name: 'Palau' },\n  { code: 'PNG', name: 'Papua New Guinea' },\n  { code: 'POL', name: 'Poland' },\n  { code: 'PRI', name: 'Puerto Rico' },\n  { code: 'PRK', name: \"Democratic People's Republic of Korea\" },\n  { code: 'PRT', name: 'Portugal' },\n  { code: 'PRY', name: 'Paraguay' },\n  { code: 'PSE', name: 'West Bank and Gaza' },\n  { code: 'QAT', name: 'Qatar' },\n  { code: 'ROU', name: 'Romania' },\n  { code: 'RUS', name: 'Russian Federation' },\n  { code: 'RWA', name: 'Rwanda' },\n  { code: 'SAU', name: 'Saudi Arabia' },\n  { code: 'SDN', name: 'Sudan' },\n  { code: 'SEN', name: 'Senegal' },\n  { code: 'SGP', name: 'Singapore' },\n  { code: 'SLB', name: 'Solomon Islands' },\n  { code: 'SLE', name: 'Sierra Leone' },\n  { code: 'SLV', name: 'El Salvador' },\n  { code: 'SMR', name: 'San Marino' },\n  { code: 'SOM', name: 'Somalia' },\n  { code: 'SRB', name: 'Serbia' },\n  { code: 'SSD', name: 'South Sudan' },\n  { code: 'STP', name: 'Sao Tome and Principe' },\n  { code: 'SUR', name: 'Suriname' },\n  { code: 'SVK', name: 'Slovak Republic' },\n  { code: 'SVN', name: 'Slovenia' },\n  { code: 'SWE', name: 'Sweden' },\n  { code: 'SWZ', name: 'Eswatini' },\n  { code: 'SXM', name: 'Sint Maarten (Dutch part)' },\n  { code: 'SYC', name: 'Seychelles' },\n  { code: 'SYR', name: 'Syrian Arab Republic' },\n  { code: 'TCA', name: 'Turks and Caicos Islands' },\n  { code: 'TCD', name: 'Chad' },\n  { code: 'TGO', name: 'Togo' },\n  { code: 'THA', name: 'Thailand' },\n  { code: 'TJK', name: 'Tajikistan' },\n  { code: 'TKM', name: 'Turkmenistan' },\n  { code: 'TLS', name: 'Timor-Leste' },\n  { code: 'TON', name: 'Tonga' },\n  { code: 'TTO', name: 'Trinidad and Tobago' },\n  { code: 'TUN', name: 'Tunisia' },\n  { code: 'TUR', name: 'Turkey' },\n  { code: 'TUV', name: 'Tuvalu' },\n  { code: 'TWN', name: 'Taiwan' },\n  { code: 'TZA', name: 'Tanzania' },\n  { code: 'UGA', name: 'Uganda' },\n  { code: 'UKR', name: 'Ukraine' },\n  { code: 'URY', name: 'Uruguay' },\n  {\n    code: 'USA',\n    name: 'United States',\n    regions: [\n      { code: 'US-AL', name: 'Alabama' },\n      { code: 'US-AK', name: 'Alaska' },\n      { code: 'US-AZ', name: 'Arizona' },\n      { code: 'US-AR', name: 'Arkansas' },\n      { code: 'US-CA', name: 'California' },\n      { code: 'US-CO', name: 'Colorado' },\n      { code: 'US-CT', name: 'Connecticut' },\n      { code: 'US-DE', name: 'Delaware' },\n      { code: 'US-FL', name: 'Florida' },\n      { code: 'US-GA', name: 'Georgia' },\n      { code: 'US-HI', name: 'Hawaii' },\n      { code: 'US-ID', name: 'Idaho' },\n      { code: 'US-IL', name: 'Illinois' },\n      { code: 'US-IN', name: 'Indiana' },\n      { code: 'US-IA', name: 'Iowa' },\n      { code: 'US-KS', name: 'Kansas' },\n      { code: 'US-KY', name: 'Kentucky' },\n      { code: 'US-LA', name: 'Louisiana' },\n      { code: 'US-ME', name: 'Maine' },\n      { code: 'US-MD', name: 'Maryland' },\n      { code: 'US-MA', name: 'Massachusetts' },\n      { code: 'US-MI', name: 'Michigan' },\n      { code: 'US-MN', name: 'Minnesota' },\n      { code: 'US-MS', name: 'Mississippi' },\n      { code: 'US-MO', name: 'Missouri' },\n      { code: 'US-MT', name: 'Montana' },\n      { code: 'US-NE', name: 'Nebraska' },\n      { code: 'US-NV', name: 'Nevada' },\n      { code: 'US-NH', name: 'New Hampshire' },\n      { code: 'US-NJ', name: 'New Jersey' },\n      { code: 'US-NM', name: 'New Mexico' },\n      { code: 'US-NY', name: 'New York' },\n      { code: 'US-NC', name: 'North Carolina' },\n      { code: 'US-ND', name: 'North Dakota' },\n      { code: 'US-OH', name: 'Ohio' },\n      { code: 'US-OK', name: 'Oklahoma' },\n      { code: 'US-OR', name: 'Oregon' },\n      { code: 'US-PA', name: 'Pennsylvania' },\n      { code: 'US-RI', name: 'Rhode Island' },\n      { code: 'US-SC', name: 'South Carolina' },\n      { code: 'US-SD', name: 'South Dakota' },\n      { code: 'US-TN', name: 'Tennessee' },\n      { code: 'US-TX', name: 'Texas' },\n      { code: 'US-UT', name: 'Utah' },\n      { code: 'US-VT', name: 'Vermont' },\n      { code: 'US-VA', name: 'Virginia' },\n      { code: 'US-WA', name: 'Washington' },\n      { code: 'US-WV', name: 'West Virginia' },\n      { code: 'US-WI', name: 'Wisconsin' },\n      { code: 'US-WY', name: 'Wyoming' },\n      { code: 'US-DC', name: 'District of Columbia' },\n      { code: 'US-AS', name: 'American Samoa' },\n      { code: 'US-GU', name: 'Guam' },\n      { code: 'US-MP', name: 'Northern Mariana Islands' },\n      { code: 'US-PR', name: 'Puerto Rico' },\n      { code: 'US-UM', name: 'United States Minor Outlying Islands' },\n      { code: 'US-VI', name: 'Virgin Islands' },\n    ],\n  },\n  { code: 'UZB', name: 'Uzbekistan' },\n  { code: 'VCT', name: 'St. Vincent and the Grenadines' },\n  { code: 'VEN', name: 'Venezuela' },\n  { code: 'VGB', name: 'British Virgin Islands' },\n  { code: 'VNM', name: 'Vietnam' },\n  { code: 'VUT', name: 'Vanuatu' },\n  { code: 'WSM', name: 'Samoa' },\n  { code: 'XKX', name: 'Kosovo' },\n  { code: 'YEM', name: 'Yemen, Rep.' },\n  { code: 'ZMB', name: 'Zambia' },\n  { code: 'ZWE', name: 'Zimbabwe' },\n  { code: 'MEX', name: 'Mexico' },\n] as Destination[];\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport destination from '../data/destinations';\nimport { CardsBackendDestinations } from '../model/cards-backend-destination.model';\nimport { Destination } from '../model/travel-notice.model';\n\n/**\n * This service is a default implementation for countries that retrieve locations from a\n * static file. If no other service is injected then this is used instead\n */\n\n@Injectable()\nexport class DefaultDestionsService implements CardsBackendDestinations {\n  getDestinations(): Observable<Destination[]> {\n    return of(destination);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["cacheRequest"],"mappings":"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"}