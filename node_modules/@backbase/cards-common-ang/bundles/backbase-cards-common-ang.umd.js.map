{"version":3,"file":"backbase-cards-common-ang.umd.js","sources":["../../../../libs/cards-common-ang/mocks/data/cards-us.ts","../../../../libs/cards-common-ang/mocks/cards-get/index.ts","../../../../libs/cards-common-ang/mocks/cards-get/error.ts","../../../../libs/cards-common-ang/mocks/card-get/index.ts","../../../../libs/cards-common-ang/mocks/card-get/error.ts","../../../../libs/cards-common-ang/mocks/cards-lock-status-post/index.ts","../../../../libs/cards-common-ang/mocks/cards-replacement-post/index.ts","../../../../libs/cards-common-ang/mocks/cards-activation-post/index.ts","../../../../libs/cards-common-ang/mocks/cards-limit-post/index.ts","../../../../libs/cards-common-ang/mocks/data/travel-notice-list.ts","../../../../libs/cards-common-ang/mocks/travel-notice-get/index.ts","../../../../libs/cards-common-ang/mocks/travel-notice-post/index.ts","../../../../libs/cards-common-ang/mocks/travel-notice-delete/index.ts","../../../../libs/cards-common-ang/mocks/cards-mock-backend.provider.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/cards-common-ang/src/components/bb-payment-card-container-base/accessibility-keyboard.directive.ts","../../../../libs/cards-common-ang/src/model/payment-card-delivery-status.model.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-delivery-status/delivery-tracker.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-delivery-status/delivery-tracker.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-delivery-status/payment-card-delivery-status.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-delivery-status/payment-card-delivery-status.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-initiate-activation/payment-card-initiate-activation.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-initiate-activation/payment-card-initiate-activation.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-initiate-replacement/payment-card-initiate-replacement.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-initiate-replacement/payment-card-initiate-replacement.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-limits/payment-card-limit.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-limits/payment-card-limit.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-limits/payment-card-limits.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-limits/payment-card-limits.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-multiple-error-state/payment-card-multiple-error-state.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-multiple-error-state/payment-card-multiple-error-state.component.html","../../../../libs/cards-common-ang/src/model/payment-card-reset-pin.model.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-reset-pin/payment-card-reset-pin.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-reset-pin/payment-card-reset-pin.component.html","../../../../libs/cards-common-ang/src/components/bb-payment-card-state-wrapper-ui/payment-card-state-wrapper.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-state-wrapper-ui/payment-card-state-wrapper.component.html","../../../../libs/cards-common-ang/src/model/payment-card-replacement-reason.model.ts","../../../../libs/cards-common-ang/src/model/payment-card.model.ts","../../../../libs/cards-common-ang/src/constants.ts","../../../../libs/cards-common-ang/src/model/cards-backend-error.model.ts","../../../../libs/cards-common-ang/src/services/cards-backend.service.ts","../../../../libs/cards-common-ang/src/services/cards.service.ts","../../../../libs/cards-common-ang/src/cards-common.module.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-container-base/payment-card-container-base.component.ts","../../../../libs/cards-common-ang/src/components/bb-payment-card-controls-base/payment-card-controls-base.component.ts","../../../../libs/cards-common-ang/src/model/travel-notice.model.ts","../../../../libs/cards-common-ang/src/services/base-widget-properties.service.ts","../../../../libs/cards-common-ang/src/services/card.service.ts","../../../../libs/cards-common-ang/src/data/destinations.ts","../../../../libs/cards-common-ang/src/services/default-destinations-service.service.ts","../../../../libs/cards-common-ang/backbase-cards-common-ang.ts"],"sourcesContent":["import { CardItem } from '@backbase/data-ang/cards';\n\nconst baseCardItem: CardItem = {\n  id: '0',\n  brand: 'Mastercard',\n  type: 'Credit',\n  subType: 'ATM',\n  name: 'Blue Card',\n  status: 'Active',\n  lockStatus: 'UNLOCKED',\n  holder: {\n    name: 'Jack Reacher',\n  },\n  expiryDate: {\n    year: '2023',\n    month: '12',\n  },\n  currency: 'USD',\n  maskedNumber: '1234',\n};\n\nconst generateCardItem = (() => {\n  let uid = 0;\n\n  return (changes: Partial<CardItem>) => ({\n    ...baseCardItem,\n    id: (++uid).toString(),\n    ...changes,\n  });\n})();\n\nexport default [\n  // with additions\n  generateCardItem({\n    maskedNumber: '0101',\n    additions: {\n      bonusPoints: '5',\n    },\n  }),\n\n  // deactivated card\n  generateCardItem({\n    maskedNumber: '0301',\n    status: 'Cancelled',\n    replacement: { status: 'ReplacementRequested' },\n    delivery: {\n      transitSteps: [\n        {\n          name: 'Ordered',\n          status: 'SUCCESS',\n          stepDateTime: '2019-01-28T16:41:41.090Z',\n        },\n        {\n          name: 'Processed',\n          status: 'SUCCESS',\n          stepDateTime: '2019-01-30T00:00:00.000Z',\n        },\n        {\n          name: 'In Transit',\n          status: 'PENDING',\n        },\n        {\n          name: 'Delivered',\n          status: 'PENDING',\n        },\n      ],\n    },\n  }),\n\n  // should have a visa logo and gold color\n  generateCardItem({\n    maskedNumber: '0204',\n    name: 'Gold Card',\n    brand: 'Visa',\n    type: 'Prepaid',\n  }),\n\n  // should have a visa logo and gold color\n  generateCardItem({\n    maskedNumber: '0201',\n    name: 'Gold Card',\n    brand: 'Visa',\n  }),\n\n  // needs to be activated\n  generateCardItem({\n    maskedNumber: '0401',\n    status: 'Inactive',\n  }),\n\n  // expired\n  generateCardItem({\n    maskedNumber: '0302',\n    status: 'Expired',\n    type: 'Debit',\n  }),\n\n  // under delivery\n  generateCardItem({\n    maskedNumber: '0501',\n    type: 'Debit',\n    status: 'Inactive',\n    delivery: {\n      transitSteps: [\n        {\n          name: 'Ordered',\n          status: 'SUCCESS',\n          stepDateTime: '2019-01-28T16:41:41.090Z',\n        },\n        {\n          name: 'Processed',\n          status: 'SUCCESS',\n          stepDateTime: '2019-01-30T00:00:00.000Z',\n        },\n        {\n          name: 'In Transit',\n          status: 'SUCCESS',\n          stepDateTime: '2019-02-01T00:00:00.000Z',\n        },\n        {\n          name: 'Delivered',\n          status: 'SUCCESS',\n          stepDateTime: '2019-02-03T00:00:00.000Z',\n        },\n      ],\n    },\n  }),\n\n  // should have a visa logo and black color\n  generateCardItem({\n    maskedNumber: '0202',\n    brand: 'Visa',\n    name: 'Black Card',\n    type: 'Debit',\n  }),\n\n  // with limits\n  generateCardItem({\n    maskedNumber: '1034',\n    name: 'Green Card',\n    limits: [\n      {\n        id: '1',\n        channel: 'ATM',\n        frequency: 'DAILY',\n        amount: 3000.0,\n        maxAmount: 10000.0,\n        minAmount: 0.0,\n      },\n      {\n        id: '2',\n        channel: 'ONLINE',\n        frequency: 'DAILY',\n        amount: 2000.0,\n        maxAmount: 10000.0,\n        minAmount: 0.0,\n      },\n    ],\n  }),\n];\n","import { HttpResponse } from '@angular/common/http';\n\nimport data from '../data/cards-us';\n\n// Replaces spec examples with a custom list of cards\nexport default () =>\n  new HttpResponse({\n    body: data,\n    status: 200,\n  });\n","import { HttpResponse, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\n// Throw HttpErrorResponse on wrong parameters\nexport default (response: HttpResponse<any>, params: HttpParams) => {\n  const errorCode = parseInt(params.get('error') as string, 10);\n\n  if (errorCode === 400) {\n    const responseBody = {\n      message: 'Bad Request',\n      errors: [\n        {\n          message: 'Mock error message: bad request',\n          key: 'cards.api.test.key',\n          context: {\n            arg0: 0,\n          },\n        },\n      ],\n    };\n\n    throw new HttpErrorResponse({\n      error: responseBody,\n      status: 400,\n    });\n  }\n\n  if (errorCode === 403) {\n    const responseBody = {\n      message: 'Forbidden',\n      errors: [\n        {\n          message: 'Mock error message: Forbidden',\n          key: 'cards.api.test.key',\n          context: {\n            arg0: 0,\n          },\n        },\n      ],\n    };\n\n    throw new HttpErrorResponse({\n      error: responseBody,\n      status: 403,\n    });\n  }\n\n  return response;\n};\n","import { HttpResponse } from '@angular/common/http';\n\nimport data from '../data/cards-us';\n\nexport default (paymentCardId: string) =>\n  new HttpResponse({\n    body: data.find((paymentCard) => paymentCard.id === paymentCardId),\n    status: 200,\n  });\n","import { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n// Throw HttpErrorResponse if not found\nexport default (response: HttpResponse<any>) => {\n  if (response.body === null) {\n    const responseBody = {\n      message: 'Not found',\n      errors: [\n        {\n          message: 'Mock error message: cannot find a card with this ID',\n          key: 'cards.api.test.key',\n          context: {\n            arg0: 0,\n          },\n        },\n      ],\n    };\n\n    throw new HttpErrorResponse({\n      error: responseBody,\n      status: 404,\n    });\n  }\n\n  return response;\n};\n","import { HttpRequest, HttpResponse } from '@angular/common/http';\n\nexport default (request: HttpRequest<any>, response: HttpResponse<any>) => {\n  const data = response.body;\n  const lockStatus = request.body.lockStatus;\n\n  data.lockStatus = lockStatus;\n\n  return new HttpResponse({\n    body: data,\n    status: 200,\n  });\n};\n","import { HttpResponse } from '@angular/common/http';\n\nexport default (response: HttpResponse<any>) => {\n  const data = response.body;\n\n  data.replacementStatus = 'ReplacementRequested';\n  data.status = 'Cancelled';\n\n  return new HttpResponse({\n    body: data,\n    status: 200,\n  });\n};\n","import { HttpResponse } from '@angular/common/http';\n\nexport default (response: HttpResponse<any>) => {\n  const data = response.body;\n\n  data.status = 'Active';\n\n  return new HttpResponse({\n    body: data,\n    status: 200,\n  });\n};\n","import { HttpResponse } from '@angular/common/http';\nimport { PaymentCardLimit } from '../../src/model/payment-card-limit.model';\n\nexport default (response: HttpResponse<any>, limits: Array<PaymentCardLimit>) => {\n  const card = response.body;\n\n  card.limits = card.limits.map((item: any, index: number) => ({\n    ...item,\n    ...limits[index],\n  }));\n\n  return new HttpResponse({\n    body: card,\n    status: 200,\n  });\n};\n","import { TravelNotice } from '@backbase/data-ang/cards';\n\nexport const generateTravelNotice = (() => {\n  let uid = 0;\n\n  return (properties: TravelNotice) => ({\n    id: (++uid).toString(),\n    ...properties,\n  });\n})();\n\nexport const travelNoticeList = [\n  generateTravelNotice({\n    cardIds: ['1'],\n    departureDate: '2020-01-09',\n    arrivalDate: '2020-01-18',\n    destinations: [\n      {\n        country: 'MEX',\n      },\n      {\n        country: 'USA',\n        region: 'US-TX',\n      },\n    ],\n  }),\n\n  generateTravelNotice({\n    cardIds: ['1', '2'],\n    departureDate: '2019-12-10',\n    arrivalDate: '2019-12-23',\n    destinations: [\n      {\n        country: 'JPN',\n      },\n      {\n        country: 'USA',\n        region: 'US-CA',\n      },\n    ],\n    contact: {\n      phoneNumber: '+1 646 432 3000',\n    },\n  }),\n\n  generateTravelNotice({\n    cardIds: ['1', '3', '7'],\n    departureDate: '2019-07-23',\n    arrivalDate: '2019-08-11',\n    destinations: [\n      {\n        country: 'KHM',\n      },\n      {\n        country: 'KOR',\n      },\n      {\n        country: 'IND',\n      },\n    ],\n    contact: {\n      phoneNumber: '+1 646 432 3000',\n    },\n  }),\n];\n","import { HttpResponse } from '@angular/common/http';\nimport { travelNoticeList } from '../data/travel-notice-list';\n\nexport default () =>\n  new HttpResponse({\n    body: travelNoticeList,\n    status: 200,\n  });\n","import { HttpResponse } from '@angular/common/http';\nimport { TravelNotice } from '@backbase/data-ang/cards';\nimport { generateTravelNotice, travelNoticeList } from '../data/travel-notice-list';\n\nexport default (travelNotice: TravelNotice) => {\n  const travelNoticeItem = generateTravelNotice(travelNotice);\n  travelNoticeList.unshift(travelNoticeItem);\n\n  return new HttpResponse({\n    body: travelNoticeItem,\n    status: 200,\n  });\n};\n","import { HttpResponse } from '@angular/common/http';\nimport { travelNoticeList } from '../data/travel-notice-list';\n\nexport default (id: string) => {\n  const index = travelNoticeList.findIndex((travelNoticeItem) => travelNoticeItem.id === id);\n  travelNoticeList.splice(index, 1);\n\n  return new HttpResponse({\n    body: [],\n    status: 200,\n  });\n};\n","import { Injectable, Provider, InjectionToken } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpResponse,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { flatMap, materialize, delay, dematerialize, map } from 'rxjs/operators';\n\nimport cardsGetHook from './cards-get';\nimport cardsGetErrorHook from './cards-get/error';\nimport cardGetHook from './card-get';\nimport cardGetErrorHook from './card-get/error';\nimport cardsLockStatusPostHook from './cards-lock-status-post';\nimport cardsReplacementPostHook from './cards-replacement-post';\nimport cardsActivationPostHook from './cards-activation-post';\nimport cardsLimitsPostHook from './cards-limit-post';\nimport travelNoticeGetHook from './travel-notice-get';\nimport travelNoticePostHook from './travel-notice-post';\nimport travelNoticeDeleteHook from './travel-notice-delete';\n\n@Injectable()\nexport class CardsMockBackendInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return of(undefined).pipe(\n      // eslint-disable-next-line\n      flatMap(() => {\n        console.log(request.method, request.urlWithParams);\n\n        if (request.url.endsWith('/cards') && request.method === 'GET') {\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(cardsGetHook),\n            map((response) => cardsGetErrorHook(response, request.params)),\n          );\n        }\n\n        if (request.url.indexOf('/cards/') > -1 && request.method === 'GET') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 1];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardGetErrorHook(response)),\n          );\n        }\n\n        if (request.url.endsWith('/travel-notices') && request.method === 'GET') {\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(travelNoticeGetHook));\n        }\n\n        if (request.url.endsWith('/travel-notices') && request.method === 'POST') {\n          const travelNoticeItem = request.body;\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(() => travelNoticePostHook(travelNoticeItem)));\n        }\n\n        if (request.url.indexOf('/travel-notices') !== -1 && request.method === 'DELETE') {\n          const travelNoticeItemId = request.url.split('/')[request.url.split('/').length - 1];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(() => travelNoticeDeleteHook(travelNoticeItemId)));\n        }\n\n        if (request.url.endsWith('/lock-status') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 2];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardsLockStatusPostHook(request, response)),\n          );\n        }\n\n        if (request.url.endsWith('/replacement') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 2];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardsReplacementPostHook(response)),\n          );\n        }\n\n        if (request.url.endsWith('/limits') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 2];\n          const limits = request.body;\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardsLimitsPostHook(response, limits)),\n          );\n        }\n\n        if (request.url.endsWith('/activation') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 2];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(\n            map(() => cardGetHook(paymentCardId)),\n            map((response) => cardsActivationPostHook(response)),\n          );\n        }\n\n        if (request.url.endsWith('/pin/reset') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 3];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(() => cardGetHook(paymentCardId)));\n        }\n\n        if (request.url.endsWith('/pin/request') && request.method === 'POST') {\n          const paymentCardId = request.url.split('/')[request.url.split('/').length - 3];\n\n          return of(\n            new HttpResponse({\n              body: [],\n              status: 200,\n            }),\n          ).pipe(map(() => cardGetHook(paymentCardId)));\n        }\n\n        return next.handle(request);\n      }),\n      materialize(),\n      delay(1000),\n      dematerialize(),\n    );\n  }\n}\n\nexport const CardsMockBackendProvider: Provider = {\n  provide: HTTP_INTERCEPTORS as InjectionToken<HttpInterceptor[]>,\n  useClass: CardsMockBackendInterceptor,\n  multi: true,\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbAccessibilityKeyboard]',\n})\nexport class AccessibilityKeyboardDirective {\n  constructor(readonly element: ElementRef) {\n    element.nativeElement.tabIndex = 0;\n  }\n\n  // eslint-disable-next-line\n  @HostListener('keydown.enter', ['$event'])\n  // eslint-disable-next-line\n  @HostListener('keydown.space', ['$event'])\n  eventListener(event: any) {\n    this.element.nativeElement.click(event);\n  }\n}\n","/**\n * Possible payment card delivery transit step statuses.\n */\nexport enum PaymentCardDeliveryStepStatus {\n  Success = 'SUCCESS',\n  Pending = 'PENDING',\n  Failed = 'FAILED',\n}\n\n/**\n * Single transit step inside a delivery status.\n */\nexport interface PaymentCardDeliveryStep {\n  name: string;\n  status: PaymentCardDeliveryStepStatus;\n  stepDateTime?: Date;\n}\n\n/**\n * Delivery status.\n */\nexport interface PaymentCardDeliveryStatus {\n  transitSteps: Array<PaymentCardDeliveryStep>;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PaymentCardDeliveryStepStatus } from '../../model/payment-card-delivery-status.model';\n\nexport interface DeliveryTrackerStep {\n  name: string;\n  status: 'PENDING' | 'SUCCESS' | 'FAILED';\n  subtext?: string;\n  icon?: string;\n  stepDateTime?: string;\n}\n\n/**\n * @name DeliveryTrackerComponent\n *\n * @description\n * Component that displays the steps to fulfill an activity.\n */\n@Component({\n  selector: 'bb-delivery-tracker',\n  templateUrl: './delivery-tracker.component.html',\n})\nexport class DeliveryTrackerComponent implements OnInit {\n  /**\n   * The steps that this component displays the steps of.  Mandatory.\n   */\n  @Input() steps: Array<DeliveryTrackerStep> = [];\n  /**\n   * Color for the icons and the lines\n   */\n  @Input() color = 'primary';\n\n  get currentStep() {\n    const steps = this.steps.filter((step) => step.status === PaymentCardDeliveryStepStatus.Success);\n    if (steps.length > 0) {\n      return steps[steps.length - 1];\n    }\n\n    return undefined;\n  }\n\n  get stepColorClassName() {\n    return `bb-delivery-tracker__step-icon-${this.color}`;\n  }\n\n  getStepClassName(step: DeliveryTrackerStep) {\n    const stepClassName = step.name.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-');\n\n    return `bb-delivery-tracker__step--${stepClassName}`;\n  }\n\n  getStepIconClassName(name: string) {\n    const stepClassName = name.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-');\n\n    return `delivery-tracker__step--${stepClassName}`;\n  }\n\n  ngOnInit() {\n    if (typeof this.steps === 'undefined') {\n      throw new Error(`\"steps\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n","<div class=\"bb-delivery-tracker\">\n  <div\n    class=\"bb-delivery-tracker__step\"\n    *ngFor=\"let step of steps\"\n    [ngClass]=\"[\n      step === currentStep ? 'active' : '',\n      getStepClassName(step)\n    ]\"\n  >\n    <div\n      class=\"bb-delivery-tracker__step-icon\"\n      [ngClass]=\"[\n        stepColorClassName,\n        step.status !== 'SUCCESS' ? 'bb-delivery-tracker__step-icon--disabled' : ''\n      ]\"\n    >\n      <bb-icon-ui \n        [name]=\"getStepIconClassName(step.status === 'SUCCESS' ? 'ordered' : step.name)\"\n        backgroundType=\"circle\"\n        size=\"md\"\n        [color]=\"step.status === 'SUCCESS' ? color : 'light'\"\n      ></bb-icon-ui>\n    </div>\n    <div\n      class=\"bb-delivery-tracker__step-text\"\n      [ngClass]=\"{'bb-text-support': step.status !== 'SUCCESS'}\"\n    >\n      {{ step.name }}\n    </div>\n    <div\n      class=\"bb-delivery-tracker__step-date bb-subtitle\"\n      *ngIf=\"step.stepDateTime\"\n    >\n      {{ step.stepDateTime | date }} at {{step.stepDateTime | date:'shortTime'}}\n    </div>\n  </div>\n</div>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { PaymentCardDeliveryStatus } from '../../model/payment-card-delivery-status.model';\n\n@Component({\n  selector: 'bb-payment-card-delivery-status',\n  templateUrl: './payment-card-delivery-status.component.html',\n})\nexport class PaymentCardDeliveryStatusComponent {\n  /**\n   * Delivery status of the payment card to be displayed.\n   */\n  @Input() deliveryStatus: PaymentCardDeliveryStatus = { transitSteps: [] };\n\n  readonly hostRef = this;\n}\n\n@Directive({\n  selector: '[bbCardsDeliveryStatusCustomizable]',\n})\nexport class CardsDeliveryStatusCustomizableDirective extends BbTemplate<\n  PaymentCardDeliveryStatusComponent,\n  undefined\n> {}\n","<ng-container bbCardsDeliveryStatusCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsDeliveryStatusCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--lg\">\n    <bb-delivery-tracker [steps]=\"hostRef.deliveryStatus.transitSteps\" color=\"success\"></bb-delivery-tracker>\n  </div>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { PaymentCard } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-initiate-activation',\n  templateUrl: './payment-card-initiate-activation.component.html',\n})\nexport class PaymentCardInitiateActivationComponent implements OnInit {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Whether card activation has been initiated.\n   */\n  @Input() isInitiateActivationLoading = false;\n  /**\n   * Event to initiate activation of payment card;\n   */\n  @Output() readonly initiateActivation = new EventEmitter<string>();\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  /**\n   * Flag to denote whether the activation modal is open or not.\n   */\n  isModalOpen = false;\n\n  /**\n   * Form model for initiating activation.\n   */\n  form = new FormGroup({\n    token: new FormControl('', [Validators.required, Validators.minLength(3)]),\n  });\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  /**\n   * Submit handler for initiating activation.\n   *\n   * @param params - form model value\n   */\n  onSubmit(params: { token: string }) {\n    this.isModalOpen = false;\n    this.initiateActivation.emit(params.token);\n  }\n\n  /**\n   * Opens the modal.\n   */\n  onModalOpen() {\n    this.isModalOpen = true;\n  }\n\n  /**\n   * Closes the modal.\n   */\n  onModalClose() {\n    this.isModalOpen = false;\n    this.form.reset({ token: '' });\n  }\n\n  /**\n   * Form element validation control.\n   */\n  isFieldValid(fieldName: string) {\n    const control = this.form.get(fieldName);\n\n    return !!control && (control.valid || control.untouched);\n  }\n}\n\n@Directive({\n  selector: '[bbCardsInitiateActivationFormCustomizable]',\n})\nexport class CardsInitiateActivationFormCustomizableDirective extends BbTemplate<\n  PaymentCardInitiateActivationComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbCardsInitiateActivationCustomizable]',\n})\nexport class CardsInitiateActivationCustomizableDirective extends BbTemplate<\n  PaymentCardInitiateActivationComponent,\n  undefined\n> {}\n","<ng-container bbCardsInitiateActivationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsInitiateActivationCustomizable let-hostRef>\n  <bb-load-button-ui\n    data-role=\"activate-card-button\"\n    color=\"primary\"\n    [block]=\"true\"\n    [isLoading]=\"hostRef.isInitiateActivationLoading\"\n    (click)=\"!hostRef.isInitiateActivationLoading && hostRef.paymentCard?.status === 'INACTIVE' && hostRef.onModalOpen()\"\n    [disabled]=\"hostRef.paymentCard?.status !== 'INACTIVE'\"\n    i18n=\"Activate card button|Activate the card@@card.activation.button\"\n  >Activate card</bb-load-button-ui>\n\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isModalOpen\"\n    [modalOptions]=\"{ centered: true }\"\n    (cancel)=\"hostRef.onModalClose()\"\n  >\n    <div class=\"modal-header\">\n      <div class=\"bb-block bb-block--xs\">\n        <h2 i18n=\"Activate card heading|Activate card header@@card.activationForm.heading\">\n          Activate card\n        </h2>\n      </div>\n    </div>\n    <ng-container bbCardsInitiateActivationFormCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template bbCardsInitiateActivationFormCustomizable let-hostRef>\n  <form *ngIf=\"hostRef.isModalOpen\" [formGroup]=\"hostRef.form\" (ngSubmit)=\"hostRef.onSubmit(hostRef.form.value)\">\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 order-sm-2\">\n          <div data-role=\"modal-card-img\" class=\"bb-block bb-block--md bb-payment-card-back bb-payment-card-icon-dialog\"></div>\n        </div>\n        <div class=\"col-12 col-sm-6\">\n          <h3 i18n=\"Enter your code heading|Heading for enter your code@@card.activationForm.options.heading\">\n            Enter your CVV code\n          </h3>\n          <p\n            class=\"bb-text-support\"\n            i18n=\"Enter your code subtext|Subtext for enter your code@@card.activationForm.options.subtitle\"\n          >To activate your card, please enter your CVV code at the back of your card as shown.</p>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <bb-input-password-ui\n                data-role=\"card-details-cvv-input\"\n                [autofocus]=\"true\"\n                formControlName=\"token\"\n                label=\"CVV code\"\n                i18n-label='CVV Code heading|Heading for CVV@@card.activationForm.options.heading'\n              ></bb-input-password-ui>\n            </div>\n            <div class=\"col-12\">\n              <bb-input-validation-message-ui [showErrors]=\"!hostRef.isFieldValid('token')\">\n                <span i18n=\"CVV Code validation@@card.activationForm.options.token.error.msg\">\n                  You need to enter the full CVV code.\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"hostRef.form.invalid\"\n          i18n=\"Activate button|Activation confirm button@@card.activationForm.submitButton\"\n        >Activate</bb-button-ui>\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"button\"\n          color=\"link\"\n          (click)=\"hostRef.onModalClose()\"\n          i18n=\"Cancel button|Cancel card activation@@card.activationForm.cancelButton\"\n        >Cancel</bb-button-ui>\n      </div>\n    </div>\n  </form>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { PaymentCardReplacementReason } from '../../model/payment-card-replacement-reason.model';\nimport { PaymentCard } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-initiate-replacement',\n  templateUrl: './payment-card-initiate-replacement.component.html',\n})\nexport class PaymentCardInitiateReplacementComponent implements OnInit {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Whether card replacement has been initiated.\n   */\n  @Input() isInitiateReplacementLoading = false;\n  /**\n   * Event to initiate replacement of payment card;\n   */\n  @Output() readonly initiateReplacement = new EventEmitter<PaymentCardReplacementReason | string>();\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  /**\n   * Flag to denote whether the replacement modal is open or not.\n   */\n  isModalOpen = false;\n\n  /**\n   * The page of the replacement modal.\n   */\n  modalStep = 0;\n\n  /**\n   * Form model for initiating replacement.\n   */\n  form = new FormGroup({\n    replacementReason: new FormControl(),\n  });\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  /**\n   * Submit handler for initiating replacement.\n   *\n   * @param params - form model value\n   */\n  onSubmit(params: { replacementReason: PaymentCardReplacementReason | string }) {\n    this.isModalOpen = false;\n    this.initiateReplacement.emit(params.replacementReason);\n  }\n\n  /**\n   * Opens the modal (and resets the page to the first page).\n   */\n  onModalOpen() {\n    this.modalStep = 0;\n    this.isModalOpen = true;\n  }\n\n  /**\n   * Closes the modal.\n   */\n  onModalClose() {\n    this.isModalOpen = false;\n  }\n}\n@Directive({\n  selector: '[bbCardsInitiateReplacementFormCustomizable]',\n})\nexport class CardsInitiateReplacementFormCustomizableDirective extends BbTemplate<\n  PaymentCardInitiateReplacementComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbCardsInitiateReplacementCustomizable]',\n})\nexport class CardsInitiateReplacementCustomizableDirective extends BbTemplate<\n  PaymentCardInitiateReplacementComponent,\n  undefined\n> {}\n","<ng-container bbCardsInitiateReplacementCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsInitiateReplacementCustomizable let-hostRef>\n  <bb-load-button-ui\n    data-role=\"replace-card-button\"\n    color=\"secondary\"\n    aria-label=\"Replace payment card, Replace lost, stolen or damaged cards\"\n    i18n-aria-label=\"Replace payment card@@card.replace.button.aria-label\"\n    [block]=\"true\"\n    [isLoading]=\"hostRef.isInitiateReplacementLoading\"\n    (click)=\"!hostRef.isInitiateReplacementLoading && hostRef.paymentCard?.replacementStatus === 'NOT_UNDER_REPLACEMENT' && hostRef.onModalOpen()\"\n    [disabled]=\"hostRef.paymentCard?.replacementStatus !== 'NOT_UNDER_REPLACEMENT'\"\n    i18n=\"Replace card button|Replace the card@@card.replace.button\"\n  >Replace</bb-load-button-ui>\n\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isModalOpen\"\n    [modalOptions]=\"{ centered: true }\"\n    (cancel)=\"hostRef.onModalClose()\"\n  >\n  <div role=\"dialog\">\n    <div class=\"modal-header\">\n      <div class=\"bb-block\">\n        <h2 i18n=\"Replace card heading|Replace card header@@card.replaceForm.heading\">\n          Replace card\n        </h2>\n        <ng-container *ngIf=\"hostRef.modalStep === 0\">\n          <p\n            class=\"bb-text-support bb-block bb-block--no-margin\"\n            i18n=\"Replace card text|Why you want to replace card@@card.replaceForm.options.subtitle\"\n          >Tell us why you want to replace your card.</p>\n        </ng-container>\n      </div>\n    </div>\n    <ng-container bbCardsInitiateReplacementFormCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  </div>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template bbCardsInitiateReplacementFormCustomizable let-hostRef>\n  <form [formGroup]=\"hostRef.form\" (ngSubmit)=\"hostRef.onSubmit(hostRef.form.value)\">\n    <!-- Form step -->\n    <ng-container *ngIf=\"hostRef.modalStep === 0\">\n      <div class=\"modal-body\">\n        <bb-input-radio-group-ui\n          [required]=\"true\"\n          aria-label=\"Tell us why you want to replace your card, select a reason\"\n          i18n-aria-label=\"replacement reason radio group aria-label@@card.replaceForm.radioGroup.options.aria-label\"\n          formControlName=\"replacementReason\"\n        >\n          <bb-input-radio-ui\n            value=\"LOST\"\n            [labelTemplate]=\"cardLostLabel\"\n            aria-label=\"Card lost, Report a missing card and get a new one. Your current card will be locked automatically\"\n            i18n-aria-label=\"Card lost radio button label|Card lost option@@card.replaceForm.options.lost.aria-label\"\n          ></bb-input-radio-ui>\n          <bb-input-radio-ui\n            value=\"STOLEN\"\n            [labelTemplate]=\"cardStolenLabel\"\n            aria-label=\"Card stolen, Report a stolen card and get a new one. Your current card will be locked automatically\"\n            i18n-aria-label=\"Card stolen radio button label|Card stolen option@@card.replaceForm.options.stolen.aria-label\"\n          ></bb-input-radio-ui>\n          <bb-input-radio-ui\n            value=\"BROKEN\"\n            [labelTemplate]=\"cardBrokenLabel\"\n            aria-label=\"Card broken, Report a broken card and get a new one\"\n            i18n-aria-label=\"Card broken radio button label|Card broken option@@card.replaceForm.options.broken.aria-label\"\n          ></bb-input-radio-ui>\n        </bb-input-radio-group-ui>\n\n        <ng-template #cardLostLabel>\n          <strong i18n=\"Card lost radio button label|Card lost option@@card.replaceForm.options.lost\">\n            Card lost\n          </strong>\n          <br>\n          <p\n            class=\"bb-text-support bb-text-default\"\n            i18n=\"Card lost radio button label subtext|Card lost option@@card.replaceForm.options.lost.subtext\"\n          >Report a missing card and get a new one. Your current card will be locked automatically.</p>\n        </ng-template>\n\n        <ng-template #cardStolenLabel>\n          <strong i18n=\"Card stolen radio button label|Card stolen option@@card.replaceForm.options.stolen\">\n            Card stolen\n          </strong>\n          <br>\n          <p\n            class=\"bb-text-support bb-text-default\"\n            i18n=\"Card stolen radio button label subtext|Card stolen option@@card.replaceForm.options.stolen.subtext\"\n          >Report a stolen card and get a new one. Your current card will be locked automatically.</p>\n        </ng-template>\n\n        <ng-template #cardBrokenLabel>\n          <strong i18n=\"Card broken radio button label|Card broken option@@card.replaceForm.options.broken\">\n            Card broken\n          </strong>\n          <br>\n          <p\n            class=\"bb-text-support bb-text-default\"\n            i18n=\"Card broken radio button label subtext|Card broken option@@card.replaceForm.options.broken.subtext\"\n          >Report a broken card and get a new one.</p>\n        </ng-template>\n      </div>\n      <div class=\"modal-footer\">\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"submit\"\n            color=\"primary\"\n            (click)=\"hostRef.modalStep = 1\"\n            i18n=\"Next button|Next step for replace@@card.replaceForm.nextButton\"\n          >Continue</button>\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"button\"\n            color=\"link\"\n            (click)=\"hostRef.onModalClose()\"\n            i18n=\"Cancel button|Cancel replace card@@card.replaceForm.cancelButton\"\n          >Cancel</button>\n        </div>\n      </div>\n    </ng-container>\n\n    <!-- Confirm step -->\n    <ng-container *ngIf=\"hostRef.modalStep === 1\">\n      <div class=\"modal-body\" tabindex=\"0\">\n        <h5\n          class=\"bb-text-semi-bold\"\n          i18n=\"Delivery address header|Delivery address@@card.replaceForm.deliveryAddress.heading\"\n          >Delivery address</h5>\n        <p\n          class=\"bb-text-support\"\n          i18n=\"Delivery address subtext|Delivery address@@card.replaceForm.deliveryAddress.subtext\"\n        >The new card will be delivered at your currently registered address.</p>\n      </div>\n      <div class=\"modal-footer\">\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"submit\"\n            color=\"primary\"\n            i18n=\"Order New button|Order new card Confirm@@card.replaceForm.submitButton\"\n            aria-label=\"order new payment card to the provided delivery address\"\n            i18n-aria-label= \"order new button aria-label@@card.replaceForm.submitButton.aria-label\"\n            [bbFocus]=\"true\"\n            *ngIf=\"hostRef.modalStep === 1\"\n          >Order New</button>\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"button\"\n            color=\"link\"\n            (click)=\"hostRef.onModalClose()\"\n            i18n=\"Cancel button|Cancel card replace@@card.replaceForm.cancelButton\"\n          >Cancel</button>\n        </div>\n      </div>\n    </ng-container>\n  </form>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputInlineEditComponent } from '@backbase/ui-ang/input-inline-edit';\nimport { PaymentCardLimit, PaymentCardLimitUpdate } from '../../model/payment-card-limit.model';\n\n@Component({\n  selector: 'bb-payment-card-limit',\n  templateUrl: 'payment-card-limit.component.html',\n})\nexport class PaymentCardLimitComponent {\n  /**\n   * currency for payment card.\n   */\n  @Input() currency?: string;\n  /**\n   * one limit for payment card.\n   */\n  @Input() limit?: PaymentCardLimit;\n  /**\n   * Event to update limit of payment card;\n   */\n  // eslint-disable-next-line\n  @Output()\n  readonly updateLimit = new EventEmitter<PaymentCardLimitUpdate>();\n  @ViewChild(InputInlineEditComponent) inputEdit: InputInlineEditComponent | undefined;\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  onUpdateLimit(amount: string) {\n    if (this.limit) {\n      this.updateLimit.emit({ amount, cardLimit: this.limit });\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbCardsUpdateLimitCustomizable]',\n})\nexport class CardsUpdateLimitCustomizableDirective extends BbTemplate<PaymentCardLimitComponent, undefined> {}\n","<ng-container bbCardsUpdateLimitCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsUpdateLimitCustomizable let-hostRef>\n  <div class=\"row\">\n    <div class=\"col-12 col-sm-8\">\n      <h5 class=\"bb-block--no-margin\" data-role=\"limit-title\">\n        <span>{{hostRef?.limit?.frequency | titlecase }}&nbsp;</span>\n        <span>{{hostRef?.limit?.channel?.name}}</span>\n      </h5>\n      <span class=\"bb-text-support text-small\" data-role=\"limit-description\">{{hostRef?.limit?.channel?.description}}</span>\n    </div>\n\n    <div class=\"col-12 col-sm-4\">\n      <ng-template #amountTemplateRef>\n          <strong class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--spacing-sm\">\n            <bb-amount-ui\n              data-role=\"limit-max-amount\"\n              [currency]=\"hostRef?.currency\" \n              [amount]=\"hostRef.limit?.amount\" \n              [mapCurrency]=\"true\"\n              [decimalPlaces]=\"0\"\n            ></bb-amount-ui>\n          </strong>\n      </ng-template>\n\n      <bb-input-inline-edit-ui \n        [inputText]=\"hostRef.limit?.amount\" \n        [maxValue]=\"hostRef.limit?.maxAmount\"\n        [minValue]=\"hostRef.limit?.minAmount\"\n        pattern=\"[0-9]+\"\n        [inputInlineTemplate]=\"amountTemplateRef\"\n        (accept)=\"hostRef.onUpdateLimit($event)\"\n      ></bb-input-inline-edit-ui> \n\n      <p class=\"bb-text-support bb-text-align-right text-small\" data-role=\"limit-max-allowed-amount\">\n        <span i18n=\"limit max amount@@card.limit.amount.header.maxAmount\">\n          Max:\n        </span>\n        <bb-amount-ui \n          [currency]=\"hostRef?.currency\" \n          [amount]=\"hostRef.limit?.maxAmount\" \n          [mapCurrency]=\"true\"\n          [decimalPlaces]=\"0\"\n        ></bb-amount-ui>\n      </p>\n    </div>\n  </div>\n</ng-template>","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { PaymentCardLimit } from '../../model/payment-card-limit.model';\nimport { PaymentCard } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-limits',\n  templateUrl: './payment-card-limits.component.html',\n})\nexport class PaymentCardLimitsComponent {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Loading status of limit update API\n   */\n  @Input() isLimitsLoading?: boolean;\n  /**\n   * Event to update limit of payment card;\n   */\n  @Output() readonly updateLimit = new EventEmitter<PaymentCardLimit[]>();\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  onUpdateLimit(limit: { amount: string; cardLimit: PaymentCardLimit | undefined }) {\n    if (this.paymentCard) {\n      const limits = this.paymentCard.limits;\n      if (limits) {\n        this.updateLimit.emit(\n          limits.map((item) => {\n            let amount: number | string = item.amount;\n            if (limit.cardLimit && item.id === limit.cardLimit.id) {\n              amount = +limit.amount;\n            }\n\n            return {\n              amount,\n              id: item.id,\n              frequency: item.frequency,\n            };\n          }),\n        );\n      }\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbCardsUpdateLimitsCustomizable]',\n})\nexport class CardsUpdateLimitsCustomizableDirective extends BbTemplate<PaymentCardLimitsComponent, undefined> {}\n","<ng-container bbCardsUpdateLimitsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbCardsUpdateLimitsCustomizable let-hostRef>\n  <div class=\"card bb-list\" *ngIf=\"hostRef.paymentCard?.limits\">\n    <div class=\"card-header\">\n      <h2 i18n=\"Limits update heading|update card limits header@@card.updateLimit.heading\">\n        Limits\n      </h2>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-list\" *ngIf=\"!hostRef.isLimitsLoading; else loadingTemplate\">\n        <div class=\"bb-list__item\" *ngFor=\"let limit of hostRef.paymentCard.limits\">\n          <bb-payment-card-limit \n            [limit]=\"limit\"\n            [currency]=\"hostRef.paymentCard.currency\"\n            (updateLimit)=\"hostRef.onUpdateLimit($event)\"\n          ></bb-payment-card-limit>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #loadingTemplate>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { CardsBackendError } from '../../model/cards-backend-error.model';\n\n@Component({\n  selector: 'bb-payment-card-multiple-error-state',\n  templateUrl: 'payment-card-multiple-error-state.component.html',\n})\nexport class PaymentCardMultipleErrorStateComponent {\n  @Input() errors: CardsBackendError[] | undefined;\n\n  hostRef = this;\n}\n\n@Directive({\n  selector: '[bbCardsMultipleErrorStateCustomizable]',\n})\nexport class CardsMultipleErrorStateCustomizableDirective extends BbTemplate<\n  PaymentCardMultipleErrorStateComponent,\n  undefined\n> {}\n","\n<ng-container\n  bbCardsMultipleErrorStateCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template bbCardsMultipleErrorStateCustomizable let-hostRef>\n  <div class=\"card bb-state-container\">\n    <bb-empty-state-ui\n      title=\"Unknown Error\"\n      i18n-title=\"Error state title@@cards.common.errorState.title\"\n      iconModifier=\"error\"\n      iconSize=\"xxl\"\n      iconClasses=\"text-muted\"\n    ></bb-empty-state-ui>\n    <p \n      *ngFor=\"let error of hostRef.errors\" \n      data-role=\"custom-error-state-message\" \n      class=\"bb-empty-state__message bb-empty-state\"\n    >\n      {{error?.message}}\n    </p>\n  </div>\n</ng-template>\n","/**\n * Represents the values that can be sent dynamically to the reset pin endpoint\n */\nexport interface PaymentCardResetPin {\n  [token: string]: string;\n}\n\nexport interface PaymentCardResetPinTransport {\n  raw: PaymentCardResetPin;\n  model: PaymentCardResetPin;\n}\n\n/**\n * Enum values to determine whether a reset pin would be done via delivery address or immediate change\n * Reset stands for allowing users to change their pin using the web app\n * Request stands for a delivery letter with the new pin\n */\nexport enum ResetPinModeEnum {\n  Reset = 'RESET',\n  Request = 'REQUEST',\n}\n","import { Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  PaymentCardResetPin,\n  PaymentCardResetPinTransport,\n  ResetPinModeEnum,\n} from '../../model/payment-card-reset-pin.model';\nimport { PaymentCard } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-reset-pin',\n  templateUrl: 'payment-card-reset-pin.component.html',\n})\nexport class PaymentCardResetPinComponent implements OnInit {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Wether the modal should be Reset or Request\n   */\n  @Input() mode: ResetPinModeEnum | undefined;\n  /**\n   * Whether card reset pin has been initiated.\n   */\n  @Input() isResetPinLoading = false;\n  /**\n   * Event for reset pin of payment card;\n   */\n  @Output() readonly resetPin = new EventEmitter<PaymentCardResetPinTransport>();\n  /**\n   * Event for request pin of payment card;\n   */\n  @Output() readonly requestPin = new EventEmitter<PaymentCardResetPinTransport>();\n  /**\n   * Flag to denote whether the reset pin modal is open or not.\n   */\n  isModalOpen = false;\n  /**\n   * The page of the reset pin modal.\n   */\n  modalStep = 1;\n  /**\n   * Form model for reset pin.\n   */\n  model: PaymentCardResetPin = {};\n\n  /**\n   * Form model for reset pin.\n   */\n  modelExclude: PaymentCardResetPin = {};\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * Opens the modal.\n   */\n  onModalOpen() {\n    this.isModalOpen = true;\n  }\n  /**\n   * Submit handler for reset pin.\n   */\n  onSubmit() {\n    const model = { ...this.model };\n    const raw = { ...this.model, ...this.modelExclude };\n    if (this.mode === ResetPinModeEnum.Reset) {\n      this.resetPin.emit({ raw, model });\n    } else if (this.mode === ResetPinModeEnum.Request) {\n      this.requestPin.emit({ raw, model });\n    }\n\n    this.onModalClose();\n  }\n  /**\n   * Closes the modal.\n   */\n  onModalClose() {\n    this.modalStep = 1;\n    this.model = {};\n    this.modelExclude = {};\n    this.isModalOpen = false;\n  }\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbCardsResetPinCustomizable]',\n})\nexport class CardsResetPinCustomizableDirective extends BbTemplate<PaymentCardResetPinComponent, undefined> {}\n\n@Directive({\n  selector: '[bbCardsResetPinConfirmationCustomizable]',\n})\nexport class CardsResetPinConfirmationCustomizableDirective extends BbTemplate<\n  PaymentCardResetPinComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbCardsResetPinFormCustomizable]',\n})\nexport class CardsResetPinFormCustomizableDirective extends BbTemplate<PaymentCardResetPinComponent, undefined> {}\n\n@Directive({\n  selector: '[bbCardsResetPinNewPinCustomizable]',\n})\nexport class CardsResetPinNewPinCustomizableDirective extends BbTemplate<PaymentCardResetPinComponent, undefined> {}\n","<ng-container bbCardsResetPinCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsResetPinCustomizable let-hostRef>\n  <bb-load-button-ui\n    [block]=\"true\"\n    color=\"secondary\"\n    [isLoading]=\"hostRef.isResetPinLoading\"\n    (click)=\"hostRef.onModalOpen()\"\n  >\n    <ng-container *ngIf=\"hostRef.mode ==='REQUEST'\" i18n=\"Request PIN button|Request pin@@card.pin.request.button\">Request</ng-container>\n    <ng-container *ngIf=\"hostRef.mode ==='RESET'\" i18n=\"Reset PIN button|Reset pin@@card.pin.reset.button\">Reset</ng-container>\n  </bb-load-button-ui>\n\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isModalOpen\"\n    [modalOptions]=\"{ centered: true }\"\n    (cancel)=\"hostRef.onModalClose()\"\n  >\n    <div class=\"modal-header\">\n      <div class=\"bb-block bb-block--xs\">\n        <ng-container *ngIf=\"hostRef.mode === 'REQUEST'\">\n          <h2 i18n=\"Request PIN card heading|Request pin card header@@card.requestPinForm.heading\">\n            Request new PIN\n          </h2>\n        </ng-container>\n        <ng-container *ngIf=\"hostRef.mode === 'RESET'\">\n          <h2 i18n=\"Reset PIN card heading|Reset pin header@@card.resetPin.heading\">\n            Reset PIN\n          </h2>\n        </ng-container>\n      </div>\n    </div>\n\n    <ng-container \n      bbCardsResetPinFormCustomizable \n      *ngIf=\"hostRef.modalStep === 1 && hostRef.isModalOpen\" \n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n\n    <ng-container\n      bbCardsResetPinConfirmationCustomizable\n      *ngIf=\"hostRef.modalStep === 2 && hostRef.mode ==='REQUEST' && hostRef.isModalOpen\" \n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n\n    <ng-container\n      bbCardsResetPinNewPinCustomizable\n      *ngIf=\"(hostRef.modalStep === 2 || hostRef.modalStep === 3) && hostRef.mode ==='RESET' && hostRef.isModalOpen\" \n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template bbCardsResetPinFormCustomizable let-hostRef>\n  <!-- Form step for Request and Reset PIN-->\n  <form #pinForm=\"ngForm\" (ngSubmit)=\"hostRef.modalStep = hostRef.modalStep + 1\">\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 order-sm-2\">\n          <div data-role=\"modal-card-img\" class=\"bb-block bb-block--md bb-payment-card-back bb-payment-card-icon-dialog\"></div>\n        </div>\n        <div class=\"col-12 col-sm-6\">\n          <h3 i18n=\"Enter your code heading|Heading for enter your code@@card.resetPinForm.options.heading\">\n            Enter your CVV code\n          </h3>\n          <p\n            class=\"bb-text-support\"\n            i18n=\"Enter your code subtext|Subtext for enter your code@@card.resetPinForm.options.subtitle\"\n          >Continue by entering your CVV code found on the back of your card as shown in the image.</p>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <bb-input-password-ui\n                #cvvToken=\"ngModel\"\n                data-role=\"card-details-cvv-input\"\n                name=\"token\"\n                [autofocus]=\"true\"\n                [(ngModel)]=\"hostRef.model.token\"\n                [required]=\"true\"\n                [minlength]=\"3\"\n                label=\"CVV code\"\n                i18n-label='CVV Code heading|Heading for CVV@@card.resetPinForm.options.heading'\n              ></bb-input-password-ui>\n            </div>\n            <div class=\"col-12\">\n              <bb-input-validation-message-ui [showErrors]=\"!!cvvToken.errors && !!cvvToken.touched\">\n                <span i18n=\"CVV Code validation@@card.resetPinForm.options.token.error.msg\">\n                  You need to enter the full CVV code.\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"!!pinForm.invalid\"\n          i18n=\"Confirm continue pin button|Reset pin continue button@@card.resetPinForm.submitButton\"\n        >Continue</bb-button-ui>\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"button\"\n          color=\"link\"\n          (click)=\"hostRef.onModalClose()\"\n          i18n=\"Cancel button|Cancel card reset pin@@card.resetPinForm.cancelButton\"\n        >Cancel</bb-button-ui>\n      </div>\n    </div>\n  </form>\n</ng-template>\n\n<ng-template bbCardsResetPinConfirmationCustomizable let-hostRef>\n  <!-- Confirmation step for Request Pin -->\n  <div class=\"modal-body\">\n    <bb-alert-ui \n      modifier=\"warning\" \n      title=\"Your new PIN will be delivered to your address within approximately 3 to 5 working days.\" \n      i18n-title=\"Reset pin alert|Reset pin alert@card.resetPinForm.alert\"\n    >\n    </bb-alert-ui>\n    <div>\n      <h5\n        class=\"bb-text-semi-bold\"\n        i18n=\"Delivery address header|Delivery address@@card.resetPinForm.deliveryAddress.heading\"\n      >Delivery address</h5>\n      <p\n        class=\"bb-text-support\"\n        i18n=\"Delivery address subtext|Delivery address@@card.resetPinForm.deliveryAddress.subtext\"\n      >The card will be delivered at your address currently known by us.</p>\n    </div>\n  </div>\n    \n  <div class=\"modal-footer\">\n    <div class=\"bb-button-bar\">\n      <bb-button-ui\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        (click)=\"hostRef.onSubmit()\"\n        i18n=\"Request pin button|Request pin confirm button@@card.requestPinForm.submitButtonConfirm\"\n      >Request new PIN</bb-button-ui>\n      <bb-button-ui\n        class=\"bb-button-bar__button\"\n        type=\"button\"\n        color=\"link\"\n        (click)=\"hostRef.onModalClose()\"\n        i18n=\"Cancel button|Cancel card request pin@@card.requestPinForm.cancelButton\"\n      >Cancel</bb-button-ui>\n    </div>\n    \n  </div>\n</ng-template>\n\n<ng-template bbCardsResetPinNewPinCustomizable let-hostRef>\n  <!-- Confirmation step for Reset Pin -->\n  <form #pinForm=\"ngForm\" (ngSubmit)=\"hostRef.onSubmit()\">\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"bb-block bb-block--md col-12 col-sm-8 order-sm-2\">\n          <div class=\"bb-stack\">\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <bb-payment-card-ui\n                [paymentCard]=\"hostRef.paymentCard\"\n              ></bb-payment-card-ui>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-6 col-sm-4\">\n          <ng-container *ngIf=\"hostRef.modalStep === 2\">\n            <bb-input-password-ui\n              label=\"Enter new PIN\"\n              i18n-label=\"Enter your new pin|Enter new pin code@@card.resetPinForm.enterNewPin\"\n              name=\"pin\"\n              [(ngModel)]=\"hostRef.model.pin\"\n              [autofocus]=\"true\"\n              [required]=\"true\"\n            ></bb-input-password-ui>\n          </ng-container>\n    \n          <ng-container *ngIf=\"hostRef.modalStep === 3\">\n            <bb-input-password-ui\n              label=\"Re-enter new PIN\"\n              i18n-label=\"Re-enter your new pin|Re-enter new pin code@@card.resetPinForm.reEnterNewPin\"\n              name=\"pin2\"\n              [(ngModel)]=\"hostRef.modelExclude.pin2\"\n              [autofocus]=\"true\"\n              [required]=\"true\"\n            ></bb-input-password-ui>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <bb-button-ui\n          *ngIf=\"hostRef.modalStep === 2\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          (click)=\"hostRef.modalStep = hostRef.modalStep + 1\"\n          [disabled]=\"!!pinForm.invalid\"\n          i18n=\"Continue button|Continue card reset pin@@card.resetPinForm.continueButton\"\n        >Continue</bb-button-ui>\n        <bb-button-ui\n          *ngIf=\"hostRef.modalStep === 3\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!!pinForm.invalid\"\n          i18n=\"Confirm reset pin button|Reset pin confirm button@@card.resetPinForm.resetSubmitButton\"\n        >Confirm Reset</bb-button-ui>\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"button\"\n          color=\"link\"\n          (click)=\"hostRef.onModalClose()\"\n          i18n=\"Cancel button|Cancel card reset pin@@card.resetPinForm.cancelButton\"\n        >Cancel</bb-button-ui>\n      </div>\n    </div>\n  </form>  \n</ng-template>\n   ","import { Component, Input } from '@angular/core';\nimport { PaymentCardDisplayState } from '../../model/payment-card.model';\n\n@Component({\n  selector: 'bb-payment-card-state-wrapper,bb-payment-card-state-wrapper-ui',\n  templateUrl: './payment-card-state-wrapper.component.html',\n})\nexport class PaymentCardStateWrapperComponent {\n  /**\n   * State of the card to display.  Overrides deprecated `lockStatus` input.\n   */\n  @Input() state: PaymentCardDisplayState | undefined;\n}\n","<div class=\"bb-payment-card-state\">\n  <div class=\"bb-payment-card-state__container\" *ngIf=\"state\">\n    <!-- Inactive -->\n    <ng-container *ngIf=\"state === 'INACTIVE'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"warning\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Inactive\"\n        i18n-text=\"Inactive label|Text for the inactive label@@cards.cardState.inactive\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n\n    <!-- Locked -->\n    <ng-container *ngIf=\"state === 'LOCKED'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"lock\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Locked\"\n        i18n-text=\"Locked label|Text for the locked label@@cards.cardState.locked\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n\n    <!-- Cancelled -->\n    <ng-container *ngIf=\"state === 'CANCELLED'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"not-interested\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Cancelled\"\n        i18n-text=\"Cancelled label|Text for the cancelled label@@cards.cardState.cancelled\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n\n    <!-- Expired -->\n    <ng-container *ngIf=\"state === 'EXPIRED'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"access-time\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Expired\"\n        i18n-text=\"Expired label|Text for the expired label@@cards.cardState.expired\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n  </div>\n\n  <div [ngClass]=\"{ 'bb-payment-card-state__overlay': state }\">\n    <ng-content></ng-content>\n  </div>\n</div>\n","/**\n * Possible payment card replacement reasons.\n */\nexport enum PaymentCardReplacementReason {\n  Lost = 'LOST',\n  Stolen = 'STOLEN',\n  Damaged = 'DAMAGED',\n}\n\n/**\n * Mapping from internal `PaymentCardReplacementReason` values to http post values for\n * `replacementReason`.\n */\nexport interface PaymentCardReplacementReasonMapping {\n  [replacementReason: string]: string;\n}\n","import { PaymentCardDeliveryStatus } from './payment-card-delivery-status.model';\nimport { PaymentCardLimit } from './payment-card-limit.model';\n\n/**\n * Possible payment card statuses.\n */\nexport enum PaymentCardStatus {\n  Active = 'ACTIVE',\n  Inactive = 'INACTIVE',\n  Canceled = 'CANCELED',\n  Expired = 'EXPIRED',\n}\n\n/**\n * Possible payment card replacement statuses.\n */\nexport enum PaymentCardReplacementStatus {\n  NotUnderReplacement = 'NOT_UNDER_REPLACEMENT',\n  UnderReplacement = 'UNDER_REPLACEMENT',\n  Replaced = 'REPLACED',\n}\n\n/**\n * Possible payment card lock statuses.\n */\nexport enum PaymentCardLockStatus {\n  Locked = 'LOCKED',\n  Unlocked = 'UNLOCKED',\n}\n\n/**\n * Payment card data.\n */\nexport interface PaymentCard {\n  /**\n   * Card uuid.\n   */\n  id: string;\n  /**\n   * Unformatted payment card number.\n   */\n  number: number | string;\n  /**\n   * Payment card vendor.\n   */\n  vendor: string;\n  /**\n   * Holder name to be displayed on the payment card.\n   */\n  name: string;\n  /**\n   * Date the payment card expires.\n   */\n  expirationDate: Date;\n  /**\n   * Payment card type.\n   */\n  type: string;\n  /**\n   * Payment card subtype.\n   */\n  subType?: string;\n  /**\n   * Payment card status.\n   */\n  status: PaymentCardStatus | string;\n  /**\n   * Payment card replacement status.\n   */\n  replacementStatus?: PaymentCardReplacementStatus | string;\n  /**\n   * Payment card lock status.\n   */\n  lockStatus?: PaymentCardLockStatus;\n  /**\n   * Payment card delivery status.\n   */\n  deliveryStatus?: PaymentCardDeliveryStatus;\n  /**\n   * Payment card currency.\n   */\n  currency?: string;\n  /**\n   * Payment card name.\n   */\n  cardName: string;\n  /**\n   * Payment card limits.\n   */\n  limits?: Array<PaymentCardLimit>;\n  additions?: { [key: string]: any };\n}\n\n/** @deprecated DEACTIVATED type is deprecated, use CANCELLED instead */\nexport type PaymentCardDisplayStateDeactivated = 'DEACTIVATED';\nexport type PaymentCardDisplayState =\n  | 'INACTIVE'\n  | 'LOCKED'\n  | 'CANCELLED'\n  | 'EXPIRED'\n  | PaymentCardDisplayStateDeactivated;\n","import { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PaymentCardDeliveryStepStatus } from './model/payment-card-delivery-status.model';\nimport { PaymentCardDeliveryStepStatusMapping } from './model/payment-card-delivery-step-status-mapping.model';\nimport { PaymentCardLimitChannelMapping } from './model/payment-card-limit-channel-mapping';\nimport { PaymentCardLockStatusMapping } from './model/payment-card-lock-status-mapping.model';\nimport {\n  PaymentCardReplacementReason,\n  PaymentCardReplacementReasonMapping,\n} from './model/payment-card-replacement-reason.model';\nimport { PaymentCardReplacementStatusMapping } from './model/payment-card-replacement-status-mapping.model';\nimport { PaymentCardStatusMapping } from './model/payment-card-status-mapping.model';\nimport { PaymentCardLockStatus, PaymentCardReplacementStatus, PaymentCardStatus } from './model/payment-card.model';\n\n/**\n * Timeout for the notification\n */\nexport const notificationTtl = 5000;\n\n/**\n * The default mapping of backend values to internal model representation for card status.  This\n * mapping can be overridden per app.\n */\n// prettier-ignore\nexport const defaultStatusMapping: PaymentCardStatusMapping = {\n  'Active': PaymentCardStatus.Active,\n  'Inactive': PaymentCardStatus.Inactive,\n  'Cancelled': PaymentCardStatus.Canceled,\n  'Expired': PaymentCardStatus.Expired,\n};\n\n/**\n * The default mapping of backend values to internal model representation for card replacement\n * status.  This mapping can be overridden per app.\n */\n// prettier-ignore\nexport const defaultReplacementStatusMapping: PaymentCardReplacementStatusMapping = {\n  'NotUnderReplacement': PaymentCardReplacementStatus.NotUnderReplacement,\n  'ReplacementRequested': PaymentCardReplacementStatus.UnderReplacement,\n  'ReplacementInTransit': PaymentCardReplacementStatus.UnderReplacement,\n  'ReplacementUnderCancellation': PaymentCardReplacementStatus.UnderReplacement,\n  'Replaced': PaymentCardReplacementStatus.Replaced,\n};\n\n/**\n * The mapping of backend values to internal model representation for card lock status.  This\n * mapping cannot be overridden (it is hardwired in the spec).\n */\n// prettier-ignore\nexport const defaultLockStatusMapping: PaymentCardLockStatusMapping = {\n  'LOCKED': PaymentCardLockStatus.Locked,\n  'UNLOCKED': PaymentCardLockStatus.Unlocked,\n};\n\n/**\n * The mapping of backend values to internal model representation for card delivery step status.\n * This mapping cannot be overridden (it is hardwired in the spec).\n */\n// prettier-ignore\nexport const defaultDeliveryStepStatusMapping: PaymentCardDeliveryStepStatusMapping = {\n  'SUCCESS': PaymentCardDeliveryStepStatus.Success,\n  'PENDING': PaymentCardDeliveryStepStatus.Pending,\n  'FAILED': PaymentCardDeliveryStepStatus.Failed,\n};\n\n/**\n * The default mapping of internal model representation to backend values for card replacement\n * reason.  This mapping can be overridden per app.\n */\nexport const defaultReplacementReasonMapping: PaymentCardReplacementReasonMapping = {\n  [PaymentCardReplacementReason.Lost]: 'Lost',\n  [PaymentCardReplacementReason.Stolen]: 'Stolen',\n  [PaymentCardReplacementReason.Damaged]: 'Damaged',\n};\n\n// prettier-ignore\nexport const defaultLimitChannelMapping: PaymentCardLimitChannelMapping = {\n  'ATM': { name: 'withdrawals', description: 'The amount you can withdraw from cash machines' },\n  'ONLINE': { name: 'online purchases', description: 'The limit for when using your card for payments online' },\n  'POS': {\n    name: 'terminal payments',\n    description: 'The limit for physical payments with your card (e.g. supermarkets, restaurants, etc.)',\n  },\n};\n\n/**\n * Enumeration of possible widget preferences\n */\nexport const WidgetProperties = {\n  NotificationTtl: 'notificationTtl',\n  updateAllLimits: 'bb.card.updateAllLimits',\n};\n\nexport const DEFAULT_PAYMENT_CARD_TYPE_GROUP = ['Credit', 'Debit'];\n\nexport const filterInputParameters = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n","import { HttpErrorResponse } from '@angular/common/http';\n\n/**\n * This interface is used by the template to display what is wrong to the user.\n */\nexport interface CardsBackendError {\n  message: string;\n  key?: string;\n  context?: { [key: string]: string };\n}\n\n/* eslint-disable no-redeclare*/\nexport namespace CardsBackendError {\n  const getMessageFromResponse = (error: HttpErrorResponse): string[] | undefined => {\n    const responseBody = error.error;\n    if (Array.isArray(responseBody && responseBody.errors)) {\n      return responseBody.errors.map((data: CardsBackendError) => {\n        const { context = {} } = data;\n        const message = data.message.replace(/{[_a-zA-Z][_a-zA-Z0-9]*}/g, (match) => {\n          const result = context[match.replace(/[\\{\\}']+/g, '')];\n\n          return result !== undefined ? result : match;\n        });\n\n        return `Error ${error.status}: ${message}`;\n      });\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @name fromHttpErrorResponse\n   * @param errorResponse The error response\n   * @returns An object containing a user-friendly error message\n   *\n   * @description\n   * Parse an HttpErrorResponse and return a CardsBackendError object that can be used to display a\n   * user-friendly error message.\n   */\n  export const fromHttpErrorResponse = (errorResponse: HttpErrorResponse): CardsBackendError => {\n    if (errorResponse.error instanceof ErrorEvent || !errorResponse.status) {\n      // Client-side or network error.\n      return {\n        message: 'An unexpected error occurred',\n      };\n    } else {\n      const error = getMessageFromResponse(errorResponse) || [];\n\n      return {\n        message: error[0] || `Error ${errorResponse.status}`,\n      };\n    }\n  };\n\n  export const fromHttpErrorsResponse = (errorResponse: HttpErrorResponse): CardsBackendError[] => {\n    if (errorResponse.error instanceof ErrorEvent || !errorResponse.status) {\n      // Client-side or network error.\n      return [\n        {\n          message: 'An unexpected error occurred',\n        },\n      ];\n    } else {\n      const errors = getMessageFromResponse(errorResponse) || [`Error ${errorResponse.status}`];\n\n      return errors.map((message) => ({ message }));\n    }\n  };\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {\n  CardItem,\n  YearMonth,\n  Delivery,\n  DeliveryTransitStep,\n  TravelNotice,\n  Destination,\n  Contact,\n  LockStatusPost,\n} from '@backbase/data-ang/cards';\n\nimport {\n  defaultReplacementStatusMapping,\n  defaultStatusMapping,\n  defaultLockStatusMapping,\n  defaultReplacementReasonMapping,\n  defaultDeliveryStepStatusMapping,\n  defaultLimitChannelMapping,\n} from '../constants';\nimport { CardsBackendError } from '../model/cards-backend-error.model';\nimport { PaymentCard, PaymentCardLockStatus, PaymentCardReplacementStatus } from '../model/payment-card.model';\nimport { PaymentCardLockStatusMapping } from '../model/payment-card-lock-status-mapping.model';\nimport { PaymentCardReplacementStatusMapping } from '../model/payment-card-replacement-status-mapping.model';\nimport { PaymentCardStatusMapping } from '../model/payment-card-status-mapping.model';\nimport { PaymentCardLimitChannelMapping } from '../model/payment-card-limit-channel-mapping';\nimport {\n  PaymentCardReplacementReason,\n  PaymentCardReplacementReasonMapping,\n} from '../model/payment-card-replacement-reason.model';\nimport { PaymentCardDeliveryStepStatus } from '../model/payment-card-delivery-status.model';\nimport { CardsBackendDestinations } from '../model/cards-backend-destination.model';\ntype CardItemList = CardItem[];\n/**\n * InjectionToken for overriding the default `PaymentCardStatusMapping` used to map backend\n * `status` values to internal status values.\n */\nexport const StatusMappingConfigToken = new InjectionToken<PaymentCardStatusMapping>('statusMapping injection token');\n\n/**\n * InjectionToken for overriding the default `PaymentCardReplacementStatusMapping` used to map\n * backend `replacementStatus` values to internal replacement status values.\n */\nexport const ReplacementStatusMappingConfigToken = new InjectionToken<PaymentCardReplacementStatusMapping>(\n  'replacementStatusMapping injection token',\n);\n\n/**\n * InjectionToken for overriding the default `PaymentCardReplacementReasonMapping` used to map\n * internal replacement reason values to backend `replacementReason` values.\n */\nexport const ReplacementReasonMappingConfigToken = new InjectionToken<PaymentCardReplacementReasonMapping>(\n  'replacementReasonMapping injection token',\n);\n\n/**\n * InjectionToken for overriding the default `limitChannelMappingConfigToken` used to map\n * internal limit channels to backend values.\n */\nexport const LimitChannelMappingConfigToken = new InjectionToken<PaymentCardLimitChannelMapping>(\n  'limitChannelMapping injection token',\n);\n\n/**\n * InjectionToken for overriding the default `CardsBackendDestinations` used to retrieve\n * countries from either a content-manager or database or any other third party.\n */\nexport const DestinationsServiceConfigToken = new InjectionToken<CardsBackendDestinations>(\n  'coutriesService injection token',\n);\n\n/**\n * @inner\n * @param maskedNumber - Number as returned in the http response\n * @returns Number\n *\n * @description\n * Process number provided by backend, removing whitespace.\n */\nfunction processNumber(maskedNumber: string) {\n  return maskedNumber.replace(/\\s/g, '');\n}\n\n/**\n * @inner\n * @param status - Status as returned in the http response\n * @param statusMapping - Mapping of http response value to model\n * @returns Mapped payment card status, of the passed status if it cannot be mapped\n *\n * @description\n * Process status provided by backend.\n */\nfunction processStatus(status: string, statusMapping: PaymentCardStatusMapping) {\n  if (statusMapping.hasOwnProperty(status)) {\n    return statusMapping[status];\n  } else {\n    return status;\n  }\n}\n\nfunction processLimitChannel(limitChannel: string = '', limitChannelMapping: PaymentCardLimitChannelMapping) {\n  if (limitChannelMapping.hasOwnProperty(limitChannel)) {\n    return limitChannelMapping[limitChannel];\n  } else {\n    return { name: limitChannel, description: '' };\n  }\n}\n\n/**\n * @inner\n * @param replacementStatus - Replacement status as returned in the http response\n * @param replacementStatusMapping - Mapping of http response value to model\n * @returns Mapped payment card replacement status, or\n * `PaymentCardReplacementStatus.NotUnderReplacement` if the passed status is empty, or the passed\n * status if it cannot be mapped\n *\n * @description\n * Process replacement status provided by backend.\n */\nfunction processReplacementStatus(\n  replacementStatus: string | undefined,\n  replacementStatusMapping: PaymentCardReplacementStatusMapping,\n) {\n  if (typeof replacementStatus === 'undefined') {\n    return PaymentCardReplacementStatus.NotUnderReplacement;\n  } else if (replacementStatusMapping.hasOwnProperty(replacementStatus)) {\n    return replacementStatusMapping[replacementStatus];\n  } else {\n    return replacementStatus;\n  }\n}\n\n/**\n * @inner\n * @param lockStatus - Lock status as returned in the http response\n * @param lockStatusMapping - Mapping of http response value to model\n * @returns Payment card lock status\n *\n * @description\n * Process lock status provided by backend.\n */\nfunction processLockStatus(lockStatus: string | undefined, lockStatusMapping: PaymentCardLockStatusMapping) {\n  if (lockStatus && lockStatusMapping.hasOwnProperty(lockStatus)) {\n    return lockStatusMapping[lockStatus];\n  } else {\n    return PaymentCardLockStatus.Unlocked;\n  }\n}\n\n/**\n * @inner\n * @param replacementReason - Replacement reason\n * @param replacementReasonMapping - Mapping of model to http POST value\n * @returns Mapped payment card replacement reason, or the passed replacement reason if it cannot\n * be mapped\n *\n * @description\n * Process replacement reason into value to pass to backend.\n */\nfunction processReplacementReason(\n  replacementReason: PaymentCardReplacementReason | string,\n  replacementReasonMapping: PaymentCardReplacementReasonMapping,\n) {\n  if (replacementReasonMapping.hasOwnProperty(replacementReason)) {\n    return replacementReasonMapping[replacementReason];\n  } else {\n    return replacementReason;\n  }\n}\n\n/**\n * @inner\n * @param deliveryStepStatus - delivery transit step status as returned in the http response\n * @returns Delivery transit step status\n *\n * @description\n * Process delivery transit step status provided by backend.\n */\nfunction processDeliveryStepStatus(deliveryStepStatus: string) {\n  if (deliveryStepStatus && defaultDeliveryStepStatusMapping.hasOwnProperty(deliveryStepStatus)) {\n    return defaultDeliveryStepStatusMapping[deliveryStepStatus];\n  } else {\n    return PaymentCardDeliveryStepStatus.Pending;\n  }\n}\n\n/**\n * @inner\n * @param deliveryStep - delivery transit step object as returned in the http response\n * @returns Delivery transit step\n *\n * @description\n * Process delivery transit step provided by backend.\n */\nfunction processDeliveryStep(deliveryStep: DeliveryTransitStep) {\n  return {\n    name: deliveryStep.name,\n    status: processDeliveryStepStatus(deliveryStep.status),\n    ...(deliveryStep.stepDateTime ? { stepDateTime: new Date(deliveryStep.stepDateTime) } : {}),\n  };\n}\n\n/**\n * @inner\n * @param delivery - delivery object as returned in the http response\n * @returns Delivery status\n *\n * @description\n * Process delivery status provided by backend.\n */\nfunction processDeliveryStatus(delivery: Delivery) {\n  return {\n    transitSteps: delivery.transitSteps.map(processDeliveryStep),\n  };\n}\n\n/**\n * @inner\n * @param yearMonth - expiration date as returned in the http response\n * @returns Date\n *\n * @description\n * Process expiration date provided by backend.\n */\nfunction processExpirationDate(yearMonth: YearMonth) {\n  return new Date(Number(yearMonth.year), Number(yearMonth.month) - 1);\n}\n\n/**\n * @name CardsBackendService\n *\n * @description\n * Utility functions for processing data returned by the backend.\n */\n@Injectable()\nexport class CardsBackendService {\n  private readonly statusMapping: PaymentCardStatusMapping;\n  private readonly replacementStatusMapping: PaymentCardReplacementStatusMapping;\n  private readonly lockStatusMapping: PaymentCardLockStatusMapping;\n  private readonly replacementReasonMapping: PaymentCardReplacementReasonMapping;\n  private readonly limitChannelMapping: PaymentCardLimitChannelMapping;\n\n  /**\n   * @name CardsBackendService#itemListToModel\n   * @param items - List of card items as returned in the http response\n   * @returns Array of payment cards\n   *\n   * @description\n   * Process data returned by the backend.\n   */\n  itemListToModel(items: CardItemList | null): Array<PaymentCard> {\n    return (items || []).map(this.itemToModel);\n  }\n\n  /**\n   * @name CardsBackendService#itemToModel\n   * @param item - Item as returned in the http response\n   * @returns Payment card\n   *\n   * @description\n   * Process payment card provided by backend.\n   */\n  // eslint-disable-next-line\n  itemToModel = (item: CardItem): PaymentCard => ({\n    id: item.id,\n    name: (item.holder && item.holder.name) || '',\n    number: processNumber(item.maskedNumber),\n    vendor: item.brand,\n    type: item.type,\n    status: processStatus(item.status, this.statusMapping),\n    replacementStatus: processReplacementStatus(\n      item.replacement && item.replacement.status,\n      this.replacementStatusMapping,\n    ),\n    lockStatus: processLockStatus(item.lockStatus, this.lockStatusMapping),\n    expirationDate: processExpirationDate(item.expiryDate || { year: '', month: '' }),\n    cardName: item.name || '',\n    ...(item.delivery ? { deliveryStatus: processDeliveryStatus(item.delivery) } : {}),\n    ...(item.subType ? { subType: item.subType } : {}),\n    ...(item.currency ? { currency: item.currency } : {}),\n    ...(item.additions ? { additions: item.additions } : {}),\n    ...(item.limits\n      ? {\n          limits: item.limits.map((limit) => ({\n            ...limit,\n            channel: processLimitChannel(limit.channel, this.limitChannelMapping),\n          })),\n        }\n      : {}),\n  });\n\n  travelNoticeToModel = (item: TravelNotice, paymentCards: PaymentCard[]) => ({\n    id: item.id,\n    cards: item.cardIds\n      .map((cardId) => paymentCards.find((card) => card.id === cardId))\n      .filter((card) => card !== undefined) as Array<PaymentCard>,\n    departureDate: new Date(item.departureDate),\n    arrivalDate: new Date(item.arrivalDate),\n    destinations: item.destinations as Destination[],\n    contact: item.contact as Contact,\n  });\n\n  /**\n   * @name CardsBackendService#getLockStatusUpdate\n   * @param lockStatus - New lock status\n   * @returns Update object to pass to `postCardsLockStatusRecordById` data module function\n   *\n   * @description\n   * Make lock status update object to pass to backend.\n   */\n  getLockStatusUpdate = (lockStatus: PaymentCardLockStatus): LockStatusPost => ({\n    lockStatus: lockStatus === PaymentCardLockStatus.Unlocked ? 'UNLOCKED' : 'LOCKED',\n  });\n\n  /**\n   * @name CardsBackendService#getReplacementUpdate\n   * @param replacementReason - Reason for the replacement\n   * @returns Update object to pass to `postCardsReplacementRecordById` data module function\n   *\n   * @description\n   * Make replacement update object to pass to backend.\n   */\n  getReplacementUpdate = (replacementReason: PaymentCardReplacementReason | string) => ({\n    replacementReason: processReplacementReason(replacementReason, this.replacementReasonMapping),\n  });\n\n  /**\n   * @name CardsBackendService#parseError\n   * @param error - The error response\n   * @returns An object containing a user-friendly error message\n   *\n   * @description\n   * Parse an HttpErrorResponse and return a CardsBackendError object that can be used to display a\n   * user-friendly error message.\n   */\n  parseError(error: HttpErrorResponse): CardsBackendError[] {\n    return CardsBackendError.fromHttpErrorsResponse(error);\n  }\n  /* eslint-disable */\n  constructor(\n    @Optional()\n    @Inject(StatusMappingConfigToken)\n    statusMapping: PaymentCardStatusMapping | undefined,\n    @Optional()\n    @Inject(ReplacementStatusMappingConfigToken)\n    replacementStatusMapping: PaymentCardReplacementStatusMapping | undefined,\n    @Optional()\n    @Inject(ReplacementReasonMappingConfigToken)\n    replacementReasonMapping: PaymentCardReplacementReasonMapping | undefined,\n    @Optional()\n    @Inject(LimitChannelMappingConfigToken)\n    limitChannelMapping: PaymentCardLimitChannelMapping | undefined,\n  ) {\n    this.statusMapping = { ...defaultStatusMapping, ...statusMapping };\n    this.replacementStatusMapping = { ...defaultReplacementStatusMapping, ...replacementStatusMapping };\n    this.lockStatusMapping = { ...defaultLockStatusMapping };\n    this.replacementReasonMapping = { ...defaultReplacementReasonMapping, ...replacementReasonMapping };\n    this.limitChannelMapping = { ...defaultLimitChannelMapping, ...limitChannelMapping };\n  }\n  /* eslint-enable */\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { CardsHttpService as ApiCardsService, TravelNotice, TravelNoticesHttpService } from '@backbase/data-ang/cards';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { catchError, distinctUntilChanged, map, publishReplay, refCount, switchMap } from 'rxjs/operators';\nimport { CardsGetParams } from '../model/cards-get-params.model';\nimport { PaymentCardLimit } from '../model/payment-card-limit.model';\nimport { PaymentCardReplacementReason } from '../model/payment-card-replacement-reason.model';\nimport {\n  PaymentCard,\n  PaymentCardLockStatus,\n  PaymentCardReplacementStatus,\n  PaymentCardStatus,\n} from '../model/payment-card.model';\nimport { FullTravelNoticeModel, TravelNotice as TravelNoticeModel } from '../model/travel-notice.model';\nimport { CardsBackendService } from './cards-backend.service';\n\nconst initialGetParams: CardsGetParams = {};\n\nconst deepEqual = (x: any, y: any): boolean =>\n  x && y && typeof x === 'object' && typeof x === typeof y\n    ? Object.keys(x).length === Object.keys(y).length && Object.keys(x).every((key) => deepEqual(x[key], y[key]))\n    : x === y;\n\nconst cacheRequest =\n  <Params, Result>(request: (params: Params) => Observable<Result>) =>\n  (source: Observable<Params>): Observable<Result> =>\n    source.pipe(switchMap(request), publishReplay(1), refCount());\n\n/**\n * @name CardsService\n *\n * @description\n * Service for retrieving cards from the backend.\n */\n@Injectable()\nexport class CardsService implements OnDestroy {\n  private readonly getParams = new BehaviorSubject<CardsGetParams>(initialGetParams);\n  private readonly paymentCards: Observable<Array<PaymentCard>> = this.getParams.pipe(\n    distinctUntilChanged(deepEqual),\n    cacheRequest((getParams) =>\n      this.cardsDataHttpService.getCards(getParams, 'response').pipe(\n        map((response) => this.cardsBackendService.itemListToModel(response.body)),\n        catchError((error) => {\n          throw this.cardsBackendService.parseError(error);\n        }),\n      ),\n    ),\n  );\n\n  private readonly travelNotice: Observable<TravelNotice[]> = this.cardsTravelNotice.getTravelNotices('response').pipe(\n    distinctUntilChanged(deepEqual),\n    map((response) => (response.body === null ? [] : response.body)),\n    catchError((error) => {\n      throw this.cardsBackendService.parseError(error);\n    }),\n  );\n\n  /**\n   * @name CardsService#getCards\n   * @returns The (single-instance) observable of payment cards retrieved from the backend.\n   *\n   * @description\n   * Returns the (single-instance) observable of payment cards retrieved from the backend.\n   */\n  getCards(): Observable<Array<PaymentCard>> {\n    return this.paymentCards;\n  }\n\n  setParameters(typesParams: Observable<string[]>) {\n    typesParams\n      .pipe(\n        map((types) => ({\n          types,\n        })),\n      )\n      .subscribe(this.getParams);\n  }\n\n  /**\n   * @name CardsService#updateLockStatus\n   * @returns An observable of the payment card with updated lock status.\n   *\n   * @description\n   * Calls the backend to change the lock status and returns an observable of updated payment card\n   * returned in the response.  If that response is empty, the existing payment card with the\n   * updated lock status is returned.\n   */\n  updateLockStatus(card: PaymentCard, lockStatus: PaymentCardLockStatus): Observable<PaymentCard> {\n    const body = this.cardsBackendService.getLockStatusUpdate(lockStatus);\n\n    return this.cardsDataHttpService.updateLockStatus({ id: card.id, lockStatusPost: body }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n              lockStatus,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  /**\n   * @name CardsService#initiateReplacement\n   * @returns An observable of the payment card with updated replacement status.\n   *\n   * @description\n   * Calls the backend to initiate replacement and returns an observable of the updated payment\n   * card returned in the response.  If the response is empty, the existing payment card with\n   * replacement status set to `UNDER_REPLACEMENT` is returned.\n   */\n  initiateReplacement(\n    card: PaymentCard,\n    replacementReason: PaymentCardReplacementReason | string,\n  ): Observable<PaymentCard> {\n    const body = this.cardsBackendService.getReplacementUpdate(replacementReason);\n\n    return this.cardsDataHttpService.requestReplacement({ id: card.id, requestReplacementPost: body }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n              replacementStatus: PaymentCardReplacementStatus.UnderReplacement,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  /**\n   * @name CardsService#initiateActivation\n   * @returns An observable of the payment card with updated status.\n   *\n   * @description\n   * Calls the backend to activate a payment card and returns an observable of the updated payment\n   * card returned in the response.  If the response is empty, the existing payment card with\n   * status set to `ACTIVE` is returned.\n   */\n  initiateActivation(card: PaymentCard, token: string): Observable<PaymentCard> {\n    const body = { token };\n\n    return this.cardsDataHttpService.activate({ id: card.id, activatePost: body }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n              status: PaymentCardStatus.Active,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  /**\n   * @name CardsService#updateLimit\n   * @returns An observable of the payment card with updated limits.\n   *\n   * @description\n   * Calls the backend to update a payment card and returns an observable of the updated payment\n   * card returned in the response.  If the response is empty, the existing payment card with\n   * limits updated is returned.\n   */\n  updateLimit(card: PaymentCard, limit: Array<PaymentCardLimit>, updateAllLimits?: boolean): Observable<PaymentCard> {\n    const limitPayload = updateAllLimits\n      ? limit\n      : limit.filter((newLimitItem, index) => newLimitItem.amount !== card.limits?.[index].amount);\n\n    return this.cardsDataHttpService.changeLimits({ id: card.id, changeLimitsPostItem: limitPayload }, 'response').pipe(\n      map((response) => {\n        const limits =\n          card.limits &&\n          card.limits.map((item: PaymentCardLimit, index: number) => ({\n            ...item,\n            amount: limit[index].amount,\n          }));\n\n        return response.body === null\n          ? {\n              ...card,\n              limits,\n            }\n          : this.cardsBackendService.itemToModel(response.body);\n      }),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  resetPIN(card: PaymentCard, paymentCardResetPin: any): Observable<PaymentCard> {\n    return this.cardsDataHttpService.resetPin({ id: card.id, resetPinPost: paymentCardResetPin }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  requestPIN(card: PaymentCard, paymentCardResetPin: any): Observable<PaymentCard> {\n    return this.cardsDataHttpService.requestPin({ id: card.id, requestPinPost: paymentCardResetPin }, 'response').pipe(\n      map((response) =>\n        response.body === null\n          ? {\n              ...card,\n            }\n          : this.cardsBackendService.itemToModel(response.body),\n      ),\n      catchError((error) => {\n        throw this.cardsBackendService.parseError(error);\n      }),\n    );\n  }\n\n  /**\n   *  Modified - added a observable to only respond with active cards.\n   *\n   * @returns Observable with all travel notices and payment cards with\n   * status active\n   */\n  getTravelNotice(): Observable<FullTravelNoticeModel> {\n    const activeCards = this.paymentCards.pipe(\n      map((cards: Array<PaymentCard>) => cards.filter((card: PaymentCard) => card.status === PaymentCardStatus.Active)),\n    );\n\n    return combineLatest([activeCards, this.travelNotice]).pipe(\n      map(([paymentCards, travelNotice]) => ({\n        travelNoticeList: travelNotice.map((item) => this.cardsBackendService.travelNoticeToModel(item, paymentCards)),\n        paymentCards,\n      })),\n    );\n  }\n\n  postTravelNotice(travelNoticeItem: TravelNoticeModel): Observable<TravelNotice> {\n    const { cards, ...otherTravelNoticeProperties } = travelNoticeItem;\n    const travelNoticeData = { ...otherTravelNoticeProperties, cardIds: cards.map((item) => item.id) } as any;\n\n    return this.cardsTravelNotice.createTravelNotice({ travelNotice: travelNoticeData });\n  }\n\n  deleteTravelNotice(travelNoticeItem: TravelNoticeModel): Observable<HttpResponse<any>> {\n    const { id } = travelNoticeItem;\n    if (!id) throw new Error('Error no matching id');\n\n    return this.cardsTravelNotice.deleteTravelNoticeById({ id }, 'response');\n  }\n\n  ngOnDestroy() {\n    this.getParams.complete();\n  }\n\n  constructor(\n    private readonly cardsDataHttpService: ApiCardsService,\n    private readonly cardsBackendService: CardsBackendService,\n    private readonly cardsTravelNotice: TravelNoticesHttpService,\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputInlineEditModule } from '@backbase/ui-ang/input-inline-edit';\nimport { InputPasswordModule } from '@backbase/ui-ang/input-password';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { PaymentCardModule } from '@backbase/ui-ang/payment-card';\nimport { AccessibilityKeyboardDirective } from './components/bb-payment-card-container-base/accessibility-keyboard.directive';\nimport { DeliveryTrackerComponent } from './components/bb-payment-card-delivery-status/delivery-tracker.component';\nimport {\n  CardsDeliveryStatusCustomizableDirective,\n  PaymentCardDeliveryStatusComponent,\n} from './components/bb-payment-card-delivery-status/payment-card-delivery-status.component';\nimport {\n  CardsInitiateActivationCustomizableDirective,\n  CardsInitiateActivationFormCustomizableDirective,\n  PaymentCardInitiateActivationComponent,\n} from './components/bb-payment-card-initiate-activation/payment-card-initiate-activation.component';\nimport {\n  CardsInitiateReplacementCustomizableDirective,\n  CardsInitiateReplacementFormCustomizableDirective,\n  PaymentCardInitiateReplacementComponent,\n} from './components/bb-payment-card-initiate-replacement/payment-card-initiate-replacement.component';\nimport {\n  CardsUpdateLimitCustomizableDirective,\n  PaymentCardLimitComponent,\n} from './components/bb-payment-card-limits/payment-card-limit.component';\nimport {\n  CardsUpdateLimitsCustomizableDirective,\n  PaymentCardLimitsComponent,\n} from './components/bb-payment-card-limits/payment-card-limits.component';\nimport {\n  CardsMultipleErrorStateCustomizableDirective,\n  PaymentCardMultipleErrorStateComponent,\n} from './components/bb-payment-card-multiple-error-state/payment-card-multiple-error-state.component';\nimport {\n  CardsResetPinConfirmationCustomizableDirective,\n  CardsResetPinCustomizableDirective,\n  CardsResetPinFormCustomizableDirective,\n  CardsResetPinNewPinCustomizableDirective,\n  PaymentCardResetPinComponent,\n} from './components/bb-payment-card-reset-pin/payment-card-reset-pin.component';\nimport { PaymentCardStateWrapperComponent } from './components/bb-payment-card-state-wrapper-ui/payment-card-state-wrapper.component';\nimport { CardsBackendService } from './services/cards-backend.service';\nimport { CardsService } from './services/cards.service';\n\nconst modules = [\n  BadgeModule,\n  ButtonModule,\n  IconModule,\n  InputPasswordModule,\n  InputRadioGroupModule,\n  LoadButtonModule,\n  ModalModule,\n  InputInlineEditModule,\n  InputValidationMessageModule,\n  AlertModule,\n  PaymentCardModule,\n  AmountModule,\n  FocusModule,\n  EmptyStateModule,\n  LoadingIndicatorModule,\n];\n\nconst components = [\n  PaymentCardMultipleErrorStateComponent,\n  PaymentCardStateWrapperComponent,\n  PaymentCardInitiateReplacementComponent,\n  PaymentCardInitiateActivationComponent,\n  PaymentCardDeliveryStatusComponent,\n  DeliveryTrackerComponent,\n  PaymentCardLimitsComponent,\n  PaymentCardLimitComponent,\n  PaymentCardResetPinComponent,\n  AccessibilityKeyboardDirective,\n];\n\nconst directives = [\n  CardsInitiateActivationCustomizableDirective,\n  CardsInitiateActivationFormCustomizableDirective,\n  CardsInitiateReplacementCustomizableDirective,\n  CardsInitiateReplacementFormCustomizableDirective,\n  CardsDeliveryStatusCustomizableDirective,\n  CardsUpdateLimitsCustomizableDirective,\n  CardsResetPinCustomizableDirective,\n  CardsResetPinFormCustomizableDirective,\n  CardsResetPinConfirmationCustomizableDirective,\n  CardsResetPinNewPinCustomizableDirective,\n  CardsUpdateLimitCustomizableDirective,\n  CardsMultipleErrorStateCustomizableDirective,\n];\n\nconst services = [CardsBackendService, CardsService];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, ...modules],\n  providers: [...services],\n  declarations: [...components, ...directives],\n  exports: [...modules, ...components, ...directives],\n})\nexport class CardsCommonModule {}\n","import { ChangeDetectorRef, Directive, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { Notification, NotificationService } from '@backbase/ui-ang/notification';\nimport { PaymentCardLimit } from '../../model/payment-card-limit.model';\nimport { PaymentCardReplacementReason } from '../../model/payment-card-replacement-reason.model';\nimport { PaymentCardResetPinTransport } from '../../model/payment-card-reset-pin.model';\nimport { PaymentCard, PaymentCardLockStatus } from '../../model/payment-card.model';\nimport { CardsService } from '../../services/cards.service';\n\nconst baseNotification: Notification = {\n  header: '',\n  message: '',\n  dismissible: true,\n  modifier: 'success',\n};\n\n@Directive()\n// eslint-disable-next-line\nexport class PaymentCardContainerBase implements OnInit {\n  /**\n   * Notification messages translations\n   */\n\n  protected localizations: { [key: string]: TemplateRef<any> | string } = {\n    activationErrorHeader: '',\n    activationErrorMessage: '',\n    activationSuccessHeader: '',\n    lockErrorHeader: '',\n    lockErrorMessage: '',\n    lockSuccessHeader: '',\n    lockSuccessMessage: '',\n    replacementErrorHeader: '',\n    replacementErrorMessage: '',\n    replacementSuccessHeader: '',\n    replacementSuccessMessage: '',\n    requestNewPinSuccessMessage: '',\n    requestPinErrorMessage: '',\n    resetPinSuccessMessage: '',\n    resetPinErrorMessage: '',\n    resetInvalidPinMessage: '',\n    unlockErrorHeader: '',\n    unlockErrorMessage: '',\n    unlockSuccessHeader: '',\n    unlockSuccessMessage: '',\n    updateLimitErrorHeader: '',\n    updateLimitErrorMessage: '',\n    updateLimitSuccessHeader: '',\n    updateLimitSuccessMessage: '',\n  };\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n\n  @Input() notificationTtl: number | undefined;\n  @Input() updateAllLimits: boolean | undefined;\n  /**\n   * Event emitter for selecting a card.\n   */\n  @Output() readonly selectCard = new EventEmitter<PaymentCard>();\n\n  isLockLoading = false;\n  isInitiateReplacementLoading = false;\n  isInitiateActivationLoading = false;\n  isResetPinLoading = false;\n  isLimitsLoading = false;\n\n  constructor(\n    protected readonly cardsService: CardsService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {}\n\n  private showNotification(notification: Partial<Notification>) {\n    this.notificationService.showNotification({\n      ...baseNotification,\n      ttl: this.notificationTtl,\n      ...notification,\n    });\n  }\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  onUpdateLockStatus(lockStatus: PaymentCardLockStatus) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isLockLoading = true;\n\n    const onUpdateLockStatusSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        const header =\n          lockStatus === PaymentCardLockStatus.Locked\n            ? this.localizations.lockSuccessHeader\n            : this.localizations.unlockSuccessHeader;\n        const message =\n          lockStatus === PaymentCardLockStatus.Locked\n            ? this.localizations.lockSuccessMessage\n            : this.localizations.unlockSuccessMessage;\n\n        this.showNotification({\n          header,\n          message,\n        });\n      }\n    };\n\n    const onUpdateLockStatusError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        const header =\n          lockStatus === PaymentCardLockStatus.Locked\n            ? this.localizations.lockErrorHeader\n            : this.localizations.unlockErrorHeader;\n        const message =\n          lockStatus === PaymentCardLockStatus.Locked\n            ? this.localizations.lockErrorMessage\n            : this.localizations.unlockErrorMessage;\n\n        this.showNotification({\n          header,\n          message,\n          modifier: 'error',\n        });\n      }\n\n      this.isLockLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onUpdateLockStatusComplete = () => {\n      this.isLockLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .updateLockStatus(this.paymentCard, lockStatus)\n      .subscribe(onUpdateLockStatusSuccess, onUpdateLockStatusError, onUpdateLockStatusComplete);\n  }\n\n  onInitiateReplacement(reason: PaymentCardReplacementReason | string) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isInitiateReplacementLoading = true;\n\n    const onInitiateReplacementSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          header: this.localizations.replacementSuccessHeader,\n          message: this.localizations.replacementSuccessMessage,\n        });\n      }\n    };\n\n    const onInitiateReplacementError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.showNotification({\n          header: this.localizations.replacementErrorHeader,\n          message: this.localizations.replacementErrorMessage,\n          modifier: 'error',\n        });\n      }\n\n      this.isInitiateReplacementLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onInitiateReplacementComplete = () => {\n      this.isInitiateReplacementLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .initiateReplacement(this.paymentCard, reason)\n      .subscribe(onInitiateReplacementSuccess, onInitiateReplacementError, onInitiateReplacementComplete);\n  }\n\n  onInitiateActivation(token: string) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isInitiateActivationLoading = true;\n\n    const onInitiateActivationSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          header: this.localizations.activationSuccessHeader,\n        });\n      }\n    };\n\n    const onInitiateActivationError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.showNotification({\n          header: this.localizations.activationErrorHeader,\n          message: this.localizations.activationErrorMessage,\n          modifier: 'error',\n        });\n      }\n\n      this.isInitiateActivationLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onInitiateActivationComplete = () => {\n      this.isInitiateActivationLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .initiateActivation(this.paymentCard, token)\n      .subscribe(onInitiateActivationSuccess, onInitiateActivationError, onInitiateActivationComplete);\n  }\n\n  onUpdateLimit(limit: Array<PaymentCardLimit>) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n    this.isLimitsLoading = true;\n\n    const onUpdateLimitSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          header: this.localizations.updateLimitSuccessHeader,\n          message: this.localizations.updateLimitSuccessMessage,\n        });\n      }\n    };\n\n    const onUpdateLimitError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.notificationService.showNotification({\n          ...baseNotification,\n          header: this.localizations.updateLimitErrorHeader,\n          message: this.localizations.updateLimitErrorMessage,\n          modifier: 'error',\n        });\n      }\n      this.isLimitsLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onUpdateLimitComplete = () => {\n      this.isLimitsLoading = false;\n      this.cd.markForCheck();\n    };\n    this.cardsService\n      .updateLimit(this.paymentCard, limit, this.updateAllLimits)\n      .subscribe(onUpdateLimitSuccess, onUpdateLimitError, onUpdateLimitComplete);\n  }\n\n  onResetPin(token: PaymentCardResetPinTransport) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isResetPinLoading = true;\n\n    if (token.raw.pin2 !== undefined && token.raw.pin !== token.raw.pin2) {\n      this.isResetPinLoading = false;\n      this.showNotification({\n        message: this.localizations.resetInvalidPinMessage,\n        modifier: 'error',\n      });\n\n      return;\n    }\n\n    const onResetPinSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          message: this.localizations.resetPinSuccessMessage,\n        });\n      }\n    };\n\n    const onResetPinError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.showNotification({\n          message: this.localizations.resetPinErrorMessage,\n          modifier: 'error',\n        });\n      }\n      this.isResetPinLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onResetPinComplete = () => {\n      this.isResetPinLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .resetPIN(this.paymentCard, token.model)\n      .subscribe(onResetPinSuccess, onResetPinError, onResetPinComplete);\n  }\n\n  onRequestPin(token: PaymentCardResetPinTransport) {\n    if (typeof this.paymentCard === 'undefined') {\n      return;\n    }\n\n    this.isResetPinLoading = true;\n\n    const onRequestPinSuccess = (paymentCard: PaymentCard) => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.paymentCard = paymentCard;\n\n        this.showNotification({\n          message: this.localizations.requestNewPinSuccessMessage,\n        });\n      }\n    };\n\n    const onRequestPinError = () => {\n      if (typeof this.paymentCard !== 'undefined') {\n        this.showNotification({\n          message: this.localizations.requestPinErrorMessage,\n          modifier: 'error',\n        });\n      }\n      this.isResetPinLoading = false;\n      this.cd.markForCheck();\n    };\n\n    const onRequestPinComplete = () => {\n      this.isResetPinLoading = false;\n      this.cd.markForCheck();\n    };\n\n    this.cardsService\n      .requestPIN(this.paymentCard, token.model)\n      .subscribe(onRequestPinSuccess, onRequestPinError, onRequestPinComplete);\n  }\n\n  onOpenDetails() {\n    if (typeof this.paymentCard !== 'undefined') {\n      this.selectCard.emit(this.paymentCard);\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PaymentCardReplacementReason } from '../../model/payment-card-replacement-reason.model';\nimport { PaymentCardResetPinTransport, ResetPinModeEnum } from '../../model/payment-card-reset-pin.model';\nimport { PaymentCard, PaymentCardLockStatus } from '../../model/payment-card.model';\n\n@Directive()\n// eslint-disable-next-line\nexport class PaymentCardControlsBase implements OnInit {\n  /**\n   * Payment card item this component controls.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n  /**\n   * Whether lock status is being updated.\n   */\n  @Input() isLockLoading = false;\n  /**\n   * Whether card replacement has been initiated.\n   */\n  @Input() isInitiateReplacementLoading = false;\n  /**\n   * Whether card replacement has been initiated.\n   */\n  @Input() isInitiateActivationLoading = false;\n  /**\n   * Whether card change pin has been initiated.\n   */\n  @Input() isResetPinLoading = false;\n  /**\n   * Event to update the lock status of the payment card.\n   */\n  @Output() readonly updateLockStatus = new EventEmitter<PaymentCardLockStatus>();\n  /**\n   * Event to initiate replacement of the payment card.\n   */\n  @Output() readonly initiateReplacement = new EventEmitter<PaymentCardReplacementReason | string>();\n  /**\n   * Event to initiate activation of the payment card.\n   */\n  @Output() readonly initiateActivation = new EventEmitter<string>();\n  /**\n   * Event to initiate reset pin of the payment card.\n   */\n  @Output() readonly resetPin = new EventEmitter<PaymentCardResetPinTransport>();\n  /**\n   * Event to initiate requestPin pin of the payment card.\n   */\n  @Output() readonly requestPin = new EventEmitter<PaymentCardResetPinTransport>();\n\n  readonly hostRef = this;\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n  onLock() {\n    this.updateLockStatus.emit(PaymentCardLockStatus.Locked);\n  }\n\n  onUnlock() {\n    this.updateLockStatus.emit(PaymentCardLockStatus.Unlocked);\n  }\n\n  get isLocked() {\n    return this.paymentCard && this.paymentCard.lockStatus === PaymentCardLockStatus.Locked;\n  }\n\n  get resetPinMode() {\n    if (this.paymentCard) {\n      if (this.paymentCard.type === 'Credit') {\n        return ResetPinModeEnum.Request;\n      }\n\n      return ResetPinModeEnum.Reset;\n    }\n\n    return '';\n  }\n\n  onInitiateReplacement(replacementReason: PaymentCardReplacementReason | string) {\n    this.initiateReplacement.emit(replacementReason);\n  }\n\n  onInitiateActivation(token: string) {\n    this.initiateActivation.emit(token);\n  }\n\n  onResetPin(token: PaymentCardResetPinTransport) {\n    this.resetPin.emit(token);\n  }\n\n  onRequestPin(token: PaymentCardResetPinTransport) {\n    this.requestPin.emit(token);\n  }\n}\n","import { PaymentCard } from './payment-card.model';\n\nexport interface TravelNoticeCountry {\n  country: string;\n  region?: string;\n}\n\nexport interface TravelNoticeContact {\n  phoneNumber?: string;\n}\n\nexport interface TravelNotice {\n  id?: string;\n  cards: PaymentCard[];\n  departureDate: Date | string;\n  arrivalDate: Date | string;\n  destinations: TravelNoticeCountry[];\n  contact?: TravelNoticeContact;\n  additions?: { [key: string]: any };\n}\n\nexport type TravelNoticeList = TravelNotice[];\n\nexport interface FullTravelNoticeModel {\n  travelNoticeList?: TravelNoticeList;\n  paymentCards?: PaymentCard[];\n}\n\nexport interface Destination {\n  name: string;\n  code: string;\n  regions?: Array<{\n    name: string;\n    code: string;\n  }>;\n}\n\nexport function getCountryName(destinationList: Destination[] | undefined, { country, region }: TravelNoticeCountry) {\n  if (!destinationList) {\n    return country;\n  }\n\n  const destinationCountry = destinationList.find((item) => item.code === country);\n\n  if (destinationCountry && region) {\n    const destinationRegion =\n      destinationCountry.regions && destinationCountry.regions.find((item) => item.code === region);\n\n    return destinationRegion ? `${destinationRegion.name} (${destinationCountry.code})` : destinationCountry.name;\n  }\n\n  return destinationCountry ? destinationCountry.name : country;\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { notificationTtl, WidgetProperties } from '../constants';\n\n@Injectable()\nexport class BaseWidgetPropertiesService {\n  get notificationTtl(): Observable<number> {\n    return this.itemModel\n      ? this.itemModel.property(WidgetProperties.NotificationTtl).pipe(\n          map((propertyValue) => parseInt(propertyValue as string, 10)),\n          map((ttl) => (ttl !== undefined && !isNaN(ttl) && ttl > 0 ? ttl : notificationTtl)),\n        )\n      : of(notificationTtl);\n  }\n\n  get updateAllLimits(): Observable<boolean> {\n    return this.itemModel\n      ? this.itemModel\n          .property(WidgetProperties.updateAllLimits)\n          .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')))\n      : of(false);\n  }\n\n  constructor(@Optional() protected readonly itemModel: ItemModel) {}\n}\n","import { Injectable } from '@angular/core';\nimport { CardsHttpService } from '@backbase/data-ang/cards';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, filter, map, publishReplay, refCount, switchMap } from 'rxjs/operators';\nimport { PaymentCard } from '../model/payment-card.model';\nimport { CardsBackendService } from './cards-backend.service';\n\nconst cacheRequest =\n  <Params, Result>(request: (params: Params) => Observable<Result>) =>\n  (source: Observable<Params>): Observable<Result> =>\n    source.pipe(switchMap(request), publishReplay(1), refCount());\n\n/**\n * @name CardService\n *\n * @description\n * Service for retrieving and updating a single card from the backend.\n */\n@Injectable()\nexport class CardService {\n  private readonly paymentCardId = new ReplaySubject<string>(1);\n\n  private readonly paymentCard: Observable<PaymentCard> = this.paymentCardId.pipe(\n    distinctUntilChanged(),\n    filter((paymentCardId) => typeof paymentCardId !== 'undefined'),\n    cacheRequest((paymentCardId) =>\n      this.cardsDataHttpService.getCardById({ id: paymentCardId }, 'response').pipe(\n        map((response) => {\n          if (response.body === null) {\n            throw new Error('Some error message');\n          }\n\n          return this.cardsBackendService.itemToModel(response.body);\n        }),\n        catchError((error) => {\n          throw this.cardsBackendService.parseError(error);\n        }),\n      ),\n    ),\n  );\n\n  getPaymentCardFrom(paymentCardId: Observable<string>) {\n    paymentCardId.subscribe(this.paymentCardId);\n  }\n\n  getPaymentCard() {\n    return this.paymentCard;\n  }\n\n  constructor(\n    private readonly cardsDataHttpService: CardsHttpService,\n    private readonly cardsBackendService: CardsBackendService,\n  ) {}\n}\n","import { Destination } from '../model/travel-notice.model';\n\nexport default [\n  { code: 'ABW', name: 'Aruba' },\n  { code: 'AFG', name: 'Afghanistan' },\n  { code: 'AGO', name: 'Angola' },\n  { code: 'ALB', name: 'Albania' },\n  { code: 'AND', name: 'Andorra' },\n  { code: 'ARE', name: 'United Arab Emirates' },\n  { code: 'ARG', name: 'Argentina' },\n  { code: 'ARM', name: 'Armenia' },\n  { code: 'ASM', name: 'American Samoa' },\n  { code: 'ATG', name: 'Antigua and Barbuda' },\n  { code: 'AUS', name: 'Australia' },\n  { code: 'AUT', name: 'Austria' },\n  { code: 'AZE', name: 'Azerbaijan' },\n  { code: 'BDI', name: 'Burundi' },\n  { code: 'BEL', name: 'Belgium' },\n  { code: 'BEN', name: 'Benin' },\n  { code: 'BFA', name: 'Burkina Faso' },\n  { code: 'BGD', name: 'Bangladesh' },\n  { code: 'BGR', name: 'Bulgaria' },\n  { code: 'BHR', name: 'Bahrain' },\n  { code: 'BHS', name: 'The Bahamas' },\n  { code: 'BIH', name: 'Bosnia and Herzegovina' },\n  { code: 'BLR', name: 'Belarus' },\n  { code: 'BLZ', name: 'Belize' },\n  { code: 'BMU', name: 'Bermuda' },\n  { code: 'BOL', name: 'Bolivia' },\n  { code: 'BRA', name: 'Brazil' },\n  { code: 'BRB', name: 'Barbados' },\n  { code: 'BRN', name: 'Brunei Darussalam' },\n  { code: 'BTN', name: 'Bhutan' },\n  { code: 'BWA', name: 'Botswana' },\n  { code: 'CAF', name: 'Central African Republic' },\n  {\n    code: 'CAN',\n    name: 'Canada',\n    regions: [\n      { code: 'CA-AB', name: 'Alberta' },\n      { code: 'CA-BC', name: 'British Columbia' },\n      { code: 'CA-MB', name: 'Manitoba' },\n      { code: 'CA-NB', name: 'New Brunswick' },\n      { code: 'CA-NL', name: 'Newfoundland and Labrador' },\n      { code: 'CA-NS', name: 'Nova Scotia' },\n      { code: 'CA-ON', name: 'Ontario' },\n      { code: 'CA-PE', name: 'Prince Edward Island' },\n      { code: 'CA-QC', name: 'Quebec' },\n      { code: 'CA-SK', name: 'Saskatchewan' },\n      { code: 'CA-NT', name: 'Northwest Territories' },\n      { code: 'CA-NU', name: 'Nunavut' },\n      { code: 'CA-YT', name: 'Yukon' },\n    ],\n  },\n  { code: 'CHE', name: 'Switzerland' },\n  { code: 'CHL', name: 'Chile' },\n  { code: 'CHN', name: 'China' },\n  { code: 'CIV', name: \"Cote d'Ivoire\" },\n  { code: 'CMR', name: 'Cameroon' },\n  { code: 'COD', name: 'Democratic Republic of Congo' },\n  { code: 'COG', name: 'Republic of Congo' },\n  { code: 'COL', name: 'Colombia' },\n  { code: 'COM', name: 'Comoros' },\n  { code: 'CPV', name: 'Cabo Verde' },\n  { code: 'CRI', name: 'Costa Rica' },\n  { code: 'CUB', name: 'Cuba' },\n  { code: 'CUW', name: 'Curacao' },\n  { code: 'CYM', name: 'Cayman Islands' },\n  { code: 'CYP', name: 'Cyprus' },\n  { code: 'CZE', name: 'Czech Republic' },\n  { code: 'DEU', name: 'Germany' },\n  { code: 'DJI', name: 'Djibouti' },\n  { code: 'DMA', name: 'Dominica' },\n  { code: 'DNK', name: 'Denmark' },\n  { code: 'DOM', name: 'Dominican Republic' },\n  { code: 'DZA', name: 'Algeria' },\n  { code: 'ECU', name: 'Ecuador' },\n  { code: 'EGY', name: 'Egypt' },\n  { code: 'ERI', name: 'Eritrea' },\n  { code: 'ESP', name: 'Spain' },\n  { code: 'EST', name: 'Estonia' },\n  { code: 'ETH', name: 'Ethiopia' },\n  { code: 'FIN', name: 'Finland' },\n  { code: 'FJI', name: 'Fiji' },\n  { code: 'FRA', name: 'France' },\n  { code: 'FRO', name: 'Faroe Islands' },\n  { code: 'GAB', name: 'Gabon' },\n  { code: 'GBR', name: 'United Kingdom' },\n  { code: 'GEO', name: 'Georgia' },\n  { code: 'GHA', name: 'Ghana' },\n  { code: 'GIB', name: 'Gibraltar' },\n  { code: 'GIN', name: 'Guinea' },\n  { code: 'GMB', name: 'The Gambia' },\n  { code: 'GNB', name: 'Guinea-Bissau' },\n  { code: 'GNQ', name: 'Equatorial Guinea' },\n  { code: 'GRC', name: 'Greece' },\n  { code: 'GRD', name: 'Grenada' },\n  { code: 'GRL', name: 'Greenland' },\n  { code: 'GTM', name: 'Guatemala' },\n  { code: 'GUM', name: 'Guam' },\n  { code: 'GUY', name: 'Guyana' },\n  { code: 'HKG', name: 'Hong Kong' },\n  { code: 'HND', name: 'Honduras' },\n  { code: 'HRV', name: 'Croatia' },\n  { code: 'HTI', name: 'Haiti' },\n  { code: 'HUN', name: 'Hungary' },\n  { code: 'IDN', name: 'Indonesia' },\n  { code: 'IMN', name: 'Isle of Man' },\n  { code: 'IND', name: 'India' },\n  { code: 'IRL', name: 'Ireland' },\n  { code: 'IRN', name: 'Islamic Republic of Iran' },\n  { code: 'IRQ', name: 'Iraq' },\n  { code: 'ISL', name: 'Iceland' },\n  { code: 'ISR', name: 'Israel' },\n  { code: 'ITA', name: 'Italy' },\n  { code: 'JAM', name: 'Jamaica' },\n  { code: 'JOR', name: 'Jordan' },\n  { code: 'JPN', name: 'Japan' },\n  { code: 'KAZ', name: 'Kazakhstan' },\n  { code: 'KEN', name: 'Kenya' },\n  { code: 'KGZ', name: 'Kyrgyz Republic' },\n  { code: 'KHM', name: 'Cambodia' },\n  { code: 'KIR', name: 'Kiribati' },\n  { code: 'KNA', name: 'St. Kitts and Nevis' },\n  { code: 'KOR', name: 'Republic of Korea' },\n  { code: 'KWT', name: 'Kuwait' },\n  { code: 'LBN', name: 'Lebanon' },\n  { code: 'LBR', name: 'Liberia' },\n  { code: 'LKA', name: 'Sri Lanka' },\n  { code: 'LBY', name: 'Libya' },\n  { code: 'LCA', name: 'St. Lucia' },\n  { code: 'LIE', name: 'Liechtenstein' },\n  { code: 'LSO', name: 'Lesotho' },\n  { code: 'LTU', name: 'Lithuania' },\n  { code: 'LUX', name: 'Luxembourg' },\n  { code: 'LVA', name: 'Latvia' },\n  { code: 'MAF', name: 'St. Martin (French part)' },\n  { code: 'MAR', name: 'Morocco' },\n  { code: 'MCO', name: 'Monaco' },\n  { code: 'MDA', name: 'Moldova' },\n  { code: 'MRT', name: 'Mauritania' },\n  { code: 'MUS', name: 'Mauritius' },\n  { code: 'MWI', name: 'Malawi' },\n  { code: 'MYS', name: 'Malaysia' },\n  { code: 'NAM', name: 'Namibia' },\n  { code: 'NCL', name: 'New Caledonia' },\n  { code: 'NER', name: 'Niger' },\n  { code: 'NGA', name: 'Nigeria' },\n  { code: 'NIC', name: 'Nicaragua' },\n  { code: 'NLD', name: 'Netherlands' },\n  { code: 'NOR', name: 'Norway' },\n  { code: 'NPL', name: 'Nepal' },\n  { code: 'NRU', name: 'Nauru' },\n  { code: 'NZL', name: 'New Zealand' },\n  { code: 'OMN', name: 'Oman' },\n  { code: 'PAK', name: 'Pakistan' },\n  { code: 'PAN', name: 'Panama' },\n  { code: 'PER', name: 'Peru' },\n  { code: 'PHL', name: 'Philippines' },\n  { code: 'PLW', name: 'Palau' },\n  { code: 'PNG', name: 'Papua New Guinea' },\n  { code: 'POL', name: 'Poland' },\n  { code: 'PRI', name: 'Puerto Rico' },\n  { code: 'PRK', name: \"Democratic People's Republic of Korea\" },\n  { code: 'PRT', name: 'Portugal' },\n  { code: 'PRY', name: 'Paraguay' },\n  { code: 'PSE', name: 'West Bank and Gaza' },\n  { code: 'QAT', name: 'Qatar' },\n  { code: 'ROU', name: 'Romania' },\n  { code: 'RUS', name: 'Russian Federation' },\n  { code: 'RWA', name: 'Rwanda' },\n  { code: 'SAU', name: 'Saudi Arabia' },\n  { code: 'SDN', name: 'Sudan' },\n  { code: 'SEN', name: 'Senegal' },\n  { code: 'SGP', name: 'Singapore' },\n  { code: 'SLB', name: 'Solomon Islands' },\n  { code: 'SLE', name: 'Sierra Leone' },\n  { code: 'SLV', name: 'El Salvador' },\n  { code: 'SMR', name: 'San Marino' },\n  { code: 'SOM', name: 'Somalia' },\n  { code: 'SRB', name: 'Serbia' },\n  { code: 'SSD', name: 'South Sudan' },\n  { code: 'STP', name: 'Sao Tome and Principe' },\n  { code: 'SUR', name: 'Suriname' },\n  { code: 'SVK', name: 'Slovak Republic' },\n  { code: 'SVN', name: 'Slovenia' },\n  { code: 'SWE', name: 'Sweden' },\n  { code: 'SWZ', name: 'Eswatini' },\n  { code: 'SXM', name: 'Sint Maarten (Dutch part)' },\n  { code: 'SYC', name: 'Seychelles' },\n  { code: 'SYR', name: 'Syrian Arab Republic' },\n  { code: 'TCA', name: 'Turks and Caicos Islands' },\n  { code: 'TCD', name: 'Chad' },\n  { code: 'TGO', name: 'Togo' },\n  { code: 'THA', name: 'Thailand' },\n  { code: 'TJK', name: 'Tajikistan' },\n  { code: 'TKM', name: 'Turkmenistan' },\n  { code: 'TLS', name: 'Timor-Leste' },\n  { code: 'TON', name: 'Tonga' },\n  { code: 'TTO', name: 'Trinidad and Tobago' },\n  { code: 'TUN', name: 'Tunisia' },\n  { code: 'TUR', name: 'Turkey' },\n  { code: 'TUV', name: 'Tuvalu' },\n  { code: 'TWN', name: 'Taiwan' },\n  { code: 'TZA', name: 'Tanzania' },\n  { code: 'UGA', name: 'Uganda' },\n  { code: 'UKR', name: 'Ukraine' },\n  { code: 'URY', name: 'Uruguay' },\n  {\n    code: 'USA',\n    name: 'United States',\n    regions: [\n      { code: 'US-AL', name: 'Alabama' },\n      { code: 'US-AK', name: 'Alaska' },\n      { code: 'US-AZ', name: 'Arizona' },\n      { code: 'US-AR', name: 'Arkansas' },\n      { code: 'US-CA', name: 'California' },\n      { code: 'US-CO', name: 'Colorado' },\n      { code: 'US-CT', name: 'Connecticut' },\n      { code: 'US-DE', name: 'Delaware' },\n      { code: 'US-FL', name: 'Florida' },\n      { code: 'US-GA', name: 'Georgia' },\n      { code: 'US-HI', name: 'Hawaii' },\n      { code: 'US-ID', name: 'Idaho' },\n      { code: 'US-IL', name: 'Illinois' },\n      { code: 'US-IN', name: 'Indiana' },\n      { code: 'US-IA', name: 'Iowa' },\n      { code: 'US-KS', name: 'Kansas' },\n      { code: 'US-KY', name: 'Kentucky' },\n      { code: 'US-LA', name: 'Louisiana' },\n      { code: 'US-ME', name: 'Maine' },\n      { code: 'US-MD', name: 'Maryland' },\n      { code: 'US-MA', name: 'Massachusetts' },\n      { code: 'US-MI', name: 'Michigan' },\n      { code: 'US-MN', name: 'Minnesota' },\n      { code: 'US-MS', name: 'Mississippi' },\n      { code: 'US-MO', name: 'Missouri' },\n      { code: 'US-MT', name: 'Montana' },\n      { code: 'US-NE', name: 'Nebraska' },\n      { code: 'US-NV', name: 'Nevada' },\n      { code: 'US-NH', name: 'New Hampshire' },\n      { code: 'US-NJ', name: 'New Jersey' },\n      { code: 'US-NM', name: 'New Mexico' },\n      { code: 'US-NY', name: 'New York' },\n      { code: 'US-NC', name: 'North Carolina' },\n      { code: 'US-ND', name: 'North Dakota' },\n      { code: 'US-OH', name: 'Ohio' },\n      { code: 'US-OK', name: 'Oklahoma' },\n      { code: 'US-OR', name: 'Oregon' },\n      { code: 'US-PA', name: 'Pennsylvania' },\n      { code: 'US-RI', name: 'Rhode Island' },\n      { code: 'US-SC', name: 'South Carolina' },\n      { code: 'US-SD', name: 'South Dakota' },\n      { code: 'US-TN', name: 'Tennessee' },\n      { code: 'US-TX', name: 'Texas' },\n      { code: 'US-UT', name: 'Utah' },\n      { code: 'US-VT', name: 'Vermont' },\n      { code: 'US-VA', name: 'Virginia' },\n      { code: 'US-WA', name: 'Washington' },\n      { code: 'US-WV', name: 'West Virginia' },\n      { code: 'US-WI', name: 'Wisconsin' },\n      { code: 'US-WY', name: 'Wyoming' },\n      { code: 'US-DC', name: 'District of Columbia' },\n      { code: 'US-AS', name: 'American Samoa' },\n      { code: 'US-GU', name: 'Guam' },\n      { code: 'US-MP', name: 'Northern Mariana Islands' },\n      { code: 'US-PR', name: 'Puerto Rico' },\n      { code: 'US-UM', name: 'United States Minor Outlying Islands' },\n      { code: 'US-VI', name: 'Virgin Islands' },\n    ],\n  },\n  { code: 'UZB', name: 'Uzbekistan' },\n  { code: 'VCT', name: 'St. Vincent and the Grenadines' },\n  { code: 'VEN', name: 'Venezuela' },\n  { code: 'VGB', name: 'British Virgin Islands' },\n  { code: 'VNM', name: 'Vietnam' },\n  { code: 'VUT', name: 'Vanuatu' },\n  { code: 'WSM', name: 'Samoa' },\n  { code: 'XKX', name: 'Kosovo' },\n  { code: 'YEM', name: 'Yemen, Rep.' },\n  { code: 'ZMB', name: 'Zambia' },\n  { code: 'ZWE', name: 'Zimbabwe' },\n  { code: 'MEX', name: 'Mexico' },\n] as Destination[];\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport destination from '../data/destinations';\nimport { CardsBackendDestinations } from '../model/cards-backend-destination.model';\nimport { Destination } from '../model/travel-notice.model';\n\n/**\n * This service is a default implementation for countries that retrieve locations from a\n * static file. If no other service is injected then this is used instead\n */\n\n@Injectable()\nexport class DefaultDestionsService implements CardsBackendDestinations {\n  getDestinations(): Observable<Destination[]> {\n    return of(destination);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["HttpResponse","HttpErrorResponse","of","flatMap","map","materialize","delay","dematerialize","Injectable","HTTP_INTERCEPTORS","Directive","HostListener","PaymentCardDeliveryStepStatus","Component","Input","BbTemplate","EventEmitter","FormGroup","FormControl","Validators","Output","InputInlineEditComponent","ViewChild","ResetPinModeEnum","PaymentCardReplacementReason","PaymentCardStatus","PaymentCardReplacementStatus","PaymentCardLockStatus","combineLatest","CardsBackendError","InjectionToken","Optional","Inject","cacheRequest","switchMap","publishReplay","refCount","BehaviorSubject","distinctUntilChanged","catchError","BadgeModule","ButtonModule","IconModule","InputPasswordModule","InputRadioGroupModule","LoadButtonModule","ModalModule","InputInlineEditModule","InputValidationMessageModule","AlertModule","PaymentCardModule","AmountModule","FocusModule","EmptyStateModule","LoadingIndicatorModule","CommonModule","ReactiveFormsModule","FormsModule","NgModule","ReplaySubject","filter"],"mappings":"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"}