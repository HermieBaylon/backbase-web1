import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/load-button";
import * as i2 from "@backbase/ui-ang/modal";
import * as i3 from "@backbase/ui-ang/input-password";
import * as i4 from "@backbase/ui-ang/input-validation-message";
import * as i5 from "@backbase/ui-ang/button";
import * as i6 from "@angular/common";
import * as i7 from "@angular/forms";
export class PaymentCardInitiateActivationComponent {
    constructor() {
        /**
         * Whether card activation has been initiated.
         */
        this.isInitiateActivationLoading = false;
        /**
         * Event to initiate activation of payment card;
         */
        this.initiateActivation = new EventEmitter();
        /**
         * Reference to instance of customizable component.
         */
        this.hostRef = this;
        /**
         * Flag to denote whether the activation modal is open or not.
         */
        this.isModalOpen = false;
        /**
         * Form model for initiating activation.
         */
        this.form = new FormGroup({
            token: new FormControl('', [Validators.required, Validators.minLength(3)]),
        });
    }
    ngOnInit() {
        if (typeof this.paymentCard === 'undefined') {
            throw new Error(`"paymentCard" input is required in "${this.constructor.name}"`);
        }
    }
    /**
     * Submit handler for initiating activation.
     *
     * @param params - form model value
     */
    onSubmit(params) {
        this.isModalOpen = false;
        this.initiateActivation.emit(params.token);
    }
    /**
     * Opens the modal.
     */
    onModalOpen() {
        this.isModalOpen = true;
    }
    /**
     * Closes the modal.
     */
    onModalClose() {
        this.isModalOpen = false;
        this.form.reset({ token: '' });
    }
    /**
     * Form element validation control.
     */
    isFieldValid(fieldName) {
        const control = this.form.get(fieldName);
        return !!control && (control.valid || control.untouched);
    }
}
PaymentCardInitiateActivationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardInitiateActivationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PaymentCardInitiateActivationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardInitiateActivationComponent, selector: "bb-payment-card-initiate-activation", inputs: { paymentCard: "paymentCard", isInitiateActivationLoading: "isInitiateActivationLoading" }, outputs: { initiateActivation: "initiateActivation" }, ngImport: i0, template: "<ng-container bbCardsInitiateActivationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsInitiateActivationCustomizable let-hostRef>\n  <bb-load-button-ui\n    data-role=\"activate-card-button\"\n    color=\"primary\"\n    [block]=\"true\"\n    [isLoading]=\"hostRef.isInitiateActivationLoading\"\n    (click)=\"!hostRef.isInitiateActivationLoading && hostRef.paymentCard?.status === 'INACTIVE' && hostRef.onModalOpen()\"\n    [disabled]=\"hostRef.paymentCard?.status !== 'INACTIVE'\"\n    i18n=\"Activate card button|Activate the card@@card.activation.button\"\n  >Activate card</bb-load-button-ui>\n\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isModalOpen\"\n    [modalOptions]=\"{ centered: true }\"\n    (cancel)=\"hostRef.onModalClose()\"\n  >\n    <div class=\"modal-header\">\n      <div class=\"bb-block bb-block--xs\">\n        <h2 i18n=\"Activate card heading|Activate card header@@card.activationForm.heading\">\n          Activate card\n        </h2>\n      </div>\n    </div>\n    <ng-container bbCardsInitiateActivationFormCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template bbCardsInitiateActivationFormCustomizable let-hostRef>\n  <form *ngIf=\"hostRef.isModalOpen\" [formGroup]=\"hostRef.form\" (ngSubmit)=\"hostRef.onSubmit(hostRef.form.value)\">\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 order-sm-2\">\n          <div data-role=\"modal-card-img\" class=\"bb-block bb-block--md bb-payment-card-back bb-payment-card-icon-dialog\"></div>\n        </div>\n        <div class=\"col-12 col-sm-6\">\n          <h3 i18n=\"Enter your code heading|Heading for enter your code@@card.activationForm.options.heading\">\n            Enter your CVV code\n          </h3>\n          <p\n            class=\"bb-text-support\"\n            i18n=\"Enter your code subtext|Subtext for enter your code@@card.activationForm.options.subtitle\"\n          >To activate your card, please enter your CVV code at the back of your card as shown.</p>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <bb-input-password-ui\n                data-role=\"card-details-cvv-input\"\n                [autofocus]=\"true\"\n                formControlName=\"token\"\n                label=\"CVV code\"\n                i18n-label='CVV Code heading|Heading for CVV@@card.activationForm.options.heading'\n              ></bb-input-password-ui>\n            </div>\n            <div class=\"col-12\">\n              <bb-input-validation-message-ui [showErrors]=\"!hostRef.isFieldValid('token')\">\n                <span i18n=\"CVV Code validation@@card.activationForm.options.token.error.msg\">\n                  You need to enter the full CVV code.\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"hostRef.form.invalid\"\n          i18n=\"Activate button|Activation confirm button@@card.activationForm.submitButton\"\n        >Activate</bb-button-ui>\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"button\"\n          color=\"link\"\n          (click)=\"hostRef.onModalClose()\"\n          i18n=\"Cancel button|Cancel card activation@@card.activationForm.cancelButton\"\n        >Cancel</bb-button-ui>\n      </div>\n    </div>\n  </form>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.LoadButtonComponent; }), selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i0.forwardRef(function () { return i2.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i3.InputPasswordComponent; }), selector: "bb-input-password-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete", "showVisibilityControl", "showPassword", "visibilityControlLabel", "ariaLabel"], outputs: ["toggleVisibility"] }, { type: i0.forwardRef(function () { return i4.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i0.forwardRef(function () { return i5.ButtonComponent; }), selector: "bb-button-ui", inputs: ["autofocus", "type", "disabled", "buttonSize", "color", "block"] }], directives: [{ type: i0.forwardRef(function () { return CardsInitiateActivationCustomizableDirective; }), selector: "[bbCardsInitiateActivationCustomizable]" }, { type: i0.forwardRef(function () { return CardsInitiateActivationFormCustomizableDirective; }), selector: "[bbCardsInitiateActivationFormCustomizable]" }, { type: i0.forwardRef(function () { return i6.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i7.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0.forwardRef(function () { return i7.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i7.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i7.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i7.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardInitiateActivationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payment-card-initiate-activation',
                    templateUrl: './payment-card-initiate-activation.component.html',
                }]
        }], propDecorators: { paymentCard: [{
                type: Input
            }], isInitiateActivationLoading: [{
                type: Input
            }], initiateActivation: [{
                type: Output
            }] } });
export class CardsInitiateActivationFormCustomizableDirective extends BbTemplate {
}
CardsInitiateActivationFormCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsInitiateActivationFormCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CardsInitiateActivationFormCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsInitiateActivationFormCustomizableDirective, selector: "[bbCardsInitiateActivationFormCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsInitiateActivationFormCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbCardsInitiateActivationFormCustomizable]',
                }]
        }] });
export class CardsInitiateActivationCustomizableDirective extends BbTemplate {
}
CardsInitiateActivationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsInitiateActivationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CardsInitiateActivationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsInitiateActivationCustomizableDirective, selector: "[bbCardsInitiateActivationCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsInitiateActivationCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbCardsInitiateActivationCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,