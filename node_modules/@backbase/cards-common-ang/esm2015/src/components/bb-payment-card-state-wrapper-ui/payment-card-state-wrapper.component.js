import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "@backbase/ui-ang/badge";
import * as i3 from "@angular/common";
export class PaymentCardStateWrapperComponent {
}
PaymentCardStateWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardStateWrapperComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PaymentCardStateWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardStateWrapperComponent, selector: "bb-payment-card-state-wrapper,bb-payment-card-state-wrapper-ui", inputs: { state: "state" }, ngImport: i0, template: "<div class=\"bb-payment-card-state\">\n  <div class=\"bb-payment-card-state__container\" *ngIf=\"state\">\n    <!-- Inactive -->\n    <ng-container *ngIf=\"state === 'INACTIVE'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"warning\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Inactive\"\n        i18n-text=\"Inactive label|Text for the inactive label@@cards.cardState.inactive\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n\n    <!-- Locked -->\n    <ng-container *ngIf=\"state === 'LOCKED'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"lock\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Locked\"\n        i18n-text=\"Locked label|Text for the locked label@@cards.cardState.locked\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n\n    <!-- Cancelled -->\n    <ng-container *ngIf=\"state === 'CANCELLED'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"not-interested\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Cancelled\"\n        i18n-text=\"Cancelled label|Text for the cancelled label@@cards.cardState.cancelled\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n\n    <!-- Expired -->\n    <ng-container *ngIf=\"state === 'EXPIRED'\">\n      <bb-icon-ui\n        class=\"bb-payment-card-state__icon\"\n        name=\"access-time\"\n        size=\"xxl\"\n        color=\"white\"\n      ></bb-icon-ui>\n      <bb-badge-ui\n        text=\"Expired\"\n        i18n-text=\"Expired label|Text for the expired label@@cards.cardState.expired\"\n        color=\"secondary\"\n      ></bb-badge-ui>\n    </ng-container>\n  </div>\n\n  <div [ngClass]=\"{ 'bb-payment-card-state__overlay': state }\">\n    <ng-content></ng-content>\n  </div>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardStateWrapperComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payment-card-state-wrapper,bb-payment-card-state-wrapper-ui',
                    templateUrl: './payment-card-state-wrapper.component.html',
                }]
        }], propDecorators: { state: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1jYXJkLXN0YXRlLXdyYXBwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jYXJkcy1jb21tb24tYW5nL3NyYy9jb21wb25lbnRzL2JiLXBheW1lbnQtY2FyZC1zdGF0ZS13cmFwcGVyLXVpL3BheW1lbnQtY2FyZC1zdGF0ZS13cmFwcGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY2FyZHMtY29tbW9uLWFuZy9zcmMvY29tcG9uZW50cy9iYi1wYXltZW50LWNhcmQtc3RhdGUtd3JhcHBlci11aS9wYXltZW50LWNhcmQtc3RhdGUtd3JhcHBlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFPakQsTUFBTSxPQUFPLGdDQUFnQzs7OEhBQWhDLGdDQUFnQztrSEFBaEMsZ0NBQWdDLGtJQ1A3QywyK0RBbUVBOzRGRDVEYSxnQ0FBZ0M7a0JBSjVDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGdFQUFnRTtvQkFDMUUsV0FBVyxFQUFFLDZDQUE2QztpQkFDM0Q7OEJBS1UsS0FBSztzQkFBYixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGF5bWVudENhcmREaXNwbGF5U3RhdGUgfSBmcm9tICcuLi8uLi9tb2RlbC9wYXltZW50LWNhcmQubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1wYXltZW50LWNhcmQtc3RhdGUtd3JhcHBlcixiYi1wYXltZW50LWNhcmQtc3RhdGUtd3JhcHBlci11aScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wYXltZW50LWNhcmQtc3RhdGUtd3JhcHBlci5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFBheW1lbnRDYXJkU3RhdGVXcmFwcGVyQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIFN0YXRlIG9mIHRoZSBjYXJkIHRvIGRpc3BsYXkuICBPdmVycmlkZXMgZGVwcmVjYXRlZCBgbG9ja1N0YXR1c2AgaW5wdXQuXG4gICAqL1xuICBASW5wdXQoKSBzdGF0ZTogUGF5bWVudENhcmREaXNwbGF5U3RhdGUgfCB1bmRlZmluZWQ7XG59XG4iLCI8ZGl2IGNsYXNzPVwiYmItcGF5bWVudC1jYXJkLXN0YXRlXCI+XG4gIDxkaXYgY2xhc3M9XCJiYi1wYXltZW50LWNhcmQtc3RhdGVfX2NvbnRhaW5lclwiICpuZ0lmPVwic3RhdGVcIj5cbiAgICA8IS0tIEluYWN0aXZlIC0tPlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJzdGF0ZSA9PT0gJ0lOQUNUSVZFJ1wiPlxuICAgICAgPGJiLWljb24tdWlcbiAgICAgICAgY2xhc3M9XCJiYi1wYXltZW50LWNhcmQtc3RhdGVfX2ljb25cIlxuICAgICAgICBuYW1lPVwid2FybmluZ1wiXG4gICAgICAgIHNpemU9XCJ4eGxcIlxuICAgICAgICBjb2xvcj1cIndoaXRlXCJcbiAgICAgID48L2JiLWljb24tdWk+XG4gICAgICA8YmItYmFkZ2UtdWlcbiAgICAgICAgdGV4dD1cIkluYWN0aXZlXCJcbiAgICAgICAgaTE4bi10ZXh0PVwiSW5hY3RpdmUgbGFiZWx8VGV4dCBmb3IgdGhlIGluYWN0aXZlIGxhYmVsQEBjYXJkcy5jYXJkU3RhdGUuaW5hY3RpdmVcIlxuICAgICAgICBjb2xvcj1cInNlY29uZGFyeVwiXG4gICAgICA+PC9iYi1iYWRnZS11aT5cbiAgICA8L25nLWNvbnRhaW5lcj5cblxuICAgIDwhLS0gTG9ja2VkIC0tPlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJzdGF0ZSA9PT0gJ0xPQ0tFRCdcIj5cbiAgICAgIDxiYi1pY29uLXVpXG4gICAgICAgIGNsYXNzPVwiYmItcGF5bWVudC1jYXJkLXN0YXRlX19pY29uXCJcbiAgICAgICAgbmFtZT1cImxvY2tcIlxuICAgICAgICBzaXplPVwieHhsXCJcbiAgICAgICAgY29sb3I9XCJ3aGl0ZVwiXG4gICAgICA+PC9iYi1pY29uLXVpPlxuICAgICAgPGJiLWJhZGdlLXVpXG4gICAgICAgIHRleHQ9XCJMb2NrZWRcIlxuICAgICAgICBpMThuLXRleHQ9XCJMb2NrZWQgbGFiZWx8VGV4dCBmb3IgdGhlIGxvY2tlZCBsYWJlbEBAY2FyZHMuY2FyZFN0YXRlLmxvY2tlZFwiXG4gICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgID48L2JiLWJhZGdlLXVpPlxuICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgPCEtLSBDYW5jZWxsZWQgLS0+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInN0YXRlID09PSAnQ0FOQ0VMTEVEJ1wiPlxuICAgICAgPGJiLWljb24tdWlcbiAgICAgICAgY2xhc3M9XCJiYi1wYXltZW50LWNhcmQtc3RhdGVfX2ljb25cIlxuICAgICAgICBuYW1lPVwibm90LWludGVyZXN0ZWRcIlxuICAgICAgICBzaXplPVwieHhsXCJcbiAgICAgICAgY29sb3I9XCJ3aGl0ZVwiXG4gICAgICA+PC9iYi1pY29uLXVpPlxuICAgICAgPGJiLWJhZGdlLXVpXG4gICAgICAgIHRleHQ9XCJDYW5jZWxsZWRcIlxuICAgICAgICBpMThuLXRleHQ9XCJDYW5jZWxsZWQgbGFiZWx8VGV4dCBmb3IgdGhlIGNhbmNlbGxlZCBsYWJlbEBAY2FyZHMuY2FyZFN0YXRlLmNhbmNlbGxlZFwiXG4gICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgID48L2JiLWJhZGdlLXVpPlxuICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgPCEtLSBFeHBpcmVkIC0tPlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJzdGF0ZSA9PT0gJ0VYUElSRUQnXCI+XG4gICAgICA8YmItaWNvbi11aVxuICAgICAgICBjbGFzcz1cImJiLXBheW1lbnQtY2FyZC1zdGF0ZV9faWNvblwiXG4gICAgICAgIG5hbWU9XCJhY2Nlc3MtdGltZVwiXG4gICAgICAgIHNpemU9XCJ4eGxcIlxuICAgICAgICBjb2xvcj1cIndoaXRlXCJcbiAgICAgID48L2JiLWljb24tdWk+XG4gICAgICA8YmItYmFkZ2UtdWlcbiAgICAgICAgdGV4dD1cIkV4cGlyZWRcIlxuICAgICAgICBpMThuLXRleHQ9XCJFeHBpcmVkIGxhYmVsfFRleHQgZm9yIHRoZSBleHBpcmVkIGxhYmVsQEBjYXJkcy5jYXJkU3RhdGUuZXhwaXJlZFwiXG4gICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgID48L2JiLWJhZGdlLXVpPlxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L2Rpdj5cblxuICA8ZGl2IFtuZ0NsYXNzXT1cInsgJ2JiLXBheW1lbnQtY2FyZC1zdGF0ZV9fb3ZlcmxheSc6IHN0YXRlIH1cIj5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=