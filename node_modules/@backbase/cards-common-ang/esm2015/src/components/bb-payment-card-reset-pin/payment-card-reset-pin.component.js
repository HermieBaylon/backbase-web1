import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { ResetPinModeEnum, } from '../../model/payment-card-reset-pin.model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/load-button";
import * as i2 from "@backbase/ui-ang/modal";
import * as i3 from "@backbase/ui-ang/input-password";
import * as i4 from "@backbase/ui-ang/input-validation-message";
import * as i5 from "@backbase/ui-ang/button";
import * as i6 from "@backbase/ui-ang/alert";
import * as i7 from "@backbase/ui-ang/payment-card";
import * as i8 from "@angular/common";
import * as i9 from "@angular/forms";
export class PaymentCardResetPinComponent {
    constructor() {
        /**
         * Whether card reset pin has been initiated.
         */
        this.isResetPinLoading = false;
        /**
         * Event for reset pin of payment card;
         */
        this.resetPin = new EventEmitter();
        /**
         * Event for request pin of payment card;
         */
        this.requestPin = new EventEmitter();
        /**
         * Flag to denote whether the reset pin modal is open or not.
         */
        this.isModalOpen = false;
        /**
         * The page of the reset pin modal.
         */
        this.modalStep = 1;
        /**
         * Form model for reset pin.
         */
        this.model = {};
        /**
         * Form model for reset pin.
         */
        this.modelExclude = {};
        /**
         * Reference to instance of customizable component.
         */
        this.hostRef = this;
    }
    /**
     * Opens the modal.
     */
    onModalOpen() {
        this.isModalOpen = true;
    }
    /**
     * Submit handler for reset pin.
     */
    onSubmit() {
        const model = Object.assign({}, this.model);
        const raw = Object.assign(Object.assign({}, this.model), this.modelExclude);
        if (this.mode === ResetPinModeEnum.Reset) {
            this.resetPin.emit({ raw, model });
        }
        else if (this.mode === ResetPinModeEnum.Request) {
            this.requestPin.emit({ raw, model });
        }
        this.onModalClose();
    }
    /**
     * Closes the modal.
     */
    onModalClose() {
        this.modalStep = 1;
        this.model = {};
        this.modelExclude = {};
        this.isModalOpen = false;
    }
    ngOnInit() {
        if (typeof this.paymentCard === 'undefined') {
            throw new Error(`"paymentCard" input is required in "${this.constructor.name}"`);
        }
    }
}
PaymentCardResetPinComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardResetPinComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PaymentCardResetPinComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardResetPinComponent, selector: "bb-payment-card-reset-pin", inputs: { paymentCard: "paymentCard", mode: "mode", isResetPinLoading: "isResetPinLoading" }, outputs: { resetPin: "resetPin", requestPin: "requestPin" }, ngImport: i0, template: "<ng-container bbCardsResetPinCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsResetPinCustomizable let-hostRef>\n  <bb-load-button-ui\n    [block]=\"true\"\n    color=\"secondary\"\n    [isLoading]=\"hostRef.isResetPinLoading\"\n    (click)=\"hostRef.onModalOpen()\"\n  >\n    <ng-container *ngIf=\"hostRef.mode ==='REQUEST'\" i18n=\"Request PIN button|Request pin@@card.pin.request.button\">Request</ng-container>\n    <ng-container *ngIf=\"hostRef.mode ==='RESET'\" i18n=\"Reset PIN button|Reset pin@@card.pin.reset.button\">Reset</ng-container>\n  </bb-load-button-ui>\n\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isModalOpen\"\n    [modalOptions]=\"{ centered: true }\"\n    (cancel)=\"hostRef.onModalClose()\"\n  >\n    <div class=\"modal-header\">\n      <div class=\"bb-block bb-block--xs\">\n        <ng-container *ngIf=\"hostRef.mode === 'REQUEST'\">\n          <h2 i18n=\"Request PIN card heading|Request pin card header@@card.requestPinForm.heading\">\n            Request new PIN\n          </h2>\n        </ng-container>\n        <ng-container *ngIf=\"hostRef.mode === 'RESET'\">\n          <h2 i18n=\"Reset PIN card heading|Reset pin header@@card.resetPin.heading\">\n            Reset PIN\n          </h2>\n        </ng-container>\n      </div>\n    </div>\n\n    <ng-container \n      bbCardsResetPinFormCustomizable \n      *ngIf=\"hostRef.modalStep === 1 && hostRef.isModalOpen\" \n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n\n    <ng-container\n      bbCardsResetPinConfirmationCustomizable\n      *ngIf=\"hostRef.modalStep === 2 && hostRef.mode ==='REQUEST' && hostRef.isModalOpen\" \n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n\n    <ng-container\n      bbCardsResetPinNewPinCustomizable\n      *ngIf=\"(hostRef.modalStep === 2 || hostRef.modalStep === 3) && hostRef.mode ==='RESET' && hostRef.isModalOpen\" \n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template bbCardsResetPinFormCustomizable let-hostRef>\n  <!-- Form step for Request and Reset PIN-->\n  <form #pinForm=\"ngForm\" (ngSubmit)=\"hostRef.modalStep = hostRef.modalStep + 1\">\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 order-sm-2\">\n          <div data-role=\"modal-card-img\" class=\"bb-block bb-block--md bb-payment-card-back bb-payment-card-icon-dialog\"></div>\n        </div>\n        <div class=\"col-12 col-sm-6\">\n          <h3 i18n=\"Enter your code heading|Heading for enter your code@@card.resetPinForm.options.heading\">\n            Enter your CVV code\n          </h3>\n          <p\n            class=\"bb-text-support\"\n            i18n=\"Enter your code subtext|Subtext for enter your code@@card.resetPinForm.options.subtitle\"\n          >Continue by entering your CVV code found on the back of your card as shown in the image.</p>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <bb-input-password-ui\n                #cvvToken=\"ngModel\"\n                data-role=\"card-details-cvv-input\"\n                name=\"token\"\n                [autofocus]=\"true\"\n                [(ngModel)]=\"hostRef.model.token\"\n                [required]=\"true\"\n                [minlength]=\"3\"\n                label=\"CVV code\"\n                i18n-label='CVV Code heading|Heading for CVV@@card.resetPinForm.options.heading'\n              ></bb-input-password-ui>\n            </div>\n            <div class=\"col-12\">\n              <bb-input-validation-message-ui [showErrors]=\"!!cvvToken.errors && !!cvvToken.touched\">\n                <span i18n=\"CVV Code validation@@card.resetPinForm.options.token.error.msg\">\n                  You need to enter the full CVV code.\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"!!pinForm.invalid\"\n          i18n=\"Confirm continue pin button|Reset pin continue button@@card.resetPinForm.submitButton\"\n        >Continue</bb-button-ui>\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"button\"\n          color=\"link\"\n          (click)=\"hostRef.onModalClose()\"\n          i18n=\"Cancel button|Cancel card reset pin@@card.resetPinForm.cancelButton\"\n        >Cancel</bb-button-ui>\n      </div>\n    </div>\n  </form>\n</ng-template>\n\n<ng-template bbCardsResetPinConfirmationCustomizable let-hostRef>\n  <!-- Confirmation step for Request Pin -->\n  <div class=\"modal-body\">\n    <bb-alert-ui \n      modifier=\"warning\" \n      title=\"Your new PIN will be delivered to your address within approximately 3 to 5 working days.\" \n      i18n-title=\"Reset pin alert|Reset pin alert@card.resetPinForm.alert\"\n    >\n    </bb-alert-ui>\n    <div>\n      <h5\n        class=\"bb-text-semi-bold\"\n        i18n=\"Delivery address header|Delivery address@@card.resetPinForm.deliveryAddress.heading\"\n      >Delivery address</h5>\n      <p\n        class=\"bb-text-support\"\n        i18n=\"Delivery address subtext|Delivery address@@card.resetPinForm.deliveryAddress.subtext\"\n      >The card will be delivered at your address currently known by us.</p>\n    </div>\n  </div>\n    \n  <div class=\"modal-footer\">\n    <div class=\"bb-button-bar\">\n      <bb-button-ui\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        (click)=\"hostRef.onSubmit()\"\n        i18n=\"Request pin button|Request pin confirm button@@card.requestPinForm.submitButtonConfirm\"\n      >Request new PIN</bb-button-ui>\n      <bb-button-ui\n        class=\"bb-button-bar__button\"\n        type=\"button\"\n        color=\"link\"\n        (click)=\"hostRef.onModalClose()\"\n        i18n=\"Cancel button|Cancel card request pin@@card.requestPinForm.cancelButton\"\n      >Cancel</bb-button-ui>\n    </div>\n    \n  </div>\n</ng-template>\n\n<ng-template bbCardsResetPinNewPinCustomizable let-hostRef>\n  <!-- Confirmation step for Reset Pin -->\n  <form #pinForm=\"ngForm\" (ngSubmit)=\"hostRef.onSubmit()\">\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"bb-block bb-block--md col-12 col-sm-8 order-sm-2\">\n          <div class=\"bb-stack\">\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <bb-payment-card-ui\n                [paymentCard]=\"hostRef.paymentCard\"\n              ></bb-payment-card-ui>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-6 col-sm-4\">\n          <ng-container *ngIf=\"hostRef.modalStep === 2\">\n            <bb-input-password-ui\n              label=\"Enter new PIN\"\n              i18n-label=\"Enter your new pin|Enter new pin code@@card.resetPinForm.enterNewPin\"\n              name=\"pin\"\n              [(ngModel)]=\"hostRef.model.pin\"\n              [autofocus]=\"true\"\n              [required]=\"true\"\n            ></bb-input-password-ui>\n          </ng-container>\n    \n          <ng-container *ngIf=\"hostRef.modalStep === 3\">\n            <bb-input-password-ui\n              label=\"Re-enter new PIN\"\n              i18n-label=\"Re-enter your new pin|Re-enter new pin code@@card.resetPinForm.reEnterNewPin\"\n              name=\"pin2\"\n              [(ngModel)]=\"hostRef.modelExclude.pin2\"\n              [autofocus]=\"true\"\n              [required]=\"true\"\n            ></bb-input-password-ui>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <bb-button-ui\n          *ngIf=\"hostRef.modalStep === 2\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          (click)=\"hostRef.modalStep = hostRef.modalStep + 1\"\n          [disabled]=\"!!pinForm.invalid\"\n          i18n=\"Continue button|Continue card reset pin@@card.resetPinForm.continueButton\"\n        >Continue</bb-button-ui>\n        <bb-button-ui\n          *ngIf=\"hostRef.modalStep === 3\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!!pinForm.invalid\"\n          i18n=\"Confirm reset pin button|Reset pin confirm button@@card.resetPinForm.resetSubmitButton\"\n        >Confirm Reset</bb-button-ui>\n        <bb-button-ui\n          class=\"bb-button-bar__button\"\n          type=\"button\"\n          color=\"link\"\n          (click)=\"hostRef.onModalClose()\"\n          i18n=\"Cancel button|Cancel card reset pin@@card.resetPinForm.cancelButton\"\n        >Cancel</bb-button-ui>\n      </div>\n    </div>\n  </form>  \n</ng-template>\n   ", components: [{ type: i0.forwardRef(function () { return i1.LoadButtonComponent; }), selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i0.forwardRef(function () { return i2.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i3.InputPasswordComponent; }), selector: "bb-input-password-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete", "showVisibilityControl", "showPassword", "visibilityControlLabel", "ariaLabel"], outputs: ["toggleVisibility"] }, { type: i0.forwardRef(function () { return i4.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i0.forwardRef(function () { return i5.ButtonComponent; }), selector: "bb-button-ui", inputs: ["autofocus", "type", "disabled", "buttonSize", "color", "block"] }, { type: i0.forwardRef(function () { return i6.AlertComponent; }), selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i7.PaymentCardComponent; }), selector: "bb-payment-card-ui", inputs: ["paymentCard", "paymentCardNumberFormat"] }], directives: [{ type: i0.forwardRef(function () { return CardsResetPinCustomizableDirective; }), selector: "[bbCardsResetPinCustomizable]" }, { type: i0.forwardRef(function () { return i8.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return CardsResetPinFormCustomizableDirective; }), selector: "[bbCardsResetPinFormCustomizable]" }, { type: i0.forwardRef(function () { return CardsResetPinConfirmationCustomizableDirective; }), selector: "[bbCardsResetPinConfirmationCustomizable]" }, { type: i0.forwardRef(function () { return CardsResetPinNewPinCustomizableDirective; }), selector: "[bbCardsResetPinNewPinCustomizable]" }, { type: i0.forwardRef(function () { return i9.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0.forwardRef(function () { return i9.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i9.NgForm; }), selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i9.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i9.NgModel; }), selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i0.forwardRef(function () { return i9.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return i9.MinLengthValidator; }), selector: "[minlength][formControlName],[minlength][formControl],[minlength][ngModel]", inputs: ["minlength"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardResetPinComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payment-card-reset-pin',
                    templateUrl: 'payment-card-reset-pin.component.html',
                }]
        }], propDecorators: { paymentCard: [{
                type: Input
            }], mode: [{
                type: Input
            }], isResetPinLoading: [{
                type: Input
            }], resetPin: [{
                type: Output
            }], requestPin: [{
                type: Output
            }] } });
export class CardsResetPinCustomizableDirective extends BbTemplate {
}
CardsResetPinCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsResetPinCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CardsResetPinCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsResetPinCustomizableDirective, selector: "[bbCardsResetPinCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsResetPinCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbCardsResetPinCustomizable]',
                }]
        }] });
export class CardsResetPinConfirmationCustomizableDirective extends BbTemplate {
}
CardsResetPinConfirmationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsResetPinConfirmationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CardsResetPinConfirmationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsResetPinConfirmationCustomizableDirective, selector: "[bbCardsResetPinConfirmationCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsResetPinConfirmationCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbCardsResetPinConfirmationCustomizable]',
                }]
        }] });
export class CardsResetPinFormCustomizableDirective extends BbTemplate {
}
CardsResetPinFormCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsResetPinFormCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CardsResetPinFormCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsResetPinFormCustomizableDirective, selector: "[bbCardsResetPinFormCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsResetPinFormCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbCardsResetPinFormCustomizable]',
                }]
        }] });
export class CardsResetPinNewPinCustomizableDirective extends BbTemplate {
}
CardsResetPinNewPinCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsResetPinNewPinCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CardsResetPinNewPinCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsResetPinNewPinCustomizableDirective, selector: "[bbCardsResetPinNewPinCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsResetPinNewPinCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbCardsResetPinNewPinCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,