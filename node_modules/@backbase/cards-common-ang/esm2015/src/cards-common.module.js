import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { AlertModule } from '@backbase/ui-ang/alert';
import { AmountModule } from '@backbase/ui-ang/amount';
import { BadgeModule } from '@backbase/ui-ang/badge';
import { ButtonModule } from '@backbase/ui-ang/button';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import { FocusModule } from '@backbase/ui-ang/focus';
import { IconModule } from '@backbase/ui-ang/icon';
import { InputInlineEditModule } from '@backbase/ui-ang/input-inline-edit';
import { InputPasswordModule } from '@backbase/ui-ang/input-password';
import { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';
import { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';
import { LoadButtonModule } from '@backbase/ui-ang/load-button';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import { ModalModule } from '@backbase/ui-ang/modal';
import { PaymentCardModule } from '@backbase/ui-ang/payment-card';
import { AccessibilityKeyboardDirective } from './components/bb-payment-card-container-base/accessibility-keyboard.directive';
import { DeliveryTrackerComponent } from './components/bb-payment-card-delivery-status/delivery-tracker.component';
import { CardsDeliveryStatusCustomizableDirective, PaymentCardDeliveryStatusComponent, } from './components/bb-payment-card-delivery-status/payment-card-delivery-status.component';
import { CardsInitiateActivationCustomizableDirective, CardsInitiateActivationFormCustomizableDirective, PaymentCardInitiateActivationComponent, } from './components/bb-payment-card-initiate-activation/payment-card-initiate-activation.component';
import { CardsInitiateReplacementCustomizableDirective, CardsInitiateReplacementFormCustomizableDirective, PaymentCardInitiateReplacementComponent, } from './components/bb-payment-card-initiate-replacement/payment-card-initiate-replacement.component';
import { CardsUpdateLimitCustomizableDirective, PaymentCardLimitComponent, } from './components/bb-payment-card-limits/payment-card-limit.component';
import { CardsUpdateLimitsCustomizableDirective, PaymentCardLimitsComponent, } from './components/bb-payment-card-limits/payment-card-limits.component';
import { CardsMultipleErrorStateCustomizableDirective, PaymentCardMultipleErrorStateComponent, } from './components/bb-payment-card-multiple-error-state/payment-card-multiple-error-state.component';
import { CardsResetPinConfirmationCustomizableDirective, CardsResetPinCustomizableDirective, CardsResetPinFormCustomizableDirective, CardsResetPinNewPinCustomizableDirective, PaymentCardResetPinComponent, } from './components/bb-payment-card-reset-pin/payment-card-reset-pin.component';
import { PaymentCardStateWrapperComponent } from './components/bb-payment-card-state-wrapper-ui/payment-card-state-wrapper.component';
import { CardsBackendService } from './services/cards-backend.service';
import { CardsService } from './services/cards.service';
import * as i0 from "@angular/core";
const modules = [
    BadgeModule,
    ButtonModule,
    IconModule,
    InputPasswordModule,
    InputRadioGroupModule,
    LoadButtonModule,
    ModalModule,
    InputInlineEditModule,
    InputValidationMessageModule,
    AlertModule,
    PaymentCardModule,
    AmountModule,
    FocusModule,
    EmptyStateModule,
    LoadingIndicatorModule,
];
const components = [
    PaymentCardMultipleErrorStateComponent,
    PaymentCardStateWrapperComponent,
    PaymentCardInitiateReplacementComponent,
    PaymentCardInitiateActivationComponent,
    PaymentCardDeliveryStatusComponent,
    DeliveryTrackerComponent,
    PaymentCardLimitsComponent,
    PaymentCardLimitComponent,
    PaymentCardResetPinComponent,
    AccessibilityKeyboardDirective,
];
const directives = [
    CardsInitiateActivationCustomizableDirective,
    CardsInitiateActivationFormCustomizableDirective,
    CardsInitiateReplacementCustomizableDirective,
    CardsInitiateReplacementFormCustomizableDirective,
    CardsDeliveryStatusCustomizableDirective,
    CardsUpdateLimitsCustomizableDirective,
    CardsResetPinCustomizableDirective,
    CardsResetPinFormCustomizableDirective,
    CardsResetPinConfirmationCustomizableDirective,
    CardsResetPinNewPinCustomizableDirective,
    CardsUpdateLimitCustomizableDirective,
    CardsMultipleErrorStateCustomizableDirective,
];
const services = [CardsBackendService, CardsService];
export class CardsCommonModule {
}
CardsCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CardsCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsCommonModule, declarations: [PaymentCardMultipleErrorStateComponent,
        PaymentCardStateWrapperComponent,
        PaymentCardInitiateReplacementComponent,
        PaymentCardInitiateActivationComponent,
        PaymentCardDeliveryStatusComponent,
        DeliveryTrackerComponent,
        PaymentCardLimitsComponent,
        PaymentCardLimitComponent,
        PaymentCardResetPinComponent,
        AccessibilityKeyboardDirective, CardsInitiateActivationCustomizableDirective,
        CardsInitiateActivationFormCustomizableDirective,
        CardsInitiateReplacementCustomizableDirective,
        CardsInitiateReplacementFormCustomizableDirective,
        CardsDeliveryStatusCustomizableDirective,
        CardsUpdateLimitsCustomizableDirective,
        CardsResetPinCustomizableDirective,
        CardsResetPinFormCustomizableDirective,
        CardsResetPinConfirmationCustomizableDirective,
        CardsResetPinNewPinCustomizableDirective,
        CardsUpdateLimitCustomizableDirective,
        CardsMultipleErrorStateCustomizableDirective], imports: [CommonModule, ReactiveFormsModule, FormsModule, BadgeModule,
        ButtonModule,
        IconModule,
        InputPasswordModule,
        InputRadioGroupModule,
        LoadButtonModule,
        ModalModule,
        InputInlineEditModule,
        InputValidationMessageModule,
        AlertModule,
        PaymentCardModule,
        AmountModule,
        FocusModule,
        EmptyStateModule,
        LoadingIndicatorModule], exports: [BadgeModule,
        ButtonModule,
        IconModule,
        InputPasswordModule,
        InputRadioGroupModule,
        LoadButtonModule,
        ModalModule,
        InputInlineEditModule,
        InputValidationMessageModule,
        AlertModule,
        PaymentCardModule,
        AmountModule,
        FocusModule,
        EmptyStateModule,
        LoadingIndicatorModule, PaymentCardMultipleErrorStateComponent,
        PaymentCardStateWrapperComponent,
        PaymentCardInitiateReplacementComponent,
        PaymentCardInitiateActivationComponent,
        PaymentCardDeliveryStatusComponent,
        DeliveryTrackerComponent,
        PaymentCardLimitsComponent,
        PaymentCardLimitComponent,
        PaymentCardResetPinComponent,
        AccessibilityKeyboardDirective, CardsInitiateActivationCustomizableDirective,
        CardsInitiateActivationFormCustomizableDirective,
        CardsInitiateReplacementCustomizableDirective,
        CardsInitiateReplacementFormCustomizableDirective,
        CardsDeliveryStatusCustomizableDirective,
        CardsUpdateLimitsCustomizableDirective,
        CardsResetPinCustomizableDirective,
        CardsResetPinFormCustomizableDirective,
        CardsResetPinConfirmationCustomizableDirective,
        CardsResetPinNewPinCustomizableDirective,
        CardsUpdateLimitCustomizableDirective,
        CardsMultipleErrorStateCustomizableDirective] });
CardsCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsCommonModule, providers: [...services], imports: [[CommonModule, ReactiveFormsModule, FormsModule, ...modules], BadgeModule,
        ButtonModule,
        IconModule,
        InputPasswordModule,
        InputRadioGroupModule,
        LoadButtonModule,
        ModalModule,
        InputInlineEditModule,
        InputValidationMessageModule,
        AlertModule,
        PaymentCardModule,
        AmountModule,
        FocusModule,
        EmptyStateModule,
        LoadingIndicatorModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsCommonModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ReactiveFormsModule, FormsModule, ...modules],
                    providers: [...services],
                    declarations: [...components, ...directives],
                    exports: [...modules, ...components, ...directives],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,