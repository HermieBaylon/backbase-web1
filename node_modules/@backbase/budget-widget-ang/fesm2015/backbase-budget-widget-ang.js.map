{"version":3,"file":"backbase-budget-widget-ang.js","sources":["../../../../libs/budget-widget/src/budget-card/budget-card-chart.component.ts","../../../../libs/budget-widget/src/budget-card/budget-card-chart.component.html","../../../../libs/budget-widget/src/budget-card/budget-card-info.component.ts","../../../../libs/budget-widget/src/budget-card/budget-card-info.component.html","../../../../libs/budget-widget/src/constants.ts","../../../../libs/budget-widget/src/services/utility.service.ts","../../../../libs/budget-widget/src/budget-card/budget-card.component.ts","../../../../libs/budget-widget/src/budget-card/budget-card.component.html","../../../../libs/budget-widget/src/model/categories-list.ts","../../../../libs/budget-widget/src/services/categories.service.ts","../../../../libs/budget-widget/src/budgets-header/budgets-header.component.ts","../../../../libs/budget-widget/src/budgets-header/budgets.header.component.html","../../../../libs/budget-widget/src/budget-manager/budget-manager.component.ts","../../../../libs/budget-widget/src/budget-manager/budget-manager.component.html","../../../../libs/budget-widget/src/services/budget.service.ts","../../../../libs/budget-widget/src/budget-widget.component.ts","../../../../libs/budget-widget/src/budget-widget.component.html","../../../../libs/budget-widget/src/budget-widget.module.ts","../../../../libs/budget-widget/backbase-budget-widget-ang.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\nexport interface ChartPalette {\n  base: string | undefined;\n  success: string | undefined;\n  warning: string | undefined;\n  danger: string | undefined;\n}\n\n@Component({\n  selector: 'bb-budget-card-chart-ui',\n  templateUrl: './budget-card-chart.component.html',\n})\nexport class BudgetCardChartComponent implements OnInit {\n  /**\n   * Spending limit of the budget.\n   */\n  @Input() spendingLimit? = 0;\n  /**\n   * Currently spent inside a budget.\n   */\n  @Input() spent? = 0;\n  /**\n   * Percentage of current spending inside a budget.\n   */\n  @Input() spentPercentage: number | undefined;\n  /**\n   * Available funds inside a budget.\n   */\n  @Input() available? = 0;\n  /**\n   * Budget's currency code.\n   */\n  @Input() currencyCode? = '';\n  /**\n   * If set the chart will show a percentage instead of an amount.\n   */\n  @Input() showPercentage = false;\n  /**\n   * Sets the percentage of the safe zone limit of the chart.\n   */\n  @Input() safeZoneLimit = 100;\n  /**\n   * Sets color palette that should be used for rendering the chart.\n   */\n  @Input()\n  chartPalette: ChartPalette = {\n    base: undefined,\n    success: undefined,\n    warning: undefined,\n    danger: undefined,\n  };\n\n  get isOverBudget(): boolean {\n    return this.spent! > 0 && this.spent! > this.spendingLimit!;\n  }\n\n  chartOptions = {\n    colorScheme: {\n      domain: [''],\n    },\n    animations: false,\n    tooltipDisabled: true,\n    doughnut: true,\n    explodeSlices: false,\n    arcWidth: 0.1,\n    gradient: true,\n    data: [\n      {\n        name: '',\n        value: 1,\n      },\n    ],\n  };\n\n  private fillChartData() {\n    if (this.spentPercentage === undefined) {\n      return;\n    }\n\n    this.chartOptions.animations = true;\n    this.chartOptions.data[0].value = Math.round(this.spent!);\n\n    if (this.spentPercentage < 100) {\n      this.chartOptions.data.unshift({\n        name: ' ',\n        value: Math.round(this.available!),\n      });\n    }\n  }\n\n  private setChartPalette() {\n    if (this.spentPercentage === undefined) {\n      return;\n    }\n\n    if (this.spentPercentage >= 100) {\n      this.chartOptions.colorScheme.domain = [this.chartPalette.danger || ''];\n    } else if (this.spentPercentage >= this.safeZoneLimit) {\n      this.chartOptions.colorScheme.domain.unshift(this.chartPalette.warning || '');\n    } else if (this.spentPercentage === 0) {\n      this.chartOptions.colorScheme.domain = [this.chartPalette.success || ''];\n    } else {\n      this.chartOptions.colorScheme.domain.unshift(this.chartPalette.success || '');\n    }\n  }\n\n  ngOnInit() {\n    this.chartOptions.colorScheme.domain = [this.chartPalette.base || ''];\n    this.fillChartData();\n    this.setChartPalette();\n  }\n}\n","<div class=\"clearfix bb-budget-card-chart bb-text-align-center\">\n  <div class=\"absolute-center\">\n    <bb-amount-ui\n      *ngIf=\"!showPercentage\"\n      [amount]=\"available!\"\n      [currency]=\"currencyCode!\"\n      [decimalPlaces]=\"0\"\n      class=\"bb-highlight\"\n      [ngClass]=\"{\n        'text-success': spentPercentage ? spentPercentage < safeZoneLimit : false,\n        'text-warning': spentPercentage ? spentPercentage >= safeZoneLimit && spentPercentage < 100: false,\n        'text-danger': spentPercentage ? spentPercentage >= 100 : false\n      }\"\n    ></bb-amount-ui>\n\n    <div\n      *ngIf=\"showPercentage\"\n      class=\"bb-highlight\"\n    >\n      {{spentPercentage}} %\n    </div>\n\n    <div>\n      <span\n        *ngIf=\"!isOverBudget\"\n        i18n=\"Left|Left chart label@@budget.chart.left.label\"\n      >\n        Left\n      </span>\n      <span\n        *ngIf=\"isOverBudget\"\n        i18n=\"Over|Over chart label@@budget.chart.over.label\"\n      >\n        Over\n      </span>\n    </div>\n  </div>\n\n  <ngx-charts-pie-chart\n    [scheme]=\"chartOptions.colorScheme\"\n    [results]=\"chartOptions.data\"\n    [animations]=\"chartOptions.animations\"\n    [tooltipDisabled]=\"chartOptions.tooltipDisabled\"\n    [doughnut]=\"chartOptions.doughnut\"\n    [explodeSlices]=\"chartOptions.explodeSlices\"\n    [arcWidth]=\"chartOptions.arcWidth\"\n    [gradient]=\"chartOptions.gradient\"\n  ></ngx-charts-pie-chart>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BudgetData } from '../model/budgets';\n\n@Component({\n  selector: 'bb-budget-card-info-ui',\n  templateUrl: './budget-card-info.component.html',\n})\nexport class BudgetCardInfoComponent implements OnInit {\n  /**\n   * A single budget object.\n   */\n  @Input() data: BudgetData | undefined;\n  /**\n   * Sets the percentage of the safe zone limit of the chart.\n   */\n  @Input() safeZoneLimit = 0;\n\n  ngOnInit() {\n    if (this.data) {\n      if (this.data.available) {\n        this.data.available.amount = Math.round(parseFloat(this.data.available.amount)).toString();\n      }\n\n      if (this.data.spent) {\n        this.data.spent.amount = Math.round(parseFloat(this.data.spent.amount)).toString();\n      }\n\n      if (this.data.spendingLimit) {\n        this.data.spendingLimit.amount = Math.round(parseFloat(this.data.spendingLimit.amount)).toString();\n      }\n    }\n  }\n}\n","<div class=\"bb-stack bb-stack--center\">\n  <div *ngIf=\"data?.spent as spent\" class=\"bb-stack__item bb-stack__item--spacing-xl bb-text-align-center\">\n    <div i18n=\"Spent|Spent card info label@@budget.cardInfo.spent.label\">\n      Spent\n    </div>\n    <bb-amount-ui\n      class=\"bb-highlight\"\n      [amount]=\"spent.amount\"\n      [currency]=\"spent.currencyCode\"\n      [decimalPlaces]=\"0\"\n    ></bb-amount-ui>\n  </div>\n\n  <div *ngIf=\"data?.spendingLimit as spendingLimit\" class=\"bb-stack__item bb-text-align-center\">\n    <div i18n=\"Limit|Limit card info label@@budget.cardInfo.budgetLimit.label\">\n      Limit\n    </div>\n    <bb-amount-ui\n      class=\"bb-highlight\"\n      [amount]=\"spendingLimit.amount\"\n      [currency]=\"spendingLimit.currencyCode\"\n      [decimalPlaces]=\"0\"\n    ></bb-amount-ui>\n  </div>\n</div>\n","export const BaseCurrency = 'USD';\nexport const BudgetFrequency = 'MONTHLY';\nexport const CATEGORY_ICON_CLASS_PREFIX = 'bb-transaction-category-icon';\nexport const CATEGORY_CLASS_PREFIX = 'bb-transaction-category';\nexport const DEFAULT_ICON_CLASS = 'uncategorized';\nexport const ModalConfig = {\n  backdrop: 'static',\n  keyboard: false,\n};\n\nexport interface Properties {\n  name: string;\n  value: string;\n}\n\nexport const PROPERTIES = {\n  showPercentage: {\n    name: 'showPercentage',\n    value: 'showPercentage',\n  },\n  budgetSafeZoneLimit: {\n    name: 'budgetSafeZoneLimit',\n    value: 'budgetSafeZoneLimit',\n  },\n  notificationDismissTime: {\n    name: 'notificationDismissTime',\n    value: 'notificationDismissTime',\n  },\n  maxBudgets: {\n    name: 'maxBudgets',\n    value: 'maxBudgets',\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { CssVariablesService } from '@backbase/ui-ang/css-variables-lib';\nimport { ChartPalette } from '../budget-card/budget-card-chart.component';\nimport { DEFAULT_ICON_CLASS } from '../constants';\n\n@Injectable()\nexport class UtilityService {\n  constructor(private readonly cssVariablesService: CssVariablesService) {}\n\n  getCategoryIconClass(transactionCategory: string): string {\n    return `${transactionCategory.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-') || DEFAULT_ICON_CLASS}`;\n  }\n\n  getChartPalette(): Promise<ChartPalette> {\n    return Promise.all([\n      this.cssVariablesService.getCssVariable('--chart-neutral-color'),\n      this.cssVariablesService.getCssVariable('--chart-positive-color'),\n      this.cssVariablesService.getCssVariable('--warning'),\n      this.cssVariablesService.getCssVariable('--chart-alert-color'),\n    ]).then(([base, success, warning, danger]) => ({\n      base,\n      success,\n      warning,\n      danger,\n    }));\n  }\n}\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BudgetData } from '../model/budgets';\nimport { UtilityService } from '../services/utility.service';\nimport { ChartPalette } from './budget-card-chart.component';\n\n@Component({\n  selector: 'bb-budget-card-ui',\n  templateUrl: './budget-card.component.html',\n})\nexport class BudgetCardComponent implements OnInit {\n  /**\n   * A single budget object.\n   */\n  @Input() budgetData: BudgetData | undefined;\n  /**\n   * If set the chart will show a percentage instead of an amount.\n   */\n  @Input() showPercentage = false;\n  /**\n   * Sets the percentage of the safe zone limit of the chart.\n   */\n  @Input() safeZoneLimit = 0;\n\n  /**\n   * EventEmitter for triggering a deleteBudget event.\n   */\n  @Output() deleteBudget = new EventEmitter();\n  /**\n   * EventEmitter for triggering a editBudget event.\n   */\n  @Output() editBudget = new EventEmitter();\n\n  constructor(private readonly cd: ChangeDetectorRef, readonly utility: UtilityService) {}\n\n  colorPalette: ChartPalette | undefined;\n\n  get spendingLimit(): number | undefined {\n    return this.budgetData && parseFloat(this.budgetData.spendingLimit.amount);\n  }\n\n  get spent(): number | undefined {\n    return this.budgetData && this.budgetData.spent && parseFloat(this.budgetData.spent.amount);\n  }\n\n  get available(): number | undefined {\n    return this.budgetData && this.budgetData.available && parseFloat(this.budgetData.available.amount);\n  }\n\n  get spentPercentage(): number | undefined {\n    return this.budgetData && this.budgetData.spentPercentage;\n  }\n\n  get currencyCode(): string | undefined {\n    return this.budgetData && this.budgetData.spendingLimit.currencyCode;\n  }\n\n  triggerDeleteBudget() {\n    this.deleteBudget.emit(this.budgetData);\n  }\n\n  triggerEditBudget() {\n    this.editBudget.emit(this.budgetData);\n  }\n\n  ngOnInit() {\n    this.utility.getChartPalette().then((palette) => {\n      this.colorPalette = palette;\n      this.cd.markForCheck();\n    });\n  }\n}\n","<div class=\"card\">\n  <div class=\"bb-stack bb-stack--density-sm\">\n    <div class=\"bb-stack__item bb-stack__item--push-right\">\n      <bb-dropdown-menu-ui\n        icon=\"ellipsis-h\"\n        btnColor=\"link-dark\"\n        [btnCircle]=\"true\"\n        container=\"body\"\n        position=\"bottom-left\"\n        data-role=\"options-button\"\n        aria-label=\"Options\"\n        i18n-aria-label=\"Options button|Budgets options button tooltip@@budgets.options.label\"\n      >\n        <ng-template bbDropdownMenuItem>\n          <a\n            rel=\"noopener\"\n            role=\"menuitem\"\n            class=\"dropdown-item\"\n            data-role=\"edit-item\"\n            target=\"_blank\"\n            (click)=\"triggerEditBudget()\"\n          >\n            <span i18n=\"Edit budget|Label for edit saving goal action@@budgets.budget.edit\">Edit</span>\n          </a>\n          <a\n            rel=\"noopener\"\n            role=\"menuitem\"\n            class=\"dropdown-item\"\n            data-role=\"delete-item\"\n            target=\"_blank\"\n            (click)=\"triggerDeleteBudget()\"\n          >\n            <span i18n=\"Delete budget|Label for delete saving goal action@@budgets.budget.delete\">Delete</span>\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-text-align-center\">\n    <div class=\"bb-block bb-block--sm\">\n      <bb-icon-ui \n        color=\"secondary\"\n        name=\"{{ 'category-' + utility.getCategoryIconClass(budgetData?.budgetIcon || '') }}\"\n      ></bb-icon-ui>\n    </div>\n    \n    <div class=\"bb-text-semi-bold\">\n      {{budgetData?.budgetName}}\n    </div>\n  </div>\n\n  <div class=\"card-body\">\n    <bb-budget-card-chart-ui \n      *ngIf=\"colorPalette\" \n      [spendingLimit]=\"spendingLimit\" \n      [spent]=\"spent\"\n      [spentPercentage]=\"spentPercentage\" \n      [available]=\"available\" \n      [currencyCode]=\"currencyCode\"\n      [chartPalette]=\"colorPalette\" \n      [safeZoneLimit]=\"safeZoneLimit\" \n      [showPercentage]=\"showPercentage\"\n    ></bb-budget-card-chart-ui>\n\n    <bb-budget-card-info-ui\n      [data]=\"budgetData\"\n      [safeZoneLimit]=\"safeZoneLimit\"\n    ></bb-budget-card-info-ui>\n  </div>\n</div>","import { HttpResponse } from '@angular/common/http';\nimport { Category } from '@backbase/data-ang/categories-management';\nimport { Customizable } from '@backbase/product-summary-common-ang';\n\nexport interface CategoryItem extends Customizable {\n  categoryId: number;\n  categoryName: string;\n}\n\nexport function categoriesManagementMap(item: Category): CategoryItem {\n  return { ...item };\n}\n\nexport function fromCategoriesManagementResponse(response: HttpResponse<Category[]>): CategoryItem[] {\n  return (response.body || []).map(categoriesManagementMap);\n}\n","import { Injectable } from '@angular/core';\nimport { CategoriesHttpService } from '@backbase/data-ang/categories-management';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CategoryItem, fromCategoriesManagementResponse } from '../model/categories-list';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(private readonly categoriesManagementDataHttpService: CategoriesHttpService) {}\n\n  getCategories(): Observable<CategoryItem[]> {\n    return this.categoriesManagementDataHttpService\n      .getCategories(\n        {\n          level: 'PARENTS',\n        },\n        'response',\n      )\n      .pipe(map((response) => fromCategoriesManagementResponse(response)));\n  }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'bb-budgets-header-ui',\n  templateUrl: './budgets.header.component.html',\n})\nexport class BudgetsHeaderComponent {\n  /**\n   * EventEmitter for triggering a createBudget event.\n   */\n  @Output() createBudget = new EventEmitter();\n\n  readonly currentDate = new Date();\n\n  triggerCreateBudget() {\n    this.createBudget.emit();\n  }\n}\n","<div class=\"bb-block bb-block--xl\">\n  <div class=\"bb-stack\">\n    <button \n      bbButton \n      color=\"primary\"\n      class=\"bb-stack__item bb-stack__item--push-right\" \n      (click)=\"triggerCreateBudget()\"\n    >\n      <bb-icon-ui \n        name=\"add\" \n        size=\"md\" \n        class=\"bb-stack__item bb-stack__item--spacing-xs\"\n      ></bb-icon-ui>\n      <span i18n=\"New budget|Label for a button that create a new budget@@budgets.new.button.lable\">New budget</span>\n    </button>\n  </div>\n</div>","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BudgetsGetResponseBody } from '@backbase/data-ang/budgeting';\nimport { AssetsResolver, AssetsService, BbTemplate } from '@backbase/foundation-ang/core';\nimport { Observable } from 'rxjs';\nimport { BaseCurrency, BudgetFrequency, ModalConfig } from '../constants';\nimport { BudgetData, BudgetList, Currency, Frequency, Period } from '../model/budgets';\nimport { CategoryItem } from '../model/categories-list';\nimport { CategoriesService } from '../services/categories.service';\nimport { UtilityService } from '../services/utility.service';\n\nexport interface CreateBudgetForm {\n  categoryName: string;\n  spendingLimit: Currency;\n  frequency: Frequency;\n  period: Period;\n}\n\nexport interface UpdateBudgetForm {\n  updateBudgetFormData: {\n    spendingLimit: Currency;\n  };\n  selectedBudgetName: string;\n  selectedBudgetId: string;\n}\n\n@Component({\n  selector: 'bb-budget-manager',\n  templateUrl: './budget-manager.component.html',\n})\nexport class BudgetManagerComponent {\n  /**\n   * Modal header background.\n   */\n  @Input() background = 'primary';\n  /**\n   * An array of budgets (objects).\n   */\n  @Input() budgets: BudgetList | undefined;\n  /**\n   * A number to define the maximum number of budgets to be shown.\n   */\n  @Input() maxBudgets: number | undefined;\n  /**\n   * If set the chart will show a percentage instead of an amount.\n   */\n  @Input() showPercentage? = false;\n  /**\n   * Sets the percentage of the safe zone limit of the chart.\n   */\n  @Input() safeZoneLimit: number | undefined;\n  /**\n   * EventEmitter for triggering a editBudget event.\n   */\n  @Output() editBudget = new EventEmitter<UpdateBudgetForm>();\n  /**\n   * EventEmitter for triggering a createBudget event.\n   */\n  @Output() createBudget = new EventEmitter<CreateBudgetForm>();\n  /**\n   * EventEmitter for triggering a deleteBudget event.\n   */\n  @Output() deleteBudget = new EventEmitter<BudgetData>();\n\n  hostRef = this;\n\n  private readonly resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-budget-widget-ang',\n    getURIFromAssetID: (assetId: string) => `${assetId}`,\n  });\n\n  images: Observable<string>[] = ['1', '2'].map((i: string) => this.resolveAsset(i + '-step.svg'));\n  themev2img: Observable<string> = this.resolveAsset('modal-header.png');\n\n  readonly baseCurrency = BaseCurrency;\n  private readonly budgetFrequency = BudgetFrequency;\n\n  readonly baseBudgetModalOptions = ModalConfig;\n  readonly confirmationModalOptions = {\n    ...this.baseBudgetModalOptions,\n    size: 'md',\n  };\n  readonly categoriesList: Observable<CategoryItem[]> = this.categoriesService.getCategories();\n\n  selectedBudget: BudgetData | undefined;\n  updateBudgetForm: FormGroup | undefined;\n  createBudgetForm: FormGroup | undefined;\n\n  discardEditModalActive = false;\n  discardCreateModalActive = false;\n  deleteBudgetModalActive = false;\n  updateBudgetModalActive = false;\n  createBudgetModalActive = false;\n  activeStep = 1;\n\n  get startOfMonth() {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = '' + (date.getMonth() + 1);\n    month = month.padStart(2, '0');\n    return `${year}-${month}-01`;\n  }\n\n  get endOfMonth() {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const newDate = new Date(year, month, 0);\n    const day = newDate.getDate();\n    const formattedMonth = month.toString().padStart(2, '0');\n\n    return `${year}-${formattedMonth}-${day}`;\n  }\n\n  get budgetList(): BudgetList | undefined {\n    if (this.maxBudgets && this.budgets) {\n      return this.budgets.slice(0, this.maxBudgets);\n    }\n\n    return this.budgets;\n  }\n\n  constructor(\n    private readonly categoriesService: CategoriesService,\n    private readonly fb: FormBuilder,\n    readonly utility: UtilityService,\n    private readonly assetsService: AssetsService,\n  ) {}\n\n  private spawnCreateBudgetForm() {\n    return this.fb.group({\n      categoryName: ['', Validators.required],\n      spendingLimit: ['', Validators.required],\n      frequency: [this.budgetFrequency, Validators.required],\n      period: [this.startOfMonth, Validators.required],\n    });\n  }\n\n  private spawnUpdateBudgetForm(): FormGroup | undefined {\n    if (this.selectedBudget) {\n      return this.fb.group({\n        spendingLimit: [this.selectedBudget.spendingLimit, Validators.required],\n      });\n    }\n    return undefined;\n  }\n\n  closeModal() {\n    this.discardEditModalActive = false;\n    this.discardCreateModalActive = false;\n    this.deleteBudgetModalActive = false;\n  }\n\n  processCloseConfirmation() {\n    this.closeModal();\n    this.updateBudgetModalActive = false;\n    this.createBudgetModalActive = false;\n    this.activeStep = 1;\n  }\n\n  cancelCreateBudget() {\n    if (this.createBudgetForm && !this.createBudgetForm.pristine) {\n      this.discardCreateModalActive = true;\n    } else {\n      this.createBudgetModalActive = false;\n    }\n  }\n\n  cancelUpdateBudget() {\n    if (this.updateBudgetForm && !this.updateBudgetForm.pristine) {\n      this.discardEditModalActive = true;\n    } else {\n      this.updateBudgetModalActive = false;\n    }\n  }\n\n  handleCreate() {\n    this.createBudgetModalActive = true;\n    this.createBudgetForm = this.spawnCreateBudgetForm();\n  }\n\n  submitCreateBudget() {\n    if (this.createBudgetForm) {\n      this.createBudgetModalActive = false;\n      this.activeStep = 1;\n      const createBudgetFormValue = {\n        ...this.createBudgetForm.value,\n        period: {\n          startDate: this.createBudgetForm.value.period,\n          endDate: this.endOfMonth,\n        },\n        spendingLimit: {\n          currencyCode: this.createBudgetForm.value.spendingLimit.currency,\n          amount: this.createBudgetForm.value.spendingLimit.amount,\n        },\n      };\n\n      this.createBudget.emit(createBudgetFormValue as CreateBudgetForm);\n      this.createBudgetForm.reset();\n    }\n  }\n\n  handleEdit(data: BudgetData) {\n    this.updateBudgetModalActive = true;\n    this.selectedBudget = data;\n    this.updateBudgetForm = this.spawnUpdateBudgetForm();\n  }\n\n  submitEditBudget() {\n    if (this.selectedBudget && this.updateBudgetForm) {\n      this.updateBudgetModalActive = false;\n      this.editBudget.emit({\n        updateBudgetFormData: {\n          ...this.updateBudgetForm.value,\n          spendingLimit: {\n            currencyCode: this.updateBudgetForm.value.spendingLimit.currency,\n            amount: this.updateBudgetForm.value.spendingLimit.amount,\n          },\n        },\n        selectedBudgetName: this.selectedBudget.budgetName,\n        selectedBudgetId: this.selectedBudget.id,\n      } as UpdateBudgetForm);\n      this.selectedBudget = undefined;\n    }\n  }\n\n  handleDelete(data: BudgetData) {\n    this.deleteBudgetModalActive = true;\n    this.selectedBudget = data;\n  }\n\n  submitDeleteBudget() {\n    if (this.selectedBudget) {\n      this.deleteBudgetModalActive = false;\n      this.deleteBudget.emit(this.selectedBudget);\n      this.selectedBudget = undefined;\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbBudgetsHeaderCustomizable]',\n})\nexport class BudgetsHeaderCustomizableDirective extends BbTemplate<BudgetManagerComponent, undefined> {}\n\n@Directive({\n  selector: '[bbBudgetCardCustomizable]',\n})\nexport class BudgetCardCustomizableDirective extends BbTemplate<\n  BudgetManagerComponent,\n  BudgetsGetResponseBody | undefined\n> {}\n\n@Directive({\n  selector: '[bbBudgetConfirmationModalCustomizable]',\n})\nexport class BudgetConfirmationModalCustomizableDirective extends BbTemplate<BudgetManagerComponent, undefined> {}\n\n@Directive({\n  selector: '[bbBudgetUpdateModalCustomizable]',\n})\nexport class BudgetUpdateModalCustomizableDirective extends BbTemplate<BudgetManagerComponent, undefined> {}\n\n@Directive({\n  selector: '[bbBudgetCreateModalCustomizable]',\n})\nexport class BudgetCreateModalCustomizableDirective extends BbTemplate<BudgetManagerComponent, undefined> {}\n","<ng-container bbBudgetsHeaderCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<div\n  class=\"row\"\n  *ngIf=\"budgets?.length; else emptyState\"\n>\n  <ng-container\n    *ngFor=\"let budget of budgetList\"\n    bbBudgetCardCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"budget\"\n  ></ng-container>\n</div>\n\n<ng-container bbBudgetConfirmationModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-container bbBudgetUpdateModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-container bbBudgetCreateModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template #emptyState>\n  <bb-empty-state-ui\n    class=\"card bb-state-container\"\n    title=\"No Budgets Created\"\n    i18n-title=\"No Budgets Created|Title of a message that is shown when there are no budgets@@budgets.state.noResultsFound.title\"\n    subtitle=\"You haven’t created a budget yet\"\n    i18n-subtitle=\"You haven’t created a budget yet|Subtitle of a message that is shown when there are no budgets@@budgets.state.noResultsFound.subtitle\"\n    iconSize=\"xxl\"\n    iconModifier=\"data-usage\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template bbBudgetCardCustomizable let-hostRef let-budget=\"context\">\n  <bb-budget-card-ui\n    class=\"bb-block bb-block--xl col-md-6 col-lg-4\"\n    [budgetData]=\"budget\"\n    [showPercentage]=\"hostRef.showPercentage\"\n    [safeZoneLimit]=\"hostRef.safeZoneLimit\"\n    (editBudget)=\"hostRef.handleEdit($event)\"\n    (deleteBudget)=\"hostRef.handleDelete($event)\"\n  ></bb-budget-card-ui>\n</ng-template>\n\n<ng-template bbBudgetsHeaderCustomizable let-hostRef>\n  <bb-budgets-header-ui \n    (createBudget)=\"hostRef.handleCreate()\"\n  ></bb-budgets-header-ui>\n</ng-template>\n\n<!-- Delete budget -->\n<ng-template bbBudgetConfirmationModalCustomizable let-hostRef>\n  <bb-modal-ui\n    [isOpen]=\"hostRef.deleteBudgetModalActive || hostRef.discardEditModalActive || hostRef.discardCreateModalActive\"\n    [modalOptions]=\"hostRef.confirmationModalOptions\"\n  >\n    <div class=\"modal-header\">\n      <h2\n        id=\"modal-basic-title\"\n        class=\"modal-title\"\n        *ngIf=\"hostRef.deleteBudgetModalActive\"\n        i18n=\"Delete budget?|Delete budget modal title@@budget.delete.modal.title\"\n      >\n        Delete budget?\n      </h2>\n\n      <h2\n        id=\"modal-basic-title\"\n        class=\"modal-title\"\n        *ngIf=\"hostRef.discardEditModalActive\"\n        i18n=\"Discard budget changes?|Discard edit modal title@@budget.discard.edit.modal.title\"\n      >\n        Discard budget changes?\n      </h2>\n\n      <h2\n        id=\"modal-basic-title\"\n        class=\"modal-title\"\n        *ngIf=\"hostRef.discardCreateModalActive\"\n        i18n=\"Discard new budget?|Discard create modal title@@budget.discard.create.modal.title\"\n      >\n        Discard new budget?\n      </h2>\n    </div>\n\n    <div class=\"modal-body\">\n      <span\n        *ngIf=\"hostRef.deleteBudgetModalActive\"\n        i18n=\"This budget will be permanently deleted.|Delete budget info@@budget.delete.modal.info\"\n      >\n        This budget will be permanently deleted.\n      </span>\n\n      <span\n        *ngIf=\"hostRef.discardEditModalActive\"\n        i18n=\"You will loose all the changes made to this budget.|Discard edit budget info@@budget.discard.edit.modal.info\"\n      >\n        You will loose all the changes made to this budget.\n      </span>\n\n      <span\n        *ngIf=\"hostRef.discardCreateModalActive\"\n        i18n=\"All entered information for this budget will be permanetly lost.|Discard create budget info@@budget.discard.create.modal.info\"\n      >\n        All entered information for this budget will be permanetly lost.\n      </span>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <button \n          bbButton\n          color=\"danger\" \n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.submitDeleteBudget()\" \n          *ngIf=\"hostRef.deleteBudgetModalActive\"\n          i18n=\"Delete budget|Delete button label@@budget.delete.modal.delete.button\"\n        >\n          Delete budget\n        </button>\n\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.closeModal()\"\n          *ngIf=\"hostRef.deleteBudgetModalActive\"\n          i18n=\"Not now|Not now button label@@budget.confirmation.modal.not.button\"\n        >\n          Not now\n        </button>\n\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.processCloseConfirmation()\"\n          *ngIf=\"hostRef.discardEditModalActive\"\n          i18n=\"Discard changes|Discard editing button label@@budget.confirmation.modal.discard.edit.button\"\n        >\n          Discard changes\n        </button>\n\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.closeModal()\"\n          *ngIf=\"hostRef.discardEditModalActive\"\n          i18n=\"Keep editing|Keep editing button label@@budget.confirmation.modal.keep.button\"\n        >\n          Keep editing\n        </button>\n\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.processCloseConfirmation()\"\n          *ngIf=\"hostRef.discardCreateModalActive\"\n          i18n=\"Discard budget|Discard creating button label@@budget.confirmation.modal.discard.create.button\"\n        >\n          Discard budget\n        </button>\n\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.closeModal()\"\n          *ngIf=\"hostRef.discardCreateModalActive\"\n          i18n=\"Keep it|Keep it button label@@budget.confirmation.modal.keep.it.button\"\n        >\n          Keep it\n        </button>\n      </div>\n    </div>\n  </bb-modal-ui>\n</ng-template>\n\n<!-- Edit budget -->\n<ng-template bbBudgetUpdateModalCustomizable let-hostRef>\n  <bb-modal-ui\n    *ngIf=\"hostRef.updateBudgetModalActive\"\n    [isOpen]=\"hostRef.updateBudgetModalActive\"\n    [modalOptions]=\"hostRef.baseBudgetModalOptions\"\n  >\n    <img \n      class=\"img-fluid\"\n      [src]=\"hostRef.themev2img | async\" \n      alt=\"Edit budget top image\"\n      i18n-alt=\"@@budget.editImage.alt\"\n    />\n    <form [formGroup]=\"hostRef.updateBudgetForm\" (ngSubmit)=\"hostRef.submitEditBudget()\">\n      <div class=\"modal-body\">\n        <div class=\"bb-block bb-block--xl\">\n          <h2 \n            data-role=\"modal-basic-title\"\n            class=\"modal-title\"\n            i18n=\"Set your budget limit|Edit budget modal title@@budget.edit.title\"\n          >\n            Set your budget limit\n          </h2>\n          <p\n            class=\"bb-text-support\" \n            data-role=\"edit-budget-text\"\n            i18n=\"Category edit description|Description for category edit form@@budget.edit.description\"\n          >\n            Choose a monthly budget for your selected category.\n          </p>\n        </div>\n\n        <div class=\"bb-block bb-block--sm\">\n          <div class=\"bb-stack\">\n            <bb-icon-ui \n              class=\"bb-stack__item\"\n              size=\"sm\"\n              backgroundType=\"square\"\n              name=\"category-{{hostRef.utility.getCategoryIconClass(hostRef.selectedBudget.budgetName || '')}}\"\n            >\n            </bb-icon-ui>\n            <div\n              class=\"bb-stack__item bb-text-semi-bold\"\n            >\n              {{hostRef.selectedBudget.budgetName}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--sm\">\n          {{startOfMonth | date: 'mediumDate'}} - {{endOfMonth | date: 'mediumDate'}}\n        </div>\n        \n        <div class=\"bb-block bb-block--xl\">\n          <span i18n=\"Recurring|Budget type@@budget.edit.modal.type\">\n            Recurring\n          </span>\n          <span i18n=\"Monthly|Budget frequency@@budget.edit.modal.frequency.info\">\n            monthly\n          </span>\n        </div>\n\n        <div class=\"bb-block bb-block--xl\">\n          <p\n            class=\"bb-block bb-block--sm bb-text-semi-bold\" \n            i18n=\"Monthly amount|Monthly amount for category edit form@@budget.edit.modal.amount.title\"\n          >\n            Monthly amount\n          </p>\n          <bb-currency-input-ui\n            formControlName=\"spendingLimit\"\n            [currencies]=\"[hostRef.selectedBudget.spendingLimit.currencyCode]\"\n          ></bb-currency-input-ui>\n        </div>\n      </div>\n\n      <div class=\"modal-footer bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\" \n          color=\"primary\" \n          [disabled]=\"hostRef.updateBudgetForm.pristine\"\n          i18n=\"Confirm|Confirm button label@@budget.modal.confirm.button\"\n        >\n          Confirm\n        </button>\n        <button\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          bbButton\n          color=\"link\" \n          (click)=\"hostRef.cancelUpdateBudget()\"\n          i18n=\"Cancel|Cancel button label@@budget.confirmation.modal.cancel.button\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </bb-modal-ui>\n</ng-template>\n\n<!-- Create a budget -->\n<ng-template bbBudgetCreateModalCustomizable let-hostRef>\n  <bb-modal-ui \n    *ngIf=\"hostRef.createBudgetForm && (hostRef.categoriesList | async) as categoriesList\"\n    [isOpen]=\"hostRef.createBudgetModalActive\" \n    [modalOptions]=\"hostRef.baseBudgetModalOptions\"\n  >\n    <ng-container *ngFor=\"let img of hostRef.images; let i=index\">\n      <div *ngIf=\"hostRef.activeStep === i + 1\">\n        <img \n          class=\"img-fluid\"\n          [src]=\"hostRef.themev2img | async\" \n          alt=\"Step {{i + 1}} \" \n          i18n-alt=\"@@budget.createImage.alt\"\n        />\n      </div>\n    </ng-container>\n\n    <form [formGroup]=\"hostRef.createBudgetForm\" (ngSubmit)=\"hostRef.submitCreateBudget()\">\n      <div class=\"modal-body\">\n        <div *ngIf=\"hostRef.activeStep === 1\">\n          <div class=\"bb-block bb-block--xl\">\n            <h2 \n              data-role=\"step-1-title\" \n              class=\"modal-title\"\n              i18n=\"Category name title|Title for category name input field in create/edit form@@budget.form.title.name\"\n            >\n              Select your budget category\n            </h2>\n            <p \n              class=\"bb-text-support\" \n              data-role=\"step-1-text\"\n              i18n=\"Category name description|Description for category name input field in create/edit form@@budget.form.description.name\"\n            >\n              Begin managing your budget by choosing a category.\n            </p>\n          </div>\n\n          <div class=\"bb-block bb-block--md\">\n            <div class=\"bb-scrollable-category-list\">\n              <bb-input-radio-group-ui \n                [required]=\"true\" \n                name=\"categoriesList\" \n                label=\" \"\n                formControlName=\"categoryName\" \n              >\n                <bb-input-radio-ui\n                  *ngFor=\"let category of categoriesList\"\n                  [id]=\"hostRef.utility.getCategoryIconClass(category.categoryName)\"\n                  [labelTemplate]=\"customLabelTemplateWithData\"\n                  [labelTemplateContext]=\"category\"\n                  [value]=\"category.categoryName\"\n                ></bb-input-radio-ui>\n              </bb-input-radio-group-ui>\n              <ng-template #customLabelTemplateWithData let-category=\"labelTemplateContext\">\n                  <bb-icon-ui\n                  class=\"bb-stack__item\"\n                  size=\"sm\"\n                  backgroundType=\"square\"\n                  name=\"category-{{hostRef.utility.getCategoryIconClass(category.categoryName)}}\"\n                ></bb-icon-ui>\n                <span class=\"bb-text-semi-bold\">{{ category.categoryName }}</span>\n              </ng-template>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"hostRef.activeStep === 2\">\n          <div class=\"bb-block bb-block--xl\">\n            <h2\n              data-role=\"step-2-title\" \n              class=\"modal-title\"\n              i18n=\"Set your budget limit|Second step title of create a budget@@budget.create.title\"\n            >\n              Set your budget limit\n            </h2>\n            <p\n              class=\"bb-text-support\" \n              data-role=\"step-2-text\"\n              i18n=\"Choose a monthly budget for your selected category|Second step description of create a budget@@budget.form.description.edit\"\n            >\n              Choose a monthly budget for your selected category.\n            </p>\n          </div>\n\n          <div class=\"bb-block bb-block--sm\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui \n                class=\"bb-stack__item\"\n                size=\"sm\"\n                backgroundType=\"square\"\n                name=\"category-{{hostRef.utility.getCategoryIconClass(hostRef.createBudgetForm.value.categoryName)}}\" \n              ></bb-icon-ui>\n              <div class=\"bb-text-semi-bold\">\n                {{hostRef.createBudgetForm.value.categoryName}}\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bb-block bb-block--sm\">\n            {{startOfMonth | date: 'mediumDate'}} - {{endOfMonth | date: 'mediumDate'}}\n          </div>\n\n          <div class=\"bb-block bb-block--xl\">\n            <span i18n=\"Recurring|Budget type@@budget.create.modal.type\">\n              Recurring\n            </span>\n            <span i18n=\"Monthly|Budget frequency@@budget.create.modal.frequency.info\">\n              monthly\n            </span>\n          </div>\n\n          <div class=\"bb-block bb-block--xl\">\n            <p\n              class=\"bb-block bb-block--sm bb-text-semi-bold\" \n              i18n=\"Monthly amount|Monthly amount for category edit form@@budget.create.modal.amount.title\"\n            >\n              Monthly amount\n            </p>\n            <bb-currency-input-ui\n              [currencies]=\"[hostRef.baseCurrency]\" \n              formControlName=\"spendingLimit\"\n            ></bb-currency-input-ui>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer bb-button-bar\">\n        <button\n          bbButton\n          type=\"submit\" \n          color=\"primary\" \n          class=\"bb-button-bar__button\"\n          *ngIf=\"hostRef.activeStep === 2\"\n          [disabled]=\"hostRef.createBudgetForm.status !== 'VALID'\"\n          i18n=\"Confirm|Confirm button label@@budget.create.modal.confirm.button\"\n        >\n          Confirm\n        </button>\n        <button\n          bbButton\n          color=\"primary\" \n          class=\"bb-button-bar__button\"\n          *ngIf=\"hostRef.activeStep === 1\" \n          (click)=\"hostRef.activeStep = 2\"\n          [disabled]=\"hostRef.createBudgetForm.pristine\" \n          i18n=\"Continue|Continue button label@@budget.create.modal.continue.button\"\n        >\n          Continue\n        </button>\n        <button\n          bbButton \n          color=\"secondary\" \n          class=\"bb-button-bar__button\"\n          *ngIf=\"hostRef.activeStep === 2\"\n          (click)=\"hostRef.activeStep = 1\" \n          i18n=\"Back|Back button label@@budget.create.modal.previous.button\"\n        >\n          Back\n        </button>\n        <button\n          bbButton\n          color=\"link\" \n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          (click)=\"hostRef.cancelCreateBudget()\"\n          i18n=\"Cancel|Cancel button label@@budget.create.modal.cancel.button\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </bb-modal-ui>\n</ng-template>","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BudgetsHttpService } from '@backbase/data-ang/budgeting';\nimport { Observable } from 'rxjs';\nimport { BudgetId, BudgetItem, BudgetList, BudgetPost } from '../model/budgets';\n\n@Injectable()\nexport class BudgetService {\n  constructor(private readonly budgetingDataHttpService: BudgetsHttpService) {}\n\n  getBudgets(): Observable<BudgetList> {\n    return this.budgetingDataHttpService.getBudgets();\n  }\n\n  createBudget(budget: BudgetPost): Observable<HttpResponse<BudgetId>> {\n    return this.budgetingDataHttpService.postBudgets({ budgetsPostRequestBody: budget }, 'response');\n  }\n\n  updateBudget(budgetId: string, budget: BudgetItem): Observable<HttpResponse<null>> {\n    return this.budgetingDataHttpService.putId({ id: budgetId, idPutRequestBody: budget }, 'response');\n  }\n\n  deleteBudget(budgetId: string): Observable<HttpResponse<null>> {\n    return this.budgetingDataHttpService.deleteId({ id: budgetId }, 'response');\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, Directive, Input, Optional, TemplateRef, ViewChild } from '@angular/core';\nimport { BbTemplate, ItemModel } from '@backbase/foundation-ang/core';\nimport { Property } from '@backbase/foundation-ang/web-sdk';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { BehaviorSubject, combineLatest, ConnectableObservable, Observable, of } from 'rxjs';\nimport { catchError, flatMap, map, publish, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { CreateBudgetForm, UpdateBudgetForm } from './budget-manager/budget-manager.component';\nimport { ModalConfig, Properties, PROPERTIES } from './constants';\nimport { BudgetData, BudgetItem, BudgetList, BudgetPost } from './model/budgets';\nimport { BudgetService } from './services/budget.service';\nimport { UtilityService } from './services/utility.service';\n\ntype NotificationHeader = string | TemplateRef<any>;\ntype NotificationMessage = string | TemplateRef<any>;\nenum NotificationModifier {\n  SUCCESS = 'success',\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error',\n}\n\ninterface Notification {\n  header: NotificationHeader;\n  message: NotificationMessage;\n  modifier: NotificationModifier | undefined;\n}\n\nconst filterInputParameters = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n\n@Component({\n  selector: 'bb-budget-widget',\n  templateUrl: './budget-widget.component.html',\n})\nexport class BudgetWidgetComponent {\n  @Input('showPercentage') set showPercentageValue(value: boolean) {\n    this.showPercentageSubject.next(value);\n  }\n  @Input('budgetSafeZoneLimit') set budgetSafeZoneLimitValue(value: number) {\n    this.budgetSafeZoneLimitSubject.next(value);\n  }\n  @Input('notificationDismissTime') set notificationDismissTimeValue(value: number) {\n    this.notificationDismissTimeSubject.next(value);\n  }\n  @Input('maxBudgets') set maxBudgetsValue(value: number) {\n    this.maxBudgetsSubject.next(value);\n  }\n\n  @ViewChild('notificationCreate') notificationCreateTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationUpdate') notificationUpdateTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationDelete') notificationDeleteTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationErrorCreate') notificationErrorCreateTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationErrorUpdate') notificationErrorUpdateTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationErrorDelete') notificationErrorDeleteTemplate: TemplateRef<any> | undefined;\n\n  private readonly showPercentageSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly budgetSafeZoneLimitSubject = new BehaviorSubject<number | undefined>(undefined);\n  private readonly notificationDismissTimeSubject = new BehaviorSubject<number | undefined>(undefined);\n  private readonly maxBudgetsSubject = new BehaviorSubject<number | undefined>(undefined);\n\n  private readonly reload = new BehaviorSubject(undefined);\n  readonly baseBudgetModalOptions = ModalConfig;\n  readonly confirmationModalOptions = {\n    ...this.baseBudgetModalOptions,\n    size: 'sm',\n  };\n  readonly budgetList: Observable<BudgetList | undefined> = this.reload.asObservable().pipe(\n    switchMap(() => this.service.getBudgets()),\n    catchError((error: HttpErrorResponse | Error) => {\n      this.handleError(error);\n      return of(undefined);\n    }),\n  );\n\n  hostRef = this;\n  error: string | undefined;\n\n  constructor(\n    private readonly utility: UtilityService,\n    private readonly service: BudgetService,\n    private readonly notificationService: NotificationService,\n    @Optional() private readonly model: ItemModel,\n  ) {}\n\n  private pushNotification(\n    header: NotificationHeader,\n    message: NotificationMessage,\n    modifier: NotificationModifier,\n    notificationDismissTime: number | undefined,\n  ) {\n    if (notificationDismissTime) {\n      this.notificationService.showNotification({\n        header,\n        message,\n        modifier,\n        dismissible: true,\n        ttl: notificationDismissTime * 1000,\n      });\n    }\n  }\n\n  private readonly serviceResponse =\n    <R>(successHeader: NotificationHeader, errorHeader: NotificationHeader) =>\n    (source: Observable<R>): Observable<Notification | undefined> =>\n      source.pipe(\n        flatMap(() => {\n          this.reload.next(undefined);\n          return of({ header: successHeader, message: '', modifier: NotificationModifier.SUCCESS });\n        }),\n        catchError(() => {\n          return of({ header: errorHeader, message: '', modifier: NotificationModifier.WARNING });\n        }),\n        withLatestFrom(this.notificationDismissTime),\n        map(([notification, notificationDismissTime]) => {\n          if (notification) {\n            this.pushNotification(\n              notification.header,\n              notification.message,\n              notification.modifier,\n              notificationDismissTime,\n            );\n          }\n          return undefined;\n        }),\n        publish(),\n      );\n\n  createBudget(createBudgetFormData: CreateBudgetForm) {\n    const budgetName = createBudgetFormData.categoryName;\n    const budgetIcon = this.utility.getCategoryIconClass(createBudgetFormData.categoryName);\n    const buildCreateBudgetObj: BudgetPost = Object.assign(createBudgetFormData, {\n      budgetName,\n      budgetIcon,\n    });\n\n    (<ConnectableObservable<Notification>>(\n      this.service\n        .createBudget(buildCreateBudgetObj)\n        .pipe(\n          this.serviceResponse(\n            this.notificationCreateTemplate as TemplateRef<any>,\n            this.notificationErrorCreateTemplate as TemplateRef<any>,\n          ),\n        )\n    )).connect();\n  }\n\n  updateBudget(data: UpdateBudgetForm) {\n    const buildUpdateBudgetObj: BudgetItem = Object.assign(data.updateBudgetFormData, {\n      budgetName: data.selectedBudgetName,\n    });\n\n    (<ConnectableObservable<Notification>>(\n      this.service\n        .updateBudget(data.selectedBudgetId, buildUpdateBudgetObj)\n        .pipe(\n          this.serviceResponse(\n            this.notificationUpdateTemplate as TemplateRef<any>,\n            this.notificationErrorUpdateTemplate as TemplateRef<any>,\n          ),\n        )\n    )).connect();\n  }\n\n  deleteBudget(budget: BudgetData) {\n    (<ConnectableObservable<Notification>>(\n      this.service\n        .deleteBudget(budget.id)\n        .pipe(\n          this.serviceResponse(\n            this.notificationDeleteTemplate as TemplateRef<any>,\n            this.notificationErrorDeleteTemplate as TemplateRef<any>,\n          ),\n        )\n    )).connect();\n  }\n\n  handleError(error: HttpErrorResponse | Error): void {\n    if (error instanceof HttpErrorResponse) {\n      this.error = error.statusText;\n    } else if (error instanceof Error) {\n      this.error = error.message;\n    }\n  }\n\n  readonly showPercentage: Observable<boolean> = filterInputParameters(\n    this.showPercentageSubject.asObservable(),\n    this.getProperty(PROPERTIES.showPercentage).pipe(map((propertyValue) => propertyValue + '' === 'true')),\n  );\n  readonly budgetSafeZoneLimit: Observable<number> = filterInputParameters(\n    this.budgetSafeZoneLimitSubject.asObservable(),\n    this.getProperty(PROPERTIES.budgetSafeZoneLimit).pipe(map((propertyValue) => parseInt(<string>propertyValue, 10))),\n  );\n  readonly notificationDismissTime: Observable<number> = filterInputParameters(\n    this.notificationDismissTimeSubject.asObservable(),\n    this.getProperty(PROPERTIES.notificationDismissTime).pipe(\n      map((propertyValue) => parseFloat(<string>propertyValue)),\n    ),\n  );\n  readonly maxBudgets: Observable<number> = filterInputParameters(\n    this.maxBudgetsSubject.asObservable(),\n    this.getProperty(PROPERTIES.maxBudgets).pipe(map((propertyValue) => parseFloat(<string>propertyValue))),\n  );\n\n  private getProperty(property: Properties): Observable<Property> {\n    return this.model ? this.model.property(property.name, property.value) : of(property.value);\n  }\n}\n\n@Directive({\n  selector: '[bbBudgetNotificationCustomizable]',\n})\nexport class BudgetNotificationCustomizableDirective extends BbTemplate<BudgetWidgetComponent, undefined> {}\n","<div *ngIf=\"!error; else errorState\">\n  <ng-container *ngIf=\"budgetList | async; else loadingState; let budgetList\">\n    <bb-budget-manager\n      [budgets]=\"budgetList\"\n      [showPercentage]=\"(showPercentage | async) || undefined\"\n      [maxBudgets]=\"(maxBudgets | async) || undefined\"\n      [safeZoneLimit]=\"(budgetSafeZoneLimit | async) || undefined\"\n      (createBudget)=\"createBudget($event)\"\n      (editBudget)=\"updateBudget($event)\"\n      (deleteBudget)=\"deleteBudget($event)\"\n    ></bb-budget-manager>\n\n    <ng-container bbBudgetNotificationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  </ng-container>\n</div>\n\n<ng-template #errorState>\n  <bb-empty-state-ui \n    class=\"card bb-state-container\"\n    title=\"\"\n    [subtitle]=\"error\"\n    iconModifier=\"error\"\n    iconSize=\"xxl\"\n    iconColor=\"gray\"\n    iconClasses=\"text-muted\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui\n    text=\"Loading budgets...\"\n    i18n-text=\"Loading budgets|Text to display while loading budgets@@budgets.state.loadingBudgets\"\n  ></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template bbBudgetNotificationCustomizable>\n  <ng-container notificationCreate></ng-container>\n  <ng-container notificationUpdate></ng-container>\n  <ng-container notificationDelete></ng-container>\n  <ng-container notificationErrorCreate></ng-container>\n  <ng-container notificationErrorUpdate></ng-container>\n  <ng-container notificationErrorDelete></ng-container>\n</ng-template>\n\n<ng-template #notificationCreate>\n  <span i18n=\"Create notification|Message for a notification displayed when budget create request has been processed@@budget.notification.success.create\">Budget created successfully</span>\n</ng-template>\n\n<ng-template #notificationUpdate>\n  <span i18n=\"Update notification|Message for a notification displayed when budget update request has been processed@@budget.notification.success.update\">Budget updated successfully</span>\n</ng-template>\n\n<ng-template #notificationDelete>\n  <span i18n=\"Delete notification|Message for a notification displayed when budget delete request has been processed@@budget.notification.success.delete\">Budget deleted successfully</span>\n</ng-template>\n\n<ng-template #notificationErrorCreate>\n  <span i18n=\"Create failed notification|Message for a notification displayed when budget create request has failed@@budget.notification.error.create\">Budget was not created</span>\n</ng-template>\n\n<ng-template #notificationErrorUpdate>\n  <span i18n=\"Update failed notification|Message for a notification displayed when budget update request has failed@@budget.notification.error.update\">Budget was not updated</span>\n</ng-template>\n\n<ng-template #notificationErrorDelete>\n  <span i18n=\"Delete failed notification|Message for a notification displayed when budget delete request has failed@@budget.notification.error.delete\">Budget was not deleted</span>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CssVariablesService } from '@backbase/ui-ang/css-variables-lib';\nimport { CurrencyInputModule } from '@backbase/ui-ang/currency-input';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { StepperModule } from '@backbase/ui-ang/stepper';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PieChartModule } from '@swimlane/ngx-charts';\nimport { BudgetCardChartComponent } from './budget-card/budget-card-chart.component';\nimport { BudgetCardInfoComponent } from './budget-card/budget-card-info.component';\nimport { BudgetCardComponent } from './budget-card/budget-card.component';\nimport {\n  BudgetCardCustomizableDirective,\n  BudgetConfirmationModalCustomizableDirective,\n  BudgetCreateModalCustomizableDirective,\n  BudgetManagerComponent,\n  BudgetsHeaderCustomizableDirective,\n  BudgetUpdateModalCustomizableDirective,\n} from './budget-manager/budget-manager.component';\nimport { BudgetNotificationCustomizableDirective, BudgetWidgetComponent } from './budget-widget.component';\nimport { BudgetsHeaderComponent } from './budgets-header/budgets-header.component';\nimport { BudgetService } from './services/budget.service';\nimport { CategoriesService } from './services/categories.service';\nimport { UtilityService } from './services/utility.service';\n\nconst modules = [\n  AmountModule,\n  ButtonModule,\n  CurrencyInputModule,\n  DropdownMenuModule,\n  EmptyStateModule,\n  IconModule,\n  InputDatepickerModule,\n  InputRadioGroupModule,\n  LoadingIndicatorModule,\n  ModalModule,\n  NotificationModule,\n  StepperModule,\n];\n\nconst components = [\n  BudgetWidgetComponent,\n  BudgetsHeaderComponent,\n  BudgetCardComponent,\n  BudgetCardChartComponent,\n  BudgetCardInfoComponent,\n  BudgetManagerComponent,\n];\n\nconst directives = [\n  BudgetsHeaderCustomizableDirective,\n  BudgetCardCustomizableDirective,\n  BudgetConfirmationModalCustomizableDirective,\n  BudgetUpdateModalCustomizableDirective,\n  BudgetCreateModalCustomizableDirective,\n  BudgetNotificationCustomizableDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { BudgetWidgetComponent },\n    }),\n    ReactiveFormsModule,\n    NgbDropdownModule,\n    PieChartModule,\n    ...modules,\n  ],\n  declarations: [...components, ...directives],\n  providers: [BudgetService, CategoriesService, UtilityService, CssVariablesService],\n  exports: [...components, ...directives, ...modules],\n})\nexport class BudgetWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}