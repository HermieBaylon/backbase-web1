import { EventEmitter } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { BudgetsGetResponseBody } from '@backbase/data-ang/budgeting';
import { AssetsService, BbTemplate } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import { BudgetData, BudgetList, Currency, Frequency, Period } from '../model/budgets';
import { CategoryItem } from '../model/categories-list';
import { CategoriesService } from '../services/categories.service';
import { UtilityService } from '../services/utility.service';
import * as i0 from "@angular/core";
export interface CreateBudgetForm {
    categoryName: string;
    spendingLimit: Currency;
    frequency: Frequency;
    period: Period;
}
export interface UpdateBudgetForm {
    updateBudgetFormData: {
        spendingLimit: Currency;
    };
    selectedBudgetName: string;
    selectedBudgetId: string;
}
export declare class BudgetManagerComponent {
    private readonly categoriesService;
    private readonly fb;
    readonly utility: UtilityService;
    private readonly assetsService;
    /**
     * Modal header background.
     */
    background: string;
    /**
     * An array of budgets (objects).
     */
    budgets: BudgetList | undefined;
    /**
     * A number to define the maximum number of budgets to be shown.
     */
    maxBudgets: number | undefined;
    /**
     * If set the chart will show a percentage instead of an amount.
     */
    showPercentage?: boolean | undefined;
    /**
     * Sets the percentage of the safe zone limit of the chart.
     */
    safeZoneLimit: number | undefined;
    /**
     * EventEmitter for triggering a editBudget event.
     */
    editBudget: EventEmitter<UpdateBudgetForm>;
    /**
     * EventEmitter for triggering a createBudget event.
     */
    createBudget: EventEmitter<CreateBudgetForm>;
    /**
     * EventEmitter for triggering a deleteBudget event.
     */
    deleteBudget: EventEmitter<BudgetsGetResponseBody>;
    hostRef: this;
    private readonly resolveAsset;
    images: Observable<string>[];
    themev2img: Observable<string>;
    readonly baseCurrency = "USD";
    private readonly budgetFrequency;
    readonly baseBudgetModalOptions: {
        backdrop: string;
        keyboard: boolean;
    };
    readonly confirmationModalOptions: {
        size: string;
        backdrop: string;
        keyboard: boolean;
    };
    readonly categoriesList: Observable<CategoryItem[]>;
    selectedBudget: BudgetData | undefined;
    updateBudgetForm: FormGroup | undefined;
    createBudgetForm: FormGroup | undefined;
    discardEditModalActive: boolean;
    discardCreateModalActive: boolean;
    deleteBudgetModalActive: boolean;
    updateBudgetModalActive: boolean;
    createBudgetModalActive: boolean;
    activeStep: number;
    get startOfMonth(): string;
    get endOfMonth(): string;
    get budgetList(): BudgetList | undefined;
    constructor(categoriesService: CategoriesService, fb: FormBuilder, utility: UtilityService, assetsService: AssetsService);
    private spawnCreateBudgetForm;
    private spawnUpdateBudgetForm;
    closeModal(): void;
    processCloseConfirmation(): void;
    cancelCreateBudget(): void;
    cancelUpdateBudget(): void;
    handleCreate(): void;
    submitCreateBudget(): void;
    handleEdit(data: BudgetData): void;
    submitEditBudget(): void;
    handleDelete(data: BudgetData): void;
    submitDeleteBudget(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BudgetManagerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BudgetManagerComponent, "bb-budget-manager", never, { "background": "background"; "budgets": "budgets"; "maxBudgets": "maxBudgets"; "showPercentage": "showPercentage"; "safeZoneLimit": "safeZoneLimit"; }, { "editBudget": "editBudget"; "createBudget": "createBudget"; "deleteBudget": "deleteBudget"; }, never, never>;
}
export declare class BudgetsHeaderCustomizableDirective extends BbTemplate<BudgetManagerComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<BudgetsHeaderCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BudgetsHeaderCustomizableDirective, "[bbBudgetsHeaderCustomizable]", never, {}, {}, never>;
}
export declare class BudgetCardCustomizableDirective extends BbTemplate<BudgetManagerComponent, BudgetsGetResponseBody | undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<BudgetCardCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BudgetCardCustomizableDirective, "[bbBudgetCardCustomizable]", never, {}, {}, never>;
}
export declare class BudgetConfirmationModalCustomizableDirective extends BbTemplate<BudgetManagerComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<BudgetConfirmationModalCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BudgetConfirmationModalCustomizableDirective, "[bbBudgetConfirmationModalCustomizable]", never, {}, {}, never>;
}
export declare class BudgetUpdateModalCustomizableDirective extends BbTemplate<BudgetManagerComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<BudgetUpdateModalCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BudgetUpdateModalCustomizableDirective, "[bbBudgetUpdateModalCustomizable]", never, {}, {}, never>;
}
export declare class BudgetCreateModalCustomizableDirective extends BbTemplate<BudgetManagerComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<BudgetCreateModalCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BudgetCreateModalCustomizableDirective, "[bbBudgetCreateModalCustomizable]", never, {}, {}, never>;
}
