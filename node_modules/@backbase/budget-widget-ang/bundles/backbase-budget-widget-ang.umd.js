(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@backbase/ui-ang/amount'), require('@swimlane/ngx-charts'), require('@angular/common'), require('@backbase/ui-ang/css-variables-lib'), require('@backbase/ui-ang/dropdown-menu'), require('@backbase/ui-ang/icon'), require('@angular/forms'), require('@backbase/foundation-ang/core'), require('rxjs/operators'), require('@backbase/data-ang/categories-management'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/modal'), require('@backbase/ui-ang/currency-input'), require('@backbase/ui-ang/input-radio-group'), require('@angular/common/http'), require('rxjs'), require('@backbase/data-ang/budgeting'), require('@backbase/ui-ang/notification'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/input-datepicker'), require('@backbase/ui-ang/stepper'), require('@ng-bootstrap/ng-bootstrap')) :
    typeof define === 'function' && define.amd ? define('@backbase/budget-widget-ang', ['exports', '@angular/core', '@backbase/ui-ang/amount', '@swimlane/ngx-charts', '@angular/common', '@backbase/ui-ang/css-variables-lib', '@backbase/ui-ang/dropdown-menu', '@backbase/ui-ang/icon', '@angular/forms', '@backbase/foundation-ang/core', 'rxjs/operators', '@backbase/data-ang/categories-management', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/button', '@backbase/ui-ang/modal', '@backbase/ui-ang/currency-input', '@backbase/ui-ang/input-radio-group', '@angular/common/http', 'rxjs', '@backbase/data-ang/budgeting', '@backbase/ui-ang/notification', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/input-datepicker', '@backbase/ui-ang/stepper', '@ng-bootstrap/ng-bootstrap'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["budget-widget-ang"] = {}), global.ng.core, global.i1, global.i2, global.ng.common, global.i1$1, global.i2$1, global.i3, global.ng.forms, global.i4, global.rxjs.operators, global.i1$2, global.i5, global.i2$2, global.i8, global.i10, global.i11, global.ng.common.http, global.rxjs, global.i1$3, global.i3$1, global.i7, global.inputDatepicker, global.stepper, global.ngBootstrap));
})(this, (function (exports, i0, i1, i2, i12, i1$1, i2$1, i3, i2$3, i4, operators, i1$2, i5, i2$2, i8, i10, i11, http, rxjs, i1$3, i3$1, i7, inputDatepicker, stepper, ngBootstrap) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i12__namespace = /*#__PURE__*/_interopNamespace(i12);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i2__namespace$3 = /*#__PURE__*/_interopNamespace(i2$3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i10__namespace = /*#__PURE__*/_interopNamespace(i10);
    var i11__namespace = /*#__PURE__*/_interopNamespace(i11);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);

    var BudgetCardChartComponent = /** @class */ (function () {
        function BudgetCardChartComponent() {
            /**
             * Spending limit of the budget.
             */
            this.spendingLimit = 0;
            /**
             * Currently spent inside a budget.
             */
            this.spent = 0;
            /**
             * Available funds inside a budget.
             */
            this.available = 0;
            /**
             * Budget's currency code.
             */
            this.currencyCode = '';
            /**
             * If set the chart will show a percentage instead of an amount.
             */
            this.showPercentage = false;
            /**
             * Sets the percentage of the safe zone limit of the chart.
             */
            this.safeZoneLimit = 100;
            /**
             * Sets color palette that should be used for rendering the chart.
             */
            this.chartPalette = {
                base: undefined,
                success: undefined,
                warning: undefined,
                danger: undefined,
            };
            this.chartOptions = {
                colorScheme: {
                    domain: [''],
                },
                animations: false,
                tooltipDisabled: true,
                doughnut: true,
                explodeSlices: false,
                arcWidth: 0.1,
                gradient: true,
                data: [
                    {
                        name: '',
                        value: 1,
                    },
                ],
            };
        }
        Object.defineProperty(BudgetCardChartComponent.prototype, "isOverBudget", {
            get: function () {
                return this.spent > 0 && this.spent > this.spendingLimit;
            },
            enumerable: false,
            configurable: true
        });
        BudgetCardChartComponent.prototype.fillChartData = function () {
            if (this.spentPercentage === undefined) {
                return;
            }
            this.chartOptions.animations = true;
            this.chartOptions.data[0].value = Math.round(this.spent);
            if (this.spentPercentage < 100) {
                this.chartOptions.data.unshift({
                    name: ' ',
                    value: Math.round(this.available),
                });
            }
        };
        BudgetCardChartComponent.prototype.setChartPalette = function () {
            if (this.spentPercentage === undefined) {
                return;
            }
            if (this.spentPercentage >= 100) {
                this.chartOptions.colorScheme.domain = [this.chartPalette.danger || ''];
            }
            else if (this.spentPercentage >= this.safeZoneLimit) {
                this.chartOptions.colorScheme.domain.unshift(this.chartPalette.warning || '');
            }
            else if (this.spentPercentage === 0) {
                this.chartOptions.colorScheme.domain = [this.chartPalette.success || ''];
            }
            else {
                this.chartOptions.colorScheme.domain.unshift(this.chartPalette.success || '');
            }
        };
        BudgetCardChartComponent.prototype.ngOnInit = function () {
            this.chartOptions.colorScheme.domain = [this.chartPalette.base || ''];
            this.fillChartData();
            this.setChartPalette();
        };
        return BudgetCardChartComponent;
    }());
    BudgetCardChartComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCardChartComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BudgetCardChartComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BudgetCardChartComponent, selector: "bb-budget-card-chart-ui", inputs: { spendingLimit: "spendingLimit", spent: "spent", spentPercentage: "spentPercentage", available: "available", currencyCode: "currencyCode", showPercentage: "showPercentage", safeZoneLimit: "safeZoneLimit", chartPalette: "chartPalette" }, ngImport: i0__namespace, template: "<div class=\"clearfix bb-budget-card-chart bb-text-align-center\">\n  <div class=\"absolute-center\">\n    <bb-amount-ui\n      *ngIf=\"!showPercentage\"\n      [amount]=\"available!\"\n      [currency]=\"currencyCode!\"\n      [decimalPlaces]=\"0\"\n      class=\"bb-highlight\"\n      [ngClass]=\"{\n        'text-success': spentPercentage ? spentPercentage < safeZoneLimit : false,\n        'text-warning': spentPercentage ? spentPercentage >= safeZoneLimit && spentPercentage < 100: false,\n        'text-danger': spentPercentage ? spentPercentage >= 100 : false\n      }\"\n    ></bb-amount-ui>\n\n    <div\n      *ngIf=\"showPercentage\"\n      class=\"bb-highlight\"\n    >\n      {{spentPercentage}} %\n    </div>\n\n    <div>\n      <span\n        *ngIf=\"!isOverBudget\"\n        i18n=\"Left|Left chart label@@budget.chart.left.label\"\n      >\n        Left\n      </span>\n      <span\n        *ngIf=\"isOverBudget\"\n        i18n=\"Over|Over chart label@@budget.chart.over.label\"\n      >\n        Over\n      </span>\n    </div>\n  </div>\n\n  <ngx-charts-pie-chart\n    [scheme]=\"chartOptions.colorScheme\"\n    [results]=\"chartOptions.data\"\n    [animations]=\"chartOptions.animations\"\n    [tooltipDisabled]=\"chartOptions.tooltipDisabled\"\n    [doughnut]=\"chartOptions.doughnut\"\n    [explodeSlices]=\"chartOptions.explodeSlices\"\n    [arcWidth]=\"chartOptions.arcWidth\"\n    [gradient]=\"chartOptions.gradient\"\n  ></ngx-charts-pie-chart>\n</div>\n", components: [{ type: i1__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i2__namespace.PieChartComponent, selector: "ngx-charts-pie-chart", inputs: ["labels", "legend", "legendTitle", "legendPosition", "explodeSlices", "doughnut", "arcWidth", "activeEntries", "tooltipDisabled", "trimLabels", "maxLabelLength", "margins", "gradient", "labelFormatting", "tooltipText"], outputs: ["dblclick", "select", "activate", "deactivate"] }], directives: [{ type: i12__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i12__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCardChartComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-budget-card-chart-ui',
                        templateUrl: './budget-card-chart.component.html',
                    }]
            }], propDecorators: { spendingLimit: [{
                    type: i0.Input
                }], spent: [{
                    type: i0.Input
                }], spentPercentage: [{
                    type: i0.Input
                }], available: [{
                    type: i0.Input
                }], currencyCode: [{
                    type: i0.Input
                }], showPercentage: [{
                    type: i0.Input
                }], safeZoneLimit: [{
                    type: i0.Input
                }], chartPalette: [{
                    type: i0.Input
                }] } });

    var BudgetCardInfoComponent = /** @class */ (function () {
        function BudgetCardInfoComponent() {
            /**
             * Sets the percentage of the safe zone limit of the chart.
             */
            this.safeZoneLimit = 0;
        }
        BudgetCardInfoComponent.prototype.ngOnInit = function () {
            if (this.data) {
                if (this.data.available) {
                    this.data.available.amount = Math.round(parseFloat(this.data.available.amount)).toString();
                }
                if (this.data.spent) {
                    this.data.spent.amount = Math.round(parseFloat(this.data.spent.amount)).toString();
                }
                if (this.data.spendingLimit) {
                    this.data.spendingLimit.amount = Math.round(parseFloat(this.data.spendingLimit.amount)).toString();
                }
            }
        };
        return BudgetCardInfoComponent;
    }());
    BudgetCardInfoComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCardInfoComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BudgetCardInfoComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BudgetCardInfoComponent, selector: "bb-budget-card-info-ui", inputs: { data: "data", safeZoneLimit: "safeZoneLimit" }, ngImport: i0__namespace, template: "<div class=\"bb-stack bb-stack--center\">\n  <div *ngIf=\"data?.spent as spent\" class=\"bb-stack__item bb-stack__item--spacing-xl bb-text-align-center\">\n    <div i18n=\"Spent|Spent card info label@@budget.cardInfo.spent.label\">\n      Spent\n    </div>\n    <bb-amount-ui\n      class=\"bb-highlight\"\n      [amount]=\"spent.amount\"\n      [currency]=\"spent.currencyCode\"\n      [decimalPlaces]=\"0\"\n    ></bb-amount-ui>\n  </div>\n\n  <div *ngIf=\"data?.spendingLimit as spendingLimit\" class=\"bb-stack__item bb-text-align-center\">\n    <div i18n=\"Limit|Limit card info label@@budget.cardInfo.budgetLimit.label\">\n      Limit\n    </div>\n    <bb-amount-ui\n      class=\"bb-highlight\"\n      [amount]=\"spendingLimit.amount\"\n      [currency]=\"spendingLimit.currencyCode\"\n      [decimalPlaces]=\"0\"\n    ></bb-amount-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i12__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCardInfoComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-budget-card-info-ui',
                        templateUrl: './budget-card-info.component.html',
                    }]
            }], propDecorators: { data: [{
                    type: i0.Input
                }], safeZoneLimit: [{
                    type: i0.Input
                }] } });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var BaseCurrency = 'USD';
    var BudgetFrequency = 'MONTHLY';
    var CATEGORY_ICON_CLASS_PREFIX = 'bb-transaction-category-icon';
    var CATEGORY_CLASS_PREFIX = 'bb-transaction-category';
    var DEFAULT_ICON_CLASS = 'uncategorized';
    var ModalConfig = {
        backdrop: 'static',
        keyboard: false,
    };
    var PROPERTIES = {
        showPercentage: {
            name: 'showPercentage',
            value: 'showPercentage',
        },
        budgetSafeZoneLimit: {
            name: 'budgetSafeZoneLimit',
            value: 'budgetSafeZoneLimit',
        },
        notificationDismissTime: {
            name: 'notificationDismissTime',
            value: 'notificationDismissTime',
        },
        maxBudgets: {
            name: 'maxBudgets',
            value: 'maxBudgets',
        },
    };

    var UtilityService = /** @class */ (function () {
        function UtilityService(cssVariablesService) {
            this.cssVariablesService = cssVariablesService;
        }
        UtilityService.prototype.getCategoryIconClass = function (transactionCategory) {
            return "" + (transactionCategory.toLowerCase().replace(/\W/g, '-').replace(/-{2,}/g, '-') || DEFAULT_ICON_CLASS);
        };
        UtilityService.prototype.getChartPalette = function () {
            return Promise.all([
                this.cssVariablesService.getCssVariable('--chart-neutral-color'),
                this.cssVariablesService.getCssVariable('--chart-positive-color'),
                this.cssVariablesService.getCssVariable('--warning'),
                this.cssVariablesService.getCssVariable('--chart-alert-color'),
            ]).then(function (_a) {
                var _b = __read(_a, 4), base = _b[0], success = _b[1], warning = _b[2], danger = _b[3];
                return ({
                    base: base,
                    success: success,
                    warning: warning,
                    danger: danger,
                });
            });
        };
        return UtilityService;
    }());
    UtilityService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: UtilityService, deps: [{ token: i1__namespace$1.CssVariablesService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    UtilityService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: UtilityService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: UtilityService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$1.CssVariablesService }]; } });

    var BudgetCardComponent = /** @class */ (function () {
        function BudgetCardComponent(cd, utility) {
            this.cd = cd;
            this.utility = utility;
            /**
             * If set the chart will show a percentage instead of an amount.
             */
            this.showPercentage = false;
            /**
             * Sets the percentage of the safe zone limit of the chart.
             */
            this.safeZoneLimit = 0;
            /**
             * EventEmitter for triggering a deleteBudget event.
             */
            this.deleteBudget = new i0.EventEmitter();
            /**
             * EventEmitter for triggering a editBudget event.
             */
            this.editBudget = new i0.EventEmitter();
        }
        Object.defineProperty(BudgetCardComponent.prototype, "spendingLimit", {
            get: function () {
                return this.budgetData && parseFloat(this.budgetData.spendingLimit.amount);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BudgetCardComponent.prototype, "spent", {
            get: function () {
                return this.budgetData && this.budgetData.spent && parseFloat(this.budgetData.spent.amount);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BudgetCardComponent.prototype, "available", {
            get: function () {
                return this.budgetData && this.budgetData.available && parseFloat(this.budgetData.available.amount);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BudgetCardComponent.prototype, "spentPercentage", {
            get: function () {
                return this.budgetData && this.budgetData.spentPercentage;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BudgetCardComponent.prototype, "currencyCode", {
            get: function () {
                return this.budgetData && this.budgetData.spendingLimit.currencyCode;
            },
            enumerable: false,
            configurable: true
        });
        BudgetCardComponent.prototype.triggerDeleteBudget = function () {
            this.deleteBudget.emit(this.budgetData);
        };
        BudgetCardComponent.prototype.triggerEditBudget = function () {
            this.editBudget.emit(this.budgetData);
        };
        BudgetCardComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.utility.getChartPalette().then(function (palette) {
                _this.colorPalette = palette;
                _this.cd.markForCheck();
            });
        };
        return BudgetCardComponent;
    }());
    BudgetCardComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCardComponent, deps: [{ token: i0__namespace.ChangeDetectorRef }, { token: UtilityService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BudgetCardComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BudgetCardComponent, selector: "bb-budget-card-ui", inputs: { budgetData: "budgetData", showPercentage: "showPercentage", safeZoneLimit: "safeZoneLimit" }, outputs: { deleteBudget: "deleteBudget", editBudget: "editBudget" }, ngImport: i0__namespace, template: "<div class=\"card\">\n  <div class=\"bb-stack bb-stack--density-sm\">\n    <div class=\"bb-stack__item bb-stack__item--push-right\">\n      <bb-dropdown-menu-ui\n        icon=\"ellipsis-h\"\n        btnColor=\"link-dark\"\n        [btnCircle]=\"true\"\n        container=\"body\"\n        position=\"bottom-left\"\n        data-role=\"options-button\"\n        aria-label=\"Options\"\n        i18n-aria-label=\"Options button|Budgets options button tooltip@@budgets.options.label\"\n      >\n        <ng-template bbDropdownMenuItem>\n          <a\n            rel=\"noopener\"\n            role=\"menuitem\"\n            class=\"dropdown-item\"\n            data-role=\"edit-item\"\n            target=\"_blank\"\n            (click)=\"triggerEditBudget()\"\n          >\n            <span i18n=\"Edit budget|Label for edit saving goal action@@budgets.budget.edit\">Edit</span>\n          </a>\n          <a\n            rel=\"noopener\"\n            role=\"menuitem\"\n            class=\"dropdown-item\"\n            data-role=\"delete-item\"\n            target=\"_blank\"\n            (click)=\"triggerDeleteBudget()\"\n          >\n            <span i18n=\"Delete budget|Label for delete saving goal action@@budgets.budget.delete\">Delete</span>\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-text-align-center\">\n    <div class=\"bb-block bb-block--sm\">\n      <bb-icon-ui \n        color=\"secondary\"\n        name=\"{{ 'category-' + utility.getCategoryIconClass(budgetData?.budgetIcon || '') }}\"\n      ></bb-icon-ui>\n    </div>\n    \n    <div class=\"bb-text-semi-bold\">\n      {{budgetData?.budgetName}}\n    </div>\n  </div>\n\n  <div class=\"card-body\">\n    <bb-budget-card-chart-ui \n      *ngIf=\"colorPalette\" \n      [spendingLimit]=\"spendingLimit\" \n      [spent]=\"spent\"\n      [spentPercentage]=\"spentPercentage\" \n      [available]=\"available\" \n      [currencyCode]=\"currencyCode\"\n      [chartPalette]=\"colorPalette\" \n      [safeZoneLimit]=\"safeZoneLimit\" \n      [showPercentage]=\"showPercentage\"\n    ></bb-budget-card-chart-ui>\n\n    <bb-budget-card-info-ui\n      [data]=\"budgetData\"\n      [safeZoneLimit]=\"safeZoneLimit\"\n    ></bb-budget-card-info-ui>\n  </div>\n</div>", components: [{ type: i2__namespace$1.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i3__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: BudgetCardChartComponent, selector: "bb-budget-card-chart-ui", inputs: ["spendingLimit", "spent", "spentPercentage", "available", "currencyCode", "showPercentage", "safeZoneLimit", "chartPalette"] }, { type: BudgetCardInfoComponent, selector: "bb-budget-card-info-ui", inputs: ["data", "safeZoneLimit"] }], directives: [{ type: i2__namespace$1.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i12__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCardComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-budget-card-ui',
                        templateUrl: './budget-card.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ChangeDetectorRef }, { type: UtilityService }]; }, propDecorators: { budgetData: [{
                    type: i0.Input
                }], showPercentage: [{
                    type: i0.Input
                }], safeZoneLimit: [{
                    type: i0.Input
                }], deleteBudget: [{
                    type: i0.Output
                }], editBudget: [{
                    type: i0.Output
                }] } });

    function categoriesManagementMap(item) {
        return Object.assign({}, item);
    }
    function fromCategoriesManagementResponse(response) {
        return (response.body || []).map(categoriesManagementMap);
    }

    var CategoriesService = /** @class */ (function () {
        function CategoriesService(categoriesManagementDataHttpService) {
            this.categoriesManagementDataHttpService = categoriesManagementDataHttpService;
        }
        CategoriesService.prototype.getCategories = function () {
            return this.categoriesManagementDataHttpService
                .getCategories({
                level: 'PARENTS',
            }, 'response')
                .pipe(operators.map(function (response) { return fromCategoriesManagementResponse(response); }));
        };
        return CategoriesService;
    }());
    CategoriesService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CategoriesService, deps: [{ token: i1__namespace$2.CategoriesHttpService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    CategoriesService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CategoriesService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CategoriesService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$2.CategoriesHttpService }]; } });

    var BudgetsHeaderComponent = /** @class */ (function () {
        function BudgetsHeaderComponent() {
            /**
             * EventEmitter for triggering a createBudget event.
             */
            this.createBudget = new i0.EventEmitter();
            this.currentDate = new Date();
        }
        BudgetsHeaderComponent.prototype.triggerCreateBudget = function () {
            this.createBudget.emit();
        };
        return BudgetsHeaderComponent;
    }());
    BudgetsHeaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetsHeaderComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BudgetsHeaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BudgetsHeaderComponent, selector: "bb-budgets-header-ui", outputs: { createBudget: "createBudget" }, ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <div class=\"bb-stack\">\n    <button \n      bbButton \n      color=\"primary\"\n      class=\"bb-stack__item bb-stack__item--push-right\" \n      (click)=\"triggerCreateBudget()\"\n    >\n      <bb-icon-ui \n        name=\"add\" \n        size=\"md\" \n        class=\"bb-stack__item bb-stack__item--spacing-xs\"\n      ></bb-icon-ui>\n      <span i18n=\"New budget|Label for a button that create a new budget@@budgets.new.button.lable\">New budget</span>\n    </button>\n  </div>\n</div>", components: [{ type: i3__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetsHeaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-budgets-header-ui',
                        templateUrl: './budgets.header.component.html',
                    }]
            }], propDecorators: { createBudget: [{
                    type: i0.Output
                }] } });

    var BudgetManagerComponent = /** @class */ (function () {
        function BudgetManagerComponent(categoriesService, fb, utility, assetsService) {
            var _this = this;
            this.categoriesService = categoriesService;
            this.fb = fb;
            this.utility = utility;
            this.assetsService = assetsService;
            /**
             * Modal header background.
             */
            this.background = 'primary';
            /**
             * If set the chart will show a percentage instead of an amount.
             */
            this.showPercentage = false;
            /**
             * EventEmitter for triggering a editBudget event.
             */
            this.editBudget = new i0.EventEmitter();
            /**
             * EventEmitter for triggering a createBudget event.
             */
            this.createBudget = new i0.EventEmitter();
            /**
             * EventEmitter for triggering a deleteBudget event.
             */
            this.deleteBudget = new i0.EventEmitter();
            this.hostRef = this;
            this.resolveAsset = this.assetsService.createAssetsResolver({
                widgetName: 'bb-budget-widget-ang',
                getURIFromAssetID: function (assetId) { return "" + assetId; },
            });
            this.images = ['1', '2'].map(function (i) { return _this.resolveAsset(i + '-step.svg'); });
            this.themev2img = this.resolveAsset('modal-header.png');
            this.baseCurrency = BaseCurrency;
            this.budgetFrequency = BudgetFrequency;
            this.baseBudgetModalOptions = ModalConfig;
            this.confirmationModalOptions = Object.assign(Object.assign({}, this.baseBudgetModalOptions), { size: 'md' });
            this.categoriesList = this.categoriesService.getCategories();
            this.discardEditModalActive = false;
            this.discardCreateModalActive = false;
            this.deleteBudgetModalActive = false;
            this.updateBudgetModalActive = false;
            this.createBudgetModalActive = false;
            this.activeStep = 1;
        }
        Object.defineProperty(BudgetManagerComponent.prototype, "startOfMonth", {
            get: function () {
                var date = new Date();
                var year = date.getFullYear();
                var month = '' + (date.getMonth() + 1);
                month = month.padStart(2, '0');
                return year + "-" + month + "-01";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BudgetManagerComponent.prototype, "endOfMonth", {
            get: function () {
                var date = new Date();
                var year = date.getFullYear();
                var month = date.getMonth() + 1;
                var newDate = new Date(year, month, 0);
                var day = newDate.getDate();
                var formattedMonth = month.toString().padStart(2, '0');
                return year + "-" + formattedMonth + "-" + day;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BudgetManagerComponent.prototype, "budgetList", {
            get: function () {
                if (this.maxBudgets && this.budgets) {
                    return this.budgets.slice(0, this.maxBudgets);
                }
                return this.budgets;
            },
            enumerable: false,
            configurable: true
        });
        BudgetManagerComponent.prototype.spawnCreateBudgetForm = function () {
            return this.fb.group({
                categoryName: ['', i2$3.Validators.required],
                spendingLimit: ['', i2$3.Validators.required],
                frequency: [this.budgetFrequency, i2$3.Validators.required],
                period: [this.startOfMonth, i2$3.Validators.required],
            });
        };
        BudgetManagerComponent.prototype.spawnUpdateBudgetForm = function () {
            if (this.selectedBudget) {
                return this.fb.group({
                    spendingLimit: [this.selectedBudget.spendingLimit, i2$3.Validators.required],
                });
            }
            return undefined;
        };
        BudgetManagerComponent.prototype.closeModal = function () {
            this.discardEditModalActive = false;
            this.discardCreateModalActive = false;
            this.deleteBudgetModalActive = false;
        };
        BudgetManagerComponent.prototype.processCloseConfirmation = function () {
            this.closeModal();
            this.updateBudgetModalActive = false;
            this.createBudgetModalActive = false;
            this.activeStep = 1;
        };
        BudgetManagerComponent.prototype.cancelCreateBudget = function () {
            if (this.createBudgetForm && !this.createBudgetForm.pristine) {
                this.discardCreateModalActive = true;
            }
            else {
                this.createBudgetModalActive = false;
            }
        };
        BudgetManagerComponent.prototype.cancelUpdateBudget = function () {
            if (this.updateBudgetForm && !this.updateBudgetForm.pristine) {
                this.discardEditModalActive = true;
            }
            else {
                this.updateBudgetModalActive = false;
            }
        };
        BudgetManagerComponent.prototype.handleCreate = function () {
            this.createBudgetModalActive = true;
            this.createBudgetForm = this.spawnCreateBudgetForm();
        };
        BudgetManagerComponent.prototype.submitCreateBudget = function () {
            if (this.createBudgetForm) {
                this.createBudgetModalActive = false;
                this.activeStep = 1;
                var createBudgetFormValue = Object.assign(Object.assign({}, this.createBudgetForm.value), { period: {
                        startDate: this.createBudgetForm.value.period,
                        endDate: this.endOfMonth,
                    }, spendingLimit: {
                        currencyCode: this.createBudgetForm.value.spendingLimit.currency,
                        amount: this.createBudgetForm.value.spendingLimit.amount,
                    } });
                this.createBudget.emit(createBudgetFormValue);
                this.createBudgetForm.reset();
            }
        };
        BudgetManagerComponent.prototype.handleEdit = function (data) {
            this.updateBudgetModalActive = true;
            this.selectedBudget = data;
            this.updateBudgetForm = this.spawnUpdateBudgetForm();
        };
        BudgetManagerComponent.prototype.submitEditBudget = function () {
            if (this.selectedBudget && this.updateBudgetForm) {
                this.updateBudgetModalActive = false;
                this.editBudget.emit({
                    updateBudgetFormData: Object.assign(Object.assign({}, this.updateBudgetForm.value), { spendingLimit: {
                            currencyCode: this.updateBudgetForm.value.spendingLimit.currency,
                            amount: this.updateBudgetForm.value.spendingLimit.amount,
                        } }),
                    selectedBudgetName: this.selectedBudget.budgetName,
                    selectedBudgetId: this.selectedBudget.id,
                });
                this.selectedBudget = undefined;
            }
        };
        BudgetManagerComponent.prototype.handleDelete = function (data) {
            this.deleteBudgetModalActive = true;
            this.selectedBudget = data;
        };
        BudgetManagerComponent.prototype.submitDeleteBudget = function () {
            if (this.selectedBudget) {
                this.deleteBudgetModalActive = false;
                this.deleteBudget.emit(this.selectedBudget);
                this.selectedBudget = undefined;
            }
        };
        return BudgetManagerComponent;
    }());
    BudgetManagerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetManagerComponent, deps: [{ token: CategoriesService }, { token: i2__namespace$3.FormBuilder }, { token: UtilityService }, { token: i4__namespace.AssetsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BudgetManagerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BudgetManagerComponent, selector: "bb-budget-manager", inputs: { background: "background", budgets: "budgets", maxBudgets: "maxBudgets", showPercentage: "showPercentage", safeZoneLimit: "safeZoneLimit" }, outputs: { editBudget: "editBudget", createBudget: "createBudget", deleteBudget: "deleteBudget" }, ngImport: i0__namespace, template: "<ng-container bbBudgetsHeaderCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<div\n  class=\"row\"\n  *ngIf=\"budgets?.length; else emptyState\"\n>\n  <ng-container\n    *ngFor=\"let budget of budgetList\"\n    bbBudgetCardCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"budget\"\n  ></ng-container>\n</div>\n\n<ng-container bbBudgetConfirmationModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-container bbBudgetUpdateModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-container bbBudgetCreateModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template #emptyState>\n  <bb-empty-state-ui\n    class=\"card bb-state-container\"\n    title=\"No Budgets Created\"\n    i18n-title=\"No Budgets Created|Title of a message that is shown when there are no budgets@@budgets.state.noResultsFound.title\"\n    subtitle=\"You haven\u2019t created a budget yet\"\n    i18n-subtitle=\"You haven\u2019t created a budget yet|Subtitle of a message that is shown when there are no budgets@@budgets.state.noResultsFound.subtitle\"\n    iconSize=\"xxl\"\n    iconModifier=\"data-usage\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template bbBudgetCardCustomizable let-hostRef let-budget=\"context\">\n  <bb-budget-card-ui\n    class=\"bb-block bb-block--xl col-md-6 col-lg-4\"\n    [budgetData]=\"budget\"\n    [showPercentage]=\"hostRef.showPercentage\"\n    [safeZoneLimit]=\"hostRef.safeZoneLimit\"\n    (editBudget)=\"hostRef.handleEdit($event)\"\n    (deleteBudget)=\"hostRef.handleDelete($event)\"\n  ></bb-budget-card-ui>\n</ng-template>\n\n<ng-template bbBudgetsHeaderCustomizable let-hostRef>\n  <bb-budgets-header-ui \n    (createBudget)=\"hostRef.handleCreate()\"\n  ></bb-budgets-header-ui>\n</ng-template>\n\n<!-- Delete budget -->\n<ng-template bbBudgetConfirmationModalCustomizable let-hostRef>\n  <bb-modal-ui\n    [isOpen]=\"hostRef.deleteBudgetModalActive || hostRef.discardEditModalActive || hostRef.discardCreateModalActive\"\n    [modalOptions]=\"hostRef.confirmationModalOptions\"\n  >\n    <div class=\"modal-header\">\n      <h2\n        id=\"modal-basic-title\"\n        class=\"modal-title\"\n        *ngIf=\"hostRef.deleteBudgetModalActive\"\n        i18n=\"Delete budget?|Delete budget modal title@@budget.delete.modal.title\"\n      >\n        Delete budget?\n      </h2>\n\n      <h2\n        id=\"modal-basic-title\"\n        class=\"modal-title\"\n        *ngIf=\"hostRef.discardEditModalActive\"\n        i18n=\"Discard budget changes?|Discard edit modal title@@budget.discard.edit.modal.title\"\n      >\n        Discard budget changes?\n      </h2>\n\n      <h2\n        id=\"modal-basic-title\"\n        class=\"modal-title\"\n        *ngIf=\"hostRef.discardCreateModalActive\"\n        i18n=\"Discard new budget?|Discard create modal title@@budget.discard.create.modal.title\"\n      >\n        Discard new budget?\n      </h2>\n    </div>\n\n    <div class=\"modal-body\">\n      <span\n        *ngIf=\"hostRef.deleteBudgetModalActive\"\n        i18n=\"This budget will be permanently deleted.|Delete budget info@@budget.delete.modal.info\"\n      >\n        This budget will be permanently deleted.\n      </span>\n\n      <span\n        *ngIf=\"hostRef.discardEditModalActive\"\n        i18n=\"You will loose all the changes made to this budget.|Discard edit budget info@@budget.discard.edit.modal.info\"\n      >\n        You will loose all the changes made to this budget.\n      </span>\n\n      <span\n        *ngIf=\"hostRef.discardCreateModalActive\"\n        i18n=\"All entered information for this budget will be permanetly lost.|Discard create budget info@@budget.discard.create.modal.info\"\n      >\n        All entered information for this budget will be permanetly lost.\n      </span>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <button \n          bbButton\n          color=\"danger\" \n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.submitDeleteBudget()\" \n          *ngIf=\"hostRef.deleteBudgetModalActive\"\n          i18n=\"Delete budget|Delete button label@@budget.delete.modal.delete.button\"\n        >\n          Delete budget\n        </button>\n\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.closeModal()\"\n          *ngIf=\"hostRef.deleteBudgetModalActive\"\n          i18n=\"Not now|Not now button label@@budget.confirmation.modal.not.button\"\n        >\n          Not now\n        </button>\n\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.processCloseConfirmation()\"\n          *ngIf=\"hostRef.discardEditModalActive\"\n          i18n=\"Discard changes|Discard editing button label@@budget.confirmation.modal.discard.edit.button\"\n        >\n          Discard changes\n        </button>\n\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.closeModal()\"\n          *ngIf=\"hostRef.discardEditModalActive\"\n          i18n=\"Keep editing|Keep editing button label@@budget.confirmation.modal.keep.button\"\n        >\n          Keep editing\n        </button>\n\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.processCloseConfirmation()\"\n          *ngIf=\"hostRef.discardCreateModalActive\"\n          i18n=\"Discard budget|Discard creating button label@@budget.confirmation.modal.discard.create.button\"\n        >\n          Discard budget\n        </button>\n\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.closeModal()\"\n          *ngIf=\"hostRef.discardCreateModalActive\"\n          i18n=\"Keep it|Keep it button label@@budget.confirmation.modal.keep.it.button\"\n        >\n          Keep it\n        </button>\n      </div>\n    </div>\n  </bb-modal-ui>\n</ng-template>\n\n<!-- Edit budget -->\n<ng-template bbBudgetUpdateModalCustomizable let-hostRef>\n  <bb-modal-ui\n    *ngIf=\"hostRef.updateBudgetModalActive\"\n    [isOpen]=\"hostRef.updateBudgetModalActive\"\n    [modalOptions]=\"hostRef.baseBudgetModalOptions\"\n  >\n    <img \n      class=\"img-fluid\"\n      [src]=\"hostRef.themev2img | async\" \n      alt=\"Edit budget top image\"\n      i18n-alt=\"@@budget.editImage.alt\"\n    />\n    <form [formGroup]=\"hostRef.updateBudgetForm\" (ngSubmit)=\"hostRef.submitEditBudget()\">\n      <div class=\"modal-body\">\n        <div class=\"bb-block bb-block--xl\">\n          <h2 \n            data-role=\"modal-basic-title\"\n            class=\"modal-title\"\n            i18n=\"Set your budget limit|Edit budget modal title@@budget.edit.title\"\n          >\n            Set your budget limit\n          </h2>\n          <p\n            class=\"bb-text-support\" \n            data-role=\"edit-budget-text\"\n            i18n=\"Category edit description|Description for category edit form@@budget.edit.description\"\n          >\n            Choose a monthly budget for your selected category.\n          </p>\n        </div>\n\n        <div class=\"bb-block bb-block--sm\">\n          <div class=\"bb-stack\">\n            <bb-icon-ui \n              class=\"bb-stack__item\"\n              size=\"sm\"\n              backgroundType=\"square\"\n              name=\"category-{{hostRef.utility.getCategoryIconClass(hostRef.selectedBudget.budgetName || '')}}\"\n            >\n            </bb-icon-ui>\n            <div\n              class=\"bb-stack__item bb-text-semi-bold\"\n            >\n              {{hostRef.selectedBudget.budgetName}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--sm\">\n          {{startOfMonth | date: 'mediumDate'}} - {{endOfMonth | date: 'mediumDate'}}\n        </div>\n        \n        <div class=\"bb-block bb-block--xl\">\n          <span i18n=\"Recurring|Budget type@@budget.edit.modal.type\">\n            Recurring\n          </span>\n          <span i18n=\"Monthly|Budget frequency@@budget.edit.modal.frequency.info\">\n            monthly\n          </span>\n        </div>\n\n        <div class=\"bb-block bb-block--xl\">\n          <p\n            class=\"bb-block bb-block--sm bb-text-semi-bold\" \n            i18n=\"Monthly amount|Monthly amount for category edit form@@budget.edit.modal.amount.title\"\n          >\n            Monthly amount\n          </p>\n          <bb-currency-input-ui\n            formControlName=\"spendingLimit\"\n            [currencies]=\"[hostRef.selectedBudget.spendingLimit.currencyCode]\"\n          ></bb-currency-input-ui>\n        </div>\n      </div>\n\n      <div class=\"modal-footer bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\" \n          color=\"primary\" \n          [disabled]=\"hostRef.updateBudgetForm.pristine\"\n          i18n=\"Confirm|Confirm button label@@budget.modal.confirm.button\"\n        >\n          Confirm\n        </button>\n        <button\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          bbButton\n          color=\"link\" \n          (click)=\"hostRef.cancelUpdateBudget()\"\n          i18n=\"Cancel|Cancel button label@@budget.confirmation.modal.cancel.button\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </bb-modal-ui>\n</ng-template>\n\n<!-- Create a budget -->\n<ng-template bbBudgetCreateModalCustomizable let-hostRef>\n  <bb-modal-ui \n    *ngIf=\"hostRef.createBudgetForm && (hostRef.categoriesList | async) as categoriesList\"\n    [isOpen]=\"hostRef.createBudgetModalActive\" \n    [modalOptions]=\"hostRef.baseBudgetModalOptions\"\n  >\n    <ng-container *ngFor=\"let img of hostRef.images; let i=index\">\n      <div *ngIf=\"hostRef.activeStep === i + 1\">\n        <img \n          class=\"img-fluid\"\n          [src]=\"hostRef.themev2img | async\" \n          alt=\"Step {{i + 1}} \" \n          i18n-alt=\"@@budget.createImage.alt\"\n        />\n      </div>\n    </ng-container>\n\n    <form [formGroup]=\"hostRef.createBudgetForm\" (ngSubmit)=\"hostRef.submitCreateBudget()\">\n      <div class=\"modal-body\">\n        <div *ngIf=\"hostRef.activeStep === 1\">\n          <div class=\"bb-block bb-block--xl\">\n            <h2 \n              data-role=\"step-1-title\" \n              class=\"modal-title\"\n              i18n=\"Category name title|Title for category name input field in create/edit form@@budget.form.title.name\"\n            >\n              Select your budget category\n            </h2>\n            <p \n              class=\"bb-text-support\" \n              data-role=\"step-1-text\"\n              i18n=\"Category name description|Description for category name input field in create/edit form@@budget.form.description.name\"\n            >\n              Begin managing your budget by choosing a category.\n            </p>\n          </div>\n\n          <div class=\"bb-block bb-block--md\">\n            <div class=\"bb-scrollable-category-list\">\n              <bb-input-radio-group-ui \n                [required]=\"true\" \n                name=\"categoriesList\" \n                label=\" \"\n                formControlName=\"categoryName\" \n              >\n                <bb-input-radio-ui\n                  *ngFor=\"let category of categoriesList\"\n                  [id]=\"hostRef.utility.getCategoryIconClass(category.categoryName)\"\n                  [labelTemplate]=\"customLabelTemplateWithData\"\n                  [labelTemplateContext]=\"category\"\n                  [value]=\"category.categoryName\"\n                ></bb-input-radio-ui>\n              </bb-input-radio-group-ui>\n              <ng-template #customLabelTemplateWithData let-category=\"labelTemplateContext\">\n                  <bb-icon-ui\n                  class=\"bb-stack__item\"\n                  size=\"sm\"\n                  backgroundType=\"square\"\n                  name=\"category-{{hostRef.utility.getCategoryIconClass(category.categoryName)}}\"\n                ></bb-icon-ui>\n                <span class=\"bb-text-semi-bold\">{{ category.categoryName }}</span>\n              </ng-template>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"hostRef.activeStep === 2\">\n          <div class=\"bb-block bb-block--xl\">\n            <h2\n              data-role=\"step-2-title\" \n              class=\"modal-title\"\n              i18n=\"Set your budget limit|Second step title of create a budget@@budget.create.title\"\n            >\n              Set your budget limit\n            </h2>\n            <p\n              class=\"bb-text-support\" \n              data-role=\"step-2-text\"\n              i18n=\"Choose a monthly budget for your selected category|Second step description of create a budget@@budget.form.description.edit\"\n            >\n              Choose a monthly budget for your selected category.\n            </p>\n          </div>\n\n          <div class=\"bb-block bb-block--sm\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui \n                class=\"bb-stack__item\"\n                size=\"sm\"\n                backgroundType=\"square\"\n                name=\"category-{{hostRef.utility.getCategoryIconClass(hostRef.createBudgetForm.value.categoryName)}}\" \n              ></bb-icon-ui>\n              <div class=\"bb-text-semi-bold\">\n                {{hostRef.createBudgetForm.value.categoryName}}\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bb-block bb-block--sm\">\n            {{startOfMonth | date: 'mediumDate'}} - {{endOfMonth | date: 'mediumDate'}}\n          </div>\n\n          <div class=\"bb-block bb-block--xl\">\n            <span i18n=\"Recurring|Budget type@@budget.create.modal.type\">\n              Recurring\n            </span>\n            <span i18n=\"Monthly|Budget frequency@@budget.create.modal.frequency.info\">\n              monthly\n            </span>\n          </div>\n\n          <div class=\"bb-block bb-block--xl\">\n            <p\n              class=\"bb-block bb-block--sm bb-text-semi-bold\" \n              i18n=\"Monthly amount|Monthly amount for category edit form@@budget.create.modal.amount.title\"\n            >\n              Monthly amount\n            </p>\n            <bb-currency-input-ui\n              [currencies]=\"[hostRef.baseCurrency]\" \n              formControlName=\"spendingLimit\"\n            ></bb-currency-input-ui>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer bb-button-bar\">\n        <button\n          bbButton\n          type=\"submit\" \n          color=\"primary\" \n          class=\"bb-button-bar__button\"\n          *ngIf=\"hostRef.activeStep === 2\"\n          [disabled]=\"hostRef.createBudgetForm.status !== 'VALID'\"\n          i18n=\"Confirm|Confirm button label@@budget.create.modal.confirm.button\"\n        >\n          Confirm\n        </button>\n        <button\n          bbButton\n          color=\"primary\" \n          class=\"bb-button-bar__button\"\n          *ngIf=\"hostRef.activeStep === 1\" \n          (click)=\"hostRef.activeStep = 2\"\n          [disabled]=\"hostRef.createBudgetForm.pristine\" \n          i18n=\"Continue|Continue button label@@budget.create.modal.continue.button\"\n        >\n          Continue\n        </button>\n        <button\n          bbButton \n          color=\"secondary\" \n          class=\"bb-button-bar__button\"\n          *ngIf=\"hostRef.activeStep === 2\"\n          (click)=\"hostRef.activeStep = 1\" \n          i18n=\"Back|Back button label@@budget.create.modal.previous.button\"\n        >\n          Back\n        </button>\n        <button\n          bbButton\n          color=\"link\" \n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          (click)=\"hostRef.cancelCreateBudget()\"\n          i18n=\"Cancel|Cancel button label@@budget.create.modal.cancel.button\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </bb-modal-ui>\n</ng-template>", components: [{ type: i0__namespace.forwardRef(function () { return i5__namespace.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i0__namespace.forwardRef(function () { return BudgetCardComponent; }), selector: "bb-budget-card-ui", inputs: ["budgetData", "showPercentage", "safeZoneLimit"], outputs: ["deleteBudget", "editBudget"] }, { type: i0__namespace.forwardRef(function () { return BudgetsHeaderComponent; }), selector: "bb-budgets-header-ui", outputs: ["createBudget"] }, { type: i0__namespace.forwardRef(function () { return i8__namespace.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i10__namespace.CurrencyInputComponent; }), selector: "bb-currency-input-ui", inputs: ["decMaxLen", "decMinLen", "placeholder", "resultType", "integer", "required", "readonly", "disabled", "integerLabelSrOnly", "decimalLabelSrOnly", "currencies", "isRightAligned", "integerId", "decimalId", "integerLabel", "decimalLabel", "currencyLabel", "allowNegativeValue", "currencyListAriaLabel", "currencyListWithOnItemAriaLabel", "aria-describedby", "aria-labelledby", "aria-invalid"], outputs: ["blur"] }, { type: i0__namespace.forwardRef(function () { return i11__namespace.InputRadioGroupComponent; }), selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i0__namespace.forwardRef(function () { return i11__namespace.InputRadioComponent; }), selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }], directives: [{ type: i0__namespace.forwardRef(function () { return BudgetsHeaderCustomizableDirective; }), selector: "[bbBudgetsHeaderCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i12__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i12__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0__namespace.forwardRef(function () { return BudgetCardCustomizableDirective; }), selector: "[bbBudgetCardCustomizable]" }, { type: i0__namespace.forwardRef(function () { return BudgetConfirmationModalCustomizableDirective; }), selector: "[bbBudgetConfirmationModalCustomizable]" }, { type: i0__namespace.forwardRef(function () { return BudgetUpdateModalCustomizableDirective; }), selector: "[bbBudgetUpdateModalCustomizable]" }, { type: i0__namespace.forwardRef(function () { return BudgetCreateModalCustomizableDirective; }), selector: "[bbBudgetCreateModalCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace$2.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$3.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0__namespace.forwardRef(function () { return i2__namespace$3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace$3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace$3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }], pipes: { "async": i0__namespace.forwardRef(function () { return i12__namespace.AsyncPipe; }), "date": i0__namespace.forwardRef(function () { return i12__namespace.DatePipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetManagerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-budget-manager',
                        templateUrl: './budget-manager.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: CategoriesService }, { type: i2__namespace$3.FormBuilder }, { type: UtilityService }, { type: i4__namespace.AssetsService }]; }, propDecorators: { background: [{
                    type: i0.Input
                }], budgets: [{
                    type: i0.Input
                }], maxBudgets: [{
                    type: i0.Input
                }], showPercentage: [{
                    type: i0.Input
                }], safeZoneLimit: [{
                    type: i0.Input
                }], editBudget: [{
                    type: i0.Output
                }], createBudget: [{
                    type: i0.Output
                }], deleteBudget: [{
                    type: i0.Output
                }] } });
    var BudgetsHeaderCustomizableDirective = /** @class */ (function (_super) {
        __extends(BudgetsHeaderCustomizableDirective, _super);
        function BudgetsHeaderCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BudgetsHeaderCustomizableDirective;
    }(i4.BbTemplate));
    BudgetsHeaderCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetsHeaderCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BudgetsHeaderCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetsHeaderCustomizableDirective, selector: "[bbBudgetsHeaderCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetsHeaderCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBudgetsHeaderCustomizable]',
                    }]
            }] });
    var BudgetCardCustomizableDirective = /** @class */ (function (_super) {
        __extends(BudgetCardCustomizableDirective, _super);
        function BudgetCardCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BudgetCardCustomizableDirective;
    }(i4.BbTemplate));
    BudgetCardCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCardCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BudgetCardCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetCardCustomizableDirective, selector: "[bbBudgetCardCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCardCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBudgetCardCustomizable]',
                    }]
            }] });
    var BudgetConfirmationModalCustomizableDirective = /** @class */ (function (_super) {
        __extends(BudgetConfirmationModalCustomizableDirective, _super);
        function BudgetConfirmationModalCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BudgetConfirmationModalCustomizableDirective;
    }(i4.BbTemplate));
    BudgetConfirmationModalCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetConfirmationModalCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BudgetConfirmationModalCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetConfirmationModalCustomizableDirective, selector: "[bbBudgetConfirmationModalCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetConfirmationModalCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBudgetConfirmationModalCustomizable]',
                    }]
            }] });
    var BudgetUpdateModalCustomizableDirective = /** @class */ (function (_super) {
        __extends(BudgetUpdateModalCustomizableDirective, _super);
        function BudgetUpdateModalCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BudgetUpdateModalCustomizableDirective;
    }(i4.BbTemplate));
    BudgetUpdateModalCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetUpdateModalCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BudgetUpdateModalCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetUpdateModalCustomizableDirective, selector: "[bbBudgetUpdateModalCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetUpdateModalCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBudgetUpdateModalCustomizable]',
                    }]
            }] });
    var BudgetCreateModalCustomizableDirective = /** @class */ (function (_super) {
        __extends(BudgetCreateModalCustomizableDirective, _super);
        function BudgetCreateModalCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BudgetCreateModalCustomizableDirective;
    }(i4.BbTemplate));
    BudgetCreateModalCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCreateModalCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BudgetCreateModalCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetCreateModalCustomizableDirective, selector: "[bbBudgetCreateModalCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetCreateModalCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBudgetCreateModalCustomizable]',
                    }]
            }] });

    var BudgetService = /** @class */ (function () {
        function BudgetService(budgetingDataHttpService) {
            this.budgetingDataHttpService = budgetingDataHttpService;
        }
        BudgetService.prototype.getBudgets = function () {
            return this.budgetingDataHttpService.getBudgets();
        };
        BudgetService.prototype.createBudget = function (budget) {
            return this.budgetingDataHttpService.postBudgets({ budgetsPostRequestBody: budget }, 'response');
        };
        BudgetService.prototype.updateBudget = function (budgetId, budget) {
            return this.budgetingDataHttpService.putId({ id: budgetId, idPutRequestBody: budget }, 'response');
        };
        BudgetService.prototype.deleteBudget = function (budgetId) {
            return this.budgetingDataHttpService.deleteId({ id: budgetId }, 'response');
        };
        return BudgetService;
    }());
    BudgetService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetService, deps: [{ token: i1__namespace$3.BudgetsHttpService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    BudgetService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$3.BudgetsHttpService }]; } });

    var NotificationModifier;
    (function (NotificationModifier) {
        NotificationModifier["SUCCESS"] = "success";
        NotificationModifier["INFO"] = "info";
        NotificationModifier["WARNING"] = "warning";
        NotificationModifier["ERROR"] = "error";
    })(NotificationModifier || (NotificationModifier = {}));
    var filterInputParameters = function (input, prop) { return rxjs.combineLatest([input, prop]).pipe(operators.map(function (_a) {
        var _b = __read(_a, 2), inputVal = _b[0], propVal = _b[1];
        return (inputVal !== undefined ? inputVal : propVal);
    })); };
    var BudgetWidgetComponent = /** @class */ (function () {
        function BudgetWidgetComponent(utility, service, notificationService, model) {
            var _this = this;
            this.utility = utility;
            this.service = service;
            this.notificationService = notificationService;
            this.model = model;
            this.showPercentageSubject = new rxjs.BehaviorSubject(undefined);
            this.budgetSafeZoneLimitSubject = new rxjs.BehaviorSubject(undefined);
            this.notificationDismissTimeSubject = new rxjs.BehaviorSubject(undefined);
            this.maxBudgetsSubject = new rxjs.BehaviorSubject(undefined);
            this.reload = new rxjs.BehaviorSubject(undefined);
            this.baseBudgetModalOptions = ModalConfig;
            this.confirmationModalOptions = Object.assign(Object.assign({}, this.baseBudgetModalOptions), { size: 'sm' });
            this.budgetList = this.reload.asObservable().pipe(operators.switchMap(function () { return _this.service.getBudgets(); }), operators.catchError(function (error) {
                _this.handleError(error);
                return rxjs.of(undefined);
            }));
            this.hostRef = this;
            this.serviceResponse = function (successHeader, errorHeader) { return function (source) { return source.pipe(operators.flatMap(function () {
                _this.reload.next(undefined);
                return rxjs.of({ header: successHeader, message: '', modifier: NotificationModifier.SUCCESS });
            }), operators.catchError(function () {
                return rxjs.of({ header: errorHeader, message: '', modifier: NotificationModifier.WARNING });
            }), operators.withLatestFrom(_this.notificationDismissTime), operators.map(function (_a) {
                var _b = __read(_a, 2), notification = _b[0], notificationDismissTime = _b[1];
                if (notification) {
                    _this.pushNotification(notification.header, notification.message, notification.modifier, notificationDismissTime);
                }
                return undefined;
            }), operators.publish()); }; };
            this.showPercentage = filterInputParameters(this.showPercentageSubject.asObservable(), this.getProperty(PROPERTIES.showPercentage).pipe(operators.map(function (propertyValue) { return propertyValue + '' === 'true'; })));
            this.budgetSafeZoneLimit = filterInputParameters(this.budgetSafeZoneLimitSubject.asObservable(), this.getProperty(PROPERTIES.budgetSafeZoneLimit).pipe(operators.map(function (propertyValue) { return parseInt(propertyValue, 10); })));
            this.notificationDismissTime = filterInputParameters(this.notificationDismissTimeSubject.asObservable(), this.getProperty(PROPERTIES.notificationDismissTime).pipe(operators.map(function (propertyValue) { return parseFloat(propertyValue); })));
            this.maxBudgets = filterInputParameters(this.maxBudgetsSubject.asObservable(), this.getProperty(PROPERTIES.maxBudgets).pipe(operators.map(function (propertyValue) { return parseFloat(propertyValue); })));
        }
        Object.defineProperty(BudgetWidgetComponent.prototype, "showPercentageValue", {
            set: function (value) {
                this.showPercentageSubject.next(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BudgetWidgetComponent.prototype, "budgetSafeZoneLimitValue", {
            set: function (value) {
                this.budgetSafeZoneLimitSubject.next(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BudgetWidgetComponent.prototype, "notificationDismissTimeValue", {
            set: function (value) {
                this.notificationDismissTimeSubject.next(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BudgetWidgetComponent.prototype, "maxBudgetsValue", {
            set: function (value) {
                this.maxBudgetsSubject.next(value);
            },
            enumerable: false,
            configurable: true
        });
        BudgetWidgetComponent.prototype.pushNotification = function (header, message, modifier, notificationDismissTime) {
            if (notificationDismissTime) {
                this.notificationService.showNotification({
                    header: header,
                    message: message,
                    modifier: modifier,
                    dismissible: true,
                    ttl: notificationDismissTime * 1000,
                });
            }
        };
        BudgetWidgetComponent.prototype.createBudget = function (createBudgetFormData) {
            var budgetName = createBudgetFormData.categoryName;
            var budgetIcon = this.utility.getCategoryIconClass(createBudgetFormData.categoryName);
            var buildCreateBudgetObj = Object.assign(createBudgetFormData, {
                budgetName: budgetName,
                budgetIcon: budgetIcon,
            });
            (this.service
                .createBudget(buildCreateBudgetObj)
                .pipe(this.serviceResponse(this.notificationCreateTemplate, this.notificationErrorCreateTemplate))).connect();
        };
        BudgetWidgetComponent.prototype.updateBudget = function (data) {
            var buildUpdateBudgetObj = Object.assign(data.updateBudgetFormData, {
                budgetName: data.selectedBudgetName,
            });
            (this.service
                .updateBudget(data.selectedBudgetId, buildUpdateBudgetObj)
                .pipe(this.serviceResponse(this.notificationUpdateTemplate, this.notificationErrorUpdateTemplate))).connect();
        };
        BudgetWidgetComponent.prototype.deleteBudget = function (budget) {
            (this.service
                .deleteBudget(budget.id)
                .pipe(this.serviceResponse(this.notificationDeleteTemplate, this.notificationErrorDeleteTemplate))).connect();
        };
        BudgetWidgetComponent.prototype.handleError = function (error) {
            if (error instanceof http.HttpErrorResponse) {
                this.error = error.statusText;
            }
            else if (error instanceof Error) {
                this.error = error.message;
            }
        };
        BudgetWidgetComponent.prototype.getProperty = function (property) {
            return this.model ? this.model.property(property.name, property.value) : rxjs.of(property.value);
        };
        return BudgetWidgetComponent;
    }());
    BudgetWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetWidgetComponent, deps: [{ token: UtilityService }, { token: BudgetService }, { token: i3__namespace$1.NotificationService }, { token: i4__namespace.ItemModel, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BudgetWidgetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BudgetWidgetComponent, selector: "bb-budget-widget", inputs: { showPercentageValue: ["showPercentage", "showPercentageValue"], budgetSafeZoneLimitValue: ["budgetSafeZoneLimit", "budgetSafeZoneLimitValue"], notificationDismissTimeValue: ["notificationDismissTime", "notificationDismissTimeValue"], maxBudgetsValue: ["maxBudgets", "maxBudgetsValue"] }, viewQueries: [{ propertyName: "notificationCreateTemplate", first: true, predicate: ["notificationCreate"], descendants: true }, { propertyName: "notificationUpdateTemplate", first: true, predicate: ["notificationUpdate"], descendants: true }, { propertyName: "notificationDeleteTemplate", first: true, predicate: ["notificationDelete"], descendants: true }, { propertyName: "notificationErrorCreateTemplate", first: true, predicate: ["notificationErrorCreate"], descendants: true }, { propertyName: "notificationErrorUpdateTemplate", first: true, predicate: ["notificationErrorUpdate"], descendants: true }, { propertyName: "notificationErrorDeleteTemplate", first: true, predicate: ["notificationErrorDelete"], descendants: true }], ngImport: i0__namespace, template: "<div *ngIf=\"!error; else errorState\">\n  <ng-container *ngIf=\"budgetList | async; else loadingState; let budgetList\">\n    <bb-budget-manager\n      [budgets]=\"budgetList\"\n      [showPercentage]=\"(showPercentage | async) || undefined\"\n      [maxBudgets]=\"(maxBudgets | async) || undefined\"\n      [safeZoneLimit]=\"(budgetSafeZoneLimit | async) || undefined\"\n      (createBudget)=\"createBudget($event)\"\n      (editBudget)=\"updateBudget($event)\"\n      (deleteBudget)=\"deleteBudget($event)\"\n    ></bb-budget-manager>\n\n    <ng-container bbBudgetNotificationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  </ng-container>\n</div>\n\n<ng-template #errorState>\n  <bb-empty-state-ui \n    class=\"card bb-state-container\"\n    title=\"\"\n    [subtitle]=\"error\"\n    iconModifier=\"error\"\n    iconSize=\"xxl\"\n    iconColor=\"gray\"\n    iconClasses=\"text-muted\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui\n    text=\"Loading budgets...\"\n    i18n-text=\"Loading budgets|Text to display while loading budgets@@budgets.state.loadingBudgets\"\n  ></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template bbBudgetNotificationCustomizable>\n  <ng-container notificationCreate></ng-container>\n  <ng-container notificationUpdate></ng-container>\n  <ng-container notificationDelete></ng-container>\n  <ng-container notificationErrorCreate></ng-container>\n  <ng-container notificationErrorUpdate></ng-container>\n  <ng-container notificationErrorDelete></ng-container>\n</ng-template>\n\n<ng-template #notificationCreate>\n  <span i18n=\"Create notification|Message for a notification displayed when budget create request has been processed@@budget.notification.success.create\">Budget created successfully</span>\n</ng-template>\n\n<ng-template #notificationUpdate>\n  <span i18n=\"Update notification|Message for a notification displayed when budget update request has been processed@@budget.notification.success.update\">Budget updated successfully</span>\n</ng-template>\n\n<ng-template #notificationDelete>\n  <span i18n=\"Delete notification|Message for a notification displayed when budget delete request has been processed@@budget.notification.success.delete\">Budget deleted successfully</span>\n</ng-template>\n\n<ng-template #notificationErrorCreate>\n  <span i18n=\"Create failed notification|Message for a notification displayed when budget create request has failed@@budget.notification.error.create\">Budget was not created</span>\n</ng-template>\n\n<ng-template #notificationErrorUpdate>\n  <span i18n=\"Update failed notification|Message for a notification displayed when budget update request has failed@@budget.notification.error.update\">Budget was not updated</span>\n</ng-template>\n\n<ng-template #notificationErrorDelete>\n  <span i18n=\"Delete failed notification|Message for a notification displayed when budget delete request has failed@@budget.notification.error.delete\">Budget was not deleted</span>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return BudgetManagerComponent; }), selector: "bb-budget-manager", inputs: ["background", "budgets", "maxBudgets", "showPercentage", "safeZoneLimit"], outputs: ["editBudget", "createBudget", "deleteBudget"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i0__namespace.forwardRef(function () { return i7__namespace.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i0__namespace.forwardRef(function () { return i12__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return BudgetNotificationCustomizableDirective; }), selector: "[bbBudgetNotificationCustomizable]" }], pipes: { "async": i0__namespace.forwardRef(function () { return i12__namespace.AsyncPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetWidgetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-budget-widget',
                        templateUrl: './budget-widget.component.html',
                    }]
            }], ctorParameters: function () {
            return [{ type: UtilityService }, { type: BudgetService }, { type: i3__namespace$1.NotificationService }, { type: i4__namespace.ItemModel, decorators: [{
                            type: i0.Optional
                        }] }];
        }, propDecorators: { showPercentageValue: [{
                    type: i0.Input,
                    args: ['showPercentage']
                }], budgetSafeZoneLimitValue: [{
                    type: i0.Input,
                    args: ['budgetSafeZoneLimit']
                }], notificationDismissTimeValue: [{
                    type: i0.Input,
                    args: ['notificationDismissTime']
                }], maxBudgetsValue: [{
                    type: i0.Input,
                    args: ['maxBudgets']
                }], notificationCreateTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationCreate']
                }], notificationUpdateTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationUpdate']
                }], notificationDeleteTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationDelete']
                }], notificationErrorCreateTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationErrorCreate']
                }], notificationErrorUpdateTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationErrorUpdate']
                }], notificationErrorDeleteTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationErrorDelete']
                }] } });
    var BudgetNotificationCustomizableDirective = /** @class */ (function (_super) {
        __extends(BudgetNotificationCustomizableDirective, _super);
        function BudgetNotificationCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BudgetNotificationCustomizableDirective;
    }(i4.BbTemplate));
    BudgetNotificationCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetNotificationCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BudgetNotificationCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetNotificationCustomizableDirective, selector: "[bbBudgetNotificationCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetNotificationCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBudgetNotificationCustomizable]',
                    }]
            }] });

    var modules = [
        i1.AmountModule,
        i2$2.ButtonModule,
        i10.CurrencyInputModule,
        i2$1.DropdownMenuModule,
        i5.EmptyStateModule,
        i3.IconModule,
        inputDatepicker.InputDatepickerModule,
        i11.InputRadioGroupModule,
        i7.LoadingIndicatorModule,
        i8.ModalModule,
        i3$1.NotificationModule,
        stepper.StepperModule,
    ];
    var components = [
        BudgetWidgetComponent,
        BudgetsHeaderComponent,
        BudgetCardComponent,
        BudgetCardChartComponent,
        BudgetCardInfoComponent,
        BudgetManagerComponent,
    ];
    var directives = [
        BudgetsHeaderCustomizableDirective,
        BudgetCardCustomizableDirective,
        BudgetConfirmationModalCustomizableDirective,
        BudgetUpdateModalCustomizableDirective,
        BudgetCreateModalCustomizableDirective,
        BudgetNotificationCustomizableDirective,
    ];
    var BudgetWidgetModule = /** @class */ (function () {
        function BudgetWidgetModule() {
        }
        return BudgetWidgetModule;
    }());
    BudgetWidgetModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetWidgetModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    BudgetWidgetModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetWidgetModule, declarations: [BudgetWidgetComponent,
            BudgetsHeaderComponent,
            BudgetCardComponent,
            BudgetCardChartComponent,
            BudgetCardInfoComponent,
            BudgetManagerComponent, BudgetsHeaderCustomizableDirective,
            BudgetCardCustomizableDirective,
            BudgetConfirmationModalCustomizableDirective,
            BudgetUpdateModalCustomizableDirective,
            BudgetCreateModalCustomizableDirective,
            BudgetNotificationCustomizableDirective], imports: [i12.CommonModule, i4__namespace.BackbaseCoreModule, i2$3.ReactiveFormsModule,
            ngBootstrap.NgbDropdownModule,
            i2.PieChartModule, i1.AmountModule,
            i2$2.ButtonModule,
            i10.CurrencyInputModule,
            i2$1.DropdownMenuModule,
            i5.EmptyStateModule,
            i3.IconModule,
            inputDatepicker.InputDatepickerModule,
            i11.InputRadioGroupModule,
            i7.LoadingIndicatorModule,
            i8.ModalModule,
            i3$1.NotificationModule,
            stepper.StepperModule], exports: [BudgetWidgetComponent,
            BudgetsHeaderComponent,
            BudgetCardComponent,
            BudgetCardChartComponent,
            BudgetCardInfoComponent,
            BudgetManagerComponent, BudgetsHeaderCustomizableDirective,
            BudgetCardCustomizableDirective,
            BudgetConfirmationModalCustomizableDirective,
            BudgetUpdateModalCustomizableDirective,
            BudgetCreateModalCustomizableDirective,
            BudgetNotificationCustomizableDirective, i1.AmountModule,
            i2$2.ButtonModule,
            i10.CurrencyInputModule,
            i2$1.DropdownMenuModule,
            i5.EmptyStateModule,
            i3.IconModule,
            inputDatepicker.InputDatepickerModule,
            i11.InputRadioGroupModule,
            i7.LoadingIndicatorModule,
            i8.ModalModule,
            i3$1.NotificationModule,
            stepper.StepperModule] });
    BudgetWidgetModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetWidgetModule, providers: [BudgetService, CategoriesService, UtilityService, i1$1.CssVariablesService], imports: [__spreadArray([
                i12.CommonModule,
                i4.BackbaseCoreModule.withConfig({
                    classMap: { BudgetWidgetComponent: BudgetWidgetComponent },
                }),
                i2$3.ReactiveFormsModule,
                ngBootstrap.NgbDropdownModule,
                i2.PieChartModule
            ], __read(modules)), i1.AmountModule,
            i2$2.ButtonModule,
            i10.CurrencyInputModule,
            i2$1.DropdownMenuModule,
            i5.EmptyStateModule,
            i3.IconModule,
            inputDatepicker.InputDatepickerModule,
            i11.InputRadioGroupModule,
            i7.LoadingIndicatorModule,
            i8.ModalModule,
            i3$1.NotificationModule,
            stepper.StepperModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BudgetWidgetModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([
                            i12.CommonModule,
                            i4.BackbaseCoreModule.withConfig({
                                classMap: { BudgetWidgetComponent: BudgetWidgetComponent },
                            }),
                            i2$3.ReactiveFormsModule,
                            ngBootstrap.NgbDropdownModule,
                            i2.PieChartModule
                        ], __read(modules)),
                        declarations: __spreadArray(__spreadArray([], __read(components)), __read(directives)),
                        providers: [BudgetService, CategoriesService, UtilityService, i1$1.CssVariablesService],
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components)), __read(directives)), __read(modules)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BudgetCardChartComponent = BudgetCardChartComponent;
    exports.BudgetCardComponent = BudgetCardComponent;
    exports.BudgetCardCustomizableDirective = BudgetCardCustomizableDirective;
    exports.BudgetCardInfoComponent = BudgetCardInfoComponent;
    exports.BudgetConfirmationModalCustomizableDirective = BudgetConfirmationModalCustomizableDirective;
    exports.BudgetCreateModalCustomizableDirective = BudgetCreateModalCustomizableDirective;
    exports.BudgetManagerComponent = BudgetManagerComponent;
    exports.BudgetNotificationCustomizableDirective = BudgetNotificationCustomizableDirective;
    exports.BudgetUpdateModalCustomizableDirective = BudgetUpdateModalCustomizableDirective;
    exports.BudgetWidgetComponent = BudgetWidgetComponent;
    exports.BudgetWidgetModule = BudgetWidgetModule;
    exports.BudgetsHeaderComponent = BudgetsHeaderComponent;
    exports.BudgetsHeaderCustomizableDirective = BudgetsHeaderCustomizableDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-budget-widget-ang.umd.js.map
