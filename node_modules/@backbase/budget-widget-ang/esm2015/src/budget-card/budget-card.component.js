import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../services/utility.service";
import * as i2 from "@backbase/ui-ang/dropdown-menu";
import * as i3 from "@backbase/ui-ang/icon";
import * as i4 from "./budget-card-chart.component";
import * as i5 from "./budget-card-info.component";
import * as i6 from "@angular/common";
export class BudgetCardComponent {
    constructor(cd, utility) {
        this.cd = cd;
        this.utility = utility;
        /**
         * If set the chart will show a percentage instead of an amount.
         */
        this.showPercentage = false;
        /**
         * Sets the percentage of the safe zone limit of the chart.
         */
        this.safeZoneLimit = 0;
        /**
         * EventEmitter for triggering a deleteBudget event.
         */
        this.deleteBudget = new EventEmitter();
        /**
         * EventEmitter for triggering a editBudget event.
         */
        this.editBudget = new EventEmitter();
    }
    get spendingLimit() {
        return this.budgetData && parseFloat(this.budgetData.spendingLimit.amount);
    }
    get spent() {
        return this.budgetData && this.budgetData.spent && parseFloat(this.budgetData.spent.amount);
    }
    get available() {
        return this.budgetData && this.budgetData.available && parseFloat(this.budgetData.available.amount);
    }
    get spentPercentage() {
        return this.budgetData && this.budgetData.spentPercentage;
    }
    get currencyCode() {
        return this.budgetData && this.budgetData.spendingLimit.currencyCode;
    }
    triggerDeleteBudget() {
        this.deleteBudget.emit(this.budgetData);
    }
    triggerEditBudget() {
        this.editBudget.emit(this.budgetData);
    }
    ngOnInit() {
        this.utility.getChartPalette().then((palette) => {
            this.colorPalette = palette;
            this.cd.markForCheck();
        });
    }
}
BudgetCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetCardComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.UtilityService }], target: i0.ɵɵFactoryTarget.Component });
BudgetCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BudgetCardComponent, selector: "bb-budget-card-ui", inputs: { budgetData: "budgetData", showPercentage: "showPercentage", safeZoneLimit: "safeZoneLimit" }, outputs: { deleteBudget: "deleteBudget", editBudget: "editBudget" }, ngImport: i0, template: "<div class=\"card\">\n  <div class=\"bb-stack bb-stack--density-sm\">\n    <div class=\"bb-stack__item bb-stack__item--push-right\">\n      <bb-dropdown-menu-ui\n        icon=\"ellipsis-h\"\n        btnColor=\"link-dark\"\n        [btnCircle]=\"true\"\n        container=\"body\"\n        position=\"bottom-left\"\n        data-role=\"options-button\"\n        aria-label=\"Options\"\n        i18n-aria-label=\"Options button|Budgets options button tooltip@@budgets.options.label\"\n      >\n        <ng-template bbDropdownMenuItem>\n          <a\n            rel=\"noopener\"\n            role=\"menuitem\"\n            class=\"dropdown-item\"\n            data-role=\"edit-item\"\n            target=\"_blank\"\n            (click)=\"triggerEditBudget()\"\n          >\n            <span i18n=\"Edit budget|Label for edit saving goal action@@budgets.budget.edit\">Edit</span>\n          </a>\n          <a\n            rel=\"noopener\"\n            role=\"menuitem\"\n            class=\"dropdown-item\"\n            data-role=\"delete-item\"\n            target=\"_blank\"\n            (click)=\"triggerDeleteBudget()\"\n          >\n            <span i18n=\"Delete budget|Label for delete saving goal action@@budgets.budget.delete\">Delete</span>\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-text-align-center\">\n    <div class=\"bb-block bb-block--sm\">\n      <bb-icon-ui \n        color=\"secondary\"\n        name=\"{{ 'category-' + utility.getCategoryIconClass(budgetData?.budgetIcon || '') }}\"\n      ></bb-icon-ui>\n    </div>\n    \n    <div class=\"bb-text-semi-bold\">\n      {{budgetData?.budgetName}}\n    </div>\n  </div>\n\n  <div class=\"card-body\">\n    <bb-budget-card-chart-ui \n      *ngIf=\"colorPalette\" \n      [spendingLimit]=\"spendingLimit\" \n      [spent]=\"spent\"\n      [spentPercentage]=\"spentPercentage\" \n      [available]=\"available\" \n      [currencyCode]=\"currencyCode\"\n      [chartPalette]=\"colorPalette\" \n      [safeZoneLimit]=\"safeZoneLimit\" \n      [showPercentage]=\"showPercentage\"\n    ></bb-budget-card-chart-ui>\n\n    <bb-budget-card-info-ui\n      [data]=\"budgetData\"\n      [safeZoneLimit]=\"safeZoneLimit\"\n    ></bb-budget-card-info-ui>\n  </div>\n</div>", components: [{ type: i2.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i4.BudgetCardChartComponent, selector: "bb-budget-card-chart-ui", inputs: ["spendingLimit", "spent", "spentPercentage", "available", "currencyCode", "showPercentage", "safeZoneLimit", "chartPalette"] }, { type: i5.BudgetCardInfoComponent, selector: "bb-budget-card-info-ui", inputs: ["data", "safeZoneLimit"] }], directives: [{ type: i2.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetCardComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-budget-card-ui',
                    templateUrl: './budget-card.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.UtilityService }]; }, propDecorators: { budgetData: [{
                type: Input
            }], showPercentage: [{
                type: Input
            }], safeZoneLimit: [{
                type: Input
            }], deleteBudget: [{
                type: Output
            }], editBudget: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,