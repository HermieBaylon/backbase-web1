import { Injectable } from '@angular/core';
import { DEFAULT_ICON_CLASS } from '../constants';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/css-variables-lib";
export class UtilityService {
    constructor(cssVariablesService) {
        this.cssVariablesService = cssVariablesService;
    }
    getCategoryIconClass(transactionCategory) {
        return `${transactionCategory.toLowerCase().replace(/\W/g, '-').replace(/-{2,}/g, '-') || DEFAULT_ICON_CLASS}`;
    }
    getChartPalette() {
        return Promise.all([
            this.cssVariablesService.getCssVariable('--chart-neutral-color'),
            this.cssVariablesService.getCssVariable('--chart-positive-color'),
            this.cssVariablesService.getCssVariable('--warning'),
            this.cssVariablesService.getCssVariable('--chart-alert-color'),
        ]).then(([base, success, warning, danger]) => ({
            base,
            success,
            warning,
            danger,
        }));
    }
}
UtilityService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UtilityService, deps: [{ token: i1.CssVariablesService }], target: i0.ɵɵFactoryTarget.Injectable });
UtilityService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UtilityService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UtilityService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.CssVariablesService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbGl0eS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9idWRnZXQtd2lkZ2V0L3NyYy9zZXJ2aWNlcy91dGlsaXR5LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUczQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxjQUFjLENBQUM7OztBQUdsRCxNQUFNLE9BQU8sY0FBYztJQUN6QixZQUE2QixtQkFBd0M7UUFBeEMsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtJQUFHLENBQUM7SUFFekUsb0JBQW9CLENBQUMsbUJBQTJCO1FBQzlDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLElBQUksa0JBQWtCLEVBQUUsQ0FBQztJQUNqSCxDQUFDO0lBRUQsZUFBZTtRQUNiLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQztZQUNqQixJQUFJLENBQUMsbUJBQW1CLENBQUMsY0FBYyxDQUFDLHVCQUF1QixDQUFDO1lBQ2hFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxjQUFjLENBQUMsd0JBQXdCLENBQUM7WUFDakUsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUM7WUFDcEQsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQztTQUMvRCxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUM3QyxJQUFJO1lBQ0osT0FBTztZQUNQLE9BQU87WUFDUCxNQUFNO1NBQ1AsQ0FBQyxDQUFDLENBQUM7SUFDTixDQUFDOzs0R0FuQlUsY0FBYztnSEFBZCxjQUFjOzRGQUFkLGNBQWM7a0JBRDFCLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDc3NWYXJpYWJsZXNTZXJ2aWNlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9jc3MtdmFyaWFibGVzLWxpYic7XG5pbXBvcnQgeyBDaGFydFBhbGV0dGUgfSBmcm9tICcuLi9idWRnZXQtY2FyZC9idWRnZXQtY2FyZC1jaGFydC5jb21wb25lbnQnO1xuaW1wb3J0IHsgREVGQVVMVF9JQ09OX0NMQVNTIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFV0aWxpdHlTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBjc3NWYXJpYWJsZXNTZXJ2aWNlOiBDc3NWYXJpYWJsZXNTZXJ2aWNlKSB7fVxuXG4gIGdldENhdGVnb3J5SWNvbkNsYXNzKHRyYW5zYWN0aW9uQ2F0ZWdvcnk6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGAke3RyYW5zYWN0aW9uQ2F0ZWdvcnkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXFcvZywgJy0nKS5yZXBsYWNlKC8tezIsfS9nLCAnLScpIHx8IERFRkFVTFRfSUNPTl9DTEFTU31gO1xuICB9XG5cbiAgZ2V0Q2hhcnRQYWxldHRlKCk6IFByb21pc2U8Q2hhcnRQYWxldHRlPiB7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFtcbiAgICAgIHRoaXMuY3NzVmFyaWFibGVzU2VydmljZS5nZXRDc3NWYXJpYWJsZSgnLS1jaGFydC1uZXV0cmFsLWNvbG9yJyksXG4gICAgICB0aGlzLmNzc1ZhcmlhYmxlc1NlcnZpY2UuZ2V0Q3NzVmFyaWFibGUoJy0tY2hhcnQtcG9zaXRpdmUtY29sb3InKSxcbiAgICAgIHRoaXMuY3NzVmFyaWFibGVzU2VydmljZS5nZXRDc3NWYXJpYWJsZSgnLS13YXJuaW5nJyksXG4gICAgICB0aGlzLmNzc1ZhcmlhYmxlc1NlcnZpY2UuZ2V0Q3NzVmFyaWFibGUoJy0tY2hhcnQtYWxlcnQtY29sb3InKSxcbiAgICBdKS50aGVuKChbYmFzZSwgc3VjY2Vzcywgd2FybmluZywgZGFuZ2VyXSkgPT4gKHtcbiAgICAgIGJhc2UsXG4gICAgICBzdWNjZXNzLFxuICAgICAgd2FybmluZyxcbiAgICAgIGRhbmdlcixcbiAgICB9KSk7XG4gIH1cbn1cbiJdfQ==