import { Injectable } from '@angular/core';
import { map } from 'rxjs/operators';
import { fromCategoriesManagementResponse } from '../model/categories-list';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/categories-management";
export class CategoriesService {
    constructor(categoriesManagementDataHttpService) {
        this.categoriesManagementDataHttpService = categoriesManagementDataHttpService;
    }
    getCategories() {
        return this.categoriesManagementDataHttpService
            .getCategories({
            level: 'PARENTS',
        }, 'response')
            .pipe(map((response) => fromCategoriesManagementResponse(response)));
    }
}
CategoriesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CategoriesService, deps: [{ token: i1.CategoriesHttpService }], target: i0.ɵɵFactoryTarget.Injectable });
CategoriesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CategoriesService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CategoriesService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.CategoriesHttpService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2F0ZWdvcmllcy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9idWRnZXQtd2lkZ2V0L3NyYy9zZXJ2aWNlcy9jYXRlZ29yaWVzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUczQyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUFnQixnQ0FBZ0MsRUFBRSxNQUFNLDBCQUEwQixDQUFDOzs7QUFHMUYsTUFBTSxPQUFPLGlCQUFpQjtJQUM1QixZQUE2QixtQ0FBMEQ7UUFBMUQsd0NBQW1DLEdBQW5DLG1DQUFtQyxDQUF1QjtJQUFHLENBQUM7SUFFM0YsYUFBYTtRQUNYLE9BQU8sSUFBSSxDQUFDLG1DQUFtQzthQUM1QyxhQUFhLENBQ1o7WUFDRSxLQUFLLEVBQUUsU0FBUztTQUNqQixFQUNELFVBQVUsQ0FDWDthQUNBLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLGdDQUFnQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN6RSxDQUFDOzsrR0FaVSxpQkFBaUI7bUhBQWpCLGlCQUFpQjs0RkFBakIsaUJBQWlCO2tCQUQ3QixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2F0ZWdvcmllc0h0dHBTZXJ2aWNlIH0gZnJvbSAnQGJhY2tiYXNlL2RhdGEtYW5nL2NhdGVnb3JpZXMtbWFuYWdlbWVudCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBDYXRlZ29yeUl0ZW0sIGZyb21DYXRlZ29yaWVzTWFuYWdlbWVudFJlc3BvbnNlIH0gZnJvbSAnLi4vbW9kZWwvY2F0ZWdvcmllcy1saXN0JztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIENhdGVnb3JpZXNTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBjYXRlZ29yaWVzTWFuYWdlbWVudERhdGFIdHRwU2VydmljZTogQ2F0ZWdvcmllc0h0dHBTZXJ2aWNlKSB7fVxuXG4gIGdldENhdGVnb3JpZXMoKTogT2JzZXJ2YWJsZTxDYXRlZ29yeUl0ZW1bXT4ge1xuICAgIHJldHVybiB0aGlzLmNhdGVnb3JpZXNNYW5hZ2VtZW50RGF0YUh0dHBTZXJ2aWNlXG4gICAgICAuZ2V0Q2F0ZWdvcmllcyhcbiAgICAgICAge1xuICAgICAgICAgIGxldmVsOiAnUEFSRU5UUycsXG4gICAgICAgIH0sXG4gICAgICAgICdyZXNwb25zZScsXG4gICAgICApXG4gICAgICAucGlwZShtYXAoKHJlc3BvbnNlKSA9PiBmcm9tQ2F0ZWdvcmllc01hbmFnZW1lbnRSZXNwb25zZShyZXNwb25zZSkpKTtcbiAgfVxufVxuIl19