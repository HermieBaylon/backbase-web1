import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';
import { Validators } from '@angular/forms';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { BaseCurrency, BudgetFrequency, ModalConfig } from '../constants';
import * as i0 from "@angular/core";
import * as i1 from "../services/categories.service";
import * as i2 from "@angular/forms";
import * as i3 from "../services/utility.service";
import * as i4 from "@backbase/foundation-ang/core";
import * as i5 from "@backbase/ui-ang/empty-state";
import * as i6 from "../budget-card/budget-card.component";
import * as i7 from "../budgets-header/budgets-header.component";
import * as i8 from "@backbase/ui-ang/modal";
import * as i9 from "@backbase/ui-ang/icon";
import * as i10 from "@backbase/ui-ang/currency-input";
import * as i11 from "@backbase/ui-ang/input-radio-group";
import * as i12 from "@angular/common";
import * as i13 from "@backbase/ui-ang/button";
export class BudgetManagerComponent {
    constructor(categoriesService, fb, utility, assetsService) {
        this.categoriesService = categoriesService;
        this.fb = fb;
        this.utility = utility;
        this.assetsService = assetsService;
        /**
         * Modal header background.
         */
        this.background = 'primary';
        /**
         * If set the chart will show a percentage instead of an amount.
         */
        this.showPercentage = false;
        /**
         * EventEmitter for triggering a editBudget event.
         */
        this.editBudget = new EventEmitter();
        /**
         * EventEmitter for triggering a createBudget event.
         */
        this.createBudget = new EventEmitter();
        /**
         * EventEmitter for triggering a deleteBudget event.
         */
        this.deleteBudget = new EventEmitter();
        this.hostRef = this;
        this.resolveAsset = this.assetsService.createAssetsResolver({
            widgetName: 'bb-budget-widget-ang',
            getURIFromAssetID: (assetId) => `${assetId}`,
        });
        this.images = ['1', '2'].map((i) => this.resolveAsset(i + '-step.svg'));
        this.themev2img = this.resolveAsset('modal-header.png');
        this.baseCurrency = BaseCurrency;
        this.budgetFrequency = BudgetFrequency;
        this.baseBudgetModalOptions = ModalConfig;
        this.confirmationModalOptions = Object.assign(Object.assign({}, this.baseBudgetModalOptions), { size: 'md' });
        this.categoriesList = this.categoriesService.getCategories();
        this.discardEditModalActive = false;
        this.discardCreateModalActive = false;
        this.deleteBudgetModalActive = false;
        this.updateBudgetModalActive = false;
        this.createBudgetModalActive = false;
        this.activeStep = 1;
    }
    get startOfMonth() {
        const date = new Date();
        const year = date.getFullYear();
        let month = '' + (date.getMonth() + 1);
        month = month.padStart(2, '0');
        return `${year}-${month}-01`;
    }
    get endOfMonth() {
        const date = new Date();
        const year = date.getFullYear();
        const month = date.getMonth() + 1;
        const newDate = new Date(year, month, 0);
        const day = newDate.getDate();
        const formattedMonth = month.toString().padStart(2, '0');
        return `${year}-${formattedMonth}-${day}`;
    }
    get budgetList() {
        if (this.maxBudgets && this.budgets) {
            return this.budgets.slice(0, this.maxBudgets);
        }
        return this.budgets;
    }
    spawnCreateBudgetForm() {
        return this.fb.group({
            categoryName: ['', Validators.required],
            spendingLimit: ['', Validators.required],
            frequency: [this.budgetFrequency, Validators.required],
            period: [this.startOfMonth, Validators.required],
        });
    }
    spawnUpdateBudgetForm() {
        if (this.selectedBudget) {
            return this.fb.group({
                spendingLimit: [this.selectedBudget.spendingLimit, Validators.required],
            });
        }
        return undefined;
    }
    closeModal() {
        this.discardEditModalActive = false;
        this.discardCreateModalActive = false;
        this.deleteBudgetModalActive = false;
    }
    processCloseConfirmation() {
        this.closeModal();
        this.updateBudgetModalActive = false;
        this.createBudgetModalActive = false;
        this.activeStep = 1;
    }
    cancelCreateBudget() {
        if (this.createBudgetForm && !this.createBudgetForm.pristine) {
            this.discardCreateModalActive = true;
        }
        else {
            this.createBudgetModalActive = false;
        }
    }
    cancelUpdateBudget() {
        if (this.updateBudgetForm && !this.updateBudgetForm.pristine) {
            this.discardEditModalActive = true;
        }
        else {
            this.updateBudgetModalActive = false;
        }
    }
    handleCreate() {
        this.createBudgetModalActive = true;
        this.createBudgetForm = this.spawnCreateBudgetForm();
    }
    submitCreateBudget() {
        if (this.createBudgetForm) {
            this.createBudgetModalActive = false;
            this.activeStep = 1;
            const createBudgetFormValue = Object.assign(Object.assign({}, this.createBudgetForm.value), { period: {
                    startDate: this.createBudgetForm.value.period,
                    endDate: this.endOfMonth,
                }, spendingLimit: {
                    currencyCode: this.createBudgetForm.value.spendingLimit.currency,
                    amount: this.createBudgetForm.value.spendingLimit.amount,
                } });
            this.createBudget.emit(createBudgetFormValue);
            this.createBudgetForm.reset();
        }
    }
    handleEdit(data) {
        this.updateBudgetModalActive = true;
        this.selectedBudget = data;
        this.updateBudgetForm = this.spawnUpdateBudgetForm();
    }
    submitEditBudget() {
        if (this.selectedBudget && this.updateBudgetForm) {
            this.updateBudgetModalActive = false;
            this.editBudget.emit({
                updateBudgetFormData: Object.assign(Object.assign({}, this.updateBudgetForm.value), { spendingLimit: {
                        currencyCode: this.updateBudgetForm.value.spendingLimit.currency,
                        amount: this.updateBudgetForm.value.spendingLimit.amount,
                    } }),
                selectedBudgetName: this.selectedBudget.budgetName,
                selectedBudgetId: this.selectedBudget.id,
            });
            this.selectedBudget = undefined;
        }
    }
    handleDelete(data) {
        this.deleteBudgetModalActive = true;
        this.selectedBudget = data;
    }
    submitDeleteBudget() {
        if (this.selectedBudget) {
            this.deleteBudgetModalActive = false;
            this.deleteBudget.emit(this.selectedBudget);
            this.selectedBudget = undefined;
        }
    }
}
BudgetManagerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetManagerComponent, deps: [{ token: i1.CategoriesService }, { token: i2.FormBuilder }, { token: i3.UtilityService }, { token: i4.AssetsService }], target: i0.ɵɵFactoryTarget.Component });
BudgetManagerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BudgetManagerComponent, selector: "bb-budget-manager", inputs: { background: "background", budgets: "budgets", maxBudgets: "maxBudgets", showPercentage: "showPercentage", safeZoneLimit: "safeZoneLimit" }, outputs: { editBudget: "editBudget", createBudget: "createBudget", deleteBudget: "deleteBudget" }, ngImport: i0, template: "<ng-container bbBudgetsHeaderCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<div\n  class=\"row\"\n  *ngIf=\"budgets?.length; else emptyState\"\n>\n  <ng-container\n    *ngFor=\"let budget of budgetList\"\n    bbBudgetCardCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"budget\"\n  ></ng-container>\n</div>\n\n<ng-container bbBudgetConfirmationModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-container bbBudgetUpdateModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-container bbBudgetCreateModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template #emptyState>\n  <bb-empty-state-ui\n    class=\"card bb-state-container\"\n    title=\"No Budgets Created\"\n    i18n-title=\"No Budgets Created|Title of a message that is shown when there are no budgets@@budgets.state.noResultsFound.title\"\n    subtitle=\"You haven\u2019t created a budget yet\"\n    i18n-subtitle=\"You haven\u2019t created a budget yet|Subtitle of a message that is shown when there are no budgets@@budgets.state.noResultsFound.subtitle\"\n    iconSize=\"xxl\"\n    iconModifier=\"data-usage\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template bbBudgetCardCustomizable let-hostRef let-budget=\"context\">\n  <bb-budget-card-ui\n    class=\"bb-block bb-block--xl col-md-6 col-lg-4\"\n    [budgetData]=\"budget\"\n    [showPercentage]=\"hostRef.showPercentage\"\n    [safeZoneLimit]=\"hostRef.safeZoneLimit\"\n    (editBudget)=\"hostRef.handleEdit($event)\"\n    (deleteBudget)=\"hostRef.handleDelete($event)\"\n  ></bb-budget-card-ui>\n</ng-template>\n\n<ng-template bbBudgetsHeaderCustomizable let-hostRef>\n  <bb-budgets-header-ui \n    (createBudget)=\"hostRef.handleCreate()\"\n  ></bb-budgets-header-ui>\n</ng-template>\n\n<!-- Delete budget -->\n<ng-template bbBudgetConfirmationModalCustomizable let-hostRef>\n  <bb-modal-ui\n    [isOpen]=\"hostRef.deleteBudgetModalActive || hostRef.discardEditModalActive || hostRef.discardCreateModalActive\"\n    [modalOptions]=\"hostRef.confirmationModalOptions\"\n  >\n    <div class=\"modal-header\">\n      <h2\n        id=\"modal-basic-title\"\n        class=\"modal-title\"\n        *ngIf=\"hostRef.deleteBudgetModalActive\"\n        i18n=\"Delete budget?|Delete budget modal title@@budget.delete.modal.title\"\n      >\n        Delete budget?\n      </h2>\n\n      <h2\n        id=\"modal-basic-title\"\n        class=\"modal-title\"\n        *ngIf=\"hostRef.discardEditModalActive\"\n        i18n=\"Discard budget changes?|Discard edit modal title@@budget.discard.edit.modal.title\"\n      >\n        Discard budget changes?\n      </h2>\n\n      <h2\n        id=\"modal-basic-title\"\n        class=\"modal-title\"\n        *ngIf=\"hostRef.discardCreateModalActive\"\n        i18n=\"Discard new budget?|Discard create modal title@@budget.discard.create.modal.title\"\n      >\n        Discard new budget?\n      </h2>\n    </div>\n\n    <div class=\"modal-body\">\n      <span\n        *ngIf=\"hostRef.deleteBudgetModalActive\"\n        i18n=\"This budget will be permanently deleted.|Delete budget info@@budget.delete.modal.info\"\n      >\n        This budget will be permanently deleted.\n      </span>\n\n      <span\n        *ngIf=\"hostRef.discardEditModalActive\"\n        i18n=\"You will loose all the changes made to this budget.|Discard edit budget info@@budget.discard.edit.modal.info\"\n      >\n        You will loose all the changes made to this budget.\n      </span>\n\n      <span\n        *ngIf=\"hostRef.discardCreateModalActive\"\n        i18n=\"All entered information for this budget will be permanetly lost.|Discard create budget info@@budget.discard.create.modal.info\"\n      >\n        All entered information for this budget will be permanetly lost.\n      </span>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"bb-button-bar\">\n        <button \n          bbButton\n          color=\"danger\" \n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.submitDeleteBudget()\" \n          *ngIf=\"hostRef.deleteBudgetModalActive\"\n          i18n=\"Delete budget|Delete button label@@budget.delete.modal.delete.button\"\n        >\n          Delete budget\n        </button>\n\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.closeModal()\"\n          *ngIf=\"hostRef.deleteBudgetModalActive\"\n          i18n=\"Not now|Not now button label@@budget.confirmation.modal.not.button\"\n        >\n          Not now\n        </button>\n\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.processCloseConfirmation()\"\n          *ngIf=\"hostRef.discardEditModalActive\"\n          i18n=\"Discard changes|Discard editing button label@@budget.confirmation.modal.discard.edit.button\"\n        >\n          Discard changes\n        </button>\n\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.closeModal()\"\n          *ngIf=\"hostRef.discardEditModalActive\"\n          i18n=\"Keep editing|Keep editing button label@@budget.confirmation.modal.keep.button\"\n        >\n          Keep editing\n        </button>\n\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.processCloseConfirmation()\"\n          *ngIf=\"hostRef.discardCreateModalActive\"\n          i18n=\"Discard budget|Discard creating button label@@budget.confirmation.modal.discard.create.button\"\n        >\n          Discard budget\n        </button>\n\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"hostRef.closeModal()\"\n          *ngIf=\"hostRef.discardCreateModalActive\"\n          i18n=\"Keep it|Keep it button label@@budget.confirmation.modal.keep.it.button\"\n        >\n          Keep it\n        </button>\n      </div>\n    </div>\n  </bb-modal-ui>\n</ng-template>\n\n<!-- Edit budget -->\n<ng-template bbBudgetUpdateModalCustomizable let-hostRef>\n  <bb-modal-ui\n    *ngIf=\"hostRef.updateBudgetModalActive\"\n    [isOpen]=\"hostRef.updateBudgetModalActive\"\n    [modalOptions]=\"hostRef.baseBudgetModalOptions\"\n  >\n    <img \n      class=\"img-fluid\"\n      [src]=\"hostRef.themev2img | async\" \n      alt=\"Edit budget top image\"\n      i18n-alt=\"@@budget.editImage.alt\"\n    />\n    <form [formGroup]=\"hostRef.updateBudgetForm\" (ngSubmit)=\"hostRef.submitEditBudget()\">\n      <div class=\"modal-body\">\n        <div class=\"bb-block bb-block--xl\">\n          <h2 \n            data-role=\"modal-basic-title\"\n            class=\"modal-title\"\n            i18n=\"Set your budget limit|Edit budget modal title@@budget.edit.title\"\n          >\n            Set your budget limit\n          </h2>\n          <p\n            class=\"bb-text-support\" \n            data-role=\"edit-budget-text\"\n            i18n=\"Category edit description|Description for category edit form@@budget.edit.description\"\n          >\n            Choose a monthly budget for your selected category.\n          </p>\n        </div>\n\n        <div class=\"bb-block bb-block--sm\">\n          <div class=\"bb-stack\">\n            <bb-icon-ui \n              class=\"bb-stack__item\"\n              size=\"sm\"\n              backgroundType=\"square\"\n              name=\"category-{{hostRef.utility.getCategoryIconClass(hostRef.selectedBudget.budgetName || '')}}\"\n            >\n            </bb-icon-ui>\n            <div\n              class=\"bb-stack__item bb-text-semi-bold\"\n            >\n              {{hostRef.selectedBudget.budgetName}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--sm\">\n          {{startOfMonth | date: 'mediumDate'}} - {{endOfMonth | date: 'mediumDate'}}\n        </div>\n        \n        <div class=\"bb-block bb-block--xl\">\n          <span i18n=\"Recurring|Budget type@@budget.edit.modal.type\">\n            Recurring\n          </span>\n          <span i18n=\"Monthly|Budget frequency@@budget.edit.modal.frequency.info\">\n            monthly\n          </span>\n        </div>\n\n        <div class=\"bb-block bb-block--xl\">\n          <p\n            class=\"bb-block bb-block--sm bb-text-semi-bold\" \n            i18n=\"Monthly amount|Monthly amount for category edit form@@budget.edit.modal.amount.title\"\n          >\n            Monthly amount\n          </p>\n          <bb-currency-input-ui\n            formControlName=\"spendingLimit\"\n            [currencies]=\"[hostRef.selectedBudget.spendingLimit.currencyCode]\"\n          ></bb-currency-input-ui>\n        </div>\n      </div>\n\n      <div class=\"modal-footer bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\" \n          color=\"primary\" \n          [disabled]=\"hostRef.updateBudgetForm.pristine\"\n          i18n=\"Confirm|Confirm button label@@budget.modal.confirm.button\"\n        >\n          Confirm\n        </button>\n        <button\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          bbButton\n          color=\"link\" \n          (click)=\"hostRef.cancelUpdateBudget()\"\n          i18n=\"Cancel|Cancel button label@@budget.confirmation.modal.cancel.button\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </bb-modal-ui>\n</ng-template>\n\n<!-- Create a budget -->\n<ng-template bbBudgetCreateModalCustomizable let-hostRef>\n  <bb-modal-ui \n    *ngIf=\"hostRef.createBudgetForm && (hostRef.categoriesList | async) as categoriesList\"\n    [isOpen]=\"hostRef.createBudgetModalActive\" \n    [modalOptions]=\"hostRef.baseBudgetModalOptions\"\n  >\n    <ng-container *ngFor=\"let img of hostRef.images; let i=index\">\n      <div *ngIf=\"hostRef.activeStep === i + 1\">\n        <img \n          class=\"img-fluid\"\n          [src]=\"hostRef.themev2img | async\" \n          alt=\"Step {{i + 1}} \" \n          i18n-alt=\"@@budget.createImage.alt\"\n        />\n      </div>\n    </ng-container>\n\n    <form [formGroup]=\"hostRef.createBudgetForm\" (ngSubmit)=\"hostRef.submitCreateBudget()\">\n      <div class=\"modal-body\">\n        <div *ngIf=\"hostRef.activeStep === 1\">\n          <div class=\"bb-block bb-block--xl\">\n            <h2 \n              data-role=\"step-1-title\" \n              class=\"modal-title\"\n              i18n=\"Category name title|Title for category name input field in create/edit form@@budget.form.title.name\"\n            >\n              Select your budget category\n            </h2>\n            <p \n              class=\"bb-text-support\" \n              data-role=\"step-1-text\"\n              i18n=\"Category name description|Description for category name input field in create/edit form@@budget.form.description.name\"\n            >\n              Begin managing your budget by choosing a category.\n            </p>\n          </div>\n\n          <div class=\"bb-block bb-block--md\">\n            <div class=\"bb-scrollable-category-list\">\n              <bb-input-radio-group-ui \n                [required]=\"true\" \n                name=\"categoriesList\" \n                label=\" \"\n                formControlName=\"categoryName\" \n              >\n                <bb-input-radio-ui\n                  *ngFor=\"let category of categoriesList\"\n                  [id]=\"hostRef.utility.getCategoryIconClass(category.categoryName)\"\n                  [labelTemplate]=\"customLabelTemplateWithData\"\n                  [labelTemplateContext]=\"category\"\n                  [value]=\"category.categoryName\"\n                ></bb-input-radio-ui>\n              </bb-input-radio-group-ui>\n              <ng-template #customLabelTemplateWithData let-category=\"labelTemplateContext\">\n                  <bb-icon-ui\n                  class=\"bb-stack__item\"\n                  size=\"sm\"\n                  backgroundType=\"square\"\n                  name=\"category-{{hostRef.utility.getCategoryIconClass(category.categoryName)}}\"\n                ></bb-icon-ui>\n                <span class=\"bb-text-semi-bold\">{{ category.categoryName }}</span>\n              </ng-template>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"hostRef.activeStep === 2\">\n          <div class=\"bb-block bb-block--xl\">\n            <h2\n              data-role=\"step-2-title\" \n              class=\"modal-title\"\n              i18n=\"Set your budget limit|Second step title of create a budget@@budget.create.title\"\n            >\n              Set your budget limit\n            </h2>\n            <p\n              class=\"bb-text-support\" \n              data-role=\"step-2-text\"\n              i18n=\"Choose a monthly budget for your selected category|Second step description of create a budget@@budget.form.description.edit\"\n            >\n              Choose a monthly budget for your selected category.\n            </p>\n          </div>\n\n          <div class=\"bb-block bb-block--sm\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui \n                class=\"bb-stack__item\"\n                size=\"sm\"\n                backgroundType=\"square\"\n                name=\"category-{{hostRef.utility.getCategoryIconClass(hostRef.createBudgetForm.value.categoryName)}}\" \n              ></bb-icon-ui>\n              <div class=\"bb-text-semi-bold\">\n                {{hostRef.createBudgetForm.value.categoryName}}\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bb-block bb-block--sm\">\n            {{startOfMonth | date: 'mediumDate'}} - {{endOfMonth | date: 'mediumDate'}}\n          </div>\n\n          <div class=\"bb-block bb-block--xl\">\n            <span i18n=\"Recurring|Budget type@@budget.create.modal.type\">\n              Recurring\n            </span>\n            <span i18n=\"Monthly|Budget frequency@@budget.create.modal.frequency.info\">\n              monthly\n            </span>\n          </div>\n\n          <div class=\"bb-block bb-block--xl\">\n            <p\n              class=\"bb-block bb-block--sm bb-text-semi-bold\" \n              i18n=\"Monthly amount|Monthly amount for category edit form@@budget.create.modal.amount.title\"\n            >\n              Monthly amount\n            </p>\n            <bb-currency-input-ui\n              [currencies]=\"[hostRef.baseCurrency]\" \n              formControlName=\"spendingLimit\"\n            ></bb-currency-input-ui>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal-footer bb-button-bar\">\n        <button\n          bbButton\n          type=\"submit\" \n          color=\"primary\" \n          class=\"bb-button-bar__button\"\n          *ngIf=\"hostRef.activeStep === 2\"\n          [disabled]=\"hostRef.createBudgetForm.status !== 'VALID'\"\n          i18n=\"Confirm|Confirm button label@@budget.create.modal.confirm.button\"\n        >\n          Confirm\n        </button>\n        <button\n          bbButton\n          color=\"primary\" \n          class=\"bb-button-bar__button\"\n          *ngIf=\"hostRef.activeStep === 1\" \n          (click)=\"hostRef.activeStep = 2\"\n          [disabled]=\"hostRef.createBudgetForm.pristine\" \n          i18n=\"Continue|Continue button label@@budget.create.modal.continue.button\"\n        >\n          Continue\n        </button>\n        <button\n          bbButton \n          color=\"secondary\" \n          class=\"bb-button-bar__button\"\n          *ngIf=\"hostRef.activeStep === 2\"\n          (click)=\"hostRef.activeStep = 1\" \n          i18n=\"Back|Back button label@@budget.create.modal.previous.button\"\n        >\n          Back\n        </button>\n        <button\n          bbButton\n          color=\"link\" \n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          (click)=\"hostRef.cancelCreateBudget()\"\n          i18n=\"Cancel|Cancel button label@@budget.create.modal.cancel.button\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </bb-modal-ui>\n</ng-template>", components: [{ type: i0.forwardRef(function () { return i5.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i0.forwardRef(function () { return i6.BudgetCardComponent; }), selector: "bb-budget-card-ui", inputs: ["budgetData", "showPercentage", "safeZoneLimit"], outputs: ["deleteBudget", "editBudget"] }, { type: i0.forwardRef(function () { return i7.BudgetsHeaderComponent; }), selector: "bb-budgets-header-ui", outputs: ["createBudget"] }, { type: i0.forwardRef(function () { return i8.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i9.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i10.CurrencyInputComponent; }), selector: "bb-currency-input-ui", inputs: ["decMaxLen", "decMinLen", "placeholder", "resultType", "integer", "required", "readonly", "disabled", "integerLabelSrOnly", "decimalLabelSrOnly", "currencies", "isRightAligned", "integerId", "decimalId", "integerLabel", "decimalLabel", "currencyLabel", "allowNegativeValue", "currencyListAriaLabel", "currencyListWithOnItemAriaLabel", "aria-describedby", "aria-labelledby", "aria-invalid"], outputs: ["blur"] }, { type: i0.forwardRef(function () { return i11.InputRadioGroupComponent; }), selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i0.forwardRef(function () { return i11.InputRadioComponent; }), selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }], directives: [{ type: i0.forwardRef(function () { return BudgetsHeaderCustomizableDirective; }), selector: "[bbBudgetsHeaderCustomizable]" }, { type: i0.forwardRef(function () { return i12.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i12.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0.forwardRef(function () { return BudgetCardCustomizableDirective; }), selector: "[bbBudgetCardCustomizable]" }, { type: i0.forwardRef(function () { return BudgetConfirmationModalCustomizableDirective; }), selector: "[bbBudgetConfirmationModalCustomizable]" }, { type: i0.forwardRef(function () { return BudgetUpdateModalCustomizableDirective; }), selector: "[bbBudgetUpdateModalCustomizable]" }, { type: i0.forwardRef(function () { return BudgetCreateModalCustomizableDirective; }), selector: "[bbBudgetCreateModalCustomizable]" }, { type: i0.forwardRef(function () { return i13.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0.forwardRef(function () { return i2.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0.forwardRef(function () { return i2.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i2.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i2.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i2.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i2.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }], pipes: { "async": i0.forwardRef(function () { return i12.AsyncPipe; }), "date": i0.forwardRef(function () { return i12.DatePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetManagerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-budget-manager',
                    templateUrl: './budget-manager.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.CategoriesService }, { type: i2.FormBuilder }, { type: i3.UtilityService }, { type: i4.AssetsService }]; }, propDecorators: { background: [{
                type: Input
            }], budgets: [{
                type: Input
            }], maxBudgets: [{
                type: Input
            }], showPercentage: [{
                type: Input
            }], safeZoneLimit: [{
                type: Input
            }], editBudget: [{
                type: Output
            }], createBudget: [{
                type: Output
            }], deleteBudget: [{
                type: Output
            }] } });
export class BudgetsHeaderCustomizableDirective extends BbTemplate {
}
BudgetsHeaderCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetsHeaderCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BudgetsHeaderCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetsHeaderCustomizableDirective, selector: "[bbBudgetsHeaderCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetsHeaderCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbBudgetsHeaderCustomizable]',
                }]
        }] });
export class BudgetCardCustomizableDirective extends BbTemplate {
}
BudgetCardCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetCardCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BudgetCardCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetCardCustomizableDirective, selector: "[bbBudgetCardCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetCardCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbBudgetCardCustomizable]',
                }]
        }] });
export class BudgetConfirmationModalCustomizableDirective extends BbTemplate {
}
BudgetConfirmationModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetConfirmationModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BudgetConfirmationModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetConfirmationModalCustomizableDirective, selector: "[bbBudgetConfirmationModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetConfirmationModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbBudgetConfirmationModalCustomizable]',
                }]
        }] });
export class BudgetUpdateModalCustomizableDirective extends BbTemplate {
}
BudgetUpdateModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetUpdateModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BudgetUpdateModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetUpdateModalCustomizableDirective, selector: "[bbBudgetUpdateModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetUpdateModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbBudgetUpdateModalCustomizable]',
                }]
        }] });
export class BudgetCreateModalCustomizableDirective extends BbTemplate {
}
BudgetCreateModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetCreateModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BudgetCreateModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BudgetCreateModalCustomizableDirective, selector: "[bbBudgetCreateModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BudgetCreateModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbBudgetCreateModalCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,