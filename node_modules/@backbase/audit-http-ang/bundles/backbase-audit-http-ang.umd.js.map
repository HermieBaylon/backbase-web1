{"version":3,"file":"backbase-audit-http-ang.umd.js","sources":["../../model/status.ts","../../model/type.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/auditClient.service.ts","../../api/auditClient.service.mocks.ts"],"sourcesContent":["/**\n * Audit client\n * Store, query, and export audit messages.\n *\n * The version of the OpenAPI document: 3.0.8\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The status of the event.\n */\nexport type Status = 'Initiated' | 'Successful' | 'Failed';\n\nexport const Status = {\n    Initiated: 'Initiated' as Status,\n    Successful: 'Successful' as Status,\n    Failed: 'Failed' as Status\n};\n\n","/**\n * Audit client\n * Store, query, and export audit messages.\n *\n * The version of the OpenAPI document: 3.0.8\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of the legal entity. Bank or Customer.\n */\nexport type Type = 'CUSTOMER' | 'BANK';\n\nexport const Type = {\n    CUSTOMER: 'CUSTOMER' as Type,\n    BANK: 'BANK' as Type\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const AUDIT_BASE_PATH = new InjectionToken<string>('AUDIT_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface AuditConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class AuditConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: AuditConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link AuditConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link AuditConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module AuditConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { AuditConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class AuditApiModule {\n    public static forRoot(configurationFactory: () => AuditConfiguration): ModuleWithProviders<AuditApiModule> {\n        return {\n            ngModule: AuditApiModule,\n            providers: [ { provide: AuditConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: AuditApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: AuditConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('AuditApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Audit client\n * Store, query, and export audit messages.\n *\n * The version of the OpenAPI document: 3.0.8\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { AuditExportGetResponse } from '../model/models';\nimport { AuditMessagesGetResponse } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { EventCategoriesGet } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { LegalEntity } from '../model/models';\nimport { TooManyRequestsError } from '../model/models';\n\nimport { AUDIT_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AuditConfiguration }                                     from '../configuration';\n\n\nexport interface GetAuditLogMessagesRequestParams {\n    /** Restrict results to audit logs with a timestamp of, or after 00:00 of the supplied date, UTC. */\n    [\"startDate\"]?: string;\n    /** Restrict results to audit logs with a timestamp of, or before 23:59 of the supplied date, UTC. */\n    [\"endDate\"]?: string;\n    /** Restrict results to audit logs with an event category matching any of the supplied values. */\n    [\"eventCategories\"]?: Array<string>;\n    /** Restrict results to audit logs with an event object type matching any of the supplied values. Deprecated. Please use the objectTypes parameter as it offers greater freedom. */\n    [\"objectType\"]?: string;\n    /** Restrict results to audit logs with an event object type matching any of the supplied values. */\n    [\"objectTypes\"]?: Array<string>;\n    /** Restrict results to audit logs with an event action matching any of the supplied values. Deprecated. Please use the eventActions parameter as it offers greater freedom. */\n    [\"eventAction\"]?: string;\n    /** Restrict results to audit logs with an event action matching any of the supplied values. */\n    [\"eventActions\"]?: Array<string>;\n    /** Restrict results to audit logs with a status matching any of the supplied values. */\n    [\"status\"]?: Array<string>;\n    /** Restrict results to audit logs with an IP address matching any of the supplied values. IPv4 format. */\n    [\"ipAddresses\"]?: Array<string>;\n    /** Restrict results to audit logs with a username matching any of the supplied values. */\n    [\"usernames\"]?: Array<string>;\n    /** Restrict results to audit logs with an actor user ID matching any of the supplied values. Deprecated. Please use the userIds parameter as it offers greater freedom. */\n    [\"userId\"]?: string;\n    /** Restrict results to audit logs with an actor user ID matching any of the supplied values. */\n    [\"userIds\"]?: Array<string>;\n    /** Restrict results to audit logs with a legalEntityId matching any of the supplied values. */\n    [\"legalEntityIds\"]?: Array<string>;\n    /** Restrict results to audit logs with a serviceAgreementId matching the supplied value. */\n    [\"serviceAgreementId\"]?: string;\n    /** Restrict results to audit logs with a message set ID matching the supplied value. */\n    [\"messageSetId\"]?: string;\n    /** Restrict results to audit logs with a schemaVersion matching any of the supplied values. Deprecated. Support for this parameter is incomplete. */\n    [\"schemaVersions\"]?: Array<string>;\n    /** Restrict results to audit logs with a user agent matching any of the supplied values. */\n    [\"userAgents\"]?: Array<string>;\n    /** Restrict results to audit logs with an error matching any of the supplied values. */\n    [\"errors\"]?: Array<string>;\n    /** Restrict results to audit records with a metadata key matching the supplied value. */\n    [\"eventMetaDataKey\"]?: string;\n    /** Restrict results to audit records with a metadata value matching that which is supplied. May only be used in conjunction with the eventMetaDataKey parameter. */\n    [\"eventMetaDataValue\"]?: string;\n    /** Apply partial matching against the provided fields: \\&quot;eventCategory\\&quot;, \\&quot;objectType\\&quot;, \\&quot;eventAction\\&quot;, \\&quot;username\\&quot;, \\&quot;userId\\&quot;, \\&quot;legalEntityId\\&quot;, \\&quot;serviceAgreementId\\&quot;, \\&quot;messageSetId\\&quot;, \\&quot;schemaVersion\\&quot;, \\&quot;userAgent\\&quot;, \\&quot;error\\&quot;, \\&quot;eventMetaDataValue\\&quot;.  */\n    [\"partialMatchAgainst\"]?: Array<string>;\n    /** Expand searching to any associated meta data values for the following fields: \\&quot;userId\\&quot;  */\n    [\"expandToMetaData\"]?: Array<string>;\n    /** Specifies the number of pages to skip. A value of 0 gives the starting page. Page size is goverened by the size parameter. */\n    [\"from\"]?: number;\n    /** Limits the number of audit records returned in the response. */\n    [\"size\"]?: number;\n    /** Sorts the results by one of the following fields: \\&quot;eventCategory\\&quot;, \\&quot;objectType\\&quot;, \\&quot;eventAction\\&quot;, \\&quot;username\\&quot;, \\&quot;userId\\&quot;, \\&quot;timestamp\\&quot;, \\&quot;eventDescription\\&quot;, \\&quot;legalEntityId\\&quot;, \\&quot;serviceAgreementId\\&quot;, \\&quot;messageSetId\\&quot;.  */\n    [\"orderBy\"]?: string;\n    /** Sorts the results in asceding (ASC) or descending (DESC) order. */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\nexport interface GetLegalEntitiesRequestParams {\n    /** Restrict results to legal entities whose name contains the supplied values. */\n    [\"query\"]?: string;\n    /** Specifies the number of pages to skip. A value of 0 gives the starting page. Page size is goverened by the size parameter. */\n    [\"from\"]?: number;\n    /** Used as an alternative for specifying \\&#39;from\\&#39;. The audit record ID proveded acts as the starting point for the retreived data. */\n    [\"cursor\"]?: string;\n    /** Limits the number of legal entities returned in the response. */\n    [\"size\"]?: number;\n}\n\nexport interface GetStartAsyncExportRequestParams {\n    /** Restrict results to audit logs with a timestamp of, or after 00:00 of the supplied date, UTC. */\n    [\"startDate\"]?: string;\n    /** Restrict results to audit logs with a timestamp of, or before 23:59 of the supplied date, UTC. */\n    [\"endDate\"]?: string;\n    /** Restrict results to audit logs with an event category matching any of the supplied values. */\n    [\"eventCategories\"]?: Array<string>;\n    /** Restrict results to audit logs with an event object type matching any of the supplied values. Deprecated. Please use the objectTypes parameter as it offers greater freedom. */\n    [\"objectType\"]?: string;\n    /** Restrict results to audit logs with an event object type matching any of the supplied values. */\n    [\"objectTypes\"]?: Array<string>;\n    /** Restrict results to audit logs with an event action matching any of the supplied values. Deprecated. Please use the eventActions parameter as it offers greater freedom. */\n    [\"eventAction\"]?: string;\n    /** Restrict results to audit logs with an event action matching any of the supplied values. */\n    [\"eventActions\"]?: Array<string>;\n    /** Restrict results to audit logs with a status matching any of the supplied values. */\n    [\"status\"]?: Array<string>;\n    /** Restrict results to audit logs with an IP address matching any of the supplied values. IPv4 format. */\n    [\"ipAddresses\"]?: Array<string>;\n    /** Restrict results to audit logs with a username matching any of the supplied values. */\n    [\"usernames\"]?: Array<string>;\n    /** Restrict results to audit logs with an actor user ID matching any of the supplied values. Deprecated. Please use the userIds parameter as it offers greater freedom. */\n    [\"userId\"]?: string;\n    /** Restrict results to audit logs with an actor user ID matching any of the supplied values. */\n    [\"userIds\"]?: Array<string>;\n    /** Restrict results to audit logs with a legalEntityId matching any of the supplied values. */\n    [\"legalEntityIds\"]?: Array<string>;\n    /** Restrict results to audit logs with a serviceAgreementId matching the supplied value. */\n    [\"serviceAgreementId\"]?: string;\n    /** Restrict results to audit logs with a message set ID matching the supplied value. */\n    [\"messageSetId\"]?: string;\n    /** Restrict results to audit logs with a schemaVersion matching any of the supplied values. Deprecated. Support for this parameter is incomplete. */\n    [\"schemaVersions\"]?: Array<string>;\n    /** Restrict results to audit logs with a user agent matching any of the supplied values. */\n    [\"userAgents\"]?: Array<string>;\n    /** Restrict results to audit logs with an error matching any of the supplied values. */\n    [\"errors\"]?: Array<string>;\n    /** Restrict results to audit records with a metadata key matching the supplied value. */\n    [\"eventMetaDataKey\"]?: string;\n    /** Restrict results to audit records with a metadata value matching that which is supplied. May only be used in conjunction with the eventMetaDataKey parameter. */\n    [\"eventMetaDataValue\"]?: string;\n    /** Apply partial matching against the provided fields: \\&quot;eventCategory\\&quot;, \\&quot;objectType\\&quot;, \\&quot;eventAction\\&quot;, \\&quot;username\\&quot;, \\&quot;userId\\&quot;, \\&quot;legalEntityId\\&quot;, \\&quot;serviceAgreementId\\&quot;, \\&quot;messageSetId\\&quot;, \\&quot;schemaVersion\\&quot;, \\&quot;userAgent\\&quot;, \\&quot;error\\&quot;, \\&quot;eventMetaDataValue\\&quot;.  */\n    [\"partialMatchAgainst\"]?: Array<string>;\n    /** Expand searching to any associated meta data values for the following fields: \\&quot;userId\\&quot;  */\n    [\"expandToMetaData\"]?: Array<string>;\n    /** Specifies the number of pages to skip. A value of 0 gives the starting page. Page size is goverened by the size parameter. */\n    [\"from\"]?: number;\n    /** Limits the number of audit records returned in the response. */\n    [\"size\"]?: number;\n    /** Sorts the results by one of the following fields: \\&quot;eventCategory\\&quot;, \\&quot;objectType\\&quot;, \\&quot;eventAction\\&quot;, \\&quot;username\\&quot;, \\&quot;userId\\&quot;, \\&quot;timestamp\\&quot;, \\&quot;eventDescription\\&quot;, \\&quot;legalEntityId\\&quot;, \\&quot;serviceAgreementId\\&quot;, \\&quot;messageSetId\\&quot;.  */\n    [\"orderBy\"]?: string;\n    /** Sorts the results in asceding (ASC) or descending (DESC) order. */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\nexport interface GetStoredContentRequestParams {\n    /** Restrict results to content with an identifier matching the supplied value. */\n    [\"contentId\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuditClientService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AuditConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(AUDIT_BASE_PATH) basePath: string, @Optional() configuration: AuditConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Get event categories\n     * Returns a list of all unique event categories, including their child object types and event actions.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditEventCategories(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EventCategoriesGet>;\n    /**\n     * Get event categories\n     * Returns a list of all unique event categories, including their child object types and event actions.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditEventCategories(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EventCategoriesGet>>;\n    /**\n     * Get event categories\n     * Returns a list of all unique event categories, including their child object types and event actions.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditEventCategories(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EventCategoriesGet>>;\n    /**\n     * Get event categories\n     * Returns a list of all unique event categories, including their child object types and event actions.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditEventCategories(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EventCategoriesGet>(`${this.configuration.basePath}/client-api/v3/audit-log/event-categories`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAuditEventCategoriesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v3/audit-log/event-categories`;\n    }\n\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<AuditMessagesGetResponse>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<AuditMessagesGetResponse>>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<AuditMessagesGetResponse>>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<string>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpResponse<string>>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpEvent<string>>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'text/csv'}): Observable<any> {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _eventCategories = requestParameters[\"eventCategories\"];\n        const _objectType = requestParameters[\"objectType\"];\n        const _objectTypes = requestParameters[\"objectTypes\"];\n        const _eventAction = requestParameters[\"eventAction\"];\n        const _eventActions = requestParameters[\"eventActions\"];\n        const _status = requestParameters[\"status\"];\n        const _ipAddresses = requestParameters[\"ipAddresses\"];\n        const _usernames = requestParameters[\"usernames\"];\n        const _userId = requestParameters[\"userId\"];\n        const _userIds = requestParameters[\"userIds\"];\n        const _legalEntityIds = requestParameters[\"legalEntityIds\"];\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _messageSetId = requestParameters[\"messageSetId\"];\n        const _schemaVersions = requestParameters[\"schemaVersions\"];\n        const _userAgents = requestParameters[\"userAgents\"];\n        const _errors = requestParameters[\"errors\"];\n        const _eventMetaDataKey = requestParameters[\"eventMetaDataKey\"];\n        const _eventMetaDataValue = requestParameters[\"eventMetaDataValue\"];\n        const _partialMatchAgainst = requestParameters[\"partialMatchAgainst\"];\n        const _expandToMetaData = requestParameters[\"expandToMetaData\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_eventCategories) {\n            _eventCategories.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventCategories');\n            })\n        }\n        if (_objectType !== undefined && _objectType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_objectType, 'objectType');\n        }\n        if (_objectTypes) {\n            _objectTypes.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'objectTypes');\n            })\n        }\n        if (_eventAction !== undefined && _eventAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventAction, 'eventAction');\n        }\n        if (_eventActions) {\n            _eventActions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventActions');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_ipAddresses) {\n            _ipAddresses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ipAddresses');\n            })\n        }\n        if (_usernames) {\n            _usernames.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'usernames');\n            })\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_userIds) {\n            _userIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userIds');\n            })\n        }\n        if (_legalEntityIds) {\n            _legalEntityIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'legalEntityIds');\n            })\n        }\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_messageSetId !== undefined && _messageSetId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageSetId, 'messageSetId');\n        }\n        if (_schemaVersions) {\n            _schemaVersions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'schemaVersions');\n            })\n        }\n        if (_userAgents) {\n            _userAgents.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userAgents');\n            })\n        }\n        if (_errors) {\n            _errors.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'errors');\n            })\n        }\n        if (_eventMetaDataKey !== undefined && _eventMetaDataKey !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataKey, 'eventMetaDataKey');\n        }\n        if (_eventMetaDataValue !== undefined && _eventMetaDataValue !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataValue, 'eventMetaDataValue');\n        }\n        if (_partialMatchAgainst) {\n            _partialMatchAgainst.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'partialMatchAgainst');\n            })\n        }\n        if (_expandToMetaData) {\n            _expandToMetaData.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'expandToMetaData');\n            })\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'text/csv'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<AuditMessagesGetResponse>(`${this.configuration.basePath}/client-api/v3/audit-log/messages`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAuditLogMessagesUrl(requestParameters: GetAuditLogMessagesRequestParams): string {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _eventCategories = requestParameters[\"eventCategories\"];\n        const _objectType = requestParameters[\"objectType\"];\n        const _objectTypes = requestParameters[\"objectTypes\"];\n        const _eventAction = requestParameters[\"eventAction\"];\n        const _eventActions = requestParameters[\"eventActions\"];\n        const _status = requestParameters[\"status\"];\n        const _ipAddresses = requestParameters[\"ipAddresses\"];\n        const _usernames = requestParameters[\"usernames\"];\n        const _userId = requestParameters[\"userId\"];\n        const _userIds = requestParameters[\"userIds\"];\n        const _legalEntityIds = requestParameters[\"legalEntityIds\"];\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _messageSetId = requestParameters[\"messageSetId\"];\n        const _schemaVersions = requestParameters[\"schemaVersions\"];\n        const _userAgents = requestParameters[\"userAgents\"];\n        const _errors = requestParameters[\"errors\"];\n        const _eventMetaDataKey = requestParameters[\"eventMetaDataKey\"];\n        const _eventMetaDataValue = requestParameters[\"eventMetaDataValue\"];\n        const _partialMatchAgainst = requestParameters[\"partialMatchAgainst\"];\n        const _expandToMetaData = requestParameters[\"expandToMetaData\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_eventCategories) {\n            _eventCategories.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventCategories');\n            })\n        }\n        if (_objectType !== undefined && _objectType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_objectType, 'objectType');\n        }\n        if (_objectTypes) {\n            _objectTypes.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'objectTypes');\n            })\n        }\n        if (_eventAction !== undefined && _eventAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventAction, 'eventAction');\n        }\n        if (_eventActions) {\n            _eventActions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventActions');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_ipAddresses) {\n            _ipAddresses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ipAddresses');\n            })\n        }\n        if (_usernames) {\n            _usernames.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'usernames');\n            })\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_userIds) {\n            _userIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userIds');\n            })\n        }\n        if (_legalEntityIds) {\n            _legalEntityIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'legalEntityIds');\n            })\n        }\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_messageSetId !== undefined && _messageSetId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageSetId, 'messageSetId');\n        }\n        if (_schemaVersions) {\n            _schemaVersions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'schemaVersions');\n            })\n        }\n        if (_userAgents) {\n            _userAgents.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userAgents');\n            })\n        }\n        if (_errors) {\n            _errors.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'errors');\n            })\n        }\n        if (_eventMetaDataKey !== undefined && _eventMetaDataKey !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataKey, 'eventMetaDataKey');\n        }\n        if (_eventMetaDataValue !== undefined && _eventMetaDataValue !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataValue, 'eventMetaDataValue');\n        }\n        if (_partialMatchAgainst) {\n            _partialMatchAgainst.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'partialMatchAgainst');\n            })\n        }\n        if (_expandToMetaData) {\n            _expandToMetaData.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'expandToMetaData');\n            })\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v3/audit-log/messages${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Get legal entities\n     * Returns a list of legal entites whose name contain the provided search string.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LegalEntity>>;\n    /**\n     * Get legal entities\n     * Returns a list of legal entites whose name contain the provided search string.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LegalEntity>>>;\n    /**\n     * Get legal entities\n     * Returns a list of legal entites whose name contain the provided search string.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LegalEntity>>>;\n    /**\n     * Get legal entities\n     * Returns a list of legal entites whose name contain the provided search string.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<LegalEntity>>(`${this.configuration.basePath}/client-api/v3/audit-log/legal-entities`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLegalEntitiesUrl(requestParameters: GetLegalEntitiesRequestParams): string {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v3/audit-log/legal-entities${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Start Async Export\n     * Start an asynchronous process of creating a CSV file containing audit messages which pass the provided filters. The user will be notified upon completion and given an exportId with which to fetch the content.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStartAsyncExport(requestParameters: GetStartAsyncExportRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<AuditExportGetResponse>;\n    /**\n     * Start Async Export\n     * Start an asynchronous process of creating a CSV file containing audit messages which pass the provided filters. The user will be notified upon completion and given an exportId with which to fetch the content.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStartAsyncExport(requestParameters: GetStartAsyncExportRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<AuditExportGetResponse>>;\n    /**\n     * Start Async Export\n     * Start an asynchronous process of creating a CSV file containing audit messages which pass the provided filters. The user will be notified upon completion and given an exportId with which to fetch the content.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStartAsyncExport(requestParameters: GetStartAsyncExportRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<AuditExportGetResponse>>;\n    /**\n     * Start Async Export\n     * Start an asynchronous process of creating a CSV file containing audit messages which pass the provided filters. The user will be notified upon completion and given an exportId with which to fetch the content.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStartAsyncExport(requestParameters: GetStartAsyncExportRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _eventCategories = requestParameters[\"eventCategories\"];\n        const _objectType = requestParameters[\"objectType\"];\n        const _objectTypes = requestParameters[\"objectTypes\"];\n        const _eventAction = requestParameters[\"eventAction\"];\n        const _eventActions = requestParameters[\"eventActions\"];\n        const _status = requestParameters[\"status\"];\n        const _ipAddresses = requestParameters[\"ipAddresses\"];\n        const _usernames = requestParameters[\"usernames\"];\n        const _userId = requestParameters[\"userId\"];\n        const _userIds = requestParameters[\"userIds\"];\n        const _legalEntityIds = requestParameters[\"legalEntityIds\"];\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _messageSetId = requestParameters[\"messageSetId\"];\n        const _schemaVersions = requestParameters[\"schemaVersions\"];\n        const _userAgents = requestParameters[\"userAgents\"];\n        const _errors = requestParameters[\"errors\"];\n        const _eventMetaDataKey = requestParameters[\"eventMetaDataKey\"];\n        const _eventMetaDataValue = requestParameters[\"eventMetaDataValue\"];\n        const _partialMatchAgainst = requestParameters[\"partialMatchAgainst\"];\n        const _expandToMetaData = requestParameters[\"expandToMetaData\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_eventCategories) {\n            _eventCategories.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventCategories');\n            })\n        }\n        if (_objectType !== undefined && _objectType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_objectType, 'objectType');\n        }\n        if (_objectTypes) {\n            _objectTypes.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'objectTypes');\n            })\n        }\n        if (_eventAction !== undefined && _eventAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventAction, 'eventAction');\n        }\n        if (_eventActions) {\n            _eventActions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventActions');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_ipAddresses) {\n            _ipAddresses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ipAddresses');\n            })\n        }\n        if (_usernames) {\n            _usernames.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'usernames');\n            })\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_userIds) {\n            _userIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userIds');\n            })\n        }\n        if (_legalEntityIds) {\n            _legalEntityIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'legalEntityIds');\n            })\n        }\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_messageSetId !== undefined && _messageSetId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageSetId, 'messageSetId');\n        }\n        if (_schemaVersions) {\n            _schemaVersions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'schemaVersions');\n            })\n        }\n        if (_userAgents) {\n            _userAgents.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userAgents');\n            })\n        }\n        if (_errors) {\n            _errors.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'errors');\n            })\n        }\n        if (_eventMetaDataKey !== undefined && _eventMetaDataKey !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataKey, 'eventMetaDataKey');\n        }\n        if (_eventMetaDataValue !== undefined && _eventMetaDataValue !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataValue, 'eventMetaDataValue');\n        }\n        if (_partialMatchAgainst) {\n            _partialMatchAgainst.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'partialMatchAgainst');\n            })\n        }\n        if (_expandToMetaData) {\n            _expandToMetaData.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'expandToMetaData');\n            })\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<AuditExportGetResponse>(`${this.configuration.basePath}/client-api/v3/audit-log/export`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getStartAsyncExportUrl(requestParameters: GetStartAsyncExportRequestParams): string {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _eventCategories = requestParameters[\"eventCategories\"];\n        const _objectType = requestParameters[\"objectType\"];\n        const _objectTypes = requestParameters[\"objectTypes\"];\n        const _eventAction = requestParameters[\"eventAction\"];\n        const _eventActions = requestParameters[\"eventActions\"];\n        const _status = requestParameters[\"status\"];\n        const _ipAddresses = requestParameters[\"ipAddresses\"];\n        const _usernames = requestParameters[\"usernames\"];\n        const _userId = requestParameters[\"userId\"];\n        const _userIds = requestParameters[\"userIds\"];\n        const _legalEntityIds = requestParameters[\"legalEntityIds\"];\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _messageSetId = requestParameters[\"messageSetId\"];\n        const _schemaVersions = requestParameters[\"schemaVersions\"];\n        const _userAgents = requestParameters[\"userAgents\"];\n        const _errors = requestParameters[\"errors\"];\n        const _eventMetaDataKey = requestParameters[\"eventMetaDataKey\"];\n        const _eventMetaDataValue = requestParameters[\"eventMetaDataValue\"];\n        const _partialMatchAgainst = requestParameters[\"partialMatchAgainst\"];\n        const _expandToMetaData = requestParameters[\"expandToMetaData\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_eventCategories) {\n            _eventCategories.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventCategories');\n            })\n        }\n        if (_objectType !== undefined && _objectType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_objectType, 'objectType');\n        }\n        if (_objectTypes) {\n            _objectTypes.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'objectTypes');\n            })\n        }\n        if (_eventAction !== undefined && _eventAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventAction, 'eventAction');\n        }\n        if (_eventActions) {\n            _eventActions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventActions');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_ipAddresses) {\n            _ipAddresses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ipAddresses');\n            })\n        }\n        if (_usernames) {\n            _usernames.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'usernames');\n            })\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_userIds) {\n            _userIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userIds');\n            })\n        }\n        if (_legalEntityIds) {\n            _legalEntityIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'legalEntityIds');\n            })\n        }\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_messageSetId !== undefined && _messageSetId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageSetId, 'messageSetId');\n        }\n        if (_schemaVersions) {\n            _schemaVersions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'schemaVersions');\n            })\n        }\n        if (_userAgents) {\n            _userAgents.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userAgents');\n            })\n        }\n        if (_errors) {\n            _errors.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'errors');\n            })\n        }\n        if (_eventMetaDataKey !== undefined && _eventMetaDataKey !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataKey, 'eventMetaDataKey');\n        }\n        if (_eventMetaDataValue !== undefined && _eventMetaDataValue !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataValue, 'eventMetaDataValue');\n        }\n        if (_partialMatchAgainst) {\n            _partialMatchAgainst.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'partialMatchAgainst');\n            })\n        }\n        if (_expandToMetaData) {\n            _expandToMetaData.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'expandToMetaData');\n            })\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v3/audit-log/export${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Stored Content\n     * Returns stored content matching the provided content identifier.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStoredContent(requestParameters: GetStoredContentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<string>;\n    /**\n     * Stored Content\n     * Returns stored content matching the provided content identifier.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStoredContent(requestParameters: GetStoredContentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpResponse<string>>;\n    /**\n     * Stored Content\n     * Returns stored content matching the provided content identifier.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStoredContent(requestParameters: GetStoredContentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpEvent<string>>;\n    /**\n     * Stored Content\n     * Returns stored content matching the provided content identifier.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStoredContent(requestParameters: GetStoredContentRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'text/csv'}): Observable<any> {\n        const _contentId = requestParameters[\"contentId\"];\n        if (_contentId === null || _contentId === undefined) {\n            throw new Error('Required parameter contentId was null or undefined when calling getStoredContent.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_contentId !== undefined && _contentId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_contentId, 'contentId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'text/csv'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/client-api/v3/audit-log/stored-content`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getStoredContentUrl(requestParameters: GetStoredContentRequestParams): string {\n        const _contentId = requestParameters[\"contentId\"];\n        if (_contentId === null || _contentId === undefined) {\n            throw new Error('Required parameter contentId was null or undefined when calling getStoredContent.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_contentId !== undefined && _contentId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_contentId, 'contentId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v3/audit-log/stored-content${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v3/audit-log/event-categories URL pattern\n*/\nexport const AuditClientServiceGetAuditEventCategoriesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/event-categories\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"eventCategories\" : [ {\n    \"eventCategory\" : \"Access Control\",\n    \"objectTypes\" : [ {\n      \"objectType\" : \"Data Group\",\n      \"eventActions\" : [ \"Create\", \"Update\", \"Delete\" ]\n    } ]\n  }, {\n    \"eventCategory\" : \"Audit\",\n    \"objectTypes\" : [ {\n      \"objectType\" : \"Audit Log\",\n      \"eventActions\" : [ \"Publish\", \"Read\", \"Export\" ]\n    } ]\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v3/audit-log/messages URL pattern\n*/\nexport const AuditClientServiceGetAuditLogMessagesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/messages\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"totalCount\" : 3,\n  \"auditMessages\" : [ {\n    \"timestamp\" : \"2020-09-24T13:28:57.896Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Initiated\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  }, {\n    \"timestamp\" : \"2020-09-24T13:29:01.549Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Successful\",\n    \"ipAddress\" : \"86.3.123.123\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"legalEntityId\" : \"8ad6818b682e6f3c01682f8536c60198\",\n    \"serviceAgreementId\" : \"8ad6818b682e6f3c01682f85381a0199\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"schemaVersion\" : \"1.2.3\",\n    \"userAgent\" : \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  }, {\n    \"timestamp\" : \"2020-09-24T13:29:01.549Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Failed\",\n    \"ipAddress\" : \"86.3.123.123\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"legalEntityId\" : \"8ad6818b682e6f3c01682f8536c60198\",\n    \"serviceAgreementId\" : \"8ad6818b682e6f3c01682f85381a0199\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"schemaVersion\" : \"1.2.3\",\n    \"userAgent\" : \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\n    \"error\" : \"Cannot update, account 'ABC123' does not exist.\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  } ]\n}\n                },\n                    {\n                    status: 200,\n                    body: \"\\\"timestamp\\\",\\\"eventCategory\\\",\\\"objectType\\\",\\\"eventAction\\\",\\\"eventDescription\\\",\\\"status\\\",\\\"username\\\",\\\"userId\\\",\\\"messageSetId\\\",\\\"eventMetaData__AccountGroup Name\\\",\\\"eventMetaData__Account Added\\\",\\\"ipAddress\\\",\\\"legalEntityId\\\",\\\"serviceAgreementId\\\",\\\"schemaVersion\\\",\\\"userAgent\\\",\\\"error\\\"\\n\\\"2020-09-24T13:28:57.896Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Initiated\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Successful\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Failed\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"Cannot update, account \\'ABC123\\' does not exist.\\\"\"\n                    },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v3/audit-log/legal-entities URL pattern\n*/\nexport const AuditClientServiceGetLegalEntitiesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/legal-entities\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"My Bank\",\n  \"type\" : \"BANK\"\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"type\" : \"CUSTOMER\"\n} ]\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v3/audit-log/export URL pattern\n*/\nexport const AuditClientServiceGetStartAsyncExportMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/export\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"exportId\" : \"a892e1e0-b62c-4e2b-bd24-9e2ad9786ae1\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 429,\n                    body: {\n  \"message\" : \"Too many requests for Async export.\"\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v3/audit-log/stored-content URL pattern\n*/\nexport const AuditClientServiceGetStoredContentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/stored-content\",\n        method: \"GET\",\n        responses: [\n                    {\n                    status: 200,\n                    body: \"\\\"timestamp\\\",\\\"eventCategory\\\",\\\"objectType\\\",\\\"eventAction\\\",\\\"eventDescription\\\",\\\"status\\\",\\\"username\\\",\\\"userId\\\",\\\"messageSetId\\\",\\\"eventMetaData__AccountGroup Name\\\",\\\"eventMetaData__Account Added\\\",\\\"ipAddress\\\",\\\"legalEntityId\\\",\\\"serviceAgreementId\\\",\\\"schemaVersion\\\",\\\"userAgent\\\",\\\"error\\\"\\n\\\"2020-09-24T13:28:57.896Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Initiated\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Successful\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Failed\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"Cannot update, account \\'ABC123\\' does not exist.\\\"\"\n                    },\n    ]\n}]);\n\nexport const AuditClientServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v3/audit-log/event-categories\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"eventCategories\" : [ {\n    \"eventCategory\" : \"Access Control\",\n    \"objectTypes\" : [ {\n      \"objectType\" : \"Data Group\",\n      \"eventActions\" : [ \"Create\", \"Update\", \"Delete\" ]\n    } ]\n  }, {\n    \"eventCategory\" : \"Audit\",\n    \"objectTypes\" : [ {\n      \"objectType\" : \"Audit Log\",\n      \"eventActions\" : [ \"Publish\", \"Read\", \"Export\" ]\n    } ]\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v3/audit-log/messages\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"totalCount\" : 3,\n  \"auditMessages\" : [ {\n    \"timestamp\" : \"2020-09-24T13:28:57.896Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Initiated\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  }, {\n    \"timestamp\" : \"2020-09-24T13:29:01.549Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Successful\",\n    \"ipAddress\" : \"86.3.123.123\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"legalEntityId\" : \"8ad6818b682e6f3c01682f8536c60198\",\n    \"serviceAgreementId\" : \"8ad6818b682e6f3c01682f85381a0199\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"schemaVersion\" : \"1.2.3\",\n    \"userAgent\" : \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  }, {\n    \"timestamp\" : \"2020-09-24T13:29:01.549Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Failed\",\n    \"ipAddress\" : \"86.3.123.123\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"legalEntityId\" : \"8ad6818b682e6f3c01682f8536c60198\",\n    \"serviceAgreementId\" : \"8ad6818b682e6f3c01682f85381a0199\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"schemaVersion\" : \"1.2.3\",\n    \"userAgent\" : \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\n    \"error\" : \"Cannot update, account 'ABC123' does not exist.\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  } ]\n}\n            },\n                {\n                status: 200,\n                body: \"\\\"timestamp\\\",\\\"eventCategory\\\",\\\"objectType\\\",\\\"eventAction\\\",\\\"eventDescription\\\",\\\"status\\\",\\\"username\\\",\\\"userId\\\",\\\"messageSetId\\\",\\\"eventMetaData__AccountGroup Name\\\",\\\"eventMetaData__Account Added\\\",\\\"ipAddress\\\",\\\"legalEntityId\\\",\\\"serviceAgreementId\\\",\\\"schemaVersion\\\",\\\"userAgent\\\",\\\"error\\\"\\n\\\"2020-09-24T13:28:57.896Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Initiated\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Successful\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Failed\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"Cannot update, account \\'ABC123\\' does not exist.\\\"\"\n                },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v3/audit-log/legal-entities\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"My Bank\",\n  \"type\" : \"BANK\"\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"type\" : \"CUSTOMER\"\n} ]\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v3/audit-log/export\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"exportId\" : \"a892e1e0-b62c-4e2b-bd24-9e2ad9786ae1\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 429,\n                body: {\n  \"message\" : \"Too many requests for Async export.\"\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v3/audit-log/stored-content\",\n        method: \"GET\",\n        responses: [\n\n                {\n                status: 200,\n                body: \"\\\"timestamp\\\",\\\"eventCategory\\\",\\\"objectType\\\",\\\"eventAction\\\",\\\"eventDescription\\\",\\\"status\\\",\\\"username\\\",\\\"userId\\\",\\\"messageSetId\\\",\\\"eventMetaData__AccountGroup Name\\\",\\\"eventMetaData__Account Added\\\",\\\"ipAddress\\\",\\\"legalEntityId\\\",\\\"serviceAgreementId\\\",\\\"schemaVersion\\\",\\\"userAgent\\\",\\\"error\\\"\\n\\\"2020-09-24T13:28:57.896Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Initiated\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Successful\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Failed\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"Cannot update, account \\'ABC123\\' does not exist.\\\"\"\n                },\n    ]\n},\n]\n);\n\n\n"],"names":["InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}