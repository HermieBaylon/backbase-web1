{"version":3,"file":"backbase-audit-http-ang.js","sources":["../../model/status.ts","../../model/type.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/auditClient.service.ts","../../api/auditClient.service.mocks.ts"],"sourcesContent":["/**\n * Audit client\n * Store, query, and export audit messages.\n *\n * The version of the OpenAPI document: 3.0.8\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The status of the event.\n */\nexport type Status = 'Initiated' | 'Successful' | 'Failed';\n\nexport const Status = {\n    Initiated: 'Initiated' as Status,\n    Successful: 'Successful' as Status,\n    Failed: 'Failed' as Status\n};\n\n","/**\n * Audit client\n * Store, query, and export audit messages.\n *\n * The version of the OpenAPI document: 3.0.8\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of the legal entity. Bank or Customer.\n */\nexport type Type = 'CUSTOMER' | 'BANK';\n\nexport const Type = {\n    CUSTOMER: 'CUSTOMER' as Type,\n    BANK: 'BANK' as Type\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const AUDIT_BASE_PATH = new InjectionToken<string>('AUDIT_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface AuditConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class AuditConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: AuditConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link AuditConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link AuditConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module AuditConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { AuditConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class AuditApiModule {\n    public static forRoot(configurationFactory: () => AuditConfiguration): ModuleWithProviders<AuditApiModule> {\n        return {\n            ngModule: AuditApiModule,\n            providers: [ { provide: AuditConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: AuditApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: AuditConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('AuditApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Audit client\n * Store, query, and export audit messages.\n *\n * The version of the OpenAPI document: 3.0.8\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { AuditExportGetResponse } from '../model/models';\nimport { AuditMessagesGetResponse } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { EventCategoriesGet } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { LegalEntity } from '../model/models';\nimport { TooManyRequestsError } from '../model/models';\n\nimport { AUDIT_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { AuditConfiguration }                                     from '../configuration';\n\n\nexport interface GetAuditLogMessagesRequestParams {\n    /** Restrict results to audit logs with a timestamp of, or after 00:00 of the supplied date, UTC. */\n    [\"startDate\"]?: string;\n    /** Restrict results to audit logs with a timestamp of, or before 23:59 of the supplied date, UTC. */\n    [\"endDate\"]?: string;\n    /** Restrict results to audit logs with an event category matching any of the supplied values. */\n    [\"eventCategories\"]?: Array<string>;\n    /** Restrict results to audit logs with an event object type matching any of the supplied values. Deprecated. Please use the objectTypes parameter as it offers greater freedom. */\n    [\"objectType\"]?: string;\n    /** Restrict results to audit logs with an event object type matching any of the supplied values. */\n    [\"objectTypes\"]?: Array<string>;\n    /** Restrict results to audit logs with an event action matching any of the supplied values. Deprecated. Please use the eventActions parameter as it offers greater freedom. */\n    [\"eventAction\"]?: string;\n    /** Restrict results to audit logs with an event action matching any of the supplied values. */\n    [\"eventActions\"]?: Array<string>;\n    /** Restrict results to audit logs with a status matching any of the supplied values. */\n    [\"status\"]?: Array<string>;\n    /** Restrict results to audit logs with an IP address matching any of the supplied values. IPv4 format. */\n    [\"ipAddresses\"]?: Array<string>;\n    /** Restrict results to audit logs with a username matching any of the supplied values. */\n    [\"usernames\"]?: Array<string>;\n    /** Restrict results to audit logs with an actor user ID matching any of the supplied values. Deprecated. Please use the userIds parameter as it offers greater freedom. */\n    [\"userId\"]?: string;\n    /** Restrict results to audit logs with an actor user ID matching any of the supplied values. */\n    [\"userIds\"]?: Array<string>;\n    /** Restrict results to audit logs with a legalEntityId matching any of the supplied values. */\n    [\"legalEntityIds\"]?: Array<string>;\n    /** Restrict results to audit logs with a serviceAgreementId matching the supplied value. */\n    [\"serviceAgreementId\"]?: string;\n    /** Restrict results to audit logs with a message set ID matching the supplied value. */\n    [\"messageSetId\"]?: string;\n    /** Restrict results to audit logs with a schemaVersion matching any of the supplied values. Deprecated. Support for this parameter is incomplete. */\n    [\"schemaVersions\"]?: Array<string>;\n    /** Restrict results to audit logs with a user agent matching any of the supplied values. */\n    [\"userAgents\"]?: Array<string>;\n    /** Restrict results to audit logs with an error matching any of the supplied values. */\n    [\"errors\"]?: Array<string>;\n    /** Restrict results to audit records with a metadata key matching the supplied value. */\n    [\"eventMetaDataKey\"]?: string;\n    /** Restrict results to audit records with a metadata value matching that which is supplied. May only be used in conjunction with the eventMetaDataKey parameter. */\n    [\"eventMetaDataValue\"]?: string;\n    /** Apply partial matching against the provided fields: \\&quot;eventCategory\\&quot;, \\&quot;objectType\\&quot;, \\&quot;eventAction\\&quot;, \\&quot;username\\&quot;, \\&quot;userId\\&quot;, \\&quot;legalEntityId\\&quot;, \\&quot;serviceAgreementId\\&quot;, \\&quot;messageSetId\\&quot;, \\&quot;schemaVersion\\&quot;, \\&quot;userAgent\\&quot;, \\&quot;error\\&quot;, \\&quot;eventMetaDataValue\\&quot;.  */\n    [\"partialMatchAgainst\"]?: Array<string>;\n    /** Expand searching to any associated meta data values for the following fields: \\&quot;userId\\&quot;  */\n    [\"expandToMetaData\"]?: Array<string>;\n    /** Specifies the number of pages to skip. A value of 0 gives the starting page. Page size is goverened by the size parameter. */\n    [\"from\"]?: number;\n    /** Limits the number of audit records returned in the response. */\n    [\"size\"]?: number;\n    /** Sorts the results by one of the following fields: \\&quot;eventCategory\\&quot;, \\&quot;objectType\\&quot;, \\&quot;eventAction\\&quot;, \\&quot;username\\&quot;, \\&quot;userId\\&quot;, \\&quot;timestamp\\&quot;, \\&quot;eventDescription\\&quot;, \\&quot;legalEntityId\\&quot;, \\&quot;serviceAgreementId\\&quot;, \\&quot;messageSetId\\&quot;.  */\n    [\"orderBy\"]?: string;\n    /** Sorts the results in asceding (ASC) or descending (DESC) order. */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\nexport interface GetLegalEntitiesRequestParams {\n    /** Restrict results to legal entities whose name contains the supplied values. */\n    [\"query\"]?: string;\n    /** Specifies the number of pages to skip. A value of 0 gives the starting page. Page size is goverened by the size parameter. */\n    [\"from\"]?: number;\n    /** Used as an alternative for specifying \\&#39;from\\&#39;. The audit record ID proveded acts as the starting point for the retreived data. */\n    [\"cursor\"]?: string;\n    /** Limits the number of legal entities returned in the response. */\n    [\"size\"]?: number;\n}\n\nexport interface GetStartAsyncExportRequestParams {\n    /** Restrict results to audit logs with a timestamp of, or after 00:00 of the supplied date, UTC. */\n    [\"startDate\"]?: string;\n    /** Restrict results to audit logs with a timestamp of, or before 23:59 of the supplied date, UTC. */\n    [\"endDate\"]?: string;\n    /** Restrict results to audit logs with an event category matching any of the supplied values. */\n    [\"eventCategories\"]?: Array<string>;\n    /** Restrict results to audit logs with an event object type matching any of the supplied values. Deprecated. Please use the objectTypes parameter as it offers greater freedom. */\n    [\"objectType\"]?: string;\n    /** Restrict results to audit logs with an event object type matching any of the supplied values. */\n    [\"objectTypes\"]?: Array<string>;\n    /** Restrict results to audit logs with an event action matching any of the supplied values. Deprecated. Please use the eventActions parameter as it offers greater freedom. */\n    [\"eventAction\"]?: string;\n    /** Restrict results to audit logs with an event action matching any of the supplied values. */\n    [\"eventActions\"]?: Array<string>;\n    /** Restrict results to audit logs with a status matching any of the supplied values. */\n    [\"status\"]?: Array<string>;\n    /** Restrict results to audit logs with an IP address matching any of the supplied values. IPv4 format. */\n    [\"ipAddresses\"]?: Array<string>;\n    /** Restrict results to audit logs with a username matching any of the supplied values. */\n    [\"usernames\"]?: Array<string>;\n    /** Restrict results to audit logs with an actor user ID matching any of the supplied values. Deprecated. Please use the userIds parameter as it offers greater freedom. */\n    [\"userId\"]?: string;\n    /** Restrict results to audit logs with an actor user ID matching any of the supplied values. */\n    [\"userIds\"]?: Array<string>;\n    /** Restrict results to audit logs with a legalEntityId matching any of the supplied values. */\n    [\"legalEntityIds\"]?: Array<string>;\n    /** Restrict results to audit logs with a serviceAgreementId matching the supplied value. */\n    [\"serviceAgreementId\"]?: string;\n    /** Restrict results to audit logs with a message set ID matching the supplied value. */\n    [\"messageSetId\"]?: string;\n    /** Restrict results to audit logs with a schemaVersion matching any of the supplied values. Deprecated. Support for this parameter is incomplete. */\n    [\"schemaVersions\"]?: Array<string>;\n    /** Restrict results to audit logs with a user agent matching any of the supplied values. */\n    [\"userAgents\"]?: Array<string>;\n    /** Restrict results to audit logs with an error matching any of the supplied values. */\n    [\"errors\"]?: Array<string>;\n    /** Restrict results to audit records with a metadata key matching the supplied value. */\n    [\"eventMetaDataKey\"]?: string;\n    /** Restrict results to audit records with a metadata value matching that which is supplied. May only be used in conjunction with the eventMetaDataKey parameter. */\n    [\"eventMetaDataValue\"]?: string;\n    /** Apply partial matching against the provided fields: \\&quot;eventCategory\\&quot;, \\&quot;objectType\\&quot;, \\&quot;eventAction\\&quot;, \\&quot;username\\&quot;, \\&quot;userId\\&quot;, \\&quot;legalEntityId\\&quot;, \\&quot;serviceAgreementId\\&quot;, \\&quot;messageSetId\\&quot;, \\&quot;schemaVersion\\&quot;, \\&quot;userAgent\\&quot;, \\&quot;error\\&quot;, \\&quot;eventMetaDataValue\\&quot;.  */\n    [\"partialMatchAgainst\"]?: Array<string>;\n    /** Expand searching to any associated meta data values for the following fields: \\&quot;userId\\&quot;  */\n    [\"expandToMetaData\"]?: Array<string>;\n    /** Specifies the number of pages to skip. A value of 0 gives the starting page. Page size is goverened by the size parameter. */\n    [\"from\"]?: number;\n    /** Limits the number of audit records returned in the response. */\n    [\"size\"]?: number;\n    /** Sorts the results by one of the following fields: \\&quot;eventCategory\\&quot;, \\&quot;objectType\\&quot;, \\&quot;eventAction\\&quot;, \\&quot;username\\&quot;, \\&quot;userId\\&quot;, \\&quot;timestamp\\&quot;, \\&quot;eventDescription\\&quot;, \\&quot;legalEntityId\\&quot;, \\&quot;serviceAgreementId\\&quot;, \\&quot;messageSetId\\&quot;.  */\n    [\"orderBy\"]?: string;\n    /** Sorts the results in asceding (ASC) or descending (DESC) order. */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\nexport interface GetStoredContentRequestParams {\n    /** Restrict results to content with an identifier matching the supplied value. */\n    [\"contentId\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuditClientService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new AuditConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(AUDIT_BASE_PATH) basePath: string, @Optional() configuration: AuditConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Get event categories\n     * Returns a list of all unique event categories, including their child object types and event actions.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditEventCategories(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EventCategoriesGet>;\n    /**\n     * Get event categories\n     * Returns a list of all unique event categories, including their child object types and event actions.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditEventCategories(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EventCategoriesGet>>;\n    /**\n     * Get event categories\n     * Returns a list of all unique event categories, including their child object types and event actions.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditEventCategories(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EventCategoriesGet>>;\n    /**\n     * Get event categories\n     * Returns a list of all unique event categories, including their child object types and event actions.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditEventCategories(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EventCategoriesGet>(`${this.configuration.basePath}/client-api/v3/audit-log/event-categories`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAuditEventCategoriesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v3/audit-log/event-categories`;\n    }\n\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<AuditMessagesGetResponse>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<AuditMessagesGetResponse>>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<AuditMessagesGetResponse>>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<string>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpResponse<string>>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpEvent<string>>;\n    /**\n     * Get audit messages\n     * Returns all audit messages which pass the provided filters. Supports pagination. CSV format is available.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuditLogMessages(requestParameters: GetAuditLogMessagesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'text/csv'}): Observable<any> {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _eventCategories = requestParameters[\"eventCategories\"];\n        const _objectType = requestParameters[\"objectType\"];\n        const _objectTypes = requestParameters[\"objectTypes\"];\n        const _eventAction = requestParameters[\"eventAction\"];\n        const _eventActions = requestParameters[\"eventActions\"];\n        const _status = requestParameters[\"status\"];\n        const _ipAddresses = requestParameters[\"ipAddresses\"];\n        const _usernames = requestParameters[\"usernames\"];\n        const _userId = requestParameters[\"userId\"];\n        const _userIds = requestParameters[\"userIds\"];\n        const _legalEntityIds = requestParameters[\"legalEntityIds\"];\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _messageSetId = requestParameters[\"messageSetId\"];\n        const _schemaVersions = requestParameters[\"schemaVersions\"];\n        const _userAgents = requestParameters[\"userAgents\"];\n        const _errors = requestParameters[\"errors\"];\n        const _eventMetaDataKey = requestParameters[\"eventMetaDataKey\"];\n        const _eventMetaDataValue = requestParameters[\"eventMetaDataValue\"];\n        const _partialMatchAgainst = requestParameters[\"partialMatchAgainst\"];\n        const _expandToMetaData = requestParameters[\"expandToMetaData\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_eventCategories) {\n            _eventCategories.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventCategories');\n            })\n        }\n        if (_objectType !== undefined && _objectType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_objectType, 'objectType');\n        }\n        if (_objectTypes) {\n            _objectTypes.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'objectTypes');\n            })\n        }\n        if (_eventAction !== undefined && _eventAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventAction, 'eventAction');\n        }\n        if (_eventActions) {\n            _eventActions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventActions');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_ipAddresses) {\n            _ipAddresses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ipAddresses');\n            })\n        }\n        if (_usernames) {\n            _usernames.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'usernames');\n            })\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_userIds) {\n            _userIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userIds');\n            })\n        }\n        if (_legalEntityIds) {\n            _legalEntityIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'legalEntityIds');\n            })\n        }\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_messageSetId !== undefined && _messageSetId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageSetId, 'messageSetId');\n        }\n        if (_schemaVersions) {\n            _schemaVersions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'schemaVersions');\n            })\n        }\n        if (_userAgents) {\n            _userAgents.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userAgents');\n            })\n        }\n        if (_errors) {\n            _errors.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'errors');\n            })\n        }\n        if (_eventMetaDataKey !== undefined && _eventMetaDataKey !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataKey, 'eventMetaDataKey');\n        }\n        if (_eventMetaDataValue !== undefined && _eventMetaDataValue !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataValue, 'eventMetaDataValue');\n        }\n        if (_partialMatchAgainst) {\n            _partialMatchAgainst.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'partialMatchAgainst');\n            })\n        }\n        if (_expandToMetaData) {\n            _expandToMetaData.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'expandToMetaData');\n            })\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'text/csv'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<AuditMessagesGetResponse>(`${this.configuration.basePath}/client-api/v3/audit-log/messages`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAuditLogMessagesUrl(requestParameters: GetAuditLogMessagesRequestParams): string {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _eventCategories = requestParameters[\"eventCategories\"];\n        const _objectType = requestParameters[\"objectType\"];\n        const _objectTypes = requestParameters[\"objectTypes\"];\n        const _eventAction = requestParameters[\"eventAction\"];\n        const _eventActions = requestParameters[\"eventActions\"];\n        const _status = requestParameters[\"status\"];\n        const _ipAddresses = requestParameters[\"ipAddresses\"];\n        const _usernames = requestParameters[\"usernames\"];\n        const _userId = requestParameters[\"userId\"];\n        const _userIds = requestParameters[\"userIds\"];\n        const _legalEntityIds = requestParameters[\"legalEntityIds\"];\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _messageSetId = requestParameters[\"messageSetId\"];\n        const _schemaVersions = requestParameters[\"schemaVersions\"];\n        const _userAgents = requestParameters[\"userAgents\"];\n        const _errors = requestParameters[\"errors\"];\n        const _eventMetaDataKey = requestParameters[\"eventMetaDataKey\"];\n        const _eventMetaDataValue = requestParameters[\"eventMetaDataValue\"];\n        const _partialMatchAgainst = requestParameters[\"partialMatchAgainst\"];\n        const _expandToMetaData = requestParameters[\"expandToMetaData\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_eventCategories) {\n            _eventCategories.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventCategories');\n            })\n        }\n        if (_objectType !== undefined && _objectType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_objectType, 'objectType');\n        }\n        if (_objectTypes) {\n            _objectTypes.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'objectTypes');\n            })\n        }\n        if (_eventAction !== undefined && _eventAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventAction, 'eventAction');\n        }\n        if (_eventActions) {\n            _eventActions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventActions');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_ipAddresses) {\n            _ipAddresses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ipAddresses');\n            })\n        }\n        if (_usernames) {\n            _usernames.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'usernames');\n            })\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_userIds) {\n            _userIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userIds');\n            })\n        }\n        if (_legalEntityIds) {\n            _legalEntityIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'legalEntityIds');\n            })\n        }\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_messageSetId !== undefined && _messageSetId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageSetId, 'messageSetId');\n        }\n        if (_schemaVersions) {\n            _schemaVersions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'schemaVersions');\n            })\n        }\n        if (_userAgents) {\n            _userAgents.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userAgents');\n            })\n        }\n        if (_errors) {\n            _errors.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'errors');\n            })\n        }\n        if (_eventMetaDataKey !== undefined && _eventMetaDataKey !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataKey, 'eventMetaDataKey');\n        }\n        if (_eventMetaDataValue !== undefined && _eventMetaDataValue !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataValue, 'eventMetaDataValue');\n        }\n        if (_partialMatchAgainst) {\n            _partialMatchAgainst.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'partialMatchAgainst');\n            })\n        }\n        if (_expandToMetaData) {\n            _expandToMetaData.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'expandToMetaData');\n            })\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v3/audit-log/messages${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Get legal entities\n     * Returns a list of legal entites whose name contain the provided search string.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LegalEntity>>;\n    /**\n     * Get legal entities\n     * Returns a list of legal entites whose name contain the provided search string.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LegalEntity>>>;\n    /**\n     * Get legal entities\n     * Returns a list of legal entites whose name contain the provided search string.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LegalEntity>>>;\n    /**\n     * Get legal entities\n     * Returns a list of legal entites whose name contain the provided search string.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntities(requestParameters: GetLegalEntitiesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<LegalEntity>>(`${this.configuration.basePath}/client-api/v3/audit-log/legal-entities`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLegalEntitiesUrl(requestParameters: GetLegalEntitiesRequestParams): string {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v3/audit-log/legal-entities${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Start Async Export\n     * Start an asynchronous process of creating a CSV file containing audit messages which pass the provided filters. The user will be notified upon completion and given an exportId with which to fetch the content.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStartAsyncExport(requestParameters: GetStartAsyncExportRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<AuditExportGetResponse>;\n    /**\n     * Start Async Export\n     * Start an asynchronous process of creating a CSV file containing audit messages which pass the provided filters. The user will be notified upon completion and given an exportId with which to fetch the content.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStartAsyncExport(requestParameters: GetStartAsyncExportRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<AuditExportGetResponse>>;\n    /**\n     * Start Async Export\n     * Start an asynchronous process of creating a CSV file containing audit messages which pass the provided filters. The user will be notified upon completion and given an exportId with which to fetch the content.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStartAsyncExport(requestParameters: GetStartAsyncExportRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<AuditExportGetResponse>>;\n    /**\n     * Start Async Export\n     * Start an asynchronous process of creating a CSV file containing audit messages which pass the provided filters. The user will be notified upon completion and given an exportId with which to fetch the content.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStartAsyncExport(requestParameters: GetStartAsyncExportRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _eventCategories = requestParameters[\"eventCategories\"];\n        const _objectType = requestParameters[\"objectType\"];\n        const _objectTypes = requestParameters[\"objectTypes\"];\n        const _eventAction = requestParameters[\"eventAction\"];\n        const _eventActions = requestParameters[\"eventActions\"];\n        const _status = requestParameters[\"status\"];\n        const _ipAddresses = requestParameters[\"ipAddresses\"];\n        const _usernames = requestParameters[\"usernames\"];\n        const _userId = requestParameters[\"userId\"];\n        const _userIds = requestParameters[\"userIds\"];\n        const _legalEntityIds = requestParameters[\"legalEntityIds\"];\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _messageSetId = requestParameters[\"messageSetId\"];\n        const _schemaVersions = requestParameters[\"schemaVersions\"];\n        const _userAgents = requestParameters[\"userAgents\"];\n        const _errors = requestParameters[\"errors\"];\n        const _eventMetaDataKey = requestParameters[\"eventMetaDataKey\"];\n        const _eventMetaDataValue = requestParameters[\"eventMetaDataValue\"];\n        const _partialMatchAgainst = requestParameters[\"partialMatchAgainst\"];\n        const _expandToMetaData = requestParameters[\"expandToMetaData\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_eventCategories) {\n            _eventCategories.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventCategories');\n            })\n        }\n        if (_objectType !== undefined && _objectType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_objectType, 'objectType');\n        }\n        if (_objectTypes) {\n            _objectTypes.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'objectTypes');\n            })\n        }\n        if (_eventAction !== undefined && _eventAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventAction, 'eventAction');\n        }\n        if (_eventActions) {\n            _eventActions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventActions');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_ipAddresses) {\n            _ipAddresses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ipAddresses');\n            })\n        }\n        if (_usernames) {\n            _usernames.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'usernames');\n            })\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_userIds) {\n            _userIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userIds');\n            })\n        }\n        if (_legalEntityIds) {\n            _legalEntityIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'legalEntityIds');\n            })\n        }\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_messageSetId !== undefined && _messageSetId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageSetId, 'messageSetId');\n        }\n        if (_schemaVersions) {\n            _schemaVersions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'schemaVersions');\n            })\n        }\n        if (_userAgents) {\n            _userAgents.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userAgents');\n            })\n        }\n        if (_errors) {\n            _errors.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'errors');\n            })\n        }\n        if (_eventMetaDataKey !== undefined && _eventMetaDataKey !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataKey, 'eventMetaDataKey');\n        }\n        if (_eventMetaDataValue !== undefined && _eventMetaDataValue !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataValue, 'eventMetaDataValue');\n        }\n        if (_partialMatchAgainst) {\n            _partialMatchAgainst.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'partialMatchAgainst');\n            })\n        }\n        if (_expandToMetaData) {\n            _expandToMetaData.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'expandToMetaData');\n            })\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<AuditExportGetResponse>(`${this.configuration.basePath}/client-api/v3/audit-log/export`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getStartAsyncExportUrl(requestParameters: GetStartAsyncExportRequestParams): string {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _eventCategories = requestParameters[\"eventCategories\"];\n        const _objectType = requestParameters[\"objectType\"];\n        const _objectTypes = requestParameters[\"objectTypes\"];\n        const _eventAction = requestParameters[\"eventAction\"];\n        const _eventActions = requestParameters[\"eventActions\"];\n        const _status = requestParameters[\"status\"];\n        const _ipAddresses = requestParameters[\"ipAddresses\"];\n        const _usernames = requestParameters[\"usernames\"];\n        const _userId = requestParameters[\"userId\"];\n        const _userIds = requestParameters[\"userIds\"];\n        const _legalEntityIds = requestParameters[\"legalEntityIds\"];\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _messageSetId = requestParameters[\"messageSetId\"];\n        const _schemaVersions = requestParameters[\"schemaVersions\"];\n        const _userAgents = requestParameters[\"userAgents\"];\n        const _errors = requestParameters[\"errors\"];\n        const _eventMetaDataKey = requestParameters[\"eventMetaDataKey\"];\n        const _eventMetaDataValue = requestParameters[\"eventMetaDataValue\"];\n        const _partialMatchAgainst = requestParameters[\"partialMatchAgainst\"];\n        const _expandToMetaData = requestParameters[\"expandToMetaData\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_eventCategories) {\n            _eventCategories.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventCategories');\n            })\n        }\n        if (_objectType !== undefined && _objectType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_objectType, 'objectType');\n        }\n        if (_objectTypes) {\n            _objectTypes.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'objectTypes');\n            })\n        }\n        if (_eventAction !== undefined && _eventAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventAction, 'eventAction');\n        }\n        if (_eventActions) {\n            _eventActions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'eventActions');\n            })\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'status');\n            })\n        }\n        if (_ipAddresses) {\n            _ipAddresses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ipAddresses');\n            })\n        }\n        if (_usernames) {\n            _usernames.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'usernames');\n            })\n        }\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_userIds) {\n            _userIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userIds');\n            })\n        }\n        if (_legalEntityIds) {\n            _legalEntityIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'legalEntityIds');\n            })\n        }\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_messageSetId !== undefined && _messageSetId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageSetId, 'messageSetId');\n        }\n        if (_schemaVersions) {\n            _schemaVersions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'schemaVersions');\n            })\n        }\n        if (_userAgents) {\n            _userAgents.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'userAgents');\n            })\n        }\n        if (_errors) {\n            _errors.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'errors');\n            })\n        }\n        if (_eventMetaDataKey !== undefined && _eventMetaDataKey !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataKey, 'eventMetaDataKey');\n        }\n        if (_eventMetaDataValue !== undefined && _eventMetaDataValue !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_eventMetaDataValue, 'eventMetaDataValue');\n        }\n        if (_partialMatchAgainst) {\n            _partialMatchAgainst.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'partialMatchAgainst');\n            })\n        }\n        if (_expandToMetaData) {\n            _expandToMetaData.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'expandToMetaData');\n            })\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v3/audit-log/export${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Stored Content\n     * Returns stored content matching the provided content identifier.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStoredContent(requestParameters: GetStoredContentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<string>;\n    /**\n     * Stored Content\n     * Returns stored content matching the provided content identifier.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStoredContent(requestParameters: GetStoredContentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpResponse<string>>;\n    /**\n     * Stored Content\n     * Returns stored content matching the provided content identifier.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStoredContent(requestParameters: GetStoredContentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpEvent<string>>;\n    /**\n     * Stored Content\n     * Returns stored content matching the provided content identifier.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStoredContent(requestParameters: GetStoredContentRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'text/csv'}): Observable<any> {\n        const _contentId = requestParameters[\"contentId\"];\n        if (_contentId === null || _contentId === undefined) {\n            throw new Error('Required parameter contentId was null or undefined when calling getStoredContent.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_contentId !== undefined && _contentId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_contentId, 'contentId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'text/csv'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/client-api/v3/audit-log/stored-content`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getStoredContentUrl(requestParameters: GetStoredContentRequestParams): string {\n        const _contentId = requestParameters[\"contentId\"];\n        if (_contentId === null || _contentId === undefined) {\n            throw new Error('Required parameter contentId was null or undefined when calling getStoredContent.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_contentId !== undefined && _contentId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_contentId, 'contentId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v3/audit-log/stored-content${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v3/audit-log/event-categories URL pattern\n*/\nexport const AuditClientServiceGetAuditEventCategoriesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/event-categories\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"eventCategories\" : [ {\n    \"eventCategory\" : \"Access Control\",\n    \"objectTypes\" : [ {\n      \"objectType\" : \"Data Group\",\n      \"eventActions\" : [ \"Create\", \"Update\", \"Delete\" ]\n    } ]\n  }, {\n    \"eventCategory\" : \"Audit\",\n    \"objectTypes\" : [ {\n      \"objectType\" : \"Audit Log\",\n      \"eventActions\" : [ \"Publish\", \"Read\", \"Export\" ]\n    } ]\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v3/audit-log/messages URL pattern\n*/\nexport const AuditClientServiceGetAuditLogMessagesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/messages\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"totalCount\" : 3,\n  \"auditMessages\" : [ {\n    \"timestamp\" : \"2020-09-24T13:28:57.896Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Initiated\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  }, {\n    \"timestamp\" : \"2020-09-24T13:29:01.549Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Successful\",\n    \"ipAddress\" : \"86.3.123.123\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"legalEntityId\" : \"8ad6818b682e6f3c01682f8536c60198\",\n    \"serviceAgreementId\" : \"8ad6818b682e6f3c01682f85381a0199\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"schemaVersion\" : \"1.2.3\",\n    \"userAgent\" : \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  }, {\n    \"timestamp\" : \"2020-09-24T13:29:01.549Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Failed\",\n    \"ipAddress\" : \"86.3.123.123\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"legalEntityId\" : \"8ad6818b682e6f3c01682f8536c60198\",\n    \"serviceAgreementId\" : \"8ad6818b682e6f3c01682f85381a0199\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"schemaVersion\" : \"1.2.3\",\n    \"userAgent\" : \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\n    \"error\" : \"Cannot update, account 'ABC123' does not exist.\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  } ]\n}\n                },\n                    {\n                    status: 200,\n                    body: \"\\\"timestamp\\\",\\\"eventCategory\\\",\\\"objectType\\\",\\\"eventAction\\\",\\\"eventDescription\\\",\\\"status\\\",\\\"username\\\",\\\"userId\\\",\\\"messageSetId\\\",\\\"eventMetaData__AccountGroup Name\\\",\\\"eventMetaData__Account Added\\\",\\\"ipAddress\\\",\\\"legalEntityId\\\",\\\"serviceAgreementId\\\",\\\"schemaVersion\\\",\\\"userAgent\\\",\\\"error\\\"\\n\\\"2020-09-24T13:28:57.896Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Initiated\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Successful\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Failed\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"Cannot update, account \\'ABC123\\' does not exist.\\\"\"\n                    },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v3/audit-log/legal-entities URL pattern\n*/\nexport const AuditClientServiceGetLegalEntitiesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/legal-entities\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"My Bank\",\n  \"type\" : \"BANK\"\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"type\" : \"CUSTOMER\"\n} ]\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v3/audit-log/export URL pattern\n*/\nexport const AuditClientServiceGetStartAsyncExportMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/export\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"exportId\" : \"a892e1e0-b62c-4e2b-bd24-9e2ad9786ae1\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 429,\n                    body: {\n  \"message\" : \"Too many requests for Async export.\"\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v3/audit-log/stored-content URL pattern\n*/\nexport const AuditClientServiceGetStoredContentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v3/audit-log/stored-content\",\n        method: \"GET\",\n        responses: [\n                    {\n                    status: 200,\n                    body: \"\\\"timestamp\\\",\\\"eventCategory\\\",\\\"objectType\\\",\\\"eventAction\\\",\\\"eventDescription\\\",\\\"status\\\",\\\"username\\\",\\\"userId\\\",\\\"messageSetId\\\",\\\"eventMetaData__AccountGroup Name\\\",\\\"eventMetaData__Account Added\\\",\\\"ipAddress\\\",\\\"legalEntityId\\\",\\\"serviceAgreementId\\\",\\\"schemaVersion\\\",\\\"userAgent\\\",\\\"error\\\"\\n\\\"2020-09-24T13:28:57.896Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Initiated\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Successful\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Failed\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"Cannot update, account \\'ABC123\\' does not exist.\\\"\"\n                    },\n    ]\n}]);\n\nexport const AuditClientServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v3/audit-log/event-categories\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"eventCategories\" : [ {\n    \"eventCategory\" : \"Access Control\",\n    \"objectTypes\" : [ {\n      \"objectType\" : \"Data Group\",\n      \"eventActions\" : [ \"Create\", \"Update\", \"Delete\" ]\n    } ]\n  }, {\n    \"eventCategory\" : \"Audit\",\n    \"objectTypes\" : [ {\n      \"objectType\" : \"Audit Log\",\n      \"eventActions\" : [ \"Publish\", \"Read\", \"Export\" ]\n    } ]\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v3/audit-log/messages\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"totalCount\" : 3,\n  \"auditMessages\" : [ {\n    \"timestamp\" : \"2020-09-24T13:28:57.896Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Initiated\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  }, {\n    \"timestamp\" : \"2020-09-24T13:29:01.549Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Successful\",\n    \"ipAddress\" : \"86.3.123.123\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"legalEntityId\" : \"8ad6818b682e6f3c01682f8536c60198\",\n    \"serviceAgreementId\" : \"8ad6818b682e6f3c01682f85381a0199\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"schemaVersion\" : \"1.2.3\",\n    \"userAgent\" : \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  }, {\n    \"timestamp\" : \"2020-09-24T13:29:01.549Z\",\n    \"eventCategory\" : \"Access Control\",\n    \"objectType\" : \"Data Group\",\n    \"eventAction\" : \"Update\",\n    \"eventDescription\" : \"JBloggs changed Account Group 'MyAccountGroup'. Added account: ABC123\",\n    \"status\" : \"Failed\",\n    \"ipAddress\" : \"86.3.123.123\",\n    \"username\" : \"JBloggs\",\n    \"userId\" : \"8ad6818b682e6e7201682f853a8f0002\",\n    \"legalEntityId\" : \"8ad6818b682e6f3c01682f8536c60198\",\n    \"serviceAgreementId\" : \"8ad6818b682e6f3c01682f85381a0199\",\n    \"messageSetId\" : \"8ab2b95874742cc201748cf9a8a106768305\",\n    \"schemaVersion\" : \"1.2.3\",\n    \"userAgent\" : \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\n    \"error\" : \"Cannot update, account 'ABC123' does not exist.\",\n    \"eventMetaData\" : {\n      \"AccountGroup Name\" : \"MyAccountGroup\",\n      \"Account Added\" : \"ABC123\"\n    }\n  } ]\n}\n            },\n                {\n                status: 200,\n                body: \"\\\"timestamp\\\",\\\"eventCategory\\\",\\\"objectType\\\",\\\"eventAction\\\",\\\"eventDescription\\\",\\\"status\\\",\\\"username\\\",\\\"userId\\\",\\\"messageSetId\\\",\\\"eventMetaData__AccountGroup Name\\\",\\\"eventMetaData__Account Added\\\",\\\"ipAddress\\\",\\\"legalEntityId\\\",\\\"serviceAgreementId\\\",\\\"schemaVersion\\\",\\\"userAgent\\\",\\\"error\\\"\\n\\\"2020-09-24T13:28:57.896Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Initiated\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Successful\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Failed\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"Cannot update, account \\'ABC123\\' does not exist.\\\"\"\n                },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v3/audit-log/legal-entities\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"externalId\" : \"Bank\",\n  \"name\" : \"My Bank\",\n  \"type\" : \"BANK\"\n}, {\n  \"id\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"externalId\" : \"Backbase Cardiff\",\n  \"name\" : \"Backbase Cardiff\",\n  \"type\" : \"CUSTOMER\"\n} ]\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v3/audit-log/export\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"exportId\" : \"a892e1e0-b62c-4e2b-bd24-9e2ad9786ae1\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 429,\n                body: {\n  \"message\" : \"Too many requests for Async export.\"\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v3/audit-log/stored-content\",\n        method: \"GET\",\n        responses: [\n\n                {\n                status: 200,\n                body: \"\\\"timestamp\\\",\\\"eventCategory\\\",\\\"objectType\\\",\\\"eventAction\\\",\\\"eventDescription\\\",\\\"status\\\",\\\"username\\\",\\\"userId\\\",\\\"messageSetId\\\",\\\"eventMetaData__AccountGroup Name\\\",\\\"eventMetaData__Account Added\\\",\\\"ipAddress\\\",\\\"legalEntityId\\\",\\\"serviceAgreementId\\\",\\\"schemaVersion\\\",\\\"userAgent\\\",\\\"error\\\"\\n\\\"2020-09-24T13:28:57.896Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Initiated\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Successful\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"\\\"\\n\\\"2020-09-24T13:29:01.549Z\\\",\\\"Access Control\\\",\\\"Data Group\\\",\\\"Update\\\",\\\"JBloggs changed Account Group \\'MyAccountGroup\\'. Added account: ABC123\\\",\\\"Failed\\\",\\\"JBloggs\\\",\\\"8ad6818b682e6e7201682f853a8f0002\\\",\\\"8ab2b95874742cc201748cf9a8a106768305\\\",\\\"MyAccountGroup\\\",\\\"ABC123\\\",\\\"86.3.123.123\\\",\\\"8ad6818b682e6f3c01682f8536c60198\\\",\\\"8ad6818b682e6f3c01682f85381a0199\\\",\\\"1.2.3\\\",\\\"Mozilla\\/5.0 (X11; Linux x86_64) AppleWebKit\\/537.36 (KHTML, like Gecko) Chrome\\/77.0.3865.90 Safari\\/537.36\\\",\\\"Cannot update, account \\'ABC123\\' does not exist.\\\"\"\n                },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":"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"}