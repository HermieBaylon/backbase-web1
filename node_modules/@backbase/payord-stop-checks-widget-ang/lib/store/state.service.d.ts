import { BehaviorSubject, Subject } from 'rxjs';
import { ActionPayload, InitialState } from '../models/types';
import { NavigationService } from '../services/navigation.service';
import * as i0 from "@angular/core";
export declare class StateService {
    private readonly navigationService;
    readonly store: BehaviorSubject<InitialState>;
    eventDispatcher: Subject<ActionPayload>;
    constructor(navigationService: NavigationService);
    initStopCheckRequest(): void;
    sendStopRequestToReview(data: InitialState['requestInfo']): void;
    markStopRequestAsSubmitted(data: InitialState['requestInfo']): void;
    sendStopRequestToEdit(data: InitialState['requestInfo']): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<StateService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<StateService>;
}
