import { OnDestroy, TemplateRef } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { StopChecksPreferencesService } from '../../services/stop-checks-preferences.service';
import { InitialState, StopCheckRequestInfo } from '../../models/types';
import { ApiHttpService } from '../../services/data.service';
import { StateService } from '../../store/state.service';
import { NotificationService } from '@backbase/ui-ang/notification';
import * as i0 from "@angular/core";
export declare class ReviewContainerComponent implements OnDestroy {
    private readonly stateService;
    private readonly apiHttpService;
    private readonly stopChecksPreferencesService;
    private readonly notificationService;
    private readonly gc$;
    private notificationDismissTimeout;
    constructor(stateService: StateService, apiHttpService: ApiHttpService, stopChecksPreferencesService: StopChecksPreferencesService, notificationService: NotificationService);
    successNotificationHeader: TemplateRef<any>;
    successNotificationMessage: TemplateRef<any>;
    failureNotificationHeader: TemplateRef<any>;
    failureNotificationMessage: TemplateRef<any>;
    isStopRequestSubmitted$: BehaviorSubject<boolean>;
    requestInfo$: Observable<InitialState['requestInfo']>;
    hasErrorOnSubmit$: BehaviorSubject<boolean>;
    private showNotification;
    private responseHandler;
    discardStopRequest(): void;
    submitStopRequest(requestInfo: StopCheckRequestInfo): void;
    markStopRequestAsSubmitted(requestInfo: StopCheckRequestInfo): void;
    editStopRequest(requestInfo: StopCheckRequestInfo): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ReviewContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ReviewContainerComponent, "bb-review-container", never, {}, {}, never, never>;
}
