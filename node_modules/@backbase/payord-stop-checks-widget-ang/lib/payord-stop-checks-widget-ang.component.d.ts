import { OnInit, EventEmitter, OnDestroy } from '@angular/core';
import { NavigationService } from './services/navigation.service';
import { StateService } from './store/state.service';
import { StopChecksPreferencesService } from './services/stop-checks-preferences.service';
import * as i0 from "@angular/core";
export declare class PayordStopChecksWidgetAngComponent implements OnInit, OnDestroy {
    private readonly stateService;
    private readonly navigationService;
    private readonly stopChecksConfigService;
    /**
     * Trigger navigation for list view widget on submit
     */
    navigateOnSubmit: EventEmitter<any>;
    /**
     * Access control resource
     */
    set resourceName(value: string);
    /**
     * Access control business function
     */
    set businessFunction(value: string);
    /**
     * Access control privilege
     */
    set privilege(value: string);
    /**
     * Number of seconds to dismiss the notification
     */
    set notificationDismissTime(value: number);
    /**
     * Comma separated list of available currencies
     */
    set currencies(value: string);
    /**
     * Number of check number range beyond which user cannot input (0 - no limit)
     */
    set checksRangeNumber(value: number);
    private readonly destroy$;
    constructor(stateService: StateService, navigationService: NavigationService, stopChecksConfigService: StopChecksPreferencesService);
    /**
     * Initializes the component.
     *
     * @returns void
     */
    ngOnInit(): void;
    /**
     * Cleanups just before Angular destroys the component.
     *
     * @returns
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PayordStopChecksWidgetAngComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PayordStopChecksWidgetAngComponent, "bb-payord-stop-checks-widget-ang", never, { "resourceName": "resourceName"; "businessFunction": "businessFunction"; "privilege": "privilege"; "notificationDismissTime": "notificationDismissTime"; "currencies": "currencies"; "checksRangeNumber": "checksRangeNumber"; }, { "navigateOnSubmit": "navigateOnSubmit"; }, never, never>;
}
