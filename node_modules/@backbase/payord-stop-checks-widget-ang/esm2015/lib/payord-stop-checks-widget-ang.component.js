import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, Output, EventEmitter, Input, } from '@angular/core';
import { RoutableWidget } from '@backbase/foundation-ang/core';
import { pluck, takeUntil } from 'rxjs/operators';
import { FormContainerComponent } from './containers/form-container/form-container.component';
import { ReviewContainerComponent } from './containers/review-container/review-container.component';
import { ApiHttpService } from './services/data.service';
import { NavigationService } from './services/navigation.service';
import { StateService } from './store/state.service';
import { RequestStatus } from './store/store';
import { Subject } from 'rxjs';
import { StopChecksPreferencesService } from './services/stop-checks-preferences.service';
import { ChecksService, toInteger } from '@backbase/payment-orders-ang';
import * as i0 from "@angular/core";
import * as i1 from "./store/state.service";
import * as i2 from "./services/navigation.service";
import * as i3 from "./services/stop-checks-preferences.service";
import * as i4 from "@backbase/foundation-ang/core";
let PayordStopChecksWidgetAngComponent = class PayordStopChecksWidgetAngComponent {
    constructor(stateService, navigationService, stopChecksConfigService) {
        this.stateService = stateService;
        this.navigationService = navigationService;
        this.stopChecksConfigService = stopChecksConfigService;
        /**
         * Trigger navigation for list view widget on submit
         */
        this.navigateOnSubmit = new EventEmitter();
        this.destroy$ = new Subject();
    }
    /**
     * Access control resource
     */
    set resourceName(value) {
        this.stopChecksConfigService.setResourceName(value);
    }
    /**
     * Access control business function
     */
    set businessFunction(value) {
        this.stopChecksConfigService.setBusinessFunction(value);
    }
    /**
     * Access control privilege
     */
    set privilege(value) {
        this.stopChecksConfigService.setPrivilege(value);
    }
    /**
     * Number of seconds to dismiss the notification
     */
    set notificationDismissTime(value) {
        this.stopChecksConfigService.setNotificationDismissTime(value);
    }
    /**
     * Comma separated list of available currencies
     */
    set currencies(value) {
        const currencies = value
            .split(',')
            .map((currency) => currency.trim());
        this.stopChecksConfigService.setCurrencies(currencies);
    }
    /**
     * Number of check number range beyond which user cannot input (0 - no limit)
     */
    set checksRangeNumber(value) {
        this.stopChecksConfigService.setChecksRangeNumber(toInteger(value));
    }
    /**
     * Initializes the component.
     *
     * @returns void
     */
    ngOnInit() {
        this.stateService.store
            .pipe(pluck('status'), takeUntil(this.destroy$))
            .subscribe((status) => {
            if (status === RequestStatus.INIT || status === RequestStatus.DISCARD) {
                this.navigationService.form();
            }
            if (status === RequestStatus.REQUEST_IS_SUBMITTED) {
                this.navigateOnSubmit.emit();
            }
        });
    }
    /**
     * Cleanups just before Angular destroys the component.
     *
     * @returns
     */
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
};
/** @nocollapse */ PayordStopChecksWidgetAngComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStopChecksWidgetAngComponent, deps: [{ token: i1.StateService }, { token: i2.NavigationService }, { token: i3.StopChecksPreferencesService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PayordStopChecksWidgetAngComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PayordStopChecksWidgetAngComponent, selector: "bb-payord-stop-checks-widget-ang", inputs: { resourceName: "resourceName", businessFunction: "businessFunction", privilege: "privilege", notificationDismissTime: "notificationDismissTime", currencies: "currencies", checksRangeNumber: "checksRangeNumber" }, outputs: { navigateOnSubmit: "navigateOnSubmit" }, providers: [
        NavigationService,
        StateService,
        ApiHttpService,
        ChecksService,
        StopChecksPreferencesService,
    ], ngImport: i0, template: ` <bb-router-outlet></bb-router-outlet> `, isInline: true, directives: [{ type: i4.RouterOutletDirective, selector: "bb-router-outlet", outputs: ["activate", "deactivate"], exportAs: ["bbOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
PayordStopChecksWidgetAngComponent = __decorate([
    RoutableWidget({
        routes: [
            { path: '', redirectTo: 'form', pathMatch: 'full' },
            { path: 'form', component: FormContainerComponent },
            { path: 'review', component: ReviewContainerComponent },
        ],
    }),
    __metadata("design:paramtypes", [StateService,
        NavigationService,
        StopChecksPreferencesService])
], PayordStopChecksWidgetAngComponent);
export { PayordStopChecksWidgetAngComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayordStopChecksWidgetAngComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payord-stop-checks-widget-ang',
                    template: ` <bb-router-outlet></bb-router-outlet> `,
                    providers: [
                        NavigationService,
                        StateService,
                        ApiHttpService,
                        ChecksService,
                        StopChecksPreferencesService,
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.StateService }, { type: i2.NavigationService }, { type: i3.StopChecksPreferencesService }]; }, propDecorators: { navigateOnSubmit: [{
                type: Output
            }], resourceName: [{
                type: Input
            }], businessFunction: [{
                type: Input
            }], privilege: [{
                type: Input
            }], notificationDismissTime: [{
                type: Input
            }], currencies: [{
                type: Input
            }], checksRangeNumber: [{
                type: Input
            }] } });
//# sourceMappingURL=payord-stop-checks-widget-ang.component.js.map