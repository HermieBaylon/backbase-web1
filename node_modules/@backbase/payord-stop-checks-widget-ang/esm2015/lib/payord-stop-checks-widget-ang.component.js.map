{"version":3,"file":"payord-stop-checks-widget-ang.component.js","sourceRoot":"","sources":["../../../../../libs/payord-stop-checks-widget-ang/src/lib/payord-stop-checks-widget-ang.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Input,\n} from '@angular/core';\nimport { RoutableWidget } from '@backbase/foundation-ang/core';\nimport { pluck, takeUntil } from 'rxjs/operators';\n\nimport { FormContainerComponent } from './containers/form-container/form-container.component';\nimport { ReviewContainerComponent } from './containers/review-container/review-container.component';\nimport { ApiHttpService } from './services/data.service';\nimport { NavigationService } from './services/navigation.service';\nimport { StateService } from './store/state.service';\nimport { RequestStatus } from './store/store';\nimport { Subject } from 'rxjs';\nimport { StopChecksPreferencesService } from './services/stop-checks-preferences.service';\nimport { ChecksService, toInteger } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payord-stop-checks-widget-ang',\n  template: ` <bb-router-outlet></bb-router-outlet> `,\n  providers: [\n    NavigationService,\n    StateService,\n    ApiHttpService,\n    ChecksService,\n    StopChecksPreferencesService,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n@RoutableWidget({\n  routes: [\n    { path: '', redirectTo: 'form', pathMatch: 'full' },\n    { path: 'form', component: FormContainerComponent },\n    { path: 'review', component: ReviewContainerComponent },\n  ],\n})\nexport class PayordStopChecksWidgetAngComponent implements OnInit, OnDestroy {\n  /**\n   * Trigger navigation for list view widget on submit\n   */\n  @Output() navigateOnSubmit = new EventEmitter();\n\n  /**\n   * Access control resource\n   */\n  @Input() set resourceName(value: string) {\n    this.stopChecksConfigService.setResourceName(value);\n  }\n\n  /**\n   * Access control business function\n   */\n  @Input() set businessFunction(value: string) {\n    this.stopChecksConfigService.setBusinessFunction(value);\n  }\n\n  /**\n   * Access control privilege\n   */\n  @Input() set privilege(value: string) {\n    this.stopChecksConfigService.setPrivilege(value);\n  }\n\n  /**\n   * Number of seconds to dismiss the notification\n   */\n  @Input() set notificationDismissTime(value: number) {\n    this.stopChecksConfigService.setNotificationDismissTime(value);\n  }\n\n  /**\n   * Comma separated list of available currencies\n   */\n  @Input() set currencies(value: string) {\n    const currencies = value\n      .split(',')\n      .map((currency: string) => currency.trim());\n    this.stopChecksConfigService.setCurrencies(currencies);\n  }\n\n  /**\n   * Number of check number range beyond which user cannot input (0 - no limit)\n   */\n  @Input() set checksRangeNumber(value: number) {\n    this.stopChecksConfigService.setChecksRangeNumber(toInteger(value));\n  }\n\n  private readonly destroy$ = new Subject();\n\n  constructor(\n    private readonly stateService: StateService,\n    private readonly navigationService: NavigationService,\n    private readonly stopChecksConfigService: StopChecksPreferencesService\n  ) {}\n\n  /**\n   * Initializes the component.\n   *\n   * @returns void\n   */\n  ngOnInit() {\n    this.stateService.store\n      .pipe(pluck('status'), takeUntil(this.destroy$))\n      .subscribe((status) => {\n        if (status === RequestStatus.INIT || status === RequestStatus.DISCARD) {\n          this.navigationService.form();\n        }\n\n        if (status === RequestStatus.REQUEST_IS_SUBMITTED) {\n          this.navigateOnSubmit.emit();\n        }\n      });\n  }\n\n  /**\n   * Cleanups just before Angular destroys the component.\n   *\n   * @returns\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n"]}