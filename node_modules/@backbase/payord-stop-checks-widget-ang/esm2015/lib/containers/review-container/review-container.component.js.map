{"version":3,"file":"review-container.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-stop-checks-widget-ang/src/lib/containers/review-container/review-container.component.ts","../../../../../../../libs/payord-stop-checks-widget-ang/src/lib/containers/review-container/review-container.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { StopCheckPostResponse } from '@backbase/data-ang/stop-checks';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { pluck, take, takeUntil } from 'rxjs/operators';\nimport { StopChecksPreferencesService } from '../../services/stop-checks-preferences.service';\n\nimport { InitialState, StopCheckRequestInfo } from '../../models/types';\nimport { ApiHttpService } from '../../services/data.service';\nimport { StateService } from '../../store/state.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-review-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './review-container.component.html',\n})\nexport class ReviewContainerComponent implements OnDestroy {\n  private readonly gc$ = new Subject();\n  private notificationDismissTimeout!: number;\n\n  constructor(\n    private readonly stateService: StateService,\n    private readonly apiHttpService: ApiHttpService,\n    private readonly stopChecksPreferencesService: StopChecksPreferencesService,\n    private readonly notificationService: NotificationService\n  ) {\n    this.stopChecksPreferencesService.notificationDismissTime$\n      .pipe(takeUntil(this.gc$))\n      .subscribe((value: number) => (this.notificationDismissTimeout = value));\n  }\n\n  @ViewChild('successNotificationHeader')\n  successNotificationHeader!: TemplateRef<any>;\n  @ViewChild('successNotificationMessage')\n  successNotificationMessage!: TemplateRef<any>;\n  @ViewChild('failureNotificationHeader')\n  failureNotificationHeader!: TemplateRef<any>;\n  @ViewChild('failureNotificationMessage')\n  failureNotificationMessage!: TemplateRef<any>;\n\n  isStopRequestSubmitted$ = new BehaviorSubject<boolean>(false);\n  requestInfo$: Observable<InitialState['requestInfo']> =\n    this.stateService.store.pipe(pluck('requestInfo'));\n  hasErrorOnSubmit$ = new BehaviorSubject<boolean>(false);\n\n  private showNotification(\n    success: boolean,\n    notification: {\n      header: string | TemplateRef<any>;\n      message: string | TemplateRef<any>;\n    }\n  ) {\n    this.notificationService.showNotification({\n      dismissible: true,\n      ttl: this.notificationDismissTimeout * 1000,\n      modifier: success ? 'success' : 'error',\n      ...notification,\n    });\n  }\n\n  private responseHandler(\n    response: StopCheckPostResponse,\n    requestInfo?: StopCheckRequestInfo\n  ) {\n    if (response.stopCheck?.status && requestInfo) {\n      this.showNotification(true, {\n        header: this.successNotificationHeader,\n        message: this.successNotificationMessage,\n      });\n      this.markStopRequestAsSubmitted(requestInfo);\n    } else {\n      this.hasErrorOnSubmit$.next(true);\n      this.showNotification(false, {\n        header: this.failureNotificationHeader,\n        message: this.failureNotificationMessage,\n      });\n    }\n  }\n\n  discardStopRequest() {\n    this.stateService.initStopCheckRequest();\n  }\n\n  submitStopRequest(requestInfo: StopCheckRequestInfo) {\n    this.apiHttpService\n      .postStopCheckRequest(requestInfo)\n      .pipe(take(1))\n      .subscribe(\n        (res) => this.responseHandler(res, requestInfo),\n        (err) => this.responseHandler(err)\n      );\n  }\n\n  markStopRequestAsSubmitted(requestInfo: StopCheckRequestInfo) {\n    this.isStopRequestSubmitted$.next(true);\n    this.stateService.markStopRequestAsSubmitted(requestInfo);\n  }\n\n  editStopRequest(requestInfo: StopCheckRequestInfo) {\n    this.stateService.sendStopRequestToEdit(requestInfo);\n  }\n\n  ngOnDestroy() {\n    this.gc$.next();\n  }\n}\n","<ng-container *ngIf=\"requestInfo$ | async as requestInfo\">\n  <bb-stop-check-review\n    [request]=\"requestInfo\"\n    [failedToSubmit]=\"hasErrorOnSubmit$ | async\"\n    (triggerStopRequestEdit)=\"editStopRequest(requestInfo)\"\n    (triggerStopRequestReset)=\"discardStopRequest()\"\n    (triggerStopRequestSubmit)=\"submitStopRequest(requestInfo)\"\n    [stopRequestIsSubmitted]=\"isStopRequestSubmitted$ | async\"\n  ></bb-stop-check-review>\n</ng-container>\n\n<ng-template #successNotificationHeader>\n  <span i18n=\"@@initiate-stop-check.success-notification-header\">\n    Stop check request submitted\n  </span>\n</ng-template>\n\n<ng-template #successNotificationMessage>\n  <span i18n=\"@@initiate-stop-check.success-notification-message\">\n    We will soon update the status of your request\n  </span>\n</ng-template>\n\n<ng-template #failureNotificationHeader>\n  <span i18n=\"@@initiate-stop-check.failure-notification-header\">\n    Failed to submit stop check request\n  </span>\n</ng-template>\n\n<ng-template #failureNotificationMessage>\n  <span i18n=\"@@initiate-stop-check.failure-notification-message\">\n    Please try again later\n  </span>\n</ng-template>\n"]}