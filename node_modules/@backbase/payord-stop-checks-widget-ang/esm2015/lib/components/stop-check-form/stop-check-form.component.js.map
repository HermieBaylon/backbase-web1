{"version":3,"file":"stop-check-form.component.js","sourceRoot":"","sources":["../../../../../../../libs/payord-stop-checks-widget-ang/src/lib/components/stop-check-form/stop-check-form.component.ts","../../../../../../../libs/payord-stop-checks-widget-ang/src/lib/components/stop-check-form/stop-check-form.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { BbTemplate, DeprecationsService } from '@backbase/foundation-ang/core';\nimport { InternalAccountFormItem } from '@backbase/payment-orders-ang';\nimport { Observable } from 'rxjs';\nimport { StopCheckRequestType } from '../../models/data';\nimport {\n  getCheckRangeError,\n  getLastCheckLessThanFirstError,\n} from '../../validators';\n\n@Component({\n  selector: 'bb-stop-check-form',\n  templateUrl: './stop-check-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StopCheckFormComponent implements OnInit {\n  private static _id = 0;\n  private _showValidation = false;\n\n  readonly id = StopCheckFormComponent._id++;\n  readonly hostRef: StopCheckFormComponent = this;\n\n  get payFromControl(): AbstractControl | null {\n    return this.relativeFormGroup.get('payFromAccount');\n  }\n\n  selectedAccount!: InternalAccountFormItem;\n  accountFormat = {\n    length: 0,\n    maskRange: [0, 0],\n    segments: 0,\n  };\n\n  /**\n   * @deprecated since version 3.9.3\n   * Validation errors in form appear on blur.\n   */\n  @Input()\n  set showValidation(val: boolean) {\n    this.deprecationService.logDeprecatedFeature(\n      `StopChecksFormComponent: showValidation input is deprecated since version 3.9.3,\n      validation errors in form appear on blur`\n    );\n    this._showValidation = val;\n  }\n\n  get showValidation(): boolean {\n    return this._showValidation;\n  }\n\n  /**\n   * Form group that contains relative form controls\n   */\n  @Input() relativeFormGroup!: FormGroup;\n\n  /**\n   * Form group that contains relative form controls\n   */\n  @Input() payFromAccounts$!: Observable<InternalAccountFormItem[]>;\n\n  /**\n   * Event will be triggered on form submit\n   */\n  @Output() formSubmit = new EventEmitter();\n\n  /**\n   * Value of currencies property in widget preferences\n   */\n  @Input() currencies!: string[];\n\n  /**\n   * Custom range number to identify maximum consecutive check number range.\n   * Default value `0`\n   */\n  @Input() checksRangeNumber = 0;\n\n  /**\n   * Event will be triggered on payment cancel action\n   */\n  @Output() cancelForm = new EventEmitter();\n\n  private crossFormValidation(rangeNumber: number): ValidatorFn {\n    return ((group: FormGroup): void => {\n      const { controls, value } = group;\n      const checkNum = controls.checkNumber;\n      const firstCheckNum = controls.firstCheckNumber;\n      const lastCheckNum = controls.lastCheckNumber;\n      const checkNumValidators = [\n        Validators.required,\n        Validators.pattern(/^\\d+$/),\n      ];\n\n      if (value['stopRangeType'] === StopCheckRequestType.SINGLE) {\n        firstCheckNum.clearValidators();\n        firstCheckNum.setErrors(null);\n        lastCheckNum.clearValidators();\n        lastCheckNum.setErrors(null);\n        checkNum.setValidators(checkNumValidators);\n      } else {\n        checkNum.clearValidators();\n        checkNum.setErrors(null);\n        firstCheckNum.setValidators(checkNumValidators);\n        lastCheckNum.setValidators(checkNumValidators);\n        lastCheckNum.setErrors(\n          getLastCheckLessThanFirstError(firstCheckNum, lastCheckNum)\n        );\n        lastCheckNum.setErrors(\n          getCheckRangeError(firstCheckNum, lastCheckNum, rangeNumber)\n        );\n      }\n    }) as ValidatorFn;\n  }\n\n  constructor(private readonly deprecationService: DeprecationsService) {}\n\n  ngOnInit() {\n    // populate value to show it in edit mode\n    if (this.relativeFormGroup && this.payFromControl?.value['id']) {\n      const formValue = this.payFromControl?.value;\n      // account selector component expect account number attribute name as 'number' which is not available in edit flow\n      this.selectPayFromAccount({\n        ...formValue,\n        number: formValue.accountNumber,\n      });\n    }\n\n    this.relativeFormGroup?.setValidators(\n      this.crossFormValidation(this.checksRangeNumber)\n    );\n    this.relativeFormGroup.updateValueAndValidity();\n  }\n\n  onCancelForm() {\n    this.cancelForm.emit();\n  }\n\n  onBlurAccount() {\n    if (this.selectedAccount) {\n      return;\n    }\n    this.payFromControl?.setErrors({ required: true });\n    this.payFromControl?.markAsTouched();\n    this.payFromControl?.markAsDirty();\n  }\n\n  selectPayFromAccount(account: InternalAccountFormItem): void {\n    if (this.payFromControl && account.id) {\n      this.payFromControl.setValue({\n        id: account.id,\n        name: account.name,\n        accountType: account.accountType,\n        accountNumber: account.accountNumber,\n        currency: account.currency,\n        balance: account.balance,\n      });\n\n      this.selectedAccount = account;\n      this.payFromControl?.markAsTouched();\n      this.payFromControl?.markAsDirty();\n    }\n  }\n\n  onSubmit() {\n    const { controls } = this.relativeFormGroup;\n    for (const control in controls) {\n      if (controls.hasOwnProperty(control)) {\n        controls[control].markAsTouched();\n        controls[control].markAsDirty();\n      }\n    }\n    this.formSubmit.emit();\n  }\n\n  getIdByControl(controlName: string): string {\n    return `${controlName}StopChecksError${this.id}`;\n  }\n\n  getDescribedby(controlName: string): string | null {\n    const control = this.relativeFormGroup?.get(controlName);\n    return control?.invalid && control?.touched\n      ? this.getIdByControl(controlName)\n      : null;\n  }\n\n  getDescribedbyBySubmit(): string | null {\n    return (\n      Object.keys(this.relativeFormGroup.controls)\n        .reduce((acc, controlName) => {\n          const errorId = this.getDescribedby(controlName);\n          acc += errorId ? `${errorId} ` : '';\n          return acc;\n        }, '')\n        .trim() || null\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbStopCheckFormComponentCustomizable]',\n})\nexport class StopCheckFormComponentCustomizableDirective extends BbTemplate<\n  StopCheckFormComponent,\n  undefined\n> {}\n","<ng-container\n  bbStopCheckFormComponentCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n<ng-template bbStopCheckFormComponentCustomizable let-hostRef>\n  <form\n    autocomplete=\"off\"\n    [formGroup]=\"hostRef.relativeFormGroup\"\n    (ngSubmit)=\"hostRef.onSubmit()\"\n  >\n    <bb-fieldset-ui\n      id=\"stop-checks-form-heading-{{ id }}\"\n      heading=\"Check details\"\n      i18n-heading=\"@@initiate-stop-check.check-details-fieldset-heading\"\n    >\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <label class=\"bb-form-field\">\n            <bb-account-selector-ui\n              [markFirst]=\"true\"\n              [highlight]=\"false\"\n              [filterItems]=\"true\"\n              [closeOnSelect]=\"true\"\n              dropdownPosition=\"bottom\"\n              placeholder=\"Select check account\"\n              data-role=\"pay-from-account-selector\"\n              [selectedItems]=\"hostRef.selectedAccount\"\n              [items]=\"hostRef.payFromAccounts$ | async\"\n              [productNumberFormat]=\"hostRef.accountFormat\"\n              (blur)=\"hostRef.onBlurAccount()\"\n              (change)=\"hostRef.selectPayFromAccount($event)\"\n              i18n-placeholder=\"@@initiate-stop-check.empty.state.placeholder\"\n              [aria-describedby]=\"hostRef.getDescribedby('payFromAccount')\"\n            ></bb-account-selector-ui>\n          </label>\n\n          <bb-input-validation-message-ui\n            [messageId]=\"hostRef.getIdByControl('payFromAccount')\"\n            *ngIf=\"hostRef.payFromControl as payFromControlRef\"\n            [showErrors]=\"\n              payFromControlRef.invalid && payFromControlRef.touched\n            \"\n          >\n            <span\n              *ngIf=\"\n                hostRef.payFromControl.errors?.required ||\n                !hostRef.selectedAccount\n              \"\n              data-role=\"missing-pay-from-account\"\n              i18n=\"@@initiate-stop-check.error.required.pay-from-account\"\n            >\n              Check account is required\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <bb-input-radio-group-ui\n            horizontal=\"true\"\n            data-role=\"radio-group\"\n            formControlName=\"stopRangeType\"\n            labelClasses=\"form-check-label\"\n            aria-labelledby=\"stop-checks-form-heading-{{ id }}\"\n          >\n            <bb-input-radio-ui\n              value=\"single\"\n              label=\"Single\"\n              i18n-label=\"@@initiate-stop-check.range-type.single.label\"\n            ></bb-input-radio-ui>\n            <bb-input-radio-ui\n              value=\"multiple\"\n              label=\"Multiple\"\n              i18n-label=\"@@initiate-stop-check.radio.range-type.multiple.label\"\n            ></bb-input-radio-ui>\n          </bb-input-radio-group-ui>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div\n          class=\"form-group col-md-12\"\n          *ngIf=\"\n            hostRef.relativeFormGroup.get('stopRangeType')?.value === 'single'\n          \"\n        >\n          <bb-input-text-ui\n            [maxLength]=\"15\"\n            [aria-invalid]=\"\n              hostRef.relativeFormGroup?.get('checkNumber').invalid\n            \"\n            [required]=\"true\"\n            formControlName=\"checkNumber\"\n            label=\"Check number\"\n            i18n-label=\"@@initiate-stop-check.check-number-label\"\n            data-role=\"check-number\"\n            [aria-describedby]=\"hostRef.getDescribedby('checkNumber')\"\n          ></bb-input-text-ui>\n\n          <bb-input-validation-message-ui\n            *ngIf=\"\n              hostRef.relativeFormGroup?.get(\n                'checkNumber'\n              ) as checkNumberControl\n            \"\n            [messageId]=\"hostRef.getIdByControl('checkNumber')\"\n            [showErrors]=\"\n              checkNumberControl.invalid && checkNumberControl.touched\n            \"\n          >\n            <span\n              *ngIf=\"checkNumberControl.errors?.required\"\n              data-role=\"validation-error-single-check-number-required\"\n              i18n=\"\n                @@initiate-stop-check.check-number.validation-error.required\"\n            >\n              Check number is required\n            </span>\n            <span\n              *ngIf=\"checkNumberControl.errors?.pattern\"\n              data-role=\"validation-error-check-number-digits-only\"\n              i18n=\"@@initiate-stop-check.check-number.validation-error.pattern\"\n            >\n              Check number should be digits only\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n\n      <ng-container\n        *ngIf=\"\n          hostRef.relativeFormGroup.get('stopRangeType')?.value === 'multiple'\n        \"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-12\">\n            <bb-input-text-ui\n              [maxLength]=\"15\"\n              [aria-invalid]=\"\n                hostRef.relativeFormGroup?.get('firstCheckNumber').invalid &&\n                hostRef.relativeFormGroup?.get('firstCheckNumber').touched\n              \"\n              [required]=\"true\"\n              [aria-describedby]=\"hostRef.getDescribedby('firstCheckNumber')\"\n              formControlName=\"firstCheckNumber\"\n              label=\"First check number\"\n              i18n-label=\"@@initiate-stop-check.first-check-number.label\"\n              data-role=\"from-check-number\"\n            ></bb-input-text-ui>\n\n            <bb-input-validation-message-ui\n              *ngIf=\"\n                hostRef.relativeFormGroup?.get(\n                  'firstCheckNumber'\n                ) as firstCheckNumberControl\n              \"\n              [messageId]=\"hostRef.getIdByControl('firstCheckNumber')\"\n              [showErrors]=\"\n                firstCheckNumberControl.invalid &&\n                firstCheckNumberControl.touched\n              \"\n            >\n              <span\n                *ngIf=\"firstCheckNumberControl.errors?.required\"\n                data-role=\"validation-error-first-check-number-required\"\n                i18n=\"\n                  @@initiate-stop-check.first-check-number.validation-error.required\"\n              >\n                First check number is required\n              </span>\n              <span\n                *ngIf=\"firstCheckNumberControl.errors?.pattern\"\n                data-role=\"validation-error-first-check-number-digits-only\"\n                i18n=\"\n                  @@initiate-stop-check.first-check-number.validation-error.pattern\"\n              >\n                Check number should be digits only\n              </span>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-12\">\n            <bb-input-text-ui\n              [maxLength]=\"15\"\n              [aria-invalid]=\"\n                hostRef.relativeFormGroup?.get('lastCheckNumber').invalid &&\n                hostRef.relativeFormGroup?.get('lastCheckNumber').touched\n              \"\n              [required]=\"true\"\n              [aria-describedby]=\"hostRef.getDescribedby('lastCheckNumber')\"\n              formControlName=\"lastCheckNumber\"\n              label=\"Last check number\"\n              i18n-label=\"@@initiate-stop-check.last-check-number.label\"\n              data-role=\"to-check-number\"\n            ></bb-input-text-ui>\n\n            <bb-input-validation-message-ui\n              *ngIf=\"\n                hostRef.relativeFormGroup?.get(\n                  'lastCheckNumber'\n                ) as lastCheckNumberControl\n              \"\n              [messageId]=\"hostRef.getIdByControl('lastCheckNumber')\"\n              [showErrors]=\"\n                lastCheckNumberControl.invalid && lastCheckNumberControl.touched\n              \"\n            >\n              <span\n                *ngIf=\"lastCheckNumberControl.errors?.required\"\n                data-role=\"validation-error-last-check-number-required\"\n                i18n=\"\n                  @@initiate-stop-check.last-check-number.validation-error.required\"\n              >\n                Last check number is required\n              </span>\n              <span\n                *ngIf=\"lastCheckNumberControl.errors?.pattern\"\n                data-role=\"validation-error-last-check-number-digits-only\"\n                i18n=\"\n                  @@initiate-stop-check.last-check-number.validation-error.pattern\"\n              >\n                Check number should be digits only\n              </span>\n              <span\n                *ngIf=\"\n                  lastCheckNumberControl.errors?.biggerThenFirstCheckNumber\n                \"\n                data-role=\"validation-error-last-check-number-higher-than-previous\"\n                i18n=\"\n                  @@initiate-stop-check.last-check-number.validation-error.bigger\"\n              >\n                This needs to be higher then previous check number\n              </span>\n              <span\n                *ngIf=\"lastCheckNumberControl.errors?.checkRangeError\"\n                data-role=\"validation-error-last-check-number-out-of-range\"\n                i18n=\"\n                  @@initiate-stop-check.last-check-number.validation-error.range\"\n              >\n                This request cannot exceed\n                {{ hostRef.checksRangeNumber }} consecutive checks\n              </span>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n      </ng-container>\n\n      <ng-container\n        *ngIf=\"\n          hostRef.relativeFormGroup.get('stopRangeType')?.value === 'single'\n        \"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-12\">\n            <label\n              #stopCheckAmountCurrencyLabel\n              id=\"stop-check-amount-currency-label{{ id }}\"\n              i18n=\"@@initiate-stop-check.check-amount\"\n            >\n              Check amount\n            </label>\n            <ng-container [ngTemplateOutlet]=\"optionalField\"></ng-container>\n\n            <bb-currency-input-ui\n              [currencies]=\"hostRef.currencies\"\n              [integerLabelSrOnly]=\"true\"\n              [decimalLabelSrOnly]=\"true\"\n              [aria-labelledby]=\"stopCheckAmountCurrencyLabel.id\"\n              resultType=\"string\"\n              maxlength=\"18\"\n              formControlName=\"amountGroup\"\n            ></bb-currency-input-ui>\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-12\">\n            <label\n              #stopCheckDateIssuedLabel\n              id=\"stop-check-date-issued-label{{ id }}\"\n              i18n=\"@@initiate-stop-check.date-issued\"\n            >\n              Date issued\n            </label>\n            <ng-container [ngTemplateOutlet]=\"optionalField\"></ng-container>\n\n            <bb-input-datepicker-ui\n              #dateIssued\n              name=\"dateIssued\"\n              overrideDateFormat=\"MM/dd/y\"\n              formControlName=\"dateIssued\"\n              [aria-labelledby]=\"stopCheckDateIssuedLabel.id\"\n              [aria-describedby]=\"hostRef.getDescribedby('dateIssued')\"\n              [aria-invalid]=\"\n                hostRef.relativeFormGroup?.get('dateIssued').invalid &&\n                hostRef.relativeFormGroup?.get('dateIssued').touched\n              \"\n              [placeholder]=\"'MM/DD/YYYY'\"\n              data-role=\"date-issued\"\n            ></bb-input-datepicker-ui>\n\n            <bb-input-validation-message-ui\n              *ngIf=\"\n                hostRef.relativeFormGroup?.get(\n                  'dateIssued'\n                ) as dateIssuedControl\n              \"\n              [messageId]=\"hostRef.getIdByControl('dateIssued')\"\n              [showErrors]=\"\n                dateIssuedControl.invalid && dateIssuedControl.touched\n              \"\n            >\n              <span\n                *ngIf=\"dateIssuedControl.errors?.required\"\n                data-role=\"validation-error-date-issued-invalid-date-format\"\n                i18n=\"\n                  @@initiate-stop-check.date-issued.validation-error.invalid-date-format\"\n              >\n                Invalid date format\n              </span>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-12\">\n            <label\n              [attr.for]=\"payeeName.id\"\n              i18n=\"@@initiate-stop-check.payee-name\"\n              >Payee name</label\n            >\n            <ng-container [ngTemplateOutlet]=\"optionalField\"></ng-container>\n\n            <bb-input-text-ui\n              #payeeName\n              [maxLength]=\"140\"\n              formControlName=\"payeeName\"\n              data-role=\"payee-name\"\n            ></bb-input-text-ui>\n          </div>\n        </div>\n      </ng-container>\n\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <label\n            [for]=\"stopReason.id\"\n            i18n=\"@@initiate-stop-check.select-reason\"\n            >Stop reason</label\n          >\n          <ng-container [ngTemplateOutlet]=\"optionalField\"></ng-container>\n          <bb-dropdown-single-select-ui\n            #stopReason\n            data-role=\"stop-reason\"\n            formControlName=\"stopReason\"\n          >\n            <bb-dropdown-single-select-option-ui\n              value=\"\"\n              label=\"- Select a reason -\"\n              i18n-label=\"@@initiate-stop-check.reason.select\"\n            ></bb-dropdown-single-select-option-ui>\n\n            <bb-dropdown-single-select-option-ui\n              value=\"Insufficient_funds\"\n              label=\"Insufficient funds\"\n              i18n-label=\"@@initiate-stop-check.reason-Insufficient_funds\"\n            ></bb-dropdown-single-select-option-ui>\n\n            <bb-dropdown-single-select-option-ui\n              value=\"Incorrect_amount_or_other_details\"\n              label=\"Incorrect amount or other details\"\n              i18n-label=\"\n                @@initiate-stop-check.reason-Incorrect_amount_or_other_details\"\n            ></bb-dropdown-single-select-option-ui>\n\n            <bb-dropdown-single-select-option-ui\n              value=\"Lost_or_stolen_checks_or_check_books\"\n              label=\"Lost or stolen checks or check books\"\n              i18n-label=\"\n                @@initiate-stop-check.reason-Lost_or_stolen_checks_or_check\"\n            ></bb-dropdown-single-select-option-ui>\n\n            <bb-dropdown-single-select-option-ui\n              value=\"Checks_mailed_to_wrong_address\"\n              label=\"Checks mailed to wrong address\"\n              i18n-label=\"\n                @@initiate-stop-check.reason-Checks_mailed_to_wrong_address\"\n            ></bb-dropdown-single-select-option-ui>\n\n            <bb-dropdown-single-select-option-ui\n              value=\"Dispute_over_purchases\"\n              label=\"Dispute over purchases\"\n              i18n-label=\"@@initiate-stop-check.reason-Dispute_over_purchases\"\n            ></bb-dropdown-single-select-option-ui>\n\n            <bb-dropdown-single-select-option-ui\n              value=\"Lost_in_mail\"\n              label=\"Lost in mail\"\n              i18n-label=\"@@initiate-stop-check.reason-Lost_in_Mail\"\n            ></bb-dropdown-single-select-option-ui>\n\n            <bb-dropdown-single-select-option-ui\n              value=\"Other\"\n              label=\"Other\"\n              i18n-label=\"@@initiate-stop-check.reason-Other\"\n            ></bb-dropdown-single-select-option-ui>\n          </bb-dropdown-single-select-ui>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div\n          class=\"form-group col-md-12\"\n          *ngIf=\"\n            hostRef.relativeFormGroup?.get('stopReason')?.value === 'Other'\n          \"\n        >\n          <bb-textarea-ui\n            wrap=\"hard\"\n            [rows]=\"2\"\n            [cols]=\"50\"\n            [minLength]=\"3\"\n            [maxLength]=\"140\"\n            label=\"Please specify:\"\n            [showCharCounter]=\"true\"\n            formControlName=\"otherReason\"\n            data-role=\"other-reason-text\"\n            aria-label=\"Please specify other reason\"\n            i18n-aria-label=\"@@initiate-stop-check.reason-other.aria-label\"\n            i18n-label=\"@@initiate-stop-check.reason-other.label\"\n          ></bb-textarea-ui>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"col-md-12\">\n          <label\n            #stopChecksExpirationDateLabel\n            id=\"stop-checks-expiration-date-label-{{ id }}\"\n            i18n=\"@@initiate-stop-check.expiration-date\"\n          >\n            Stop expiration date\n          </label>\n          <ng-container [ngTemplateOutlet]=\"optionalField\"></ng-container>\n\n          <bb-input-datepicker-ui\n            overrideDateFormat=\"MM/dd/y\"\n            formControlName=\"expirationDate\"\n            [aria-labelledby]=\"stopChecksExpirationDateLabel.id\"\n            [aria-describedby]=\"hostRef.getDescribedby('expirationDate')\"\n            [aria-invalid]=\"\n              hostRef.relativeFormGroup?.get('expirationDate').invalid &&\n              hostRef.relativeFormGroup?.get('expirationDate').touched\n            \"\n            [placeholder]=\"'MM/DD/YYYY'\"\n            data-role=\"expiration-date\"\n          ></bb-input-datepicker-ui>\n\n          <bb-input-validation-message-ui\n            *ngIf=\"\n              hostRef.relativeFormGroup?.get(\n                'expirationDate'\n              ) as expirationDateControl\n            \"\n            [messageId]=\"hostRef.getIdByControl('expirationDate')\"\n            [showErrors]=\"\n              expirationDateControl.invalid && expirationDateControl.touched\n            \"\n          >\n            <span\n              *ngIf=\"expirationDateControl.errors?.pastDate\"\n              i18n=\"\n                Stop expiration date past date error text |Error past date\n                message for Stop expiration date input\n                field@@initiate-stop-check.error.pastDate.expirationDate\"\n              data-role=\"validation-error-past-date-expiration-date\"\n            >\n              Stop expiration date cannot be in the past\n            </span>\n            <span\n              *ngIf=\"expirationDateControl.errors?.invalidDateFormat\"\n              data-role=\"validation-error-expiration-date-invalid-date-format\"\n              i18n=\"\n                @@initiate-stop-check.expiration-date.validation-error.invalid-date-format\"\n            >\n              Invalid date format\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </bb-fieldset-ui>\n\n    <div class=\"bb-stop-checks-control-buttons bb-button-bar\">\n      <button\n        bbButton\n        type=\"submit\"\n        buttonSize=\"md\"\n        [attr.aria-describedby]=\"hostRef.getDescribedbyBySubmit()\"\n        class=\"bb-button-bar__button\"\n        data-role=\"continue-btn\"\n        i18n=\"@@initiate-stop-check.form-action.continue\"\n      >\n        Continue\n      </button>\n\n      <button\n        bbButton\n        type=\"button\"\n        color=\"link\"\n        buttonSize=\"md\"\n        class=\"bb-button-bar__button bb-stop-checks-control-buttons__cancel\"\n        data-role=\"cancel-btn\"\n        i18n=\"@@initiate-stop-check.form-action.cancel\"\n        (click)=\"hostRef.onCancelForm()\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n\n  <ng-template #optionalField>\n    <span class=\"bb-text-support\">\n      (<ng-container i18n=\"@@initiate-stop-check.optional-field-label\"\n        >Optional</ng-container\n      >)\n    </span>\n  </ng-template>\n</ng-template>\n"]}