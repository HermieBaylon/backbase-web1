{"version":3,"file":"data.service.js","sourceRoot":"","sources":["../../../../../../libs/payord-stop-checks-widget-ang/src/lib/services/data.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,yBAAyB,EAAE,MAAM,iCAAiC,CAAC;AAE5E,OAAO,EAAmB,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAC9E,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AACtC,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAE7E,OAAO,EACL,0BAA0B,EAC1B,4BAA4B,GAC7B,MAAM,YAAY,CAAC;AACpB,OAAO,EAAE,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;AAEtD,OAAO,EAAE,4BAA4B,EAAE,MAAM,mCAAmC,CAAC;;;;;AAGjF,MAAM,OAAO,cAAc;IA4BzB,YACmB,kBAA6C,EAC7C,gBAA+B,EAC/B,4BAA0D;QAF1D,uBAAkB,GAAlB,kBAAkB,CAA2B;QAC7C,qBAAgB,GAAhB,gBAAgB,CAAe;QAC/B,iCAA4B,GAA5B,4BAA4B,CAA8B;QA9B5D,6BAAwB,GAAG,EAAE,CAAC;YAC7C,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,oBAAoB;SAC3B,CAAC,CAAC,IAAI,CACL,cAAc,CACZ,IAAI,CAAC,4BAA4B,CAAC,aAAa,EAC/C,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EACnD,IAAI,CAAC,4BAA4B,CAAC,UAAU,CAC7C,EACD,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,YAAY,EAAE,gBAAgB,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,iBAC3D,YAAY;YACZ,gBAAgB;YAChB,SAAS,IACN,MAAM,EACT,CAAC,CACJ,CAAC;QAEK,mBAAc,GACnB,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAChC,cAAc,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EACpE,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CACnB,IAAI,CAAC,kBAAkB,CAAC,iCAAiC,CAAC,MAAM,CAAC,CAClE,EACD,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC,EACvD,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;IAMD,CAAC;IAEJ,oBAAoB,CAClB,OAA6B;QAE7B,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,CACzC,4BAA4B,CAAC,OAAO,CAAC,CACtC,CAAC;IACJ,CAAC;;+HAxCU,cAAc;mIAAd,cAAc;4FAAd,cAAc;kBAD1B,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ProductSummaryHttpService } from '@backbase/data-ang/arrangements';\nimport { StopCheckPostResponse } from '@backbase/data-ang/stop-checks';\nimport { ArrangementList, ChecksService } from '@backbase/payment-orders-ang';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap, withLatestFrom } from 'rxjs/operators';\n\nimport {\n  arrangementListFromService,\n  requestInfoToPostRequestBody,\n} from '../mappers';\nimport { arrangementsPageSize } from '../models/data';\nimport { StopCheckRequestInfo } from '../models/types';\nimport { StopChecksPreferencesService } from './stop-checks-preferences.service';\n\n@Injectable()\nexport class ApiHttpService {\n  private readonly debitAccountsParameters$ = of({\n    debitAccount: true,\n    size: arrangementsPageSize,\n  }).pipe(\n    withLatestFrom(\n      this.stopChecksPreferencesService.resourceName$,\n      this.stopChecksPreferencesService.businessFunction$,\n      this.stopChecksPreferencesService.privilege$\n    ),\n    map(([params, resourceName, businessFunction, privilege]) => ({\n      resourceName,\n      businessFunction,\n      privilege,\n      ...params,\n    }))\n  );\n\n  public debitAccounts$: Observable<ArrangementList> =\n    this.debitAccountsParameters$.pipe(\n      withLatestFrom(this.debitAccountsParameters$, (_, params) => params),\n      switchMap((params) =>\n        this.productSummaryData.getArrangementsByBusinessFunction(params)\n      ),\n      map((response) => arrangementListFromService(response)),\n      shareReplay(1)\n    );\n\n  constructor(\n    private readonly productSummaryData: ProductSummaryHttpService,\n    private readonly stopCheckService: ChecksService,\n    private readonly stopChecksPreferencesService: StopChecksPreferencesService\n  ) {}\n\n  postStopCheckRequest(\n    payload: StopCheckRequestInfo\n  ): Observable<StopCheckPostResponse> {\n    return this.stopCheckService.postStopChecks(\n      requestInfoToPostRequestBody(payload)\n    );\n  }\n}\n"]}