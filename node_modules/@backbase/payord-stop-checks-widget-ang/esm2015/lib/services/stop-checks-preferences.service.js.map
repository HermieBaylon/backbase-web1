{"version":3,"file":"stop-checks-preferences.service.js","sourceRoot":"","sources":["../../../../../../libs/payord-stop-checks-widget-ang/src/lib/services/stop-checks-preferences.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\n\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  accessControlConfigDefaults,\n  BB_STOP_CHECK_ACCESS_CONTROL_CONFIG_TOKEN,\n} from '../config.providers';\nimport { currencyFallback } from '../models/data';\nimport { Property } from '@backbase/foundation-ang/web-sdk';\nimport { SchemeName } from '@backbase/data-ang/stop-checks';\nimport {\n  AccessControlConfigProvider,\n  toInteger,\n} from '@backbase/payment-orders-ang';\n\nexport const defaultStopChecksCreatePreferences = {\n  currencies: [currencyFallback],\n  notificationDismissTime: 3,\n  checksRangeNumber: 0,\n  schemeName: 'BBAN',\n  ...accessControlConfigDefaults,\n};\n\n@Injectable()\nexport class StopChecksPreferencesService {\n  private readonly accessControlConfig: AccessControlConfigProvider = {\n    ...defaultStopChecksCreatePreferences,\n    ...(this.accessControlToken || {}),\n  };\n\n  private readonly resourceNameSubject$ = new BehaviorSubject<\n    string | undefined\n  >(undefined);\n  private readonly businessFunctionSubject$ = new BehaviorSubject<\n    string | undefined\n  >(undefined);\n  private readonly privilegeSubject$ = new BehaviorSubject<string | undefined>(\n    undefined\n  );\n  private readonly notificationDismissTimeSubject$ = new BehaviorSubject<\n    number | undefined\n  >(undefined);\n  private readonly currenciesSubject$ = new BehaviorSubject<\n    string[] | undefined\n  >(undefined);\n  private readonly checksRangeNumberSubject$ = new BehaviorSubject<\n    number | undefined\n  >(undefined);\n  private readonly schemeNameSubject$ = new BehaviorSubject<\n    SchemeName | undefined\n  >(undefined);\n\n  private readonly schemeNameItemModel = this.getItemModelProperty(\n    'schemeName',\n    this.accessControlConfig.schemeName\n  );\n\n  private readonly resourceNameItemModel = this.getItemModelProperty(\n    'resourceName',\n    this.accessControlConfig.resourceName\n  );\n\n  private readonly businessFunctionItemModel = this.getItemModelProperty(\n    'businessFunction',\n    this.accessControlConfig.businessFunction\n  );\n  private readonly privilegeItemModel = this.getItemModelProperty(\n    'privilege',\n    this.accessControlConfig.privilege\n  );\n  private readonly notificationDismissTimeItemModel = this.getItemModelProperty(\n    'notificationDismissTime',\n    defaultStopChecksCreatePreferences.notificationDismissTime\n  ).pipe(map(toInteger));\n\n  private readonly currenciesItemModel = this.getItemModelProperty(\n    'currencies',\n    defaultStopChecksCreatePreferences.currencies[0]\n  ).pipe(\n    map((currencies: string) =>\n      currencies.split(',').map((currency: string) => currency.trim())\n    )\n  );\n\n  private readonly checksRangeNumberItemModel = this.getItemModelProperty(\n    'checksRangeNumber',\n    defaultStopChecksCreatePreferences.checksRangeNumber\n  ).pipe(map(toInteger));\n\n  readonly schemeName$ = this.getProperty<SchemeName>(\n    this.schemeNameSubject$,\n    this.schemeNameItemModel\n  );\n  readonly resourceName$ = this.getProperty<string>(\n    this.resourceNameSubject$,\n    this.resourceNameItemModel\n  );\n  readonly businessFunction$ = this.getProperty<string>(\n    this.businessFunctionSubject$,\n    this.businessFunctionItemModel\n  );\n  readonly privilege$ = this.getProperty<string>(\n    this.privilegeSubject$,\n    this.privilegeItemModel\n  );\n  readonly notificationDismissTime$ = this.getProperty<number>(\n    this.notificationDismissTimeSubject$,\n    this.notificationDismissTimeItemModel\n  );\n  readonly currencies$ = this.getProperty<string[]>(\n    this.currenciesSubject$,\n    this.currenciesItemModel\n  );\n  readonly checksRangeNumber$ = this.getProperty<number>(\n    this.checksRangeNumberSubject$,\n    this.checksRangeNumberItemModel,\n    true\n  );\n\n  private getProperty<T>(\n    input$: Observable<T | undefined>,\n    itemModel: Observable<Property>,\n    t?: any\n  ): Observable<T> {\n    return combineLatest([input$, itemModel]).pipe(\n      map(([value, valueIM]) => (value === undefined ? valueIM : value) as T)\n    );\n  }\n\n  private getItemModelProperty<T extends Property>(\n    name: string,\n    defaultVal: T\n  ): Observable<T> {\n    return this.itemModel?.property<T>(name, defaultVal) || of(defaultVal);\n  }\n\n  setResourceName(value: string) {\n    this.resourceNameSubject$.next(value);\n  }\n\n  setBusinessFunction(value: string) {\n    this.businessFunctionSubject$.next(value);\n  }\n\n  setPrivilege(value: string) {\n    this.privilegeSubject$.next(value);\n  }\n\n  setNotificationDismissTime(value: number) {\n    this.notificationDismissTimeSubject$.next(value);\n  }\n\n  setCurrencies(value: string[]) {\n    this.currenciesSubject$.next(value);\n  }\n\n  setChecksRangeNumber(value: number) {\n    this.checksRangeNumberSubject$.next(value);\n  }\n\n  constructor(\n    @Optional() private readonly itemModel: ItemModel,\n    @Optional()\n    @Inject(BB_STOP_CHECK_ACCESS_CONTROL_CONFIG_TOKEN)\n    private readonly accessControlToken: AccessControlConfigProvider\n  ) {}\n}\n"]}