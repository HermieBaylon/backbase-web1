import { Injectable } from '@angular/core';
import { ProductSummaryHttpService } from '@backbase/data-ang/arrangements';
import { ChecksService } from '@backbase/payment-orders-ang';
import { of } from 'rxjs';
import { map, shareReplay, switchMap, withLatestFrom } from 'rxjs/operators';
import { arrangementListFromService, requestInfoToPostRequestBody, } from '../mappers';
import { arrangementsPageSize } from '../models/data';
import { StopChecksPreferencesService } from './stop-checks-preferences.service';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/arrangements";
import * as i2 from "@backbase/payment-orders-ang";
import * as i3 from "./stop-checks-preferences.service";
export class ApiHttpService {
    constructor(productSummaryData, stopCheckService, stopChecksPreferencesService) {
        this.productSummaryData = productSummaryData;
        this.stopCheckService = stopCheckService;
        this.stopChecksPreferencesService = stopChecksPreferencesService;
        this.debitAccountsParameters$ = of({
            debitAccount: true,
            size: arrangementsPageSize,
        }).pipe(withLatestFrom(this.stopChecksPreferencesService.resourceName$, this.stopChecksPreferencesService.businessFunction$, this.stopChecksPreferencesService.privilege$), map(([params, resourceName, businessFunction, privilege]) => (Object.assign({ resourceName,
            businessFunction,
            privilege }, params))));
        this.debitAccounts$ = this.debitAccountsParameters$.pipe(withLatestFrom(this.debitAccountsParameters$, (_, params) => params), switchMap((params) => this.productSummaryData.getArrangementsByBusinessFunction(params)), map((response) => arrangementListFromService(response)), shareReplay(1));
    }
    postStopCheckRequest(payload) {
        return this.stopCheckService.postStopChecks(requestInfoToPostRequestBody(payload));
    }
}
/** @nocollapse */ ApiHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ApiHttpService, deps: [{ token: i1.ProductSummaryHttpService }, { token: i2.ChecksService }, { token: i3.StopChecksPreferencesService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ ApiHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ApiHttpService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ApiHttpService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ProductSummaryHttpService }, { type: i2.ChecksService }, { type: i3.StopChecksPreferencesService }]; } });
//# sourceMappingURL=data.service.js.map