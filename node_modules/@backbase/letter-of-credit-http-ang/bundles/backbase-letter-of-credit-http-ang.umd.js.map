{"version":3,"file":"backbase-letter-of-credit-http-ang.umd.js","sources":["../../model/billOfLadingIssuanceType.ts","../../model/certificateOfOriginIssuer.ts","../../model/confirmingBankPresence.ts","../../model/deliveryConditions.ts","../../model/documentPresentationCondition.ts","../../model/drawee.ts","../../model/feePayingParty.ts","../../model/feePayingStrategy.ts","../../model/fileType.ts","../../model/freightMark.ts","../../model/importTransactionType.ts","../../model/incoterms2000.ts","../../model/incoterms2010.ts","../../model/incoterms2020.ts","../../model/letterOfCreditActions.ts","../../model/letterOfCreditRequest.ts","../../model/letterOfCreditStatus.ts","../../model/letterOfCreditType.ts","../../model/notifyPartyType.ts","../../model/partialShipment.ts","../../model/seaTransportDocumentType.ts","../../model/settlementAvailability.ts","../../model/settlementType.ts","../../model/tenorFromDate.ts","../../model/transportMethod.ts","../../model/transshipment.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/letterOfCreditClient.service.ts","../../api/letterOfCreditClient.service.mocks.ts"],"sourcesContent":["/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Bill of Lading issuance type\n */\nexport type BillOfLadingIssuanceType = 'To the order of shipper' | 'To the order of' | 'To the party';\n\nexport const BillOfLadingIssuanceType = {\n    OrderOfShipper: 'To the order of shipper' as BillOfLadingIssuanceType,\n    OrderOf: 'To the order of' as BillOfLadingIssuanceType,\n    Party: 'To the party' as BillOfLadingIssuanceType\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Certificate of origin possible issuers\n */\nexport type CertificateOfOriginIssuer = 'Beneficiary' | 'Chamber of commerce' | 'Official authority' | 'Other';\n\nexport const CertificateOfOriginIssuer = {\n    Beneficiary: 'Beneficiary' as CertificateOfOriginIssuer,\n    ChamberOfCommerce: 'Chamber of commerce' as CertificateOfOriginIssuer,\n    OfficialAuthority: 'Official authority' as CertificateOfOriginIssuer,\n    Other: 'Other' as CertificateOfOriginIssuer\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Defines if exporter requested confirming bank\n */\nexport type ConfirmingBankPresence = 'PRESENT' | 'NOT_PRESENT' | 'MAY_BE_ADDED_BY_ISSUING_BANK';\n\nexport const ConfirmingBankPresence = {\n    PRESENT: 'PRESENT' as ConfirmingBankPresence,\n    NOTPRESENT: 'NOT_PRESENT' as ConfirmingBankPresence,\n    MAYBEADDEDBYISSUINGBANK: 'MAY_BE_ADDED_BY_ISSUING_BANK' as ConfirmingBankPresence\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Set of available Incoterms\n */\nexport type DeliveryConditions = 'Incoterms 2000' | 'Incoterms 2010' | 'Incoterms 2020';\n\nexport const DeliveryConditions = {\n    _2000: 'Incoterms 2000' as DeliveryConditions,\n    _2010: 'Incoterms 2010' as DeliveryConditions,\n    _2020: 'Incoterms 2020' as DeliveryConditions\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Document presentation condition from which the presentation period begins\n */\nexport type DocumentPresentationCondition = 'Sight' | 'Shipment date' | 'Invoice date' | 'Other';\n\nexport const DocumentPresentationCondition = {\n    Sight: 'Sight' as DocumentPresentationCondition,\n    ShipmentDate: 'Shipment date' as DocumentPresentationCondition,\n    InvoiceDate: 'Invoice date' as DocumentPresentationCondition,\n    Other: 'Other' as DocumentPresentationCondition\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Draft drawee. Drawee is a legal and banking term used to describe the party that has been directed to pay a certain sum of money to the party presenting the draft\n */\nexport type Drawee = 'ISSUING_BANK' | 'ADVISING_BANK' | 'APPLICANT' | 'OTHER';\n\nexport const Drawee = {\n    ISSUINGBANK: 'ISSUING_BANK' as Drawee,\n    ADVISINGBANK: 'ADVISING_BANK' as Drawee,\n    APPLICANT: 'APPLICANT' as Drawee,\n    OTHER: 'OTHER' as Drawee\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Fee paying party\n */\nexport type FeePayingParty = 'Me' | 'Beneficiary';\n\nexport const FeePayingParty = {\n    Me: 'Me' as FeePayingParty,\n    Beneficiary: 'Beneficiary' as FeePayingParty\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Defines strategies of paying fees and charges\n */\nexport type FeePayingStrategy = 'I pay all fees' | 'Fees split between me and beneficiary' | 'Beneficiary pays all fees';\n\nexport const FeePayingStrategy = {\n    IPayAllFees: 'I pay all fees' as FeePayingStrategy,\n    FeesSplitBetweenMeAndBeneficiary: 'Fees split between me and beneficiary' as FeePayingStrategy,\n    BeneficiaryPaysAllFees: 'Beneficiary pays all fees' as FeePayingStrategy\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Supported file types\n */\nexport type FileType = 'application/pdf' | 'image/png' | 'image/jpeg';\n\nexport const FileType = {\n    ApplicationPdf: 'application/pdf' as FileType,\n    ImagePng: 'image/png' as FileType,\n    ImageJpeg: 'image/jpeg' as FileType\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Defines which party pays freight / shipping costs and takes responsibility for the cargo\n */\nexport type FreightMark = 'Prepaid' | 'Collect';\n\nexport const FreightMark = {\n    Prepaid: 'Prepaid' as FreightMark,\n    Collect: 'Collect' as FreightMark\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of the import transaction\n */\nexport type ImportTransactionType = 'Import LC';\n\nexport const ImportTransactionType = {\n    ImportLC: 'Import LC' as ImportTransactionType\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Incoterms 2000 rules\n */\nexport type Incoterms2000 = 'EXW' | 'FCA' | 'FAS' | 'FOB' | 'CFR' | 'CIF' | 'CPT' | 'CIP' | 'DAF' | 'DES' | 'DEQ' | 'DDU' | 'DDP';\n\nexport const Incoterms2000 = {\n    EXW: 'EXW' as Incoterms2000,\n    FCA: 'FCA' as Incoterms2000,\n    FAS: 'FAS' as Incoterms2000,\n    FOB: 'FOB' as Incoterms2000,\n    CFR: 'CFR' as Incoterms2000,\n    CIF: 'CIF' as Incoterms2000,\n    CPT: 'CPT' as Incoterms2000,\n    CIP: 'CIP' as Incoterms2000,\n    DAF: 'DAF' as Incoterms2000,\n    DES: 'DES' as Incoterms2000,\n    DEQ: 'DEQ' as Incoterms2000,\n    DDU: 'DDU' as Incoterms2000,\n    DDP: 'DDP' as Incoterms2000\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Incoterms 2010 rules\n */\nexport type Incoterms2010 = 'EXW' | 'FCA' | 'FAS' | 'FOB' | 'CFR' | 'CIF' | 'CIP' | 'CPT' | 'DAT' | 'DAP' | 'DDP';\n\nexport const Incoterms2010 = {\n    EXW: 'EXW' as Incoterms2010,\n    FCA: 'FCA' as Incoterms2010,\n    FAS: 'FAS' as Incoterms2010,\n    FOB: 'FOB' as Incoterms2010,\n    CFR: 'CFR' as Incoterms2010,\n    CIF: 'CIF' as Incoterms2010,\n    CIP: 'CIP' as Incoterms2010,\n    CPT: 'CPT' as Incoterms2010,\n    DAT: 'DAT' as Incoterms2010,\n    DAP: 'DAP' as Incoterms2010,\n    DDP: 'DDP' as Incoterms2010\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Incoterms 2020 rules\n */\nexport type Incoterms2020 = 'EXW' | 'FCA' | 'FAS' | 'FOB' | 'CFR' | 'CIF' | 'CPT' | 'CIP' | 'DAP' | 'DPU' | 'DDP';\n\nexport const Incoterms2020 = {\n    EXW: 'EXW' as Incoterms2020,\n    FCA: 'FCA' as Incoterms2020,\n    FAS: 'FAS' as Incoterms2020,\n    FOB: 'FOB' as Incoterms2020,\n    CFR: 'CFR' as Incoterms2020,\n    CIF: 'CIF' as Incoterms2020,\n    CPT: 'CPT' as Incoterms2020,\n    CIP: 'CIP' as Incoterms2020,\n    DAP: 'DAP' as Incoterms2020,\n    DPU: 'DPU' as Incoterms2020,\n    DDP: 'DDP' as Incoterms2020\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Letter of credit draft or application available actions\n */\nexport interface LetterOfCreditActions { \n    /**\n     * Letter of credit draft or application id\n     */\n    [\"letterOfCreditId\"]?: string;\n    /**\n     * Letter of credit draft or application available actions based on user role privileges\n     */\n    [\"actions\"]?: Array<LetterOfCreditActions.ActionsEnum>;\n}\nexport namespace LetterOfCreditActions {\n    export type ActionsEnum = 'VIEW' | 'MODIFY' | 'CANCEL';\n    export const ActionsEnum = {\n        VIEW: 'VIEW' as ActionsEnum,\n        MODIFY: 'MODIFY' as ActionsEnum,\n        CANCEL: 'CANCEL' as ActionsEnum\n    };\n}\n\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { LetterOfCreditStatus } from './letterOfCreditStatus';\n\n\n/**\n * Letter of credit request parameters\n */\nexport interface LetterOfCreditRequest { \n    /**\n     * Expiration date to request from\n     */\n    [\"fromExpiryDate\"]?: string;\n    /**\n     * Expiration date to request to\n     */\n    [\"toExpiryDate\"]?: string;\n    /**\n     * Total amount to request from\n     */\n    [\"fromTotalAmount\"]?: number;\n    /**\n     * Total amount to request to\n     */\n    [\"toTotalAmount\"]?: number;\n    [\"status\"]?: LetterOfCreditStatus;\n    /**\n     * Sorting direction\n     */\n    [\"sortOrder\"]: LetterOfCreditRequest.SortOrderEnum;\n    /**\n     * Letter of credit sorting field\n     */\n    [\"sortBy\"]: string;\n    /**\n     * Index of the element to start from\n     */\n    [\"offset\"]: number;\n    /**\n     * Amount of elements to return\n     */\n    [\"limit\"]: number;\n}\nexport namespace LetterOfCreditRequest {\n    export type SortOrderEnum = 'ASC' | 'DESC';\n    export const SortOrderEnum = {\n        ASC: 'ASC' as SortOrderEnum,\n        DESC: 'DESC' as SortOrderEnum\n    };\n}\n\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Letter of credit supported statuses (to be updated)\n */\nexport type LetterOfCreditStatus = 'Draft' | 'Unauthorized' | 'Review' | 'Authorized' | 'Bank review' | 'Unapproved' | 'Issued' | 'Rejected' | 'Expired' | 'Closed';\n\nexport const LetterOfCreditStatus = {\n    Draft: 'Draft' as LetterOfCreditStatus,\n    Unauthorized: 'Unauthorized' as LetterOfCreditStatus,\n    Review: 'Review' as LetterOfCreditStatus,\n    Authorized: 'Authorized' as LetterOfCreditStatus,\n    BankReview: 'Bank review' as LetterOfCreditStatus,\n    Unapproved: 'Unapproved' as LetterOfCreditStatus,\n    Issued: 'Issued' as LetterOfCreditStatus,\n    Rejected: 'Rejected' as LetterOfCreditStatus,\n    Expired: 'Expired' as LetterOfCreditStatus,\n    Closed: 'Closed' as LetterOfCreditStatus\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Letter of credit supported types\n */\nexport type LetterOfCreditType = 'Irrevocable' | 'Irrevocable Transferable' | 'Straight' | 'Negotiable' | 'Restricted';\n\nexport const LetterOfCreditType = {\n    Irrevocable: 'Irrevocable' as LetterOfCreditType,\n    IrrevocableTransferable: 'Irrevocable Transferable' as LetterOfCreditType,\n    Straight: 'Straight' as LetterOfCreditType,\n    Negotiable: 'Negotiable' as LetterOfCreditType,\n    Restricted: 'Restricted' as LetterOfCreditType\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Transport document notify party\n */\nexport type NotifyPartyType = 'Applicant' | 'Other';\n\nexport const NotifyPartyType = {\n    Applicant: 'Applicant' as NotifyPartyType,\n    Other: 'Other' as NotifyPartyType\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Defines if partial shipment is allowed / has condition\n */\nexport type PartialShipment = 'Yes' | 'No' | 'Conditional';\n\nexport const PartialShipment = {\n    Yes: 'Yes' as PartialShipment,\n    No: 'No' as PartialShipment,\n    Conditional: 'Conditional' as PartialShipment\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Types of the sea freight document\n */\nexport type SeaTransportDocumentType = 'Bill of Lading' | 'Multimodal Transport Document' | 'Charter party Bill of Lading' | 'Non-negotiable Sea Way Bill';\n\nexport const SeaTransportDocumentType = {\n    BillOfLading: 'Bill of Lading' as SeaTransportDocumentType,\n    MultimodalTransportDocument: 'Multimodal Transport Document' as SeaTransportDocumentType,\n    CharterPartyBillOfLading: 'Charter party Bill of Lading' as SeaTransportDocumentType,\n    NonNegotiableSeaWayBill: 'Non-negotiable Sea Way Bill' as SeaTransportDocumentType\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Settlement availability which determines to whom a presentation may be made\n */\nexport type SettlementAvailability = 'Advising Bank' | 'Confirming Bank' | 'Any Bank' | 'Advise Through Bank' | 'Issuing Bank' | 'Reimbursing Bank' | 'Other';\n\nexport const SettlementAvailability = {\n    AdvisingBank: 'Advising Bank' as SettlementAvailability,\n    ConfirmingBank: 'Confirming Bank' as SettlementAvailability,\n    AnyBank: 'Any Bank' as SettlementAvailability,\n    AdviseThroughBank: 'Advise Through Bank' as SettlementAvailability,\n    IssuingBank: 'Issuing Bank' as SettlementAvailability,\n    ReimbursingBank: 'Reimbursing Bank' as SettlementAvailability,\n    Other: 'Other' as SettlementAvailability\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Letter of credit settlement type. Usance - relates to deferred payments, sight - to immediate ones\n */\nexport type SettlementType = 'Usance - Acceptance' | 'Usance - Deferred payment' | 'Usance - Negotiation' | 'Sight - Sight payment' | 'Sight - Negotiation' | 'Other - Mixed payment';\n\nexport const SettlementType = {\n    UsanceAcceptance: 'Usance - Acceptance' as SettlementType,\n    UsanceDeferredPayment: 'Usance - Deferred payment' as SettlementType,\n    UsanceNegotiation: 'Usance - Negotiation' as SettlementType,\n    SightSightPayment: 'Sight - Sight payment' as SettlementType,\n    SightNegotiation: 'Sight - Negotiation' as SettlementType,\n    OtherMixedPayment: 'Other - Mixed payment' as SettlementType\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Defines which date should be considered to count expiration date from\n */\nexport type TenorFromDate = 'Sight' | 'Shipment date' | 'Invoice date' | 'Other';\n\nexport const TenorFromDate = {\n    Sight: 'Sight' as TenorFromDate,\n    ShipmentDate: 'Shipment date' as TenorFromDate,\n    InvoiceDate: 'Invoice date' as TenorFromDate,\n    Other: 'Other' as TenorFromDate\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Transport methods of carriage\n */\nexport type TransportMethod = 'Sea transport' | 'Air transport' | 'Road transport' | 'Rail transport' | 'Other transport';\n\nexport const TransportMethod = {\n    SeaTransport: 'Sea transport' as TransportMethod,\n    AirTransport: 'Air transport' as TransportMethod,\n    RoadTransport: 'Road transport' as TransportMethod,\n    RailTransport: 'Rail transport' as TransportMethod,\n    OtherTransport: 'Other transport' as TransportMethod\n};\n\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Defines transshipment condition\n */\nexport type Transshipment = 'Yes' | 'No' | 'Conditional';\n\nexport const Transshipment = {\n    Yes: 'Yes' as Transshipment,\n    No: 'No' as Transshipment,\n    Conditional: 'Conditional' as Transshipment\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const LETTER_OF_CREDIT_BASE_PATH = new InjectionToken<string>('LETTER_OF_CREDIT_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface LetterOfCreditConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class LetterOfCreditConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: LetterOfCreditConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link LetterOfCreditConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link LetterOfCreditConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module LetterOfCreditConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { LetterOfCreditConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class LetterOfCreditApiModule {\n    public static forRoot(configurationFactory: () => LetterOfCreditConfiguration): ModuleWithProviders<LetterOfCreditApiModule> {\n        return {\n            ngModule: LetterOfCreditApiModule,\n            providers: [ { provide: LetterOfCreditConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: LetterOfCreditApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: LetterOfCreditConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('LetterOfCreditApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Letter of Credit client API\n * Specification defines endpoints and schemas to manage Letter of Credit drafts and applications.\n *\n * The version of the OpenAPI document: 1.15.2-BETA\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { LetterOfCreditActions } from '../model/models';\nimport { LetterOfCreditApplication } from '../model/models';\nimport { LetterOfCreditApprovalsRequest } from '../model/models';\nimport { LetterOfCreditApprovalsResponse } from '../model/models';\nimport { LetterOfCreditRequest } from '../model/models';\n\nimport { LETTER_OF_CREDIT_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { LetterOfCreditConfiguration }                                     from '../configuration';\n\n\nexport interface GetLettersOfCreditRequestParams {\n    /** query parameter DTO which is represented by Letter Of Credit Request structure */\n    [\"filterParams\"]?: LetterOfCreditRequest;\n}\n\nexport interface GetLettersOfCreditActionsRequestParams {\n    [\"ids\"]: Array<string>;\n}\n\nexport interface GetLettersOfCreditApprovalsRequestParams {\n    [\"filterParams\"]?: LetterOfCreditApprovalsRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LetterOfCreditClientService {\n\n    protected basePath = '/api/letter-of-credit';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new LetterOfCreditConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(LETTER_OF_CREDIT_BASE_PATH) basePath: string, @Optional() configuration: LetterOfCreditConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Returns letter of credit drafts and applications based on parameters\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCredit(requestParameters: GetLettersOfCreditRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LetterOfCreditApplication>>;\n    /**\n     * Returns letter of credit drafts and applications based on parameters\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCredit(requestParameters: GetLettersOfCreditRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LetterOfCreditApplication>>>;\n    /**\n     * Returns letter of credit drafts and applications based on parameters\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCredit(requestParameters: GetLettersOfCreditRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LetterOfCreditApplication>>>;\n    /**\n     * Returns letter of credit drafts and applications based on parameters\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCredit(requestParameters: GetLettersOfCreditRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _filterParams = requestParameters[\"filterParams\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_filterParams !== undefined && _filterParams !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_filterParams, 'filterParams');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<LetterOfCreditApplication>>(`${this.configuration.basePath}/client-api/v1/letters-of-credit`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLettersOfCreditUrl(requestParameters: GetLettersOfCreditRequestParams): string {\n        const _filterParams = requestParameters[\"filterParams\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_filterParams !== undefined && _filterParams !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_filterParams, 'filterParams');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/letters-of-credit${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Returns letter of credit available actions based on user role privileges\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCreditActions(requestParameters: GetLettersOfCreditActionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LetterOfCreditActions>>;\n    /**\n     * Returns letter of credit available actions based on user role privileges\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCreditActions(requestParameters: GetLettersOfCreditActionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LetterOfCreditActions>>>;\n    /**\n     * Returns letter of credit available actions based on user role privileges\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCreditActions(requestParameters: GetLettersOfCreditActionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LetterOfCreditActions>>>;\n    /**\n     * Returns letter of credit available actions based on user role privileges\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCreditActions(requestParameters: GetLettersOfCreditActionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling getLettersOfCreditActions.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            queryParameters = this.addToHttpParams(queryParameters,\n                _ids.join(COLLECTION_FORMATS['csv']), 'ids');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<LetterOfCreditActions>>(`${this.configuration.basePath}/client-api/v1/letters-of-credit/actions`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLettersOfCreditActionsUrl(requestParameters: GetLettersOfCreditActionsRequestParams): string {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling getLettersOfCreditActions.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            queryParameters = this.addToHttpParams(queryParameters,\n                _ids.join(COLLECTION_FORMATS['csv']), 'ids');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/letters-of-credit/actions${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Returns letter of credit application approvals which require actions (approve / reject)\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCreditApprovals(requestParameters: GetLettersOfCreditApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LetterOfCreditApprovalsResponse>>;\n    /**\n     * Returns letter of credit application approvals which require actions (approve / reject)\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCreditApprovals(requestParameters: GetLettersOfCreditApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LetterOfCreditApprovalsResponse>>>;\n    /**\n     * Returns letter of credit application approvals which require actions (approve / reject)\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCreditApprovals(requestParameters: GetLettersOfCreditApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LetterOfCreditApprovalsResponse>>>;\n    /**\n     * Returns letter of credit application approvals which require actions (approve / reject)\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLettersOfCreditApprovals(requestParameters: GetLettersOfCreditApprovalsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _filterParams = requestParameters[\"filterParams\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_filterParams !== undefined && _filterParams !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_filterParams, 'filterParams');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<LetterOfCreditApprovalsResponse>>(`${this.configuration.basePath}/client-api/v1/letters-of-credit/approvals`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLettersOfCreditApprovalsUrl(requestParameters: GetLettersOfCreditApprovalsRequestParams): string {\n        const _filterParams = requestParameters[\"filterParams\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_filterParams !== undefined && _filterParams !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_filterParams, 'filterParams');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/letters-of-credit/approvals${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /api/letter-of-credit/client-api/v1/letters-of-credit URL pattern\n*/\nexport const LetterOfCreditClientServiceGetLettersOfCreditMocksProvider: Provider = createMocks([{\n        urlPattern: \"/api/letter-of-credit/client-api/v1/letters-of-credit\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"uuid\" : \"1234-asdf-4567-qwert\",\n  \"caseKey\" : \"1234-asdf-4567-qwert\",\n  \"referenceNumber\" : \"GA-123456789\",\n  \"internalReferenceNumber\" : \"int-ref-test\",\n  \"creationDate\" : \"2020-10-10T12:12:12.000Z\",\n  \"type\" : \"Irrevocable\",\n  \"status\" : \"Unauthorized\",\n  \"expiryDate\" : \"2020-12-10\",\n  \"expirationCity\" : \"Amsterdam\",\n  \"expirationCountry\" : \"The Netherlands\",\n  \"currencyCode\" : \"EUR\",\n  \"totalAmount\" : \"50000.00\",\n  \"amountTolerance\" : {\n    \"positive\" : \"2.5\",\n    \"negative\" : \"2.5\"\n  },\n  \"additionalAmountCovered\" : \"Additional charges - 1100 EUR\",\n  \"applicant\" : {\n    \"legalEntityId\" : \"1234567-12312-123123\",\n    \"legalName\" : \"Importazioni italiane LLC\",\n    \"email\" : \"test@export.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Rutto, 23\",\n      \"city\" : \"Roma\",\n      \"postalCode\" : \"00187\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"beneficiary\" : {\n    \"legalEntityId\" : \"1234567-12312-1475aaa\",\n    \"legalName\" : \"Umbrella Netherlands BV\",\n    \"email\" : \"test@umbrella.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Herengraht, 21\",\n      \"city\" : \"Amsterdam\",\n      \"postalCode\" : \"1008DG\",\n      \"country\" : \"The Netherlands\"\n    }\n  },\n  \"issuingBank\" : {\n    \"legalEntityId\" : \"b2cd61c2-23b7-4817-5a45\",\n    \"legalName\" : \"Banco emisor\",\n    \"businessIdentifierCode\" : \"MIDLXXGB22\",\n    \"email\" : \"test@emisor.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Av. de Cantabia\",\n      \"city\" : \"Boadilla del Monte\",\n      \"postalCode\" : \"28660\",\n      \"country\" : \"Spain\"\n    }\n  },\n  \"advisingBank\" : {\n    \"legalEntityId\" : \"e2as61c2-12b5-1111-5a47\",\n    \"legalName\" : \"Consigliare la Banca\",\n    \"businessIdentifierCode\" : \"456789123\",\n    \"email\" : \"test@consigliare.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Irnerio, 14\",\n      \"city\" : \"Bologna\",\n      \"postalCode\" : \"40121\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"confirmingBankPresence\" : \"PRESENT\",\n  \"confirmingBank\" : {\n    \"legalEntityId\" : \"d76s6ac2-12b5-000f-5a12\",\n    \"legalName\" : \"Confermando la Banca\",\n    \"businessIdentifierCode\" : \"789123456\",\n    \"email\" : \"test@confermando.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Del Cestello, 46\",\n      \"city\" : \"Bologna\",\n      \"postalCode\" : \"40124\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"attachments\" : [ {\n    \"uuid\" : \"550e8400-e29b-41d4-a716-446655440000\",\n    \"type\" : \"PDF\",\n    \"name\" : \"invoice\",\n    \"size\" : 130\n  } ],\n  \"settlement\" : {\n    \"settlementBy\" : \"Other - Mixed payment\",\n    \"mixedPaymentDetails\" : \"50 percent of the total lc value payable at sight\",\n    \"availableWith\" : \"Advising Bank\",\n    \"tenorDays\" : \"30\",\n    \"tenorFromDate\" : \"Shipment date\",\n    \"requiresDraft\" : \"true\",\n    \"drawee\" : \"OTHER\",\n    \"draweeName\" : \"Confirming bank\"\n  },\n  \"shipment\" : {\n    \"shippedFrom\" : \"Utrecht, The Netherlands\",\n    \"shippedTo\" : \"Kyiv, Ukraine\",\n    \"shippingPort\" : \"Port of Rotterdam\",\n    \"destinationPort\" : \"Odessa\",\n    \"partialShipment\" : \"Conditional\",\n    \"partialShipmentCondition\" : \"Only if cargo doesn't suit standard 20ft\",\n    \"transshipment\" : \"Yes\",\n    \"transshipmentCondition\" : \"Transshipment is fulfilled in Valencia\",\n    \"latestShipmentDate\" : \"2021-05-23\",\n    \"productDescription\" : \"Carrot\",\n    \"deliveryConditions\" : \"Incoterms 2000\",\n    \"termOfDelivery\" : \"DDU\",\n    \"deliveryPlace\" : \"Kyiv\"\n  },\n  \"requestedDocuments\" : {\n    \"commercialInvoice\" : {\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"transportDocument\" : {\n      \"transportMethod\" : \"Sea transport\",\n      \"seaTransportDocumentDetails\" : {\n        \"documentType\" : \"Bill of Lading\",\n        \"freightMark\" : \"Prepaid\",\n        \"billOfLadingIssuanceDetails\" : {\n          \"issuanceType\" : \"To the order of\",\n          \"issuanceDetails\" : \"Consignee\"\n        }\n      },\n      \"notifyParty\" : {\n        \"notifyPartyType\" : \"Other\",\n        \"notifyPartyName\" : \"Alice\"\n      }\n    },\n    \"packingListEnabled\" : true,\n    \"packingList\" : {\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"certificateOfOriginEnabled\" : true,\n    \"certificateOfOrigin\" : {\n      \"countryOfOrigin\" : \"Ukraine\",\n      \"issuer\" : \"Other\",\n      \"issuerName\" : \"Consignee\",\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"inspectionCertificateEnabled\" : true,\n    \"insuranceCertificateEnabled\" : true,\n    \"insuranceCertificate\" : {\n      \"coverage\" : 100,\n      \"riskCoverageDetails\" : \"Full coverage\"\n    },\n    \"phytosanitaryCertificateEnabled\" : true,\n    \"legalisedCommercialDocumentsEnabled\" : true,\n    \"billOfExchangeEnabled\" : true,\n    \"additionalDocuments\" : [ {\n      \"name\" : \"Commercial contract\",\n      \"comment\" : \"Supplement commercial contract\"\n    }, {\n      \"name\" : \"Addendum\",\n      \"comment\" : \"Addendum to the commercial contract, 2 copies\"\n    } ],\n    \"documentConditions\" : {\n      \"presentationPeriod\" : 30,\n      \"presentationCondition\" : \"Other\",\n      \"presentationConditionDetails\" : \"Only originals are considered valid\",\n      \"additionalConditions\" : [ {\n        \"condition\" : \"Documents should be sent by the carrier\"\n      }, {\n        \"condition\" : \"Shipping insurance at the shipper's expense\"\n      } ]\n    }\n  },\n  \"feesDetails\" : {\n    \"feePayingStrategy\" : \"Fees split between me and beneficiary\",\n    \"insuranceFeePayingParty\" : \"Beneficiary\",\n    \"confirmingFeePayingParty\" : \"Me\",\n    \"otherFeePayingParty\" : \"Me\",\n    \"bankAccount\" : {\n      \"arrangementId\" : \"b2ab66c1-11b7-480f-5a17\",\n      \"accountName\" : \"Corporate CDU Account\",\n      \"bankAccountNumber\" : \"****4784\",\n      \"amount\" : \"8459.05\",\n      \"currencyCode\" : \"EUR\"\n    }\n  }\n}, {\n  \"uuid\" : \"7523-asdf-7523-qwert\",\n  \"caseKey\" : \"7523-asdf-7523-qwert\",\n  \"referenceNumber\" : \"GA-123456780\",\n  \"internalReferenceNumber\" : \"int-ref-test-2\",\n  \"creationDate\" : \"2020-10-10T12:12:12.000Z\",\n  \"type\" : \"Irrevocable\",\n  \"status\" : \"Unauthorized\",\n  \"expiryDate\" : \"2020-12-10\",\n  \"expirationCity\" : \"Amsterdam\",\n  \"expirationCountry\" : \"The Netherlands\",\n  \"currencyCode\" : \"EUR\",\n  \"totalAmount\" : \"10000.00\",\n  \"amountTolerance\" : {\n    \"positive\" : \"2.5\",\n    \"negative\" : \"2.5\"\n  },\n  \"additionalAmountCovered\" : \"Additional charges - 1100 EUR\",\n  \"applicant\" : {\n    \"legalEntityId\" : \"1234567-12312-123123\",\n    \"legalName\" : \"Importazioni italiane LLC\",\n    \"email\" : \"test@export.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Rutto, 23\",\n      \"city\" : \"Roma\",\n      \"postalCode\" : \"00187\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"beneficiary\" : {\n    \"legalEntityId\" : \"1234567-12312-1475aaa\",\n    \"legalName\" : \"Umbrella Netherlands BV\",\n    \"email\" : \"test@umbrella.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Herengraht, 21\",\n      \"city\" : \"Amsterdam\",\n      \"postalCode\" : \"1008DG\",\n      \"country\" : \"The Netherlands\"\n    }\n  },\n  \"issuingBank\" : {\n    \"legalEntityId\" : \"b2cd61c2-23b7-4817-5a45\",\n    \"legalName\" : \"Banco emisor\",\n    \"businessIdentifierCode\" : \"MIDLXXGB22\",\n    \"email\" : \"test@emisor.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Av. de Cantabia\",\n      \"city\" : \"Boadilla del Monte\",\n      \"postalCode\" : \"28660\",\n      \"country\" : \"Spain\"\n    }\n  },\n  \"advisingBank\" : {\n    \"legalEntityId\" : \"e2as61c2-12b5-1111-5a47\",\n    \"legalName\" : \"Consigliare la Banca\",\n    \"businessIdentifierCode\" : \"456789123\",\n    \"email\" : \"test@consigliare.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Irnerio, 14\",\n      \"city\" : \"Bologna\",\n      \"postalCode\" : \"40121\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"confirmingBankPresence\" : \"PRESENT\",\n  \"confirmingBank\" : {\n    \"legalEntityId\" : \"d76s6ac2-12b5-000f-5a12\",\n    \"legalName\" : \"Confermando la Banca\",\n    \"businessIdentifierCode\" : \"789123456\",\n    \"email\" : \"test@confermando.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Del Cestello, 46\",\n      \"city\" : \"Bologna\",\n      \"postalCode\" : \"40124\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"attachments\" : [ {\n    \"uuid\" : \"550e8400-e29b-41d4-a716-446655440001\",\n    \"type\" : \"PDF\",\n    \"name\" : \"invoice\",\n    \"size\" : 130\n  } ],\n  \"settlement\" : {\n    \"settlementBy\" : \"Other - Mixed payment\",\n    \"mixedPaymentDetails\" : \"50 percent of the total lc value payable at sight\",\n    \"availableWith\" : \"Advising Bank\",\n    \"tenorDays\" : \"30\",\n    \"tenorFromDate\" : \"Shipment date\",\n    \"requiresDraft\" : \"true\",\n    \"drawee\" : \"OTHER\",\n    \"draweeName\" : \"Confirming bank\"\n  },\n  \"shipment\" : {\n    \"shippedFrom\" : \"Utrecht, The Netherlands\",\n    \"shippedTo\" : \"Kyiv, Ukraine\",\n    \"shippingPort\" : \"Port of Rotterdam\",\n    \"destinationPort\" : \"Odessa\",\n    \"partialShipment\" : \"Conditional\",\n    \"partialShipmentCondition\" : \"Only if cargo doesn't suit standard 20ft\",\n    \"transshipment\" : \"Yes\",\n    \"transshipmentCondition\" : \"Transshipment is fulfilled in Valencia\",\n    \"latestShipmentDate\" : \"2021-05-23\",\n    \"productDescription\" : \"Carrot\",\n    \"deliveryConditions\" : \"Incoterms 2000\",\n    \"termOfDelivery\" : \"DDU\",\n    \"deliveryPlace\" : \"Kyiv\"\n  },\n  \"requestedDocuments\" : {\n    \"commercialInvoice\" : {\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"transportDocument\" : {\n      \"transportMethod\" : \"Sea transport\",\n      \"seaTransportDocumentDetails\" : {\n        \"documentType\" : \"Bill of Lading\",\n        \"freightMark\" : \"Prepaid\",\n        \"billOfLadingIssuanceDetails\" : {\n          \"issuanceType\" : \"To the order of\",\n          \"issuanceDetails\" : \"Consignee\"\n        }\n      },\n      \"notifyParty\" : {\n        \"notifyPartyType\" : \"Other\",\n        \"notifyPartyName\" : \"Alice\"\n      }\n    },\n    \"packingListEnabled\" : true,\n    \"packingList\" : {\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"certificateOfOriginEnabled\" : true,\n    \"certificateOfOrigin\" : {\n      \"countryOfOrigin\" : \"Ukraine\",\n      \"issuer\" : \"Other\",\n      \"issuerName\" : \"Consignee\",\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"inspectionCertificateEnabled\" : true,\n    \"insuranceCertificateEnabled\" : true,\n    \"insuranceCertificate\" : {\n      \"coverage\" : 100,\n      \"riskCoverageDetails\" : \"Full coverage\"\n    },\n    \"phytosanitaryCertificateEnabled\" : true,\n    \"legalisedCommercialDocumentsEnabled\" : true,\n    \"billOfExchangeEnabled\" : true,\n    \"additionalDocuments\" : [ {\n      \"name\" : \"Commercial contract\",\n      \"comment\" : \"Supplement commercial contract\"\n    }, {\n      \"name\" : \"Addendum\",\n      \"comment\" : \"Addendum to the commercial contract, 2 copies\"\n    } ],\n    \"documentConditions\" : {\n      \"presentationPeriod\" : 30,\n      \"presentationCondition\" : \"Other\",\n      \"presentationConditionDetails\" : \"Only originals are considered valid\",\n      \"additionalConditions\" : [ {\n        \"condition\" : \"Documents should be sent by the carrier\"\n      }, {\n        \"condition\" : \"Shipping insurance at the shipper's expense\"\n      } ]\n    }\n  },\n  \"feesDetails\" : {\n    \"feePayingStrategy\" : \"Fees split between me and beneficiary\",\n    \"insuranceFeePayingParty\" : \"Beneficiary\",\n    \"confirmingFeePayingParty\" : \"Me\",\n    \"otherFeePayingParty\" : \"Me\",\n    \"bankAccount\" : {\n      \"arrangementId\" : \"b2ab66c1-11b7-480f-5a17\",\n      \"accountName\" : \"Corporate CDU Account\",\n      \"bankAccountNumber\" : \"****4784\",\n      \"amount\" : \"8459.05\",\n      \"currencyCode\" : \"EUR\"\n    }\n  }\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /api/letter-of-credit/client-api/v1/letters-of-credit/actions URL pattern\n*/\nexport const LetterOfCreditClientServiceGetLettersOfCreditActionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/api/letter-of-credit/client-api/v1/letters-of-credit/actions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"letterOfCreditId\" : \"1234-asdf-4567-qwert\",\n  \"actions\" : [ \"VIEW\", \"MODIFY\" ]\n}, {\n  \"letterOfCreditId\" : \"7523-asdf-7523-qwert\",\n  \"actions\" : [ \"VIEW\", \"MODIFY\", \"CANCEL\" ]\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /api/letter-of-credit/client-api/v1/letters-of-credit/approvals URL pattern\n*/\nexport const LetterOfCreditClientServiceGetLettersOfCreditApprovalsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/api/letter-of-credit/client-api/v1/letters-of-credit/approvals\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"approvalId\" : \"1234-asdf-4567-qwert\",\n  \"letterOfCreditId\" : \"1234-asdf-4567-qwert\",\n  \"canApprove\" : false,\n  \"canReject\" : true\n}, {\n  \"approvalId\" : \"1006-asdf-4567-AAAss\",\n  \"letterOfCreditId\" : \"7523-asdf-7523-qwert\",\n  \"canApprove\" : true,\n  \"canReject\" : true\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const LetterOfCreditClientServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/api/letter-of-credit/client-api/v1/letters-of-credit\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"uuid\" : \"1234-asdf-4567-qwert\",\n  \"caseKey\" : \"1234-asdf-4567-qwert\",\n  \"referenceNumber\" : \"GA-123456789\",\n  \"internalReferenceNumber\" : \"int-ref-test\",\n  \"creationDate\" : \"2020-10-10T12:12:12.000Z\",\n  \"type\" : \"Irrevocable\",\n  \"status\" : \"Unauthorized\",\n  \"expiryDate\" : \"2020-12-10\",\n  \"expirationCity\" : \"Amsterdam\",\n  \"expirationCountry\" : \"The Netherlands\",\n  \"currencyCode\" : \"EUR\",\n  \"totalAmount\" : \"50000.00\",\n  \"amountTolerance\" : {\n    \"positive\" : \"2.5\",\n    \"negative\" : \"2.5\"\n  },\n  \"additionalAmountCovered\" : \"Additional charges - 1100 EUR\",\n  \"applicant\" : {\n    \"legalEntityId\" : \"1234567-12312-123123\",\n    \"legalName\" : \"Importazioni italiane LLC\",\n    \"email\" : \"test@export.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Rutto, 23\",\n      \"city\" : \"Roma\",\n      \"postalCode\" : \"00187\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"beneficiary\" : {\n    \"legalEntityId\" : \"1234567-12312-1475aaa\",\n    \"legalName\" : \"Umbrella Netherlands BV\",\n    \"email\" : \"test@umbrella.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Herengraht, 21\",\n      \"city\" : \"Amsterdam\",\n      \"postalCode\" : \"1008DG\",\n      \"country\" : \"The Netherlands\"\n    }\n  },\n  \"issuingBank\" : {\n    \"legalEntityId\" : \"b2cd61c2-23b7-4817-5a45\",\n    \"legalName\" : \"Banco emisor\",\n    \"businessIdentifierCode\" : \"MIDLXXGB22\",\n    \"email\" : \"test@emisor.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Av. de Cantabia\",\n      \"city\" : \"Boadilla del Monte\",\n      \"postalCode\" : \"28660\",\n      \"country\" : \"Spain\"\n    }\n  },\n  \"advisingBank\" : {\n    \"legalEntityId\" : \"e2as61c2-12b5-1111-5a47\",\n    \"legalName\" : \"Consigliare la Banca\",\n    \"businessIdentifierCode\" : \"456789123\",\n    \"email\" : \"test@consigliare.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Irnerio, 14\",\n      \"city\" : \"Bologna\",\n      \"postalCode\" : \"40121\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"confirmingBankPresence\" : \"PRESENT\",\n  \"confirmingBank\" : {\n    \"legalEntityId\" : \"d76s6ac2-12b5-000f-5a12\",\n    \"legalName\" : \"Confermando la Banca\",\n    \"businessIdentifierCode\" : \"789123456\",\n    \"email\" : \"test@confermando.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Del Cestello, 46\",\n      \"city\" : \"Bologna\",\n      \"postalCode\" : \"40124\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"attachments\" : [ {\n    \"uuid\" : \"550e8400-e29b-41d4-a716-446655440000\",\n    \"type\" : \"PDF\",\n    \"name\" : \"invoice\",\n    \"size\" : 130\n  } ],\n  \"settlement\" : {\n    \"settlementBy\" : \"Other - Mixed payment\",\n    \"mixedPaymentDetails\" : \"50 percent of the total lc value payable at sight\",\n    \"availableWith\" : \"Advising Bank\",\n    \"tenorDays\" : \"30\",\n    \"tenorFromDate\" : \"Shipment date\",\n    \"requiresDraft\" : \"true\",\n    \"drawee\" : \"OTHER\",\n    \"draweeName\" : \"Confirming bank\"\n  },\n  \"shipment\" : {\n    \"shippedFrom\" : \"Utrecht, The Netherlands\",\n    \"shippedTo\" : \"Kyiv, Ukraine\",\n    \"shippingPort\" : \"Port of Rotterdam\",\n    \"destinationPort\" : \"Odessa\",\n    \"partialShipment\" : \"Conditional\",\n    \"partialShipmentCondition\" : \"Only if cargo doesn't suit standard 20ft\",\n    \"transshipment\" : \"Yes\",\n    \"transshipmentCondition\" : \"Transshipment is fulfilled in Valencia\",\n    \"latestShipmentDate\" : \"2021-05-23\",\n    \"productDescription\" : \"Carrot\",\n    \"deliveryConditions\" : \"Incoterms 2000\",\n    \"termOfDelivery\" : \"DDU\",\n    \"deliveryPlace\" : \"Kyiv\"\n  },\n  \"requestedDocuments\" : {\n    \"commercialInvoice\" : {\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"transportDocument\" : {\n      \"transportMethod\" : \"Sea transport\",\n      \"seaTransportDocumentDetails\" : {\n        \"documentType\" : \"Bill of Lading\",\n        \"freightMark\" : \"Prepaid\",\n        \"billOfLadingIssuanceDetails\" : {\n          \"issuanceType\" : \"To the order of\",\n          \"issuanceDetails\" : \"Consignee\"\n        }\n      },\n      \"notifyParty\" : {\n        \"notifyPartyType\" : \"Other\",\n        \"notifyPartyName\" : \"Alice\"\n      }\n    },\n    \"packingListEnabled\" : true,\n    \"packingList\" : {\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"certificateOfOriginEnabled\" : true,\n    \"certificateOfOrigin\" : {\n      \"countryOfOrigin\" : \"Ukraine\",\n      \"issuer\" : \"Other\",\n      \"issuerName\" : \"Consignee\",\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"inspectionCertificateEnabled\" : true,\n    \"insuranceCertificateEnabled\" : true,\n    \"insuranceCertificate\" : {\n      \"coverage\" : 100,\n      \"riskCoverageDetails\" : \"Full coverage\"\n    },\n    \"phytosanitaryCertificateEnabled\" : true,\n    \"legalisedCommercialDocumentsEnabled\" : true,\n    \"billOfExchangeEnabled\" : true,\n    \"additionalDocuments\" : [ {\n      \"name\" : \"Commercial contract\",\n      \"comment\" : \"Supplement commercial contract\"\n    }, {\n      \"name\" : \"Addendum\",\n      \"comment\" : \"Addendum to the commercial contract, 2 copies\"\n    } ],\n    \"documentConditions\" : {\n      \"presentationPeriod\" : 30,\n      \"presentationCondition\" : \"Other\",\n      \"presentationConditionDetails\" : \"Only originals are considered valid\",\n      \"additionalConditions\" : [ {\n        \"condition\" : \"Documents should be sent by the carrier\"\n      }, {\n        \"condition\" : \"Shipping insurance at the shipper's expense\"\n      } ]\n    }\n  },\n  \"feesDetails\" : {\n    \"feePayingStrategy\" : \"Fees split between me and beneficiary\",\n    \"insuranceFeePayingParty\" : \"Beneficiary\",\n    \"confirmingFeePayingParty\" : \"Me\",\n    \"otherFeePayingParty\" : \"Me\",\n    \"bankAccount\" : {\n      \"arrangementId\" : \"b2ab66c1-11b7-480f-5a17\",\n      \"accountName\" : \"Corporate CDU Account\",\n      \"bankAccountNumber\" : \"****4784\",\n      \"amount\" : \"8459.05\",\n      \"currencyCode\" : \"EUR\"\n    }\n  }\n}, {\n  \"uuid\" : \"7523-asdf-7523-qwert\",\n  \"caseKey\" : \"7523-asdf-7523-qwert\",\n  \"referenceNumber\" : \"GA-123456780\",\n  \"internalReferenceNumber\" : \"int-ref-test-2\",\n  \"creationDate\" : \"2020-10-10T12:12:12.000Z\",\n  \"type\" : \"Irrevocable\",\n  \"status\" : \"Unauthorized\",\n  \"expiryDate\" : \"2020-12-10\",\n  \"expirationCity\" : \"Amsterdam\",\n  \"expirationCountry\" : \"The Netherlands\",\n  \"currencyCode\" : \"EUR\",\n  \"totalAmount\" : \"10000.00\",\n  \"amountTolerance\" : {\n    \"positive\" : \"2.5\",\n    \"negative\" : \"2.5\"\n  },\n  \"additionalAmountCovered\" : \"Additional charges - 1100 EUR\",\n  \"applicant\" : {\n    \"legalEntityId\" : \"1234567-12312-123123\",\n    \"legalName\" : \"Importazioni italiane LLC\",\n    \"email\" : \"test@export.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Rutto, 23\",\n      \"city\" : \"Roma\",\n      \"postalCode\" : \"00187\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"beneficiary\" : {\n    \"legalEntityId\" : \"1234567-12312-1475aaa\",\n    \"legalName\" : \"Umbrella Netherlands BV\",\n    \"email\" : \"test@umbrella.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Herengraht, 21\",\n      \"city\" : \"Amsterdam\",\n      \"postalCode\" : \"1008DG\",\n      \"country\" : \"The Netherlands\"\n    }\n  },\n  \"issuingBank\" : {\n    \"legalEntityId\" : \"b2cd61c2-23b7-4817-5a45\",\n    \"legalName\" : \"Banco emisor\",\n    \"businessIdentifierCode\" : \"MIDLXXGB22\",\n    \"email\" : \"test@emisor.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Av. de Cantabia\",\n      \"city\" : \"Boadilla del Monte\",\n      \"postalCode\" : \"28660\",\n      \"country\" : \"Spain\"\n    }\n  },\n  \"advisingBank\" : {\n    \"legalEntityId\" : \"e2as61c2-12b5-1111-5a47\",\n    \"legalName\" : \"Consigliare la Banca\",\n    \"businessIdentifierCode\" : \"456789123\",\n    \"email\" : \"test@consigliare.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Irnerio, 14\",\n      \"city\" : \"Bologna\",\n      \"postalCode\" : \"40121\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"confirmingBankPresence\" : \"PRESENT\",\n  \"confirmingBank\" : {\n    \"legalEntityId\" : \"d76s6ac2-12b5-000f-5a12\",\n    \"legalName\" : \"Confermando la Banca\",\n    \"businessIdentifierCode\" : \"789123456\",\n    \"email\" : \"test@confermando.com\",\n    \"legalAddress\" : {\n      \"addressLine1\" : \"Via Del Cestello, 46\",\n      \"city\" : \"Bologna\",\n      \"postalCode\" : \"40124\",\n      \"country\" : \"Italy\"\n    }\n  },\n  \"attachments\" : [ {\n    \"uuid\" : \"550e8400-e29b-41d4-a716-446655440001\",\n    \"type\" : \"PDF\",\n    \"name\" : \"invoice\",\n    \"size\" : 130\n  } ],\n  \"settlement\" : {\n    \"settlementBy\" : \"Other - Mixed payment\",\n    \"mixedPaymentDetails\" : \"50 percent of the total lc value payable at sight\",\n    \"availableWith\" : \"Advising Bank\",\n    \"tenorDays\" : \"30\",\n    \"tenorFromDate\" : \"Shipment date\",\n    \"requiresDraft\" : \"true\",\n    \"drawee\" : \"OTHER\",\n    \"draweeName\" : \"Confirming bank\"\n  },\n  \"shipment\" : {\n    \"shippedFrom\" : \"Utrecht, The Netherlands\",\n    \"shippedTo\" : \"Kyiv, Ukraine\",\n    \"shippingPort\" : \"Port of Rotterdam\",\n    \"destinationPort\" : \"Odessa\",\n    \"partialShipment\" : \"Conditional\",\n    \"partialShipmentCondition\" : \"Only if cargo doesn't suit standard 20ft\",\n    \"transshipment\" : \"Yes\",\n    \"transshipmentCondition\" : \"Transshipment is fulfilled in Valencia\",\n    \"latestShipmentDate\" : \"2021-05-23\",\n    \"productDescription\" : \"Carrot\",\n    \"deliveryConditions\" : \"Incoterms 2000\",\n    \"termOfDelivery\" : \"DDU\",\n    \"deliveryPlace\" : \"Kyiv\"\n  },\n  \"requestedDocuments\" : {\n    \"commercialInvoice\" : {\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"transportDocument\" : {\n      \"transportMethod\" : \"Sea transport\",\n      \"seaTransportDocumentDetails\" : {\n        \"documentType\" : \"Bill of Lading\",\n        \"freightMark\" : \"Prepaid\",\n        \"billOfLadingIssuanceDetails\" : {\n          \"issuanceType\" : \"To the order of\",\n          \"issuanceDetails\" : \"Consignee\"\n        }\n      },\n      \"notifyParty\" : {\n        \"notifyPartyType\" : \"Other\",\n        \"notifyPartyName\" : \"Alice\"\n      }\n    },\n    \"packingListEnabled\" : true,\n    \"packingList\" : {\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"certificateOfOriginEnabled\" : true,\n    \"certificateOfOrigin\" : {\n      \"countryOfOrigin\" : \"Ukraine\",\n      \"issuer\" : \"Other\",\n      \"issuerName\" : \"Consignee\",\n      \"numberOfOriginals\" : 3,\n      \"numberOfCopies\" : 3\n    },\n    \"inspectionCertificateEnabled\" : true,\n    \"insuranceCertificateEnabled\" : true,\n    \"insuranceCertificate\" : {\n      \"coverage\" : 100,\n      \"riskCoverageDetails\" : \"Full coverage\"\n    },\n    \"phytosanitaryCertificateEnabled\" : true,\n    \"legalisedCommercialDocumentsEnabled\" : true,\n    \"billOfExchangeEnabled\" : true,\n    \"additionalDocuments\" : [ {\n      \"name\" : \"Commercial contract\",\n      \"comment\" : \"Supplement commercial contract\"\n    }, {\n      \"name\" : \"Addendum\",\n      \"comment\" : \"Addendum to the commercial contract, 2 copies\"\n    } ],\n    \"documentConditions\" : {\n      \"presentationPeriod\" : 30,\n      \"presentationCondition\" : \"Other\",\n      \"presentationConditionDetails\" : \"Only originals are considered valid\",\n      \"additionalConditions\" : [ {\n        \"condition\" : \"Documents should be sent by the carrier\"\n      }, {\n        \"condition\" : \"Shipping insurance at the shipper's expense\"\n      } ]\n    }\n  },\n  \"feesDetails\" : {\n    \"feePayingStrategy\" : \"Fees split between me and beneficiary\",\n    \"insuranceFeePayingParty\" : \"Beneficiary\",\n    \"confirmingFeePayingParty\" : \"Me\",\n    \"otherFeePayingParty\" : \"Me\",\n    \"bankAccount\" : {\n      \"arrangementId\" : \"b2ab66c1-11b7-480f-5a17\",\n      \"accountName\" : \"Corporate CDU Account\",\n      \"bankAccountNumber\" : \"****4784\",\n      \"amount\" : \"8459.05\",\n      \"currencyCode\" : \"EUR\"\n    }\n  }\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/api/letter-of-credit/client-api/v1/letters-of-credit/actions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"letterOfCreditId\" : \"1234-asdf-4567-qwert\",\n  \"actions\" : [ \"VIEW\", \"MODIFY\" ]\n}, {\n  \"letterOfCreditId\" : \"7523-asdf-7523-qwert\",\n  \"actions\" : [ \"VIEW\", \"MODIFY\", \"CANCEL\" ]\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/api/letter-of-credit/client-api/v1/letters-of-credit/approvals\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"approvalId\" : \"1234-asdf-4567-qwert\",\n  \"letterOfCreditId\" : \"1234-asdf-4567-qwert\",\n  \"canApprove\" : false,\n  \"canReject\" : true\n}, {\n  \"approvalId\" : \"1006-asdf-4567-AAAss\",\n  \"letterOfCreditId\" : \"7523-asdf-7523-qwert\",\n  \"canApprove\" : true,\n  \"canReject\" : true\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["LetterOfCreditActions","LetterOfCreditRequest","InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}