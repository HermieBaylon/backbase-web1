import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { LetterOfCreditActions } from '../model/models';
import { LetterOfCreditApplication } from '../model/models';
import { LetterOfCreditApprovalsRequest } from '../model/models';
import { LetterOfCreditApprovalsResponse } from '../model/models';
import { LetterOfCreditRequest } from '../model/models';
import { LetterOfCreditConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetLettersOfCreditRequestParams {
    ["filterParams"]?: LetterOfCreditRequest;
}
export interface GetLettersOfCreditActionsRequestParams {
    ["ids"]: Array<string>;
}
export interface GetLettersOfCreditApprovalsRequestParams {
    ["filterParams"]?: LetterOfCreditApprovalsRequest;
}
export declare class LetterOfCreditClientService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: LetterOfCreditConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: LetterOfCreditConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getLettersOfCredit(requestParameters: GetLettersOfCreditRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<Array<LetterOfCreditApplication>>;
    getLettersOfCredit(requestParameters: GetLettersOfCreditRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<Array<LetterOfCreditApplication>>>;
    getLettersOfCredit(requestParameters: GetLettersOfCreditRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<Array<LetterOfCreditApplication>>>;
    getLettersOfCreditUrl(requestParameters: GetLettersOfCreditRequestParams): string;
    getLettersOfCreditActions(requestParameters: GetLettersOfCreditActionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<Array<LetterOfCreditActions>>;
    getLettersOfCreditActions(requestParameters: GetLettersOfCreditActionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<Array<LetterOfCreditActions>>>;
    getLettersOfCreditActions(requestParameters: GetLettersOfCreditActionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<Array<LetterOfCreditActions>>>;
    getLettersOfCreditActionsUrl(requestParameters: GetLettersOfCreditActionsRequestParams): string;
    getLettersOfCreditApprovals(requestParameters: GetLettersOfCreditApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<Array<LetterOfCreditApprovalsResponse>>;
    getLettersOfCreditApprovals(requestParameters: GetLettersOfCreditApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<Array<LetterOfCreditApprovalsResponse>>>;
    getLettersOfCreditApprovals(requestParameters: GetLettersOfCreditApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<Array<LetterOfCreditApprovalsResponse>>>;
    getLettersOfCreditApprovalsUrl(requestParameters: GetLettersOfCreditApprovalsRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<LetterOfCreditClientService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<LetterOfCreditClientService>;
}
