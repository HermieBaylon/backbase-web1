import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CurrencyCode } from '../model/models';
import { SupportedCurrencyGetResponse } from '../model/models';
import { PortfolioSummaryConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface PutDefaultCurrencyRequestParams {
    ["currencyCode"]?: CurrencyCode;
}
export declare class CurrencyClientHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: PortfolioSummaryConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: PortfolioSummaryConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    deleteDefaultCurrency(observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    deleteDefaultCurrency(observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    deleteDefaultCurrency(observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    deleteDefaultCurrencyUrl(): string;
    getSupportedCurrency(observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<SupportedCurrencyGetResponse>;
    getSupportedCurrency(observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<SupportedCurrencyGetResponse>>;
    getSupportedCurrency(observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<SupportedCurrencyGetResponse>>;
    getSupportedCurrencyUrl(): string;
    putDefaultCurrency(requestParameters: PutDefaultCurrencyRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    putDefaultCurrency(requestParameters: PutDefaultCurrencyRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    putDefaultCurrency(requestParameters: PutDefaultCurrencyRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    putDefaultCurrencyUrl(requestParameters: PutDefaultCurrencyRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<CurrencyClientHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CurrencyClientHttpService>;
}
