import { InjectionToken } from '@angular/core';
import { RemoteConfigParameters } from '../core/remote-config.types';
import { RemoteConfigFetcherService } from './remote-config-fetcher.service';
import { RemoteConfigConfiguration } from './remote-config.types';
export declare const RemoteConfigConfigurationToken: InjectionToken<RemoteConfigConfiguration<any>>;
export declare class RemoteConfigService<T extends RemoteConfigParameters> {
    private readonly configuration;
    private readonly configFetcher;
    private readonly remoteConfigClient;
    private readonly disabled;
    constructor(configuration: RemoteConfigConfiguration<T>, configFetcher: RemoteConfigFetcherService<T>);
    addCustomTag(tag: string): void;
    clearCustomTags(): void;
    getValue<K extends keyof T & string>(parameterName: K): T[K];
    fetchAndActivate(): Promise<void>;
    removeCustomTag(tag: string): boolean;
}
