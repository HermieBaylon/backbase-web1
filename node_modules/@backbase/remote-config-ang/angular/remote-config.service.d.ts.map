{"version":3,"file":"remote-config.service.d.ts","sources":["remote-config.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { RemoteConfigParameters } from '../core/remote-config.types';\nimport { RemoteConfigFetcherService } from './remote-config-fetcher.service';\nimport { RemoteConfigConfiguration } from './remote-config.types';\nexport declare const RemoteConfigConfigurationToken: InjectionToken<RemoteConfigConfiguration<any>>;\nexport declare class RemoteConfigService<T extends RemoteConfigParameters> {\n    private readonly configuration;\n    private readonly configFetcher;\n    private readonly remoteConfigClient;\n    private readonly disabled;\n    constructor(configuration: RemoteConfigConfiguration<T>, configFetcher: RemoteConfigFetcherService<T>);\n    addCustomTag(tag: string): void;\n    clearCustomTags(): void;\n    getValue<K extends keyof T & string>(parameterName: K): T[K];\n    fetchAndActivate(): Promise<void>;\n    removeCustomTag(tag: string): boolean;\n}\n"]}