{"version":3,"file":"backbase-transactions-common-ang.umd.js","sources":["../../../../../../node_modules/tslib/tslib.es6.js","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-list-options.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-filter-options.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/available-filters.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/constants.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-list.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-list-utils.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/widget-properties.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/account-list.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/accounts.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/transactions.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transactions-number-of-results-found.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transactions-number-of-results-found.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-check-images.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-details.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/accessibility-keyboard.directive.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-check-image-item.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-check-image-item.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/UI/document-viewer-commons.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/document-viewer-backdrop/document-viewer-backdrop.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/document-viewer-backdrop/document-viewer-backdrop.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/document-viewer-header/document-viewer-header.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/document-viewer-header/document-viewer-header.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/document-viewer-interactor/document-viewer-interactor.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/document-viewer-interactor/document-viewer-interactor.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/image-viewer/image-viewer.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/image-viewer/image-viewer.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/document-viewer-container/document-viewer-container.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/document-viewer-ui/document-viewer-container/document-viewer-container.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-check-image-document-viewer.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-check-image-document-viewer.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-check-image.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-check-image.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transactions-inquiry-dispute.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transactions-inquiry-dispute.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-dispute-status-tag.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-dispute-status-tag.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-dispute-banner.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-dispute-banner.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-backend-error.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-export-options.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/pending-transactions.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-map.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/map-api-loader.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/payments-batch.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/transaction-details.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/available-filters-config.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/base-transactions-container.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/capitalize.pipe.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transaction-category.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/transactions-icon-categories-factory.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-category-icon.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-category-icon.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/transaction-update.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-enum-value.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/enum-values.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/categories-list.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/categories.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transactions-map-ui.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transactions-map-ui.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-geo-location-map.component.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/transactions-controls/transaction-geo-location-map.component.html","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/dom-attributes.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/dynamic-id.directive.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/messages.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/transactions-inquire-and-dispute-ui.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/transactions-common.module.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/navigation.service.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-get-params.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-grouped-by-date.model.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/base-transactions-widget.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/base-transactions-controls.ts","../../../../../../libs/widgets/transactions/transactions-common-ang/src/backbase-transactions-common-ang.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { TransactionsAccountOptions } from './transactions-account-options.model';\nimport { TransactionsFilterOptions } from './transactions-filter-options.model';\nimport { TransactionsSearchOptions } from './transactions-search-options.model';\nimport { TransactionsSortOptions } from './transactions-sort-options.model';\nimport { TransactionsExportOptions } from './transactions-export-options.model';\n\nexport enum OnLoadAction {\n  Replace,\n  Append,\n  ReplacePage,\n}\n\nexport enum TransactionState {\n  completed = 'COMPLETED',\n  uncompleted = 'UNCOMPLETED',\n}\n\nexport interface TransactionsListOptions {\n  account: TransactionsAccountOptions;\n  search?: TransactionsSearchOptions;\n  filter?: TransactionsFilterOptions;\n  state?: TransactionState;\n  pagination: {\n    from: number;\n    size: number;\n  };\n  sort?: TransactionsSortOptions;\n  onLoad?: OnLoadAction;\n}\n\nexport const defaultAccountOptions: Pick<TransactionsListOptions, 'account'> = {\n  account: {},\n};\n\nexport const defaultSearchOptions: Pick<TransactionsListOptions, 'search'> = {\n  search: {},\n};\n\nexport const defaultFilterOptions: Pick<TransactionsListOptions, 'filter'> = {\n  filter: {},\n};\n\nexport const defaultSortOptions: Pick<TransactionsListOptions, 'sort'> = {};\n\nexport const defaultPaginationOptions: Pick<TransactionsListOptions, 'pagination'> = {\n  pagination: {\n    from: 0,\n    size: 10,\n  },\n};\n\nexport const defaultInitialListOptions: TransactionsListOptions = {\n  ...defaultAccountOptions,\n  ...defaultSearchOptions,\n  ...defaultFilterOptions,\n  ...defaultSortOptions,\n  ...defaultPaginationOptions,\n  onLoad: OnLoadAction.Replace,\n};\n\nexport const defaultInitialExportOptions: TransactionsExportOptions = {\n  ...defaultAccountOptions,\n  ...defaultSearchOptions,\n  ...defaultFilterOptions,\n  ...defaultSortOptions,\n  exportType: 'csv',\n  locale: 'en-US',\n};\n","import { TransactionsEnumValue } from './transactions-enum-value.model';\n\nexport interface TransactionsFilterOptions {\n  creditDebitIndicator?: TransactionsEnumValue;\n  types?: TransactionsEnumValue[] | TransactionsEnumValue;\n  billingStatus?: TransactionsEnumValue;\n  amount?: {\n    from?: number;\n    to?: number;\n  };\n  date?: {\n    from?: string;\n    to?: string;\n  };\n  categories?: string[];\n  checkSerialNumber?: {\n    from?: number;\n    to?: number;\n  };\n}\n/* eslint-disable no-redeclare*/\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsFilterOptions {\n  export function isEmpty(options: TransactionsFilterOptions | object): boolean {\n    return Object.values(options)\n      .filter((value) => typeof value !== 'undefined')\n      .every((value) => !value || (typeof value === 'object' && isEmpty(value)));\n  }\n\n  // converts a Date object to `dddd-MM-yy` string format\n  // eslint-disable-next-line complexity\n  const formatDate = (date: Date) => {\n    const year = date.getFullYear().toString();\n    const month = (date.getMonth() + 1).toString();\n    const day = date.getDate().toString();\n\n    return `${year}-${month[1] ? month : '0' + month[0]}-${day[1] ? day : '0' + day[0]}`;\n  };\n\n  export function toHttpGetParams(options: TransactionsFilterOptions = {}) {\n    const params: any = {};\n\n    const setIfExists = (paramName: string, conditionFn: (option: any) => any, valueFn: (option: any) => any) => {\n      if (conditionFn(options)) {\n        params[paramName] = valueFn(options);\n      }\n    };\n\n    setIfExists(\n      'creditDebitIndicator',\n      (option) => option.creditDebitIndicator !== undefined && option.creditDebitIndicator.value !== undefined,\n      (option) => option.creditDebitIndicator.value,\n    );\n    setIfExists(\n      'types',\n      (option) => option.type !== undefined && option.type.value !== undefined,\n      (option) => (Array.isArray(option.type.value) ? option.type.value : [option.type.value]),\n    );\n    setIfExists(\n      'billingStatus',\n      (option) => option.billingStatus !== undefined && option.billingStatus.value !== undefined,\n      (option) => option.billingStatus.value,\n    );\n    setIfExists(\n      'amountGreaterThan',\n      (option) => option.amount && option.amount.from,\n      (option) => option.amount.from,\n    );\n    setIfExists(\n      'amountLessThan',\n      (option) => option.amount && option.amount.to,\n      (option) => option.amount.to,\n    );\n    setIfExists(\n      'bookingDateGreaterThan',\n      (option) => option.date && option.date.from && Object.keys(option.date.from).length,\n      (option) => formatDate(new Date(option.date.from)),\n    );\n    setIfExists(\n      'bookingDateLessThan',\n      (option) => option.date && option.date.to && Object.keys(option.date.to).length,\n      (option) => formatDate(new Date(option.date.to)),\n    );\n    setIfExists(\n      'fromCheckSerialNumber',\n      (option) => option.checkSerialNumber && option.checkSerialNumber.from,\n      (option) => option.checkSerialNumber.from,\n    );\n    setIfExists(\n      'toCheckSerialNumber',\n      (option) => option.checkSerialNumber && option.checkSerialNumber.to,\n      (option) => option.checkSerialNumber.to,\n    );\n\n    return params;\n  }\n  // eslint-disable-next-line complexity\n  export function fromHttpGetParams(params: any): TransactionsFilterOptions {\n    const options: TransactionsFilterOptions = {};\n\n    if (params.creditDebitIndicator) {\n      options.creditDebitIndicator = { value: params.creditDebitIndicator };\n    }\n\n    if (params.type) {\n      if (Array.isArray(params.type)) {\n        options.types = params.type.map((value: any) => ({ value }));\n      } else {\n        options.types = { value: params.type };\n      }\n    }\n\n    if (params.billingStatus) {\n      options.billingStatus = { value: params.billingStatus };\n    }\n\n    if (params.amountGreaterThan) {\n      options.amount = { from: parseInt(params.amountGreaterThan, 10) };\n    }\n\n    if (params.amountLessThan) {\n      options.amount = {\n        ...options.amount,\n        to: parseInt(params.amountLessThan, 10),\n      };\n    }\n\n    if (params.bookingDateGreaterThan) {\n      options.date = {\n        from: params.bookingDateGreaterThan,\n      };\n    }\n\n    if (params.bookingDateLessThan) {\n      options.date = {\n        ...options.date,\n        to: params.bookingDateLessThan,\n      };\n    }\n\n    if (params.fromCheckSerialNumber) {\n      options.checkSerialNumber = {\n        from: parseInt(params.fromCheckSerialNumber, 10),\n      };\n    }\n\n    if (params.toCheckSerialNumber) {\n      options.checkSerialNumber = {\n        ...options.checkSerialNumber,\n        to: parseInt(params.toCheckSerialNumber, 10),\n      };\n    }\n\n    return options;\n  }\n}\n/* eslint-enable no-redeclare*/\n","export type ProductKindName =\n  | 'Current Account'\n  | 'Savings Account'\n  | 'Credit Card'\n  | 'Loan'\n  | 'Term Deposit'\n  | 'Debit Card'\n  | 'Investment Account'\n  | string;\n\nexport type AvailableFiltersConfig = Record<ProductKindName, ProductKind>;\n\nexport enum AvailableFilterEnum {\n  CreditDebitIndicator = 'creditDebitIndicator',\n  Types = 'types',\n  BillingStatus = 'billingStatus',\n  Amount = 'amount',\n  Date = 'date',\n  Categories = 'categories',\n  CheckSerialNumber = 'checkSerialNumber',\n}\n\nexport type AvailableFilters = Array<AvailableFilterEnum>;\n\nexport type ProductKind = ProductType | AvailableFilters;\n\nexport interface ProductType {\n  [key: string]: AvailableFilters;\n}\n","import { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TransactionsEnumValue } from './model/transactions-enum-value.model';\nimport { TransactionsSortOptions } from './model/transactions-sort-options.model';\nimport { AvailableFilterEnum, AvailableFiltersConfig } from './model/available-filters.model';\n\n/**\n * Dropdown values for credit/debit indicator filter.\n */\nexport const creditDebitIndicatorEnumValues: Array<TransactionsEnumValue> = [\n  {\n    name: 'All',\n  },\n  {\n    value: 'CRDT',\n    name: 'Credit',\n  },\n  {\n    value: 'DBIT',\n    name: 'Debit',\n  },\n];\n\n/**\n * Fallback dropdown values for transaction type filter.\n */\nexport const defaultTransactionTypeEnumValues: Array<TransactionsEnumValue> = [\n  {\n    value: 'ATM',\n    name: 'ATM',\n  },\n  {\n    value: 'ACH',\n    name: 'Ach',\n  },\n  {\n    value: 'Bill Payment',\n    name: 'Bill Payment',\n  },\n  {\n    value: 'Cash',\n    name: 'Cash',\n  },\n  {\n    name: 'Cheques',\n    value: 'Cheques',\n  },\n  {\n    value: 'CreditDebit Card',\n    name: 'Credit/Debit Card',\n  },\n  {\n    value: 'Check',\n    name: 'Check',\n  },\n  {\n    value: 'Deposit',\n    name: 'Deposit',\n  },\n  {\n    value: 'Fee',\n    name: 'Fee',\n  },\n  {\n    value: 'POS',\n    name: 'POS',\n  },\n  {\n    value: 'Withdrawal',\n    name: 'Withdrawal',\n  },\n];\n\n/**\n * Fallback dropdown values for billing status filter.\n */\nexport const defaultBillingStatusEnumValues: Array<TransactionsEnumValue> = [\n  {\n    value: 'PENDING',\n    name: 'Pending',\n  },\n  {\n    value: 'BILLED',\n    name: 'Billed',\n  },\n  {\n    value: 'UNBILLED',\n    name: 'Unbilled',\n  },\n];\n\n/**\n * Name of different check images status\n */\nexport enum CheckImagesAvailability {\n  available = 'AVAILABLE',\n  unavailable = 'UNAVAILABLE',\n}\n\nexport enum BillingStatusEnum {\n  billed = 'BILLED',\n  unbilled = 'UNBILLED',\n  pending = 'PENDING',\n}\n\n/**\n * Name of response header that contains the total amount of results.\n */\nexport const totalCountHeader = 'X-Total-Count';\n/**\n * Name of response header that contains the available export types.\n */\nexport const availableExportTypes = 'X-Available-Export-Types';\nexport const unvailableExportTypesReasons = 'X-Unavailable-Export-Types-Reasons';\n/**\n * Name of response header that contains the sort configuration.\n */\nexport const sortFieldsDirectionHeader = 'X-Sort-Fields-Direction';\n\n/**\n * Notification time to live in ms.\n */\nexport const notificationTtl = 5000;\n\n/**\n * Which category level should be retrieved for category change modal list.\n */\nexport const categoryListLevelParam = 'PARENTS';\n\nexport const defaultAvailableFiltersConfig: AvailableFiltersConfig = {\n  'Current Account': [\n    AvailableFilterEnum.Date,\n    AvailableFilterEnum.CreditDebitIndicator,\n    AvailableFilterEnum.Amount,\n    AvailableFilterEnum.Types,\n    AvailableFilterEnum.BillingStatus,\n    AvailableFilterEnum.CheckSerialNumber,\n  ],\n  'Savings Account': [\n    AvailableFilterEnum.Date,\n    AvailableFilterEnum.CreditDebitIndicator,\n    AvailableFilterEnum.Amount,\n    AvailableFilterEnum.Types,\n    AvailableFilterEnum.BillingStatus,\n    AvailableFilterEnum.CheckSerialNumber,\n  ],\n  'Credit Card': [\n    AvailableFilterEnum.Date,\n    AvailableFilterEnum.CreditDebitIndicator,\n    AvailableFilterEnum.Amount,\n    AvailableFilterEnum.Types,\n    AvailableFilterEnum.BillingStatus,\n  ],\n  Loan: [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n  'Term Deposit': [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n  'Debit Card': [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n  'Investment Account': [\n    AvailableFilterEnum.Date,\n    AvailableFilterEnum.CreditDebitIndicator,\n    AvailableFilterEnum.Amount,\n  ],\n  defaultFilters: [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n};\n\nexport const deserialize = (propertyValue: string) => {\n  const params = propertyValue.split('&');\n\n  return params.reduce((acc: object, param: string) => {\n    const [key, val] = param.split('=');\n\n    return {\n      ...acc,\n      [decodeURIComponent(key)]: decodeURIComponent(val),\n    };\n  }, {});\n};\n\nexport const parseSortOptions = (propertyValue: string): TransactionsSortOptions | undefined => {\n  if (!propertyValue.length) {\n    return undefined;\n  }\n\n  const sortOption = propertyValue\n    .split(',')[0]\n    .trim()\n    .replace(/\\s{2,}/g, ' ');\n\n  const [orderBy, direction] = sortOption.split(' ');\n\n  if (!orderBy || (direction !== 'ASC' && direction !== 'DESC')) {\n    throw new Error(\n      `Invalid value for \"initialSortOptions\" property.\n      Please use \"<orderBy> <direction>\" format, e.g., \"bookingDate DESC\", or leave it empty.`,\n    );\n  }\n\n  return {\n    orderBy,\n    direction,\n  };\n};\n\nexport const filterInputParameters = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => inputVal ?? propVal));\n\nexport const b64Encode = (str: string) =>\n  btoa(\n    encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (_match, p1) {\n      return String.fromCharCode(parseInt(p1, 16));\n    }),\n  );\n\nexport const truncateDate = (date: Date) => new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\nexport const daysDiff = (date1: Date | string, date2: Date | string) => {\n  const diff = truncateDate(new Date(date1)).getTime() - truncateDate(new Date(date2)).getTime();\n\n  return Math.ceil(diff / (1000 * 3600 * 24));\n};\n","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { GetTransactionsRequestParams, TransactionItem } from '@backbase/data-ang/transactions';\n\nimport { Transaction } from './transaction.model';\nimport { TransactionsSortOptions } from './transactions-sort-options.model';\nimport {\n  sortFieldsDirectionHeader,\n  totalCountHeader,\n  availableExportTypes,\n  unvailableExportTypesReasons,\n  BillingStatusEnum,\n} from '../constants';\nimport { TransactionsExportOptions, UnavailableExportTypeReasons } from './transactions-export-options.model';\nimport { TransactionsListOptions } from './transactions-list-options.model';\nimport { TransactionsEnumValue } from './transactions-enum-value.model';\n\nexport interface TransactionsList {\n  items: Transaction[];\n  totalCount: number;\n  sort?: TransactionsSortOptions;\n  availableExportTypesHeader?: string;\n  httpResponseError?: HttpErrorResponse;\n  unavailableExportTypesReasonsHeader?: UnavailableExportTypeReasons;\n  initialRequest?: boolean;\n}\n/* eslint-disable no-redeclare*/\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsList {\n  // eslint-disable-next-line complexity\n  const processTransaction = (transaction: Transaction) => {\n    const amountSign = transaction.creditDebitIndicator === 'DBIT' ? -1 : 1;\n    const formattedTransaction: Transaction = {\n      ...transaction,\n      isPending: (function isPending(data) {\n        let result = false;\n        if (data && data.billingStatus) {\n          const billingStatus = data.billingStatus.toUpperCase();\n          result = billingStatus === BillingStatusEnum.pending || billingStatus === BillingStatusEnum.unbilled;\n        }\n\n        return result;\n      })(transaction),\n      ...(transaction.merchant\n        ? {\n            merchant: {\n              id: transaction.merchant.id,\n              name: transaction.merchant.name,\n              ...(transaction.merchant.logo ? { logo: transaction.merchant.logo } : {}),\n              ...(transaction.merchant.website ? { website: transaction.merchant.website } : {}),\n            },\n          }\n        : {}),\n    };\n\n    if (transaction.transactionAmountCurrency) {\n      const amountNumber = parseFloat(transaction.transactionAmountCurrency.amount);\n\n      formattedTransaction.transactionAmountCurrency = {\n        ...transaction.transactionAmountCurrency,\n        unsignedAmount: amountNumber,\n        amount: (amountSign * (amountNumber || 0)).toString(),\n      };\n    }\n\n    if (transaction.instructedAmountCurrency) {\n      const amountNumber = parseFloat(transaction.instructedAmountCurrency.amount);\n\n      formattedTransaction.instructedAmountCurrency = {\n        ...transaction.instructedAmountCurrency,\n        unsignedAmount: amountNumber,\n        amount: (amountSign * (amountNumber || 0)).toString(),\n      };\n    }\n\n    formattedTransaction.currencyExchangeAvailability =\n      !!transaction.instructedAmountCurrency &&\n      !!transaction.transactionAmountCurrency &&\n      !!transaction.currencyExchangeRate;\n\n    return formattedTransaction;\n  };\n\n  const processTransactions = (transactionsList: TransactionsList) => ({\n    ...transactionsList,\n    items: transactionsList.items.map(processTransaction),\n  });\n\n  const processTotalCountHeader = (totalCount: string | null) => (totalCount ? parseInt(totalCount, 10) : 0);\n\n  const processAvailableExportTypes = (availableExports: string | null) => availableExports || '';\n\n  const processUnavailableExportTypesReasons = (unavilableExportTypesReasonsValue: string | null) =>\n    JSON.parse(unavilableExportTypesReasonsValue || '{}');\n\n  const processSortFieldsDirectionHeader = (\n    sortFieldsDirection: string | null,\n  ): TransactionsSortOptions | undefined => {\n    if (sortFieldsDirection === null || !sortFieldsDirection.length) {\n      return undefined;\n    }\n\n    const sortOption = sortFieldsDirection\n      .split(',')[0]\n      .trim()\n      .replace(/\\s{2,}/g, ' ');\n\n    const [orderBy, direction] = sortOption.split(' ');\n\n    if (!orderBy || (direction !== 'ASC' && direction !== 'DESC')) {\n      throw new Error(\n        `Invalid value for \"initialSortOptions\" property.\n        Please use \"<orderBy> <direction>\" format, e.g., \"bookingDate DESC\",\n        or leave it empty.`,\n      );\n    }\n\n    return {\n      orderBy,\n      direction,\n    };\n  };\n\n  // eslint-disable-next-line no-inner-declarations\n  function padValueWithZeros(value: number, size = 2) {\n    return (value + '').padStart(size, '0');\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function formatDate(date: string | undefined) {\n    const safeDate = date || '';\n    if (/^[0-9]{4}-[0-9]{2}-[0-9]{2}/.exec(safeDate)) {\n      const localDate = new Date(safeDate);\n      const month = padValueWithZeros(localDate.getMonth() + 1);\n      const day = padValueWithZeros(localDate.getDate());\n      const year = localDate.getFullYear();\n\n      return `${year}-${month}-${day}`;\n    } else if (date !== undefined) {\n      console.error(`invalid date provided ${date}`);\n    }\n\n    return undefined;\n  }\n\n  export const fromHttpResponse = (response: HttpResponse<TransactionItem[]>): TransactionsList => {\n    const totalCount = processTotalCountHeader(response.headers.get(totalCountHeader));\n    const sort = processSortFieldsDirectionHeader(response.headers.get(sortFieldsDirectionHeader));\n    const availableExportTypesHeader = processAvailableExportTypes(response.headers.get(availableExportTypes));\n    const unavailableExportTypesReasonsHeader = processUnavailableExportTypesReasons(\n      response.headers.get(unvailableExportTypesReasons),\n    );\n\n    return processTransactions({\n      items: (response.body as Transaction[]) || [],\n      totalCount,\n      ...(sort ? { sort } : {}),\n      availableExportTypesHeader,\n      unavailableExportTypesReasonsHeader,\n    });\n  };\n\n  export const concat = (transactionsList1: TransactionsList, transactionsList2: TransactionsList) => {\n    if (transactionsList2.httpResponseError) {\n      return {\n        ...transactionsList1,\n        items: [...transactionsList1.items],\n        httpResponseError: transactionsList2.httpResponseError,\n      };\n    }\n\n    return {\n      items: [...transactionsList1.items, ...transactionsList2.items],\n      totalCount: transactionsList1.totalCount,\n      ...(transactionsList2.sort ? { sort: transactionsList2.sort } : {}),\n      ...(transactionsList2.availableExportTypesHeader\n        ? {\n            availableExportTypesHeader: transactionsList2.availableExportTypesHeader,\n          }\n        : {}),\n      ...(transactionsList2.unavailableExportTypesReasonsHeader\n        ? {\n            unavailableExportTypesReasonsHeader: transactionsList2.unavailableExportTypesReasonsHeader,\n          }\n        : {}),\n      httpResponseError: transactionsList2.httpResponseError,\n    };\n  };\n\n  export const hasLoadedAll = (transactionsList: TransactionsList) =>\n    transactionsList.items.length === transactionsList.totalCount;\n\n  export const toHttpRequest = (\n    listOptions: TransactionsListOptions | TransactionsExportOptions,\n  ): GetTransactionsRequestParams => {\n    const turnIntoArrayObject = (value: any, name: any, fn: (param: any) => any) => {\n      if (!value) {\n        return {};\n      }\n\n      return Array.isArray(value) ? { [name]: fn(value) } : { [name]: [fn(value)] };\n    };\n\n    const optionalItem = <T>(name: string, value: T) => (value !== undefined ? { [name]: value } : {});\n\n    const isTransactionListOption = (data: any): data is TransactionsListOptions =>\n      Object.prototype.hasOwnProperty.call(data, 'pagination');\n\n    const isTransactionExportOptions = (data: any): data is TransactionsExportOptions =>\n      Object.prototype.hasOwnProperty.call(data, 'exportType');\n\n    return {\n      ...turnIntoArrayObject(listOptions.account.arrangementId, 'arrangementsIds', (value) => value),\n      ...optionalItem('query', listOptions.search?.query),\n      ...optionalItem('amountGreaterThan', listOptions.filter?.amount?.from),\n      ...optionalItem('amountLessThan', listOptions.filter?.amount?.to),\n      ...optionalItem(\n        'bookingDateGreaterThan',\n        listOptions.filter?.date?.from === '' ? undefined : formatDate(listOptions.filter?.date?.from),\n      ),\n      ...optionalItem(\n        'bookingDateLessThan',\n        listOptions.filter?.date?.to === '' ? undefined : formatDate(listOptions.filter?.date?.to),\n      ),\n      ...optionalItem('categories', listOptions.filter?.categories),\n      ...optionalItem('fromCheckSerialNumber', listOptions.filter?.checkSerialNumber?.from),\n      ...optionalItem('toCheckSerialNumber', listOptions.filter?.checkSerialNumber?.to),\n      ...optionalItem('orderBy', listOptions.sort?.orderBy),\n      ...optionalItem('direction', listOptions.sort?.direction),\n      ...optionalItem('state', isTransactionListOption(listOptions) ? listOptions.state : undefined),\n      ...optionalItem('from', isTransactionListOption(listOptions) ? listOptions.pagination?.from : undefined),\n      ...optionalItem('size', isTransactionListOption(listOptions) ? listOptions.pagination?.size : undefined),\n      ...optionalItem('billingStatus', listOptions.filter?.billingStatus?.value),\n      ...optionalItem('creditDebitIndicator', listOptions.filter?.creditDebitIndicator?.value),\n      ...optionalItem('exportType', isTransactionExportOptions(listOptions) ? listOptions.exportType : undefined),\n      ...optionalItem('locale', isTransactionExportOptions(listOptions) ? listOptions.locale : undefined),\n      ...turnIntoArrayObject(listOptions.filter?.types, 'types', (value: TransactionsEnumValue) => value.value),\n    };\n  };\n}\n/* eslint-enable no-redeclare*/\n","import { HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { switchMap, publishReplay, refCount } from 'rxjs/operators';\nimport { TransactionsListOptions, OnLoadAction } from './transactions-list-options.model';\nimport { TransactionsList } from './transactions-list.model';\n\nexport const deepEqual = (x: any, y: any): boolean => {\n  const ok = Object.keys;\n  const tx = typeof x;\n  const ty = typeof y;\n\n  return x && y && tx === 'object' && tx === ty\n    ? ok(x).length === ok(y).length && ok(x).every((key) => deepEqual(x[key], y[key]))\n    : x === y;\n};\n\nexport const cacheRequest =\n  <Params, Result>(request: (params: Params) => Observable<Result>) =>\n  (source: Observable<Params>): Observable<Result> =>\n    source.pipe(switchMap(request), publishReplay(1), refCount());\n\nexport const multipleAccountsPredicate = (listOptions: TransactionsListOptions) => () =>\n  Array.isArray(listOptions.account.arrangementId) && listOptions.account.arrangementId.length > 1;\n\nexport const onLoadTransactions = (\n  acc: TransactionsList,\n  curr: { transactionsList: TransactionsList; onLoad: OnLoadAction },\n) =>\n  curr.onLoad === OnLoadAction.Append ? TransactionsList.concat(acc, curr.transactionsList) : curr.transactionsList;\n\nexport const getNameFromContentDispositionHeader = (response: HttpResponse<Blob>) => {\n  const contentDisposition = response.headers.get('Content-Disposition');\n  let fileName = '';\n  if (contentDisposition) {\n    const result = /filename[^;=\\n]*=(?:(\\\\?['\"])(.*?)\\1|(?:[^\\s]+'.*?')?([^;\\n]*))/i.exec(contentDisposition);\n    fileName = result ? result[2] : '';\n  }\n\n  return fileName;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { defer, Observable, of } from 'rxjs';\nimport { catchError, map, publishReplay, refCount } from 'rxjs/operators';\nimport { deserialize, parseSortOptions } from '../constants';\n\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\n\nconst WidgetProperties = {\n  pageSize: 'bb.transaction.pageSize',\n  maxNavPages: 'bb.transaction.maxNavPages',\n  paginationType: 'bb.transaction.paginationType',\n  initialFilterOptions: 'bb.transaction.initialFilterOptions',\n  initialSortOptions: 'bb.transaction.initialSortOptions',\n  showControls: 'bb.transaction.showControls',\n  showChangeCategory: 'bb.transaction.showChangeCategory',\n  refreshTransactionsListEvents: 'event.refreshTransactionsList',\n  showPendingTransactionsOnTop: 'bb.transaction.showPendingTransactionsOnTop',\n  showCheckImage: 'bb.transaction.showCheckImage',\n  gmapsAPIKey: 'bb.transaction.gmapsAPIKey',\n  showManageNotes: 'bb.transaction.showManageNotes',\n  getOrPostEndpoints: 'bb.transaction.getOrPostEndpoints',\n  disputeByBillingStatus: 'disputeByBillingStatus',\n  disputeEligibilityDays: 'disputeEligibilityDays',\n  disputeTransactionTypes: 'disputeTransactionTypes',\n  enableDisputeAndInquiry: 'enableDisputeAndInquiry',\n  inquireTopicId: 'inquireTopicId',\n  disputeTopicId: 'disputeTopicId',\n};\n\nexport const defaultPageSize = 10;\n\nexport const defaultMaxNavPage = 3;\n\nexport const defaultInitialFilterOptions = '';\n\nexport const defaultInitialSortOptions = '';\n\nexport enum PaginationType {\n  LOAD_MORE = 'load-more',\n  PAGINATION = 'pagination',\n  INFINITE_SCROLL = 'infinite-scroll',\n}\n\nexport enum EndpointType {\n  GET_REQUEST = 'get-request',\n  POST_REQUEST = 'post-request',\n}\n\nconst defaultModelObservable = <T>(value: T): Observable<T> =>\n  defer(() => of(value)).pipe(publishReplay(1), refCount());\n\n@Injectable()\nexport class WidgetPropertiesService {\n  get pageSize(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(defaultPageSize);\n    }\n\n    return this.itemModel.property(WidgetProperties.pageSize).pipe(\n      map((propertyValue) => parseInt(propertyValue as string, 10)),\n      map((pageSize) => (pageSize > 0 ? pageSize : defaultPageSize)),\n    );\n  }\n\n  get maxNavPages(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(defaultMaxNavPage);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.maxNavPages)\n      .pipe(map((propertyValue) => parseInt(propertyValue as string, 10)));\n  }\n\n  get paginationType(): Observable<PaginationType> {\n    if (!this.itemModel) {\n      return defaultModelObservable(PaginationType.LOAD_MORE);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.paginationType)\n      .pipe(map((propertyValue) => propertyValue as PaginationType));\n  }\n\n  get initialFilterOptions(): Observable<TransactionsFilterOptions> {\n    if (!this.itemModel) {\n      return defaultModelObservable({});\n    }\n\n    return this.itemModel.property(WidgetProperties.initialFilterOptions, defaultInitialFilterOptions).pipe(\n      map(deserialize),\n      map((params) => TransactionsFilterOptions.fromHttpGetParams(params)),\n    );\n  }\n\n  get initialSortOptions(): Observable<TransactionsSortOptions | undefined> {\n    if (!this.itemModel) {\n      return defaultModelObservable(parseSortOptions(defaultInitialSortOptions));\n    }\n\n    return this.itemModel.property(WidgetProperties.initialSortOptions, defaultInitialSortOptions).pipe(\n      map(parseSortOptions),\n      catchError((err: string) => {\n        console.warn(`initialSortOptions property ignored: ${err}`);\n\n        return of(undefined);\n      }),\n    );\n  }\n\n  get showControls(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showControls)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get showChangeCategory(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showChangeCategory)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get refreshTransactionsListEvents(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable('');\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.refreshTransactionsListEvents)\n      .pipe(map((propertyValue) => propertyValue as string));\n  }\n\n  get showPendingTransactionsOnTop(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(false);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showPendingTransactionsOnTop)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get showCheckImage(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showCheckImage)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get showManageNotes(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.showManageNotes)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get getOrPostEndpoints(): Observable<EndpointType> {\n    if (!this.itemModel) {\n      return defaultModelObservable(EndpointType.POST_REQUEST);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.getOrPostEndpoints)\n      .pipe(map((propertyValue) => propertyValue as EndpointType));\n  }\n\n  get gmapsAPIKey(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable('');\n    }\n\n    return this.itemModel.property(WidgetProperties.gmapsAPIKey).pipe(map((propertyValue) => propertyValue as string));\n  }\n\n  get disputeByBillingStatus(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(true);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.disputeByBillingStatus)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get disputeEligibilityDays(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(120);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.disputeEligibilityDays, '120')\n      .pipe(map((propertyValue) => parseInt(propertyValue as string, 10)));\n  }\n\n  get disputeTransactionTypes(): Observable<Array<string>> {\n    if (!this.itemModel) {\n      return defaultModelObservable(['Credit/Debit Card']);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.disputeTransactionTypes, 'Credit/Debit Card')\n      .pipe(map((propertyValue) => (propertyValue as string).split(',')));\n  }\n\n  get enableDisputeAndInquiry(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(false);\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.enableDisputeAndInquiry)\n      .pipe(map((propertyValue) => (typeof propertyValue === 'boolean' ? propertyValue : propertyValue === 'true')));\n  }\n\n  get inquireTopicId(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable('');\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.inquireTopicId)\n      .pipe(map((propertyValue) => propertyValue as string));\n  }\n\n  get disputeTopicId(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable('');\n    }\n\n    return this.itemModel\n      .property(WidgetProperties.disputeTopicId)\n      .pipe(map((propertyValue) => propertyValue as string));\n  }\n\n  constructor(@Optional() private readonly itemModel?: ItemModel) {}\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { Account } from './account.model';\n\nexport function fromArrangementsResponse(response: HttpResponse<ProductSummaryItem[]>): Account[] {\n  return (response.body || []).map((item: ProductSummaryItem) => ({\n    id: item.id,\n    name: item.name,\n    displayName: item.displayName,\n    alias: item.bankAlias,\n    IBAN: item.IBAN,\n    BBAN: item.BBAN,\n    currency: item.currency,\n  }));\n}\n","import { Injectable } from '@angular/core';\n\nimport { ProductSummaryHttpService, ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { Account } from '../model/account.model';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { fromArrangementsResponse } from '../model/account-list.model';\n\n@Injectable()\nexport class AccountsService {\n  constructor(protected readonly productSummaryDataHttpService: ProductSummaryHttpService) {}\n\n  getAllArrangements(): Observable<Account[]> {\n    return this.productSummaryDataHttpService\n      .getArrangementsByBusinessFunction(\n        {\n          businessFunction: 'Product Summary',\n          resourceName: 'Product Summary',\n          privilege: 'view',\n          size: 1000000,\n        },\n        'response',\n      )\n      .pipe(map(fromArrangementsResponse));\n  }\n\n  getProductSummary(): Observable<ProductSummaryItem[]> {\n    return this.productSummaryDataHttpService.getArrangementsByBusinessFunction(\n      {\n        businessFunction: 'Product Summary',\n        resourceName: 'Product Summary',\n        privilege: 'view',\n        size: 1000000,\n      },\n      'body',\n    );\n  }\n}\n","import { Inject, Injectable, InjectionToken, LOCALE_ID, OnDestroy } from '@angular/core';\nimport {\n  GetTransactionsExportWithPostRequestParams,\n  GetTransactionsWithPostRequestParams,\n  TransactionClientHttpService,\n  TransactionItem,\n} from '@backbase/data-ang/transactions';\nimport { BehaviorSubject, combineLatest, iif, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { catchError, distinctUntilChanged, filter, first, map, scan, switchMap, tap } from 'rxjs/operators';\nimport {\n  defaultFilterOptions,\n  defaultInitialExportOptions,\n  defaultInitialListOptions,\n  defaultPaginationOptions,\n  defaultSearchOptions,\n  OnLoadAction,\n  TransactionsListOptions,\n  TransactionState,\n} from '../model/transactions-list-options.model';\nimport { TransactionsExportOptions } from '../model/transactions-export-options.model';\nimport { TransactionsSearchOptions } from '../model/transactions-search-options.model';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsList } from '../model/transactions-list.model';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\nimport { AccountsService } from './accounts.service';\nimport { Account } from '../model/account.model';\nimport {\n  cacheRequest,\n  deepEqual,\n  multipleAccountsPredicate,\n  onLoadTransactions,\n} from '../model/transactions-list-utils.model';\nimport { HttpResponse } from '@angular/common/http';\nimport { EndpointType } from './widget-properties.service';\nimport { DeprecationsService } from '@backbase/foundation-ang/core';\n\nexport enum LoadingState {\n  NotLoaded = 'NotLoaded',\n  LoadingMore = 'LoadingMore',\n  LoadingPage = 'LoadingPage',\n  Loading = 'Loading',\n  Loaded = 'Loaded',\n}\n\nexport const showDetailsConfigToken = new InjectionToken<boolean>('shows the transactions details modal');\n\n@Injectable()\nexport class TransactionsService implements OnDestroy {\n  private readonly selectedAccount = new ReplaySubject<string[]>(1);\n  private readonly pageSize = new ReplaySubject<number>(1);\n  private readonly initialListOptions = new ReplaySubject<Partial<TransactionsListOptions>>(1);\n  private readonly options = new BehaviorSubject<Partial<TransactionsListOptions>>({});\n  private readonly listRefresh = new Subject<TransactionsListOptions>();\n  private readonly listOptions = new BehaviorSubject<TransactionsListOptions>(defaultInitialListOptions);\n  private readonly exportOptions = new BehaviorSubject<TransactionsExportOptions>(defaultInitialExportOptions);\n  private readonly showPendingTransactionsOnTop = new ReplaySubject<boolean>(1);\n  private readonly getOrPostEndpoint = new BehaviorSubject<EndpointType>(EndpointType.GET_REQUEST);\n  private readonly transactionsList: Observable<TransactionsList> = merge(\n    this.listOptions.pipe(\n      filter((listOptions) => typeof listOptions.account.arrangementId !== 'undefined'),\n      distinctUntilChanged(deepEqual),\n    ),\n    this.listRefresh,\n  ).pipe(\n    cacheRequest((listOptions) => {\n      this.loadingState.next(\n        listOptions.onLoad === OnLoadAction.Append\n          ? LoadingState.LoadingMore\n          : listOptions.onLoad === OnLoadAction.ReplacePage\n          ? LoadingState.LoadingPage\n          : LoadingState.Loading,\n      );\n\n      return combineLatest([\n        this.loadTransactions(listOptions).pipe(\n          tap(() => {\n            this.loadingState.next(LoadingState.Loaded);\n          }),\n          map((transactionsList) => ({\n            transactionsList,\n            onLoad: listOptions.onLoad,\n          })),\n        ),\n        iif(\n          multipleAccountsPredicate(listOptions),\n          this.accountService.getAllArrangements().pipe(\n            map((accounts) => {\n              const accountMap = new Map<string, Account>();\n              accounts.forEach((account) => {\n                accountMap.set(account.id, account);\n              });\n\n              return accountMap;\n            }),\n          ),\n          of(new Map()),\n        ),\n        this.isFilterApplied,\n        this.isSearchApplied,\n      ]).pipe(\n        map(([transactions, accountMap, isFilterApplied, isSearchApplied]) => {\n          transactions.transactionsList.items = transactions.transactionsList.items.map((transaction) => ({\n            ...transaction,\n            account: accountMap.get(transaction.arrangementId || ''),\n          }));\n          transactions.transactionsList.initialRequest = !(isFilterApplied || isSearchApplied);\n\n          return transactions;\n        }),\n      );\n    }),\n    scan(onLoadTransactions, { items: [], totalCount: 0 }),\n  );\n\n  public readonly loadingState = new BehaviorSubject<LoadingState>(LoadingState.NotLoaded);\n\n  public readonly isFilterApplied = this.listOptions.pipe(\n    map((options) => !TransactionsFilterOptions.isEmpty(options.filter || {})),\n  );\n\n  public readonly isSearchApplied = this.listOptions.pipe(\n    map((options) => !TransactionsFilterOptions.isEmpty(options.search || {})),\n  );\n\n  private loadTransactions(listOptions: TransactionsListOptions): Observable<TransactionsList> {\n    const transactionPayload = TransactionsList.toHttpRequest(listOptions);\n    let transactionsResponse: Observable<HttpResponse<Array<TransactionItem>>> | undefined;\n\n    if (this.isUsingPostEndpoints) {\n      transactionsResponse = this.transactionsDataHttpService.getTransactionsWithPost(\n        {\n          transactionListRequest: transactionPayload,\n        } as GetTransactionsWithPostRequestParams,\n        'response',\n      );\n    } else {\n      this.deprecationsService.logDeprecatedFeature(\n        '[TransactionsService: loadTransactions] GET endpoints deprecated. Please use POST endpoints by changing CXP configuration',\n      );\n      transactionsResponse = this.transactionsDataHttpService.getTransactions(transactionPayload, 'response');\n    }\n\n    return transactionsResponse.pipe(\n      map(TransactionsList.fromHttpResponse),\n      catchError((err) =>\n        of({\n          items: [],\n          totalCount: 0,\n          httpResponseError: err,\n        }),\n      ),\n    );\n  }\n\n  private exportTransactions(exportOptions: TransactionsExportOptions): Observable<HttpResponse<Blob>> {\n    const exportPayload = TransactionsList.toHttpRequest({\n      ...exportOptions,\n      locale: this.locale,\n    });\n\n    if (this.isUsingPostEndpoints) {\n      return this.transactionsDataHttpService.getTransactionsExportWithPost(\n        {\n          transactionListRequest: exportPayload,\n        } as GetTransactionsExportWithPostRequestParams,\n        'response',\n      );\n    } else {\n      this.deprecationsService.logDeprecatedFeature(\n        '[TransactionsService: exportTransactions] GET endpoints deprecated. Please use POST endpoints by changing CXP configuration',\n      );\n\n      return this.transactionsDataHttpService.getTransactionsExport(exportPayload, 'response');\n    }\n  }\n\n  search(query: string) {\n    const searchOptions: TransactionsSearchOptions = {\n      query,\n    };\n\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultSearchOptions,\n      pagination: paginationOptions,\n      search: searchOptions,\n      onLoad: OnLoadAction.Replace,\n    });\n  }\n\n  clearSearch() {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultSearchOptions,\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.Replace,\n    });\n  }\n\n  filter(filterOptions: TransactionsFilterOptions) {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultFilterOptions,\n      pagination: paginationOptions,\n      filter: { ...filterOptions },\n      onLoad: OnLoadAction.Replace,\n    });\n  }\n\n  clearFilter() {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultFilterOptions,\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.Replace,\n    });\n  }\n\n  exportToType(type: string) {\n    return this.exportOptions.pipe(\n      first(),\n      switchMap((exportOptions: TransactionsExportOptions) =>\n        this.exportTransactions({\n          ...exportOptions,\n          exportType: type,\n        }),\n      ),\n    );\n  }\n\n  loadMore() {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    const paginationOptions = {\n      ...currentPaginationOptions,\n      from: currentPaginationOptions.from + 1,\n    };\n\n    this.options.next({\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.Append,\n    });\n  }\n\n  sort(sortOptions: TransactionsSortOptions) {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    this.options.next({\n      sort: { ...sortOptions },\n      pagination: {\n        ...currentPaginationOptions,\n        from: 0,\n      },\n      onLoad: OnLoadAction.ReplacePage,\n    });\n  }\n\n  pageChange(page: number) {\n    const paginationOptions = {\n      ...defaultPaginationOptions.pagination,\n      ...this.options.getValue().pagination,\n      from: page,\n    };\n\n    this.options.next({\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.ReplacePage,\n    });\n  }\n\n  getTransactionsFrom(\n    selectedAccount: Observable<string[]>,\n    pageSize: Observable<number>,\n    initialListOptions: Observable<Partial<TransactionsListOptions>> = of({}),\n    showPendingTransactionsOnTop: Observable<boolean> = of(false),\n    getOrPostEndpoint: Observable<EndpointType> = of(EndpointType.GET_REQUEST),\n  ) {\n    selectedAccount.subscribe(this.selectedAccount);\n    pageSize.subscribe(this.pageSize);\n    initialListOptions.subscribe(this.initialListOptions);\n    showPendingTransactionsOnTop.subscribe(this.showPendingTransactionsOnTop);\n    getOrPostEndpoint.subscribe(this.getOrPostEndpoint);\n  }\n\n  getCurrentPage() {\n    return this.listOptions.pipe(map((options) => (options.pagination || defaultPaginationOptions.pagination).from));\n  }\n\n  getTransactionsList() {\n    return this.transactionsList;\n  }\n\n  retryFiltering() {\n    this.listRefresh.next(this.listOptions.getValue());\n  }\n\n  refreshTransactions() {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    const paginationOptions = {\n      ...currentPaginationOptions,\n      from: 0,\n    };\n\n    const newOptions = {\n      ...this.listOptions.getValue(),\n      pagination: paginationOptions,\n      onLoad: OnLoadAction.ReplacePage,\n    };\n\n    if (deepEqual(newOptions, this.listOptions.getValue())) {\n      this.listRefresh.next(this.listOptions.getValue());\n    } else {\n      this.options.next({\n        pagination: paginationOptions,\n        onLoad: OnLoadAction.ReplacePage,\n      });\n    }\n  }\n\n  private get isUsingPostEndpoints() {\n    return this.getOrPostEndpoint.getValue() === EndpointType.POST_REQUEST;\n  }\n\n  ngOnDestroy() {\n    this.listRefresh.complete();\n    this.selectedAccount.complete();\n    this.pageSize.complete();\n    this.initialListOptions.complete();\n    this.options.complete();\n    this.listOptions.complete();\n    this.exportOptions.complete();\n    this.showPendingTransactionsOnTop.complete();\n    this.loadingState.complete();\n    this.getOrPostEndpoint.complete();\n  }\n\n  constructor(\n    private readonly transactionsDataHttpService: TransactionClientHttpService,\n    private readonly accountService: AccountsService,\n    private readonly deprecationsService: DeprecationsService,\n    @Inject(LOCALE_ID) private readonly locale: string,\n  ) {\n    // Base this.options on this.selectedAccount, this.pageSize, this.initialListOptions\n    combineLatest([this.selectedAccount, this.pageSize, this.initialListOptions, this.showPendingTransactionsOnTop])\n      .pipe(\n        map(([selectedAccount, pageSize, initialListOptions, showPendingTransactionsOnTop]) => ({\n          ...(showPendingTransactionsOnTop ? { state: TransactionState.completed } : {}),\n          account: {\n            arrangementId: selectedAccount,\n          },\n          pagination: {\n            from: 0,\n            size: pageSize,\n          },\n          onLoad: OnLoadAction.Replace,\n          ...initialListOptions,\n        })),\n      )\n      .subscribe(this.options);\n\n    // Base this.listOptions on this.options\n    this.options\n      .pipe(scan((acc: any, curr) => Object.assign({}, acc, curr), defaultInitialListOptions))\n      .subscribe(this.listOptions);\n\n    // Base this.exportOptions on this.listOptions\n    this.listOptions\n      .pipe(\n        filter((listOptions) => typeof listOptions.account.arrangementId !== 'undefined'),\n        map((params) => ({\n          ...params,\n          pagination: undefined,\n          state: undefined,\n          exportType: 'csv',\n          locale: 'en-US',\n        })),\n      )\n      .subscribe(this.exportOptions);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Directive, Input } from '@angular/core';\nimport { LoadingState } from '../../services/transactions.service';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-transactions-number-of-results-found',\n  templateUrl: 'transactions-number-of-results-found.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsNumberOfResultsFoundComponent {\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * Number of results found after filtering or searching.\n   */\n  @Input() numberOfResultsFound = 0;\n  /**\n   * The loading state of the transactions list.\n   */\n  @Input() loadingState: LoadingState = LoadingState.NotLoaded;\n  /**\n   * Whether filter is applied or not.\n   */\n  @Input() isFilterApplied = false;\n  /**\n   * Whether search is applied or not.\n   */\n  @Input() isSearchApplied = false;\n\n  /**\n   * Whether loading has finished or not.\n   */\n  get isLoaded(): boolean {\n    return this.loadingState === LoadingState.Loaded;\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsNumberOfResultsFoundCustomizable]',\n})\nexport class TransactionsNumberOfResultsFoundCustomizableDirective extends BbTemplate<\n  TransactionsNumberOfResultsFoundComponent,\n  undefined\n> {}\n","<ng-container bbTransactionsNumberOfResultsFoundCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTransactionsNumberOfResultsFoundCustomizable let-hostRef>\n  <div\n    class=\"bb-card__header bb-subtitle\"\n    [ngClass]=\"{ 'sr-only': hostRef.numberOfResultsFound <= 0 }\"\n    i18n=\"Number of results found for the applied filter@@transactions.list.numberOfResultsFound\"\n    *ngIf=\"hostRef.isLoaded && (hostRef.isFilterApplied || hostRef.isSearchApplied)\"\n    aria-live=\"assertive\"\n  >\n    {hostRef.numberOfResultsFound, plural, =0 {No results} =1 {1 result} other\n    {{{ hostRef.numberOfResultsFound }} results}} found\n  </div>\n</ng-template>\n","import { HttpResponse } from '@angular/common/http';\nimport { TransactionCheckImagesResponse, TransactionCheckImagesItem } from '@backbase/data-ang/transactions';\n\nexport enum TransactionsCheckImageType {\n  PNG = 'image/png',\n  JPEG = 'image/jpeg',\n}\n\nexport enum TransactionsCheckImageSide {\n  FRONT = 'FRONT',\n  BACK = 'BACK',\n}\n\nexport interface TransactionsCheckImage {\n  side: TransactionsCheckImageSide;\n  mimeType: TransactionsCheckImageType;\n  content: string;\n}\n\nexport interface TransactionCheckImageResponse {\n  images: TransactionsCheckImage[];\n}\n//eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsCheckImages {\n  // eslint-disable-next-line no-inner-declarations\n  function processImages(imageObject: TransactionCheckImagesItem): TransactionsCheckImage {\n    return {\n      side: imageObject.side as TransactionsCheckImageSide,\n      mimeType: imageObject.mimeType as TransactionsCheckImageType,\n      content: imageObject.content,\n    };\n  }\n\n  export function fromHttpResponse(\n    response: HttpResponse<TransactionCheckImagesResponse>,\n  ): TransactionCheckImageResponse {\n    const imagesArray = (response.body && response.body.images) || [];\n    const mappedImages = imagesArray.map(processImages);\n\n    return {\n      images: mappedImages,\n    };\n  }\n}\n","export enum TransactionsDetailsLoadingState {\n  error = -1,\n  serverError = -2,\n  badRequestError = -3,\n  notFoundError = -4,\n  loading = 0,\n  done = 1,\n  notLoaded = 2,\n  notStarted = 3,\n}\n\nexport enum DisputeStatusEnum {\n  Refunded = 'REFUNDED',\n  Undisputed = 'UNDISPUTED',\n  Pending = 'PENDING',\n  Rejected = 'REJECTED',\n}\n\nexport type TransactionsDetailsLoadingType =\n  | 'checkImages'\n  | 'geolocation'\n  | 'enableDisputeAndInquiry'\n  | 'disputeOption'\n  | 'batchOrder';\n\nexport type TransactionsDetailsLoading = Partial<\n  Record<TransactionsDetailsLoadingType, TransactionsDetailsLoadingState>\n>;\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbAccessibilityKeyboard]',\n})\nexport class AccessibilityKeyboardDirective {\n  constructor(readonly element: ElementRef) {\n    element.nativeElement.tabIndex = 0;\n  }\n\n  // eslint-disable-next-line\n  @HostListener('keydown.enter', ['$event'])\n  // eslint-disable-next-line\n  @HostListener('keydown.space', ['$event'])\n  eventListener(event: any) {\n    this.element.nativeElement.click(event);\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Transaction } from '../../model/transaction.model';\nimport { TransactionsCheckImage } from '../../model/transactions-check-images.model';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'bb-transaction-check-image-item',\n  templateUrl: 'transaction-check-image-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionCheckImageItemComponent {\n  @Input() image: TransactionsCheckImage | undefined;\n  @Input() transaction: Transaction | undefined;\n  @Input() sideText = '';\n  @Input() imageAlt = '';\n\n  @Output() selectImage = new EventEmitter<void>();\n\n  get imageFileName() {\n    const fileType = this.image ? this.image.mimeType.replace('image/', '') : '';\n    const side = this.image ? this.image.side : '';\n\n    return `${this.imageCheckNumber}-${side}.${fileType}`;\n  }\n\n  get formatedImageSource() {\n    const mimeType = this.image ? this.image.mimeType : '';\n    const content = this.image ? this.image.content : '';\n\n    return `data:${mimeType};base64,${content}`;\n  }\n\n  private get imageCheckNumber() {\n    return this.transaction && this.transaction.checkSerialNumber;\n  }\n\n  createImageSource() {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(this.formatedImageSource);\n  }\n\n  toggleDocumentViewer() {\n    this.selectImage.emit();\n  }\n\n  constructor(private readonly sanitizer: DomSanitizer) {}\n}\n","<ng-container>\n  <span>{{ sideText }}</span>\n  <div\n    role=\"img\"\n    data-role=\"check-image-item\"\n    class=\"bb-check-img-container\"\n    (click)=\"!!image && toggleDocumentViewer()\"\n    attr.aria-label=\"{{ sideText }} image container\"\n    i18n-aria-label=\"\n      Image container for front or back check image@@transaction-check-image-item.aria-label.image-container\"\n    bbAccessibilityKeyboard\n  >\n    <ng-container *ngIf=\"!!image; else noImage\">\n      <div class=\"bb-check-img-container-state\">\n        <div class=\"bb-check-img-container-state__container\">\n          <bb-icon-ui\n            name=\"remove-red-eye\"\n            size=\"lg\"\n            color=\"white\"\n            aria-label=\"Expand Image\"\n            i18n-aria-label=\"Expand image@@transaction-check-image-item.aria-label.expand-icon\"\n          ></bb-icon-ui>\n        </div>\n      </div>\n      <img class=\"bb-check-img-container__img\" alt=\"{{ imageAlt }}\" [src]=\"createImageSource()\" />\n    </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #noImage>\n  <div class=\"bb-check-no-img\">\n    <div class=\"bb-check-no-img__icon\">\n      <bb-icon-ui\n        name=\"broken-image\"\n        size=\"lg\"\n        aria-label=\"No image\"\n        i18n-aria-label=\"No image@@transaction-check-image-item.aria-label.no-image-icon\"\n      ></bb-icon-ui>\n    </div>\n  </div>\n</ng-template>\n","export const DOCUMENT_LOAD_DELAY_MS = 400;\n\nimport { Observable } from 'rxjs';\n\nexport type Styles = { [key in string]: any };\n\nexport enum DocumentViewerType {\n  JPEG = 'image/jpeg',\n  JPG = 'image/jpg',\n  PNG = 'image/png',\n  WEBP = 'image/webp',\n  GIF = 'image/gif',\n  BMP = 'image/bmp',\n}\n\nexport interface DocumentRefSrc {\n  filename: string;\n  filetype: DocumentViewerType;\n  src: Observable<string>;\n}\n\nexport interface DocumentViewerOptions {\n  container?: {\n    styles?: Styles;\n  };\n  scale?: number;\n}\n\nexport interface NavigationState {\n  currIdx: number;\n  total: number;\n}\n\nexport const isDocumentViewerType = (type: string): type is DocumentViewerType =>\n  Object.values(DocumentViewerType).includes(type as DocumentViewerType);\n\nexport const downloadFile = (url: string, fileName: string) => {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = `${fileName}`;\n  link.click();\n};\n\nexport enum KEY_CODES {\n  UP = 'ArrowUp',\n  DOWN = 'ArrowDown',\n  ENTER = 'Enter',\n  SPACE = ' ',\n  TAB = 'Tab',\n  BACKSPACE = 'Backspace',\n  DELETE = 'Delete',\n  ESCAPE = 'Escape',\n  X = 'x',\n  V = 'v',\n  LEFT = 'ArrowLeft',\n  RIGHT = 'ArrowRight',\n}\n\nconst KEY_CODE_TO_CODE = {\n  9: KEY_CODES.TAB,\n  38: KEY_CODES.UP,\n  40: KEY_CODES.DOWN,\n  32: KEY_CODES.SPACE,\n  13: KEY_CODES.ENTER,\n  46: KEY_CODES.DELETE,\n  8: KEY_CODES.BACKSPACE,\n  27: KEY_CODES.ESCAPE,\n  88: KEY_CODES.X,\n  86: KEY_CODES.V,\n} as any;\n\nfunction browserIsMsie() {\n  return navigator.userAgent.indexOf('MSIE') > -1 || navigator.userAgent.indexOf('Trident/') > -1;\n}\n\nexport function getKeyCode(event: KeyboardEvent): KEY_CODES {\n  // NOTE: detect IE\n  if (browserIsMsie()) {\n    return KEY_CODE_TO_CODE[event.keyCode] as KEY_CODES;\n  }\n\n  return event.code as KEY_CODES;\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { DocumentViewerOptions, Styles } from '../../../model/UI/document-viewer-commons';\n\n@Component({\n  selector: 'bb-document-viewer-backdrop',\n  templateUrl: './document-viewer-backdrop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DocumentViewerBackdropComponent {\n  @Input() options?: DocumentViewerOptions;\n\n  get containerStyles(): Styles | null {\n    return this.options?.container?.styles || null;\n  }\n\n  get hasCustomStyles(): boolean {\n    return Boolean(this.options?.container?.styles);\n  }\n}\n","<div\n  class=\"bb-document-viewer-backdrop modal-backdrop show\"\n  aria-hidden=\"true\"\n  [class.bb-document-viewer-backdrop-default-off]=\"hasCustomStyles\"\n  [ngStyle]=\"containerStyles\"\n></div>\n","import { ChangeDetectionStrategy, Component, Input, Output, EventEmitter, NgZone, OnDestroy } from '@angular/core';\nimport { DocumentViewerType, downloadFile } from '../../../model/UI/document-viewer-commons';\n\n@Component({\n  selector: 'bb-document-viewer-header',\n  templateUrl: './document-viewer-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DocumentViewerHeaderComponent implements OnDestroy {\n  @Input() filename!: string;\n  @Input() filetype?: DocumentViewerType;\n  @Input() set source(src: string | undefined) {\n    if (src) {\n      this.revokeObjectURL();\n      this.documentObjectURL = src;\n    }\n  }\n  @Input() isLoading = false;\n  //eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() close = new EventEmitter<void>();\n  private documentObjectURL?: string;\n\n  constructor(private readonly ngZone: NgZone) {}\n\n  ngOnDestroy() {\n    this.revokeObjectURL();\n  }\n\n  onOpenDocument(): void {\n    if (!this.documentObjectURL) {\n      return;\n    }\n\n    this.openImage(this.documentObjectURL);\n  }\n\n  onPrintDocument(): void {\n    if (!this.documentObjectURL) {\n      return;\n    }\n\n    this.printWindow(this.openImage(this.documentObjectURL));\n  }\n\n  onDownloadDocument(): void {\n    if (!this.documentObjectURL) {\n      return;\n    }\n\n    downloadFile(this.documentObjectURL, this.filename);\n  }\n\n  private openImage(documentObjectURL: string): Window {\n    const image = new Image();\n    const newWindow = window.open('about:blank', '_new') as Window;\n    image.src = documentObjectURL;\n    newWindow.document.write(image.outerHTML);\n\n    return newWindow;\n  }\n\n  private printWindow(window: Window): void {\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        window.focus();\n        window.print();\n      }, 0);\n    });\n  }\n\n  private revokeObjectURL(): void {\n    if (this.documentObjectURL) {\n      window.URL.revokeObjectURL(this.documentObjectURL);\n    }\n  }\n}\n","<div class=\"bb-document-viewer-header\">\n  <span class=\"bb-document-viewer-header__title bb-stack\">\n    <bb-icon-ui\n      class=\"bb-stack__item bb-stack__item--spacing-sm\"\n      data-role=\"document-viewer-header-icon\"\n      name=\"description\"\n      size=\"md\"\n    ></bb-icon-ui>\n    <span class=\"bb-stack__item\" data-role=\"document-viewer-header-filename\">{{ filename }}</span>\n  </span>\n  <div class=\"bb-stack\">\n    <!-- web view -->\n    <div\n      class=\"\n        bb-stack__item bb-stack__item--spacing-none bb-stack__item--push-right\n        bb-document-viewer-header-controls__web-view\n      \"\n    >\n      <button\n        bbButton\n        data-role=\"print-document-btn\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\"\n        aria-label=\"print\"\n        i18n-aria-label=\"Print document button@@document-viewer-header.aria-label.print-document-btn\"\n        buttonSize=\"sm\"\n        (click)=\"!isLoading && onPrintDocument()\"\n      >\n        <bb-icon-ui name=\"local-printshop\" size=\"md\" color=\"light\"></bb-icon-ui>\n      </button>\n\n      <button\n        bbButton\n        data-role=\"download-document-btn\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\"\n        aria-label=\"download\"\n        i18n-aria-label=\"Download document button@document-viewer-header.aria-label.download-document-btn\"\n        buttonSize=\"sm\"\n        (click)=\"!isLoading && onDownloadDocument()\"\n      >\n        <bb-icon-ui name=\"save-alt\" size=\"md\" color=\"light\"></bb-icon-ui>\n      </button>\n\n      <button\n        bbButton\n        data-role=\"open-document-btn\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\"\n        aria-label=\"new tab\"\n        i18n-aria-label=\"Open document in new tab button@@document-viewer-header.aria-label.open-document-new-tab-btn\"\n        buttonSize=\"sm\"\n        (click)=\"!isLoading && onOpenDocument()\"\n      >\n        <bb-icon-ui name=\"open-in-new\" size=\"md\" color=\"light\"></bb-icon-ui>\n      </button>\n\n      <button\n        bbButton\n        data-role=\"close-document-btn\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\"\n        aria-label=\"close\"\n        i18n-aria-label=\"Close document button@@document-viewer-header.aria-label.close-btn\"\n        buttonSize=\"sm\"\n        (click)=\"close.emit()\"\n      >\n        <bb-icon-ui name=\"times\" size=\"md\" color=\"light\"></bb-icon-ui>\n      </button>\n    </div>\n\n    <!-- mobile view -->\n    <div\n      class=\"\n        bb-stack__item bb-stack__item--spacing-none bb-stack__item--push-right\n        bb-document-viewer-header-controls__mobile-view\n      \"\n    >\n      <div class=\"bb-stack\">\n        <bb-dropdown-menu-ui\n          container=\"body\"\n          data-role=\"options-menu-dropdown\"\n          class=\"bb-stack__item\"\n          icon=\"ellipsis-h\"\n          btnColor=\"muted\"\n          buttonSize=\"sm\"\n          [btnCircle]=\"true\"\n          iconSize=\"md\"\n          iconColor=\"light\"\n          ariaLabel=\"Check image export dropdown menu\"\n          i18n-ariaLabel=\"Check image export dropdown menu@@document-viewer-header.export-dropdown-menu.ariaLabel\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <a\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"open-document-item\"\n              (click)=\"!isLoading && onOpenDocument()\"\n              href=\"javaScript:void(0);\"\n            >\n              <bb-icon-ui class=\"bb-document-viewer-header__dropdown-icon\" name=\"open-in-new\" size=\"md\"></bb-icon-ui>\n              <span i18n=\"Open image in new tab@@document-viewer-header.controlsList.open-in-new-tab\"\n                >Open in new tab</span\n              >\n            </a>\n            <a\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"download-document-item\"\n              (click)=\"!isLoading && onDownloadDocument()\"\n              href=\"javaScript:void(0);\"\n            >\n              <bb-icon-ui class=\"bb-document-viewer-header__dropdown-icon\" name=\"save-alt\" size=\"md\"></bb-icon-ui>\n              <span i18n=\"Download image@@document-viewer-header.controlsList.download-image\">Download</span>\n            </a>\n            <a\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"print-document-item\"\n              (click)=\"!isLoading && onPrintDocument()\"\n              href=\"javaScript:void(0);\"\n            >\n              <bb-icon-ui\n                class=\"bb-document-viewer-header__dropdown-icon\"\n                name=\"local-printshop\"\n                size=\"md\"\n              ></bb-icon-ui>\n              <span i18n=\"Print image@@document-viewer-header.controlsList.print-image\">Print</span>\n            </a>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n        <button\n          bbButton\n          data-role=\"close-document-btn\"\n          class=\"bb-stack__item bb-document-viewer-interactor-controls__button bb-document-viewer-header__spacer\"\n          aria-label=\"close\"\n          i18n-aria-label=\"Close document button@@document-viewer-header.aria-label.close-btn\"\n          buttonSize=\"sm\"\n          (click)=\"close.emit()\"\n        >\n          <bb-icon-ui name=\"times\" size=\"md\" color=\"light\"></bb-icon-ui>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NavigationState } from '../../../model/UI/document-viewer-commons';\n\n@Component({\n  selector: 'bb-document-viewer-interactor',\n  templateUrl: './document-viewer-interactor.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DocumentViewerInteractorComponent {\n  @Input() navigationState: NavigationState = { currIdx: 0, total: 0 };\n  @Input() canZoomOut = true;\n  @Input() canZoomIn = true;\n  @Output() navigate = new EventEmitter<number>();\n  @Output() zoomIn = new EventEmitter<void>();\n  @Output() zoomOut = new EventEmitter<void>();\n\n  get navigationStatus(): string {\n    return this.navigationState.currIdx + 1 + '/' + this.navigationState.total;\n  }\n\n  get hasNextNavigation(): boolean {\n    return this.navigationState.currIdx + 1 < this.navigationState.total;\n  }\n\n  get hasPrevNavigation(): boolean {\n    return this.navigationState.currIdx > 0;\n  }\n\n  prev(): void {\n    this.navigate.emit(this.navigationState.currIdx - 1);\n  }\n\n  next(): void {\n    this.navigate.emit(this.navigationState.currIdx + 1);\n  }\n}\n","<div class=\"bb-document-viewer-interactor\">\n  <div class=\"bb-document-viewer-interactor__container\" (click)=\"$event.stopPropagation()\">\n    <div class=\"bb-document-viewer-interactor-controls\">\n      <button\n        bbButton\n        data-role=\"previous-document-btn\"\n        *ngIf=\"hasPrevNavigation\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-interactor-controls__spacer\"\n        buttonSize=\"sm\"\n        (click)=\"prev()\"\n        aria-label=\"previous\"\n        i18n-aria-label=\"Previous document button@@document-viewer-interactor.aria-label.previous-document-button\"\n      >\n        <bb-icon-ui name=\"angle-left\" color=\"light\" size=\"md\"></bb-icon-ui>\n      </button>\n      <span class=\"bb-document-viewer-interactor-controls__spacer\">{{ navigationStatus }}</span>\n      <button\n        bbButton\n        data-role=\"next-document-btn\"\n        *ngIf=\"hasNextNavigation\"\n        class=\"bb-document-viewer-interactor-controls__button\"\n        buttonSize=\"sm\"\n        (click)=\"next()\"\n        aria-label=\"next\"\n        i18n-aria-label=\"Next document button@@document-viewer-interactor.aria-label.next-document-button\"\n      >\n        <bb-icon-ui name=\"angle-right\" color=\"light\" size=\"md\"></bb-icon-ui>\n      </button>\n    </div>\n    <div class=\"bb-document-viewer-interactor-separator\"></div>\n    <div class=\"bb-document-viewer-interactor-controls\">\n      <button\n        bbButton\n        data-role=\"zoom-out-btn\"\n        class=\"bb-document-viewer-interactor-controls__button bb-document-viewer-interactor-controls__spacer\"\n        [disabled]=\"!canZoomOut\"\n        buttonSize=\"sm\"\n        (click)=\"zoomOut.emit()\"\n        aria-label=\"zoom out\"\n        i18n-aria-label=\"Zoom out document button@@document-viewer-interactor.aria-label.zoomOut-document-button\"\n      >\n        <bb-icon-ui name=\"zoom-out\" color=\"light\" size=\"md\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        data-role=\"zoom-in-btn\"\n        class=\"bb-document-viewer-interactor-controls__button\"\n        [disabled]=\"!canZoomIn\"\n        aria-label=\"zoom in\"\n        buttonSize=\"sm\"\n        (click)=\"zoomIn.emit()\"\n        i18n-aria-label=\"Zoom in document button@@document-viewer-interactor.aria-label.zoomIn-document-button\"\n      >\n        <bb-icon-ui name=\"zoom-in\" color=\"light\" size=\"md\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Output, EventEmitter, Input, OnDestroy } from '@angular/core';\nimport { DomSanitizer, SafeStyle, SafeUrl } from '@angular/platform-browser';\nimport { NavigationState } from '../../../model/UI/document-viewer-commons';\n\ninterface ImageUIState {\n  scale: number;\n}\n\nconst ZOOM_FACTOR = 1.1;\nconst ZOOM_IN_THRESHOLD = 4;\nconst ZOOM_OUT_THRESHOLD = 0.1;\n\n@Component({\n  selector: 'bb-image-viewer',\n  templateUrl: './image-viewer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImageViewerComponent implements OnDestroy {\n  @Input() set source(src: string | undefined) {\n    if (src) {\n      this.revokeObjectURLIfNeeded();\n      this.imageObjectUrl = src;\n\n      this.imageObjectTrustedUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.imageObjectUrl);\n    }\n  }\n  @Input() navigationState: NavigationState = { currIdx: 0, total: 0 };\n  @Output() navigate = new EventEmitter<number>();\n  imageObjectTrustedUrl: SafeUrl | undefined;\n  imageUiState: ImageUIState = { scale: 1 };\n\n  /**\n   * Internal\n   */\n  private imageObjectUrl: string | undefined;\n\n  constructor(private readonly domSanitizer: DomSanitizer) {}\n\n  get canZoomOut(): boolean {\n    return this.imageUiState.scale >= ZOOM_OUT_THRESHOLD;\n  }\n\n  get canZoomIn(): boolean {\n    return this.imageUiState.scale <= ZOOM_IN_THRESHOLD;\n  }\n\n  get scale(): SafeStyle {\n    return this.domSanitizer.bypassSecurityTrustStyle(`scale(${this.imageUiState.scale})`);\n  }\n\n  ngOnDestroy() {\n    this.revokeObjectURLIfNeeded();\n  }\n\n  zoomIn(): void {\n    if (this.canZoomIn) {\n      this.imageUiState.scale *= ZOOM_FACTOR;\n    }\n  }\n\n  zoomOut(): void {\n    if (this.canZoomOut) {\n      this.imageUiState.scale /= ZOOM_FACTOR;\n    }\n  }\n\n  private revokeObjectURLIfNeeded(): void {\n    if (this.imageObjectUrl) {\n      window.URL.revokeObjectURL(this.imageObjectUrl);\n    }\n  }\n}\n","<div class=\"bb-img-viewer-container bb-stack bb-stack--center\">\n  <img\n    #imgRef\n    class=\"bb-img-viewer-container__img\"\n    [style.transform]=\"scale\"\n    [src]=\"imageObjectTrustedUrl\"\n    alt=\"Transaction check image\"\n    (click)=\"$event.stopPropagation()\"\n  />\n</div>\n<bb-document-viewer-interactor\n  [navigationState]=\"navigationState\"\n  [canZoomOut]=\"canZoomOut\"\n  [canZoomIn]=\"canZoomIn\"\n  (navigate)=\"navigate.emit($event)\"\n  (zoomIn)=\"zoomIn()\"\n  (zoomOut)=\"zoomOut()\"\n></bb-document-viewer-interactor>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ElementRef,\n  HostListener,\n  ViewContainerRef,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  DocumentRefSrc,\n  DocumentViewerOptions,\n  DocumentViewerType,\n  DOCUMENT_LOAD_DELAY_MS,\n  NavigationState,\n  Styles,\n} from '../../../model/UI/document-viewer-commons';\nimport { Observable, ReplaySubject, combineLatest, timer, BehaviorSubject, Subject } from 'rxjs';\nimport { catchError, distinctUntilChanged, finalize, map, share, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-document-viewer-container',\n  templateUrl: './document-viewer-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DocumentViewerContainerComponent implements OnInit, OnDestroy {\n  @Input() documentRefSrcs: DocumentRefSrc[] = [];\n  @Input() set activeDocumentRefIdx(idx: number) {\n    this.activeDocumentRefIdx$.next(idx);\n  }\n  @Input() options?: DocumentViewerOptions;\n  // eslint-disable-next-line\n  @Output() close = new EventEmitter<void>();\n  // eslint-disable-next-line\n  @ViewChild('viewerContainer', { static: true, read: ViewContainerRef })\n  readonly viewContainer!: ViewContainerRef;\n  documentSrc$!: Observable<string>;\n  documentFilename$!: Observable<string>;\n  documentFiletype$!: Observable<DocumentViewerType>;\n  navigationState$!: Observable<NavigationState>;\n  readonly isLoading$ = new BehaviorSubject(false);\n  readonly isHttpError$ = new BehaviorSubject(false);\n  readonly documentType = DocumentViewerType;\n  /**\n   * Internal\n   */\n  private readonly activeDocumentRefIdx$ = new ReplaySubject<number>(1);\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(private readonly elemRef: ElementRef) {}\n\n  get containerStyles(): { [klass: string]: any } | null {\n    return this.options?.container?.styles || null;\n  }\n\n  get viewerScale(): number | undefined {\n    return this.options?.scale;\n  }\n\n  ngOnInit() {\n    this.setDocumentRefChangeSources();\n    this.setFocus();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  @HostListener('document:keydown.escape') onEscape() {\n    this.close.emit();\n  }\n\n  closeDialog() {\n    this.close.emit();\n  }\n\n  onNavigate(idx: number): void {\n    this.activeDocumentRefIdx$.next(idx);\n  }\n\n  private setDocumentRefChangeSources(): void {\n    this.documentSrc$ = this.activeDocumentRefIdx$.pipe(\n      distinctUntilChanged(),\n      tap(() => {\n        this.isLoading$.next(true);\n        this.isHttpError$.next(false);\n      }),\n      switchMap((idx) =>\n        combineLatest([this.documentRefSrcs[idx].src, timer(DOCUMENT_LOAD_DELAY_MS)]).pipe(\n          map(([src]) => src),\n          finalize(() => {\n            this.isLoading$.next(false);\n          }),\n        ),\n      ),\n      catchError((error) => {\n        this.isHttpError$.next(true);\n\n        throw error;\n      }),\n      share(),\n    );\n    this.documentFilename$ = this.activeDocumentRefIdx$.pipe(map((idx) => this.documentRefSrcs[idx].filename));\n    this.documentFiletype$ = this.activeDocumentRefIdx$.pipe(map((idx) => this.documentRefSrcs[idx].filetype));\n    this.navigationState$ = this.activeDocumentRefIdx$.pipe(\n      map((idx) => ({ currIdx: idx, total: this.documentRefSrcs.length })),\n    );\n  }\n\n  private setFocus(): void {\n    this.elemRef.nativeElement.focus();\n  }\n}\n","<div\n  class=\"bb-document-viewer-container show\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  tabindex=\"-1\"\n  [ngStyle]=\"containerStyles\"\n  cdkTrapFocus\n  cdkTrapFocusAutoCapture=\"true\"\n>\n  <div class=\"bb-document-viewer-container__wrapper\">\n    <bb-document-viewer-header\n      data-role=\"document-viewer-header\"\n      [filename]=\"(documentFilename$ | async)!\"\n      [source]=\"(documentSrc$ | async)!\"\n      [filetype]=\"(documentFiletype$ | async)!\"\n      [isLoading]=\"(isLoading$ | async)!\"\n      (close)=\"close.emit()\"\n    ></bb-document-viewer-header>\n\n    <ng-container *ngIf=\"documentSrc$ | async as source\">\n      <ng-container *ngIf=\"!(isLoading$ | async) && !(isHttpError$ | async)\">\n        <div\n          class=\"bb-document-viewer-container-image\"\n          *ngIf=\"documentFiletype$ | async as documentFiletype\"\n          (click)=\"closeDialog()\"\n        >\n          <bb-image-viewer\n            data-role=\"document-viewer-image\"\n            [source]=\"source\"\n            [navigationState]=\"(navigationState$ | async)!\"\n            (navigate)=\"onNavigate($event)\"\n          ></bb-image-viewer>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <bb-loading-indicator-ui\n      *ngIf=\"isLoading$ | async\"\n      class=\"bb-document-viewer-container__state\"\n      data-role=\"document-viewer-loading-state\"\n      loaderSize=\"lg\"\n    >\n    </bb-loading-indicator-ui>\n\n    <bb-empty-state-ui\n      *ngIf=\"!(isLoading$ | async) && (isHttpError$ | async)\"\n      data-role=\"document-viewer-error-state\"\n      class=\"bb-document-viewer-container__state\"\n      iconColor=\"white\"\n      iconModifier=\"error-outline\"\n      iconSize=\"xxl\"\n      title=\"Unknown Error\"\n      i18n-title=\"Unknown http error title@@document-viewer-component.uknown-error-title\"\n      subtitle=\"Try to reload the page or contact the system administrator\"\n      i18n-subtitle=\"\n        Try to reload the page or contact the system administrator@@document-viewer-component.uknown-error-subtitle\"\n    ></bb-empty-state-ui>\n  </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { of } from 'rxjs';\nimport { TransactionsCheckImage } from '../../model/transactions-check-images.model';\nimport { DocumentRefSrc, getKeyCode, KEY_CODES } from '../../model/UI/document-viewer-commons';\ntype OptionalCheckImage = TransactionsCheckImage | undefined;\n\n@Component({\n  selector: 'bb-transaction-check-image-document-viewer',\n  templateUrl: 'transaction-check-image-document-viewer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionCheckImageDocumentViewerComponent {\n  @Input() imageCheckNumber: string | undefined | number;\n  @Input() imageFront: TransactionsCheckImage | undefined;\n  @Input() imageBack: TransactionsCheckImage | undefined;\n  @Input() position = 0;\n\n  @Output() closeViewer = new EventEmitter<void>();\n\n  private toDocumentRefSrc(...images: OptionalCheckImage[]): DocumentRefSrc[] {\n    return images\n      .filter((item) => !!item)\n      .map((image) => {\n        const { mimeType, content, side } = image as TransactionsCheckImage;\n        const fileType = image?.mimeType.replace('image/', '');\n        const filename = `${this.imageCheckNumber}-${side}.${fileType}`;\n\n        return {\n          filename,\n          filetype: image?.mimeType as any,\n          src: of(`data:${mimeType};base64,${content}`),\n        };\n      });\n  }\n\n  get imagesRefsSrc() {\n    return this.toDocumentRefSrc(this.imageFront, this.imageBack);\n  }\n\n  closeDocumentViewer() {\n    this.closeViewer.emit();\n  }\n\n  trapKeyEvent(event: KeyboardEvent) {\n    if (getKeyCode(event) !== KEY_CODES.ESCAPE) {\n      event.stopPropagation();\n    }\n  }\n}\n","<div (keydown)=\"trapKeyEvent($event)\" (keyup)=\"trapKeyEvent($event)\">\n  <bb-document-viewer-backdrop></bb-document-viewer-backdrop>\n  <bb-document-viewer-container\n    [documentRefSrcs]=\"imagesRefsSrc\"\n    [activeDocumentRefIdx]=\"position\"\n    cdkTrapFocus\n    (close)=\"closeDocumentViewer()\"\n  ></bb-document-viewer-container>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  TransactionCheckImageResponse,\n  TransactionsCheckImageSide,\n  TransactionsCheckImage,\n} from '../../model/transactions-check-images.model';\nimport { Transaction } from '../../model/transaction.model';\nimport { TransactionsDetailsLoading, TransactionsDetailsLoadingState } from '../../model/transactions-details.model';\n\n@Component({\n  selector: 'bb-transaction-check-image',\n  templateUrl: './transaction-check-image.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionCheckImageComponent {\n  /**\n   * The transaction object\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * The check image object.\n   */\n  // eslint-disable-next-line\n  @Input()\n  set checkImagesList(value: TransactionCheckImageResponse) {\n    this.imageFront = value && value.images.find((data) => data.side === TransactionsCheckImageSide.FRONT);\n    this.imageBack = value && value.images.find((data) => data.side === TransactionsCheckImageSide.BACK);\n  }\n  /**\n   * The transaction details loading status.\n   */\n  @Input() transactionDetailsLoadingStatus: TransactionsDetailsLoading | undefined;\n  readonly loadingStateEnum = TransactionsDetailsLoadingState;\n\n  /**\n   * Sides of the check after being proccesed by formatter class\n   */\n  imageFront: TransactionsCheckImage | undefined;\n  imageBack: TransactionsCheckImage | undefined;\n\n  /**\n   * Index to display in the document viewer. For the purpose of hidding and showing\n   * the viewer this will be base 1\n   * when the value is 0 the document viewer will not be visible\n   */\n  index = 0;\n\n  get hasErrors() {\n    return (\n      this.transactionDetailsLoadingStatus &&\n      this.transactionDetailsLoadingStatus.checkImages &&\n      this.transactionDetailsLoadingStatus.checkImages < 0\n    );\n  }\n\n  get isDone() {\n    return (\n      this.transactionDetailsLoadingStatus &&\n      this.transactionDetailsLoadingStatus.checkImages === TransactionsDetailsLoadingState.done\n    );\n  }\n\n  onClose() {\n    this.index = 0;\n  }\n\n  selectImage(index: number) {\n    this.index = index;\n  }\n}\n","<ng-container *ngIf=\"isDone || hasErrors; else loadingState\">\n  <div class=\"bb-stack bb-stack--wrap\">\n    <div class=\"bb-stack__item\">\n      <bb-transaction-check-image-item\n        *ngIf=\"!!imageFront || hasErrors\"\n        [image]=\"imageFront\"\n        data-role=\"check-image-item-front\"\n        (selectImage)=\"selectImage(1)\"\n        [transaction]=\"transaction\"\n        sideText=\"Front\"\n        imageAlt=\"Front check image\"\n        i18n-sideText=\"Front side title of check image@@transactions.detail.check-image.front.title\"\n        i18n-imageAlt=\"Front side alt of check image@@transactions.detail.check-image.front.alt-image\"\n      ></bb-transaction-check-image-item>\n    </div>\n\n    <div class=\"bb-stack__item\">\n      <bb-transaction-check-image-item\n        *ngIf=\"!!imageBack || hasErrors\"\n        data-role=\"check-image-item-back\"\n        (selectImage)=\"selectImage(imageFront ? 2 : 1)\"\n        [image]=\"imageBack\"\n        [transaction]=\"transaction\"\n        sideText=\"Back\"\n        imageAlt=\"Back check image\"\n        i18n-sideText=\"Back side title of check image@@transactions.detail.check-image.back.title\"\n        i18n-imageAlt=\"Back side alt of check image@@transactions.detail.check-image.back.alt-image\"\n      ></bb-transaction-check-image-item>\n    </div>\n  </div>\n\n  <bb-transaction-check-image-document-viewer\n    *ngIf=\"index > 0\"\n    data-role=\"check-image-document-viewer\"\n    [imageCheckNumber]=\"transaction?.checkSerialNumber\"\n    [imageFront]=\"imageFront\"\n    [imageBack]=\"imageBack\"\n    [position]=\"index - 1\"\n    (closeViewer)=\"onClose()\"\n  ></bb-transaction-check-image-document-viewer>\n\n  <ng-container *ngIf=\"hasErrors\">\n    <span\n      i18n=\"Something went wrong@@transactions.detail.check-image.server-error\"\n      class=\"bb-input-validation-message\"\n      data-role=\"check-image-server-error-state\"\n      *ngIf=\"transactionDetailsLoadingStatus?.checkImages === loadingStateEnum?.serverError\"\n    >\n      Something went wrong. Please try again later.\n    </span>\n\n    <span\n      i18n=\"Check images cannot be viewed at the moment@@transactions.detail.check-image.bad-request-error\"\n      class=\"bb-input-validation-message\"\n      data-role=\"check-image-bad-request-error-state\"\n      *ngIf=\"transactionDetailsLoadingStatus?.checkImages === loadingStateEnum?.badRequestError\"\n    >\n      Check images cannot be viewed at the moment, please try again later or contact your financial institution.\n    </span>\n\n    <span\n      i18n=\"Check images cannot be viewed at the moment@@transactions.detail.check-image.not-found-error\"\n      class=\"bb-input-validation-message\"\n      data-role=\"check-image-not-found-error-state\"\n      *ngIf=\"transactionDetailsLoadingStatus?.checkImages === loadingStateEnum?.notFoundError\"\n    >\n      Check images cannot be viewed at the moment, please try again later or contact your financial institution.\n    </span>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InquireAndDisputeFile, InquireAndDisputeTopics, MessageForm } from '../../model/messages.model';\nimport { TransactionsDetailsLoadingState } from '../../model/transactions-details.model';\n\n@Component({\n  selector: 'bb-transactions-inquiry-dispute',\n  templateUrl: 'transactions-inquiry-dispute.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsInquiryDisputeComponent implements OnInit, OnDestroy {\n  @Input() message: MessageForm | undefined;\n  @Input() enableDispute = false;\n  /**\n   * Whether the dispute & inquiry form is sending or not.\n   */\n  @Input() state = TransactionsDetailsLoadingState.notStarted;\n  @Input() inquireAndDisputeTopics: InquireAndDisputeTopics | undefined;\n\n  @Output() submitReport = new EventEmitter<MessageForm>();\n\n  @Output() cancelReport = new EventEmitter<void>();\n\n  @Output() messageChange = new EventEmitter<MessageForm>();\n\n  @Output() fileChange = new EventEmitter<File>();\n  @Output() fileRemoved = new EventEmitter<InquireAndDisputeFile>();\n\n  confirmationDialogActive = false;\n  labels = {\n    inquire: $localize`:Inquire tooltip@@transactions.dispute.inquire.inquireLabel:Inquire for more information`,\n    dispute: $localize`:Dispute tooltip@@transactions.dispute.inquire.disputeLabel:Dispute this transaction`,\n  };\n\n  readonly loadingStateEnum = TransactionsDetailsLoadingState;\n\n  private unsubscribeSubject = new Subject<void>();\n\n  transactionReportForm = this.fb.group({\n    topic: [{ value: '' }, this.topicRequired],\n    attachment: [undefined],\n    subject: [{ name: '' }],\n    body: [''],\n  });\n\n  private topicRequired(control: AbstractControl): Record<'required', string> | null {\n    return control.value?.value === '' ? { required: 'value is required' } : null;\n  }\n\n  private getControl(field: string): AbstractControl | undefined {\n    return this.transactionReportForm.controls[field];\n  }\n\n  private setFormValue(values: MessageForm) {\n    this.transactionReportForm.patchValue(\n      {\n        body: values.body,\n        attachments: values.attachments,\n      },\n      { emitEvent: false },\n    );\n  }\n\n  hasError(field: string, type: string) {\n    const control = this.getControl(field);\n\n    return control && control.errors && control.errors[type];\n  }\n\n  isInvalidControl(field: string): boolean {\n    const control = this.getControl(field);\n\n    return !!control && control.touched && control.invalid;\n  }\n\n  saveReport() {\n    if (this.transactionReportForm.valid) {\n      this.submitReport.emit(this.message);\n    } else {\n      this.transactionReportForm.markAllAsTouched();\n    }\n  }\n\n  closeReportForm() {\n    this.cancelReport.emit();\n    this.closeConfirmationDialog();\n  }\n\n  closeConfirmationDialog() {\n    this.confirmationDialogActive = false;\n  }\n\n  processLabel(label: string) {\n    const arr = label.split(' ');\n    const last = arr.splice(arr.length - 1, 1);\n\n    return [arr.join(' ') + ' ', ...last];\n  }\n\n  ngOnInit() {\n    if (this.message) {\n      this.setFormValue(this.message);\n    }\n\n    this.transactionReportForm.valueChanges.pipe(takeUntil(this.unsubscribeSubject)).subscribe({\n      next: (formValue) => {\n        this.messageChange.emit({ ...this.message, ...formValue });\n      },\n    });\n  }\n\n  uploadFile(input: HTMLInputElement) {\n    if (input.files && input.files[0]) {\n      const file: File = input.files[0];\n      this.fileChange.emit(file);\n      input.value = '';\n    }\n  }\n\n  removeAttachment(attachment: InquireAndDisputeFile) {\n    this.fileRemoved.emit(attachment);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeSubject.next();\n    this.unsubscribeSubject.complete();\n  }\n\n  constructor(private readonly fb: FormBuilder) {}\n}\n","<div class=\"bb-transaction-list-item-detail-additional-info\">\n  <form [formGroup]=\"transactionReportForm\">\n    <div class=\"bb-block bb-block--lg\" bbAccessibilityKeyboard>\n      <h5\n        class=\"bb-transaction-list-item-detail-additional-info__title\"\n        data-role=\"dispute-inquiry-header\"\n        i18n=\"dispute and inquiry form header@@transactions.dispute.inquiry.header\"\n      >\n        Does this transaction seem suspicious or incorrect?\n      </h5>\n      <p\n        class=\"bb-text-support text-small\"\n        data-role=\"dispute-inquiry-subHeader\"\n        i18n=\"dispute and inquiry form subHeader@@transactions.dispute.inquiry.subHeader\"\n      >\n        It’s important to provide as much detail as possible for the bank employee to quickly and accurately review your\n        issue.\n      </p>\n    </div>\n\n    <div class=\"form-group bb-block bb-block--lg\">\n      <bb-input-radio-group-ui\n        aria-labelledby=\"'label-transaction-dispute'\"\n        [horizontal]=\"false\"\n        formControlName=\"topic\"\n        verticalAlign=\"top\"\n      >\n        <bb-input-radio-ui\n          value=\"dispute\"\n          [labelTemplate]=\"optionsLabel\"\n          labelTemplateContext=\"dispute\"\n          [disabled]=\"!enableDispute\"\n        ></bb-input-radio-ui>\n        <bb-input-radio-ui\n          value=\"inquire\"\n          [labelTemplate]=\"optionsLabel\"\n          labelTemplateContext=\"inquire\"\n        ></bb-input-radio-ui>\n      </bb-input-radio-group-ui>\n      <bb-input-validation-message-ui [showErrors]=\"isInvalidControl('topic')\">\n        <span\n          *ngIf=\"hasError('topic', 'required')\"\n          i18n=\"Error message if field is required@@transactions.dispute.errors.operationRequired\"\n        >\n          Required field\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group bb-block\" [ngClass]=\"{ 'bb-block--sm': isInvalidControl('body') }\">\n      <bb-rich-text-editor-ui\n        aria-label=\"Report body\"\n        formControlName=\"body\"\n        placeholder=\"Please tell us more about this transaction...\"\n        i18n-aria-label=\"label report body body@@transactions.dispute.inquiry.body.label\"\n        i18n-placeholder=\"Place holder for messages body@@transactions.dispute.inquiry.body.message\"\n        [readonly]=\"false\"\n        [required]=\"true\"\n      ></bb-rich-text-editor-ui>\n\n      <bb-input-validation-message-ui [showErrors]=\"isInvalidControl('body')\">\n        <span\n          *ngIf=\"hasError('body', 'required')\"\n          i18n=\"Error message if field is required@@transactions.dispute.errors.bodyRequired\"\n        >\n          Required field\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group bb-block bb-block--sm\">\n      <bb-input-file-ui\n        label=\"Default file input\"\n        data-role=\"attachment-file-input\"\n        [disabled]=\"state === loadingStateEnum.loading\"\n        (change)=\"uploadFile($any($event.target))\"\n      ></bb-input-file-ui>\n    </div>\n\n    <div class=\"row bb-inquire-dispute-attachments\" *ngIf=\"message?.attachments?.length\">\n      <div *ngFor=\"let attachment of message?.attachments\" class=\"col-md-6 bb-inquire-dispute-attachments__item\">\n        <div class=\"bb-block bb-block--md\">\n          <bb-file-attachment-ui\n            data-role=\"attachment-file\"\n            [name]=\"attachment.name\"\n            [size]=\"attachment.size\"\n            [fileContent]=\"attachment.content\"\n            [block]=\"true\"\n            [loading]=\"attachment.id === undefined\"\n            [deletable]=\"attachment.id !== undefined\"\n            (delete)=\"removeAttachment(attachment)\"\n          ></bb-file-attachment-ui>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"bb-block bb-block--xl bb-text-align-left\">\n      <ng-container *ngIf=\"state === loadingStateEnum.error\">\n        <bb-alert-ui\n          title=\"Couldn’t send your message\"\n          data-role=\"send-report-failed\"\n          message=\"Something went wrong. Please try again.\"\n          i18n-title=\"\n            Send report failed notification|Message for a notification displayed when sending transaction report request\n            has failed@@transactions.notification.error.send.title\"\n          i18n-message=\"Send report failed notification message@@transactions.notification.error.send.message\"\n        ></bb-alert-ui>\n      </ng-container>\n    </div>\n\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        bbButton\n        color=\"primary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"dispute-inquiry-send-button\"\n        [isLoading]=\"state === loadingStateEnum.loading\"\n        (click)=\"state !== loadingStateEnum.loading && saveReport()\"\n        i18n=\"Send button@@transactions.dispute.inquiry.button.send\"\n      >\n        Send\n      </bb-load-button-ui>\n      <button\n        *ngIf=\"state !== loadingStateEnum.loading\"\n        bbButton\n        type=\"button\"\n        color=\"secondary\"\n        data-role=\"dispute-inquiry-cancel-button\"\n        class=\"bb-button-bar__button\"\n        (click)=\"confirmationDialogActive = true\"\n        i18n=\"Cancel button@@transactions.dispute.inquiry.button.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n</div>\n\n<ng-template #disputeTipContent>\n  <div class=\"bb-text-align-left\">\n    <span i18n=\"Description inside a tooltip@@transactions.dispute.inquiry.tooltip.description\">\n      If this transaction is incorrect, you can raise a claim for a refund.\n    </span>\n  </div>\n</ng-template>\n\n<ng-template #inqueryTipContent>\n  <div class=\"bb-text-align-left\">\n    <span i18n=\"Description inside inquery tooltip@@transactions.dispute.inquiry.tooltip.description\">\n      If you are suspicious about this transaction, you can ask the bank to gather more information about it.\n    </span>\n  </div>\n</ng-template>\n\n<ng-template #optionsLabel let-context=\"labelTemplateContext\">\n  <ng-container *ngIf=\"context === 'dispute'\">\n    <span class=\"bb-input-radio-group__radio-label\">\n      {{ processLabel(labels.dispute)[0] }}\n    </span>\n    <span class=\"d-inline-block\">\n      <span class=\"bb-input-radio-group__radio-label\">\n        {{ processLabel(labels.dispute)[1] }}\n      </span>\n      <bb-icon-ui\n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--md-top\"\n        role=\"tooltip\"\n        name=\"info\"\n        size=\"md\"\n        [bbTooltip]=\"disputeTipContent\"\n        triggers=\"hover click\"\n        placement=\"right\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <bb-icon-ui\n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--sm-bottom\"\n        role=\"tooltip\"\n        name=\"info\"\n        size=\"md\"\n        [bbTooltip]=\"disputeTipContent\"\n        triggers=\"hover click\"\n        placement=\"left\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <span\n        class=\"sr-only\"\n        i18n=\"Description inside a tooltip@@transactions.dispute.inquiry.tooltip.hidden.description\"\n      >\n        If this transaction is incorrect, you can raise a claim for a refund.\n      </span>\n    </span>\n  </ng-container>\n\n  <ng-container *ngIf=\"context === 'inquire'\">\n    <span class=\"bb-input-radio-group__radio-label\">\n      {{ processLabel(labels.inquire)[0] }}\n    </span>\n    <span class=\"d-inline-block\">\n      <span class=\"bb-input-radio-group__radio-label\">\n        {{ processLabel(labels.inquire)[1] }}\n      </span>\n      <bb-icon-ui\n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--md-top\"\n        role=\"tooltip\"\n        name=\"info\"\n        size=\"md\"\n        [bbTooltip]=\"inqueryTipContent\"\n        triggers=\"hover click\"\n        placement=\"right\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <bb-icon-ui\n        class=\"bb-transactions-list-pending-header__tooltip bb-transactions-list-pending-header__tooltip--sm-bottom\"\n        role=\"tooltip\"\n        name=\"info\"\n        size=\"md\"\n        [bbTooltip]=\"inqueryTipContent\"\n        triggers=\"hover click\"\n        placement=\"top\"\n        bbAccessibilityKeyboard\n      ></bb-icon-ui>\n      <span\n        class=\"sr-only\"\n        i18n=\"Description inside inquery tooltip@@transactions.dispute.inquiry.tooltip.hidden.description\"\n      >\n        If you are suspicious about this transaction, you can ask the bank to gather more information about it.\n      </span>\n    </span>\n  </ng-container>\n</ng-template>\n\n<!-- Cancel Dispute or Inquiry -->\n<bb-modal-ui [isOpen]=\"confirmationDialogActive\" (cancel)=\"closeConfirmationDialog()\">\n  <div class=\"modal-header\">\n    <h2\n      id=\"modal-basic-title\"\n      class=\"modal-title\"\n      data-role=\"discard-report-modal-header\"\n      i18n=\"Discard your report?|Discard report modal title@@transactions.dispute.inquiry.discard.report.modal.title\"\n    >\n      Discard your report?\n    </h2>\n  </div>\n\n  <div class=\"modal-body\">\n    <span\n      data-role=\"discard-report-modal-subHeader\"\n      i18n=\"All entered data will be lost.|Discard report info@@transactions.dispute.inquiry.discard.report.modal.info\"\n    >\n      All entered data will be lost.\n    </span>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div class=\"bb-button-bar\">\n      <button\n        bbButton\n        color=\"danger\"\n        class=\"bb-button-bar__button\"\n        data-role=\"discard-report-modal-discard-button\"\n        (click)=\"closeReportForm()\"\n        i18n=\"Discard|Discard report button label@@transactions.dispute.inquiry.discard.report.modal.discard.button\"\n      >\n        Discard\n      </button>\n\n      <button\n        bbButton\n        color=\"secondary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"discard-report-modal-cancel-button\"\n        (click)=\"closeConfirmationDialog()\"\n        i18n=\"Cancel|Cancel button label@@transactions.dispute.inquiry.discard.report.modal.cancel.button\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</bb-modal-ui>\n","import { Component, Input } from '@angular/core';\nimport { DisputeStatus } from '@backbase/data-ang/transactions';\n\n@Component({\n  selector: 'bb-dispute-status-tag',\n  templateUrl: 'transaction-dispute-status-tag.component.html',\n})\nexport class TransactionsDisputeStatusTagComponent {\n  @Input() status: DisputeStatus | undefined;\n}\n","<ng-container *ngIf=\"status === 'PENDING'\">\n  <bb-badge-ui\n    text=\"Dispute Pending\"\n    i18n-text=\"Dispute pending|Text for pending disputed transaction label@@transaction.dispute.status.pending\"\n    color=\"warning\"\n    data-role=\"dispute-pending-tag\"\n  ></bb-badge-ui>\n</ng-container>\n\n<ng-container *ngIf=\"status === 'REFUNDED'\">\n  <bb-badge-ui\n    text=\"Refunded\"\n    i18n-text=\"Dispute refunded|Text for refunded disputed transaction label@@transaction.dispute.status.refunded\"\n    color=\"success\"\n    data-role=\"dispute-refunded-tag\"\n  ></bb-badge-ui>\n</ng-container>\n\n<ng-container *ngIf=\"status === 'REJECTED'\">\n  <bb-badge-ui\n    text=\"Dispute Rejected\"\n    i18n-text=\"Dispute rejected|Text for rejected disputed transaction label@@transaction.dispute.status.rejected\"\n    color=\"danger\"\n    data-role=\"dispute-rejected-tag\"\n  ></bb-badge-ui>\n</ng-container>\n","import { Component, Input } from '@angular/core';\nimport { Transaction } from '../../model/transaction.model';\nimport { DisputeStatusEnum } from '../../model/transactions-details.model';\n\n@Component({\n  selector: 'bb-dispute-banner',\n  templateUrl: 'transaction-dispute-banner.component.html',\n})\nexport class TransactionsDisputeBannerComponent {\n  @Input() transaction: Transaction | undefined;\n  readonly disputeStatus = DisputeStatusEnum;\n}\n","<ng-container>\n  <bb-alert-ui\n    *ngIf=\"transaction?.disputeStatus === disputeStatus.Pending\"\n    modifier=\"info\"\n    data-role=\"dispute-pending-banner\"\n    title=\"You’ve disputed this transaction\"\n    i18n-title=\"\n      Send dispute report success notification|Message for a notification displayed when sending transaction dispute\n      report request has succeed@@transactions.notification.success.send.dispute.title\"\n    message=\"Please go to Messages to view any responses to your request.\"\n    i18n-message=\"\n      Send dispute report success notification message@@transactions.notification.success.send.dispute.message\"\n  ></bb-alert-ui>\n\n  <bb-alert-ui\n    *ngIf=\"transaction?.disputeStatus === disputeStatus.Refunded\"\n    modifier=\"success\"\n    data-role=\"dispute-refunded-banner\"\n    title=\"Your dispute was approved\"\n    i18n-title=\"\n      Dispute report refunded notification|Message for a notification displayed when transaction dispute report request\n      has refunded@@transactions.notification.dispute.refunded.title\"\n    message=\"Please go to Messages to view the process of your refund.\"\n    i18n-message=\"Dispute report reunded notification message@@transactions.notification.dispute.refunded.message\"\n  ></bb-alert-ui>\n\n  <bb-alert-ui\n    *ngIf=\"transaction?.disputeStatus === disputeStatus.Rejected\"\n    modifier=\"error\"\n    data-role=\"dispute-rejected-banner\"\n    title=\"Your dispute was rejected\"\n    i18n-title=\"\n      Dispute report rejected notification|Message for a notification displayed when transaction dispute report request\n      has rejected@@transactions.notification.dispute.rejected.title\"\n    message=\"Please go to Messages to view the reason for this rejection.\"\n    i18n-message=\"Dispute report rejected notification message@@transactions.notification.dispute.rejected.message\"\n  ></bb-alert-ui>\n</ng-container>\n","import { HttpErrorResponse } from '@angular/common/http';\n\n/**\n * This interface is used by the template to display what is wrong to the user.\n */\nexport interface TransactionsBackendError {\n  message: string;\n  key?: string;\n  context?: { [key: string]: string };\n}\n\n/* eslint-disable no-redeclare*/\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsBackendError {\n  const getMessageFromResponse = (error: HttpErrorResponse): string[] | undefined => {\n    const responseBody = error.error;\n    if (Array.isArray(responseBody?.errors)) {\n      return responseBody.errors.map((data: TransactionsBackendError) => {\n        const { context = {} } = data;\n        const message = data.message.replace(/{[_a-zA-Z][_a-zA-Z0-9]*}/g, (match) => {\n          const result = context[match.replace(/[{}']+/g, '')];\n\n          return result !== undefined ? result : match;\n        });\n\n        return `Error ${error.status}: ${message}`;\n      });\n    } else {\n      return undefined;\n    }\n  };\n  /* eslint-enable no-redeclare*/\n  /**\n   * @name fromHttpErrorResponse\n   * @param errorResponse The error response\n   * @returns An object containing a user-friendly error message\n   *\n   * @description\n   * Parse an HttpErrorResponse and return a TransactionsError object that can be used to display a\n   * user-friendly error message.\n   */\n  export const fromHttpErrorResponse = (errorResponse: HttpErrorResponse): TransactionsBackendError => {\n    if (errorResponse.error instanceof ErrorEvent) {\n      // Client-side or network error.\n      return {\n        message: 'An unexpected error occurred',\n      };\n    } else {\n      const error = getMessageFromResponse(errorResponse) || [];\n\n      return {\n        message: error[0] || `Error ${errorResponse.status}`,\n      };\n    }\n  };\n\n  export const fromHttpErrorsResponse = (errorResponse: HttpErrorResponse): TransactionsBackendError[] => {\n    if (errorResponse.error instanceof ErrorEvent || !errorResponse.status) {\n      // Client-side or network error.\n      return [\n        {\n          message: 'An unexpected error occurred',\n        },\n      ];\n    } else {\n      const errors = getMessageFromResponse(errorResponse) || [`Error ${errorResponse.status}`];\n\n      return errors.map((message) => ({ message }));\n    }\n  };\n}\n","import { TransactionsAccountOptions } from './transactions-account-options.model';\nimport { TransactionsFilterOptions } from './transactions-filter-options.model';\nimport { TransactionsSearchOptions } from './transactions-search-options.model';\nimport { TransactionsSortOptions } from './transactions-sort-options.model';\n\nexport interface TransactionsExportOptions {\n  account: TransactionsAccountOptions;\n  search?: TransactionsSearchOptions;\n  filter?: TransactionsFilterOptions;\n  sort?: TransactionsSortOptions;\n  exportType: string;\n  locale: string;\n}\n\nexport interface TransactionsExportTypeElement {\n  name: string;\n  reason?: TransactionsExportErrorType;\n  isAvailable: boolean;\n}\n\nexport enum TransactionsExportErrorType {\n  MIXED_PRODUCT_KINDS = 'MIXED_PRODUCT_KINDS',\n  UNSUPPORTED_PRODUCT_KIND = 'UNSUPPORTED_PRODUCT_KIND',\n  TOO_MANY_ITEMS = 'TOO_MANY_ITEMS',\n  MULTIPLE_PRODUCTS = 'MULTIPLE_PRODUCTS',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n}\n\nexport interface UnavailableExportTypeReasons {\n  [reason: string]: TransactionsExportErrorType[];\n}\n\nexport interface TransactionsExportConfig {\n  availableExportTypesHeader?: string;\n  unavailableExportTypesReasonsHeader?: UnavailableExportTypeReasons;\n}\n\nexport function combineExportTypesConfig(exportConfig: TransactionsExportConfig): TransactionsExportTypeElement[] {\n  let exportTypesArr = [];\n  const { availableExportTypesHeader = '', unavailableExportTypesReasonsHeader } = exportConfig;\n  const availableExportTypesArray = availableExportTypesHeader.split(',');\n  const availableTypes = availableExportTypesArray\n    .filter((name) => name !== '')\n    .map((name: string) => ({\n      name,\n      reason: undefined,\n      isAvailable: true,\n    }));\n\n  if (unavailableExportTypesReasonsHeader) {\n    const unavailableTypes = Object.keys(unavailableExportTypesReasonsHeader).map((name) => {\n      if (unavailableExportTypesReasonsHeader && Array.isArray(unavailableExportTypesReasonsHeader[name])) {\n        return {\n          name,\n          reason: unavailableExportTypesReasonsHeader[name][0],\n          isAvailable: false,\n        };\n      }\n\n      return {\n        name,\n        reason: TransactionsExportErrorType.UNKNOWN_ERROR,\n        isAvailable: false,\n      };\n    });\n\n    exportTypesArr = [...availableTypes, ...unavailableTypes];\n  } else {\n    exportTypesArr = [...availableTypes];\n  }\n\n  return [...exportTypesArr].sort((left, right) => {\n    if (left.name === right.name) {\n      return 0;\n    }\n\n    return left.name > right.name ? 1 : -1;\n  });\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  TransactionClientHttpService,\n  GetTransactionsWithPostRequestParams,\n  TransactionItem,\n} from '@backbase/data-ang/transactions';\nimport { AccountsService } from './accounts.service';\nimport { ReplaySubject, BehaviorSubject, combineLatest, Observable, of, merge, Subject, iif } from 'rxjs';\nimport {\n  TransactionsListOptions,\n  defaultInitialListOptions,\n  defaultPaginationOptions,\n  defaultSearchOptions,\n  defaultFilterOptions,\n  OnLoadAction,\n  TransactionState,\n} from '../model/transactions-list-options.model';\nimport { map, scan, filter, distinctUntilChanged, tap, catchError } from 'rxjs/operators';\nimport { TransactionsList } from '../model/transactions-list.model';\nimport { TransactionsSearchOptions } from '../model/transactions-search-options.model';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\nimport { Account } from '../model/account.model';\nimport {\n  deepEqual,\n  cacheRequest,\n  multipleAccountsPredicate,\n  onLoadTransactions,\n} from '../model/transactions-list-utils.model';\nimport { LoadingState } from './transactions.service';\nimport { EndpointType } from './widget-properties.service';\nimport { HttpResponse } from '@angular/common/http';\nimport { DeprecationsService } from '@backbase/foundation-ang/core';\n\n@Injectable()\nexport class PendingTransactionsService implements OnDestroy {\n  private readonly initialListOptions = new ReplaySubject<Partial<TransactionsListOptions>>(1);\n  private readonly selectedAccount = new ReplaySubject<string[]>(1);\n  private readonly options = new BehaviorSubject<Partial<TransactionsListOptions>>({});\n  private readonly listOptions = new BehaviorSubject<TransactionsListOptions>(defaultInitialListOptions);\n  private readonly listRefresh = new Subject<TransactionsListOptions>();\n  private readonly getOrPostEndpoint = new BehaviorSubject<EndpointType>(EndpointType.GET_REQUEST);\n  private readonly transactionsList: Observable<TransactionsList> = merge(\n    this.listOptions.pipe(\n      filter((listOptions) => typeof listOptions.account.arrangementId !== 'undefined'),\n      distinctUntilChanged(deepEqual),\n    ),\n    this.listRefresh,\n  ).pipe(\n    cacheRequest((listOptions) => {\n      this.loadingState.next(\n        listOptions.onLoad === OnLoadAction.Append\n          ? LoadingState.LoadingMore\n          : listOptions.onLoad === OnLoadAction.ReplacePage\n          ? LoadingState.LoadingPage\n          : LoadingState.Loading,\n      );\n\n      return combineLatest([\n        this.loadTransactions(listOptions).pipe(\n          tap(() => {\n            this.loadingState.next(LoadingState.Loaded);\n          }),\n          map((transactionsList) => ({\n            transactionsList,\n            onLoad: OnLoadAction.ReplacePage,\n          })),\n        ),\n        iif(\n          multipleAccountsPredicate(listOptions),\n          this.accountService.getAllArrangements().pipe(\n            map((accounts) => {\n              const accountMap = new Map<string, Account>();\n              accounts.forEach((account) => {\n                accountMap.set(account.id, account);\n              });\n\n              return accountMap;\n            }),\n          ),\n          of(new Map()),\n        ),\n      ]).pipe(\n        map(([transactions, accountMap]) => {\n          transactions.transactionsList.items = transactions.transactionsList.items.map((transaction) => ({\n            ...transaction,\n            account: accountMap.get(transaction.arrangementId || ''),\n          }));\n\n          return transactions;\n        }),\n      );\n    }),\n    scan(onLoadTransactions, { items: [], totalCount: 0 }),\n  );\n\n  public readonly loadingState = new BehaviorSubject<LoadingState>(LoadingState.NotLoaded);\n\n  public readonly isFilterApplied = this.listOptions.pipe(\n    map((options) => !TransactionsFilterOptions.isEmpty(options.filter || {})),\n  );\n\n  public readonly isSearchApplied = this.listOptions.pipe(\n    map((options) => !TransactionsFilterOptions.isEmpty(options.search || {})),\n  );\n\n  private loadTransactions(listOptions: TransactionsListOptions): Observable<TransactionsList> {\n    const transactionPayload = TransactionsList.toHttpRequest(listOptions);\n    let transactionsResponse: Observable<HttpResponse<Array<TransactionItem>>> | undefined;\n\n    if (this.isUsingPostEndpoints) {\n      transactionsResponse = this.transactionsDataHttpService.getTransactionsWithPost(\n        {\n          transactionListRequest: transactionPayload,\n        } as GetTransactionsWithPostRequestParams,\n        'response',\n      );\n    } else {\n      this.deprecationsService.logDeprecatedFeature(\n        '[PendingTransactionsService: loadTransactions] GET endpoints are deprecated. Please use POST endpoints by changing CXP configuration',\n      );\n      transactionsResponse = this.transactionsDataHttpService.getTransactions(transactionPayload, 'response');\n    }\n\n    return transactionsResponse.pipe(\n      map(TransactionsList.fromHttpResponse),\n      catchError((err) =>\n        of({\n          items: [],\n          totalCount: 0,\n          httpResponseError: err,\n        }),\n      ),\n    );\n  }\n\n  getTransactionsFrom(\n    selectedAccount: Observable<string[]>,\n    initialListOptions: Observable<Partial<TransactionsListOptions>> = of({}),\n    getOrPostEndpoint: Observable<EndpointType> = of(EndpointType.GET_REQUEST),\n  ) {\n    selectedAccount.subscribe(this.selectedAccount);\n    initialListOptions.subscribe(this.initialListOptions);\n    getOrPostEndpoint.subscribe(this.getOrPostEndpoint);\n  }\n\n  getTransactionsList() {\n    return this.transactionsList;\n  }\n\n  search(query: string) {\n    const searchOptions: TransactionsSearchOptions = {\n      query,\n    };\n\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultSearchOptions,\n      pagination: paginationOptions,\n      search: searchOptions,\n    });\n  }\n\n  clearSearch() {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultSearchOptions,\n      pagination: paginationOptions,\n    });\n  }\n\n  filter(filterOptions: TransactionsFilterOptions) {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultFilterOptions,\n      pagination: paginationOptions,\n      filter: { ...filterOptions },\n    });\n  }\n\n  clearFilter() {\n    const paginationOptions = {\n      ...(this.options.getValue().pagination || defaultPaginationOptions.pagination),\n      from: 0, // reset to 0\n    };\n\n    this.options.next({\n      ...this.options.getValue(),\n      ...defaultFilterOptions,\n      pagination: paginationOptions,\n    });\n  }\n\n  sort(sortOptions: TransactionsSortOptions) {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    this.options.next({\n      sort: { ...sortOptions },\n      pagination: {\n        ...currentPaginationOptions,\n        from: 0,\n      },\n    });\n  }\n\n  retryFiltering() {\n    this.listRefresh.next(this.listOptions.getValue());\n  }\n\n  refreshTransactions() {\n    const currentPaginationOptions = this.options.getValue().pagination || defaultPaginationOptions.pagination;\n    const paginationOptions = {\n      ...currentPaginationOptions,\n      from: 0,\n    };\n\n    const newOptions = {\n      ...this.listOptions.getValue(),\n      pagination: paginationOptions,\n    };\n\n    if (deepEqual(newOptions, this.listOptions.getValue())) {\n      this.listRefresh.next(this.listOptions.getValue());\n    } else {\n      this.options.next({\n        pagination: paginationOptions,\n      });\n    }\n  }\n\n  private get isUsingPostEndpoints() {\n    return this.getOrPostEndpoint.getValue() === EndpointType.POST_REQUEST;\n  }\n\n  ngOnDestroy() {\n    this.listRefresh.complete();\n    this.selectedAccount.complete();\n    this.initialListOptions.complete();\n    this.options.complete();\n    this.listOptions.complete();\n    this.loadingState.complete();\n    this.getOrPostEndpoint.complete();\n  }\n\n  constructor(\n    private readonly transactionsDataHttpService: TransactionClientHttpService,\n    private readonly accountService: AccountsService,\n    private readonly deprecationsService: DeprecationsService,\n  ) {\n    combineLatest([this.selectedAccount, this.initialListOptions])\n      .pipe(\n        map(([selectedAccount, initialListOptions]) => ({\n          account: {\n            arrangementId: selectedAccount,\n          },\n          pagination: {\n            from: 0,\n            size: 250,\n          },\n          state: TransactionState.uncompleted,\n          ...initialListOptions,\n        })),\n      )\n      .subscribe(this.options);\n\n    // Base this.listOptions on this.options\n    this.options\n      .pipe(scan((acc: any, curr) => Object.assign({}, acc, curr), defaultInitialListOptions))\n      .subscribe(this.listOptions);\n  }\n}\n","export enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Configuration for the {@link MapAPILoaderService}.\n */\nexport interface MapsAPIConfig {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `<script>` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `<script>` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   */\n  libraries?: string[];\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\nexport interface MarkerOptions extends google.maps.MarkerOptions {\n  locationId: string;\n}\n\nexport interface Marker extends google.maps.Marker {\n  locationId: string;\n}\n","import { Injectable } from '@angular/core';\nimport { MapsAPIConfig, GoogleMapsScriptProtocol } from '../model/transactions-map.model';\n\n@Injectable()\nexport class MapAPILoaderService {\n  private readonly scriptID: string = 'bbGoogleMapsApiScript';\n  private readonly callbackName: string = 'bbMapsAPILoader';\n  private readonly apiLoadPromiseName: string = 'bbMapsAPILoaderPromise';\n  private readonly windowRef: Window = window;\n  private readonly documentRef: Document = document;\n  private configValue: MapsAPIConfig = {};\n\n  get config() {\n    return this.configValue;\n  }\n\n  set config(config: MapsAPIConfig) {\n    this.configValue = config;\n  }\n\n  get loadAPIPromise() {\n    return (this.windowRef as any)[this.apiLoadPromiseName];\n  }\n\n  private assignScriptLoadingPromise(scriptElem: HTMLElement) {\n    (this.windowRef as any)[this.apiLoadPromiseName] = new Promise<void>((resolve, reject) => {\n      (this.windowRef as any)[this.callbackName] = () => {\n        resolve();\n      };\n\n      scriptElem.onerror = (error: Event | string) => {\n        reject(error);\n      };\n    });\n  }\n\n  private getScriptSrc(callbackName: string): string {\n    const protocolType: GoogleMapsScriptProtocol =\n      (this.configValue && this.configValue.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol = '';\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string = this.configValue.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    // make sure we have places library for search component\n    const libraries: string[] = this.configValue.libraries || [];\n    if (libraries.indexOf('places') === -1) {\n      this.configValue.libraries = [...libraries, 'places'];\n    }\n\n    const queryParams: { [key: string]: string | string[] | undefined } = {\n      v: this.configValue.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this.configValue.apiKey,\n      client: this.configValue.clientId,\n      channel: this.configValue.channel,\n      libraries: this.configValue.libraries,\n      region: this.configValue.region,\n      language: this.configValue.language,\n    };\n    const params: string = Object.keys(queryParams)\n      .filter((key: string) => queryParams[key] !== undefined)\n      .filter(\n        (key: string) =>\n          // remove empty arrays\n          !Array.isArray(queryParams[key]) ||\n          (Array.isArray(queryParams[key]) && (queryParams[key] as string[]).length > 0),\n      )\n      .map((key: string) => {\n        let value = queryParams[key] as string | string[];\n        if (Array.isArray(value)) {\n          // join arrays as comma seperated strings\n          value = value.join(',');\n        }\n\n        return `${key}=${value}`;\n      })\n      .join('&');\n\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n\n  load(): Promise<void> {\n    const window = this.windowRef as any;\n    if (window.google && window.google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n\n    if (this.loadAPIPromise) {\n      return this.loadAPIPromise;\n    }\n\n    const script = this.documentRef.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this.scriptID;\n    script.src = this.getScriptSrc(this.callbackName);\n\n    this.assignScriptLoadingPromise(script);\n    this.documentRef.body.appendChild(script);\n\n    return this.loadAPIPromise;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BatchOrder } from '../model/batch-order.model';\nimport { BatchOrdersHttpService } from '@backbase/data-ang/payment-batch';\n\n@Injectable()\nexport class PaymentsBatchService {\n  getBatch(batchOrderId: string): Observable<BatchOrder> {\n    return this.batchOrdersHttpService.getBatchOrdersById({ batchOrderId });\n  }\n\n  constructor(private readonly batchOrdersHttpService: BatchOrdersHttpService) {}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { TransactionClientHttpService } from '@backbase/data-ang/transactions';\nimport { Subject, Observable, of, ReplaySubject, combineLatest, from } from 'rxjs';\nimport { TransactionCheckImageResponse, TransactionsCheckImages } from '../model/transactions-check-images.model';\nimport { switchMap, map, tap, scan, catchError, filter, mergeMap } from 'rxjs/operators';\nimport { TransactionsDetailsLoadingState, TransactionsDetailsLoading } from '../model/transactions-details.model';\nimport { HttpResponse } from '@angular/common/http';\nimport { Transaction } from '../model/transaction.model';\nimport { CheckImagesAvailability, daysDiff } from '../constants';\nimport { MapAPILoaderService } from './map-api-loader.service';\nimport { MessagesDisputeAndInquiryConfig } from '../model/messages.model';\nimport { PaymentsBatchService } from './payments-batch.service';\nimport { BatchOrder } from '../model/batch-order.model';\n\nclass ConfigManager {\n  constructor(private config: MessagesDisputeAndInquiryConfig) {}\n\n  isDisputable(transaction: Transaction) {\n    return (\n      this.isBillingStatusApproved(transaction) && !this.isOld(transaction) && this.isOfRestrictedType(transaction)\n    );\n  }\n\n  private isBillingStatusApproved(transaction: Transaction) {\n    if (!this.config?.byBillingStatus) {\n      return true;\n    }\n\n    return !transaction?.isPending;\n  }\n\n  private isOld(transaction: Transaction) {\n    if (!transaction?.bookingDate) {\n      return false;\n    }\n    const days = daysDiff(new Date(), transaction.bookingDate);\n    const byEligitibilityDays = this.config?.byEligitibilityDays || 0;\n\n    return days > byEligitibilityDays;\n  }\n\n  private isOfRestrictedType(transaction: Transaction) {\n    return transaction?.type ? (this.config?.byTransactionTypes || []).includes(transaction.type) : false;\n  }\n}\n\n@Injectable()\nexport class TransactionDetailsService implements OnDestroy {\n  /**\n   * watches the transaction that is shown in the details\n   */\n  private readonly transactionSelection = new Subject<Transaction>();\n  /**\n   * watches the configuration from CXP that can disable/enable check images\n   */\n  private readonly hasCheckImages = new ReplaySubject<boolean>();\n  /**\n   * general status of each feature that runs asynchronously\n   */\n  private readonly transactionsDetailsStatus = new ReplaySubject<TransactionsDetailsLoading>();\n\n  private readonly mapsApiKey = new ReplaySubject<string>();\n  batchOrder: Observable<BatchOrder | undefined> = this.transactionSelection.pipe(\n    tap(() => {\n      this.transactionsDetailsStatus.next({\n        batchOrder: TransactionsDetailsLoadingState.loading,\n      });\n    }),\n    mergeMap((transaction) => {\n      if (!transaction.batchOrderId) {\n        return of(undefined);\n      }\n\n      return this.paymentsBatchService.getBatch(transaction.batchOrderId).pipe(\n        catchError(() => {\n          this.transactionsDetailsStatus.next({\n            batchOrder: TransactionsDetailsLoadingState.error,\n          });\n\n          return of(undefined);\n        }),\n      );\n    }),\n    map((data) => {\n      this.transactionsDetailsStatus.next({\n        batchOrder: data ? TransactionsDetailsLoadingState.done : TransactionsDetailsLoadingState.notStarted,\n      });\n\n      return data;\n    }),\n  );\n\n  set enableDisputeAndInquiry(value: boolean) {\n    this.transactionsDetailsStatus.next({\n      enableDisputeAndInquiry: value ? TransactionsDetailsLoadingState.done : TransactionsDetailsLoadingState.notLoaded,\n    });\n  }\n\n  fromInquiryAndDispute(\n    enableDisputeAndInquiry: Observable<boolean>,\n    disputeByBillingStatus: Observable<boolean>,\n    disputeEligibilityDays: Observable<number>,\n    disputeTransactionTypes: Observable<Array<string>>,\n  ) {\n    const config = combineLatest([\n      enableDisputeAndInquiry,\n      disputeByBillingStatus,\n      disputeEligibilityDays,\n      disputeTransactionTypes,\n    ]).pipe(\n      map(([enabled, byBillingStatus, byEligitibilityDays, byTransactionTypes]) =>\n        enabled ? { byBillingStatus, byEligitibilityDays, byTransactionTypes } : undefined,\n      ),\n    );\n\n    combineLatest([this.transactionSelection, config]).subscribe({\n      next: ([transactionSelection, inquiryAndDispute]) => {\n        if (!inquiryAndDispute) {\n          this.transactionsDetailsStatus.next({\n            enableDisputeAndInquiry: TransactionsDetailsLoadingState.notLoaded,\n            disputeOption: TransactionsDetailsLoadingState.notLoaded,\n          });\n        } else {\n          const configuration = new ConfigManager(inquiryAndDispute);\n\n          this.transactionsDetailsStatus.next({\n            enableDisputeAndInquiry: TransactionsDetailsLoadingState.done,\n            disputeOption: configuration.isDisputable(transactionSelection)\n              ? TransactionsDetailsLoadingState.done\n              : TransactionsDetailsLoadingState.notLoaded,\n          });\n        }\n      },\n    });\n  }\n  /**\n   *\n   * @param transactionId\n   * triggers a new action that will cause transcations details reload and change an image\n   */\n  selectTransaction(transaction: Transaction) {\n    this.transactionSelection.next(transaction);\n  }\n\n  /**\n   * Key-value pair that controls the loading status in transactions details\n   */\n  get loadingState(): Observable<TransactionsDetailsLoading> {\n    return this.transactionsDetailsStatus.pipe(scan((acc, curr) => ({ ...acc, ...curr }), {}));\n  }\n\n  /**\n   *\n   * @param hasCheckImages\n   * Configuration for check images reactive functionality\n   */\n  fromCheckImages(hasCheckImages: Observable<boolean>): Observable<TransactionCheckImageResponse> {\n    hasCheckImages.subscribe(this.hasCheckImages);\n\n    hasCheckImages\n      .pipe(\n        map((value) => ({\n          checkImages: value ? TransactionsDetailsLoadingState.loading : TransactionsDetailsLoadingState.notLoaded,\n        })),\n      )\n      .subscribe({\n        next: (value) => {\n          this.transactionsDetailsStatus.next(value);\n        },\n      });\n\n    return this.setCondition(this.transactionSelection, this.hasCheckImages).pipe(\n      tap(() => {\n        this.transactionsDetailsStatus.next({\n          checkImages: TransactionsDetailsLoadingState.loading,\n        });\n      }),\n      filter((transaction) => transaction.checkImageAvailability === CheckImagesAvailability.available),\n      switchMap(({ id: transactionId = '' }) =>\n        this.transactionsDataHttpService.getTransactionCheckImages({ transactionId }, 'response').pipe(\n          tap(() => {\n            this.transactionsDetailsStatus.next({\n              checkImages: TransactionsDetailsLoadingState.done,\n            });\n          }),\n          catchError((error) => {\n            switch (error.status) {\n              case 500: {\n                this.transactionsDetailsStatus.next({\n                  checkImages: TransactionsDetailsLoadingState.serverError,\n                });\n                break;\n              }\n              case 400: {\n                this.transactionsDetailsStatus.next({\n                  checkImages: TransactionsDetailsLoadingState.badRequestError,\n                });\n                break;\n              }\n              case 404: {\n                this.transactionsDetailsStatus.next({\n                  checkImages: TransactionsDetailsLoadingState.notFoundError,\n                });\n                break;\n              }\n              default: {\n                this.transactionsDetailsStatus.next({\n                  checkImages: TransactionsDetailsLoadingState.error,\n                });\n              }\n            }\n\n            return of(\n              new HttpResponse({\n                body: {\n                  images: [],\n                },\n              }),\n            );\n          }),\n          map(TransactionsCheckImages.fromHttpResponse),\n        ),\n      ),\n    );\n  }\n\n  fromGeolocation(mapsApiKey: Observable<string>): Observable<boolean> {\n    mapsApiKey.subscribe(this.mapsApiKey);\n\n    return combineLatest([this.transactionSelection, this.mapsApiKey]).pipe(\n      map(([transaction, apiKey]) => {\n        this.mapApiLoader.config = {\n          apiKey,\n          libraries: ['geometry'],\n        };\n\n        this.transactionsDetailsStatus.next({\n          geolocation: TransactionsDetailsLoadingState.loading,\n        });\n\n        if (!apiKey || !transaction.location || !transaction.location.latitude || !transaction.location.longitude) {\n          this.transactionsDetailsStatus.next({\n            geolocation: TransactionsDetailsLoadingState.notLoaded,\n          });\n\n          return Promise.resolve(false);\n        }\n\n        return this.mapApiLoader.load().then(\n          () => {\n            this.transactionsDetailsStatus.next({\n              geolocation: TransactionsDetailsLoadingState.done,\n            });\n\n            return true;\n          },\n          () => {\n            this.transactionsDetailsStatus.next({\n              geolocation: TransactionsDetailsLoadingState.error,\n            });\n\n            return false;\n          },\n        );\n      }),\n      mergeMap((promise) => from(promise)),\n    );\n  }\n\n  /**\n   * destroy lifecycle hook that will release resources\n   */\n  ngOnDestroy() {\n    this.transactionSelection.complete();\n    this.transactionsDetailsStatus.complete();\n    this.mapsApiKey.complete();\n  }\n\n  /**\n   *\n   * @param feature\n   * @param toggle\n   *\n   * Prevents from emiting values if the cxp configuration is set as disabled\n   */\n  private setCondition<T>(feature: Observable<T>, toggle: ReplaySubject<boolean>): Observable<T> {\n    return combineLatest([feature, toggle]).pipe(\n      filter(([, condition]) => condition),\n      map(([value]) => value),\n    );\n  }\n\n  constructor(\n    private readonly transactionsDataHttpService: TransactionClientHttpService,\n    private readonly mapApiLoader: MapAPILoaderService,\n    private readonly paymentsBatchService: PaymentsBatchService,\n  ) {\n    this.transactionsDetailsStatus.next({\n      checkImages: TransactionsDetailsLoadingState.notStarted,\n      geolocation: TransactionsDetailsLoadingState.notStarted,\n      enableDisputeAndInquiry: TransactionsDetailsLoadingState.notStarted,\n      disputeOption: TransactionsDetailsLoadingState.notStarted,\n      batchOrder: TransactionsDetailsLoadingState.notStarted,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AvailableFilters, AvailableFiltersConfig, ProductKind } from '../model/available-filters.model';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { defaultAvailableFiltersConfig } from '../constants';\nimport { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { AccountsService } from './accounts.service';\n\n@Injectable()\nexport class AvailableFiltersConfigService {\n  availableFilters$: Observable<AvailableFilters>;\n\n  private productSummary$: Observable<ProductSummaryItem[]>;\n  private readonly availableFiltersConfig$: ReplaySubject<AvailableFiltersConfig> =\n    new ReplaySubject<AvailableFiltersConfig>(1);\n  private readonly selectedAccounts$: ReplaySubject<string[]> = new ReplaySubject<string[]>(1);\n\n  constructor(private readonly accountsService: AccountsService) {\n    this.productSummary$ = this.getProductSummaryForSelectedAccounts();\n    this.availableFilters$ = this.getAvailableFilters();\n  }\n\n  setFilterConfigurationAndAccount(\n    availableFiltersConfig: Observable<AvailableFiltersConfig>,\n    selectedAccounts: Observable<string[]>,\n  ): void {\n    availableFiltersConfig.subscribe(this.availableFiltersConfig$);\n    selectedAccounts.subscribe(this.selectedAccounts$);\n  }\n\n  private getProductSummaryForSelectedAccounts(): Observable<ProductSummaryItem[]> {\n    return combineLatest([this.accountsService.getProductSummary(), this.selectedAccounts$]).pipe(\n      map(([productSummaryItems, selectedAccounts]) =>\n        productSummaryItems.filter((productSummaryItem: ProductSummaryItem) =>\n          selectedAccounts?.includes(productSummaryItem.id),\n        ),\n      ),\n    );\n  }\n\n  private getAvailableFilters(): Observable<AvailableFilters> {\n    return combineLatest([this.availableFiltersConfig$, this.productSummary$]).pipe(\n      map(([availableFiltersConfig, productSummaryItems]) => {\n        const availableFilters: AvailableFilters = productSummaryItems.reduce(\n          (filters: AvailableFilters, productSummaryItem: ProductSummaryItem): AvailableFilters =>\n            filters.concat(this.getFiltersFromConfigs(productSummaryItem, availableFiltersConfig)),\n          [],\n        );\n\n        return Array.from(new Set(availableFilters));\n      }),\n    );\n  }\n\n  private getFiltersFromConfigs(\n    productSummaryItem: ProductSummaryItem,\n    availableFiltersConfig: AvailableFiltersConfig,\n  ): AvailableFilters {\n    const availableFilters: AvailableFilters | undefined =\n      this.getFiltersFromConfigObject(availableFiltersConfig, productSummaryItem) ??\n      this.getFiltersFromConfigObject(defaultAvailableFiltersConfig, productSummaryItem);\n\n    return availableFilters ?? (defaultAvailableFiltersConfig.defaultFilters as AvailableFilters);\n  }\n\n  private getFiltersFromConfigObject(\n    config: AvailableFiltersConfig,\n    productSummaryItem: ProductSummaryItem,\n  ): AvailableFilters | undefined {\n    if (productSummaryItem.productKindName !== undefined) {\n      const productKind: ProductKind | undefined = config[productSummaryItem.productKindName];\n\n      if (productKind === undefined) return undefined;\n\n      if (Array.isArray(productKind)) return productKind;\n\n      if (productSummaryItem.productTypeName === undefined) return undefined;\n\n      return productKind[productSummaryItem.productTypeName];\n    }\n\n    return undefined;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, combineLatest, iif, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { TransactionsBackendError } from '../model/transactions-backend-error.model';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsList } from '../model/transactions-list.model';\nimport { LoadingState, TransactionsService } from '../services/transactions.service';\nimport { EndpointType, PaginationType, WidgetPropertiesService } from '../services/widget-properties.service';\nimport { TransactionsListOptions } from '../model/transactions-list-options.model';\nimport { map, mergeMap, publishReplay, refCount, scan, takeUntil, tap } from 'rxjs/operators';\nimport { Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\n\nimport { filterInputParameters, notificationTtl } from '../constants';\nimport {\n  combineExportTypesConfig,\n  TransactionsExportConfig,\n  TransactionsExportTypeElement,\n} from '../model/transactions-export-options.model';\nimport { PendingTransactionsService } from '../services/pending-transactions.service';\nimport { TransactionCheckImageResponse } from '../model/transactions-check-images.model';\nimport { Transaction } from '../model/transaction.model';\nimport { TransactionDetailsService } from '../services/transaction-details.service';\nimport { TransactionsDetailsLoading } from '../model/transactions-details.model';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { getNameFromContentDispositionHeader } from '../model/transactions-list-utils.model';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { InquireAndDisputeTopics } from '../model/messages.model';\nimport { AvailableFilters, AvailableFiltersConfig } from '../model/available-filters.model';\nimport { AvailableFiltersConfigService } from '../services/available-filters-config.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Directive()\n// eslint-disable-next-line\nexport class BaseTransactionsContainer implements OnInit, OnDestroy {\n  // eslint-disable-next-line\n  @ViewChild('notificationErrorUpdateHeader')\n  notificationErrorUpdateHeaderTemplate: TemplateRef<string> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationErrorUpdateMessage')\n  notificationErrorUpdateMessageTemplate: TemplateRef<string> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationServerErrorHeader', { static: false })\n  notificationServerErrorHeader: TemplateRef<string> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationServerErrorMessage', { static: false })\n  notificationServerErrorMessage: TemplateRef<string> | undefined;\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  private readonly apiKeySubject = new BehaviorSubject<string | undefined>(undefined);\n  /**\n   * API key needed for the google maps to work.\n   */\n  // eslint-disable-next-line\n  @Input()\n  set googleAPIKey(key: string | undefined) {\n    this.apiKeySubject.next(key);\n  }\n  /**\n   * Observable of the arrangement ID this component should retrieve the transactions for.\n   */\n  @Input() selectedAccount: Observable<Array<string> | undefined> | undefined;\n  /**\n   * Observable of options to initialize the filter with.  By default, it is empty.\n   */\n  @Input() initialFilterOptions: Observable<TransactionsFilterOptions> = of({});\n  /**\n   * Observable of options to initialize the sort options with.  By default, it is empty.\n   */\n  @Input() initialSortOptions: Observable<TransactionsSortOptions | undefined> = of(undefined);\n\n  /**\n   * input parameters that will take the place of model properties--\n   */\n\n  @Input('pageSize') set pageSizeValue(value: number | undefined) {\n    this.pageSizeSubject.next(value);\n  }\n  @Input('maxNavPages') set maxNavPagesValue(value: number | undefined) {\n    this.maxNavPagesSubject.next(value);\n  }\n  @Input('paginationType') set paginationTypeValue(value: string | undefined) {\n    this.paginationTypeSubject.next(value as PaginationType);\n  }\n  @Input('showControls') set showControlsValue(value: boolean | undefined) {\n    this.showControlsSubject.next(value);\n  }\n  @Input('showChangeCategory') set showChangeCategoryValue(value: boolean | undefined) {\n    this.showChangeCategorySubject.next(value);\n  }\n  @Input('showPendingTransactionsOnTop') set showPendingTransactionsOnTopValue(value: boolean | undefined) {\n    this.showPendingTransactionsOnTopSubject.next(value);\n  }\n  @Input('showCheckImage') set showCheckImageValue(value: boolean | undefined) {\n    this.showCheckImageSubject.next(value);\n  }\n  @Input('showManageNotes') set showManageNotesValue(value: boolean | undefined) {\n    this.showManageNotesSubject.next(value);\n  }\n  @Input('getOrPostEndpoints') set getOrPostEndpointsValue(value: EndpointType | undefined) {\n    this.getOrPostEndpointsSubject.next(value);\n  }\n  @Input('disputeByBillingStatus') set disputeByBillingStatusValue(value: string | boolean | undefined) {\n    this.disputeByBillingStatusSubject.next(typeof value === 'boolean' ? value : value === 'true');\n  }\n  @Input('disputeEligibilityDays') set disputeEligibilityDaysValue(value: number | undefined) {\n    this.disputeEligibilityDaysSubject.next(value);\n  }\n  @Input('disputeTransactionTypes') set disputeTransactionTypesValue(value: string | undefined) {\n    this.disputeTransactionTypesSubject.next((value || '').split(','));\n  }\n\n  @Input('enableDisputeAndInquiry') set enableDisputeAndInquiryValue(value: string | boolean | undefined) {\n    this.enableDisputeAndInquirySubject.next(typeof value === 'boolean' ? value : value === 'true');\n  }\n  @Input('availableFiltersConfig') set availableFiltersValue(availableFiltersConfig: AvailableFiltersConfig) {\n    this.availableFiltersConfig.next(availableFiltersConfig);\n  }\n\n  @Input('inquireTopicId') inquireTopicIdValue: string | undefined;\n  @Input('disputeTopicId') disputeTopicIdValue: string | undefined;\n\n  @Output() transactionSelected = new EventEmitter<any>();\n  @Output() transactionsLoaded = new EventEmitter<TransactionsList | null>();\n\n  private pageSizeSubject = new BehaviorSubject<number | undefined>(undefined);\n  private maxNavPagesSubject = new BehaviorSubject<number | undefined>(undefined);\n  private paginationTypeSubject = new BehaviorSubject<PaginationType | undefined>(undefined);\n  private showControlsSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showChangeCategorySubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showPendingTransactionsOnTopSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showCheckImageSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showManageNotesSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private getOrPostEndpointsSubject = new BehaviorSubject<EndpointType | undefined>(undefined);\n  private disputeByBillingStatusSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private disputeEligibilityDaysSubject = new BehaviorSubject<number | undefined>(undefined);\n  private disputeTransactionTypesSubject = new BehaviorSubject<Array<string> | undefined>(undefined);\n  private enableDisputeAndInquirySubject = new BehaviorSubject<boolean>(false);\n  private inquireTopicIdSubject = new BehaviorSubject<string>('');\n  private disputeTopicIdSubject = new BehaviorSubject<string>('');\n  /** end input parameters--- */\n\n  /**\n   * Information about the backend error, if it occurs.\n   */\n  /**\n   * @deprecated will be removed in 11.0.0\n   */\n  get error(): TransactionsBackendError | undefined {\n    return this.errors && this.errors[0];\n  }\n\n  errors: TransactionsBackendError[] | undefined;\n  /**\n   * Observable of the transactions list.\n   */\n  transactionsList: Observable<TransactionsList | null> | undefined;\n  /**\n   * Observable of the transactions list.\n   */\n  pendingTransactionsList: Observable<TransactionsList | null> | undefined;\n  /**\n   * Observable of the current page.\n   */\n  currentPage: Observable<number> | undefined;\n  /**\n   * Observable of the loading state of the service.\n   */\n  loadingState: Observable<LoadingState> | undefined;\n  /**\n   * Observable of the loading state of the pending transactions service.\n   */\n  loadingPendingState: Observable<LoadingState> | undefined;\n  loadingDetails: Observable<TransactionsDetailsLoading> | undefined;\n  /**\n   * Events registered to transactions widgets\n   */\n  private registeredRefreshTransactionsListEvents: string[] = [];\n  private unsubscribeSubject = new Subject<void>();\n  /**\n   * Subject that listens the transactionsList observable and provides the export types\n   */\n  exportConfig = new BehaviorSubject<TransactionsExportConfig>({});\n  exportErrorMessagesRef: { [key: string]: TemplateRef<string> | undefined } = {};\n  storedExportType: TransactionsExportTypeElement | undefined;\n  numberOfResultsFound = new ReplaySubject<number>();\n  numberOfResultsDisplayed = new ReplaySubject<number>();\n  checkImagesList: Observable<TransactionCheckImageResponse> | undefined;\n  transactionDetailsLoadingStatus: Observable<TransactionsDetailsLoading> | undefined;\n  availableFiltersConfig: ReplaySubject<AvailableFiltersConfig> = new ReplaySubject<AvailableFiltersConfig>(1);\n  availableFilters: Observable<AvailableFilters> = this.availableFiltersConfigService.availableFilters$;\n\n  private inquireTopicId = filterInputParameters(\n    this.inquireTopicIdSubject.asObservable(),\n    this.widgetProperties.inquireTopicId,\n  );\n\n  private disputeTopicId = filterInputParameters(\n    this.disputeTopicIdSubject.asObservable(),\n    this.widgetProperties.disputeTopicId,\n  );\n\n  inquireAndDisputeTopics: Observable<InquireAndDisputeTopics> = combineLatest([\n    this.inquireTopicId,\n    this.disputeTopicId,\n  ]).pipe(map(([inquire, dispute]) => ({ inquire, dispute })));\n\n  private readonly refreshTransactionsListHandler = () => {\n    this.model.refreshTransactions();\n  };\n\n  /**\n   * @deprecated will be removed in 11.0.0\n   */\n  handleError = (errorResponse: HttpErrorResponse) => {\n    this.errors = TransactionsBackendError.fromHttpErrorsResponse(errorResponse);\n\n    return of({\n      items: [],\n      totalCount: 0,\n    });\n  };\n\n  private clearRefreshTransactionsListEvents() {\n    this.registeredRefreshTransactionsListEvents.forEach((eventName) => {\n      this.eventBusService.unsubscribe(eventName, this.refreshTransactionsListHandler);\n    });\n\n    this.registeredRefreshTransactionsListEvents = [];\n  }\n\n  retry() {\n    this.model.retryFiltering();\n    this.pendingTransactionsService.retryFiltering();\n  }\n\n  ngOnDestroy() {\n    this.clearRefreshTransactionsListEvents();\n    this.unsubscribeSubject.next();\n    this.unsubscribeSubject.complete();\n  }\n\n  get pageSize(): Observable<number> {\n    return filterInputParameters(this.pageSizeSubject.asObservable(), this.widgetProperties.pageSize);\n  }\n\n  get maxNavPages(): Observable<number> {\n    return filterInputParameters(this.maxNavPagesSubject.asObservable(), this.widgetProperties.maxNavPages);\n  }\n\n  get showControls(): Observable<boolean> {\n    return filterInputParameters(this.showControlsSubject.asObservable(), this.widgetProperties.showControls);\n  }\n\n  get isFilterApplied() {\n    return this.model.isFilterApplied;\n  }\n\n  get isSearchApplied() {\n    return this.model.isSearchApplied;\n  }\n\n  get paginationType(): Observable<PaginationType> {\n    return filterInputParameters(this.paginationTypeSubject.asObservable(), this.widgetProperties.paginationType);\n  }\n\n  get showPendingTransactionsOnTop(): Observable<boolean> {\n    return filterInputParameters(\n      this.showPendingTransactionsOnTopSubject.asObservable(),\n      this.widgetProperties.showPendingTransactionsOnTop,\n    );\n  }\n\n  get showChangeCategory(): Observable<boolean> {\n    return filterInputParameters(\n      this.showChangeCategorySubject.asObservable(),\n      this.widgetProperties.showChangeCategory,\n    );\n  }\n\n  get showCheckImage(): Observable<boolean> {\n    return filterInputParameters(this.showCheckImageSubject.asObservable(), this.widgetProperties.showCheckImage);\n  }\n\n  get showManageNotes(): Observable<boolean> {\n    return filterInputParameters(this.showManageNotesSubject, this.widgetProperties.showManageNotes);\n  }\n\n  get getOrPostEndpoint(): Observable<EndpointType> {\n    return filterInputParameters(\n      this.getOrPostEndpointsSubject.asObservable(),\n      this.widgetProperties.getOrPostEndpoints,\n    );\n  }\n\n  get gmapsAPIKey(): Observable<string> {\n    return combineLatest([this.apiKeySubject.asObservable(), this.widgetProperties.gmapsAPIKey]).pipe(\n      map(([inputVal, propVal]) => inputVal || propVal),\n    );\n  }\n\n  get enableDisputeAndInquiry() {\n    return filterInputParameters(\n      this.enableDisputeAndInquirySubject.asObservable(),\n      this.widgetProperties.enableDisputeAndInquiry,\n    );\n  }\n\n  get disputeByBillingStatus(): Observable<boolean> {\n    return filterInputParameters(\n      this.disputeByBillingStatusSubject.asObservable(),\n      this.widgetProperties.disputeByBillingStatus,\n    );\n  }\n\n  get disputeEligibilityDays(): Observable<number> {\n    return filterInputParameters(\n      this.disputeEligibilityDaysSubject.asObservable(),\n      this.widgetProperties.disputeEligibilityDays,\n    );\n  }\n\n  get disputeTransactionTypes(): Observable<Array<string>> {\n    return filterInputParameters(\n      this.disputeTransactionTypesSubject.asObservable(),\n      this.widgetProperties.disputeTransactionTypes,\n    );\n  }\n\n  onLoadMore() {\n    this.model.loadMore();\n  }\n\n  ngOnInit() {\n    if (typeof this.selectedAccount === 'undefined') {\n      throw new Error(`\"selectedAccount\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    const initialListOptions: Observable<Partial<TransactionsListOptions>> = combineLatest([\n      this.initialFilterOptions,\n      this.initialSortOptions,\n    ]).pipe(\n      map(([initialFilterOptions, initialSortOptions]) => ({\n        filter: initialFilterOptions,\n        sort: initialSortOptions,\n      })),\n    );\n\n    this.model.getTransactionsFrom(\n      this.selectedAccount.pipe(map((value) => value ?? [])),\n      this.pageSize,\n      initialListOptions,\n      this.showPendingTransactionsOnTop,\n      this.getOrPostEndpoint,\n    );\n    if (this.showDetailsConfig) {\n      this.checkImagesList = this.transactionDetailsService.fromCheckImages(this.showCheckImage);\n\n      this.transactionDetailsLoadingStatus = this.transactionDetailsService.loadingState;\n\n      this.transactionDetailsService\n        .fromGeolocation(this.gmapsAPIKey)\n        .pipe(takeUntil(this.unsubscribeSubject))\n        .subscribe();\n    }\n\n    this.transactionsList = this.model.getTransactionsList().pipe(\n      publishReplay(1),\n      refCount(),\n      tap((data) => {\n        this.errors = data.httpResponseError\n          ? TransactionsBackendError.fromHttpErrorsResponse(data.httpResponseError)\n          : undefined;\n        this.cd.markForCheck();\n      }),\n    );\n\n    this.pendingTransactionsService.getTransactionsFrom(\n      this.selectedAccount.pipe(map((value) => value ?? [])),\n      initialListOptions,\n      this.getOrPostEndpoint,\n    );\n    this.pendingTransactionsList = this.pendingTransactionsService.getTransactionsList().pipe(\n      publishReplay(1),\n      refCount(),\n      tap((data) => {\n        this.errors = data.httpResponseError\n          ? TransactionsBackendError.fromHttpErrorsResponse(data.httpResponseError)\n          : undefined;\n        this.cd.markForCheck();\n      }),\n    );\n\n    this.transactionsList\n      .pipe(\n        takeUntil(this.unsubscribeSubject),\n        map((transactionsList) => {\n          if (!transactionsList) {\n            return {};\n          }\n\n          const { availableExportTypesHeader, unavailableExportTypesReasonsHeader } = transactionsList;\n\n          return combineExportTypesConfig({\n            availableExportTypesHeader,\n            unavailableExportTypesReasonsHeader,\n          });\n        }),\n      )\n      .subscribe(this.exportConfig);\n\n    const transactionsListCount = this.transactionsList.pipe(\n      map((trans) => ({ history: trans ? trans.totalCount : 0 })),\n    );\n\n    const pendingTransactionsListCount = this.pendingTransactionsList.pipe(\n      map((trans) => ({ pending: trans ? trans.totalCount : 0 })),\n    );\n\n    const transactionsListItemsToDisplay = this.transactionsList.pipe(\n      map((trans) => ({ history: trans ? trans.items.length : 0 })),\n    );\n\n    const pendingTransactionsListItemsToDisplay = this.pendingTransactionsList.pipe(\n      map((trans) => ({ pending: trans ? trans.items.length : 0 })),\n    );\n\n    this.sumTransactionsResults(transactionsListCount, pendingTransactionsListCount)\n      .pipe(takeUntil(this.unsubscribeSubject))\n      .subscribe(this.numberOfResultsFound);\n\n    this.sumTransactionsResults(transactionsListItemsToDisplay, pendingTransactionsListItemsToDisplay)\n      .pipe(takeUntil(this.unsubscribeSubject))\n      .subscribe(this.numberOfResultsDisplayed);\n\n    this.currentPage = this.model.getCurrentPage();\n    this.loadingState = this.model.loadingState;\n    this.loadingPendingState = this.pendingTransactionsService.loadingState;\n\n    this.widgetProperties.refreshTransactionsListEvents.pipe(takeUntil(this.unsubscribeSubject)).subscribe((events) => {\n      this.clearRefreshTransactionsListEvents();\n      if (events) {\n        this.registeredRefreshTransactionsListEvents = events.split(',');\n        this.registeredRefreshTransactionsListEvents.forEach((eventName) => {\n          this.eventBusService.subscribe(eventName, this.refreshTransactionsListHandler);\n        });\n      }\n    });\n\n    this.configureTransctionsDetailsOutputBehaviour();\n\n    this.transactionDetailsService.fromInquiryAndDispute(\n      this.enableDisputeAndInquiry,\n      this.disputeByBillingStatus,\n      this.disputeEligibilityDays,\n      this.disputeTransactionTypes,\n    );\n\n    this.availableFiltersConfigService.setFilterConfigurationAndAccount(\n      this.availableFiltersConfig.asObservable(),\n      this.selectedAccount.pipe(map((value) => value ?? [])),\n    );\n  }\n\n  private configureTransctionsDetailsOutputBehaviour() {\n    if (this.transactionsList && this.pendingTransactionsList && !this.showDetailsConfig) {\n      const pending = this.showPendingTransactionsOnTop.pipe(\n        mergeMap((cond) =>\n          iif(() => cond, this.pendingTransactionsList, of({ items: [], totalCount: 0 } as TransactionsList)),\n        ),\n      );\n\n      combineLatest([pending, this.transactionsList])\n        .pipe(\n          takeUntil(this.unsubscribeSubject),\n          map(([pendingTransactionsList, transactionsList]) => {\n            const pendingTransactions = pendingTransactionsList ? pendingTransactionsList.items : [];\n            const transactions = transactionsList ? transactionsList.items : [];\n\n            const mixed: TransactionsList = {\n              items: [...pendingTransactions, ...transactions],\n              totalCount: (pendingTransactionsList?.totalCount || 0) + (transactionsList?.totalCount || 0),\n            };\n\n            return mixed;\n          }),\n        )\n        .subscribe((data) => {\n          this.transactionsLoaded.emit(data);\n        });\n    }\n  }\n\n  private sumTransactionsResults(historyCount: Observable<any>, pendingCount: Observable<any>) {\n    return this.showPendingTransactionsOnTop.pipe(\n      mergeMap((showPendingTransactionsOnTop) =>\n        iif(() => showPendingTransactionsOnTop, merge(historyCount, pendingCount), historyCount),\n      ),\n      scan((acc, curr) => ({ ...acc, ...curr }), { history: 0, pending: 0 }),\n      map(({ history = 0, pending = 0 }) => history + pending),\n    );\n  }\n\n  onPageChange(page: number) {\n    this.model.pageChange(page);\n  }\n\n  onSearch(query: string) {\n    // search ui component sends an unexpected event\n    // that is type Event. To avoid calling backend with that event\n    // it has to be string\n    if (typeof query === 'string') {\n      this.model.search(query);\n      this.pendingTransactionsService.search(query);\n    }\n  }\n\n  onFilter(filterOptions: TransactionsFilterOptions) {\n    this.model.filter(filterOptions);\n    this.pendingTransactionsService.filter(filterOptions);\n  }\n\n  onSort(sortOptions: TransactionsSortOptions) {\n    this.model.sort(sortOptions);\n  }\n\n  onPrint() {\n    window.print();\n  }\n\n  onExport(exportType: TransactionsExportTypeElement) {\n    this.storedExportType = { ...exportType };\n    if (exportType.isAvailable) {\n      this.model\n        .exportToType(exportType.name)\n        .pipe(takeUntil(this.unsubscribeSubject))\n        .subscribe(\n          (response) => {\n            const anchorTag = document.createElement('a');\n            anchorTag.href = URL.createObjectURL(response.body as Blob);\n\n            const fileName = getNameFromContentDispositionHeader(response);\n            const defaultName = exportType.name.toLowerCase() === 'pdf' ? 'Account Activities' : 'transactions';\n\n            anchorTag.download = fileName !== '' ? fileName : defaultName;\n            anchorTag.click();\n          },\n          () => {\n            this.notificationService.showNotification({\n              header: this.notificationServerErrorHeader,\n              message: this.notificationServerErrorMessage || '',\n              modifier: 'error',\n            });\n          },\n        );\n    } else {\n      this.pushNotification({\n        header: this.notificationErrorUpdateHeaderTemplate,\n        message: this.notificationErrorUpdateMessageTemplate,\n        modifier: 'error',\n      });\n    }\n  }\n\n  onDetailOpen(transaction: Transaction) {\n    if (!this.showDetailsConfig) {\n      this.transactionSelected.emit(transaction);\n    } else {\n      this.transactionDetailsService.selectTransaction(transaction);\n    }\n  }\n\n  private pushNotification(notificationMessage: {\n    header: TemplateRef<any> | string | undefined;\n    message: any;\n    modifier: 'error' | 'success' | 'info' | 'warning' | 'alert' | undefined;\n  }) {\n    this.notificationService.showNotification({\n      dismissible: true,\n      ttl: notificationTtl,\n      ...notificationMessage,\n    });\n  }\n\n  constructor(\n    protected readonly model: TransactionsService,\n    protected readonly widgetProperties: WidgetPropertiesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly eventBusService: Pubsub,\n    protected readonly notificationService: NotificationService,\n    protected readonly pendingTransactionsService: PendingTransactionsService,\n    protected readonly transactionDetailsService: TransactionDetailsService,\n    protected readonly availableFiltersConfigService: AvailableFiltersConfigService,\n    protected readonly showDetailsConfig?: boolean,\n  ) {}\n}\n\n@Directive({\n  selector: '[bbTransactionsNoAccountSelectedStateCustomizable]',\n})\nexport class TransactionsNoAccountSelectedStateCustomizableDirective extends BbTemplate<\n  BaseTransactionsContainer,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTransactionsErrorStateCustomizable]',\n})\nexport class TransactionsErrorStateCustomizableDirective extends BbTemplate<BaseTransactionsContainer, undefined> {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'bbCapitalizePipe' })\nexport class CapitalizePipe implements PipeTransform {\n  transform(value: string): string {\n    return value[0].toUpperCase() + value.substr(1).toLowerCase();\n  }\n}\n","import { Transaction } from './transaction.model';\n\nexport enum TransactionIconType {\n  category = 1,\n  type = 2,\n  creditDebit = 3,\n}\nexport abstract class BaseTransactionIcon {\n  public abstract get title(): string;\n  public abstract formatClassName(): string;\n  public abstract isValid(): boolean;\n  public abstract get type(): TransactionIconType;\n\n  protected cleanClassName(text: string): string {\n    const result = text.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-');\n\n    if (result.endsWith('-')) {\n      return result.slice(0, -1);\n    } else {\n      return result;\n    }\n  }\n\n  private throwIfIncorrect() {\n    if (!this.isValid) {\n      throw new Error(`Invalid transaction provided to ${this.constructor.name}`);\n    }\n  }\n\n  constructor() {\n    this.throwIfIncorrect();\n  }\n}\n\nexport class TransactionCategoryIcon extends BaseTransactionIcon {\n  public get title(): string {\n    return !this.transaction.isPending ? this.transaction.category || '' : 'pending';\n  }\n\n  public get type(): TransactionIconType {\n    return TransactionIconType.category;\n  }\n\n  public isValid() {\n    return this.transaction.isPending || (this.transaction !== undefined && this.transaction.category !== undefined);\n  }\n\n  public formatClassName(): string {\n    return `bb-transaction-category-${this.cleanClassName(this.transaction.category || 'pending')}`;\n  }\n\n  constructor(protected transaction: Transaction) {\n    super();\n  }\n}\n\nexport class TransactionTypeIcon extends BaseTransactionIcon {\n  public get title(): string {\n    return this.transaction.type || '';\n  }\n\n  public get type(): TransactionIconType {\n    return TransactionIconType.type;\n  }\n\n  public isValid() {\n    return !!this.transaction && !!this.transaction.type;\n  }\n\n  public formatClassName(): string {\n    return this.transaction.type ? `bb-icon-transaction-type-${this.cleanClassName(this.transaction.type)}` : '';\n  }\n\n  constructor(protected transaction: Transaction) {\n    super();\n  }\n}\n\nexport class TransactionCreditDebitIcon extends BaseTransactionIcon {\n  public get title(): string {\n    return this.indicator;\n  }\n\n  public get type(): TransactionIconType {\n    return TransactionIconType.creditDebit;\n  }\n\n  public formatClassName(): string {\n    return this.transaction.transactionAmountCurrency\n      ? `bb-icon-credit-debit-indicator-${this.cleanClassName(this.indicator)}`\n      : '';\n  }\n\n  private get indicator() {\n    if (this.transaction.transactionAmountCurrency) {\n      return parseInt(this.transaction.transactionAmountCurrency.amount, 10) > 0 ? 'incoming' : 'outgoing';\n    }\n\n    return '';\n  }\n\n  public isValid() {\n    return this.transaction !== undefined && this.transaction.transactionAmountCurrency !== undefined;\n  }\n\n  constructor(protected transaction: Transaction) {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Transaction } from '../model/transaction.model';\nimport {\n  TransactionCategoryIcon,\n  TransactionTypeIcon,\n  TransactionCreditDebitIcon,\n  BaseTransactionIcon,\n} from '../model/transaction-category.model';\n\n@Injectable()\nexport class TransactionsIconCategoriesFactoryService {\n  create(transaction: Transaction): BaseTransactionIcon {\n    if (transaction.category || transaction.isPending) {\n      return new TransactionCategoryIcon(transaction);\n    } else if (transaction.type) {\n      return new TransactionTypeIcon(transaction);\n    } else {\n      return new TransactionCreditDebitIcon(transaction);\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { Transaction } from '../../model/transaction.model';\nimport { BaseTransactionIcon } from '../../model/transaction-category.model';\nimport { TransactionsIconCategoriesFactoryService } from '../../services/transactions-icon-categories-factory.service';\n\n@Component({\n  selector: 'bb-transaction-category-icon',\n  templateUrl: './transaction-category-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionCategoryIconComponent implements OnInit, AfterViewInit {\n  /**\n   * The transaction this component shows the category icon of.\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * Whether to show the icon in a circle.\n   */\n  @Input() circle = false;\n  /**\n   * Whether to show different sizes of icons.\n   */\n  @Input() size: 'small' | 'large' | undefined;\n  /* eslint-disable */\n  @ViewChild('categoryImage') categoryImage: ElementRef | undefined;\n  /* eslint-enable */\n\n  /**\n   * Determines if the image is done loading.\n   */\n  hasImageLoaded = false;\n\n  /**\n   * Contains the transaction class name that has to be used together\n   * with the title of the icon\n   */\n  transactionIcon: BaseTransactionIcon | undefined;\n\n  ngOnInit() {\n    if (this.transaction === undefined) {\n      throw new Error(`\"transaction\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    this.transactionIcon = this.transactionsIconCategoriesFactory.create(this.transaction);\n  }\n\n  ngAfterViewInit() {\n    if (this.categoryImage) {\n      this.categoryImage.nativeElement.onload = () => {\n        this.hasImageLoaded = true;\n        this.cd.markForCheck();\n      };\n    }\n  }\n\n  constructor(\n    private transactionsIconCategoriesFactory: TransactionsIconCategoriesFactoryService,\n    private readonly cd: ChangeDetectorRef,\n  ) {}\n}\n","<div\n  aria-hidden=\"true\"\n  class=\"bb-transaction-category bb-transaction-category--enriched\"\n  title=\"{{ transaction?.merchant ? transaction?.merchant?.name : transactionIcon?.title }}\"\n  [ngClass]=\"[\n    circle ? 'bb-transaction-category-icon-circle' : 'bb-transaction-category-icon',\n    size ? 'bb-transaction-category--' + size : '',\n    !transaction?.merchant?.logo || !hasImageLoaded ? transactionIcon?.formatClassName() : ''\n  ]\"\n>\n  <img\n    class=\"bb-transaction-category__image\"\n    *ngIf=\"transaction?.merchant?.logo\"\n    [hidden]=\"!hasImageLoaded\"\n    [src]=\"transaction?.merchant?.logo\"\n    #categoryImage\n  />\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { DisputeStatus, TransactionClientHttpService } from '@backbase/data-ang/transactions';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Transaction } from '../model/transaction.model';\n\n@Injectable()\nexport class TransactionUpdateService {\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred.  Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n\n    // Return an observable with a user-facing error message.\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  update(transaction: Transaction, update: Partial<Transaction>): Observable<HttpResponse<any>> {\n    if (typeof transaction.id === 'undefined' || typeof transaction.arrangementId === 'undefined') {\n      return throwError('updateNotes: invalid transaction');\n    }\n\n    return this.transactionsDataHttpService\n      .patchTransactions(\n        {\n          transactionsClientPatchRequestBody: [\n            {\n              id: transaction.id,\n              arrangementId: transaction.arrangementId,\n              notes: update.notes,\n              disputeStatus: update.disputeStatus,\n              category: update.category,\n            },\n          ],\n        },\n        'response',\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  setDisputeStatus(transaction: Transaction, disputeStatus: DisputeStatus) {\n    return this.update(transaction, { disputeStatus });\n  }\n\n  updateNotes(transaction: Transaction, notes: string) {\n    return this.update(transaction, { notes });\n  }\n\n  constructor(private readonly transactionsDataHttpService: TransactionClientHttpService) {}\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { EnumValuesByAttributeNameGetResponseBody } from '@backbase/data-ang/transactions';\n\nexport interface TransactionsEnumValue {\n  value?: string;\n  name?: string;\n}\n/* eslint-disable no-redeclare*/\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsEnumValue {\n  // eslint-disable-next-line no-inner-declarations\n  function toTitleCase(text: string | undefined) {\n    if (!text) {\n      return '';\n    }\n\n    return `${text.charAt(0).toUpperCase()}${text.substr(1).toLowerCase()}`;\n  }\n\n  // Until Angular supports i18n in typescript, this is the way to go\n  // eslint-disable-next-line no-inner-declarations\n  function processEnumValue(enumValue: TransactionsEnumValue) {\n    switch (enumValue.value) {\n      case 'CRDT':\n        return {\n          ...enumValue,\n          name: 'Credit',\n        };\n      case 'DBIT':\n        return {\n          ...enumValue,\n          name: 'Debit',\n        };\n      case 'BILLED':\n      case 'UNBILLED':\n      case 'PENDING':\n        return {\n          ...enumValue,\n          name: enumValue.name || toTitleCase(enumValue.value),\n        };\n      default:\n        return {\n          ...enumValue,\n          name: enumValue.name || enumValue.value,\n        };\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function processEnumValues(enumValues: Array<TransactionsEnumValue>) {\n    return enumValues.map(processEnumValue);\n  }\n\n  export function fromHttpResponse(\n    response: HttpResponse<EnumValuesByAttributeNameGetResponseBody[]>,\n  ): Array<TransactionsEnumValue> {\n    return processEnumValues((response.body as Array<{ value: string }>) || []);\n  }\n}\n/* eslint-enable no-redeclare*/\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TransactionClientHttpService } from '@backbase/data-ang/transactions';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { TransactionsEnumValue } from '../model/transactions-enum-value.model';\n\n@Injectable()\nexport class EnumValuesService {\n  private readonly enumValues: {\n    [attributeName: string]: Observable<Array<TransactionsEnumValue>>;\n  } = {};\n\n  constructor(private readonly transactionsDataHttpService: TransactionClientHttpService) {}\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred.  Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n\n    // Return an observable with a user-facing error message.\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  private loadEnumValues(attributeName: string): Observable<Array<TransactionsEnumValue>> {\n    return this.transactionsDataHttpService\n      .getEnumValuesByAttributeName({ attributeName }, 'response')\n      .pipe(map(TransactionsEnumValue.fromHttpResponse), catchError(this.handleError));\n  }\n\n  getEnumValues(attributeName: string) {\n    if (typeof this.enumValues[attributeName] === 'undefined') {\n      this.enumValues[attributeName] = this.loadEnumValues(attributeName);\n    }\n\n    return this.enumValues[attributeName];\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Category } from '@backbase/data-ang/categories-management';\nimport { Customizable } from './customizable.model';\n\nexport interface CategoryItem extends Customizable {\n  categoryId: number;\n  categoryName: string;\n}\n\nexport function categoriesManagementMap(item: Category): CategoryItem {\n  return { ...item };\n}\n\nexport function fromCategoriesManagementResponse(response: HttpResponse<Array<Category>>): CategoryItem[] {\n  return (response.body || []).map(categoriesManagementMap);\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nimport { CategoriesHttpService } from '@backbase/data-ang/categories-management';\nimport { fromCategoriesManagementResponse, CategoryItem } from '../model/categories-list';\nimport { categoryListLevelParam } from '../constants';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(private readonly categoriesManagementDataHttpService: CategoriesHttpService) {}\n\n  getCategories(): Observable<CategoryItem[]> {\n    return this.categoriesManagementDataHttpService\n      .getCategories(\n        {\n          level: categoryListLevelParam,\n        },\n        'response',\n      )\n      .pipe(shareReplay(), map(fromCategoriesManagementResponse));\n  }\n}\n","import { Component, ViewChild, AfterViewInit, Input, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { TransactionLocation } from '@backbase/data-ang/transactions';\n\n@Component({\n  selector: 'bb-transactions-map-ui',\n  templateUrl: 'transactions-map-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsMapUiComponent implements AfterViewInit {\n  /* eslint-disable */\n  @ViewChild('bbMapContainer') mapContainer: ElementRef<HTMLElement> | undefined;\n  /* eslint-enable */\n  @Input() location: TransactionLocation | undefined;\n\n  private buildMapOptions(location: TransactionLocation): google.maps.MapOptions | undefined {\n    if (location.latitude && location.longitude) {\n      return {\n        center: {\n          lat: location.latitude,\n          lng: location.longitude,\n        },\n        zoom: 10,\n        disableDefaultUI: true,\n        zoomControl: false,\n        styles: [\n          {\n            featureType: 'poi',\n            stylers: [{ visibility: 'off' }],\n          },\n        ],\n      };\n    }\n\n    return undefined;\n  }\n\n  getFullAddress(location: TransactionLocation): string {\n    return encodeURI(`${location.latitude}, ${location.longitude}`);\n  }\n\n  ngAfterViewInit() {\n    if (this.location && this.mapContainer) {\n      const options = this.buildMapOptions(this.location);\n      const map = new google.maps.Map(this.mapContainer.nativeElement, options);\n      if (this.location && this.location.latitude && this.location.longitude) {\n        const mapUrl = this.getFullAddress(this.location);\n        const marker = new google.maps.Marker({\n          position: {\n            lat: this.location.latitude,\n            lng: this.location.longitude,\n          },\n          map,\n        });\n        marker.addListener('click', () => {\n          window.open('https://www.google.com/maps/dir//' + mapUrl, '_blank');\n        });\n      }\n    }\n  }\n}\n","<div class=\"bb-transcations-geolocation-map\" #bbMapContainer></div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Transaction } from '../../model/transaction.model';\nimport { TransactionsDetailsLoadingState } from '../../model/transactions-details.model';\n\n@Component({\n  selector: 'bb-transaction-geo-location-map',\n  templateUrl: './transaction-geo-location-map.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionGeoLocationMapComponent {\n  @Input() transaction: Transaction | undefined;\n  @Input() loadingStatus: TransactionsDetailsLoadingState | undefined;\n  loadingStateEnum = TransactionsDetailsLoadingState;\n}\n","<div class=\"bb-transactions-geolocation\">\n  <span class=\"bb-inline-stack bb-block bb-block--sm\" *ngIf=\"transaction?.location?.address\">\n    <bb-icon-ui class=\"bb-inline-stack__item\" name=\"location-on\" size=\"md\"></bb-icon-ui>\n    <span class=\"bb-inline-stack__item bb-transactions-geolocation__address\">{{ transaction?.location?.address }}</span>\n  </span>\n  <ng-container *ngIf=\"loadingStatus !== loadingStateEnum.notStarted\">\n    <ng-container *ngIf=\"loadingStatus !== loadingStateEnum.notLoaded\">\n      <ng-container *ngIf=\"loadingStatus !== loadingStateEnum.error; else errorState\">\n        <ng-container *ngIf=\"loadingStatus !== loadingStateEnum.loading; else loadingState\">\n          <bb-transactions-map-ui [location]=\"transaction?.location\"></bb-transactions-map-ui>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <!-- Error state is not defined yet -->\n</ng-template>\n","import { Injectable } from '@angular/core';\n\n/**\n * Utility service for DOM manipulations\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DomAttributesService {\n  private basePrefix = 'bb_transactions';\n  private idCounter = 0;\n\n  public nextId(prefix?: string) {\n    return `${this.basePrefix}-${prefix ? prefix : 'default'}-${Date.now()}-${this.idCounter++}`;\n  }\n}\n","import { Directive, Input, ElementRef, Renderer2, OnInit, ChangeDetectorRef, AfterContentInit } from '@angular/core';\nimport { DomAttributesService } from '../services/dom-attributes.service';\n\n@Directive({\n  selector: '[bbDynamicId]',\n  exportAs: 'bbDynamicId',\n})\nexport class DynamicIdDirective implements AfterContentInit {\n  constructor(\n    private readonly _elRef: ElementRef,\n    private readonly _renderer: Renderer2,\n    private readonly domAttributesService: DomAttributesService,\n    private readonly cd: ChangeDetectorRef,\n  ) {}\n\n  @Input() bbDynamicId: string | undefined;\n\n  ngAfterContentInit() {\n    setTimeout(() => {\n      this._renderer.setAttribute(this._elRef.nativeElement, 'id', this.domAttributesService.nextId(this.bbDynamicId));\n      this.cd.markForCheck();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MessagecenterHttpService } from '@backbase/data-ang/messages';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { b64Encode } from '../constants';\nimport { Message, MessagesResponse } from '../model/messages.model';\nimport { Transaction } from '../model/transaction.model';\n\n@Injectable()\nexport class MessagesService {\n  // TODO: default message is out of scope\n  defaultMessage: Observable<Message> = of({\n    body: b64Encode('test message'),\n    subject: 'no subject',\n    topic: 'no topic',\n    sender: {\n      name: 'test sender',\n    },\n  });\n  constructor(private readonly messageCenterHttpService: MessagecenterHttpService) {}\n\n  saveMessages(message: Message): Observable<MessagesResponse> {\n    return this.messageCenterHttpService.postMessages({\n      presentationMessagePostRequestBody: message,\n    });\n  }\n\n  saveAttachment(attachment: Blob): Observable<string> {\n    return this.messageCenterHttpService.postMessageAttachments({ attachment }).pipe(map((data) => data.id));\n  }\n\n  deleteAttachments(attachmentIds: Array<string>): Observable<Array<string>> {\n    return this.messageCenterHttpService\n      .deleteMessageAttachments({ ids: attachmentIds })\n      .pipe(map((data) => data.deleted));\n  }\n\n  createDefaultBody(transaction: Transaction) {\n    return `transactionID: ${transaction.id}\nreferenceNumber: ${transaction.reference}\narranagementID: ${transaction.arrangementId}\nbookingDate: ${transaction.bookingDate}\namount: ${transaction.transactionAmountCurrency?.amount}\nmerchantName: ${transaction.merchant?.name}\ncounterpartyName: ${transaction.counterPartyName}\ndescription: ${transaction.description}\ntype: ${transaction.type}`;\n  }\n}\n","import { from, of, Subject } from 'rxjs';\nimport {\n  InquireAndDisputeFile,\n  InquireAndDisputeTopics,\n  Message,\n  MessageForm,\n  SubjectReportMap,\n} from '../model/messages.model';\nimport { TransactionsDetailsLoadingState } from '../model/transactions-details.model';\nimport { MessagesService } from '../services/messages.service';\nimport '@angular/localize/init';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { b64Encode } from '../constants';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Transaction } from '../model/transaction.model';\n/* eslint-disable  @typescript-eslint/no-non-null-assertion */\n\n@Injectable()\nexport class TransactionsInquireAndDisputeUIService {\n  private showReportSubject = new Subject<boolean>();\n  private readonly DEFAULT_MESSAGE: MessageForm = {\n    attachments: [],\n    body: '',\n    topic: 'inquire',\n  };\n\n  showReport: Observable<boolean> = this.showReportSubject.asObservable();\n  message: MessageForm = { ...this.DEFAULT_MESSAGE };\n  reportState = TransactionsDetailsLoadingState.notStarted;\n\n  private subjectReportMap: SubjectReportMap = {\n    dispute: $localize`:Dispute subject@@transactions.dispute.subject:Transaction dispute raised on`,\n    inquire: $localize`:Inquiry subject@@transactions.inquire.subject:Transaction inquiry raised on`,\n  };\n\n  formatMessage(\n    messageForm: MessageForm,\n    defaultBody: string,\n    inquireAndDisputeTopics: InquireAndDisputeTopics,\n    transaction: Transaction | undefined,\n  ): Message {\n    const { topic = 'inquire', body = '', attachments = [] } = messageForm;\n\n    return {\n      body: b64Encode([defaultBody, body].join('\\n')),\n      topic: inquireAndDisputeTopics[topic],\n      attachments: attachments.map((data) => data.id || ''),\n      subject: `${this.subjectReportMap[topic]} ${transaction?.arrangementId}`,\n    };\n  }\n\n  // TODO: Add unit tests when the functionality is complete\n  saveReport(message: Message): Observable<Message | undefined> {\n    this.reportState = TransactionsDetailsLoadingState.loading;\n\n    return this.messagesService.saveMessages(message).pipe(\n      map(() => {\n        this.message = this.DEFAULT_MESSAGE;\n        this.showReportForm(false);\n        this.reportState = TransactionsDetailsLoadingState.done;\n\n        return message;\n      }),\n      catchError(() => {\n        this.reportState = TransactionsDetailsLoadingState.error;\n\n        return of(undefined);\n      }),\n    );\n  }\n\n  showReportForm(display: boolean) {\n    this.showReportSubject.next(display);\n  }\n\n  cancelReport() {\n    this.removeAllFiles();\n    this.reportState = TransactionsDetailsLoadingState.notStarted;\n    this.message = this.DEFAULT_MESSAGE;\n    this.showReportForm(false);\n  }\n\n  fileChange(file: File) {\n    let attachment: InquireAndDisputeFile = {\n      name: file.name,\n      size: file.size,\n      content: from(file.arrayBuffer()),\n    };\n\n    const currentAttachments = this.message!.attachments || [];\n\n    this.message!.attachments = [...currentAttachments, attachment];\n    const state = this.reportState;\n    this.reportState = TransactionsDetailsLoadingState.loading;\n\n    return this.messagesService.saveAttachment(file).pipe(\n      map((id) => {\n        attachment = {\n          id,\n          ...attachment,\n        };\n        this.reportState = TransactionsDetailsLoadingState.notStarted;\n        this.message!.attachments = [...currentAttachments, attachment];\n\n        return id;\n      }),\n      catchError(() => {\n        this.reportState = state;\n        this.message!.attachments = [...currentAttachments];\n\n        return of('');\n        //TODO: add error message\n      }),\n    );\n  }\n\n  deleteReportForm() {\n    //TODO: this is just a placeholder for now\n  }\n\n  fileRemoved(attachment: InquireAndDisputeFile) {\n    const { id = '' } = attachment;\n\n    return this.messagesService.deleteAttachments([id]).pipe(\n      tap(() => {\n        this.message!.attachments = this.message!.attachments.filter((item) => item.id !== id);\n      }),\n    );\n  }\n\n  removeAllFiles() {\n    if (this.message!.attachments.length > 0) {\n      const files = this.message!.attachments.map((item) => item.id || '');\n      this.messagesService.deleteAttachments(files).subscribe({\n        next: () => {\n          this.message!.attachments = [];\n        },\n      });\n    }\n  }\n\n  constructor(private readonly messagesService: MessagesService) {}\n}\n/* eslint-enable  @typescript-eslint/no-non-null-assertion */\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TransactionUpdateService } from './services/transaction-update.service';\nimport { EnumValuesService } from './services/enum-values.service';\nimport {\n  TransactionsNumberOfResultsFoundComponent,\n  TransactionsNumberOfResultsFoundCustomizableDirective,\n} from './components/transactions-controls/transactions-number-of-results-found.component';\nimport { CategoriesService } from './services/categories.service';\nimport {\n  TransactionsErrorStateCustomizableDirective,\n  TransactionsNoAccountSelectedStateCustomizableDirective,\n} from './components/base-transactions-container';\nimport { AccountsService } from './services/accounts.service';\nimport { AccessibilityKeyboardDirective } from './components/transactions-controls/accessibility-keyboard.directive';\nimport { TransactionCheckImageComponent } from './components/transactions-controls/transaction-check-image.component';\nimport { TransactionGeoLocationMapComponent } from './components/transactions-controls/transaction-geo-location-map.component';\nimport { MapAPILoaderService } from './services/map-api-loader.service';\nimport { TransactionsMapUiComponent } from './components/transactions-controls/transactions-map-ui.component';\nimport { TransactionCategoryIconComponent } from './components/transactions-controls/transaction-category-icon.component';\nimport { TransactionsIconCategoriesFactoryService } from './services/transactions-icon-categories-factory.service';\nimport { CapitalizePipe } from './components/capitalize.pipe';\nimport { TransactionCheckImageItemComponent } from './components/transactions-controls/transaction-check-image-item.component';\nimport { DocumentViewerBackdropComponent } from './components/document-viewer-ui/document-viewer-backdrop/document-viewer-backdrop.component';\nimport { DocumentViewerContainerComponent } from './components/document-viewer-ui/document-viewer-container/document-viewer-container.component';\nimport { DocumentViewerHeaderComponent } from './components/document-viewer-ui/document-viewer-header/document-viewer-header.component';\nimport { DocumentViewerInteractorComponent } from './components/document-viewer-ui/document-viewer-interactor/document-viewer-interactor.component';\nimport { ImageViewerComponent } from './components/document-viewer-ui/image-viewer/image-viewer.component';\nimport { TransactionCheckImageDocumentViewerComponent } from './components/transactions-controls/transaction-check-image-document-viewer.component';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DomAttributesService } from './services/dom-attributes.service';\nimport { DynamicIdDirective } from './components/dynamic-id.directive';\nimport { MessagesService } from './services/messages.service';\nimport { TransactionsInquiryDisputeComponent } from './components/transactions-controls/transactions-inquiry-dispute.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TransactionsInquireAndDisputeUIService } from './services/transactions-inquire-and-dispute-ui.service';\nimport { AvailableFiltersConfigService } from './services/available-filters-config.service';\nimport { PaymentsBatchService } from './services/payments-batch.service';\nimport { TransactionsDisputeStatusTagComponent } from './components/transactions-controls/transaction-dispute-status-tag.component';\nimport { TransactionsDisputeBannerComponent } from './components/transactions-controls/transaction-dispute-banner.component';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { RichTextEditorModule } from '@backbase/ui-ang/rich-text-editor';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { InputFileModule } from '@backbase/ui-ang/input-file';\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IconModule,\n    ButtonModule,\n    LoadButtonModule,\n    InputRadioGroupModule,\n    TooltipModule,\n    ReactiveFormsModule,\n    LoadingIndicatorModule,\n    EmptyStateModule,\n    DropdownMenuModule,\n    A11yModule,\n    RichTextEditorModule,\n    InputValidationMessageModule,\n    InputFileModule,\n    FileAttachmentModule,\n    AlertModule,\n    ModalModule,\n    BadgeModule,\n  ],\n  providers: [\n    TransactionUpdateService,\n    EnumValuesService,\n    CategoriesService,\n    AccountsService,\n    TransactionsIconCategoriesFactoryService,\n    MapAPILoaderService,\n    DomAttributesService,\n    MessagesService,\n    TransactionsInquireAndDisputeUIService,\n    PaymentsBatchService,\n    AvailableFiltersConfigService,\n  ],\n  declarations: [\n    TransactionsNumberOfResultsFoundComponent,\n    TransactionCheckImageComponent,\n    TransactionGeoLocationMapComponent,\n    TransactionsErrorStateCustomizableDirective,\n    TransactionsNoAccountSelectedStateCustomizableDirective,\n    AccessibilityKeyboardDirective,\n    TransactionsNumberOfResultsFoundCustomizableDirective,\n    TransactionsMapUiComponent,\n    TransactionCategoryIconComponent,\n    TransactionCheckImageItemComponent,\n    CapitalizePipe,\n    DocumentViewerBackdropComponent,\n    DocumentViewerContainerComponent,\n    DocumentViewerHeaderComponent,\n    DocumentViewerInteractorComponent,\n    ImageViewerComponent,\n    TransactionCheckImageDocumentViewerComponent,\n    DynamicIdDirective,\n    TransactionsInquiryDisputeComponent,\n    TransactionsDisputeStatusTagComponent,\n    TransactionsDisputeBannerComponent,\n  ],\n  exports: [\n    TransactionsNumberOfResultsFoundComponent,\n    TransactionsErrorStateCustomizableDirective,\n    TransactionsNoAccountSelectedStateCustomizableDirective,\n    AccessibilityKeyboardDirective,\n    TransactionCheckImageComponent,\n    TransactionCheckImageItemComponent,\n    TransactionGeoLocationMapComponent,\n    TransactionsNumberOfResultsFoundCustomizableDirective,\n    IconModule,\n    A11yModule,\n    TransactionsMapUiComponent,\n    TransactionCategoryIconComponent,\n    CapitalizePipe,\n    DocumentViewerBackdropComponent,\n    DocumentViewerContainerComponent,\n    DocumentViewerHeaderComponent,\n    DocumentViewerInteractorComponent,\n    ImageViewerComponent,\n    TransactionCheckImageDocumentViewerComponent,\n    EmptyStateModule,\n    LoadingIndicatorModule,\n    DropdownMenuModule,\n    DynamicIdDirective,\n    TransactionsInquiryDisputeComponent,\n    TransactionsDisputeStatusTagComponent,\n    TransactionsDisputeBannerComponent,\n  ],\n})\nexport class TransactionsCommonModule {}\n","import { Injectable } from '@angular/core';\nimport { RouterService } from '@backbase/foundation-ang/core';\n\n@Injectable()\nexport class NavigationService {\n  constructor(private readonly routerService: RouterService) {}\n\n  view(arrangementId: string): Promise<boolean> {\n    return this.routerService.navigate(['/', arrangementId]);\n  }\n}\n","import { TransactionsListOptions } from './transactions-list-options.model';\nimport { TransactionsExportOptions } from './transactions-export-options.model';\nimport { TransactionsFilterOptions } from './transactions-filter-options.model';\n\nexport interface TransactionsGetParams {\n  amountGreaterThan?: number;\n  amountLessThan?: number;\n  bookingDateGreaterThan?: string;\n  bookingDateLessThan?: string;\n  description?: string;\n  reference?: string;\n  counterPartyName?: string;\n  counterPartyAccountNumber?: string;\n  creditDebitIndicator?: string;\n  categories?: string[];\n  billingStatus?: string;\n  currency?: string;\n  notes?: number;\n  id?: string;\n  locale?: string;\n  arrangementsIds?: string[];\n  fromCheckSerialNumber?: number;\n  toCheckSerialNumber?: number;\n  checkSerialNumbers?: string[];\n  query?: string;\n  from?: number;\n  cursor?: string;\n  size?: number;\n  orderBy?: string;\n  direction?: string;\n  secDirection?: string;\n  exportType?: string;\n  state?: string;\n  types?: string[];\n  typeGroups?: string[];\n}\n/* eslint-disable no-redeclare*/\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsGetParams {\n  // eslint-disable-next-line complexity\n  export const toHttpGetParams = (getParams: TransactionsListOptions | TransactionsExportOptions) => {\n    const params: TransactionsGetParams = {\n      ...TransactionsFilterOptions.toHttpGetParams(getParams.filter),\n    };\n\n    if (getParams.account && getParams.account.arrangementId) {\n      params['arrangementsIds'] = Array.isArray(getParams.account.arrangementId)\n        ? getParams.account.arrangementId\n        : [getParams.account.arrangementId];\n    }\n\n    if (getParams.search && getParams.search.query) {\n      params['query'] = getParams.search.query;\n    }\n\n    if ((getParams as TransactionsListOptions).pagination) {\n      params['from'] = (getParams as TransactionsListOptions).pagination.from;\n      params['size'] = (getParams as TransactionsListOptions).pagination.size;\n    }\n\n    if (getParams.sort) {\n      params['orderBy'] = getParams.sort.orderBy.toString();\n      params['direction'] = getParams.sort.direction.toString();\n    }\n\n    if ((getParams as TransactionsExportOptions).exportType) {\n      params['exportType'] = (getParams as TransactionsExportOptions).exportType;\n    }\n\n    if ((getParams as TransactionsExportOptions).locale) {\n      params['locale'] = (getParams as TransactionsExportOptions).locale;\n    }\n\n    if ((getParams as TransactionsListOptions).state) {\n      params['state'] = (getParams as TransactionsListOptions).state;\n    }\n\n    return params;\n  };\n}\n/* eslint-enable no-redeclare*/\n","import { Transaction } from './transaction.model';\nimport { TransactionsList } from './transactions-list.model';\n\nexport interface TransactionsGroupedByDate {\n  [date: string]: Transaction[];\n}\n/* eslint-disable no-redeclare*/\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsGroupedByDate {\n  // eslint-disable-next-line no-inner-declarations\n  function getDate(transaction: Transaction) {\n    const date = transaction.bookingDate ? new Date(transaction.bookingDate) : new Date();\n\n    return date.toISOString().slice(0, 10);\n  }\n\n  export function groupByDate(transactionsList: TransactionsList | undefined): TransactionsGroupedByDate {\n    const transactions = transactionsList && transactionsList.items !== null ? transactionsList.items : [];\n\n    return transactions.reduce((transactionsGroupedByDate: TransactionsGroupedByDate, transaction: Transaction) => {\n      const transactionDate = getDate(transaction);\n\n      if (transactionsGroupedByDate[transactionDate]) {\n        transactionsGroupedByDate[transactionDate].push(transaction);\n      } else {\n        transactionsGroupedByDate[transactionDate] = [transaction];\n      }\n\n      return transactionsGroupedByDate;\n    }, {});\n  }\n}\n/* eslint-enable no-redeclare*/\n","import { map, pluck } from 'rxjs/operators';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\nimport { WidgetPropertiesService } from '../services/widget-properties.service';\nimport { Input, Directive, Output, EventEmitter } from '@angular/core';\nimport { defaultAvailableFiltersConfig, deserialize, filterInputParameters, parseSortOptions } from '../constants';\nimport { AvailableFiltersConfig } from '../model/available-filters.model';\nimport { Transaction } from '../model/transaction.model';\nimport { TransactionsList } from '../model/transactions-list.model';\nimport { EndpointType } from '../services/widget-properties.service';\n\n/* eslint-disable */\n@Directive()\nexport class BaseTransactionsWidget {\n  /**\n   * API key needed for the google maps to work.\n   */\n  @Input() googleAPIKey: string | undefined;\n\n  @Input('initialFilterOptions') set initialFilterOptionsValue(value: string) {\n    const deseralizedValue = deserialize(value);\n    this.initialFilterOptionsSubject.next(TransactionsFilterOptions.fromHttpGetParams(deseralizedValue));\n  }\n  @Input('initialSortOptions') set initialSortOptionsValue(value: string) {\n    const options = parseSortOptions(value);\n    this.initialSortOptionsSubject.next(options);\n  }\n\n  @Input() pageSize: number | undefined;\n  @Input() maxNavPages: number | undefined;\n  @Input() paginationType: string | undefined;\n  @Input() showControls: boolean | undefined;\n  @Input() showChangeCategory: boolean | undefined;\n  @Input() showPendingTransactionsOnTop: boolean | undefined;\n  @Input() showCheckImage: boolean | undefined;\n  @Input() showManageNotes: boolean | undefined;\n  @Input() getOrPostEndpoints: EndpointType | undefined;\n  @Input() enableDisputeAndInquiry: boolean = false;\n  @Input() disputeByBillingStatus: boolean | undefined;\n  @Input() disputeEligibilityDays: number | undefined;\n  @Input() disputeTransactionTypes: string | undefined;\n  @Input() inquireTopicId: string | undefined;\n  @Input() disputeTopicId: string | undefined;\n  @Input() availableFiltersConfig: AvailableFiltersConfig = defaultAvailableFiltersConfig;\n\n  @Output() transactionSelected = new EventEmitter<Transaction>();\n  @Output() transactionsLoaded = new EventEmitter<TransactionsList | null>();\n\n  private readonly initialFilterOptionsSubject = new BehaviorSubject<TransactionsFilterOptions | undefined>(undefined);\n  private readonly initialSortOptionsSubject = new BehaviorSubject<TransactionsSortOptions | undefined>(undefined);\n\n  readonly selectedAccount = this.getRouteParam(this.route, 'selectedAccount').pipe(\n    map((selectedAccount) => selectedAccount as string),\n    map((selectedAccount) =>\n      typeof selectedAccount !== 'undefined' && selectedAccount.includes(',')\n        ? selectedAccount.split(',')\n        : selectedAccount !== undefined\n        ? [selectedAccount]\n        : undefined,\n    ),\n  );\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // Ensure that level that has actual value keeps it from being cleared.\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map((params) => params[0] || params[1]),\n    );\n  }\n\n  get initialFilterOptions(): Observable<TransactionsFilterOptions> {\n    return filterInputParameters(\n      this.initialFilterOptionsSubject.asObservable(),\n      this.widgetProperties.initialFilterOptions,\n    );\n  }\n\n  get initialSortOptions(): Observable<TransactionsSortOptions | undefined> {\n    return filterInputParameters(\n      this.initialSortOptionsSubject.asObservable(),\n      this.widgetProperties.initialSortOptions,\n    );\n  }\n\n  constructor(protected readonly route: ActivatedRoute, protected readonly widgetProperties: WidgetPropertiesService) {}\n\n  onDetailOpen(transaction: Transaction) {\n    this.transactionSelected.emit(transaction);\n  }\n\n  onTransactionsLoaded(transactionsList: TransactionsList | null) {\n    this.transactionsLoaded.emit(transactionsList);\n  }\n}\n/* eslint-enable */\n","import { TransactionsExportTypeElement } from '../model/transactions-export-options.model';\nimport { Input, Output, EventEmitter, OnInit, Directive } from '@angular/core';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { AvailableFilters } from '../model/available-filters.model';\n\n@Directive()\n// eslint-disable-next-line\nexport class BaseTransactionsControls implements OnInit {\n  /**\n   * Whether a filter is applied on the transactions.\n   */\n  @Input() isFilterApplied = false;\n  /**\n   * Configurations for exporting transactions.\n   */\n  // eslint-disable-next-line\n  @Input()\n  exportConfig = [\n    {\n      name: 'CSV',\n      isAvailable: true,\n    },\n    {\n      name: 'OFX',\n      isAvailable: true,\n    },\n  ];\n  /**\n   * Configuration parameter to show/hide filters\n   */\n  @Input() availableFilters: AvailableFilters = [];\n\n  /**\n   * EventEmitter for triggering a filter action.\n   */\n  @Output() readonly filter = new EventEmitter<TransactionsFilterOptions>();\n  /**\n   * EventEmitter for triggering a search action.\n   */\n  @Output() readonly search = new EventEmitter<string>();\n  /**\n   * EventEmitter for triggering an export action.\n   */\n  @Output() readonly export = new EventEmitter<TransactionsExportTypeElement>();\n  /**\n   * Whether the filter form is shown.\n   */\n  isFilterOpen = false;\n\n  /**\n   * Search event callback\n   */\n  onSearch(searchParam: string) {\n    this.search.emit(searchParam);\n  }\n  /**\n   * Filter event callback\n   */\n  onFilter(filterParams: TransactionsFilterOptions) {\n    this.filter.emit(filterParams);\n  }\n  /**\n   * Export event callback\n   */\n  onExport(type: TransactionsExportTypeElement) {\n    this.export.emit(type);\n  }\n  /**\n   * Close event callback to hide the filters controls\n   */\n  onClose() {\n    this.isFilterOpen = false;\n  }\n  /**\n   * Toogle method to hide or show the filter form\n   */\n  toggleFilter() {\n    this.isFilterOpen = !this.isFilterOpen;\n  }\n\n  ngOnInit() {\n    if (typeof this.exportConfig === 'undefined') {\n      throw new Error(`\"exportConfig\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["OnLoadAction","TransactionState","TransactionsFilterOptions","AvailableFilterEnum","CheckImagesAvailability","BillingStatusEnum","combineLatest","map","TransactionsList","switchMap","publishReplay","refCount","PaginationType","EndpointType","defer","of","catchError","i1","i0","Injectable","Optional","LoadingState","InjectionToken","ReplaySubject","BehaviorSubject","Subject","merge","filter","distinctUntilChanged","tap","iif","scan","first","LOCALE_ID","Inject","Component","ChangeDetectionStrategy","Input","BbTemplate","Directive","TransactionsCheckImageType","TransactionsCheckImageSide","TransactionsCheckImages","TransactionsDetailsLoadingState","DisputeStatusEnum","HostListener","EventEmitter","i2","i3.AccessibilityKeyboardDirective","i4","Output","i3","i2.DocumentViewerInteractorComponent","timer","finalize","share","ViewContainerRef","i1.DocumentViewerHeaderComponent","i2.ImageViewerComponent","i5","i6","ViewChild","i1.DocumentViewerBackdropComponent","i2.DocumentViewerContainerComponent","i1.TransactionCheckImageItemComponent","i2.TransactionCheckImageDocumentViewerComponent","templateObject_1","templateObject_2","takeUntil","i7","i8","i9","i10","i11.AccessibilityKeyboardDirective","i12","i13","i14","TransactionsBackendError","TransactionsExportErrorType","i2.AccountsService","mergeMap","HttpResponse","from","i2.MapAPILoaderService","i3.PaymentsBatchService","i1.AccountsService","Pipe","TransactionIconType","i1.TransactionsIconCategoriesFactoryService","throwError","TransactionsEnumValue","shareReplay","i2.TransactionsMapUiComponent","i1.DomAttributesService","i1.MessagesService","CommonModule","IconModule","ButtonModule","LoadButtonModule","InputRadioGroupModule","TooltipModule","ReactiveFormsModule","LoadingIndicatorModule","EmptyStateModule","DropdownMenuModule","A11yModule","RichTextEditorModule","InputValidationMessageModule","InputFileModule","FileAttachmentModule","AlertModule","ModalModule","BadgeModule","NgModule","TransactionsGetParams","TransactionsGroupedByDate","pluck","i2.WidgetPropertiesService"],"mappings":"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"}