import { Observable } from 'rxjs';
import { TransactionsEnumValue } from './model/transactions-enum-value.model';
import { TransactionsSortOptions } from './model/transactions-sort-options.model';
import { AvailableFiltersConfig } from './model/available-filters.model';
/**
 * Dropdown values for credit/debit indicator filter.
 */
export declare const creditDebitIndicatorEnumValues: Array<TransactionsEnumValue>;
/**
 * Fallback dropdown values for transaction type filter.
 */
export declare const defaultTransactionTypeEnumValues: Array<TransactionsEnumValue>;
/**
 * Fallback dropdown values for billing status filter.
 */
export declare const defaultBillingStatusEnumValues: Array<TransactionsEnumValue>;
/**
 * Name of different check images status
 */
export declare enum CheckImagesAvailability {
    available = "AVAILABLE",
    unavailable = "UNAVAILABLE"
}
export declare enum BillingStatusEnum {
    billed = "BILLED",
    unbilled = "UNBILLED",
    pending = "PENDING"
}
/**
 * Name of response header that contains the total amount of results.
 */
export declare const totalCountHeader = "X-Total-Count";
/**
 * Name of response header that contains the available export types.
 */
export declare const availableExportTypes = "X-Available-Export-Types";
export declare const unvailableExportTypesReasons = "X-Unavailable-Export-Types-Reasons";
/**
 * Name of response header that contains the sort configuration.
 */
export declare const sortFieldsDirectionHeader = "X-Sort-Fields-Direction";
/**
 * Notification time to live in ms.
 */
export declare const notificationTtl = 5000;
/**
 * Which category level should be retrieved for category change modal list.
 */
export declare const categoryListLevelParam = "PARENTS";
export declare const defaultAvailableFiltersConfig: AvailableFiltersConfig;
export declare const deserialize: (propertyValue: string) => {
    [x: string]: string;
};
export declare const parseSortOptions: (propertyValue: string) => TransactionsSortOptions | undefined;
export declare const filterInputParameters: <T>(input: Observable<T | undefined>, prop: Observable<T>) => Observable<T>;
export declare const b64Encode: (str: string) => string;
export declare const truncateDate: (date: Date) => Date;
export declare const daysDiff: (date1: Date | string, date2: Date | string) => number;
