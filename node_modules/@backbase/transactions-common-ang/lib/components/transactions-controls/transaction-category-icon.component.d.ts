import { OnInit, ElementRef, AfterViewInit, ChangeDetectorRef } from '@angular/core';
import { Transaction } from '../../model/transaction.model';
import { BaseTransactionIcon } from '../../model/transaction-category.model';
import { TransactionsIconCategoriesFactoryService } from '../../services/transactions-icon-categories-factory.service';
import * as i0 from "@angular/core";
export declare class TransactionCategoryIconComponent implements OnInit, AfterViewInit {
    private transactionsIconCategoriesFactory;
    private readonly cd;
    /**
     * The transaction this component shows the category icon of.
     */
    transaction: Transaction | undefined;
    /**
     * Whether to show the icon in a circle.
     */
    circle: boolean;
    /**
     * Whether to show different sizes of icons.
     */
    size: 'small' | 'large' | undefined;
    categoryImage: ElementRef | undefined;
    /**
     * Determines if the image is done loading.
     */
    hasImageLoaded: boolean;
    /**
     * Contains the transaction class name that has to be used together
     * with the title of the icon
     */
    transactionIcon: BaseTransactionIcon | undefined;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    constructor(transactionsIconCategoriesFactory: TransactionsIconCategoriesFactoryService, cd: ChangeDetectorRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionCategoryIconComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TransactionCategoryIconComponent, "bb-transaction-category-icon", never, { "transaction": "transaction"; "circle": "circle"; "size": "size"; }, {}, never, never>;
}
