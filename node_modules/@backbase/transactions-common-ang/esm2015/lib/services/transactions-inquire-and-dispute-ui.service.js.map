{"version":3,"file":"transactions-inquire-and-dispute-ui.service.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/services/transactions-inquire-and-dispute-ui.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { from, of, Subject } from 'rxjs';\nimport {\n  InquireAndDisputeFile,\n  InquireAndDisputeTopics,\n  Message,\n  MessageForm,\n  SubjectReportMap,\n} from '../model/messages.model';\nimport { TransactionsDetailsLoadingState } from '../model/transactions-details.model';\nimport { MessagesService } from '../services/messages.service';\nimport '@angular/localize/init';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { b64Encode } from '../constants';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Transaction } from '../model/transaction.model';\n/* eslint-disable  @typescript-eslint/no-non-null-assertion */\n\n@Injectable()\nexport class TransactionsInquireAndDisputeUIService {\n  private showReportSubject = new Subject<boolean>();\n  private readonly DEFAULT_MESSAGE: MessageForm = {\n    attachments: [],\n    body: '',\n    topic: 'inquire',\n  };\n\n  showReport: Observable<boolean> = this.showReportSubject.asObservable();\n  message: MessageForm = { ...this.DEFAULT_MESSAGE };\n  reportState = TransactionsDetailsLoadingState.notStarted;\n\n  private subjectReportMap: SubjectReportMap = {\n    dispute: $localize`:Dispute subject@@transactions.dispute.subject:Transaction dispute raised on`,\n    inquire: $localize`:Inquiry subject@@transactions.inquire.subject:Transaction inquiry raised on`,\n  };\n\n  formatMessage(\n    messageForm: MessageForm,\n    defaultBody: string,\n    inquireAndDisputeTopics: InquireAndDisputeTopics,\n    transaction: Transaction | undefined,\n  ): Message {\n    const { topic = 'inquire', body = '', attachments = [] } = messageForm;\n\n    return {\n      body: b64Encode([defaultBody, body].join('\\n')),\n      topic: inquireAndDisputeTopics[topic],\n      attachments: attachments.map((data) => data.id || ''),\n      subject: `${this.subjectReportMap[topic]} ${transaction?.arrangementId}`,\n    };\n  }\n\n  // TODO: Add unit tests when the functionality is complete\n  saveReport(message: Message): Observable<Message | undefined> {\n    this.reportState = TransactionsDetailsLoadingState.loading;\n\n    return this.messagesService.saveMessages(message).pipe(\n      map(() => {\n        this.message = this.DEFAULT_MESSAGE;\n        this.showReportForm(false);\n        this.reportState = TransactionsDetailsLoadingState.done;\n\n        return message;\n      }),\n      catchError(() => {\n        this.reportState = TransactionsDetailsLoadingState.error;\n\n        return of(undefined);\n      }),\n    );\n  }\n\n  showReportForm(display: boolean) {\n    this.showReportSubject.next(display);\n  }\n\n  cancelReport() {\n    this.removeAllFiles();\n    this.reportState = TransactionsDetailsLoadingState.notStarted;\n    this.message = this.DEFAULT_MESSAGE;\n    this.showReportForm(false);\n  }\n\n  fileChange(file: File) {\n    let attachment: InquireAndDisputeFile = {\n      name: file.name,\n      size: file.size,\n      content: from(file.arrayBuffer()),\n    };\n\n    const currentAttachments = this.message!.attachments || [];\n\n    this.message!.attachments = [...currentAttachments, attachment];\n    const state = this.reportState;\n    this.reportState = TransactionsDetailsLoadingState.loading;\n\n    return this.messagesService.saveAttachment(file).pipe(\n      map((id) => {\n        attachment = {\n          id,\n          ...attachment,\n        };\n        this.reportState = TransactionsDetailsLoadingState.notStarted;\n        this.message!.attachments = [...currentAttachments, attachment];\n\n        return id;\n      }),\n      catchError(() => {\n        this.reportState = state;\n        this.message!.attachments = [...currentAttachments];\n\n        return of('');\n        //TODO: add error message\n      }),\n    );\n  }\n\n  deleteReportForm() {\n    //TODO: this is just a placeholder for now\n  }\n\n  fileRemoved(attachment: InquireAndDisputeFile) {\n    const { id = '' } = attachment;\n\n    return this.messagesService.deleteAttachments([id]).pipe(\n      tap(() => {\n        this.message!.attachments = this.message!.attachments.filter((item) => item.id !== id);\n      }),\n    );\n  }\n\n  removeAllFiles() {\n    if (this.message!.attachments.length > 0) {\n      const files = this.message!.attachments.map((item) => item.id || '');\n      this.messagesService.deleteAttachments(files).subscribe({\n        next: () => {\n          this.message!.attachments = [];\n        },\n      });\n    }\n  }\n\n  constructor(private readonly messagesService: MessagesService) {}\n}\n/* eslint-enable  @typescript-eslint/no-non-null-assertion */\n"]}