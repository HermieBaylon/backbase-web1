{"version":3,"file":"transactions-list.model.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-list.model.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { GetTransactionsRequestParams, TransactionItem } from '@backbase/data-ang/transactions';\n\nimport { Transaction } from './transaction.model';\nimport { TransactionsSortOptions } from './transactions-sort-options.model';\nimport {\n  sortFieldsDirectionHeader,\n  totalCountHeader,\n  availableExportTypes,\n  unvailableExportTypesReasons,\n  BillingStatusEnum,\n} from '../constants';\nimport { TransactionsExportOptions, UnavailableExportTypeReasons } from './transactions-export-options.model';\nimport { TransactionsListOptions } from './transactions-list-options.model';\nimport { TransactionsEnumValue } from './transactions-enum-value.model';\n\nexport interface TransactionsList {\n  items: Transaction[];\n  totalCount: number;\n  sort?: TransactionsSortOptions;\n  availableExportTypesHeader?: string;\n  httpResponseError?: HttpErrorResponse;\n  unavailableExportTypesReasonsHeader?: UnavailableExportTypeReasons;\n  initialRequest?: boolean;\n}\n/* eslint-disable no-redeclare*/\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsList {\n  // eslint-disable-next-line complexity\n  const processTransaction = (transaction: Transaction) => {\n    const amountSign = transaction.creditDebitIndicator === 'DBIT' ? -1 : 1;\n    const formattedTransaction: Transaction = {\n      ...transaction,\n      isPending: (function isPending(data) {\n        let result = false;\n        if (data && data.billingStatus) {\n          const billingStatus = data.billingStatus.toUpperCase();\n          result = billingStatus === BillingStatusEnum.pending || billingStatus === BillingStatusEnum.unbilled;\n        }\n\n        return result;\n      })(transaction),\n      ...(transaction.merchant\n        ? {\n            merchant: {\n              id: transaction.merchant.id,\n              name: transaction.merchant.name,\n              ...(transaction.merchant.logo ? { logo: transaction.merchant.logo } : {}),\n              ...(transaction.merchant.website ? { website: transaction.merchant.website } : {}),\n            },\n          }\n        : {}),\n    };\n\n    if (transaction.transactionAmountCurrency) {\n      const amountNumber = parseFloat(transaction.transactionAmountCurrency.amount);\n\n      formattedTransaction.transactionAmountCurrency = {\n        ...transaction.transactionAmountCurrency,\n        unsignedAmount: amountNumber,\n        amount: (amountSign * (amountNumber || 0)).toString(),\n      };\n    }\n\n    if (transaction.instructedAmountCurrency) {\n      const amountNumber = parseFloat(transaction.instructedAmountCurrency.amount);\n\n      formattedTransaction.instructedAmountCurrency = {\n        ...transaction.instructedAmountCurrency,\n        unsignedAmount: amountNumber,\n        amount: (amountSign * (amountNumber || 0)).toString(),\n      };\n    }\n\n    formattedTransaction.currencyExchangeAvailability =\n      !!transaction.instructedAmountCurrency &&\n      !!transaction.transactionAmountCurrency &&\n      !!transaction.currencyExchangeRate;\n\n    return formattedTransaction;\n  };\n\n  const processTransactions = (transactionsList: TransactionsList) => ({\n    ...transactionsList,\n    items: transactionsList.items.map(processTransaction),\n  });\n\n  const processTotalCountHeader = (totalCount: string | null) => (totalCount ? parseInt(totalCount, 10) : 0);\n\n  const processAvailableExportTypes = (availableExports: string | null) => availableExports || '';\n\n  const processUnavailableExportTypesReasons = (unavilableExportTypesReasonsValue: string | null) =>\n    JSON.parse(unavilableExportTypesReasonsValue || '{}');\n\n  const processSortFieldsDirectionHeader = (\n    sortFieldsDirection: string | null,\n  ): TransactionsSortOptions | undefined => {\n    if (sortFieldsDirection === null || !sortFieldsDirection.length) {\n      return undefined;\n    }\n\n    const sortOption = sortFieldsDirection\n      .split(',')[0]\n      .trim()\n      .replace(/\\s{2,}/g, ' ');\n\n    const [orderBy, direction] = sortOption.split(' ');\n\n    if (!orderBy || (direction !== 'ASC' && direction !== 'DESC')) {\n      throw new Error(\n        `Invalid value for \"initialSortOptions\" property.\n        Please use \"<orderBy> <direction>\" format, e.g., \"bookingDate DESC\",\n        or leave it empty.`,\n      );\n    }\n\n    return {\n      orderBy,\n      direction,\n    };\n  };\n\n  // eslint-disable-next-line no-inner-declarations\n  function padValueWithZeros(value: number, size = 2) {\n    return (value + '').padStart(size, '0');\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function formatDate(date: string | undefined) {\n    const safeDate = date || '';\n    if (/^[0-9]{4}-[0-9]{2}-[0-9]{2}/.exec(safeDate)) {\n      const localDate = new Date(safeDate);\n      const month = padValueWithZeros(localDate.getMonth() + 1);\n      const day = padValueWithZeros(localDate.getDate());\n      const year = localDate.getFullYear();\n\n      return `${year}-${month}-${day}`;\n    } else if (date !== undefined) {\n      console.error(`invalid date provided ${date}`);\n    }\n\n    return undefined;\n  }\n\n  export const fromHttpResponse = (response: HttpResponse<TransactionItem[]>): TransactionsList => {\n    const totalCount = processTotalCountHeader(response.headers.get(totalCountHeader));\n    const sort = processSortFieldsDirectionHeader(response.headers.get(sortFieldsDirectionHeader));\n    const availableExportTypesHeader = processAvailableExportTypes(response.headers.get(availableExportTypes));\n    const unavailableExportTypesReasonsHeader = processUnavailableExportTypesReasons(\n      response.headers.get(unvailableExportTypesReasons),\n    );\n\n    return processTransactions({\n      items: (response.body as Transaction[]) || [],\n      totalCount,\n      ...(sort ? { sort } : {}),\n      availableExportTypesHeader,\n      unavailableExportTypesReasonsHeader,\n    });\n  };\n\n  export const concat = (transactionsList1: TransactionsList, transactionsList2: TransactionsList) => {\n    if (transactionsList2.httpResponseError) {\n      return {\n        ...transactionsList1,\n        items: [...transactionsList1.items],\n        httpResponseError: transactionsList2.httpResponseError,\n      };\n    }\n\n    return {\n      items: [...transactionsList1.items, ...transactionsList2.items],\n      totalCount: transactionsList1.totalCount,\n      ...(transactionsList2.sort ? { sort: transactionsList2.sort } : {}),\n      ...(transactionsList2.availableExportTypesHeader\n        ? {\n            availableExportTypesHeader: transactionsList2.availableExportTypesHeader,\n          }\n        : {}),\n      ...(transactionsList2.unavailableExportTypesReasonsHeader\n        ? {\n            unavailableExportTypesReasonsHeader: transactionsList2.unavailableExportTypesReasonsHeader,\n          }\n        : {}),\n      httpResponseError: transactionsList2.httpResponseError,\n    };\n  };\n\n  export const hasLoadedAll = (transactionsList: TransactionsList) =>\n    transactionsList.items.length === transactionsList.totalCount;\n\n  export const toHttpRequest = (\n    listOptions: TransactionsListOptions | TransactionsExportOptions,\n  ): GetTransactionsRequestParams => {\n    const turnIntoArrayObject = (value: any, name: any, fn: (param: any) => any) => {\n      if (!value) {\n        return {};\n      }\n\n      return Array.isArray(value) ? { [name]: fn(value) } : { [name]: [fn(value)] };\n    };\n\n    const optionalItem = <T>(name: string, value: T) => (value !== undefined ? { [name]: value } : {});\n\n    const isTransactionListOption = (data: any): data is TransactionsListOptions =>\n      Object.prototype.hasOwnProperty.call(data, 'pagination');\n\n    const isTransactionExportOptions = (data: any): data is TransactionsExportOptions =>\n      Object.prototype.hasOwnProperty.call(data, 'exportType');\n\n    return {\n      ...turnIntoArrayObject(listOptions.account.arrangementId, 'arrangementsIds', (value) => value),\n      ...optionalItem('query', listOptions.search?.query),\n      ...optionalItem('amountGreaterThan', listOptions.filter?.amount?.from),\n      ...optionalItem('amountLessThan', listOptions.filter?.amount?.to),\n      ...optionalItem(\n        'bookingDateGreaterThan',\n        listOptions.filter?.date?.from === '' ? undefined : formatDate(listOptions.filter?.date?.from),\n      ),\n      ...optionalItem(\n        'bookingDateLessThan',\n        listOptions.filter?.date?.to === '' ? undefined : formatDate(listOptions.filter?.date?.to),\n      ),\n      ...optionalItem('categories', listOptions.filter?.categories),\n      ...optionalItem('fromCheckSerialNumber', listOptions.filter?.checkSerialNumber?.from),\n      ...optionalItem('toCheckSerialNumber', listOptions.filter?.checkSerialNumber?.to),\n      ...optionalItem('orderBy', listOptions.sort?.orderBy),\n      ...optionalItem('direction', listOptions.sort?.direction),\n      ...optionalItem('state', isTransactionListOption(listOptions) ? listOptions.state : undefined),\n      ...optionalItem('from', isTransactionListOption(listOptions) ? listOptions.pagination?.from : undefined),\n      ...optionalItem('size', isTransactionListOption(listOptions) ? listOptions.pagination?.size : undefined),\n      ...optionalItem('billingStatus', listOptions.filter?.billingStatus?.value),\n      ...optionalItem('creditDebitIndicator', listOptions.filter?.creditDebitIndicator?.value),\n      ...optionalItem('exportType', isTransactionExportOptions(listOptions) ? listOptions.exportType : undefined),\n      ...optionalItem('locale', isTransactionExportOptions(listOptions) ? listOptions.locale : undefined),\n      ...turnIntoArrayObject(listOptions.filter?.types, 'types', (value: TransactionsEnumValue) => value.value),\n    };\n  };\n}\n/* eslint-enable no-redeclare*/\n"]}