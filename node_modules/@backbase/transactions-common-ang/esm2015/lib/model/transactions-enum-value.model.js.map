{"version":3,"file":"transactions-enum-value.model.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-enum-value.model.ts"],"names":[],"mappings":"AAOA,gCAAgC;AAChC,2DAA2D;AAC3D,MAAM,KAAW,qBAAqB,CAiDrC;AAjDD,WAAiB,qBAAqB;IACpC,iDAAiD;IACjD,SAAS,WAAW,CAAC,IAAwB;QAC3C,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,EAAE,CAAC;SACX;QAED,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;IAC1E,CAAC;IAED,mEAAmE;IACnE,iDAAiD;IACjD,SAAS,gBAAgB,CAAC,SAAgC;QACxD,QAAQ,SAAS,CAAC,KAAK,EAAE;YACvB,KAAK,MAAM;gBACT,uCACK,SAAS,KACZ,IAAI,EAAE,QAAQ,IACd;YACJ,KAAK,MAAM;gBACT,uCACK,SAAS,KACZ,IAAI,EAAE,OAAO,IACb;YACJ,KAAK,QAAQ,CAAC;YACd,KAAK,UAAU,CAAC;YAChB,KAAK,SAAS;gBACZ,uCACK,SAAS,KACZ,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,IACpD;YACJ;gBACE,uCACK,SAAS,KACZ,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,KAAK,IACvC;SACL;IACH,CAAC;IAED,iDAAiD;IACjD,SAAS,iBAAiB,CAAC,UAAwC;QACjE,OAAO,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC1C,CAAC;IAED,SAAgB,gBAAgB,CAC9B,QAAkE;QAElE,OAAO,iBAAiB,CAAE,QAAQ,CAAC,IAAiC,IAAI,EAAE,CAAC,CAAC;IAC9E,CAAC;IAJe,sCAAgB,mBAI/B,CAAA;AACH,CAAC,EAjDgB,qBAAqB,KAArB,qBAAqB,QAiDrC;AACD,+BAA+B","sourcesContent":["import { HttpResponse } from '@angular/common/http';\nimport { EnumValuesByAttributeNameGetResponseBody } from '@backbase/data-ang/transactions';\n\nexport interface TransactionsEnumValue {\n  value?: string;\n  name?: string;\n}\n/* eslint-disable no-redeclare*/\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsEnumValue {\n  // eslint-disable-next-line no-inner-declarations\n  function toTitleCase(text: string | undefined) {\n    if (!text) {\n      return '';\n    }\n\n    return `${text.charAt(0).toUpperCase()}${text.substr(1).toLowerCase()}`;\n  }\n\n  // Until Angular supports i18n in typescript, this is the way to go\n  // eslint-disable-next-line no-inner-declarations\n  function processEnumValue(enumValue: TransactionsEnumValue) {\n    switch (enumValue.value) {\n      case 'CRDT':\n        return {\n          ...enumValue,\n          name: 'Credit',\n        };\n      case 'DBIT':\n        return {\n          ...enumValue,\n          name: 'Debit',\n        };\n      case 'BILLED':\n      case 'UNBILLED':\n      case 'PENDING':\n        return {\n          ...enumValue,\n          name: enumValue.name || toTitleCase(enumValue.value),\n        };\n      default:\n        return {\n          ...enumValue,\n          name: enumValue.name || enumValue.value,\n        };\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function processEnumValues(enumValues: Array<TransactionsEnumValue>) {\n    return enumValues.map(processEnumValue);\n  }\n\n  export function fromHttpResponse(\n    response: HttpResponse<EnumValuesByAttributeNameGetResponseBody[]>,\n  ): Array<TransactionsEnumValue> {\n    return processEnumValues((response.body as Array<{ value: string }>) || []);\n  }\n}\n/* eslint-enable no-redeclare*/\n"]}