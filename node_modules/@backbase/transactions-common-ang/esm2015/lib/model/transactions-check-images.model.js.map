{"version":3,"file":"transactions-check-images.model.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-check-images.model.ts"],"names":[],"mappings":"AAGA,MAAM,CAAN,IAAY,0BAGX;AAHD,WAAY,0BAA0B;IACpC,+CAAiB,CAAA;IACjB,iDAAmB,CAAA;AACrB,CAAC,EAHW,0BAA0B,KAA1B,0BAA0B,QAGrC;AAED,MAAM,CAAN,IAAY,0BAGX;AAHD,WAAY,0BAA0B;IACpC,6CAAe,CAAA;IACf,2CAAa,CAAA;AACf,CAAC,EAHW,0BAA0B,KAA1B,0BAA0B,QAGrC;AAWD,0DAA0D;AAC1D,MAAM,KAAW,uBAAuB,CAoBvC;AApBD,WAAiB,uBAAuB;IACtC,iDAAiD;IACjD,SAAS,aAAa,CAAC,WAAuC;QAC5D,OAAO;YACL,IAAI,EAAE,WAAW,CAAC,IAAkC;YACpD,QAAQ,EAAE,WAAW,CAAC,QAAsC;YAC5D,OAAO,EAAE,WAAW,CAAC,OAAO;SAC7B,CAAC;IACJ,CAAC;IAED,SAAgB,gBAAgB,CAC9B,QAAsD;QAEtD,MAAM,WAAW,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAClE,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAEpD,OAAO;YACL,MAAM,EAAE,YAAY;SACrB,CAAC;IACJ,CAAC;IATe,wCAAgB,mBAS/B,CAAA;AACH,CAAC,EApBgB,uBAAuB,KAAvB,uBAAuB,QAoBvC","sourcesContent":["import { HttpResponse } from '@angular/common/http';\nimport { TransactionCheckImagesResponse, TransactionCheckImagesItem } from '@backbase/data-ang/transactions';\n\nexport enum TransactionsCheckImageType {\n  PNG = 'image/png',\n  JPEG = 'image/jpeg',\n}\n\nexport enum TransactionsCheckImageSide {\n  FRONT = 'FRONT',\n  BACK = 'BACK',\n}\n\nexport interface TransactionsCheckImage {\n  side: TransactionsCheckImageSide;\n  mimeType: TransactionsCheckImageType;\n  content: string;\n}\n\nexport interface TransactionCheckImageResponse {\n  images: TransactionsCheckImage[];\n}\n//eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsCheckImages {\n  // eslint-disable-next-line no-inner-declarations\n  function processImages(imageObject: TransactionCheckImagesItem): TransactionsCheckImage {\n    return {\n      side: imageObject.side as TransactionsCheckImageSide,\n      mimeType: imageObject.mimeType as TransactionsCheckImageType,\n      content: imageObject.content,\n    };\n  }\n\n  export function fromHttpResponse(\n    response: HttpResponse<TransactionCheckImagesResponse>,\n  ): TransactionCheckImageResponse {\n    const imagesArray = (response.body && response.body.images) || [];\n    const mappedImages = imagesArray.map(processImages);\n\n    return {\n      images: mappedImages,\n    };\n  }\n}\n"]}