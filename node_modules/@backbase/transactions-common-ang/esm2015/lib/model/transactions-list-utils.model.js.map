{"version":3,"file":"transactions-list-utils.model.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-list-utils.model.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AACpE,OAAO,EAA2B,YAAY,EAAE,MAAM,mCAAmC,CAAC;AAC1F,OAAO,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAE7D,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,CAAM,EAAE,CAAM,EAAW,EAAE;IACnD,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;IACvB,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC;IACpB,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC;IAEpB,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,QAAQ,IAAI,EAAE,KAAK,EAAE;QAC3C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GACvB,CAAiB,OAA+C,EAAE,EAAE,CACpE,CAAC,MAA0B,EAAsB,EAAE,CACjD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;AAElE,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,WAAoC,EAAE,EAAE,CAAC,GAAG,EAAE,CACtF,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;AAEnG,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAChC,GAAqB,EACrB,IAAkE,EAClE,EAAE,CACF,IAAI,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;AAEpH,MAAM,CAAC,MAAM,mCAAmC,GAAG,CAAC,QAA4B,EAAE,EAAE;IAClF,MAAM,kBAAkB,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACvE,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,IAAI,kBAAkB,EAAE;QACtB,MAAM,MAAM,GAAG,kEAAkE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC3G,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;KACpC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC","sourcesContent":["import { HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { switchMap, publishReplay, refCount } from 'rxjs/operators';\nimport { TransactionsListOptions, OnLoadAction } from './transactions-list-options.model';\nimport { TransactionsList } from './transactions-list.model';\n\nexport const deepEqual = (x: any, y: any): boolean => {\n  const ok = Object.keys;\n  const tx = typeof x;\n  const ty = typeof y;\n\n  return x && y && tx === 'object' && tx === ty\n    ? ok(x).length === ok(y).length && ok(x).every((key) => deepEqual(x[key], y[key]))\n    : x === y;\n};\n\nexport const cacheRequest =\n  <Params, Result>(request: (params: Params) => Observable<Result>) =>\n  (source: Observable<Params>): Observable<Result> =>\n    source.pipe(switchMap(request), publishReplay(1), refCount());\n\nexport const multipleAccountsPredicate = (listOptions: TransactionsListOptions) => () =>\n  Array.isArray(listOptions.account.arrangementId) && listOptions.account.arrangementId.length > 1;\n\nexport const onLoadTransactions = (\n  acc: TransactionsList,\n  curr: { transactionsList: TransactionsList; onLoad: OnLoadAction },\n) =>\n  curr.onLoad === OnLoadAction.Append ? TransactionsList.concat(acc, curr.transactionsList) : curr.transactionsList;\n\nexport const getNameFromContentDispositionHeader = (response: HttpResponse<Blob>) => {\n  const contentDisposition = response.headers.get('Content-Disposition');\n  let fileName = '';\n  if (contentDisposition) {\n    const result = /filename[^;=\\n]*=(?:(\\\\?['\"])(.*?)\\1|(?:[^\\s]+'.*?')?([^;\\n]*))/i.exec(contentDisposition);\n    fileName = result ? result[2] : '';\n  }\n\n  return fileName;\n};\n"]}