export const DOCUMENT_LOAD_DELAY_MS = 400;
export var DocumentViewerType;
(function (DocumentViewerType) {
    DocumentViewerType["JPEG"] = "image/jpeg";
    DocumentViewerType["JPG"] = "image/jpg";
    DocumentViewerType["PNG"] = "image/png";
    DocumentViewerType["WEBP"] = "image/webp";
    DocumentViewerType["GIF"] = "image/gif";
    DocumentViewerType["BMP"] = "image/bmp";
})(DocumentViewerType || (DocumentViewerType = {}));
export const isDocumentViewerType = (type) => Object.values(DocumentViewerType).includes(type);
export const downloadFile = (url, fileName) => {
    const link = document.createElement('a');
    link.href = url;
    link.download = `${fileName}`;
    link.click();
};
export var KEY_CODES;
(function (KEY_CODES) {
    KEY_CODES["UP"] = "ArrowUp";
    KEY_CODES["DOWN"] = "ArrowDown";
    KEY_CODES["ENTER"] = "Enter";
    KEY_CODES["SPACE"] = " ";
    KEY_CODES["TAB"] = "Tab";
    KEY_CODES["BACKSPACE"] = "Backspace";
    KEY_CODES["DELETE"] = "Delete";
    KEY_CODES["ESCAPE"] = "Escape";
    KEY_CODES["X"] = "x";
    KEY_CODES["V"] = "v";
    KEY_CODES["LEFT"] = "ArrowLeft";
    KEY_CODES["RIGHT"] = "ArrowRight";
})(KEY_CODES || (KEY_CODES = {}));
const KEY_CODE_TO_CODE = {
    9: KEY_CODES.TAB,
    38: KEY_CODES.UP,
    40: KEY_CODES.DOWN,
    32: KEY_CODES.SPACE,
    13: KEY_CODES.ENTER,
    46: KEY_CODES.DELETE,
    8: KEY_CODES.BACKSPACE,
    27: KEY_CODES.ESCAPE,
    88: KEY_CODES.X,
    86: KEY_CODES.V,
};
function browserIsMsie() {
    return navigator.userAgent.indexOf('MSIE') > -1 || navigator.userAgent.indexOf('Trident/') > -1;
}
export function getKeyCode(event) {
    // NOTE: detect IE
    if (browserIsMsie()) {
        return KEY_CODE_TO_CODE[event.keyCode];
    }
    return event.code;
}
//# sourceMappingURL=document-viewer-commons.js.map