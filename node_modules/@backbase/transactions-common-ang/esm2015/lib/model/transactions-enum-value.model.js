/* eslint-disable no-redeclare*/
// eslint-disable-next-line @typescript-eslint/no-namespace
export var TransactionsEnumValue;
(function (TransactionsEnumValue) {
    // eslint-disable-next-line no-inner-declarations
    function toTitleCase(text) {
        if (!text) {
            return '';
        }
        return `${text.charAt(0).toUpperCase()}${text.substr(1).toLowerCase()}`;
    }
    // Until Angular supports i18n in typescript, this is the way to go
    // eslint-disable-next-line no-inner-declarations
    function processEnumValue(enumValue) {
        switch (enumValue.value) {
            case 'CRDT':
                return Object.assign(Object.assign({}, enumValue), { name: 'Credit' });
            case 'DBIT':
                return Object.assign(Object.assign({}, enumValue), { name: 'Debit' });
            case 'BILLED':
            case 'UNBILLED':
            case 'PENDING':
                return Object.assign(Object.assign({}, enumValue), { name: enumValue.name || toTitleCase(enumValue.value) });
            default:
                return Object.assign(Object.assign({}, enumValue), { name: enumValue.name || enumValue.value });
        }
    }
    // eslint-disable-next-line no-inner-declarations
    function processEnumValues(enumValues) {
        return enumValues.map(processEnumValue);
    }
    function fromHttpResponse(response) {
        return processEnumValues(response.body || []);
    }
    TransactionsEnumValue.fromHttpResponse = fromHttpResponse;
})(TransactionsEnumValue || (TransactionsEnumValue = {}));
/* eslint-enable no-redeclare*/
//# sourceMappingURL=transactions-enum-value.model.js.map