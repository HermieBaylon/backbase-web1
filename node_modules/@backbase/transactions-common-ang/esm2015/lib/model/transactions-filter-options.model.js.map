{"version":3,"file":"transactions-filter-options.model.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/transactions-filter-options.model.ts"],"names":[],"mappings":"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","sourcesContent":["import { TransactionsEnumValue } from './transactions-enum-value.model';\n\nexport interface TransactionsFilterOptions {\n  creditDebitIndicator?: TransactionsEnumValue;\n  types?: TransactionsEnumValue[] | TransactionsEnumValue;\n  billingStatus?: TransactionsEnumValue;\n  amount?: {\n    from?: number;\n    to?: number;\n  };\n  date?: {\n    from?: string;\n    to?: string;\n  };\n  categories?: string[];\n  checkSerialNumber?: {\n    from?: number;\n    to?: number;\n  };\n}\n/* eslint-disable no-redeclare*/\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransactionsFilterOptions {\n  export function isEmpty(options: TransactionsFilterOptions | object): boolean {\n    return Object.values(options)\n      .filter((value) => typeof value !== 'undefined')\n      .every((value) => !value || (typeof value === 'object' && isEmpty(value)));\n  }\n\n  // converts a Date object to `dddd-MM-yy` string format\n  // eslint-disable-next-line complexity\n  const formatDate = (date: Date) => {\n    const year = date.getFullYear().toString();\n    const month = (date.getMonth() + 1).toString();\n    const day = date.getDate().toString();\n\n    return `${year}-${month[1] ? month : '0' + month[0]}-${day[1] ? day : '0' + day[0]}`;\n  };\n\n  export function toHttpGetParams(options: TransactionsFilterOptions = {}) {\n    const params: any = {};\n\n    const setIfExists = (paramName: string, conditionFn: (option: any) => any, valueFn: (option: any) => any) => {\n      if (conditionFn(options)) {\n        params[paramName] = valueFn(options);\n      }\n    };\n\n    setIfExists(\n      'creditDebitIndicator',\n      (option) => option.creditDebitIndicator !== undefined && option.creditDebitIndicator.value !== undefined,\n      (option) => option.creditDebitIndicator.value,\n    );\n    setIfExists(\n      'types',\n      (option) => option.type !== undefined && option.type.value !== undefined,\n      (option) => (Array.isArray(option.type.value) ? option.type.value : [option.type.value]),\n    );\n    setIfExists(\n      'billingStatus',\n      (option) => option.billingStatus !== undefined && option.billingStatus.value !== undefined,\n      (option) => option.billingStatus.value,\n    );\n    setIfExists(\n      'amountGreaterThan',\n      (option) => option.amount && option.amount.from,\n      (option) => option.amount.from,\n    );\n    setIfExists(\n      'amountLessThan',\n      (option) => option.amount && option.amount.to,\n      (option) => option.amount.to,\n    );\n    setIfExists(\n      'bookingDateGreaterThan',\n      (option) => option.date && option.date.from && Object.keys(option.date.from).length,\n      (option) => formatDate(new Date(option.date.from)),\n    );\n    setIfExists(\n      'bookingDateLessThan',\n      (option) => option.date && option.date.to && Object.keys(option.date.to).length,\n      (option) => formatDate(new Date(option.date.to)),\n    );\n    setIfExists(\n      'fromCheckSerialNumber',\n      (option) => option.checkSerialNumber && option.checkSerialNumber.from,\n      (option) => option.checkSerialNumber.from,\n    );\n    setIfExists(\n      'toCheckSerialNumber',\n      (option) => option.checkSerialNumber && option.checkSerialNumber.to,\n      (option) => option.checkSerialNumber.to,\n    );\n\n    return params;\n  }\n  // eslint-disable-next-line complexity\n  export function fromHttpGetParams(params: any): TransactionsFilterOptions {\n    const options: TransactionsFilterOptions = {};\n\n    if (params.creditDebitIndicator) {\n      options.creditDebitIndicator = { value: params.creditDebitIndicator };\n    }\n\n    if (params.type) {\n      if (Array.isArray(params.type)) {\n        options.types = params.type.map((value: any) => ({ value }));\n      } else {\n        options.types = { value: params.type };\n      }\n    }\n\n    if (params.billingStatus) {\n      options.billingStatus = { value: params.billingStatus };\n    }\n\n    if (params.amountGreaterThan) {\n      options.amount = { from: parseInt(params.amountGreaterThan, 10) };\n    }\n\n    if (params.amountLessThan) {\n      options.amount = {\n        ...options.amount,\n        to: parseInt(params.amountLessThan, 10),\n      };\n    }\n\n    if (params.bookingDateGreaterThan) {\n      options.date = {\n        from: params.bookingDateGreaterThan,\n      };\n    }\n\n    if (params.bookingDateLessThan) {\n      options.date = {\n        ...options.date,\n        to: params.bookingDateLessThan,\n      };\n    }\n\n    if (params.fromCheckSerialNumber) {\n      options.checkSerialNumber = {\n        from: parseInt(params.fromCheckSerialNumber, 10),\n      };\n    }\n\n    if (params.toCheckSerialNumber) {\n      options.checkSerialNumber = {\n        ...options.checkSerialNumber,\n        to: parseInt(params.toCheckSerialNumber, 10),\n      };\n    }\n\n    return options;\n  }\n}\n/* eslint-enable no-redeclare*/\n"]}