{"version":3,"file":"messages.model.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/model/messages.model.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs';\n\nexport interface MessageSender {\n  /**\n   * Message sender id\n   */\n  id?: string;\n  /**\n   * Message sender name\n   */\n  name: string;\n}\n\nexport interface Message {\n  /**\n   * Subject of a message\n   */\n  subject: string;\n  /**\n   * BASE64-encoded text of a message\n   */\n  body: string;\n  /**\n   * Topic id a message belongs to. Required for a FI Client user request\n   */\n  topic: string;\n  sender?: MessageSender;\n  /**\n   * List of attachment ids to be added to the conversation\n   */\n  attachments?: Array<string>;\n}\n\nexport interface MessagesResponse {\n  id: string;\n}\n\nexport interface MessagesDisputeAndInquiryConfig {\n  byBillingStatus: boolean;\n  byEligitibilityDays: number;\n  byTransactionTypes: string[];\n}\n\nexport interface InquireAndDisputeFile {\n  id?: string;\n  name: string;\n  size: number;\n  content: Observable<ArrayBuffer>;\n}\n\nexport type SubjectReport = 'inquire' | 'dispute';\n\nexport type SubjectReportMap = Record<SubjectReport, string>;\n\nexport interface MessageForm {\n  topic: SubjectReport;\n  body: string;\n  attachments: Array<InquireAndDisputeFile>;\n}\n\nexport type InquireAndDisputeTopics = Record<SubjectReport, string>;\n"]}