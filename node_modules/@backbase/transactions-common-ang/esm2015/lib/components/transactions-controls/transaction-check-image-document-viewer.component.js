import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import { of } from 'rxjs';
import { getKeyCode, KEY_CODES } from '../../model/UI/document-viewer-commons';
import * as i0 from "@angular/core";
import * as i1 from "../document-viewer-ui/document-viewer-backdrop/document-viewer-backdrop.component";
import * as i2 from "../document-viewer-ui/document-viewer-container/document-viewer-container.component";
import * as i3 from "@angular/cdk/a11y";
export class TransactionCheckImageDocumentViewerComponent {
    constructor() {
        this.position = 0;
        this.closeViewer = new EventEmitter();
    }
    toDocumentRefSrc(...images) {
        return images
            .filter((item) => !!item)
            .map((image) => {
            const { mimeType, content, side } = image;
            const fileType = image === null || image === void 0 ? void 0 : image.mimeType.replace('image/', '');
            const filename = `${this.imageCheckNumber}-${side}.${fileType}`;
            return {
                filename,
                filetype: image === null || image === void 0 ? void 0 : image.mimeType,
                src: of(`data:${mimeType};base64,${content}`),
            };
        });
    }
    get imagesRefsSrc() {
        return this.toDocumentRefSrc(this.imageFront, this.imageBack);
    }
    closeDocumentViewer() {
        this.closeViewer.emit();
    }
    trapKeyEvent(event) {
        if (getKeyCode(event) !== KEY_CODES.ESCAPE) {
            event.stopPropagation();
        }
    }
}
TransactionCheckImageDocumentViewerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionCheckImageDocumentViewerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TransactionCheckImageDocumentViewerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionCheckImageDocumentViewerComponent, selector: "bb-transaction-check-image-document-viewer", inputs: { imageCheckNumber: "imageCheckNumber", imageFront: "imageFront", imageBack: "imageBack", position: "position" }, outputs: { closeViewer: "closeViewer" }, ngImport: i0, template: "<div (keydown)=\"trapKeyEvent($event)\" (keyup)=\"trapKeyEvent($event)\">\n  <bb-document-viewer-backdrop></bb-document-viewer-backdrop>\n  <bb-document-viewer-container\n    [documentRefSrcs]=\"imagesRefsSrc\"\n    [activeDocumentRefIdx]=\"position\"\n    cdkTrapFocus\n    (close)=\"closeDocumentViewer()\"\n  ></bb-document-viewer-container>\n</div>\n", components: [{ type: i1.DocumentViewerBackdropComponent, selector: "bb-document-viewer-backdrop", inputs: ["options"] }, { type: i2.DocumentViewerContainerComponent, selector: "bb-document-viewer-container", inputs: ["documentRefSrcs", "activeDocumentRefIdx", "options"], outputs: ["close"] }], directives: [{ type: i3.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionCheckImageDocumentViewerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transaction-check-image-document-viewer',
                    templateUrl: 'transaction-check-image-document-viewer.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { imageCheckNumber: [{
                type: Input
            }], imageFront: [{
                type: Input
            }], imageBack: [{
                type: Input
            }], position: [{
                type: Input
            }], closeViewer: [{
                type: Output
            }] } });
//# sourceMappingURL=transaction-check-image-document-viewer.component.js.map