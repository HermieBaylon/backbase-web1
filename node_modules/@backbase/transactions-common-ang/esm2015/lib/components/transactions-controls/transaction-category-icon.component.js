import { Component, Input, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, } from '@angular/core';
import { TransactionsIconCategoriesFactoryService } from '../../services/transactions-icon-categories-factory.service';
import * as i0 from "@angular/core";
import * as i1 from "../../services/transactions-icon-categories-factory.service";
import * as i2 from "@angular/common";
export class TransactionCategoryIconComponent {
    constructor(transactionsIconCategoriesFactory, cd) {
        this.transactionsIconCategoriesFactory = transactionsIconCategoriesFactory;
        this.cd = cd;
        /**
         * Whether to show the icon in a circle.
         */
        this.circle = false;
        /* eslint-enable */
        /**
         * Determines if the image is done loading.
         */
        this.hasImageLoaded = false;
    }
    ngOnInit() {
        if (this.transaction === undefined) {
            throw new Error(`"transaction" input is required in "${this.constructor.name}"`);
        }
        this.transactionIcon = this.transactionsIconCategoriesFactory.create(this.transaction);
    }
    ngAfterViewInit() {
        if (this.categoryImage) {
            this.categoryImage.nativeElement.onload = () => {
                this.hasImageLoaded = true;
                this.cd.markForCheck();
            };
        }
    }
}
TransactionCategoryIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionCategoryIconComponent, deps: [{ token: i1.TransactionsIconCategoriesFactoryService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
TransactionCategoryIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionCategoryIconComponent, selector: "bb-transaction-category-icon", inputs: { transaction: "transaction", circle: "circle", size: "size" }, viewQueries: [{ propertyName: "categoryImage", first: true, predicate: ["categoryImage"], descendants: true }], ngImport: i0, template: "<div\n  aria-hidden=\"true\"\n  class=\"bb-transaction-category bb-transaction-category--enriched\"\n  title=\"{{ transaction?.merchant ? transaction?.merchant?.name : transactionIcon?.title }}\"\n  [ngClass]=\"[\n    circle ? 'bb-transaction-category-icon-circle' : 'bb-transaction-category-icon',\n    size ? 'bb-transaction-category--' + size : '',\n    !transaction?.merchant?.logo || !hasImageLoaded ? transactionIcon?.formatClassName() : ''\n  ]\"\n>\n  <img\n    class=\"bb-transaction-category__image\"\n    *ngIf=\"transaction?.merchant?.logo\"\n    [hidden]=\"!hasImageLoaded\"\n    [src]=\"transaction?.merchant?.logo\"\n    #categoryImage\n  />\n</div>\n", directives: [{ type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionCategoryIconComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transaction-category-icon',
                    templateUrl: './transaction-category-icon.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.TransactionsIconCategoriesFactoryService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { transaction: [{
                type: Input
            }], circle: [{
                type: Input
            }], size: [{
                type: Input
            }], categoryImage: [{
                type: ViewChild,
                args: ['categoryImage']
            }] } });
//# sourceMappingURL=transaction-category-icon.component.js.map