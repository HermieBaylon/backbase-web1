import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { TransactionsDetailsLoadingState } from '../../model/transactions-details.model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "./transactions-map-ui.component";
import * as i3 from "@backbase/ui-ang/loading-indicator";
import * as i4 from "@angular/common";
export class TransactionGeoLocationMapComponent {
    constructor() {
        this.loadingStateEnum = TransactionsDetailsLoadingState;
    }
}
TransactionGeoLocationMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionGeoLocationMapComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TransactionGeoLocationMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionGeoLocationMapComponent, selector: "bb-transaction-geo-location-map", inputs: { transaction: "transaction", loadingStatus: "loadingStatus" }, ngImport: i0, template: "<div class=\"bb-transactions-geolocation\">\n  <span class=\"bb-inline-stack bb-block bb-block--sm\" *ngIf=\"transaction?.location?.address\">\n    <bb-icon-ui class=\"bb-inline-stack__item\" name=\"location-on\" size=\"md\"></bb-icon-ui>\n    <span class=\"bb-inline-stack__item bb-transactions-geolocation__address\">{{ transaction?.location?.address }}</span>\n  </span>\n  <ng-container *ngIf=\"loadingStatus !== loadingStateEnum.notStarted\">\n    <ng-container *ngIf=\"loadingStatus !== loadingStateEnum.notLoaded\">\n      <ng-container *ngIf=\"loadingStatus !== loadingStateEnum.error; else errorState\">\n        <ng-container *ngIf=\"loadingStatus !== loadingStateEnum.loading; else loadingState\">\n          <bb-transactions-map-ui [location]=\"transaction?.location\"></bb-transactions-map-ui>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <!-- Error state is not defined yet -->\n</ng-template>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2.TransactionsMapUiComponent, selector: "bb-transactions-map-ui", inputs: ["location"] }, { type: i3.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionGeoLocationMapComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transaction-geo-location-map',
                    templateUrl: './transaction-geo-location-map.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { transaction: [{
                type: Input
            }], loadingStatus: [{
                type: Input
            }] } });
//# sourceMappingURL=transaction-geo-location-map.component.js.map