import { Component, ViewChild, Input, ChangeDetectionStrategy } from '@angular/core';
import * as i0 from "@angular/core";
export class TransactionsMapUiComponent {
    buildMapOptions(location) {
        if (location.latitude && location.longitude) {
            return {
                center: {
                    lat: location.latitude,
                    lng: location.longitude,
                },
                zoom: 10,
                disableDefaultUI: true,
                zoomControl: false,
                styles: [
                    {
                        featureType: 'poi',
                        stylers: [{ visibility: 'off' }],
                    },
                ],
            };
        }
        return undefined;
    }
    getFullAddress(location) {
        return encodeURI(`${location.latitude}, ${location.longitude}`);
    }
    ngAfterViewInit() {
        if (this.location && this.mapContainer) {
            const options = this.buildMapOptions(this.location);
            const map = new google.maps.Map(this.mapContainer.nativeElement, options);
            if (this.location && this.location.latitude && this.location.longitude) {
                const mapUrl = this.getFullAddress(this.location);
                const marker = new google.maps.Marker({
                    position: {
                        lat: this.location.latitude,
                        lng: this.location.longitude,
                    },
                    map,
                });
                marker.addListener('click', () => {
                    window.open('https://www.google.com/maps/dir//' + mapUrl, '_blank');
                });
            }
        }
    }
}
TransactionsMapUiComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsMapUiComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TransactionsMapUiComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionsMapUiComponent, selector: "bb-transactions-map-ui", inputs: { location: "location" }, viewQueries: [{ propertyName: "mapContainer", first: true, predicate: ["bbMapContainer"], descendants: true }], ngImport: i0, template: "<div class=\"bb-transcations-geolocation-map\" #bbMapContainer></div>\n", changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsMapUiComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transactions-map-ui',
                    templateUrl: 'transactions-map-ui.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { mapContainer: [{
                type: ViewChild,
                args: ['bbMapContainer']
            }], location: [{
                type: Input
            }] } });
//# sourceMappingURL=transactions-map-ui.component.js.map