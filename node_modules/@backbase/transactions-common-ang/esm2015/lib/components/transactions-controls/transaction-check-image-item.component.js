import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
import * as i2 from "@backbase/ui-ang/icon";
import * as i3 from "./accessibility-keyboard.directive";
import * as i4 from "@angular/common";
export class TransactionCheckImageItemComponent {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
        this.sideText = '';
        this.imageAlt = '';
        this.selectImage = new EventEmitter();
    }
    get imageFileName() {
        const fileType = this.image ? this.image.mimeType.replace('image/', '') : '';
        const side = this.image ? this.image.side : '';
        return `${this.imageCheckNumber}-${side}.${fileType}`;
    }
    get formatedImageSource() {
        const mimeType = this.image ? this.image.mimeType : '';
        const content = this.image ? this.image.content : '';
        return `data:${mimeType};base64,${content}`;
    }
    get imageCheckNumber() {
        return this.transaction && this.transaction.checkSerialNumber;
    }
    createImageSource() {
        return this.sanitizer.bypassSecurityTrustResourceUrl(this.formatedImageSource);
    }
    toggleDocumentViewer() {
        this.selectImage.emit();
    }
}
TransactionCheckImageItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionCheckImageItemComponent, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Component });
TransactionCheckImageItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionCheckImageItemComponent, selector: "bb-transaction-check-image-item", inputs: { image: "image", transaction: "transaction", sideText: "sideText", imageAlt: "imageAlt" }, outputs: { selectImage: "selectImage" }, ngImport: i0, template: "<ng-container>\n  <span>{{ sideText }}</span>\n  <div\n    role=\"img\"\n    data-role=\"check-image-item\"\n    class=\"bb-check-img-container\"\n    (click)=\"!!image && toggleDocumentViewer()\"\n    attr.aria-label=\"{{ sideText }} image container\"\n    i18n-aria-label=\"\n      Image container for front or back check image@@transaction-check-image-item.aria-label.image-container\"\n    bbAccessibilityKeyboard\n  >\n    <ng-container *ngIf=\"!!image; else noImage\">\n      <div class=\"bb-check-img-container-state\">\n        <div class=\"bb-check-img-container-state__container\">\n          <bb-icon-ui\n            name=\"remove-red-eye\"\n            size=\"lg\"\n            color=\"white\"\n            aria-label=\"Expand Image\"\n            i18n-aria-label=\"Expand image@@transaction-check-image-item.aria-label.expand-icon\"\n          ></bb-icon-ui>\n        </div>\n      </div>\n      <img class=\"bb-check-img-container__img\" alt=\"{{ imageAlt }}\" [src]=\"createImageSource()\" />\n    </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #noImage>\n  <div class=\"bb-check-no-img\">\n    <div class=\"bb-check-no-img__icon\">\n      <bb-icon-ui\n        name=\"broken-image\"\n        size=\"lg\"\n        aria-label=\"No image\"\n        i18n-aria-label=\"No image@@transaction-check-image-item.aria-label.no-image-icon\"\n      ></bb-icon-ui>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i2.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3.AccessibilityKeyboardDirective, selector: "[bbAccessibilityKeyboard]" }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionCheckImageItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transaction-check-image-item',
                    templateUrl: 'transaction-check-image-item.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }]; }, propDecorators: { image: [{
                type: Input
            }], transaction: [{
                type: Input
            }], sideText: [{
                type: Input
            }], imageAlt: [{
                type: Input
            }], selectImage: [{
                type: Output
            }] } });
//# sourceMappingURL=transaction-check-image-item.component.js.map