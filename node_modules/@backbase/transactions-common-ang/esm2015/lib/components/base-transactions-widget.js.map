{"version":3,"file":"base-transactions-widget.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/base-transactions-widget.ts"],"names":[],"mappings":"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","sourcesContent":["import { map, pluck } from 'rxjs/operators';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\nimport { WidgetPropertiesService } from '../services/widget-properties.service';\nimport { Input, Directive, Output, EventEmitter } from '@angular/core';\nimport { defaultAvailableFiltersConfig, deserialize, filterInputParameters, parseSortOptions } from '../constants';\nimport { AvailableFiltersConfig } from '../model/available-filters.model';\nimport { Transaction } from '../model/transaction.model';\nimport { TransactionsList } from '../model/transactions-list.model';\nimport { EndpointType } from '../services/widget-properties.service';\n\n/* eslint-disable */\n@Directive()\nexport class BaseTransactionsWidget {\n  /**\n   * API key needed for the google maps to work.\n   */\n  @Input() googleAPIKey: string | undefined;\n\n  @Input('initialFilterOptions') set initialFilterOptionsValue(value: string) {\n    const deseralizedValue = deserialize(value);\n    this.initialFilterOptionsSubject.next(TransactionsFilterOptions.fromHttpGetParams(deseralizedValue));\n  }\n  @Input('initialSortOptions') set initialSortOptionsValue(value: string) {\n    const options = parseSortOptions(value);\n    this.initialSortOptionsSubject.next(options);\n  }\n\n  @Input() pageSize: number | undefined;\n  @Input() maxNavPages: number | undefined;\n  @Input() paginationType: string | undefined;\n  @Input() showControls: boolean | undefined;\n  @Input() showChangeCategory: boolean | undefined;\n  @Input() showPendingTransactionsOnTop: boolean | undefined;\n  @Input() showCheckImage: boolean | undefined;\n  @Input() showManageNotes: boolean | undefined;\n  @Input() getOrPostEndpoints: EndpointType | undefined;\n  @Input() enableDisputeAndInquiry: boolean = false;\n  @Input() disputeByBillingStatus: boolean | undefined;\n  @Input() disputeEligibilityDays: number | undefined;\n  @Input() disputeTransactionTypes: string | undefined;\n  @Input() inquireTopicId: string | undefined;\n  @Input() disputeTopicId: string | undefined;\n  @Input() availableFiltersConfig: AvailableFiltersConfig = defaultAvailableFiltersConfig;\n\n  @Output() transactionSelected = new EventEmitter<Transaction>();\n  @Output() transactionsLoaded = new EventEmitter<TransactionsList | null>();\n\n  private readonly initialFilterOptionsSubject = new BehaviorSubject<TransactionsFilterOptions | undefined>(undefined);\n  private readonly initialSortOptionsSubject = new BehaviorSubject<TransactionsSortOptions | undefined>(undefined);\n\n  readonly selectedAccount = this.getRouteParam(this.route, 'selectedAccount').pipe(\n    map((selectedAccount) => selectedAccount as string),\n    map((selectedAccount) =>\n      typeof selectedAccount !== 'undefined' && selectedAccount.includes(',')\n        ? selectedAccount.split(',')\n        : selectedAccount !== undefined\n        ? [selectedAccount]\n        : undefined,\n    ),\n  );\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // Ensure that level that has actual value keeps it from being cleared.\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map((params) => params[0] || params[1]),\n    );\n  }\n\n  get initialFilterOptions(): Observable<TransactionsFilterOptions> {\n    return filterInputParameters(\n      this.initialFilterOptionsSubject.asObservable(),\n      this.widgetProperties.initialFilterOptions,\n    );\n  }\n\n  get initialSortOptions(): Observable<TransactionsSortOptions | undefined> {\n    return filterInputParameters(\n      this.initialSortOptionsSubject.asObservable(),\n      this.widgetProperties.initialSortOptions,\n    );\n  }\n\n  constructor(protected readonly route: ActivatedRoute, protected readonly widgetProperties: WidgetPropertiesService) {}\n\n  onDetailOpen(transaction: Transaction) {\n    this.transactionSelected.emit(transaction);\n  }\n\n  onTransactionsLoaded(transactionsList: TransactionsList | null) {\n    this.transactionsLoaded.emit(transactionsList);\n  }\n}\n/* eslint-enable */\n"]}