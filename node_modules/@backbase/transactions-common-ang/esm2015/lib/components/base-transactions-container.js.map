{"version":3,"file":"base-transactions-container.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/base-transactions-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, combineLatest, iif, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { TransactionsBackendError } from '../model/transactions-backend-error.model';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { TransactionsList } from '../model/transactions-list.model';\nimport { LoadingState, TransactionsService } from '../services/transactions.service';\nimport { EndpointType, PaginationType, WidgetPropertiesService } from '../services/widget-properties.service';\nimport { TransactionsListOptions } from '../model/transactions-list-options.model';\nimport { map, mergeMap, publishReplay, refCount, scan, takeUntil, tap } from 'rxjs/operators';\nimport { Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport { TransactionsSortOptions } from '../model/transactions-sort-options.model';\n\nimport { filterInputParameters, notificationTtl } from '../constants';\nimport {\n  combineExportTypesConfig,\n  TransactionsExportConfig,\n  TransactionsExportTypeElement,\n} from '../model/transactions-export-options.model';\nimport { PendingTransactionsService } from '../services/pending-transactions.service';\nimport { TransactionCheckImageResponse } from '../model/transactions-check-images.model';\nimport { Transaction } from '../model/transaction.model';\nimport { TransactionDetailsService } from '../services/transaction-details.service';\nimport { TransactionsDetailsLoading } from '../model/transactions-details.model';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { getNameFromContentDispositionHeader } from '../model/transactions-list-utils.model';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { InquireAndDisputeTopics } from '../model/messages.model';\nimport { AvailableFilters, AvailableFiltersConfig } from '../model/available-filters.model';\nimport { AvailableFiltersConfigService } from '../services/available-filters-config.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Directive()\n// eslint-disable-next-line\nexport class BaseTransactionsContainer implements OnInit, OnDestroy {\n  // eslint-disable-next-line\n  @ViewChild('notificationErrorUpdateHeader')\n  notificationErrorUpdateHeaderTemplate: TemplateRef<string> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationErrorUpdateMessage')\n  notificationErrorUpdateMessageTemplate: TemplateRef<string> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationServerErrorHeader', { static: false })\n  notificationServerErrorHeader: TemplateRef<string> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationServerErrorMessage', { static: false })\n  notificationServerErrorMessage: TemplateRef<string> | undefined;\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  private readonly apiKeySubject = new BehaviorSubject<string | undefined>(undefined);\n  /**\n   * API key needed for the google maps to work.\n   */\n  // eslint-disable-next-line\n  @Input()\n  set googleAPIKey(key: string | undefined) {\n    this.apiKeySubject.next(key);\n  }\n  /**\n   * Observable of the arrangement ID this component should retrieve the transactions for.\n   */\n  @Input() selectedAccount: Observable<Array<string> | undefined> | undefined;\n  /**\n   * Observable of options to initialize the filter with.  By default, it is empty.\n   */\n  @Input() initialFilterOptions: Observable<TransactionsFilterOptions> = of({});\n  /**\n   * Observable of options to initialize the sort options with.  By default, it is empty.\n   */\n  @Input() initialSortOptions: Observable<TransactionsSortOptions | undefined> = of(undefined);\n\n  /**\n   * input parameters that will take the place of model properties--\n   */\n\n  @Input('pageSize') set pageSizeValue(value: number | undefined) {\n    this.pageSizeSubject.next(value);\n  }\n  @Input('maxNavPages') set maxNavPagesValue(value: number | undefined) {\n    this.maxNavPagesSubject.next(value);\n  }\n  @Input('paginationType') set paginationTypeValue(value: string | undefined) {\n    this.paginationTypeSubject.next(value as PaginationType);\n  }\n  @Input('showControls') set showControlsValue(value: boolean | undefined) {\n    this.showControlsSubject.next(value);\n  }\n  @Input('showChangeCategory') set showChangeCategoryValue(value: boolean | undefined) {\n    this.showChangeCategorySubject.next(value);\n  }\n  @Input('showPendingTransactionsOnTop') set showPendingTransactionsOnTopValue(value: boolean | undefined) {\n    this.showPendingTransactionsOnTopSubject.next(value);\n  }\n  @Input('showCheckImage') set showCheckImageValue(value: boolean | undefined) {\n    this.showCheckImageSubject.next(value);\n  }\n  @Input('showManageNotes') set showManageNotesValue(value: boolean | undefined) {\n    this.showManageNotesSubject.next(value);\n  }\n  @Input('getOrPostEndpoints') set getOrPostEndpointsValue(value: EndpointType | undefined) {\n    this.getOrPostEndpointsSubject.next(value);\n  }\n  @Input('disputeByBillingStatus') set disputeByBillingStatusValue(value: string | boolean | undefined) {\n    this.disputeByBillingStatusSubject.next(typeof value === 'boolean' ? value : value === 'true');\n  }\n  @Input('disputeEligibilityDays') set disputeEligibilityDaysValue(value: number | undefined) {\n    this.disputeEligibilityDaysSubject.next(value);\n  }\n  @Input('disputeTransactionTypes') set disputeTransactionTypesValue(value: string | undefined) {\n    this.disputeTransactionTypesSubject.next((value || '').split(','));\n  }\n\n  @Input('enableDisputeAndInquiry') set enableDisputeAndInquiryValue(value: string | boolean | undefined) {\n    this.enableDisputeAndInquirySubject.next(typeof value === 'boolean' ? value : value === 'true');\n  }\n  @Input('availableFiltersConfig') set availableFiltersValue(availableFiltersConfig: AvailableFiltersConfig) {\n    this.availableFiltersConfig.next(availableFiltersConfig);\n  }\n\n  @Input('inquireTopicId') inquireTopicIdValue: string | undefined;\n  @Input('disputeTopicId') disputeTopicIdValue: string | undefined;\n\n  @Output() transactionSelected = new EventEmitter<any>();\n  @Output() transactionsLoaded = new EventEmitter<TransactionsList | null>();\n\n  private pageSizeSubject = new BehaviorSubject<number | undefined>(undefined);\n  private maxNavPagesSubject = new BehaviorSubject<number | undefined>(undefined);\n  private paginationTypeSubject = new BehaviorSubject<PaginationType | undefined>(undefined);\n  private showControlsSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showChangeCategorySubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showPendingTransactionsOnTopSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showCheckImageSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private showManageNotesSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private getOrPostEndpointsSubject = new BehaviorSubject<EndpointType | undefined>(undefined);\n  private disputeByBillingStatusSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private disputeEligibilityDaysSubject = new BehaviorSubject<number | undefined>(undefined);\n  private disputeTransactionTypesSubject = new BehaviorSubject<Array<string> | undefined>(undefined);\n  private enableDisputeAndInquirySubject = new BehaviorSubject<boolean>(false);\n  private inquireTopicIdSubject = new BehaviorSubject<string>('');\n  private disputeTopicIdSubject = new BehaviorSubject<string>('');\n  /** end input parameters--- */\n\n  /**\n   * Information about the backend error, if it occurs.\n   */\n  /**\n   * @deprecated will be removed in 11.0.0\n   */\n  get error(): TransactionsBackendError | undefined {\n    return this.errors && this.errors[0];\n  }\n\n  errors: TransactionsBackendError[] | undefined;\n  /**\n   * Observable of the transactions list.\n   */\n  transactionsList: Observable<TransactionsList | null> | undefined;\n  /**\n   * Observable of the transactions list.\n   */\n  pendingTransactionsList: Observable<TransactionsList | null> | undefined;\n  /**\n   * Observable of the current page.\n   */\n  currentPage: Observable<number> | undefined;\n  /**\n   * Observable of the loading state of the service.\n   */\n  loadingState: Observable<LoadingState> | undefined;\n  /**\n   * Observable of the loading state of the pending transactions service.\n   */\n  loadingPendingState: Observable<LoadingState> | undefined;\n  loadingDetails: Observable<TransactionsDetailsLoading> | undefined;\n  /**\n   * Events registered to transactions widgets\n   */\n  private registeredRefreshTransactionsListEvents: string[] = [];\n  private unsubscribeSubject = new Subject<void>();\n  /**\n   * Subject that listens the transactionsList observable and provides the export types\n   */\n  exportConfig = new BehaviorSubject<TransactionsExportConfig>({});\n  exportErrorMessagesRef: { [key: string]: TemplateRef<string> | undefined } = {};\n  storedExportType: TransactionsExportTypeElement | undefined;\n  numberOfResultsFound = new ReplaySubject<number>();\n  numberOfResultsDisplayed = new ReplaySubject<number>();\n  checkImagesList: Observable<TransactionCheckImageResponse> | undefined;\n  transactionDetailsLoadingStatus: Observable<TransactionsDetailsLoading> | undefined;\n  availableFiltersConfig: ReplaySubject<AvailableFiltersConfig> = new ReplaySubject<AvailableFiltersConfig>(1);\n  availableFilters: Observable<AvailableFilters> = this.availableFiltersConfigService.availableFilters$;\n\n  private inquireTopicId = filterInputParameters(\n    this.inquireTopicIdSubject.asObservable(),\n    this.widgetProperties.inquireTopicId,\n  );\n\n  private disputeTopicId = filterInputParameters(\n    this.disputeTopicIdSubject.asObservable(),\n    this.widgetProperties.disputeTopicId,\n  );\n\n  inquireAndDisputeTopics: Observable<InquireAndDisputeTopics> = combineLatest([\n    this.inquireTopicId,\n    this.disputeTopicId,\n  ]).pipe(map(([inquire, dispute]) => ({ inquire, dispute })));\n\n  private readonly refreshTransactionsListHandler = () => {\n    this.model.refreshTransactions();\n  };\n\n  /**\n   * @deprecated will be removed in 11.0.0\n   */\n  handleError = (errorResponse: HttpErrorResponse) => {\n    this.errors = TransactionsBackendError.fromHttpErrorsResponse(errorResponse);\n\n    return of({\n      items: [],\n      totalCount: 0,\n    });\n  };\n\n  private clearRefreshTransactionsListEvents() {\n    this.registeredRefreshTransactionsListEvents.forEach((eventName) => {\n      this.eventBusService.unsubscribe(eventName, this.refreshTransactionsListHandler);\n    });\n\n    this.registeredRefreshTransactionsListEvents = [];\n  }\n\n  retry() {\n    this.model.retryFiltering();\n    this.pendingTransactionsService.retryFiltering();\n  }\n\n  ngOnDestroy() {\n    this.clearRefreshTransactionsListEvents();\n    this.unsubscribeSubject.next();\n    this.unsubscribeSubject.complete();\n  }\n\n  get pageSize(): Observable<number> {\n    return filterInputParameters(this.pageSizeSubject.asObservable(), this.widgetProperties.pageSize);\n  }\n\n  get maxNavPages(): Observable<number> {\n    return filterInputParameters(this.maxNavPagesSubject.asObservable(), this.widgetProperties.maxNavPages);\n  }\n\n  get showControls(): Observable<boolean> {\n    return filterInputParameters(this.showControlsSubject.asObservable(), this.widgetProperties.showControls);\n  }\n\n  get isFilterApplied() {\n    return this.model.isFilterApplied;\n  }\n\n  get isSearchApplied() {\n    return this.model.isSearchApplied;\n  }\n\n  get paginationType(): Observable<PaginationType> {\n    return filterInputParameters(this.paginationTypeSubject.asObservable(), this.widgetProperties.paginationType);\n  }\n\n  get showPendingTransactionsOnTop(): Observable<boolean> {\n    return filterInputParameters(\n      this.showPendingTransactionsOnTopSubject.asObservable(),\n      this.widgetProperties.showPendingTransactionsOnTop,\n    );\n  }\n\n  get showChangeCategory(): Observable<boolean> {\n    return filterInputParameters(\n      this.showChangeCategorySubject.asObservable(),\n      this.widgetProperties.showChangeCategory,\n    );\n  }\n\n  get showCheckImage(): Observable<boolean> {\n    return filterInputParameters(this.showCheckImageSubject.asObservable(), this.widgetProperties.showCheckImage);\n  }\n\n  get showManageNotes(): Observable<boolean> {\n    return filterInputParameters(this.showManageNotesSubject, this.widgetProperties.showManageNotes);\n  }\n\n  get getOrPostEndpoint(): Observable<EndpointType> {\n    return filterInputParameters(\n      this.getOrPostEndpointsSubject.asObservable(),\n      this.widgetProperties.getOrPostEndpoints,\n    );\n  }\n\n  get gmapsAPIKey(): Observable<string> {\n    return combineLatest([this.apiKeySubject.asObservable(), this.widgetProperties.gmapsAPIKey]).pipe(\n      map(([inputVal, propVal]) => inputVal || propVal),\n    );\n  }\n\n  get enableDisputeAndInquiry() {\n    return filterInputParameters(\n      this.enableDisputeAndInquirySubject.asObservable(),\n      this.widgetProperties.enableDisputeAndInquiry,\n    );\n  }\n\n  get disputeByBillingStatus(): Observable<boolean> {\n    return filterInputParameters(\n      this.disputeByBillingStatusSubject.asObservable(),\n      this.widgetProperties.disputeByBillingStatus,\n    );\n  }\n\n  get disputeEligibilityDays(): Observable<number> {\n    return filterInputParameters(\n      this.disputeEligibilityDaysSubject.asObservable(),\n      this.widgetProperties.disputeEligibilityDays,\n    );\n  }\n\n  get disputeTransactionTypes(): Observable<Array<string>> {\n    return filterInputParameters(\n      this.disputeTransactionTypesSubject.asObservable(),\n      this.widgetProperties.disputeTransactionTypes,\n    );\n  }\n\n  onLoadMore() {\n    this.model.loadMore();\n  }\n\n  ngOnInit() {\n    if (typeof this.selectedAccount === 'undefined') {\n      throw new Error(`\"selectedAccount\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    const initialListOptions: Observable<Partial<TransactionsListOptions>> = combineLatest([\n      this.initialFilterOptions,\n      this.initialSortOptions,\n    ]).pipe(\n      map(([initialFilterOptions, initialSortOptions]) => ({\n        filter: initialFilterOptions,\n        sort: initialSortOptions,\n      })),\n    );\n\n    this.model.getTransactionsFrom(\n      this.selectedAccount.pipe(map((value) => value ?? [])),\n      this.pageSize,\n      initialListOptions,\n      this.showPendingTransactionsOnTop,\n      this.getOrPostEndpoint,\n    );\n    if (this.showDetailsConfig) {\n      this.checkImagesList = this.transactionDetailsService.fromCheckImages(this.showCheckImage);\n\n      this.transactionDetailsLoadingStatus = this.transactionDetailsService.loadingState;\n\n      this.transactionDetailsService\n        .fromGeolocation(this.gmapsAPIKey)\n        .pipe(takeUntil(this.unsubscribeSubject))\n        .subscribe();\n    }\n\n    this.transactionsList = this.model.getTransactionsList().pipe(\n      publishReplay(1),\n      refCount(),\n      tap((data) => {\n        this.errors = data.httpResponseError\n          ? TransactionsBackendError.fromHttpErrorsResponse(data.httpResponseError)\n          : undefined;\n        this.cd.markForCheck();\n      }),\n    );\n\n    this.pendingTransactionsService.getTransactionsFrom(\n      this.selectedAccount.pipe(map((value) => value ?? [])),\n      initialListOptions,\n      this.getOrPostEndpoint,\n    );\n    this.pendingTransactionsList = this.pendingTransactionsService.getTransactionsList().pipe(\n      publishReplay(1),\n      refCount(),\n      tap((data) => {\n        this.errors = data.httpResponseError\n          ? TransactionsBackendError.fromHttpErrorsResponse(data.httpResponseError)\n          : undefined;\n        this.cd.markForCheck();\n      }),\n    );\n\n    this.transactionsList\n      .pipe(\n        takeUntil(this.unsubscribeSubject),\n        map((transactionsList) => {\n          if (!transactionsList) {\n            return {};\n          }\n\n          const { availableExportTypesHeader, unavailableExportTypesReasonsHeader } = transactionsList;\n\n          return combineExportTypesConfig({\n            availableExportTypesHeader,\n            unavailableExportTypesReasonsHeader,\n          });\n        }),\n      )\n      .subscribe(this.exportConfig);\n\n    const transactionsListCount = this.transactionsList.pipe(\n      map((trans) => ({ history: trans ? trans.totalCount : 0 })),\n    );\n\n    const pendingTransactionsListCount = this.pendingTransactionsList.pipe(\n      map((trans) => ({ pending: trans ? trans.totalCount : 0 })),\n    );\n\n    const transactionsListItemsToDisplay = this.transactionsList.pipe(\n      map((trans) => ({ history: trans ? trans.items.length : 0 })),\n    );\n\n    const pendingTransactionsListItemsToDisplay = this.pendingTransactionsList.pipe(\n      map((trans) => ({ pending: trans ? trans.items.length : 0 })),\n    );\n\n    this.sumTransactionsResults(transactionsListCount, pendingTransactionsListCount)\n      .pipe(takeUntil(this.unsubscribeSubject))\n      .subscribe(this.numberOfResultsFound);\n\n    this.sumTransactionsResults(transactionsListItemsToDisplay, pendingTransactionsListItemsToDisplay)\n      .pipe(takeUntil(this.unsubscribeSubject))\n      .subscribe(this.numberOfResultsDisplayed);\n\n    this.currentPage = this.model.getCurrentPage();\n    this.loadingState = this.model.loadingState;\n    this.loadingPendingState = this.pendingTransactionsService.loadingState;\n\n    this.widgetProperties.refreshTransactionsListEvents.pipe(takeUntil(this.unsubscribeSubject)).subscribe((events) => {\n      this.clearRefreshTransactionsListEvents();\n      if (events) {\n        this.registeredRefreshTransactionsListEvents = events.split(',');\n        this.registeredRefreshTransactionsListEvents.forEach((eventName) => {\n          this.eventBusService.subscribe(eventName, this.refreshTransactionsListHandler);\n        });\n      }\n    });\n\n    this.configureTransctionsDetailsOutputBehaviour();\n\n    this.transactionDetailsService.fromInquiryAndDispute(\n      this.enableDisputeAndInquiry,\n      this.disputeByBillingStatus,\n      this.disputeEligibilityDays,\n      this.disputeTransactionTypes,\n    );\n\n    this.availableFiltersConfigService.setFilterConfigurationAndAccount(\n      this.availableFiltersConfig.asObservable(),\n      this.selectedAccount.pipe(map((value) => value ?? [])),\n    );\n  }\n\n  private configureTransctionsDetailsOutputBehaviour() {\n    if (this.transactionsList && this.pendingTransactionsList && !this.showDetailsConfig) {\n      const pending = this.showPendingTransactionsOnTop.pipe(\n        mergeMap((cond) =>\n          iif(() => cond, this.pendingTransactionsList, of({ items: [], totalCount: 0 } as TransactionsList)),\n        ),\n      );\n\n      combineLatest([pending, this.transactionsList])\n        .pipe(\n          takeUntil(this.unsubscribeSubject),\n          map(([pendingTransactionsList, transactionsList]) => {\n            const pendingTransactions = pendingTransactionsList ? pendingTransactionsList.items : [];\n            const transactions = transactionsList ? transactionsList.items : [];\n\n            const mixed: TransactionsList = {\n              items: [...pendingTransactions, ...transactions],\n              totalCount: (pendingTransactionsList?.totalCount || 0) + (transactionsList?.totalCount || 0),\n            };\n\n            return mixed;\n          }),\n        )\n        .subscribe((data) => {\n          this.transactionsLoaded.emit(data);\n        });\n    }\n  }\n\n  private sumTransactionsResults(historyCount: Observable<any>, pendingCount: Observable<any>) {\n    return this.showPendingTransactionsOnTop.pipe(\n      mergeMap((showPendingTransactionsOnTop) =>\n        iif(() => showPendingTransactionsOnTop, merge(historyCount, pendingCount), historyCount),\n      ),\n      scan((acc, curr) => ({ ...acc, ...curr }), { history: 0, pending: 0 }),\n      map(({ history = 0, pending = 0 }) => history + pending),\n    );\n  }\n\n  onPageChange(page: number) {\n    this.model.pageChange(page);\n  }\n\n  onSearch(query: string) {\n    // search ui component sends an unexpected event\n    // that is type Event. To avoid calling backend with that event\n    // it has to be string\n    if (typeof query === 'string') {\n      this.model.search(query);\n      this.pendingTransactionsService.search(query);\n    }\n  }\n\n  onFilter(filterOptions: TransactionsFilterOptions) {\n    this.model.filter(filterOptions);\n    this.pendingTransactionsService.filter(filterOptions);\n  }\n\n  onSort(sortOptions: TransactionsSortOptions) {\n    this.model.sort(sortOptions);\n  }\n\n  onPrint() {\n    window.print();\n  }\n\n  onExport(exportType: TransactionsExportTypeElement) {\n    this.storedExportType = { ...exportType };\n    if (exportType.isAvailable) {\n      this.model\n        .exportToType(exportType.name)\n        .pipe(takeUntil(this.unsubscribeSubject))\n        .subscribe(\n          (response) => {\n            const anchorTag = document.createElement('a');\n            anchorTag.href = URL.createObjectURL(response.body as Blob);\n\n            const fileName = getNameFromContentDispositionHeader(response);\n            const defaultName = exportType.name.toLowerCase() === 'pdf' ? 'Account Activities' : 'transactions';\n\n            anchorTag.download = fileName !== '' ? fileName : defaultName;\n            anchorTag.click();\n          },\n          () => {\n            this.notificationService.showNotification({\n              header: this.notificationServerErrorHeader,\n              message: this.notificationServerErrorMessage || '',\n              modifier: 'error',\n            });\n          },\n        );\n    } else {\n      this.pushNotification({\n        header: this.notificationErrorUpdateHeaderTemplate,\n        message: this.notificationErrorUpdateMessageTemplate,\n        modifier: 'error',\n      });\n    }\n  }\n\n  onDetailOpen(transaction: Transaction) {\n    if (!this.showDetailsConfig) {\n      this.transactionSelected.emit(transaction);\n    } else {\n      this.transactionDetailsService.selectTransaction(transaction);\n    }\n  }\n\n  private pushNotification(notificationMessage: {\n    header: TemplateRef<any> | string | undefined;\n    message: any;\n    modifier: 'error' | 'success' | 'info' | 'warning' | 'alert' | undefined;\n  }) {\n    this.notificationService.showNotification({\n      dismissible: true,\n      ttl: notificationTtl,\n      ...notificationMessage,\n    });\n  }\n\n  constructor(\n    protected readonly model: TransactionsService,\n    protected readonly widgetProperties: WidgetPropertiesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly eventBusService: Pubsub,\n    protected readonly notificationService: NotificationService,\n    protected readonly pendingTransactionsService: PendingTransactionsService,\n    protected readonly transactionDetailsService: TransactionDetailsService,\n    protected readonly availableFiltersConfigService: AvailableFiltersConfigService,\n    protected readonly showDetailsConfig?: boolean,\n  ) {}\n}\n\n@Directive({\n  selector: '[bbTransactionsNoAccountSelectedStateCustomizable]',\n})\nexport class TransactionsNoAccountSelectedStateCustomizableDirective extends BbTemplate<\n  BaseTransactionsContainer,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTransactionsErrorStateCustomizable]',\n})\nexport class TransactionsErrorStateCustomizableDirective extends BbTemplate<BaseTransactionsContainer, undefined> {}\n"]}