{"version":3,"file":"base-transactions-controls.js","sourceRoot":"","sources":["../../../../../../../../libs/widgets/transactions/transactions-common-ang/src/lib/components/base-transactions-controls.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAU,SAAS,EAAE,MAAM,eAAe,CAAC;;AAK/E,2BAA2B;AAC3B,MAAM,OAAO,wBAAwB;IAFrC;QAGE;;WAEG;QACM,oBAAe,GAAG,KAAK,CAAC;QACjC;;WAEG;QACH,2BAA2B;QAE3B,iBAAY,GAAG;YACb;gBACE,IAAI,EAAE,KAAK;gBACX,WAAW,EAAE,IAAI;aAClB;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,WAAW,EAAE,IAAI;aAClB;SACF,CAAC;QACF;;WAEG;QACM,qBAAgB,GAAqB,EAAE,CAAC;QAEjD;;WAEG;QACgB,WAAM,GAAG,IAAI,YAAY,EAA6B,CAAC;QAC1E;;WAEG;QACgB,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;QACvD;;WAEG;QACgB,WAAM,GAAG,IAAI,YAAY,EAAiC,CAAC;QAC9E;;WAEG;QACH,iBAAY,GAAG,KAAK,CAAC;KAsCtB;IApCC;;OAEG;IACH,QAAQ,CAAC,WAAmB;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IACD;;OAEG;IACH,QAAQ,CAAC,YAAuC;QAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IACD;;OAEG;IACH,QAAQ,CAAC,IAAmC;QAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IACD;;OAEG;IACH,OAAO;QACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IACD;;OAEG;IACH,YAAY;QACV,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,QAAQ;QACN,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;YAC5C,MAAM,IAAI,KAAK,CAAC,wCAAwC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;SACnF;IACH,CAAC;;sHA7EU,wBAAwB;0GAAxB,wBAAwB;4FAAxB,wBAAwB;kBAFpC,SAAS;8BAMC,eAAe;sBAAvB,KAAK;gBAMN,YAAY;sBADX,KAAK;gBAcG,gBAAgB;sBAAxB,KAAK;gBAKa,MAAM;sBAAxB,MAAM;gBAIY,MAAM;sBAAxB,MAAM;gBAIY,MAAM;sBAAxB,MAAM","sourcesContent":["import { TransactionsExportTypeElement } from '../model/transactions-export-options.model';\nimport { Input, Output, EventEmitter, OnInit, Directive } from '@angular/core';\nimport { TransactionsFilterOptions } from '../model/transactions-filter-options.model';\nimport { AvailableFilters } from '../model/available-filters.model';\n\n@Directive()\n// eslint-disable-next-line\nexport class BaseTransactionsControls implements OnInit {\n  /**\n   * Whether a filter is applied on the transactions.\n   */\n  @Input() isFilterApplied = false;\n  /**\n   * Configurations for exporting transactions.\n   */\n  // eslint-disable-next-line\n  @Input()\n  exportConfig = [\n    {\n      name: 'CSV',\n      isAvailable: true,\n    },\n    {\n      name: 'OFX',\n      isAvailable: true,\n    },\n  ];\n  /**\n   * Configuration parameter to show/hide filters\n   */\n  @Input() availableFilters: AvailableFilters = [];\n\n  /**\n   * EventEmitter for triggering a filter action.\n   */\n  @Output() readonly filter = new EventEmitter<TransactionsFilterOptions>();\n  /**\n   * EventEmitter for triggering a search action.\n   */\n  @Output() readonly search = new EventEmitter<string>();\n  /**\n   * EventEmitter for triggering an export action.\n   */\n  @Output() readonly export = new EventEmitter<TransactionsExportTypeElement>();\n  /**\n   * Whether the filter form is shown.\n   */\n  isFilterOpen = false;\n\n  /**\n   * Search event callback\n   */\n  onSearch(searchParam: string) {\n    this.search.emit(searchParam);\n  }\n  /**\n   * Filter event callback\n   */\n  onFilter(filterParams: TransactionsFilterOptions) {\n    this.filter.emit(filterParams);\n  }\n  /**\n   * Export event callback\n   */\n  onExport(type: TransactionsExportTypeElement) {\n    this.export.emit(type);\n  }\n  /**\n   * Close event callback to hide the filters controls\n   */\n  onClose() {\n    this.isFilterOpen = false;\n  }\n  /**\n   * Toogle method to hide or show the filter form\n   */\n  toggleFilter() {\n    this.isFilterOpen = !this.isFilterOpen;\n  }\n\n  ngOnInit() {\n    if (typeof this.exportConfig === 'undefined') {\n      throw new Error(`\"exportConfig\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n"]}