import { Input, Output, EventEmitter, Directive } from '@angular/core';
import * as i0 from "@angular/core";
// eslint-disable-next-line
export class BaseTransactionsControls {
    constructor() {
        /**
         * Whether a filter is applied on the transactions.
         */
        this.isFilterApplied = false;
        /**
         * Configurations for exporting transactions.
         */
        // eslint-disable-next-line
        this.exportConfig = [
            {
                name: 'CSV',
                isAvailable: true,
            },
            {
                name: 'OFX',
                isAvailable: true,
            },
        ];
        /**
         * Configuration parameter to show/hide filters
         */
        this.availableFilters = [];
        /**
         * EventEmitter for triggering a filter action.
         */
        this.filter = new EventEmitter();
        /**
         * EventEmitter for triggering a search action.
         */
        this.search = new EventEmitter();
        /**
         * EventEmitter for triggering an export action.
         */
        this.export = new EventEmitter();
        /**
         * Whether the filter form is shown.
         */
        this.isFilterOpen = false;
    }
    /**
     * Search event callback
     */
    onSearch(searchParam) {
        this.search.emit(searchParam);
    }
    /**
     * Filter event callback
     */
    onFilter(filterParams) {
        this.filter.emit(filterParams);
    }
    /**
     * Export event callback
     */
    onExport(type) {
        this.export.emit(type);
    }
    /**
     * Close event callback to hide the filters controls
     */
    onClose() {
        this.isFilterOpen = false;
    }
    /**
     * Toogle method to hide or show the filter form
     */
    toggleFilter() {
        this.isFilterOpen = !this.isFilterOpen;
    }
    ngOnInit() {
        if (typeof this.exportConfig === 'undefined') {
            throw new Error(`"exportConfig" input is required in "${this.constructor.name}"`);
        }
    }
}
BaseTransactionsControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BaseTransactionsControls, deps: [], target: i0.ɵɵFactoryTarget.Directive });
BaseTransactionsControls.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BaseTransactionsControls, inputs: { isFilterApplied: "isFilterApplied", exportConfig: "exportConfig", availableFilters: "availableFilters" }, outputs: { filter: "filter", search: "search", export: "export" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BaseTransactionsControls, decorators: [{
            type: Directive
        }], propDecorators: { isFilterApplied: [{
                type: Input
            }], exportConfig: [{
                type: Input
            }], availableFilters: [{
                type: Input
            }], filter: [{
                type: Output
            }], search: [{
                type: Output
            }], export: [{
                type: Output
            }] } });
//# sourceMappingURL=base-transactions-controls.js.map