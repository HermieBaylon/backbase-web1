import { Directive, Input, ElementRef, Renderer2, ChangeDetectorRef } from '@angular/core';
import { DomAttributesService } from '../services/dom-attributes.service';
import * as i0 from "@angular/core";
import * as i1 from "../services/dom-attributes.service";
export class DynamicIdDirective {
    constructor(_elRef, _renderer, domAttributesService, cd) {
        this._elRef = _elRef;
        this._renderer = _renderer;
        this.domAttributesService = domAttributesService;
        this.cd = cd;
    }
    ngAfterContentInit() {
        setTimeout(() => {
            this._renderer.setAttribute(this._elRef.nativeElement, 'id', this.domAttributesService.nextId(this.bbDynamicId));
            this.cd.markForCheck();
        });
    }
}
DynamicIdDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DynamicIdDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.DomAttributesService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });
DynamicIdDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: DynamicIdDirective, selector: "[bbDynamicId]", inputs: { bbDynamicId: "bbDynamicId" }, exportAs: ["bbDynamicId"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DynamicIdDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbDynamicId]',
                    exportAs: 'bbDynamicId',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.DomAttributesService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { bbDynamicId: [{
                type: Input
            }] } });
//# sourceMappingURL=dynamic-id.directive.js.map