(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@backbase/ui-ang/date-pipe'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/payment-card'), require('@backbase/product-summary-common-ang'), require('@backbase/ui-ang/amount'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/input-inline-edit'), require('@backbase/ui-ang/modal'), require('@backbase/foundation-ang/core'), require('@backbase/ui-ang/tooltip-directive'), require('@backbase/data-ang/arrangements'), require('@backbase/ui-ang/account-number-pipe'), require('bignumber.js'), require('@angular/forms'), require('@backbase/ui-ang/product-item-basic-account'), require('@backbase/ui-ang/input-text'), require('@backbase/ui-ang/search-box'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/input-checkbox'), require('@ng-select/ng-select'), require('@backbase/ui-ang/alert'), require('@swimlane/ngx-charts'), require('@backbase/ui-ang/dropdown-menu'), require('@backbase/ui-ang/payment-card-number-pipe'), require('@backbase/ui-ang/keyboard-click-directive'), require('@backbase/ui-ang/ellipsis'), require('rxjs'), require('rxjs/operators'), require('@ng-bootstrap/ng-bootstrap'), require('@backbase/ui-ang/product-item-current-account'), require('@backbase/ui-ang/product-item-savings-account'), require('@backbase/ui-ang/product-item-term-deposit'), require('@backbase/ui-ang/product-item-loan'), require('@backbase/ui-ang/product-item-credit-card'), require('@backbase/ui-ang/product-item-debit-card'), require('@backbase/ui-ang/product-item-investment-account'), require('@backbase/ui-ang/badge'), require('@backbase/ui-ang/pagination'), require('@backbase/ui-ang/load-button'), require('@angular/localize/init')) :
    typeof define === 'function' && define.amd ? define('@backbase/product-summary-ui', ['exports', '@angular/core', '@angular/common', '@backbase/ui-ang/date-pipe', '@backbase/ui-ang/button', '@backbase/ui-ang/payment-card', '@backbase/product-summary-common-ang', '@backbase/ui-ang/amount', '@backbase/ui-ang/icon', '@backbase/ui-ang/input-inline-edit', '@backbase/ui-ang/modal', '@backbase/foundation-ang/core', '@backbase/ui-ang/tooltip-directive', '@backbase/data-ang/arrangements', '@backbase/ui-ang/account-number-pipe', 'bignumber.js', '@angular/forms', '@backbase/ui-ang/product-item-basic-account', '@backbase/ui-ang/input-text', '@backbase/ui-ang/search-box', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/input-checkbox', '@ng-select/ng-select', '@backbase/ui-ang/alert', '@swimlane/ngx-charts', '@backbase/ui-ang/dropdown-menu', '@backbase/ui-ang/payment-card-number-pipe', '@backbase/ui-ang/keyboard-click-directive', '@backbase/ui-ang/ellipsis', 'rxjs', 'rxjs/operators', '@ng-bootstrap/ng-bootstrap', '@backbase/ui-ang/product-item-current-account', '@backbase/ui-ang/product-item-savings-account', '@backbase/ui-ang/product-item-term-deposit', '@backbase/ui-ang/product-item-loan', '@backbase/ui-ang/product-item-credit-card', '@backbase/ui-ang/product-item-debit-card', '@backbase/ui-ang/product-item-investment-account', '@backbase/ui-ang/badge', '@backbase/ui-ang/pagination', '@backbase/ui-ang/load-button', '@angular/localize/init'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["product-summary-ui"] = {}), global.ng.core, global.ng.common, global.i1$2, global.i4, global.i3$1, global.i6, global.i2, global.i1, global.i2$1, global.i5$1, global.i1$1, global.i5, global.arrangements, global.i7, global.BigNumber, global.ng.forms, global.i10, global.i3$2, global.i4$1, global.i6$1, global.i5$2, global.i1$3, global.i1$4, global.i1$5, global.i4$2, global.paymentCardNumberPipe, global.i7$2, global.i2$2, global.rxjs, global.rxjs.operators, global.i7$4, global.i3$3, global.i4$3, global.i5$3, global.i6$2, global.i7$3, global.i8, global.i9, global.i4$4, global.i1$6, global.i2$3));
})(this, (function (exports, i0, i3, i1$2, i4, i3$1, i6, i2, i1, i2$1, i5$1, i1$1, i5, arrangements, i7, BigNumber, i7$1, i10, i3$2, i4$1, i6$1, i5$2, i1$3, i1$4, i1$5, i4$2, paymentCardNumberPipe, i7$2, i2$2, rxjs, operators, i7$4, i3$3, i4$3, i5$3, i6$2, i7$3, i8, i9, i4$4, i1$6, i2$3) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i5__namespace$1 = /*#__PURE__*/_interopNamespace(i5$1);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var BigNumber__default = /*#__PURE__*/_interopDefaultLegacy(BigNumber);
    var i7__namespace$1 = /*#__PURE__*/_interopNamespace(i7$1);
    var i10__namespace = /*#__PURE__*/_interopNamespace(i10);
    var i3__namespace$2 = /*#__PURE__*/_interopNamespace(i3$2);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);
    var i6__namespace$1 = /*#__PURE__*/_interopNamespace(i6$1);
    var i5__namespace$2 = /*#__PURE__*/_interopNamespace(i5$2);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i1__namespace$4 = /*#__PURE__*/_interopNamespace(i1$4);
    var i1__namespace$5 = /*#__PURE__*/_interopNamespace(i1$5);
    var i4__namespace$2 = /*#__PURE__*/_interopNamespace(i4$2);
    var i7__namespace$2 = /*#__PURE__*/_interopNamespace(i7$2);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i7__namespace$4 = /*#__PURE__*/_interopNamespace(i7$4);
    var i3__namespace$3 = /*#__PURE__*/_interopNamespace(i3$3);
    var i4__namespace$3 = /*#__PURE__*/_interopNamespace(i4$3);
    var i5__namespace$3 = /*#__PURE__*/_interopNamespace(i5$3);
    var i6__namespace$2 = /*#__PURE__*/_interopNamespace(i6$2);
    var i7__namespace$3 = /*#__PURE__*/_interopNamespace(i7$3);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i9__namespace = /*#__PURE__*/_interopNamespace(i9);
    var i4__namespace$4 = /*#__PURE__*/_interopNamespace(i4$4);
    var i1__namespace$6 = /*#__PURE__*/_interopNamespace(i1$6);
    var i2__namespace$3 = /*#__PURE__*/_interopNamespace(i2$3);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    /**
     * A component for displaying an account logo.
     * In case the logo is not reachable a related icon is displayed basing on `productKindName`.
     *
     * @usageNotes
     *
     * ### Include this widget in your `AppModule`:
     *
     * ```typescript
     * @NgModule({
     *   imports: [
     *     ProductSummaryAccountLogoModule,
     *   ],
     *   ...
     * })
     * export class AppModule {}
     * ```
     *
     * ### Display details
     *
     * ```html
     * <bb-product-summary-account-logo
     *   [logoSrc]="externalBank.logo"
     *   [productKindName]="item.productKindName"
     *   [defaultProductKindName]="'Current Account'"
     * ></bb-product-summary-account-logo>
     * ```
     *
     * @ngModule ProductSummaryAccountLogoModule
     */
    var ProductSummaryAccountLogoComponent = /** @class */ (function () {
        function ProductSummaryAccountLogoComponent() {
            this.hostRef = this;
            /**
             * Source for bank logo.
             * Can be either a URL or base64 image.
             *
             * @default ''
             */
            this.logoSrc = '';
            /**
             * Product kind name to display a related icon.
             *
             * @default ''
             */
            this.productKindName = '';
            /**
             * Default product kind name to display icons
             */
            this.defaultProductKindName = i6.ProductKindNames.CURRENT_ACCOUNT;
            /**
             * Sets icon size
             *
             * @default 'md'
             */
            this.iconSize = 'md';
            /**
             * Sets icon size
             *
             * @default 'md'
             */
            this.logoSize = 'md';
            /**
             * Indicates whether during loading of the image any errors appeared
             *
             * @default false
             */
            this.isImgError = false;
        }
        /**
         * Returns a related icon color for the given 'productKindName'
         */
        ProductSummaryAccountLogoComponent.prototype.getProductKindIconColor = function () {
            var color = this.getProductKindIconName().slice(0, -1);
            return color === 'account' ? i6.toKebabCase(this.defaultProductKindName) : color;
        };
        /**
         * Returns a related icon name for the given 'productKindName'
         */
        ProductSummaryAccountLogoComponent.prototype.getProductKindIconName = function () {
            return i6.getProductKindIconName(this.productKindName);
        };
        /**
         * Event handler for the `error` event of `img`
         * sets `isImgError` to `true`
         */
        ProductSummaryAccountLogoComponent.prototype.onImgError = function () {
            this.isImgError = true;
        };
        return ProductSummaryAccountLogoComponent;
    }());
    ProductSummaryAccountLogoComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryAccountLogoComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductSummaryAccountLogoComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryAccountLogoComponent, selector: "bb-product-summary-account-logo", inputs: { logoSrc: "logoSrc", productKindName: "productKindName", defaultProductKindName: "defaultProductKindName", iconColor: "iconColor", iconSize: "iconSize", logoSize: "logoSize" }, ngImport: i0__namespace, template: "<ng-container\n  bbProductSummaryAccountLogoCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template\n  bbProductSummaryAccountLogoCustomizable\n  let-hostRef\n>\n  <ng-container *ngIf=\"hostRef.logoSrc && !hostRef.isImgError; else productKindIcon\">\n    <div class=\"bb-stack bb-icon bb-icon--{{hostRef.logoSize}} bb-icon__background\">\n      <img [src]=\"hostRef.logoSrc\"\n           data-role=\"product-summary-account-logo-img\"\n           aria-hidden=\"true\"\n           alt=\"\"\n           class=\"bb-product-summary-account-logo__img bb-icon__background--square\"\n           (error)=\"hostRef.onImgError()\"/>\n    </div>\n  </ng-container>\n  <ng-template #productKindIcon>\n    <bb-icon-ui data-role=\"product-summary-account-logo-icon\"\n                backgroundType=\"square\"\n                [size]=\"hostRef.iconSize\"\n                [color]=\"hostRef.iconColor || hostRef.getProductKindIconColor()\"\n                [name]=\"hostRef.getProductKindIconName()\">\n    </bb-icon-ui>\n  </ng-template>\n</ng-template>\n\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductSummaryAccountLogoCustomizableDirective; }), selector: "[bbProductSummaryAccountLogoCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryAccountLogoComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-summary-account-logo',
                        templateUrl: 'bb-product-summary-account-logo.component.html',
                    }]
            }], propDecorators: { logoSrc: [{
                    type: i0.Input
                }], productKindName: [{
                    type: i0.Input
                }], defaultProductKindName: [{
                    type: i0.Input
                }], iconColor: [{
                    type: i0.Input
                }], iconSize: [{
                    type: i0.Input
                }], logoSize: [{
                    type: i0.Input
                }] } });
    /**
     * This is an extension slot to be used for customizing the logo
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryAccountLogoCustomizable
     *   let-hostRef>
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryAccountDetailsWidgetModule
     */
    var ProductSummaryAccountLogoCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryAccountLogoCustomizableDirective, _super);
        function ProductSummaryAccountLogoCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryAccountLogoCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryAccountLogoCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryAccountLogoCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryAccountLogoCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryAccountLogoCustomizableDirective, selector: "[bbProductSummaryAccountLogoCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryAccountLogoCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryAccountLogoCustomizable]',
                    }]
            }] });

    var uiModules$h = [i1.IconModule];
    var components$e = [ProductSummaryAccountLogoComponent];
    var directives$7 = [ProductSummaryAccountLogoCustomizableDirective];
    /**
     * Exports a UI components for displaying account logo
     *
     * The following components are included in this module:
     *  - `ProductSummaryAccountLogoComponent`
     *
     * @see ProductSummaryAccountLogoComponent
     *
     * @usageNotes
     *
     * ### Include the exported widgets in your `AppModule`:
     *
     * ```typescript
     * @NgModule({
     *   imports: [
     *     ProductSummaryAccountLogoModule,
     *   ],
     *   ...
     * })
     * export class AppModule {}
     * ```
     */
    var ProductSummaryAccountLogoModule = /** @class */ (function () {
        function ProductSummaryAccountLogoModule() {
        }
        return ProductSummaryAccountLogoModule;
    }());
    ProductSummaryAccountLogoModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryAccountLogoModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductSummaryAccountLogoModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryAccountLogoModule, declarations: [ProductSummaryAccountLogoComponent, ProductSummaryAccountLogoCustomizableDirective], imports: [i3.CommonModule, i1.IconModule], exports: [ProductSummaryAccountLogoComponent, ProductSummaryAccountLogoCustomizableDirective, i1.IconModule] });
    ProductSummaryAccountLogoModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryAccountLogoModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$h)), i1.IconModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryAccountLogoModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$h)),
                        declarations: __spreadArray(__spreadArray([], __read(components$e)), __read(directives$7)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components$e)), __read(directives$7)), __read(uiModules$h)),
                    }]
            }] });

    /**
     * Displays a formatted product number ('iban', 'bban' or 'cardNumber')
     *
     * @usageNotes
     *
     * ```html
     * <bb-product-number
     *    value='12345678'
     *    type='iban'
     * ></bb-product-number>
     * ```
     *
     * @ngModule ProductNumberModule
     */
    var ProductNumberComponent = /** @class */ (function () {
        /**
         * Constructor
         *
         * @param featuresService
         */
        function ProductNumberComponent(featuresService) {
            this.featuresService = featuresService;
            this.hostRef = this;
            /**
             * A product that contains product number, a format will be picked automatically
             * Used when `number` unset
             */
            this.product = {};
            /**
             * Defines whether the attribute is unmaskable
             */
            this.unmaskable = false;
            /**
             * Defines whether the attribute is masked
             */
            this.masked = false;
            /**
             * Emits a `MaskableAttribute` to be masked
             */
            this.mask = new i0.EventEmitter();
            /**
             * Emits a `MaskableAttribute` to be unmasked
             */
            this.unmask = new i0.EventEmitter();
        }
        /**
         * Event handler for the `mask` button
         * Emits the `masked` output with a `MaskedAttribute`
         *
         * @param type
         */
        ProductNumberComponent.prototype.onMask = function (type) {
            this.mask.emit(this.mapToMaskableAttribute(type));
        };
        /**
         * Event handler for the `unmask` button
         * Emits the `unmasked` output with a `MaskedAttribute`
         *
         * @param type
         */
        ProductNumberComponent.prototype.onUnmask = function (type) {
            this.unmask.emit(this.mapToMaskableAttribute(type));
        };
        ProductNumberComponent.prototype.mapToMaskableAttribute = function (type) {
            switch (type) {
                case 'bban':
                    return arrangements.MaskableAttribute.BBAN;
                case 'iban':
                    return arrangements.MaskableAttribute.IBAN;
                default:
                    return arrangements.MaskableAttribute.Number;
            }
        };
        return ProductNumberComponent;
    }());
    ProductNumberComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNumberComponent, deps: [{ token: i1__namespace$1.FeaturesService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductNumberComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductNumberComponent, selector: "bb-product-number", inputs: { number: "number", product: "product", format: "format", type: "type", unmaskable: "unmaskable", masked: "masked" }, outputs: { mask: "mask", unmask: "unmask" }, ngImport: i0__namespace, template: "<ng-container\n  bbProductNumberCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    productNumber: hostRef.number || (hostRef.product | bbProductNumberValue),\n    productType: hostRef.type || (hostRef.product | bbProductNumberType),\n    productFormat: hostRef.format\n  }\"\n></ng-container>\n\n<ng-template\n  bbProductNumberCustomizable\n  let-hostRef\n  let-productNumber=\"context.productNumber\"\n  let-productType=\"context.productType\"\n  let-productFormat=\"context.productFormat\"\n>\n  <span class=\"contextual-alternates-off\" data-role=\"product-number\">\n    {{ productNumber | bbAccountNumber:(productType || productFormat) }}\n  </span>\n  <ng-container *ngIf=\"hostRef.unmaskable\">\n    <button bbButton\n            *ngIf=\"hostRef.masked; else maskButton\"\n            triggers=\"hover focus\"\n            [bbTooltip]=\"unmaskButtonTooltip\"\n            aria-label=\"Unmask\"\n            i18n-aria-label=\"Unmask button@@product-summary-product-number.button-unmask-label\"\n            (click)=\"hostRef.onUnmask(productType)\"\n            buttonSize=\"sm\"\n            circle=\"true\"\n            color=\"link\"\n            type=\"button\"\n            data-role=\"product-number-unmask-button\">\n      <bb-icon-ui name=\"visibility\"></bb-icon-ui>\n    </button>\n    <ng-template #maskButton>\n      <button bbButton\n              triggers=\"hover focus\"\n              [bbTooltip]=\"maskButtonTooltip\"\n              aria-label=\"Mask\"\n              i18n-aria-label=\"Mask button@@product-summary-product-number.button-mask-label\"\n              (click)=\"hostRef.onMask(productType)\"\n              buttonSize=\"sm\"\n              circle=\"true\"\n              color=\"link\"\n              type=\"button\"\n              data-role=\"product-number-mask-button\">\n        <bb-icon-ui name=\"visibility-off\"></bb-icon-ui>\n      </button>\n    </ng-template>\n\n    <ng-template #unmaskButtonTooltip>\n      <ng-container [ngSwitch]=\"productType\">\n        <ng-container *ngSwitchCase=\"'iban'\"\n                      i18n=\"Unmask IBAN|Button to unmask IBAN@@product-summary-product-number.button-unmask-iban.tooltip\">\n          Unmask IBAN\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'bban'\"\n                      i18n=\"Unmask BBAN|Button to unmask BBAN@@product-summary-product-number.button-unmask-bban.tooltip\">\n          Unmask BBAN\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'cardNumber'\"\n                      i18n=\"Unmask number|Button to unmask card number@@product-summary-product-number.button-unmask-number.tooltip\">\n          Unmask number\n        </ng-container>\n        <ng-container *ngSwitchDefault\n                      i18n=\"Unmask|Button to unmask@@product-summary-product-number.button-unmask.tooltip\">\n          Unmask\n        </ng-container>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #maskButtonTooltip>\n      <ng-container [ngSwitch]=\"productType\">\n        <ng-container *ngSwitchCase=\"'iban'\"\n                      i18n=\"Mask IBAN|Button to unmask IBAN@@product-summary-product-number.button-mask-iban.tooltip\">\n          Mask IBAN\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'bban'\"\n                      i18n=\"Mask BBAN|Button to unmask BBAN@@product-summary-product-number.button-mask-bban.tooltip\">\n          Mask BBAN\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'cardNumber'\"\n                      i18n=\"Mask  number|Button to unmask card number@@product-summary-product-number.button-mask-number.tooltip\">\n          Mask number\n        </ng-container>\n        <ng-container *ngSwitchDefault\n                      i18n=\"Mask|Button to unmask@@product-summary-product-number.button-mask.tooltip\">\n          Mask\n        </ng-container>\n      </ng-container>\n    </ng-template>\n  </ng-container>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductNumberCustomizableDirective; }), selector: "[bbProductNumberCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }], pipes: { "bbProductNumberValue": i0__namespace.forwardRef(function () { return i6__namespace.ProductNumberValuePipe; }), "bbProductNumberType": i0__namespace.forwardRef(function () { return i6__namespace.ProductNumberTypePipe; }), "bbAccountNumber": i0__namespace.forwardRef(function () { return i7__namespace.AccountNumberPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNumberComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-number',
                        templateUrl: 'product-number.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.FeaturesService }]; }, propDecorators: { number: [{
                    type: i0.Input
                }], product: [{
                    type: i0.Input
                }], format: [{
                    type: i0.Input
                }], type: [{
                    type: i0.Input
                }], unmaskable: [{
                    type: i0.Input
                }], masked: [{
                    type: i0.Input
                }], mask: [{
                    type: i0.Output
                }], unmask: [{
                    type: i0.Output
                }] } });
    /**
     * This is an extension slot to be used for customizing the entire component
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductNumberCustomizable
     *   let-hostRef>
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductNumberCustomizableDirective
     */
    var ProductNumberCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductNumberCustomizableDirective, _super);
        function ProductNumberCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductNumberCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductNumberCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNumberCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductNumberCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductNumberCustomizableDirective, selector: "[bbProductNumberCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNumberCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductNumberCustomizable]',
                    }]
            }] });

    var sharedPipes = [i6.ProductNumberPipeModule];
    var components$d = [ProductNumberComponent];
    var directives$6 = [ProductNumberCustomizableDirective];
    var uiModules$g = [i4.ButtonModule, i1.IconModule, i5.TooltipModule];
    var ProductNumberModule = /** @class */ (function () {
        function ProductNumberModule() {
        }
        return ProductNumberModule;
    }());
    ProductNumberModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNumberModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductNumberModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNumberModule, declarations: [ProductNumberComponent, ProductNumberCustomizableDirective], imports: [i3.CommonModule, i6.ProductNumberPipeModule, i4.ButtonModule, i1.IconModule, i5.TooltipModule], exports: [i6.ProductNumberPipeModule, ProductNumberComponent, ProductNumberCustomizableDirective] });
    ProductNumberModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNumberModule, imports: [__spreadArray(__spreadArray([i3.CommonModule], __read(sharedPipes)), __read(uiModules$g)), i6.ProductNumberPipeModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNumberModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray(__spreadArray([i3.CommonModule], __read(sharedPipes)), __read(uiModules$g)),
                        declarations: __spreadArray(__spreadArray([], __read(components$d)), __read(directives$6)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(sharedPipes)), __read(components$d)), __read(directives$6)),
                    }]
            }] });

    var CreditLimitAttributeComponent = /** @class */ (function () {
        function CreditLimitAttributeComponent() {
            /**
             * Custom value template reference
             */
            this.contentRef = '';
            /**
             * Attribute title
             */
            this.title = '';
            /**
             * Defines whether to color the amount field
             *
             * @default false
             */
            this.isAmountColored = false;
            /**
             * Whether currency should be displayed as a sign.
             *
             * @default true.
             */
            this.useShortCurrency = true;
            /**
             * Specifies whether to use small screen layout
             *
             * @default false.
             */
            this.isSmallScreen = false;
            /**
             * Specifies whether to use extra small screen layout
             *
             * @default false.
             */
            this.isExtraSmallScreen = false;
            /**
             * Specifies whether container size is small
             */
            this.responsiveView = 'screen';
        }
        return CreditLimitAttributeComponent;
    }());
    CreditLimitAttributeComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitAttributeComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CreditLimitAttributeComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CreditLimitAttributeComponent, selector: "bb-credit-limit-attribute", inputs: { title: "title", color: "color", currency: "currency", amount: "amount", isAmountColored: "isAmountColored", useShortCurrency: "useShortCurrency", isSmallScreen: "isSmallScreen", isExtraSmallScreen: "isExtraSmallScreen", responsiveView: "responsiveView" }, viewQueries: [{ propertyName: "contentRef", first: true, predicate: ["contentRef"], descendants: true }], ngImport: i0__namespace, template: "<div [ngClass]=\"{\n  'bb-stack justify-content-between': responsiveView === 'tablet' || responsiveView === 'mobile',\n  'bb-stack--align-top': responsiveView === 'mobile'\n}\">\n  <!-- title -->\n  <div class=\"bb-text-support bb-subtitle\"\n       [ngClass]=\"{\n         'bb-block bb-block--xs': responsiveView === 'screen',\n         'bb-stack__item': responsiveView === 'tablet' || responsiveView === 'mobile'\n       }\"\n  >\n    <div *ngIf=\"color\"\n         class=\"\n         rounded-circle\n         bb-credit-limit-attribute__color-mark\n         bb-credit-limit__color--{{color}}\n       \"></div>\n    <span data-role=\"credit-limit-attribute-title\">{{title}}</span>\n  </div>\n\n  <div [ngClass]=\"{\n         'bb-stack__item': responsiveView === 'tablet' || responsiveView === 'mobile'\n  }\">\n    <!-- default value -->\n    <bb-amount-ui\n            *ngIf=\"!contentRef && amount\"\n            data-role=\"credit-limit-attribute-value\"\n            class=\"bb-stack__item bb-text-semi-bold {{ isAmountColored ? 'bb-credit-limit-attribute__value--' + color : '' }}\"\n            [class.bb-credit-limit-attribute__value]=\"color\"\n            [ngClass]=\"{\n              'bb-subtitle': responsiveView === 'mobile'\n            }\"\n            [currency]=\"currency\"\n            [amount]=\"amount\"\n            [mapCurrency]=\"useShortCurrency\"\n    ></bb-amount-ui>\n\n    <!-- custom value -->\n    <ng-content #contentRef></ng-content>\n  </div>\n</div>\n", components: [{ type: i2__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i3__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitAttributeComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-credit-limit-attribute',
                        templateUrl: './credit-limit-attribute.component.html',
                    }]
            }], propDecorators: { contentRef: [{
                    type: i0.ViewChild,
                    args: ['contentRef']
                }], title: [{
                    type: i0.Input
                }], color: [{
                    type: i0.Input
                }], currency: [{
                    type: i0.Input
                }], amount: [{
                    type: i0.Input
                }], isAmountColored: [{
                    type: i0.Input
                }], useShortCurrency: [{
                    type: i0.Input
                }], isSmallScreen: [{
                    type: i0.Input
                }], isExtraSmallScreen: [{
                    type: i0.Input
                }], responsiveView: [{
                    type: i0.Input
                }] } });

    /**
     * Displays a credit limit minimum payment info
     *
     * @usageNotes
     *
     * ```html
     * <bb-credit-limit-minimum-payment
     *   [minimumPayment]="100"
     *   [minimumPaymentDueDate]="'2021-03-15T16:41:41.090Z'"
     *   [currency]="EUR"
     * ></bb-credit-limit-minimum-payment>
     * ```
     *
     * @ngModule CreditLimitModule
     */
    var CreditLimitMinimumPaymentComponent = /** @class */ (function () {
        function CreditLimitMinimumPaymentComponent() {
            /**
             * Whether currency should be displayed as a sign.
             *
             * @default true.
             */
            this.useShortCurrency = true;
            /**
             * Specifies whether to use small screen layout
             *
             * @default false.
             */
            this.isSmallScreen = false;
            /**
             * Specifies whether to use extra small screen layout
             *
             * @default false.
             */
            this.isExtraSmallScreen = false;
            /**
             * Specifies whether container size is small
             */
            this.responsiveView = 'screen';
        }
        return CreditLimitMinimumPaymentComponent;
    }());
    CreditLimitMinimumPaymentComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitMinimumPaymentComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CreditLimitMinimumPaymentComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CreditLimitMinimumPaymentComponent, selector: "bb-credit-limit-minimum-payment", inputs: { minimumPayment: "minimumPayment", minimumPaymentDueDate: "minimumPaymentDueDate", currency: "currency", useShortCurrency: "useShortCurrency", isSmallScreen: "isSmallScreen", isExtraSmallScreen: "isExtraSmallScreen", responsiveView: "responsiveView" }, ngImport: i0__namespace, template: "<bb-credit-limit-attribute\n  class=\"bb-text-align-right--md-up\"\n  data-role=\"credit-limit-minimum-payment\"\n  title=\"Minimum Payment\"\n  i18n-title=\"Minimum Payment|Credit limit attribute: Minimum Payment@@bb-credit-limit-attribute-minimum-payment\"\n  [responsiveView]=\"responsiveView\"\n>\n  <div class=\"bb-stack bb-stack--wrap bb-stack--density-xs bb-text-semi-bold\"\n       [ngClass]=\"{\n         'bb-subtitle, justify-content-end': responsiveView === 'mobile' || responsiveView === 'tablet'\n       }\"\n       data-role=\"credit-limit-minimum-payment-value\"\n  >\n    <bb-amount-ui\n      class=\"bb-stack__item\"\n      [currency]=\"currency\"\n      [amount]=\"minimumPayment\"\n      [mapCurrency]=\"useShortCurrency\">\n    </bb-amount-ui>\n\n    <ng-container *ngIf=\"minimumPaymentDueDate\">\n      <div class=\"bb-stack__break bb-stack__break--xs-down\"></div>\n      <span class=\"bb-stack__item\"\n            i18n=\"due|Minimum payment: due to date@@bb-credit-limit-attribute-minimum-payment-due\">\n        due\n      </span>\n      <span class=\"bb-stack__item\">\n        {{minimumPaymentDueDate | bbDate}}\n      </span>\n    </ng-container>\n  </div>\n</bb-credit-limit-attribute>\n", components: [{ type: CreditLimitAttributeComponent, selector: "bb-credit-limit-attribute", inputs: ["title", "color", "currency", "amount", "isAmountColored", "useShortCurrency", "isSmallScreen", "isExtraSmallScreen", "responsiveView"] }, { type: i2__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i3__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "bbDate": i1__namespace$2.BbDatePipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitMinimumPaymentComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-credit-limit-minimum-payment',
                        templateUrl: './credit-limit-minimum-payment.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { minimumPayment: [{
                    type: i0.Input
                }], minimumPaymentDueDate: [{
                    type: i0.Input
                }], currency: [{
                    type: i0.Input
                }], useShortCurrency: [{
                    type: i0.Input
                }], isSmallScreen: [{
                    type: i0.Input
                }], isExtraSmallScreen: [{
                    type: i0.Input
                }], responsiveView: [{
                    type: i0.Input
                }] } });

    /**
     * Displays a credit limit status bar
     *
     * @usageNotes
     *
     * ```html
     * <bb-credit-limit-status-bar-ui
     *   [reserved]="100"
     *   [owed]="1000"
     *   [leftToSpend]="400"
     * ></bb-credit-limit-status-bar-ui>
     * ```
     *
     * @ngModule CreditLimitModule
     */
    var CreditLimitStatusBarComponent = /** @class */ (function () {
        function CreditLimitStatusBarComponent() {
            /**
             * Defines whether to display credit limit status bar in "Emptied" of "Filled" view mode. Default "Emptied"
             */
            this.viewMode = 'emptied';
        }
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "valueAriaLabels", {
            /**
             * Aria labels for "reserved", "overdue", "owed" and "leftToSpend" values.
             */
            get: function () {
                return {
                    reservedValue: $localize(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject([":Reserved value a11y@@product-summary.credit-limit-status-bar.a11y.reserved:Reserved ", "%"], [":Reserved value a11y@@product-summary.credit-limit-status-bar.a11y.reserved:Reserved ", "%"])), this.formatNumberForReading(this.reservedPercent)),
                    overdueValue: $localize(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject([":Overdue value a11y@@product-summary.credit-limit-status-bar.a11y.overdue:Overdue ", "%"], [":Overdue value a11y@@product-summary.credit-limit-status-bar.a11y.overdue:Overdue ", "%"])), this.formatNumberForReading(this.overduePercent)),
                    owedValue: $localize(templateObject_3$2 || (templateObject_3$2 = __makeTemplateObject([":Owed value a11y@@product-summary.credit-limit-status-bar.a11y.owed:Owed ", "%"], [":Owed value a11y@@product-summary.credit-limit-status-bar.a11y.owed:Owed ", "%"])), this.formatNumberForReading(this.owedPercent)),
                    leftToSpendValue: $localize(templateObject_4$2 || (templateObject_4$2 = __makeTemplateObject([":Left to spend value a11y@@product-summary.credit-limit-status-bar.a11y.leftToSpend:Left to spend ", "%"], [":Left to spend value a11y@@product-summary.credit-limit-status-bar.a11y.leftToSpend:Left to spend ", "%"])), this.formatNumberForReading(this.leftToSpendPercent)),
                };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "reservedWidth", {
            /**
             * Displayed width of "Reserved" amount.
             */
            get: function () {
                return this.reservedPercent > 0 ? this.reservedPercent + "%" : '0';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "overdueWidth", {
            /**
             * Displayed width of "Overdue" amount.
             */
            get: function () {
                var reservedWidth = new BigNumber__default["default"](this.overduePercent).plus(this.reservedPercent).toNumber();
                return this.overduePercent > 0 ? reservedWidth + "%" : '0';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "owedWidth", {
            /**
             * Displayed width of "Owed" amount.
             */
            get: function () {
                var owedValue = this.toValidValue(this.owed);
                var filledValue = new BigNumber__default["default"](this.owedPercent).plus(this.overduePercent).plus(this.reservedPercent).toNumber();
                var filledWidth = owedValue !== 0 ? filledValue + "%" : '0';
                var emptiedWidth = owedValue !== 0 ? '100%' : '0';
                return this.viewMode === 'emptied' ? emptiedWidth : filledWidth;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "leftToSpendWidth", {
            /**
             * Displayed width of "Left to spend" amount.
             */
            get: function () {
                var leftToSpendValue = this.toValidValue(this.leftToSpend);
                var emptiedValue = new BigNumber__default["default"](this.leftToSpendPercent)
                    .plus(this.overduePercent)
                    .plus(this.reservedPercent)
                    .toNumber();
                var emptiedWidth = leftToSpendValue !== 0 ? emptiedValue + "%" : '0';
                var filledWidth = leftToSpendValue !== 0 ? '100%' : '0';
                return this.viewMode === 'emptied' ? emptiedWidth : filledWidth;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "overdueMinSize", {
            /**
             * Minimum size of "Overdue" amount.
             */
            get: function () {
                var reservedValue = this.toValidValue(this.reserved);
                return reservedValue > 0 ? 'md' : 'sm';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "primaryMinSize", {
            /**
             * Minimum size of primary amount.
             */
            get: function () {
                var reservedValue = this.toValidValue(this.reserved);
                var overdueValue = this.toValidValue(this.overdue);
                return reservedValue > 0 && overdueValue > 0 ? 'lg' : reservedValue > 0 || overdueValue > 0 ? 'md' : 'sm';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "reservedPercent", {
            get: function () {
                return this.getPercentageOfLimit(this.reserved);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "overduePercent", {
            get: function () {
                return this.getPercentageOfLimit(this.overdue);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "owedPercent", {
            get: function () {
                return this.getPercentageOfLimit(this.owed);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "leftToSpendPercent", {
            get: function () {
                return this.getPercentageOfLimit(this.leftToSpend);
            },
            enumerable: false,
            configurable: true
        });
        CreditLimitStatusBarComponent.prototype.formatNumberForReading = function (value, decimalPlaces) {
            if (decimalPlaces === void 0) { decimalPlaces = 2; }
            var number = new BigNumber__default["default"](value);
            return number.decimalPlaces() > 0 ? number.toFormat(decimalPlaces) : value.toString();
        };
        CreditLimitStatusBarComponent.prototype.getPercentageOfLimit = function (value) {
            var validValue = this.toValidValue(value);
            return validValue !== 0 ? new BigNumber__default["default"](validValue).dividedBy(this.limit).multipliedBy(100).toNumber() : 0;
        };
        Object.defineProperty(CreditLimitStatusBarComponent.prototype, "limit", {
            get: function () {
                var reservedValue = this.toValidValue(this.reserved);
                var overdueValue = this.toValidValue(this.overdue);
                var owedValue = this.toValidValue(this.owed);
                var leftToSpendValue = this.toValidValue(this.leftToSpend);
                return new BigNumber__default["default"](reservedValue).plus(overdueValue).plus(owedValue).plus(leftToSpendValue).toNumber();
            },
            enumerable: false,
            configurable: true
        });
        CreditLimitStatusBarComponent.prototype.toValidValue = function (value) {
            return value !== undefined && !Number.isNaN(value) ? Math.abs(value) : 0;
        };
        return CreditLimitStatusBarComponent;
    }());
    CreditLimitStatusBarComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitStatusBarComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CreditLimitStatusBarComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CreditLimitStatusBarComponent, selector: "bb-credit-limit-status-bar-ui", inputs: { viewMode: "viewMode", reserved: "reserved", overdue: "overdue", owed: "owed", leftToSpend: "leftToSpend" }, ngImport: i0__namespace, template: "<div class=\"bb-credit-limit-status-bar\">\n  <span\n    class=\"sr-only\"\n    data-role=\"title\"\n    aria-label=\"Credit limit status bar\"\n    i18n-aria-label=\"Credit limit status bar@@product-summary.credit-limit-status-bar.a11y.title\"\n  ></span>\n\n  <ng-container *ngTemplateOutlet=\"viewMode === 'emptied' ? owedValue : leftToSpendValue; context: { color: 'secondary' }\"></ng-container>\n  <ng-container *ngTemplateOutlet=\"viewMode === 'emptied' ? leftToSpendValue : owedValue; context: { color: 'primary' }\"></ng-container>\n\n  <ng-template #owedValue let-color=\"color\">\n    <div\n      *ngIf=\"owed\"\n      [style.width]=\"owedWidth\"\n      class=\"bb-credit-limit-status-bar__value bb-credit-limit-status-bar__value--{{primaryMinSize}} bb-credit-limit__color--{{color}}\"\n      data-role=\"owed-value\"\n      [attr.aria-label]=\"valueAriaLabels.owedValue\"\n    ></div>\n  </ng-template>\n  <ng-template #leftToSpendValue let-color=\"color\">\n    <div\n      *ngIf=\"leftToSpend\"\n      [style.width]=\"leftToSpendWidth\"\n      class=\"bb-credit-limit-status-bar__value bb-credit-limit-status-bar__value--{{primaryMinSize}} bb-credit-limit__color--{{color}}\"\n      data-role=\"left-to-spend-value\"\n      [attr.aria-label]=\"valueAriaLabels.leftToSpendValue\"\n    ></div>\n  </ng-template>\n  <div\n    *ngIf=\"overdue\"\n    [style.width]=\"overdueWidth\"\n    class=\"bb-credit-limit-status-bar__value bb-credit-limit-status-bar__value--{{overdueMinSize}} bb-credit-limit__color--danger\"\n    data-role=\"overdue-value\"\n    [attr.aria-label]=\"valueAriaLabels.overdueValue\"\n  ></div>\n  <div\n    *ngIf=\"reserved\"\n    [style.width]=\"reservedWidth\"\n    class=\"bb-credit-limit-status-bar__value bb-credit-limit-status-bar__value--sm bb-credit-limit__color--warning\"\n    data-role=\"reserved-value\"\n    [attr.aria-label]=\"valueAriaLabels.reservedValue\"\n  ></div>\n</div>\n", directives: [{ type: i3__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitStatusBarComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-credit-limit-status-bar-ui',
                        templateUrl: './credit-limit-status-bar.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { viewMode: [{
                    type: i0.Input
                }], reserved: [{
                    type: i0.Input
                }], overdue: [{
                    type: i0.Input
                }], owed: [{
                    type: i0.Input
                }], leftToSpend: [{
                    type: i0.Input
                }] } });
    var templateObject_1$4, templateObject_2$3, templateObject_3$2, templateObject_4$2;

    /**
     * Displays credit limit of the passed product.
     *
     * @usageNotes
     *
     * ### Usage example
     * ```
     * <bb-credit-limit
     *   [product]=product
     *   viewMode='filled'
     * ></bb-credit-limit>
     * ```
     *
     * @NgModule AccountHeaderModule
     */
    var CreditLimitComponent = /** @class */ (function (_super) {
        __extends(CreditLimitComponent, _super);
        /**
         * Constructor
         *
         * @param el
         * @param changeDetector
         */
        function CreditLimitComponent(el, changeDetector) {
            var _this = _super.call(this, el, changeDetector) || this;
            _this.el = el;
            _this.changeDetector = changeDetector;
            /**
             * View Mode. Can be "filled" or "emptied"
             *
             * @default "emptied"
             */
            _this.viewMode = 'emptied';
            /**
             * Defines whether to show minimum payment information
             *
             * @default "true"
             */
            _this.showMinimumPayment = true;
            /**
             * Whether currency should be displayed as a sign.
             *
             * @default true.
             */
            _this.useShortCurrency = true;
            /**
             * Localization for account attributes
             */
            _this.localization = {
                owed: $localize(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject([":Owed|Credit limit attribute: owed@@bb-credit-limit-attribute-owed:Owed"], [":Owed|Credit limit attribute\\: owed@@bb-credit-limit-attribute-owed:Owed"]))),
                reserved: $localize(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject([":Reserved|Credit limit attribute: reserved@@bb-credit-limit-attribute-reserved:Reserved"], [":Reserved|Credit limit attribute\\: reserved@@bb-credit-limit-attribute-reserved:Reserved"]))),
                overdue: $localize(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject([":Overdue|Credit limit attribute: reserved@@bb-credit-limit-attribute-overdue:Overdue"], [":Overdue|Credit limit attribute\\: reserved@@bb-credit-limit-attribute-overdue:Overdue"]))),
                leftToSpend: $localize(templateObject_4$1 || (templateObject_4$1 = __makeTemplateObject([":Left to Spend|Credit limit attribute: Left to Spend@@bb-credit-limit-attribute-left-to-spend:Left to Spend"], [":Left to Spend|Credit limit attribute\\: Left to Spend@@bb-credit-limit-attribute-left-to-spend:Left to Spend"]))),
                minimumPayment: $localize(templateObject_5 || (templateObject_5 = __makeTemplateObject([":Minimum Payment|Credit limit attribute: Minimum Payment@@bb-credit-limit-attribute-minimum-payment:Minimum Payment"], [":Minimum Payment|Credit limit attribute\\: Minimum Payment@@bb-credit-limit-attribute-minimum-payment:Minimum Payment"]))),
                of: $localize(templateObject_6 || (templateObject_6 = __makeTemplateObject([":of|Credit limit: of total@@bb-credit-limit-attribute-value-of:of"], [":of|Credit limit\\: of total@@bb-credit-limit-attribute-value-of:of"]))),
            };
            return _this;
        }
        return CreditLimitComponent;
    }(i6.ResponsiveContainerComponent));
    CreditLimitComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitComponent, deps: [{ token: i0__namespace.ElementRef }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    CreditLimitComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CreditLimitComponent, selector: "bb-credit-limit", inputs: { product: "product", viewMode: "viewMode", showMinimumPayment: "showMinimumPayment", useShortCurrency: "useShortCurrency" }, usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"product\">\n  <!-- viewMode: emptied -->\n  <ng-container *ngIf=\"viewMode === 'emptied'; else filledTemplate\">\n    <div class=\"bb-block bb-block--md\" data-role=\"credit-limit-emptied-mode-header\">\n      <!-- Left to Spend -->\n      <bb-credit-limit-attribute\n        *ngIf=\"product.remainingCredit | bbIsDefined\"\n        data-role=\"credit-limit-left-to-spend\"\n        [title]=\"localization.leftToSpend\"\n        color=\"primary\">\n        <div class=\"bb-stack bb-stack--density-xs\"\n             data-role=\"credit-limit-left-to-spend-value\">\n          <bb-amount-ui\n            class=\"bb-stack__item bb-heading-3\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.remainingCredit | bbAbsoluteValue\"\n            [mapCurrency]=\"useShortCurrency\"\n          ></bb-amount-ui>\n          <ng-container *ngIf=\"product.creditLimit\">\n            <span class=\"bb-stack__item bb-text-support bb-subtitle\">{{localization.of}}</span>\n            <bb-amount-ui\n              class=\"bb-stack__item bb-text-support bb-subtitle\"\n              [currency]=\"product.currency\"\n              [amount]=\"product.creditLimit | bbAbsoluteValue\"\n              [mapCurrency]=\"useShortCurrency\"\n            ></bb-amount-ui>\n          </ng-container>\n        </div>\n      </bb-credit-limit-attribute>\n    </div>\n\n    <div class=\"bb-block bb-block--md\">\n      <!-- Credit limit status bar -->\n      <ng-container *ngTemplateOutlet=\"creditLimitStatusBar\"></ng-container>\n    </div>\n\n    <div [ngClass]=\"{\n           'bb-stack justify-content-between': responsiveView === 'screen'\n         }\"\n    >\n      <!-- Overdue -->\n      <ng-container *ngTemplateOutlet=\"overdueAttribute\"></ng-container>\n      <!-- Reserved -->\n      <ng-container *ngTemplateOutlet=\"reservedAttribute\"></ng-container>\n\n      <!-- Owed -->\n      <bb-credit-limit-attribute\n        [class.bb-stack__item]=\"responsiveView === 'screen'\"\n        *ngIf=\"product.creditLimitUsage\"\n        data-role=\"credit-limit-owed\"\n        [title]=\"localization.owed\"\n        color=\"secondary\"\n        [currency]=\"product.currency\"\n        [amount]=\"product.creditLimitUsage | bbAbsoluteValue\"\n        [useShortCurrency]=\"useShortCurrency\"\n        [responsiveView]=\"responsiveView\"\n      >\n      </bb-credit-limit-attribute>\n\n      <ng-container *ngIf=\"showMinimumPayment && product.minimumPayment\">\n        <div *ngIf=\"responsiveView === 'tablet'\" class=\"bb-block bb-block--lg\"></div>\n        <bb-credit-limit-minimum-payment\n          [minimumPayment]=\"product.minimumPayment | bbAbsoluteValue\"\n          [minimumPaymentDueDate]=\"product.minimumPaymentDueDate\"\n          [currency]=\"product.currency\"\n          [useShortCurrency]=\"useShortCurrency\"\n          [responsiveView]=\"responsiveView\"\n        ></bb-credit-limit-minimum-payment>\n      </ng-container>\n    </div>\n  </ng-container>\n\n  <!-- viewMode: filled -->\n  <ng-template #filledTemplate>\n    <div class=\"bb-block bb-block--md\" data-role=\"credit-limit-filled-mode-header\">\n      <!-- Owed -->\n      <bb-credit-limit-attribute\n        *ngIf=\"product.creditLimitUsage | bbIsDefined\"\n        data-role=\"credit-limit-owed\"\n        [title]=\"localization.owed\"\n        color=\"primary\">\n        <div class=\"bb-stack bb-stack--density-xs\"\n             data-role=\"credit-limit-owed-value\">\n          <bb-amount-ui\n            class=\"bb-stack__item bb-heading-3\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.creditLimitUsage | bbAbsoluteValue\"\n            [mapCurrency]=\"useShortCurrency\"\n          ></bb-amount-ui>\n          <ng-container *ngIf=\"product.creditLimit\">\n            <span class=\"bb-stack__item bb-text-support bb-subtitle\">{{localization.of}}</span>\n            <bb-amount-ui\n              class=\"bb-stack__item bb-text-support bb-subtitle\"\n              [currency]=\"product.currency\"\n              [amount]=\"product.creditLimit | bbAbsoluteValue\"\n              [mapCurrency]=\"useShortCurrency\"\n            ></bb-amount-ui>\n          </ng-container>\n        </div>\n      </bb-credit-limit-attribute>\n    </div>\n\n    <div class=\"bb-block bb-block--md\">\n      <!-- Credit limit status bar -->\n      <ng-container *ngTemplateOutlet=\"creditLimitStatusBar\"></ng-container>\n    </div>\n\n    <div [ngClass]=\"{\n           'bb-stack justify-content-between': responsiveView === 'screen'\n         }\"\n    >\n      <!-- Overdue -->\n      <ng-container *ngTemplateOutlet=\"overdueAttribute\"></ng-container>\n      <!-- Reserved -->\n      <ng-container *ngTemplateOutlet=\"reservedAttribute\"></ng-container>\n\n      <!-- Left to Spend -->\n      <bb-credit-limit-attribute\n        *ngIf=\"product.remainingCredit\"\n        [class.bb-stack__item]=\"responsiveView === 'screen'\"\n        data-role=\"credit-limit-left-to-spend\"\n        [title]=\"localization.leftToSpend\"\n        color=\"secondary\"\n        [currency]=\"product.currency\"\n        [amount]=\"product.remainingCredit | bbAbsoluteValue\"\n        [useShortCurrency]=\"useShortCurrency\"\n        [responsiveView]=\"responsiveView\"\n      >\n      </bb-credit-limit-attribute>\n\n      <ng-container *ngIf=\"showMinimumPayment && product.minimumPayment\">\n        <div *ngIf=\"responsiveView === 'tablet'\" class=\"bb-block bb-block--lg\"></div>\n        <bb-credit-limit-minimum-payment\n          [minimumPayment]=\"product.minimumPayment | bbAbsoluteValue\"\n          [minimumPaymentDueDate]=\"product.minimumPaymentDueDate\"\n          [currency]=\"product.currency\"\n          [useShortCurrency]=\"useShortCurrency\"\n          [responsiveView]=\"responsiveView\"\n        ></bb-credit-limit-minimum-payment>\n      </ng-container>\n    </div>\n  </ng-template>\n</ng-container>\n\n<ng-template #overdueAttribute>\n  <bb-credit-limit-attribute\n    *ngIf=\"product.amountInArrear\"\n    [ngClass]=\"{\n      'bb-stack__item': responsiveView === 'screen',\n      'bb-block bb-block--sm': responsiveView === 'tablet'\n    }\"\n    data-role=\"credit-limit-overdue\"\n    [title]=\"localization.overdue\"\n    color=\"danger\"\n    [currency]=\"product.currency\"\n    [amount]=\"product.amountInArrear | bbAbsoluteValue\"\n    [isAmountColored]=\"true\"\n    [useShortCurrency]=\"useShortCurrency\"\n    [responsiveView]=\"responsiveView\"\n  >\n  </bb-credit-limit-attribute>\n</ng-template>\n\n<ng-template #reservedAttribute>\n  <bb-credit-limit-attribute\n    *ngIf=\"product.reservedAmount\"\n    [ngClass]=\"{\n      'bb-stack__item': responsiveView === 'screen',\n      'bb-block bb-block--sm': responsiveView === 'tablet'\n    }\"\n    data-role=\"credit-limit-reserved\"\n    [title]=\"localization.reserved\"\n    color=\"warning\"\n    [currency]=\"product.currency\"\n    [amount]=\"product.reservedAmount | bbAbsoluteValue\"\n    [useShortCurrency]=\"useShortCurrency\"\n    [responsiveView]=\"responsiveView\"\n  >\n  </bb-credit-limit-attribute>\n</ng-template>\n\n<ng-template #creditLimitStatusBar>\n  <bb-credit-limit-status-bar-ui\n    *ngIf=\"product.reservedAmount || product.amountInArrear || product.creditLimitUsage || product.remainingCredit\"\n    aria-hidden=\"true\"\n    data-role=\"credit-limit-status-bar\"\n    [reserved]=\"product.reservedAmount | bbAbsoluteValue\"\n    [overdue]=\"product.amountInArrear | bbAbsoluteValue\"\n    [owed]=\"product.creditLimitUsage | bbAbsoluteValue\"\n    [leftToSpend]=\"product.remainingCredit | bbAbsoluteValue\"\n    [viewMode]=\"viewMode\"\n  ></bb-credit-limit-status-bar-ui>\n</ng-template>\n", components: [{ type: CreditLimitAttributeComponent, selector: "bb-credit-limit-attribute", inputs: ["title", "color", "currency", "amount", "isAmountColored", "useShortCurrency", "isSmallScreen", "isExtraSmallScreen", "responsiveView"] }, { type: i2__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: CreditLimitMinimumPaymentComponent, selector: "bb-credit-limit-minimum-payment", inputs: ["minimumPayment", "minimumPaymentDueDate", "currency", "useShortCurrency", "isSmallScreen", "isExtraSmallScreen", "responsiveView"] }, { type: CreditLimitStatusBarComponent, selector: "bb-credit-limit-status-bar-ui", inputs: ["viewMode", "reserved", "overdue", "owed", "leftToSpend"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "bbIsDefined": i6__namespace.IsDefinedPipe, "bbAbsoluteValue": i6__namespace.AbsoluteValuePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-credit-limit',
                        templateUrl: './credit-limit.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { product: [{
                    type: i0.Input
                }], viewMode: [{
                    type: i0.Input
                }], showMinimumPayment: [{
                    type: i0.Input
                }], useShortCurrency: [{
                    type: i0.Input
                }] } });
    var templateObject_1$3, templateObject_2$2, templateObject_3$1, templateObject_4$1, templateObject_5, templateObject_6;

    var uiModules$f = [i2.AmountModule, i1$2.BbDatePipeModule, i6.FormatPipeModule, i6.ValidationModule];
    var components$c = [
        CreditLimitComponent,
        CreditLimitAttributeComponent,
        CreditLimitStatusBarComponent,
        CreditLimitMinimumPaymentComponent,
    ];
    var CreditLimitModule = /** @class */ (function () {
        function CreditLimitModule() {
        }
        return CreditLimitModule;
    }());
    CreditLimitModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CreditLimitModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitModule, declarations: [CreditLimitComponent,
            CreditLimitAttributeComponent,
            CreditLimitStatusBarComponent,
            CreditLimitMinimumPaymentComponent], imports: [i3.CommonModule, i2.AmountModule, i1$2.BbDatePipeModule, i6.FormatPipeModule, i6.ValidationModule], exports: [CreditLimitComponent,
            CreditLimitAttributeComponent,
            CreditLimitStatusBarComponent,
            CreditLimitMinimumPaymentComponent] });
    CreditLimitModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$f))] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditLimitModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$f)),
                        declarations: __spreadArray([], __read(components$c)),
                        exports: __spreadArray([], __read(components$c)),
                    }]
            }] });

    /**
     *
     * @usageNotes
     *
     * ### Usage example
     * ```
     * <bb-account-header
     *   [product]="product"
     *   [canEditAlias]="true"
     *   [isBalanceTypeVisible]="true"
     *   [mapCurrency]="true"
     * ></bb-account-header>
     * ```
     *
     * @NgModule AccountHeaderModule
     */
    var AccountHeaderComponent = /** @class */ (function () {
        function AccountHeaderComponent() {
            /**
             * Localisation for aliasHelpText
             */
            this.aliasHelpTextLocalization = {
                ACCOUNT: $localize(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject([":This is visible to the whole company|Subtitle. Alias account visibility level@@product-summary-account-details-header.alias-visibility-level.account:This is visible to the whole company"], [":This is visible to the whole company|Subtitle. Alias account visibility level@@product-summary-account-details-header.alias-visibility-level.account:This is visible to the whole company"]))),
                USER: $localize(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject([":This is only visible to you|Subtitle. Alias user visibility level@@product-summary-account-details-header.alias-visibility-level.user:This is only visible to you"], [":This is only visible to you|Subtitle. Alias user visibility level@@product-summary-account-details-header.alias-visibility-level.user:This is only visible to you"]))),
            };
            /**
             * Defines if alias can be edited
             */
            this.canEditAlias = false;
            /**
             * Defines visibility level of the account alis.
             *
             * @default 'USER'
             */
            this.aliasLevel = i6.AccountAliasDisplayingLevel.USER;
            /**
             * Defines visibility of the balance.
             *
             * @default true
             */
            this.showBalance = true;
            /**
             * Defines visibility of the balance type.
             *
             * @default true
             */
            this.isBalanceTypeVisible = true;
            /**
             * Defines visibility of the logo
             *
             * @default true
             */
            this.isLogoVisible = true;
            /**
             * Whether currency local should be transformed to symbol.
             *
             * @default false.
             */
            this.mapCurrency = false;
            /**
             * Event (Output) that emits when item alias is changed
             */
            this.aliasUpdated = new i0.EventEmitter();
            /**
             * Copy of product.displayName to be displayed and edited
             *
             * @default ""
             */
            this.displayName = '';
            /**
             * Flag to manage "confirm alias update" modal
             *
             * @default false
             */
            this.isVisibleAliasModal = false;
            /**
             * Maximum length of product item aliases
             *
             * @default UserPreferencesValidationSettings.ALIAS_MAX_LENGTH (50)
             */
            this.aliasMaxLength = i6.UserPreferencesValidationSettings.ALIAS_MAX_LENGTH;
            /**
             * Options for the alias modal window
             */
            this.modalOptions = {
                centered: true,
                backdrop: 'static',
            };
        }
        Object.defineProperty(AccountHeaderComponent.prototype, "product", {
            get: function () {
                return this._product;
            },
            /**
             * Product type data to display account info
             *
             * @default undefined
             */
            set: function (value) {
                this.setDisplayName((value === null || value === void 0 ? void 0 : value.displayName) || '');
                this._product = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountHeaderComponent.prototype, "aliasEditMode", {
            /**
             * Indicates whether the account alias is being edited
             */
            get: function () {
                var _a;
                return !!this.accountAliasEditor && ((_a = this.accountAliasEditor) === null || _a === void 0 ? void 0 : _a.editMode);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Event handler for the `accept` event of `bb-input-inline-edit-ui`
         * if `alias` is empty - emits `aliasUpdated`
         * if `alias` isn't empty and differ to previous value - opens a confirmation modal
         *
         * @param alias
         */
        AccountHeaderComponent.prototype.onAliasEdit = function (alias) {
            var _a;
            if (alias === '') {
                this.updateAlias(alias);
            }
            else if (alias !== ((_a = this._product) === null || _a === void 0 ? void 0 : _a.displayName)) {
                this.displayName = alias;
                if (this.aliasLevel === i6.AccountAliasDisplayingLevel.USER) {
                    this.updateAlias(this.displayName);
                }
                if (this.aliasLevel === i6.AccountAliasDisplayingLevel.ACCOUNT) {
                    this.isVisibleAliasModal = true;
                }
            }
        };
        /**
         * Event handler for the `confirm` event of `bb-modal-ui`
         * closes the modal and sets previous `displayName`
         */
        AccountHeaderComponent.prototype.onModalConfirm = function () {
            this.updateAlias(this.displayName);
        };
        /**
         * Event handler for the `cancel` event of `bb-modal-ui`
         * closes the modal and sets previous `displayName`
         */
        AccountHeaderComponent.prototype.onModalCancel = function () {
            var _a;
            this.closeEditAliasModal();
            this.setDisplayName(((_a = this.product) === null || _a === void 0 ? void 0 : _a.displayName) || '');
        };
        /**
         * Closes the alias modal
         *
         * @private
         */
        AccountHeaderComponent.prototype.closeEditAliasModal = function () {
            this.isVisibleAliasModal = false;
        };
        /**
         * Sets the passed value to the inline editor
         *
         * @param value
         * @private
         */
        AccountHeaderComponent.prototype.setDisplayName = function (value) {
            var _a;
            this.displayName = value;
            if (this.accountAliasEditor) {
                this.accountAliasEditor.writeValue(this.displayName);
                (_a = this.accountAliasEditor.vForm) === null || _a === void 0 ? void 0 : _a.controls.inputInline.setValue(this.displayName);
            }
        };
        /**
         * Emits the passed alias to `aliasUpdated`
         *
         * @param alias
         * @private
         */
        AccountHeaderComponent.prototype.updateAlias = function (alias) {
            this.aliasUpdated.emit(alias);
            this.closeEditAliasModal();
        };
        return AccountHeaderComponent;
    }());
    AccountHeaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountHeaderComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountHeaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountHeaderComponent, selector: "bb-account-header", inputs: { product: "product", canEditAlias: "canEditAlias", aliasLevel: "aliasLevel", showBalance: "showBalance", isBalanceTypeVisible: "isBalanceTypeVisible", isLogoVisible: "isLogoVisible", mapCurrency: "mapCurrency" }, outputs: { aliasUpdated: "aliasUpdated" }, viewQueries: [{ propertyName: "accountAliasEditor", first: true, predicate: ["accountAliasEditor"], descendants: true }], ngImport: i0__namespace, template: "<ng-container *ngIf=\"product\">\n  <div class=\"bb-account-header bb-stack bb-stack--wrap bb-stack--align-top\"\n       data-role=\"account-header\"\n  >\n    <div class=\"bb-stack__item bb-stack__item--fill bb-stack\">\n      <bb-product-summary-account-logo\n        *ngIf=\"isLogoVisible && !aliasEditMode\"\n        class=\"bb-stack__item\"\n        data-role=\"account-header-logo\"\n        iconColor=\"secondary\"\n        iconSize=\"md\"\n        [logoSrc]=\"product?.financialInstitution?.logo\"\n        [productKindName]=\"product.productKindName\"></bb-product-summary-account-logo>\n\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <div\n          class=\"bb-account-header__title\"\n          data-role=\"account-header-title\"\n          [ngClass]=\"{\n          'bb-heading-3': !aliasEditMode,\n          'bb-block bb-block--xs': !aliasEditMode,\n          'bb-account-header__title--display-mode': !aliasEditMode\n        }\">\n          <div\n            *ngIf=\"product.financialInstitutionId | bbIsDefined\"\n            data-role=\"account-header-external-account-name\"\n          >\n            <span class=\"bb-stack__item bb-text-support bb-subtitle bb-text-bold\"\n                  data-role=\"account-header-external-bank-name\"\n                  *ngIf=\"product?.financialInstitution?.name; else externalBankNameDefault\">\n              {{product?.financialInstitution?.name}}\n            </span>\n            <ng-template #externalBankNameDefault>\n              <span class=\"bb-stack__item bb-text-support bb-subtitle bb-text-bold\"\n                    data-role=\"account-header-external-default-name\"\n                    i18n=\"External account|Default bank name for external accounts@@manage.account.item\">\n                External account\n              </span>\n            </ng-template>\n          </div>\n          <bb-input-inline-edit-ui\n            #accountAliasEditor\n            *ngIf=\"canEditAlias; else staticAccountAlias\"\n            [inputText]=\"displayName\"\n            [maxLength]=\"aliasMaxLength\"\n            [required]=\"false\"\n            (accept)=\"onAliasEdit($event)\"\n            ariaLabelEdit=\"Edit alias for {{displayName}}\"\n            i18n-ariaLabelEdit=\"Edit alias|Inline editor aria label\n          @@product-summary-account-details-header.edit-account-alias.aria-label\"\n            [hint]=\"aliasHelpTextLocalization[aliasLevel]\"\n          ></bb-input-inline-edit-ui>\n\n          <ng-template #staticAccountAlias>\n            {{ product?.displayName }}\n          </ng-template>\n        </div>\n        <bb-product-number\n          *ngIf=\"!aliasEditMode\"\n          class=\"bb-text-support bb-subtitle\"\n          data-role=\"account-header-number\"\n          [product]=\"product\"\n        ></bb-product-number>\n      </div>\n    </div>\n    <div class=\"bb-stack__break bb-stack__break--sm-down bb-block bb-block--md\"\n         *ngIf=\"showBalance && (product.availableBalance | bbIsDefined)\"\n    ></div>\n    <div class=\"bb-stack__item text-right bb-stack__item--push-right\"\n         *ngIf=\"showBalance && (product.availableBalance | bbIsDefined)\"\n         data-role=\"account-header-balance\">\n      <div class=\"bb-block bb-block--sm bb-text-support bb-subtitle\"\n           *ngIf=\"isBalanceTypeVisible\"\n           i18n=\"Available Balance|Available Balance label\n              @@account.details.current.account.label.availableBalance\"\n           data-role=\"account-header-balance-label\">\n        Available balance\n      </div>\n      <bb-amount-ui data-role=\"account-header-balance-value\"\n                    [ngClass]=\"{\n                      'bb-heading-1': !isBalanceTypeVisible,\n                      'bb-heading-2': isBalanceTypeVisible\n                    }\"\n                    [currency]=\"product.currency\"\n                    [amount]=\"product.availableBalance\"\n                    [mapCurrency]=\"mapCurrency\">\n      </bb-amount-ui>\n    </div>\n  </div>\n</ng-container>\n\n<bb-modal-ui\n        [isOpen]=\"isVisibleAliasModal\"\n        (cancel)=\"onModalCancel()\"\n        (confirm)=\"onModalConfirm()\"\n        [modalOptions]=\"modalOptions\"\n        data-role=\"account-header-modal\"\n>\n  <bb-modal-header-ui\n          title=\"This alias will be visible to users who have access to this account\"\n          i18n-title=\"This alias will be visible to users who have access to this account\n                    |Modal window title: update alias for all users\n                    @@product-summary-account-header.modal.title.update-account-alias\"\n  ></bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template\n            bbCustomModalBody\n            i18n=\"Are you sure to change the account alias?\n              |Modal window body: update account alias\n              @@product-summary-account-header.modal.body.update-account-alias\"\n    >\n      Are you sure to change the account alias?\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui\n          confirmText=\"Continue\"\n          i18n-confirmText=\"Continue|Modal window confirm alias update button\n            @@product-summary-account-header.modal.button.confirm-update-alias\"\n          cancelText=\"Cancel\"\n          i18n-cancelText=\"Cancel|Modal window cancel alias update button\n            @@product-summary-account-header.modal.button.cancel-update-alias\"\n  ></bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: ProductSummaryAccountLogoComponent, selector: "bb-product-summary-account-logo", inputs: ["logoSrc", "productKindName", "defaultProductKindName", "iconColor", "iconSize", "logoSize"] }, { type: i2__namespace$1.InputInlineEditComponent, selector: "bb-input-inline-edit-ui", inputs: ["state", "canEdit", "hasLoadingState", "inputInlineTemplate", "inputText", "maxLength", "minLength", "maxValue", "minValue", "autofocus", "ariaLabelAccept", "ariaLabelCancel", "ariaLabelEdit", "tooltipAccept", "tooltipCancel", "tooltipEdit", "autocomplete", "pattern", "hint"], outputs: ["stateChange", "cancel", "accept"] }, { type: ProductNumberComponent, selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i2__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i5__namespace$1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i5__namespace$1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i5__namespace$1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i5__namespace$1.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5__namespace$1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }], pipes: { "bbIsDefined": i6__namespace.IsDefinedPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountHeaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-header',
                        templateUrl: './bb-account-header.component.html',
                    }]
            }], propDecorators: { product: [{
                    type: i0.Input
                }], canEditAlias: [{
                    type: i0.Input
                }], aliasLevel: [{
                    type: i0.Input
                }], showBalance: [{
                    type: i0.Input
                }], isBalanceTypeVisible: [{
                    type: i0.Input
                }], isLogoVisible: [{
                    type: i0.Input
                }], mapCurrency: [{
                    type: i0.Input
                }], aliasUpdated: [{
                    type: i0.Output
                }], accountAliasEditor: [{
                    type: i0.ViewChild,
                    args: ['accountAliasEditor']
                }] } });
    var templateObject_1$2, templateObject_2$1;

    var uiModules$e = [
        i1.IconModule,
        ProductSummaryAccountLogoModule,
        i2$1.InputInlineEditModule,
        ProductNumberModule,
        CreditLimitModule,
        i2.AmountModule,
        i5$1.ModalModule,
    ];
    var AccountHeaderModule = /** @class */ (function () {
        function AccountHeaderModule() {
        }
        return AccountHeaderModule;
    }());
    AccountHeaderModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountHeaderModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AccountHeaderModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountHeaderModule, declarations: [AccountHeaderComponent], imports: [i3.CommonModule, i6.ValidationModule, i1.IconModule,
            ProductSummaryAccountLogoModule,
            i2$1.InputInlineEditModule,
            ProductNumberModule,
            CreditLimitModule,
            i2.AmountModule,
            i5$1.ModalModule], exports: [AccountHeaderComponent, i1.IconModule,
            ProductSummaryAccountLogoModule,
            i2$1.InputInlineEditModule,
            ProductNumberModule,
            CreditLimitModule,
            i2.AmountModule,
            i5$1.ModalModule] });
    AccountHeaderModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountHeaderModule, imports: [__spreadArray([i3.CommonModule, i6.ValidationModule], __read(uiModules$e)), i1.IconModule,
            ProductSummaryAccountLogoModule,
            i2$1.InputInlineEditModule,
            ProductNumberModule,
            CreditLimitModule,
            i2.AmountModule,
            i5$1.ModalModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountHeaderModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule, i6.ValidationModule], __read(uiModules$e)),
                        declarations: [AccountHeaderComponent],
                        exports: __spreadArray([AccountHeaderComponent], __read(uiModules$e)),
                    }]
            }] });

    /**
     * Displays account graphical header
     *
     * @usageNotes
     *
     * ### Usage example
     * ```
     * <bb-account-graphical-header
     *   [product]="product"
     *   [canEditAlias]="true"
     *   [useShortCurrency]="false"
     *   [creditLimitViewMode]="emptied"
     *   [canRepay]="true"
     *   [canCashInAdvance]="true"
     *   [creditCardBackgroundType]="black-card"
     *   (aliasUpdated)="onAliasUpdated($event)"
     *   (repayInitiated)="onRepayInitiated()"
     *   (cashAdvanceInitiated)="onCashAdvanceInitiated()"
     * ></bb-account-graphical-header>
     * ```
     *
     * @NgModule AccountGraphicalHeaderModule
     */
    var AccountGraphicalHeaderComponent = /** @class */ (function (_super) {
        __extends(AccountGraphicalHeaderComponent, _super);
        /**
         * @internal
         */
        function AccountGraphicalHeaderComponent(el, changeDetector) {
            var _this = _super.call(this, el, changeDetector) || this;
            _this.el = el;
            _this.changeDetector = changeDetector;
            /**
             * Defines visibility level of the account alis.
             *
             * @default 'USER'
             */
            _this.aliasLevel = i6.AccountAliasDisplayingLevel.USER;
            /**
             * Defines if alias can be edited
             *
             * @default false
             */
            _this.canEditAlias = false;
            /**
             * Whether currency should be displayed as a sign.
             *
             * @default true
             */
            _this.useShortCurrency = true;
            /**
             * Credit Limit view mode. Can be "filled" or "emptied"
             *
             * @default "emptied"
             */
            _this.creditLimitViewMode = 'emptied';
            /**
             * Defines if quick repay is allowed
             *
             * @default false
             */
            _this.canRepay = false;
            /**
             * Defines if cash in advance is allowed
             *
             * @default false
             */
            _this.canCashInAdvance = false;
            /**
             * Credit card background type
             *
             * @default "black-card"
             */
            _this.creditCardBackgroundType = 'black-card';
            /**
             * Defines visibility of the logo
             *
             * @default false
             */
            _this.isLogoVisible = false;
            /**
             * Event (Output) that emits when item alias is changed
             */
            _this.aliasUpdated = new i0.EventEmitter();
            /**
             * Event (Output) that emits when `repay` action initiated
             */
            _this.repayInitiated = new i0.EventEmitter();
            /**
             * Event (Output) that emits when `cash advance` action initiated
             */
            _this.cashAdvanceInitiated = new i0.EventEmitter();
            return _this;
        }
        Object.defineProperty(AccountGraphicalHeaderComponent.prototype, "graphicalCreditCardConfiguration", {
            /**
             * A configuration for graphical presentation of payment card
             */
            get: function () {
                var _a, _b, _c, _d, _e, _f, _g, _h, _j;
                return {
                    number: (_b = (_a = this.product) === null || _a === void 0 ? void 0 : _a.number) !== null && _b !== void 0 ? _b : '',
                    vendor: (_e = (_d = (_c = this.product) === null || _c === void 0 ? void 0 : _c.cardDetails) === null || _d === void 0 ? void 0 : _d.cardProvider) !== null && _e !== void 0 ? _e : '',
                    name: (_g = (_f = this.product) === null || _f === void 0 ? void 0 : _f.accountHolderNames) !== null && _g !== void 0 ? _g : '',
                    expirationDate: ((_h = this.product) === null || _h === void 0 ? void 0 : _h.validThru) ? new Date((_j = this.product) === null || _j === void 0 ? void 0 : _j.validThru) : undefined,
                    cardName: this.creditCardBackgroundType,
                };
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Event handler for the `click` event of `repay-button`;
         * Emits `arrangementId` to `repayInitiated`
         */
        AccountGraphicalHeaderComponent.prototype.repayButtonClicked = function () {
            this.repayInitiated.emit(this.getArrangementId());
        };
        /**
         * Event handler for the `click` event of `cash-advance-button`;
         * Emits `arrangementId` to `cashAdvanceInitiated`
         */
        AccountGraphicalHeaderComponent.prototype.cashAdvanceButtonClicked = function () {
            this.cashAdvanceInitiated.emit(this.getArrangementId());
        };
        /**
         * Returns arrangement id of the product
         *
         * @private
         */
        AccountGraphicalHeaderComponent.prototype.getArrangementId = function () {
            var _a;
            return (_a = this.product) === null || _a === void 0 ? void 0 : _a.id;
        };
        return AccountGraphicalHeaderComponent;
    }(i6.ResponsiveContainerComponent));
    AccountGraphicalHeaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountGraphicalHeaderComponent, deps: [{ token: i0__namespace.ElementRef }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountGraphicalHeaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountGraphicalHeaderComponent, selector: "bb-account-graphical-header", inputs: { product: "product", aliasLevel: "aliasLevel", canEditAlias: "canEditAlias", useShortCurrency: "useShortCurrency", creditLimitViewMode: "creditLimitViewMode", canRepay: "canRepay", canCashInAdvance: "canCashInAdvance", creditCardBackgroundType: "creditCardBackgroundType", isLogoVisible: "isLogoVisible" }, outputs: { aliasUpdated: "aliasUpdated", repayInitiated: "repayInitiated", cashAdvanceInitiated: "cashAdvanceInitiated" }, usesInheritance: true, ngImport: i0__namespace, template: "<div\n  class=\"bb-account-graphical-header\"\n  data-role=\"account-graphical-header\"\n>\n  <div class=\"bb-stack bb-stack--align-top\">\n    <div class=\"bb-stack__item bb-stack__item--fill bb-stack__item--spacing-xl\">\n      <div class=\"bb-account-graphical-header__title\"\n           [ngClass]=\"{\n                'bb-stack__item--spacing-none': responsiveView === 'tablet',\n                'bb-block bb-block--xl': !accountHeader.aliasEditMode,\n                'bb-account-graphical-header__title--input-mode': accountHeader.aliasEditMode\n              }\">\n        <bb-account-header\n                data-role=\"bb-account-graphical-header-account-header\"\n                #accountHeader\n                [product]=\"product\"\n                [aliasLevel]=\"aliasLevel\"\n                [canEditAlias]=\"canEditAlias\"\n                [showBalance]=\"false\"\n                [isLogoVisible]=\"isLogoVisible\"\n                (aliasUpdated)=\"aliasUpdated.emit($event)\"\n        ></bb-account-header>\n      </div>\n      <div>\n        <bb-credit-limit\n                data-role=\"bb-account-graphical-header-credit-limit\"\n                [product]=\"product\"\n                [viewMode]=\"creditLimitViewMode\"\n                [showMinimumPayment]=\"responsiveView === 'tablet' || responsiveView === 'mobile'\"\n                [useShortCurrency]=\"useShortCurrency\"\n                [responsiveView]=\"responsiveView\"\n        ></bb-credit-limit>\n      </div>\n    </div>\n\n    <div class=\"bb-stack__item\" *ngIf=\"responsiveView === 'screen'\">\n      <bb-payment-card-ui\n              data-role=\"bb-account-graphical-header-payment-card\"\n              [paymentCard]=\"graphicalCreditCardConfiguration\"\n              [paymentCardNumberFormat]=\"'cardNumber' | bbProductNumberFormat\"\n      ></bb-payment-card-ui>\n    </div>\n  </div>\n\n  <div *ngIf=\"canRepay || canCashInAdvance || (responsiveView === 'screen' && product?.minimumPayment)\"\n       class=\"bb-block bb-block--lg\"></div>\n\n  <div class=\"bb-stack bb-stack--align-bottom\">\n    <div class=\"bb-stack_item bb-stack__item--fill\"  *ngIf=\"canRepay || canCashInAdvance\">\n      <div class=\"bb-stack bb-stack--wrap\"\n           [ngClass]=\"{\n                 'bb-stack--density-none': responsiveView === 'mobile'\n               }\">\n        <button\n                *ngIf=\"canRepay\"\n                class=\"bb-stack__item\"\n                [ngClass]=\"{\n                'bb-stack__item--fill': responsiveView === 'mobile'\n              }\"\n                bbButton\n                type=\"button\"\n                color=\"primary\"\n                data-role=\"account-graphical-header-repay-button\"\n                (click)=\"repayButtonClicked()\"\n        >\n          <bb-icon-ui name=\"call-received\"></bb-icon-ui>\n          <span i18n=\"Repay@@bb-product-summary-account-graphical.repay\">Repay</span>\n        </button>\n        <div *ngIf=\"canRepay && canCashInAdvance\" class=\"bb-stack__break bb-stack__break--down bb-stack__break--spacing-sm\"></div>\n        <button\n                *ngIf=\"canCashInAdvance\"\n                class=\"bb-stack__item\"\n                [ngClass]=\"{\n                'bb-stack__item--fill': responsiveView === 'mobile'\n              }\"\n                bbButton\n                type=\"button\"\n                color=\"secondary\"\n                data-role=\"account-graphical-header-cash-advance-button\"\n                (click)=\"cashAdvanceButtonClicked()\"\n        >\n          <bb-icon-ui name=\"call-made\"></bb-icon-ui>\n          <span i18n=\"Cash advance@@bb-product-summary-account-graphical.cash-advance\">Cash advance</span>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"bb-stack_item bb-stack__item--push-right\"\n         *ngIf=\"responsiveView === 'screen' && product?.minimumPayment\">\n      <bb-credit-limit-minimum-payment\n              data-role=\"bb-account-graphical-header-minimum-payment\"\n              [minimumPayment]=\"product?.minimumPayment | bbAbsoluteValue\"\n              [minimumPaymentDueDate]=\"product?.minimumPaymentDueDate\"\n              [currency]=\"product?.currency\"\n              [useShortCurrency]=\"useShortCurrency\"\n      ></bb-credit-limit-minimum-payment>\n    </div>\n  </div>\n</div>\n", components: [{ type: AccountHeaderComponent, selector: "bb-account-header", inputs: ["product", "canEditAlias", "aliasLevel", "showBalance", "isBalanceTypeVisible", "isLogoVisible", "mapCurrency"], outputs: ["aliasUpdated"] }, { type: CreditLimitComponent, selector: "bb-credit-limit", inputs: ["product", "viewMode", "showMinimumPayment", "useShortCurrency"] }, { type: i3__namespace$1.PaymentCardComponent, selector: "bb-payment-card-ui", inputs: ["paymentCard", "paymentCardNumberFormat"] }, { type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: CreditLimitMinimumPaymentComponent, selector: "bb-credit-limit-minimum-payment", inputs: ["minimumPayment", "minimumPaymentDueDate", "currency", "useShortCurrency", "isSmallScreen", "isExtraSmallScreen", "responsiveView"] }], directives: [{ type: i3__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "bbProductNumberFormat": i6__namespace.ProductNumberFormatPipe, "bbAbsoluteValue": i6__namespace.AbsoluteValuePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountGraphicalHeaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-graphical-header',
                        templateUrl: './account-graphical-header.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { product: [{
                    type: i0.Input
                }], aliasLevel: [{
                    type: i0.Input
                }], canEditAlias: [{
                    type: i0.Input
                }], useShortCurrency: [{
                    type: i0.Input
                }], creditLimitViewMode: [{
                    type: i0.Input
                }], canRepay: [{
                    type: i0.Input
                }], canCashInAdvance: [{
                    type: i0.Input
                }], creditCardBackgroundType: [{
                    type: i0.Input
                }], isLogoVisible: [{
                    type: i0.Input
                }], aliasUpdated: [{
                    type: i0.Output
                }], repayInitiated: [{
                    type: i0.Output
                }], cashAdvanceInitiated: [{
                    type: i0.Output
                }] } });

    var uiModules$d = [
        i1$2.BbDatePipeModule,
        i4.ButtonModule,
        i3$1.PaymentCardModule,
        CreditLimitModule,
        AccountHeaderModule,
        i6.ProductNumberPipeModule,
        i6.ValidationModule,
        i6.FormatPipeModule,
    ];
    var components$b = [AccountGraphicalHeaderComponent];
    var AccountGraphicalHeaderModule = /** @class */ (function () {
        function AccountGraphicalHeaderModule() {
        }
        return AccountGraphicalHeaderModule;
    }());
    AccountGraphicalHeaderModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountGraphicalHeaderModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AccountGraphicalHeaderModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountGraphicalHeaderModule, declarations: [AccountGraphicalHeaderComponent], imports: [i3.CommonModule, i1$2.BbDatePipeModule,
            i4.ButtonModule,
            i3$1.PaymentCardModule,
            CreditLimitModule,
            AccountHeaderModule,
            i6.ProductNumberPipeModule,
            i6.ValidationModule,
            i6.FormatPipeModule], exports: [AccountGraphicalHeaderComponent] });
    AccountGraphicalHeaderModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountGraphicalHeaderModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$d))] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountGraphicalHeaderModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$d)),
                        declarations: __spreadArray([], __read(components$b)),
                        exports: __spreadArray([], __read(components$b)),
                    }]
            }] });

    //TO DO add this component to ui-ang as `bb-account-selector-ui`
    var CustomSingleSelectedItemLabelDirective = /** @class */ (function () {
        function CustomSingleSelectedItemLabelDirective(templateRef) {
            this.templateRef = templateRef;
        }
        return CustomSingleSelectedItemLabelDirective;
    }());
    CustomSingleSelectedItemLabelDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomSingleSelectedItemLabelDirective, deps: [{ token: i0__namespace.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    CustomSingleSelectedItemLabelDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomSingleSelectedItemLabelDirective, selector: "ng-template[bbCustomSingleSelectedItemLabel]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomSingleSelectedItemLabelDirective, decorators: [{
                type: i0.Directive,
                args: [{ selector: 'ng-template[bbCustomSingleSelectedItemLabel]' }]
            }], ctorParameters: function () { return [{ type: i0__namespace.TemplateRef }]; } });
    var CustomMultiSelectedItemsLabelDirective = /** @class */ (function () {
        function CustomMultiSelectedItemsLabelDirective(templateRef) {
            this.templateRef = templateRef;
        }
        return CustomMultiSelectedItemsLabelDirective;
    }());
    CustomMultiSelectedItemsLabelDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomMultiSelectedItemsLabelDirective, deps: [{ token: i0__namespace.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    CustomMultiSelectedItemsLabelDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomMultiSelectedItemsLabelDirective, selector: "ng-template[bbCustomMultiSelectedItemsLabel]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomMultiSelectedItemsLabelDirective, decorators: [{
                type: i0.Directive,
                args: [{ selector: 'ng-template[bbCustomMultiSelectedItemsLabel]' }]
            }], ctorParameters: function () { return [{ type: i0__namespace.TemplateRef }]; } });
    var CustomOptionsHeaderDirective = /** @class */ (function () {
        function CustomOptionsHeaderDirective(templateRef) {
            this.templateRef = templateRef;
        }
        return CustomOptionsHeaderDirective;
    }());
    CustomOptionsHeaderDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomOptionsHeaderDirective, deps: [{ token: i0__namespace.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    CustomOptionsHeaderDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomOptionsHeaderDirective, selector: "ng-template[bbCustomOptionsHeader]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomOptionsHeaderDirective, decorators: [{
                type: i0.Directive,
                args: [{ selector: 'ng-template[bbCustomOptionsHeader]' }]
            }], ctorParameters: function () { return [{ type: i0__namespace.TemplateRef }]; } });
    var CustomOptionItemDirective = /** @class */ (function () {
        function CustomOptionItemDirective(templateRef) {
            this.templateRef = templateRef;
        }
        return CustomOptionItemDirective;
    }());
    CustomOptionItemDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomOptionItemDirective, deps: [{ token: i0__namespace.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    CustomOptionItemDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomOptionItemDirective, selector: "ng-template[bbCustomOptionItem]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomOptionItemDirective, decorators: [{
                type: i0.Directive,
                args: [{ selector: 'ng-template[bbCustomOptionItem]' }]
            }], ctorParameters: function () { return [{ type: i0__namespace.TemplateRef }]; } });
    var CustomGroupItemsHeaderDirective = /** @class */ (function () {
        function CustomGroupItemsHeaderDirective(templateRef) {
            this.templateRef = templateRef;
        }
        return CustomGroupItemsHeaderDirective;
    }());
    CustomGroupItemsHeaderDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomGroupItemsHeaderDirective, deps: [{ token: i0__namespace.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    CustomGroupItemsHeaderDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomGroupItemsHeaderDirective, selector: "ng-template[bbCustomGroupItemsHeader]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomGroupItemsHeaderDirective, decorators: [{
                type: i0.Directive,
                args: [{ selector: 'ng-template[bbCustomGroupItemsHeader]' }]
            }], ctorParameters: function () { return [{ type: i0__namespace.TemplateRef }]; } });
    var CustomLoadingTemplateDirective = /** @class */ (function () {
        function CustomLoadingTemplateDirective(templateRef) {
            this.templateRef = templateRef;
        }
        return CustomLoadingTemplateDirective;
    }());
    CustomLoadingTemplateDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomLoadingTemplateDirective, deps: [{ token: i0__namespace.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    CustomLoadingTemplateDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomLoadingTemplateDirective, selector: "ng-template[bbCustomLoadingTemplate]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomLoadingTemplateDirective, decorators: [{
                type: i0.Directive,
                args: [{ selector: 'ng-template[bbCustomLoadingTemplate]' }]
            }], ctorParameters: function () { return [{ type: i0__namespace.TemplateRef }]; } });
    var AccountPickerComponent = /** @class */ (function () {
        function AccountPickerComponent() {
            this.hostRef = this;
            /**
             *  Event (Output) that emits when search is performed. Outputs search term
             */
            this.search = new i0.EventEmitter();
            /**
             *  Event (Output) that emits when clear search
             */
            this.clearSearch = new i0.EventEmitter();
            /**
             *  Event (Output) that emits when scrollToEnd is triggered
             */
            this.scrollToEnd = new i0.EventEmitter();
            /**
             *  Event (Output) that emits when item is removed
             */
            this.remove = new i0.EventEmitter();
            /**
             *  Event (Output) that emits when item is added to selected items or removed from selected items.
             * When Multiple is true: Output is Items[]
             * When Multuple is false: Output is Item
             * TODO: rename 'change' output to avoid collisions with a native 'change' event
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            this.change = new i0.EventEmitter();
            /**
             * Items array that this component displays
             */
            this.items = [];
            /**
             * Flag that indicates if select of multiple items is allowed
             */
            this.multiple = false;
            /**
             * Flag that indicates whether to close the menu when a value is selected
             */
            this.closeOnSelect = true;
            /**
             * Flag that indicates whether to allow to search for value. Default from ng-select false.
             */
            this.searchable = false;
            /**
             * Flag that indicates whether to allow to clear selected value.
             */
            this.clearable = false;
            /**
             * Placeholder text
             */
            this.placeholder = '';
            /**
             * Flag that indicates loading state from the outside (async items loading)
             */
            this.loading = false;
            /**
             * Flag that indicates opening direction of dropdown (bottom | top | auto)
             */
            this.dropdownPosition = 'auto';
            /**
             * Flag that indicates whether `scrollEnd` event should be emitted
             */
            this.disableScrollEnd = false;
            /**
             * Flag that indicates whether filtering of items is allowed.
             */
            this.filterItems = false;
            /**
             * Flag that indicates whether to mark first item as focused when opening/filtering.
             */
            this.markFirst = false;
            /**
             * Allow to group items by key or function expression
             */
            this.groupByFn = function () { return undefined; };
            /**
             * Function expression to provide group value
             */
            this.groupValueFn = function (name, children) { return ({
                name: name,
                total: children.length,
            }); };
        }
        AccountPickerComponent.prototype.onSearch = function (event) {
            this.search.emit(event);
        };
        AccountPickerComponent.prototype.onClear = function () {
            this.clearSearch.emit();
        };
        AccountPickerComponent.prototype.onScrollToEnd = function () {
            if (!this.disableScrollEnd) {
                this.scrollToEnd.emit();
            }
        };
        AccountPickerComponent.prototype.onRemove = function (event) {
            this.remove.emit(event);
        };
        AccountPickerComponent.prototype.onChange = function (event) {
            this.change.emit(event);
        };
        AccountPickerComponent.prototype.selectAll = function () {
            this.selectedItems = this.items;
            this.onChange(this.selectedItems);
        };
        AccountPickerComponent.prototype.unselectAll = function () {
            this.selectedItems = [];
            this.onChange(this.selectedItems);
        };
        return AccountPickerComponent;
    }());
    AccountPickerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountPickerComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountPickerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountPickerComponent, selector: "bb-account-picker", inputs: { items: "items", selectedItems: "selectedItems", multiple: "multiple", closeOnSelect: "closeOnSelect", searchable: "searchable", clearable: "clearable", placeholder: "placeholder", loading: "loading", dropdownPosition: "dropdownPosition", disableScrollEnd: "disableScrollEnd", filterItems: "filterItems", markFirst: "markFirst", groupByFn: "groupByFn", groupValueFn: "groupValueFn" }, outputs: { search: "search", clearSearch: "clearSearch", scrollToEnd: "scrollToEnd", remove: "remove", change: "change" }, queries: [{ propertyName: "customSingleSelectedItemLabel", first: true, predicate: CustomSingleSelectedItemLabelDirective, descendants: true }, { propertyName: "customMultiSelectedItemsLabel", first: true, predicate: CustomMultiSelectedItemsLabelDirective, descendants: true }, { propertyName: "customOptionsHeader", first: true, predicate: CustomOptionsHeaderDirective, descendants: true }, { propertyName: "customOptionItem", first: true, predicate: CustomOptionItemDirective, descendants: true }, { propertyName: "customGroupItemsHeader", first: true, predicate: CustomGroupItemsHeaderDirective, descendants: true }, { propertyName: "customLoadingTemplate", first: true, predicate: CustomLoadingTemplateDirective, descendants: true }], ngImport: i0__namespace, template: "<ng-select\n  #accountSelector\n  ngDefaultControl\n  bindLabel=\"name\"\n  name=\"bb-account-selector-ui\"\n  class=\"bb-account-selector-ui\"\n  [dropdownPosition]=\"dropdownPosition\"\n  [groupBy]=\"groupByFn\"\n  [groupValue]=\"groupValueFn\"\n  [(ngModel)]=\"selectedItems\"\n  [placeholder]=\"placeholder\"\n  [items]=\"items\"\n  [multiple]=\"multiple\"\n  [searchable]=\"searchable\"\n  [closeOnSelect]=\"closeOnSelect\"\n  [clearable]=\"clearable\"\n  [loading]=\"loading\"\n  [markFirst]=\"markFirst\"\n  (search)=\"onSearch($event)\"\n  (clear)=\"onClear()\"\n  (scrollToEnd)=\"onScrollToEnd()\"\n  (remove)=\"onRemove($event)\"\n  (change)=\"onChange($event)\"\n>\n  <!-- Template for item selected (single:ng-label-tmp) ng-label-tmp-->\n  <ng-template *ngIf=\"!multiple\" ng-label-tmp let-item=\"item\">\n    <ng-container\n      *ngIf=\"customSingleSelectedItemLabel; else nglabeltmp\"\n    >\n      <ng-container *ngTemplateOutlet=\"customSingleSelectedItemLabel?.templateRef;\n        context: { hostRef: hostRef, item: item }\">\n      </ng-container>\n    </ng-container>\n    <!-- Default template for ng-label-tmp -->\n    <ng-template #nglabeltmp>\n      <bb-product-item-basic-account-ui\n        [title]=\"item.name\"\n        [productNumber]=\"item.IBAN || item.BBAN || item.number\"\n        [amount]=\"item.bookedBalance || item.principalAmount || item.currentInvestmentValue\"\n        [currency]=\"item.currency\"\n        [active]=\"true\"\n      ></bb-product-item-basic-account-ui>\n    </ng-template>\n  </ng-template>\n\n  <!-- Template for items selected (multiple:ng-multi-label-tmp) -->\n  <ng-template *ngIf=\"multiple\" ng-multi-label-tmp let-items=\"items\">\n    <ng-container\n      *ngIf=\"customMultiSelectedItemsLabel; else ngmultilabeltmp\"\n    >\n      <ng-container *ngTemplateOutlet=\"customMultiSelectedItemsLabel?.templateRef;\n        context: { hostRef: hostRef, items: items }\">\n      </ng-container>\n    </ng-container>\n    <!-- Default template for ng-multi-label-tmp -->\n    <ng-template #ngmultilabeltmp>\n      <div class=\"px-3 d-flex flex-column\">\n        <span class=\"font-weight-bold\">\n          {{items.length}}\n          <span i18n=\"Selected Accounts|Selected Accounts multi label\n            @@bb-account-picker-ui.multi.label\"\n            >Selected Accounts</span>\n        </span>\n        <span>\n          <ng-container *ngFor=\"let item of items\">\n            {{item.name}}\n          </ng-container>\n        </span>\n      </div>\n    </ng-template>\n  </ng-template>\n\n<!-- Template for header, with search (ng-header-tmp) -->\n  <ng-template ng-header-tmp>\n    <ng-container\n      *ngIf=\"customOptionsHeader; else ngheadertmp\"\n    >\n      <ng-container *ngTemplateOutlet=\"customOptionsHeader?.templateRef;\n        context: { hostRef: hostRef, multiple: multiple, filterItems: filterItems }\">\n      </ng-container>\n    </ng-container>\n    <!-- Default template for ng-header-tmp -->\n    <ng-template #ngheadertmp>\n      <bb-input-text-ui\n        *ngIf=\"filterItems\"\n        placeholder=\"Filter\"\n        i18n-placeholder=\"Filter|Filter placeholder@@bb-account-picker-ui.filter.placeholder\"\n        (input)=\"accountSelector.filter($event.target.value)\"\n      >\n      </bb-input-text-ui>\n      <bb-search-box-ui\n        *ngIf=\"!filterItems\"\n        showClear=\"true\"\n        showSearch=\"true\"\n        placeholder=\"Search\"\n        i18n-placeholder=\"Search|Search placeholder@@bb-account-picker-ui.search.placeholder\"\n        (clear)=\"onClear()\"\n        (submit)=\"onSearch($event)\">\n      </bb-search-box-ui>\n      <ng-container *ngIf=\"multiple\">\n        <div class=\"pt-1\">\n          <button bbButton\n            color=\"link\"\n            (click)=\"selectAll()\"\n            i18n=\"Select all|Select all text@@bb-account-picker-ui.select.all.text\"\n            >Select all</button>\n          <button bbButton\n            color=\"link\"\n            (click)=\"unselectAll()\"\n            i18n=\"Unselect all|Unselect all text@@bb-account-picker-ui.unselect.all.text\"\n            >Unselect all</button>\n        </div>\n      </ng-container>\n    </ng-template>\n  </ng-template>\n\n<!-- Template for dropdown items list (ng-option-tmp) -->\n  <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n    <ng-container\n      *ngIf=\"customOptionItem; else ngoptiontmp\"\n    >\n      <ng-container *ngTemplateOutlet=\"customOptionItem?.templateRef;\n        context: {\n          hostRef: hostRef,\n          multiple: multiple,\n          item: item,\n          item$: item$,\n          index: index\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n     <!-- Default template for ng-option-tmp -->\n     <ng-template #ngoptiontmp>\n        <ng-container *ngIf=\"multiple\">\n          <div class=\"d-flex justify-content-start align-items-center\" >\n            <div class=\"pl-3 pb-2\">\n              <bb-input-checkbox-ui [id]=\"index\" [ngModel]=\"item$.selected\" (click)=\"$event.preventDefault()\"></bb-input-checkbox-ui>\n            </div>\n            <div class=\"w-100\">\n              <bb-product-item-basic-account-ui\n                [title]=\"item.name\"\n                [productNumber]=\"item.IBAN || item.BBAN || item.number\"\n                [amount]=\"item.bookedBalance || item.principalAmount || item.currentInvestmentValue\"\n                [currency]=\"item.currency\"\n                [active]=\"false\">\n              </bb-product-item-basic-account-ui>\n            </div>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"!multiple\">\n          <bb-product-item-basic-account-ui\n            [title]=\"item.name\"\n            [productNumber]=\"item.IBAN || item.BBAN || item.number\"\n            [amount]=\"item.bookedBalance || item.principalAmount || item.currentInvestmentValue\"\n            [currency]=\"item.currency\"\n            [active]=\"item$.selected\"\n          ></bb-product-item-basic-account-ui>\n        </ng-container>\n     </ng-template>\n  </ng-template>\n\n  <!-- Template for group option header(ng-optgroup-tmp) -->\n  <ng-template ng-optgroup-tmp let-item=\"item\">\n    <ng-container\n      *ngIf=\"customGroupItemsHeader; else ngoptgrouptmp\"\n    >\n      <ng-container *ngTemplateOutlet=\"customGroupItemsHeader?.templateRef;\n        context: { hostRef: hostRef, item: item }\">\n      </ng-container>\n    </ng-container>\n    <ng-template #ngoptgrouptmp>\n      <span\n        *ngIf=\"!item.name\"\n        i18n=\"All|All group By label@@bb-account-picker-ui.groupBy.all.label\"\n        >All</span>\n      <span\n        *ngIf=\"item.name\"\n        i18n=\"Favorite|Favorite group By label@@bb-account-picker-ui.groupBy.default.label\"\n        >Favorite</span>\n      ({{item.total}})\n    </ng-template>\n  </ng-template>\n\n  <ng-template ng-loadingtext-tmp>\n    <ng-container\n      *ngIf=\"customLoadingTemplate; else ngloadingtexttmp\"\n    >\n      <ng-container *ngTemplateOutlet=\"customGroupItemsHeader?.templateRef;\">\n      </ng-container>\n    </ng-container>\n    <ng-template #ngloadingtexttmp>\n      <bb-loading-indicator-ui\n        i18n-text=\"Loading Accounts|Loading Accounts label@@bb-account-picker-ui.loading.accounts\"\n        text=\"Loading Accounts\"\n      >\n      </bb-loading-indicator-ui>\n    </ng-template>\n  </ng-template>\n</ng-select>\n", styles: [".ng-select.ng-select-opened>.ng-select-container{background:#fff;border-color:#b3b3b3 #ccc #d9d9d9}.ng-select.ng-select-opened>.ng-select-container:hover{box-shadow:none}.ng-select.ng-select-opened>.ng-select-container .ng-arrow{top:-2px;border-color:transparent transparent #999;border-width:0 5px 5px}.ng-select.ng-select-opened>.ng-select-container .ng-arrow:hover{border-color:transparent transparent #333}.ng-select.ng-select-opened.ng-select-bottom>.ng-select-container{border-bottom-right-radius:0;border-bottom-left-radius:0}.ng-select.ng-select-opened.ng-select-top>.ng-select-container{border-top-right-radius:0;border-top-left-radius:0}.ng-select.ng-select-focused:not(.ng-select-opened)>.ng-select-container{border-color:#007eff;box-shadow:inset 0 1px 1px #00000013,0 0 0 3px #007eff1a}.ng-select.ng-select-disabled>.ng-select-container{background-color:#f9f9f9}.ng-select .ng-has-value .ng-placeholder{display:none}.ng-select .ng-select-container{color:#333;background-color:#fff;border-radius:4px;border:1px solid #ccc;min-height:36px;align-items:center}.ng-select .ng-select-container:hover{box-shadow:0 1px #0000000f}.ng-select .ng-select-container .ng-value-container{align-items:center;padding-left:10px}[dir=rtl] .ng-select .ng-select-container .ng-value-container{padding-right:10px;padding-left:0}.ng-select .ng-select-container .ng-value-container .ng-placeholder{color:#999}.ng-select.ng-select-single .ng-select-container{height:36px}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{top:5px;left:0;padding-left:10px;padding-right:50px}[dir=rtl] .ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{padding-right:10px;padding-left:50px}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value{background-color:#f9f9f9;border:1px solid #e6e6e6}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-label{padding:0 5px}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{padding-top:5px;padding-left:7px}[dir=rtl] .ng-select.ng-select-multiple .ng-select-container .ng-value-container{padding-right:7px;padding-left:0}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{font-size:.9em;margin-bottom:5px;color:#333;background-color:#ebf5ff;border-radius:2px;margin-right:5px}[dir=rtl] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{margin-right:0;margin-left:5px}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled{background-color:#f9f9f9}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-label{padding-left:5px}[dir=rtl] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-label{padding-left:0;padding-right:5px}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-label{display:inline-block;padding:1px 5px}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:inline-block;padding:1px 5px}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon:hover{background-color:#d1e8ff}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.left{border-right:1px solid #b8dbff}[dir=rtl] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.left{border-left:1px solid #b8dbff;border-right:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.right{border-left:1px solid #b8dbff}[dir=rtl] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon.right{border-left:0;border-right:1px solid #b8dbff}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{padding:0 0 3px 3px}[dir=rtl] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{padding:0 3px 3px 0}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input>input{color:#000}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{top:5px;padding-bottom:5px;padding-left:3px}[dir=rtl] .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{padding-right:3px;padding-left:0}.ng-select .ng-clear-wrapper{color:#999}.ng-select .ng-clear-wrapper:hover .ng-clear{color:#d0021b}.ng-select .ng-spinner-zone{padding:5px 5px 0 0}[dir=rtl] .ng-select .ng-spinner-zone{padding:5px 0 0 5px}.ng-select .ng-arrow-wrapper{width:25px;padding-right:5px}[dir=rtl] .ng-select .ng-arrow-wrapper{padding-left:5px;padding-right:0}.ng-select .ng-arrow-wrapper:hover .ng-arrow{border-top-color:#666}.ng-select .ng-arrow-wrapper .ng-arrow{border-color:#999 transparent transparent;border-style:solid;border-width:5px 5px 2.5px}.ng-dropdown-panel{background-color:#fff;border:1px solid #ccc;box-shadow:0 1px #0000000f;left:0}.ng-dropdown-panel.ng-select-bottom{top:100%;border-bottom-right-radius:4px;border-bottom-left-radius:4px;border-top-color:#e6e6e6;margin-top:-1px}.ng-dropdown-panel.ng-select-bottom .ng-dropdown-panel-items .ng-option:last-child{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.ng-dropdown-panel.ng-select-top{bottom:100%;border-top-right-radius:4px;border-top-left-radius:4px;border-bottom-color:#e6e6e6;margin-bottom:-1px}.ng-dropdown-panel.ng-select-top .ng-dropdown-panel-items .ng-option:first-child{border-top-right-radius:4px;border-top-left-radius:4px}.ng-dropdown-panel .ng-dropdown-header{border-bottom:1px solid #ccc;padding:5px 7px}.ng-dropdown-panel .ng-dropdown-footer{border-top:1px solid #ccc;padding:5px 7px}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup{-webkit-user-select:none;user-select:none;padding:8px 10px;font-weight:500;color:#0000008a;cursor:pointer}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup.ng-option-disabled{cursor:default}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup.ng-option-marked{background-color:#f5faff}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup.ng-option-selected,.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup.ng-option-selected.ng-option-marked{background-color:#ebf5ff;font-weight:600}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{background-color:#fff;color:#000000de;padding:8px 10px}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-selected,.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-selected.ng-option-marked{color:#333;background-color:#ebf5ff}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-selected .ng-option-label,.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-selected.ng-option-marked .ng-option-label{font-weight:600}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-marked{background-color:#f5faff;color:#333}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-disabled{color:#ccc}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-child{padding-left:22px}[dir=rtl] .ng-dropdown-panel .ng-dropdown-panel-items .ng-option.ng-option-child{padding-right:22px;padding-left:0}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-tag-label{font-size:80%;font-weight:400;padding-right:5px}[dir=rtl] .ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-tag-label{padding-left:5px;padding-right:0}[dir=rtl] .ng-dropdown-panel{direction:rtl;text-align:right}\n"], components: [{ type: i1__namespace$3.NgSelectComponent, selector: "ng-select", inputs: ["markFirst", "dropdownPosition", "loading", "closeOnSelect", "hideSelected", "selectOnTab", "bufferAmount", "selectableGroup", "selectableGroupAsModel", "searchFn", "trackByFn", "clearOnBackspace", "labelForId", "inputAttrs", "readonly", "searchWhileComposing", "minTermLength", "editableSearchTerm", "keyDownFn", "multiple", "addTag", "searchable", "clearable", "isOpen", "items", "compareWith", "clearSearchOnAdd", "bindLabel", "placeholder", "notFoundText", "typeToSearchText", "addTagText", "loadingText", "clearAllText", "virtualScroll", "openOnEnter", "appendTo", "bindValue", "appearance", "maxSelectedItems", "groupBy", "groupValue", "tabIndex", "typeahead"], outputs: ["blur", "focus", "change", "open", "close", "search", "clear", "add", "remove", "scroll", "scrollToEnd"] }, { type: i10__namespace.ProductItemBasicAccountComponent, selector: "bb-product-item-basic-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "showCurrencySymbol", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor", "selected", "type", "status", "balanceLabel", "bankBranchCode"] }, { type: i3__namespace$2.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i4__namespace$1.SearchBoxComponent, selector: "bb-search-box-ui", inputs: ["placeholder", "maxLength", "squareBorder", "typeaheadOptions", "showSearch", "showClear", "searchLabel", "clearLabel", "autocomplete"], outputs: ["submit", "clear", "valueChange"] }, { type: i5__namespace$2.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }, { type: i6__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i7__namespace$1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i7__namespace$1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i7__namespace$1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$3.ɵh, selector: "[ng-label-tmp]" }, { type: i3__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i1__namespace$3.ɵi, selector: "[ng-multi-label-tmp]" }, { type: i3__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$3.ɵj, selector: "[ng-header-tmp]" }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace$3.ɵf, selector: "[ng-option-tmp]" }, { type: i1__namespace$3.ɵg, selector: "[ng-optgroup-tmp]" }, { type: i1__namespace$3.ɵn, selector: "[ng-loadingtext-tmp]" }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountPickerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-picker',
                        templateUrl: './account-picker-ui.component.html',
                        styleUrls: ['./account-picker-ui.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        encapsulation: i0.ViewEncapsulation.None,
                    }]
            }], propDecorators: { customSingleSelectedItemLabel: [{
                    type: i0.ContentChild,
                    args: [CustomSingleSelectedItemLabelDirective]
                }], customMultiSelectedItemsLabel: [{
                    type: i0.ContentChild,
                    args: [CustomMultiSelectedItemsLabelDirective]
                }], customOptionsHeader: [{
                    type: i0.ContentChild,
                    args: [CustomOptionsHeaderDirective]
                }], customOptionItem: [{
                    type: i0.ContentChild,
                    args: [CustomOptionItemDirective]
                }], customGroupItemsHeader: [{
                    type: i0.ContentChild,
                    args: [CustomGroupItemsHeaderDirective]
                }], customLoadingTemplate: [{
                    type: i0.ContentChild,
                    args: [CustomLoadingTemplateDirective]
                }], search: [{
                    type: i0.Output
                }], clearSearch: [{
                    type: i0.Output
                }], scrollToEnd: [{
                    type: i0.Output
                }], remove: [{
                    type: i0.Output
                }], change: [{
                    type: i0.Output
                }], items: [{
                    type: i0.Input
                }], selectedItems: [{
                    type: i0.Input
                }], multiple: [{
                    type: i0.Input
                }], closeOnSelect: [{
                    type: i0.Input
                }], searchable: [{
                    type: i0.Input
                }], clearable: [{
                    type: i0.Input
                }], placeholder: [{
                    type: i0.Input
                }], loading: [{
                    type: i0.Input
                }], dropdownPosition: [{
                    type: i0.Input
                }], disableScrollEnd: [{
                    type: i0.Input
                }], filterItems: [{
                    type: i0.Input
                }], markFirst: [{
                    type: i0.Input
                }], groupByFn: [{
                    type: i0.Input
                }], groupValueFn: [{
                    type: i0.Input
                }] } });

    var uiModules$c = [
        i10.ProductItemBasicAccountModule,
        i3$2.InputTextModule,
        i4$1.SearchBoxModule,
        i6$1.LoadingIndicatorModule,
        i5$2.InputCheckboxModule,
        i4.ButtonModule,
    ];
    var components$a = [AccountPickerComponent];
    var directives$5 = [
        CustomSingleSelectedItemLabelDirective,
        CustomMultiSelectedItemsLabelDirective,
        CustomOptionsHeaderDirective,
        CustomOptionItemDirective,
        CustomGroupItemsHeaderDirective,
        CustomLoadingTemplateDirective,
    ];
    var AccountPickerModule = /** @class */ (function () {
        function AccountPickerModule() {
        }
        return AccountPickerModule;
    }());
    AccountPickerModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountPickerModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AccountPickerModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountPickerModule, declarations: [AccountPickerComponent, CustomSingleSelectedItemLabelDirective,
            CustomMultiSelectedItemsLabelDirective,
            CustomOptionsHeaderDirective,
            CustomOptionItemDirective,
            CustomGroupItemsHeaderDirective,
            CustomLoadingTemplateDirective], imports: [i3.CommonModule, i7$1.FormsModule, i1$3.NgSelectModule, i10.ProductItemBasicAccountModule,
            i3$2.InputTextModule,
            i4$1.SearchBoxModule,
            i6$1.LoadingIndicatorModule,
            i5$2.InputCheckboxModule,
            i4.ButtonModule], exports: [AccountPickerComponent, CustomSingleSelectedItemLabelDirective,
            CustomMultiSelectedItemsLabelDirective,
            CustomOptionsHeaderDirective,
            CustomOptionItemDirective,
            CustomGroupItemsHeaderDirective,
            CustomLoadingTemplateDirective, i10.ProductItemBasicAccountModule,
            i3$2.InputTextModule,
            i4$1.SearchBoxModule,
            i6$1.LoadingIndicatorModule,
            i5$2.InputCheckboxModule,
            i4.ButtonModule, i1$3.NgSelectModule] });
    AccountPickerModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountPickerModule, imports: [__spreadArray([i3.CommonModule, i7$1.FormsModule, i1$3.NgSelectModule], __read(uiModules$c)), i10.ProductItemBasicAccountModule,
            i3$2.InputTextModule,
            i4$1.SearchBoxModule,
            i6$1.LoadingIndicatorModule,
            i5$2.InputCheckboxModule,
            i4.ButtonModule, i1$3.NgSelectModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountPickerModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule, i7$1.FormsModule, i1$3.NgSelectModule], __read(uiModules$c)),
                        declarations: __spreadArray(__spreadArray([], __read(components$a)), __read(directives$5)),
                        exports: __spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(components$a)), __read(directives$5)), __read(uiModules$c)), [i1$3.NgSelectModule]),
                    }]
            }] });

    var AccountStateComponent = /** @class */ (function () {
        function AccountStateComponent() {
            this.hostRef = this;
            /**
             * Product summary account state indicator display flag.
             */
            this.isDisplayingAlert = true;
            this.isAlertCLosed = false;
        }
        /**
         * @internal
         */
        AccountStateComponent.prototype.ngOnChanges = function () {
            this.isAlertCLosed = false;
        };
        AccountStateComponent.prototype.closeAlert = function () {
            this.isAlertCLosed = true;
        };
        return AccountStateComponent;
    }());
    AccountStateComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountStateComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountStateComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountStateComponent, selector: "bb-account-state-ui", inputs: { isDisplayingAlert: "isDisplayingAlert", item: "item" }, usesOnChanges: true, ngImport: i0__namespace, template: "<ng-container\nbbAccountStateCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{item:item}\">\n</ng-container>\n\n<ng-template bbAccountStateCustomizable\n  let-hostRef\n  let-item=\"context\">\n  <div class=\"row mt-3\" *ngIf=\"hostRef.isDisplayingAlert && !hostRef.isAlertCLosed\">\n    <div class=\"col-12\">\n      <bb-alert-ui\n        data-role=\"alert-danger\"\n        [title]=\"''\"\n        [modifier]=\"hostRef.item.severity\"\n        [dismissible]=\"true\"\n        (close)=\"hostRef.closeAlert()\">\n          <ng-content></ng-content>\n      </bb-alert-ui>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace$4.AlertComponent; }), selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }], directives: [{ type: i0__namespace.forwardRef(function () { return AccountStateCustomizableDirective; }), selector: "[bbAccountStateCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountStateComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-state-ui',
                        templateUrl: 'account-state-ui.component.html',
                    }]
            }], propDecorators: { isDisplayingAlert: [{
                    type: i0.Input
                }], item: [{
                    type: i0.Input
                }] } });
    var AccountStateCustomizableDirective = /** @class */ (function (_super) {
        __extends(AccountStateCustomizableDirective, _super);
        function AccountStateCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AccountStateCustomizableDirective;
    }(i1$1.BbTemplate));
    AccountStateCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountStateCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    AccountStateCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: AccountStateCustomizableDirective, selector: "[bbAccountStateCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountStateCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbAccountStateCustomizable]',
                    }]
            }] });

    var uiModules$b = [i1$4.AlertModule];
    var components$9 = [AccountStateComponent];
    var directives$4 = [AccountStateCustomizableDirective];
    var AccountStateModule = /** @class */ (function () {
        function AccountStateModule() {
        }
        return AccountStateModule;
    }());
    AccountStateModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountStateModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AccountStateModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountStateModule, declarations: [AccountStateComponent, AccountStateCustomizableDirective], imports: [i3.CommonModule, i1$4.AlertModule], exports: [AccountStateComponent, AccountStateCustomizableDirective, i1$4.AlertModule] });
    AccountStateModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountStateModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$b)), i1$4.AlertModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountStateModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$b)),
                        declarations: __spreadArray(__spreadArray([], __read(components$9)), __read(directives$4)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components$9)), __read(directives$4)), __read(uiModules$b)),
                    }]
            }] });

    exports.CustomColorName = void 0;
    (function (CustomColorName) {
        CustomColorName["POSITIVE"] = "positive";
        CustomColorName["NEGATIVE"] = "negative";
    })(exports.CustomColorName || (exports.CustomColorName = {}));

    var ChartLegendComponent = /** @class */ (function () {
        function ChartLegendComponent() {
            this.hostRef = this;
            /**
             * Currency data
             */
            this.currency = '';
            /**
             * Maximum value
             */
            this.maxValue = '';
            /**
             * Minimum value
             */
            this.minValue = '';
            /**
             * Color for positive area
             */
            this.positiveColor = '';
            /**
             * Color for negative area
             */
            this.negativeColor = '';
        }
        return ChartLegendComponent;
    }());
    ChartLegendComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ChartLegendComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ChartLegendComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ChartLegendComponent, selector: "bb-chart-legend-ui", inputs: { currency: "currency", maxValue: "maxValue", minValue: "minValue", positiveColor: "positiveColor", negativeColor: "negativeColor" }, ngImport: i0__namespace, template: "<ng-container\n  bbChartLegendCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template\n  bbChartLegendCustomizable\n  let-hostRef\n>\n  <div class=\"bb-subtitle bb-stack bb-stack--center bb-stack--wrap\"\n       data-role=\"area-chart-legend\">\n    <div class=\"bb-stack__item bb-stack__item--spacing-lg bb-stack__break--sm-down\">\n      <div class=\"bb-stack bb-stack--density-sm\">\n        <bb-icon-ui\n          class=\"bb-stack__item\"\n          data-role=\"area-chart-legend-positive-color\"\n          name=\"circle\"\n          size=\"sm\"\n          [style.color]=\"hostRef.positiveColor\"\n        ></bb-icon-ui>\n        <span\n          class=\"bb-stack__item\"\n          i18n=\"Max balance@@product-summary-balance-history-chart.max-balance\"\n        >\n            Max Balance:\n          </span>\n        <bb-amount-ui\n          class=\"bb-stack__item bb-text-bold\"\n          data-role=\"area-chart-legend-max-value\"\n          [currency]=\"hostRef.currency\"\n          [amount]=\"hostRef.maxValue\"\n        ></bb-amount-ui>\n      </div>\n    </div>\n    <div class=\"bb-stack__break bb-stack__break--spacing-sm bb-stack__break--sm-down\"></div>\n    <div class=\"bb-stack__item bb-stack__item--spacing-lg bb-stack__break--sm-down\">\n      <div class=\"bb-stack bb-stack--density-sm\">\n        <bb-icon-ui\n          class=\"bb-stack__item\"\n          data-role=\"area-chart-legend-negative-color\"\n          name=\"circle\"\n          size=\"sm\"\n          [style.color]=\"hostRef.negativeColor\"\n        ></bb-icon-ui>\n        <span\n          class=\"bb-stack__item\"\n          i18n=\"Min balance@@product-summary-balance-history-chart.min-balance\"\n        >\n            Min Balance:\n          </span>\n        <bb-amount-ui\n          class=\"bb-stack__item bb-text-bold\"\n          data-role=\"area-chart-legend-min-value\"\n          [currency]=\"hostRef.currency\"\n          [amount]=\"hostRef.minValue\"\n        ></bb-amount-ui>\n      </div>\n    </div>\n  </div>\n\n</ng-template>\n\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ChartLegendCustomizableDirective; }), selector: "[bbChartLegendCustomizable]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ChartLegendComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-chart-legend-ui',
                        templateUrl: 'chart-legend.component.html',
                    }]
            }], propDecorators: { currency: [{
                    type: i0.Input
                }], maxValue: [{
                    type: i0.Input
                }], minValue: [{
                    type: i0.Input
                }], positiveColor: [{
                    type: i0.Input
                }], negativeColor: [{
                    type: i0.Input
                }] } });
    var ChartLegendCustomizableDirective = /** @class */ (function (_super) {
        __extends(ChartLegendCustomizableDirective, _super);
        function ChartLegendCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ChartLegendCustomizableDirective;
    }(i1$1.BbTemplate));
    ChartLegendCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ChartLegendCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ChartLegendCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ChartLegendCustomizableDirective, selector: "[bbChartLegendCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ChartLegendCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbChartLegendCustomizable]',
                    }]
            }] });

    var AreaChartLegendComponent = /** @class */ (function () {
        function AreaChartLegendComponent() {
            this.hostRef = this;
            /**
             * The chart data (data series) that this component is using to calculate min max
             */
            this.dataSeries = [];
            /**
             * The currency data
             */
            this.currency = '';
            /**
             * Set custom colors for negative and positive areas
             */
            this.customColors = [];
        }
        AreaChartLegendComponent.prototype.getMax = function () {
            return Math.max.apply(Math, __spreadArray([], __read(this.values)));
        };
        AreaChartLegendComponent.prototype.getMin = function () {
            return Math.min.apply(Math, __spreadArray([], __read(this.values)));
        };
        AreaChartLegendComponent.prototype.getPositiveColor = function () {
            var customColor = i6.findByName(this.customColors, exports.CustomColorName.POSITIVE);
            return customColor ? customColor.value : '';
        };
        AreaChartLegendComponent.prototype.getNegativeColor = function () {
            var customColor = i6.findByName(this.customColors, exports.CustomColorName.NEGATIVE);
            return customColor ? customColor.value : '';
        };
        Object.defineProperty(AreaChartLegendComponent.prototype, "values", {
            get: function () {
                var allDateSeries = this.dataSeries.reduce(function (memo, _a) {
                    var series = _a.series;
                    return memo.concat(series);
                }, []);
                return allDateSeries.map(function (date) { return date.value; });
            },
            enumerable: false,
            configurable: true
        });
        return AreaChartLegendComponent;
    }());
    AreaChartLegendComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AreaChartLegendComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AreaChartLegendComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AreaChartLegendComponent, selector: "bb-area-chart-legend-ui", inputs: { dataSeries: "dataSeries", currency: "currency", customColors: "customColors" }, ngImport: i0__namespace, template: "<ng-container\n  bbBalanceHistoryAreaChartLegendCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    dataSeries: dataSeries,\n    customColors: customColors\n  }\"\n></ng-container>\n\n<ng-template\n  bbBalanceHistoryAreaChartLegendCustomizable\n  let-hostRef\n  let-dataSeries=\"context.dataSeries\"\n  let-customColors=\"context.customColors\"\n>\n  <bb-chart-legend-ui\n    [currency]=\"hostRef.currency\"\n    [maxValue]=\"hostRef.getMax()\"\n    [minValue]=\"hostRef.getMin()\"\n    [positiveColor]=\"hostRef.getPositiveColor()\"\n    [negativeColor]=\"hostRef.getNegativeColor()\"\n  ></bb-chart-legend-ui>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return ChartLegendComponent; }), selector: "bb-chart-legend-ui", inputs: ["currency", "maxValue", "minValue", "positiveColor", "negativeColor"] }], directives: [{ type: i0__namespace.forwardRef(function () { return BalanceHistoryAreaChartLegendCustomizableDirective; }), selector: "[bbBalanceHistoryAreaChartLegendCustomizable]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AreaChartLegendComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-area-chart-legend-ui',
                        templateUrl: 'area-chart-legend.component.html',
                    }]
            }], propDecorators: { dataSeries: [{
                    type: i0.Input
                }], currency: [{
                    type: i0.Input
                }], customColors: [{
                    type: i0.Input
                }] } });
    var BalanceHistoryAreaChartLegendCustomizableDirective = /** @class */ (function (_super) {
        __extends(BalanceHistoryAreaChartLegendCustomizableDirective, _super);
        function BalanceHistoryAreaChartLegendCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BalanceHistoryAreaChartLegendCustomizableDirective;
    }(i1$1.BbTemplate));
    BalanceHistoryAreaChartLegendCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryAreaChartLegendCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BalanceHistoryAreaChartLegendCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BalanceHistoryAreaChartLegendCustomizableDirective, selector: "[bbBalanceHistoryAreaChartLegendCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryAreaChartLegendCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBalanceHistoryAreaChartLegendCustomizable]',
                    }]
            }] });

    var AreaChartComponent = /** @class */ (function () {
        function AreaChartComponent() {
            this.hostRef = this;
            /**
             * The chart data (data series)
             */
            this.dataSeries = [];
            /**
             * Show or hide X Axis
             */
            this.showXAxis = true;
            /**
             * Show or hide Y Axis
             */
            this.showYAxis = true;
            /**
             * Fill elements with a gradient instead of a solid color
             */
            this.gradient = false;
            /**
             * Show or hide the legend
             */
            this.showLegend = false;
            /**
             * Show or hide the X axis label
             */
            this.showXAxisLabel = false;
            /**
             * Show or hide the Y axis label
             */
            this.showYAxisLabel = false;
            /**
             * X axis label text
             */
            this.xAxisLabel = '';
            /**
             * Y axis label text
             */
            this.yAxisLabel = '';
            /**
             * Set the minimum value of the y axis to the minimum value in the data, instead of 0
             */
            this.autoScale = false;
            /**
             * Set the base value of chart
             */
            this.baseValue = 0;
            /**
             * Set animations to true
             */
            this.animations = true;
            /**
             * Set custom colors for negative and positive areas
             */
            this.customColors = [];
            /**
             * The currency data
             */
            this.currency = '';
        }
        return AreaChartComponent;
    }());
    AreaChartComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AreaChartComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AreaChartComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AreaChartComponent, selector: "bb-area-chart-ui", inputs: { dataSeries: "dataSeries", showXAxis: "showXAxis", showYAxis: "showYAxis", gradient: "gradient", showLegend: "showLegend", showXAxisLabel: "showXAxisLabel", showYAxisLabel: "showYAxisLabel", xAxisLabel: "xAxisLabel", yAxisLabel: "yAxisLabel", autoScale: "autoScale", baseValue: "baseValue", animations: "animations", customColors: "customColors", currency: "currency" }, ngImport: i0__namespace, template: "<ng-container\n  bbBalanceHistoryAreaChartCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    baseValue: baseValue,\n    autoScale: autoScale,\n    dataSeries: dataSeries,\n    gradient: gradient,\n    customColors: customColors,\n    xAxis: showXAxis,\n    yAxis: showYAxis,\n    legend: showLegend,\n    showXAxisLabel: showXAxisLabel,\n    showYAxisLabel: showYAxisLabel,\n    xAxisLabel: xAxisLabel,\n    yAxisLabel: yAxisLabel,\n    animations: animations\n  }\">\n</ng-container>\n\n<ng-template\n  bbBalanceHistoryAreaChartCustomizable\n  let-hostRef\n  let-baseValue=\"context.baseValue\"\n  let-autoScale=\"context.autoScale\"\n  let-dataSeries=\"context.dataSeries\"\n  let-gradient=\"context.gradient\"\n  let-customColors=\"context.customColors\"\n  let-xAxis=\"context.xAxis\"\n  let-yAxis=\"context.yAxis\"\n  let-legend=\"context.legend\"\n  let-showXAxisLabel=\"context.showXAxisLabel\"\n  let-showYAxisLabel=\"context.showYAxisLabel\"\n  let-xAxisLabel=\"context.xAxisLabel\"\n  let-yAxisLabel=\"context.yAxisLabel\"\n  let-animations=\"context.animations\">\n  <div class=\"bb-stack bb-product-summary-area-chart\">\n    <ngx-charts-area-chart\n      [baseValue]=\"baseValue\"\n      [autoScale]=\"autoScale\"\n      [results]=\"dataSeries\"\n      [gradient]=\"gradient\"\n      [customColors]=\"customColors\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\"\n      [animations]=\"animations\">\n\n      <ng-template #tooltipTemplate let-model=\"model\">\n          <div class=\"bb-product-summary-area-chart__tooltip\">\n              <h6\n              class=\"bb-product-summary-area-chart__tooltip-heading\"\n              data-role=\"tooltip-header\"\n            >{{model.name | date: 'mediumDate' }}</h6>\n            <hr class=\"bb-product-summary-area-chart__tooltip-divider\"/>\n            <table class=\"bb-product-summary-area-chart__tooltip-table\">\n              <tr data-role=\"tooltip-item\"\n              >\n                <td class=\"bb-product-summary-area-chart__tooltip-label\">\n                  <span\n                    class=\"align-middle\"\n                    i18n=\"Balance History period@@balance-history-area.chart.tooltipItem\"\n                    data-role=\"tooltip-item-name\"\n                  >Balance: </span>\n                </td>\n                <td\n                  class=\"bb-product-summary-area-chart__tooltip-value\"\n                  data-role=\"tooltip-item-value\"\n                >\n                  <bb-amount-ui\n                    [amount]=\"model.value\"\n                    [showPlusSign]=\"true\"\n                    [currency]=\"hostRef.currency\"\n                    [showPercent]=\"false\"\n                    class=\"align-middle\"\n                  ></bb-amount-ui>\n                </td>\n              </tr>\n            </table>\n          </div>\n        </ng-template>\n\n      <ng-template #seriesTooltipTemplate let-model=\"model\">\n        <div class=\"bb-product-summary-area-chart__tooltip\">\n            <h6\n            class=\"bb-product-summary-area-chart__tooltip-heading\"\n            data-role=\"tooltip-header\"\n          >{{model[0]?.name | date: 'mediumDate' }}</h6>\n          <hr class=\"bb-product-summary-area-chart__tooltip-divider\"/>\n          <table class=\"bb-product-summary-area-chart__tooltip-table\">\n            <tr\n              *ngFor=\"let item of model\"\n              data-role=\"tooltip-item\"\n            >\n              <td class=\"bb-product-summary-area-chart__tooltip-label\">\n                <span\n                  class=\"align-middle\"\n                  i18n=\"Balance History period@@balance-history-area..tooltipItem\"\n                  data-role=\"tooltip-item-name\"\n                >Balance: </span>\n              </td>\n              <td\n                class=\"bb-product-summary-area-chart__tooltip-value\"\n                data-role=\"tooltip-item-value\"\n              >\n                <bb-amount-ui\n                  [amount]=\"item.value\"\n                  [showPlusSign]=\"true\"\n                  [currency]=\"hostRef.currency\"\n                  [showPercent]=\"false\"\n                  class=\"align-middle\"\n                ></bb-amount-ui>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </ng-template>\n\n    </ngx-charts-area-chart>\n  </div>\n</ng-template>\n\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace$5.AreaChartComponent; }), selector: "ngx-charts-area-chart", inputs: ["legend", "legendTitle", "legendPosition", "xAxis", "yAxis", "baseValue", "autoScale", "timeline", "showGridLines", "curve", "activeEntries", "trimXAxisTicks", "trimYAxisTicks", "rotateXAxisTicks", "maxXAxisTickLength", "maxYAxisTickLength", "roundDomains", "tooltipDisabled", "showXAxisLabel", "showYAxisLabel", "xAxisLabel", "yAxisLabel", "gradient", "schemeType", "xAxisTickFormatting", "yAxisTickFormatting", "xAxisTicks", "yAxisTicks", "xScaleMin", "xScaleMax", "yScaleMin", "yScaleMax"], outputs: ["activate", "deactivate"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i0__namespace.forwardRef(function () { return BalanceHistoryAreaChartCustomizableDirective; }), selector: "[bbBalanceHistoryAreaChartCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "date": i0__namespace.forwardRef(function () { return i3__namespace.DatePipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AreaChartComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-area-chart-ui',
                        templateUrl: 'area-chart.component.html',
                    }]
            }], propDecorators: { dataSeries: [{
                    type: i0.Input
                }], showXAxis: [{
                    type: i0.Input
                }], showYAxis: [{
                    type: i0.Input
                }], gradient: [{
                    type: i0.Input
                }], showLegend: [{
                    type: i0.Input
                }], showXAxisLabel: [{
                    type: i0.Input
                }], showYAxisLabel: [{
                    type: i0.Input
                }], xAxisLabel: [{
                    type: i0.Input
                }], yAxisLabel: [{
                    type: i0.Input
                }], autoScale: [{
                    type: i0.Input
                }], baseValue: [{
                    type: i0.Input
                }], animations: [{
                    type: i0.Input
                }], customColors: [{
                    type: i0.Input
                }], currency: [{
                    type: i0.Input
                }] } });
    var BalanceHistoryAreaChartCustomizableDirective = /** @class */ (function (_super) {
        __extends(BalanceHistoryAreaChartCustomizableDirective, _super);
        function BalanceHistoryAreaChartCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BalanceHistoryAreaChartCustomizableDirective;
    }(i1$1.BbTemplate));
    BalanceHistoryAreaChartCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryAreaChartCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BalanceHistoryAreaChartCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BalanceHistoryAreaChartCustomizableDirective, selector: "[bbBalanceHistoryAreaChartCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryAreaChartCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBalanceHistoryAreaChartCustomizable]',
                    }]
            }] });

    var uiModules$a = [i1.IconModule, i2.AmountModule];
    var components$8 = [ChartLegendComponent];
    var directives$3 = [ChartLegendCustomizableDirective];
    var ChartLegendModule = /** @class */ (function () {
        function ChartLegendModule() {
        }
        return ChartLegendModule;
    }());
    ChartLegendModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ChartLegendModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ChartLegendModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ChartLegendModule, declarations: [ChartLegendComponent, ChartLegendCustomizableDirective], imports: [i3.CommonModule, i1.IconModule, i2.AmountModule], exports: [ChartLegendComponent, ChartLegendCustomizableDirective, i1.IconModule, i2.AmountModule] });
    ChartLegendModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ChartLegendModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$a)), i1.IconModule, i2.AmountModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ChartLegendModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$a)),
                        declarations: __spreadArray(__spreadArray([], __read(components$8)), __read(directives$3)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components$8)), __read(directives$3)), __read(uiModules$a)),
                    }]
            }] });

    var uiModules$9 = [i1.IconModule, i2.AmountModule, ChartLegendModule];
    var components$7 = [AreaChartLegendComponent, AreaChartComponent];
    var directives$2 = [BalanceHistoryAreaChartLegendCustomizableDirective, BalanceHistoryAreaChartCustomizableDirective];
    var AreaChartModule = /** @class */ (function () {
        function AreaChartModule() {
        }
        return AreaChartModule;
    }());
    AreaChartModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AreaChartModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AreaChartModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AreaChartModule, declarations: [AreaChartLegendComponent, AreaChartComponent, BalanceHistoryAreaChartLegendCustomizableDirective, BalanceHistoryAreaChartCustomizableDirective], imports: [i3.CommonModule, i1$5.AreaChartModule, i1.IconModule, i2.AmountModule, ChartLegendModule], exports: [AreaChartLegendComponent, AreaChartComponent, BalanceHistoryAreaChartLegendCustomizableDirective, BalanceHistoryAreaChartCustomizableDirective, i1.IconModule, i2.AmountModule, ChartLegendModule] });
    AreaChartModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AreaChartModule, imports: [__spreadArray([i3.CommonModule, i1$5.AreaChartModule], __read(uiModules$9)), i1.IconModule, i2.AmountModule, ChartLegendModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AreaChartModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule, i1$5.AreaChartModule], __read(uiModules$9)),
                        declarations: __spreadArray(__spreadArray([], __read(components$7)), __read(directives$2)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components$7)), __read(directives$2)), __read(uiModules$9)),
                    }]
            }] });

    var ArrangementStateIndicatorComponent = /** @class */ (function () {
        function ArrangementStateIndicatorComponent() {
            this.hostRef = this;
            /**
             * State name to display
             * Supported values: 'active', 'inactive', 'closed'
             * If the state name is not supported it will be shown as it is
             */
            this.state = '';
            /**
             * Visibility of the active state
             * Default: false
             */
            this.showActive = false;
            /**
             * Visibility of the icon next to the state
             * Default: true
             */
            this.showIcon = true;
            /**
             * Visibility of the state text for mobile devices
             * Default: true
             */
            this.hideStateTextForMobile = true;
        }
        return ArrangementStateIndicatorComponent;
    }());
    ArrangementStateIndicatorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementStateIndicatorComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ArrangementStateIndicatorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ArrangementStateIndicatorComponent, selector: "bb-arrangement-state-indicator", inputs: { state: "state", showActive: "showActive", showIcon: "showIcon", hideStateTextForMobile: "hideStateTextForMobile" }, ngImport: i0__namespace, template: "<ng-container\n  bbArrangementStateIndicatorCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{state: state}\"\n>\n</ng-container>\n<ng-template\n  bbArrangementStateIndicatorCustomizable\n  let-hostRef\n  let-state=\"context.state\"\n>\n  <div class=\"bb-stack bb-account-status\">\n    <ng-container [ngSwitch]=\"state.toLowerCase()\">\n      <ng-container *ngSwitchCase=\"'active'\">\n          <span\n            *ngIf=\"hostRef.showActive\"\n            i18n=\"Active|Arrangement State Indicator: Active@@arrangement.state.indicator.active\">Active</span>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'inactive'\">\n        <bb-icon-ui\n          *ngIf=\"hostRef.showIcon\"\n          data-role=\"inActive-icon\"\n          name=\"remove-circle-outline\"\n          size=\"sm\"\n          class=\"bb-stack__item bb-stack__item--spacing-xs bb-text-support\"\n        ></bb-icon-ui>\n        <span\n          [ngClass]=\"{'bb-account-status__state--hide-for-mobile': hostRef.hideStateTextForMobile}\"\n          class=\"bb-stack__item bb-account-status__state bb-text-semi-bold\"\n          i18n=\"Inactive|Arrangement State Indicator: Inactive@@arrangement.state.indicator.inactive\">Inactive</span>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'closed'\">\n        <bb-icon-ui\n          *ngIf=\"hostRef.showIcon\"\n          data-role=\"closed-icon\"\n          name=\"cancel\"\n          size=\"sm\"\n          color=\"danger\"\n          class=\"bb-stack__item bb-stack__item--spacing-xs\"\n        ></bb-icon-ui>\n        <span\n          [ngClass]=\"{'bb-account-status__state--hide-for-mobile': hostRef.hideStateTextForMobile}\"\n          class=\"bb-stack__item bb-account-status__state bb-text-semi-bold\"\n          i18n=\"Closed|Arrangement State Indicator: Closed@@arrangement.state.indicator.closed\"\n        >Closed</span>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <span class=\"bb-stack__item bb-account-status__state bb-text-semi-bold\">\n          {{state}}\n        </span>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-template>\n\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ArrangementStateIndicatorCustomizableDirective; }), selector: "[bbArrangementStateIndicatorCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementStateIndicatorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-arrangement-state-indicator',
                        templateUrl: './arrangement-state-indicator.component.html',
                    }]
            }], propDecorators: { state: [{
                    type: i0.Input
                }], showActive: [{
                    type: i0.Input
                }], showIcon: [{
                    type: i0.Input
                }], hideStateTextForMobile: [{
                    type: i0.Input
                }] } });
    var ArrangementStateIndicatorCustomizableDirective = /** @class */ (function (_super) {
        __extends(ArrangementStateIndicatorCustomizableDirective, _super);
        function ArrangementStateIndicatorCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ArrangementStateIndicatorCustomizableDirective;
    }(i1$1.BbTemplate));
    ArrangementStateIndicatorCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementStateIndicatorCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ArrangementStateIndicatorCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ArrangementStateIndicatorCustomizableDirective, selector: "[bbArrangementStateIndicatorCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementStateIndicatorCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbArrangementStateIndicatorCustomizable]',
                    }]
            }] });

    var uiModules$8 = [i1.IconModule];
    var components$6 = [ArrangementStateIndicatorComponent];
    var directives$1 = [ArrangementStateIndicatorCustomizableDirective];
    var ArrangementStateIndicatorModule = /** @class */ (function () {
        function ArrangementStateIndicatorModule() {
        }
        return ArrangementStateIndicatorModule;
    }());
    ArrangementStateIndicatorModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementStateIndicatorModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ArrangementStateIndicatorModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementStateIndicatorModule, declarations: [ArrangementStateIndicatorComponent, ArrangementStateIndicatorCustomizableDirective], imports: [i3.CommonModule, i1.IconModule], exports: [ArrangementStateIndicatorComponent, ArrangementStateIndicatorCustomizableDirective, i1.IconModule] });
    ArrangementStateIndicatorModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementStateIndicatorModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$8)), i1.IconModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementStateIndicatorModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$8)),
                        declarations: __spreadArray(__spreadArray([], __read(components$6)), __read(directives$1)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components$6)), __read(directives$1)), __read(uiModules$8)),
                    }]
            }] });

    var LineChartComponent = /** @class */ (function () {
        function LineChartComponent() {
            var _this = this;
            this.hostRef = this;
            /**
             * @default []
             * The chart data (data series)
             */
            this.dataSeries = [];
            /**
             * @default true
             * Show or hide X Axis
             */
            this.showXAxis = true;
            /**
             * @default true
             * Show or hide Y Axis
             */
            this.showYAxis = true;
            /**
             * @default false
             * Fill elements with a gradient instead of a solid color
             */
            this.gradient = false;
            /**
             * @default false
             * Show or hide the legend
             */
            this.showLegend = false;
            /**
             * @default false
             * Show or hide the X axis label
             */
            this.showXAxisLabel = false;
            /**
             * @default false
             * Show or hide the Y axis label
             */
            this.showYAxisLabel = false;
            /**
             * @default ''
             * X axis label text
             */
            this.xAxisLabel = '';
            /**
             * @default ''
             * Y axis label text
             */
            this.yAxisLabel = '';
            /**
             * @default false
             * Set the minimum value of the y axis to the minimum value in the data, instead of 0
             */
            this.autoScale = false;
            /**
             * @default true
             * Set animations to true
             */
            this.animations = true;
            /**
             * @default []
             * Set custom colors for negative and positive areas
             */
            this.customColors = [];
            /**
             * @default ''
             * The currency data
             */
            this.currency = '';
            /**
             * @default false
             * Show/Hide the amount symbol prefixed to the amount
             */
            this.showTooltipAmountSign = false;
            /**
             * @default false
             * Show/Hide the percentage symbol suffixed to the amount
             */
            this.showTooltipAmountPercent = false;
            /**
             * @default mediumDate
             * Date that will be displayed inside the tooltip
             */
            this.tooltipDateFormat = 'mediumDate';
            /**
             * @default true
             * Show/Hide the refrence line that will be shown behind the chart.
             * This will distinguish the postive and negative series.
             */
            this.showRefLines = true;
            /**
             * @default false
             * Show/Hide the refrence labels
             */
            this.showRefLabels = false;
            /**
             * @default []
             * Refrence lines that will be shown behind the chart
             */
            this.referenceLines = [];
            /**
             * @default defaultTickFormatFunction
             * x-Axis tick format function
             */
            this.xAxisTickFormatFunction = this.defaultTickFormatFunction;
            /**
             * @default defaultTickFormatFunction
             * y-Axis tick format function
             */
            this.yAxisTickFormatFunction = this.defaultTickFormatFunction;
            this.yAxisTickFormat = function (tick) {
                if (!i6.isFunction(_this.yAxisTickFormatFunction)) {
                    throw new Error('Function should be provided');
                }
                return _this.yAxisTickFormatFunction(tick);
            };
            this.xAxisTickFormat = function (tick) {
                if (!i6.isFunction(_this.xAxisTickFormatFunction)) {
                    throw new Error('Function should be provided');
                }
                return _this.xAxisTickFormatFunction(tick);
            };
        }
        LineChartComponent.prototype.ngOnInit = function () {
            if (this.showRefLines) {
                this.initReferenceLines();
            }
        };
        LineChartComponent.prototype.initReferenceLines = function () {
            this.referenceLines = this.referenceLines.slice();
            this.referenceLines.push({ name: '', value: 0 });
        };
        LineChartComponent.prototype.defaultTickFormatFunction = function (tick) {
            if (tick.constructor.name === 'Date') {
                return tick.toLocaleDateString();
            }
            return tick;
        };
        /**
         * Filters out consecutive duplicate values,
         * for example [2, 0, 0, 2] => [2, 0, 2]
         */
        LineChartComponent.prototype.sanitizeTooltipValues = function (tooltipValues) {
            return tooltipValues.filter(function (tooltipValue, index) { return !index || Number(tooltipValue.value) !== Number(tooltipValues[index - 1].value); });
        };
        return LineChartComponent;
    }());
    LineChartComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LineChartComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    LineChartComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LineChartComponent, selector: "bb-line-chart-ui", inputs: { classes: "classes", dataSeries: "dataSeries", showXAxis: "showXAxis", showYAxis: "showYAxis", gradient: "gradient", showLegend: "showLegend", showXAxisLabel: "showXAxisLabel", showYAxisLabel: "showYAxisLabel", xAxisLabel: "xAxisLabel", yAxisLabel: "yAxisLabel", autoScale: "autoScale", animations: "animations", customColors: "customColors", currency: "currency", showTooltipAmountSign: "showTooltipAmountSign", showTooltipAmountPercent: "showTooltipAmountPercent", tooltipDateFormat: "tooltipDateFormat", showRefLines: "showRefLines", showRefLabels: "showRefLabels", referenceLines: "referenceLines", xAxisTickFormatFunction: "xAxisTickFormatFunction", yAxisTickFormatFunction: "yAxisTickFormatFunction" }, ngImport: i0__namespace, template: "<ng-container\n  bbBalanceHistoryLineChartCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    autoScale: autoScale,\n    dataSeries: dataSeries,\n    gradient: gradient,\n    customColors: customColors,\n    xAxis: showXAxis,\n    yAxis: showYAxis,\n    legend: showLegend,\n    showXAxisLabel: showXAxisLabel,\n    showYAxisLabel: showYAxisLabel,\n    xAxisLabel: xAxisLabel,\n    yAxisLabel: yAxisLabel,\n    animations: animations,\n    showRefLines: showRefLines,\n    referenceLines: referenceLines,\n    showRefLabels: showRefLabels\n  }\">\n</ng-container>\n<ng-template\n  bbBalanceHistoryLineChartCustomizable\n  let-hostRef\n  let-autoScale=\"context.autoScale\"\n  let-dataSeries=\"context.dataSeries\"\n  let-gradient=\"context.gradient\"\n  let-customColors=\"context.customColors\"\n  let-xAxis=\"context.xAxis\"\n  let-yAxis=\"context.yAxis\"\n  let-legend=\"context.legend\"\n  let-showXAxisLabel=\"context.showXAxisLabel\"\n  let-showYAxisLabel=\"context.showYAxisLabel\"\n  let-xAxisLabel=\"context.xAxisLabel\"\n  let-yAxisLabel=\"context.yAxisLabel\"\n  let-animations=\"context.animations\"\n  let-showRefLines=\"context.showRefLines\"\n  let-referenceLines=\"context.referenceLines\"\n  let-showRefLabels=\"context.showRefLabels\"\n  >\n  <div class=\"bb-stack bb-product-summary-line-chart\" [ngClass]=\"hostRef.classes\">\n    <ngx-charts-line-chart\n      [autoScale]=\"autoScale\"\n      [results]=\"dataSeries\"\n      [gradient]=\"gradient\"\n      [customColors]=\"customColors\"\n      [xAxis]=\"xAxis\"\n      [yAxis]=\"yAxis\"\n      [legend]=\"legend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [showRefLines]=\"showRefLines\"\n      [showRefLabels]=\"showRefLabels\"\n      [referenceLines]=\"referenceLines\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisTickFormatting]=\"hostRef.yAxisTickFormat\"\n      [xAxisTickFormatting]=\"hostRef.xAxisTickFormat\"\n      [yAxisLabel]=\"yAxisLabel\"\n      [animations]=\"animations\">\n\n      <ng-template #tooltipTemplate let-model=\"model\">\n        <ng-container bbBalanceHistoryLineChartTooltipCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"{ model: model }\">\n          <ng-template bbBalanceHistoryLineChartTooltipCustomizable let-hostRef let-model=\"context.model\">\n            <div class=\"bb-product-summary-line-chart__tooltip\">\n              <div data-role=\"tooltip-header\">\n                {{model.name | date: hostRef.tooltipDateFormat }}\n              </div>\n              <div>\n                {{hostRef.currency}}\n                <span data-role=\"tooltip-item-value\">\n                  <bb-amount-ui\n                    [amount]=\"model.value\"\n                    [showPlusSign]=\"hostRef.showTooltipAmountSign\"\n                    [showPercent]=\"hostRef.showTooltipAmountPercent\"\n                  ></bb-amount-ui>\n                </span>\n              </div>\n            </div>\n          </ng-template>\n        </ng-container>\n      </ng-template>\n\n      <ng-template #seriesTooltipTemplate let-model=\"model\">\n        <ng-container\n          bbBalanceHistoryLineChartSeriesTooltipCustomizable\n          [bbHostRef]=\"hostRef\"\n          [bbTemplateContext]=\"{ model: hostRef.sanitizeTooltipValues(model) }\"\n        >\n          <ng-template bbBalanceHistoryLineChartSeriesTooltipCustomizable let-hostRef let-model=\"context.model\">\n            <div class=\"bb-product-summary-line-chart__tooltip\">\n              <div data-role=\"tooltip-header\">\n                {{model[0]?.name | date: hostRef.tooltipDateFormat }}\n              </div>\n              <div *ngFor=\"let item of model\">\n                {{hostRef.currency}}\n                <span data-role=\"tooltip-item-value\">\n                  <bb-amount-ui\n                    [amount]=\"item.value\"\n                    [showPlusSign]=\"hostRef.showTooltipAmountSign\"\n                    [showPercent]=\"hostRef.showTooltipAmountPercent\"\n                  ></bb-amount-ui>\n                </span>\n              </div>\n            </div>\n          </ng-template>\n        </ng-container>\n      </ng-template>\n    </ngx-charts-line-chart>\n  </div>\n</ng-template>\n\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace$5.LineChartComponent; }), selector: "ngx-charts-line-chart", inputs: ["legendTitle", "legendPosition", "showGridLines", "curve", "activeEntries", "trimXAxisTicks", "trimYAxisTicks", "rotateXAxisTicks", "maxXAxisTickLength", "maxYAxisTickLength", "roundDomains", "tooltipDisabled", "showRefLines", "showRefLabels", "legend", "xAxis", "yAxis", "showXAxisLabel", "showYAxisLabel", "xAxisLabel", "yAxisLabel", "autoScale", "timeline", "gradient", "schemeType", "rangeFillOpacity", "xAxisTickFormatting", "yAxisTickFormatting", "xAxisTicks", "yAxisTicks", "referenceLines", "xScaleMin", "xScaleMax", "yScaleMin", "yScaleMax"], outputs: ["activate", "deactivate"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i0__namespace.forwardRef(function () { return BalanceHistoryLineChartCustomizableDirective; }), selector: "[bbBalanceHistoryLineChartCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0__namespace.forwardRef(function () { return BalanceHistoryLineChartTooltipCustomizableDirective; }), selector: "[bbBalanceHistoryLineChartTooltipCustomizable]" }, { type: i0__namespace.forwardRef(function () { return BalanceHistoryLineChartTooltipSeriesCustomizableDirective; }), selector: "[bbBalanceHistoryLineChartSeriesTooltipCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "date": i0__namespace.forwardRef(function () { return i3__namespace.DatePipe; }) }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LineChartComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-line-chart-ui',
                        templateUrl: './line-chart.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { classes: [{
                    type: i0.Input
                }], dataSeries: [{
                    type: i0.Input
                }], showXAxis: [{
                    type: i0.Input
                }], showYAxis: [{
                    type: i0.Input
                }], gradient: [{
                    type: i0.Input
                }], showLegend: [{
                    type: i0.Input
                }], showXAxisLabel: [{
                    type: i0.Input
                }], showYAxisLabel: [{
                    type: i0.Input
                }], xAxisLabel: [{
                    type: i0.Input
                }], yAxisLabel: [{
                    type: i0.Input
                }], autoScale: [{
                    type: i0.Input
                }], animations: [{
                    type: i0.Input
                }], customColors: [{
                    type: i0.Input
                }], currency: [{
                    type: i0.Input
                }], showTooltipAmountSign: [{
                    type: i0.Input
                }], showTooltipAmountPercent: [{
                    type: i0.Input
                }], tooltipDateFormat: [{
                    type: i0.Input
                }], showRefLines: [{
                    type: i0.Input
                }], showRefLabels: [{
                    type: i0.Input
                }], referenceLines: [{
                    type: i0.Input
                }], xAxisTickFormatFunction: [{
                    type: i0.Input
                }], yAxisTickFormatFunction: [{
                    type: i0.Input
                }] } });
    var BalanceHistoryLineChartCustomizableDirective = /** @class */ (function (_super) {
        __extends(BalanceHistoryLineChartCustomizableDirective, _super);
        function BalanceHistoryLineChartCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BalanceHistoryLineChartCustomizableDirective;
    }(i1$1.BbTemplate));
    BalanceHistoryLineChartCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryLineChartCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BalanceHistoryLineChartCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BalanceHistoryLineChartCustomizableDirective, selector: "[bbBalanceHistoryLineChartCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryLineChartCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBalanceHistoryLineChartCustomizable]',
                    }]
            }] });
    var BalanceHistoryLineChartTooltipCustomizableDirective = /** @class */ (function (_super) {
        __extends(BalanceHistoryLineChartTooltipCustomizableDirective, _super);
        function BalanceHistoryLineChartTooltipCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BalanceHistoryLineChartTooltipCustomizableDirective;
    }(i1$1.BbTemplate));
    BalanceHistoryLineChartTooltipCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryLineChartTooltipCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BalanceHistoryLineChartTooltipCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BalanceHistoryLineChartTooltipCustomizableDirective, selector: "[bbBalanceHistoryLineChartTooltipCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryLineChartTooltipCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBalanceHistoryLineChartTooltipCustomizable]',
                    }]
            }] });
    var BalanceHistoryLineChartTooltipSeriesCustomizableDirective = /** @class */ (function (_super) {
        __extends(BalanceHistoryLineChartTooltipSeriesCustomizableDirective, _super);
        function BalanceHistoryLineChartTooltipSeriesCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BalanceHistoryLineChartTooltipSeriesCustomizableDirective;
    }(i1$1.BbTemplate));
    BalanceHistoryLineChartTooltipSeriesCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryLineChartTooltipSeriesCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BalanceHistoryLineChartTooltipSeriesCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BalanceHistoryLineChartTooltipSeriesCustomizableDirective, selector: "[bbBalanceHistoryLineChartSeriesTooltipCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryLineChartTooltipSeriesCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBalanceHistoryLineChartSeriesTooltipCustomizable]',
                    }]
            }] });

    var LineChartLegendComponent = /** @class */ (function () {
        function LineChartLegendComponent() {
            this.hostRef = this;
            /**
             * The chart data (data series) that this component is using to calculate min max
             */
            this.dataSeries = [];
            /**
             * The currency data
             */
            this.currency = '';
            /**
             * Set custom colors for negative and positive areas
             */
            this.customColors = [];
        }
        LineChartLegendComponent.prototype.getMax = function () {
            return Math.max.apply(Math, __spreadArray([], __read(this.values)));
        };
        LineChartLegendComponent.prototype.getMin = function () {
            return Math.min.apply(Math, __spreadArray([], __read(this.values)));
        };
        LineChartLegendComponent.prototype.getPositiveColor = function () {
            var customColor = i6.findByName(this.customColors, exports.CustomColorName.POSITIVE);
            return customColor ? customColor.value : '';
        };
        LineChartLegendComponent.prototype.getNegativeColor = function () {
            var customColor = i6.findByName(this.customColors, exports.CustomColorName.NEGATIVE);
            return customColor ? customColor.value : '';
        };
        Object.defineProperty(LineChartLegendComponent.prototype, "values", {
            get: function () {
                var allDateSeries = this.dataSeries.reduce(function (memo, _a) {
                    var series = _a.series;
                    return memo.concat(series);
                }, []);
                return allDateSeries.map(function (date) { return date.value; });
            },
            enumerable: false,
            configurable: true
        });
        return LineChartLegendComponent;
    }());
    LineChartLegendComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LineChartLegendComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    LineChartLegendComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LineChartLegendComponent, selector: "bb-line-chart-legend-ui", inputs: { dataSeries: "dataSeries", currency: "currency", customColors: "customColors" }, ngImport: i0__namespace, template: "<ng-container\n  bbBalanceHistoryLineChartLegendCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    dataSeries: dataSeries,\n    customColors: customColors\n  }\"\n></ng-container>\n\n<ng-template\n  bbBalanceHistoryLineChartLegendCustomizable\n  let-hostRef\n  let-dataSeries=\"context.dataSeries\"\n  let-customColors=\"context.customColors\"\n>\n  <bb-chart-legend-ui\n    [currency]=\"hostRef.currency\"\n    [maxValue]=\"hostRef.getMax()\"\n    [minValue]=\"hostRef.getMin()\"\n    [positiveColor]=\"hostRef.getPositiveColor()\"\n    [negativeColor]=\"hostRef.getNegativeColor()\"\n  ></bb-chart-legend-ui>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return ChartLegendComponent; }), selector: "bb-chart-legend-ui", inputs: ["currency", "maxValue", "minValue", "positiveColor", "negativeColor"] }], directives: [{ type: i0__namespace.forwardRef(function () { return BalanceHistoryLineChartLegendCustomizableDirective; }), selector: "[bbBalanceHistoryLineChartLegendCustomizable]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LineChartLegendComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-line-chart-legend-ui',
                        templateUrl: 'line-chart-legend.component.html',
                    }]
            }], propDecorators: { dataSeries: [{
                    type: i0.Input
                }], currency: [{
                    type: i0.Input
                }], customColors: [{
                    type: i0.Input
                }] } });
    var BalanceHistoryLineChartLegendCustomizableDirective = /** @class */ (function (_super) {
        __extends(BalanceHistoryLineChartLegendCustomizableDirective, _super);
        function BalanceHistoryLineChartLegendCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BalanceHistoryLineChartLegendCustomizableDirective;
    }(i1$1.BbTemplate));
    BalanceHistoryLineChartLegendCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryLineChartLegendCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    BalanceHistoryLineChartLegendCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BalanceHistoryLineChartLegendCustomizableDirective, selector: "[bbBalanceHistoryLineChartLegendCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BalanceHistoryLineChartLegendCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbBalanceHistoryLineChartLegendCustomizable]',
                    }]
            }] });

    var uiModules$7 = [i2.AmountModule, ChartLegendModule];
    var declarations = [
        LineChartComponent,
        LineChartLegendComponent,
        BalanceHistoryLineChartCustomizableDirective,
        BalanceHistoryLineChartTooltipCustomizableDirective,
        BalanceHistoryLineChartTooltipSeriesCustomizableDirective,
        BalanceHistoryLineChartCustomizableDirective,
        BalanceHistoryLineChartTooltipCustomizableDirective,
        BalanceHistoryLineChartTooltipSeriesCustomizableDirective,
        BalanceHistoryLineChartLegendCustomizableDirective,
    ];
    var LineChartModule = /** @class */ (function () {
        function LineChartModule() {
        }
        return LineChartModule;
    }());
    LineChartModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LineChartModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    LineChartModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LineChartModule, declarations: [LineChartComponent,
            LineChartLegendComponent,
            BalanceHistoryLineChartCustomizableDirective,
            BalanceHistoryLineChartTooltipCustomizableDirective,
            BalanceHistoryLineChartTooltipSeriesCustomizableDirective,
            BalanceHistoryLineChartCustomizableDirective,
            BalanceHistoryLineChartTooltipCustomizableDirective,
            BalanceHistoryLineChartTooltipSeriesCustomizableDirective,
            BalanceHistoryLineChartLegendCustomizableDirective], imports: [i3.CommonModule, i1$5.LineChartModule, i2.AmountModule, ChartLegendModule], exports: [LineChartComponent,
            LineChartLegendComponent,
            BalanceHistoryLineChartCustomizableDirective,
            BalanceHistoryLineChartTooltipCustomizableDirective,
            BalanceHistoryLineChartTooltipSeriesCustomizableDirective,
            BalanceHistoryLineChartCustomizableDirective,
            BalanceHistoryLineChartTooltipCustomizableDirective,
            BalanceHistoryLineChartTooltipSeriesCustomizableDirective,
            BalanceHistoryLineChartLegendCustomizableDirective, i2.AmountModule, ChartLegendModule] });
    LineChartModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LineChartModule, imports: [__spreadArray([i3.CommonModule, i1$5.LineChartModule], __read(uiModules$7)), i2.AmountModule, ChartLegendModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LineChartModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule, i1$5.LineChartModule], __read(uiModules$7)),
                        declarations: __spreadArray([], __read(declarations)),
                        exports: __spreadArray(__spreadArray([], __read(declarations)), __read(uiModules$7)),
                    }]
            }] });

    var ProductKindNameComponent = /** @class */ (function () {
        function ProductKindNameComponent() {
            this.hostRef = this;
            this.productKindNames = i6.ProductKindNames;
            this.productKindUri = i6.ProductKindUri;
            /**
             * Product kind name for which display a localized version
             *
             * @default ''
             */
            this.name = '';
            /**
             * Defines whether product kind name is plural
             *
             * @default false
             */
            this.isPlural = false;
        }
        return ProductKindNameComponent;
    }());
    ProductKindNameComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindNameComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductKindNameComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductKindNameComponent, selector: "bb-product-kind-name", inputs: { name: "name", isPlural: "isPlural" }, ngImport: i0__namespace, template: "<ng-container\n  bbProductKindNameCustomizable\n  [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template\n  bbProductKindNameCustomizable\n  let-hostRef>\n  <ng-container [ngSwitch]=\"hostRef.name\">\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.CURRENT_ACCOUNT\">\n      <span i18n=\"Current Account|Product kind name@@product-summary.product-kind-name.current-account\">\n        {+hostRef.isPlural, plural, =0 {Current Account} =1 {Current Accounts}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.SAVINGS_ACCOUNT\">\n      <span i18n=\"Savings Account|Product kind name@@product-summary.product-kind-name.savings-account\">\n        {+hostRef.isPlural, plural, =0 {Savings Account} =1 {Savings Accounts}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.TERM_DEPOSIT\">\n      <span i18n=\"Terms Deposit|Product kind name@@product-summary.product-kind-name.term-deposit\">\n        {+hostRef.isPlural, plural, =0 {Term Deposit} =1 {Term Deposits}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.LOAN\">\n      <span i18n=\"Loan|Product kind name@@product-summary.product-kind-name.loan\">\n        {+hostRef.isPlural, plural, =0 {Loan} =1 {Loans}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.CREDIT_CARD\">\n      <span i18n=\"Credit Card|Product kind name@@product-summary.product-kind-name.credit-card\">\n        {+hostRef.isPlural, plural, =0 {Credit Card} =1 {Credit Cards}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.DEBIT_CARD\">\n      <span i18n=\"Debit card|Product kind name@@product-summary.product-kind-name.debit-card\">\n        {+hostRef.isPlural, plural, =0 {Debit Card} =1 {Debit Cards}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.INVESTMENT_ACCOUNT\">\n      <span i18n=\"Investment Account|Product kind name@@product-summary.product-kind-name.investment-account\">\n        {+hostRef.isPlural, plural, =0 {Investment Account} =1 {Investment Accounts}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <span>{{hostRef.name}}</span>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n", directives: [{ type: i0__namespace.forwardRef(function () { return ProductKindNameCustomizableDirective; }), selector: "[bbProductKindNameCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindNameComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-kind-name',
                        templateUrl: 'bb-product-kind-name.component.html',
                    }]
            }], propDecorators: { name: [{
                    type: i0.Input
                }], isPlural: [{
                    type: i0.Input
                }] } });
    /**
     * This is an extension slot to be used for customizing the entire component
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductKindNameCustomizable
     *   let-hostRef>
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryAccountDetailsWidgetModule
     */
    var ProductKindNameCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductKindNameCustomizableDirective, _super);
        function ProductKindNameCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductKindNameCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductKindNameCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindNameCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductKindNameCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductKindNameCustomizableDirective, selector: "[bbProductKindNameCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindNameCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductKindNameCustomizable]',
                    }]
            }] });

    var ProductItemCardComponent = /** @class */ (function () {
        /**
         * @internal
         * @param domAttributesService
         */
        function ProductItemCardComponent(domAttributesService) {
            this.domAttributesService = domAttributesService;
            this.hostRef = this;
            /**
             * A reference to AccountNavigationType enum
             */
            this.accountNavigationType = i6.AccountNavigationType;
            /**
             * Unique id for account-name DOM element
             */
            this.accountNameId = this.domAttributesService.generateId();
            /**
             * Allowed navigation types, change it to hide some of the navigation links
             *
             * @default DefaultAllowedNavigationTypes
             */
            this.allowedNavigations = i6.DefaultAllowedNavigationTypes;
            /**
             * Flag that indicates if changing favorite status is allowed
             *
             * @default true
             */
            this.canToggleFavorite = true;
            /**
             * Is item set as favorite
             */
            this.isFavorite = false;
            /**
             * itemSelect emits selected account when card is selected
             */
            this.itemSelect = new i0.EventEmitter();
            /**
             * favorite emits selected account as ProductsummaryItem object
             */
            this.favorite = new i0.EventEmitter();
            /**
             * viewTransactions emits id of clicked account as string - used to navigate to transactions
             */
            this.viewTransactions = new i0.EventEmitter();
            /**
             * viewStatements emits selected account id as string - used to navigate to statements
             */
            this.viewStatements = new i0.EventEmitter();
            /**
             * newPayment emits id of clicked account as string - used to navigate to payments
             */
            this.newPayment = new i0.EventEmitter();
            /**
             * viewBalanceHistory emits selected account id as string - used to navigate to balance history
             */
            this.viewBalanceHistory = new i0.EventEmitter();
        }
        Object.defineProperty(ProductItemCardComponent.prototype, "favoriteIcon", {
            get: function () {
                return this.isFavorite ? 'star' : 'star-border';
            },
            enumerable: false,
            configurable: true
        });
        ProductItemCardComponent.prototype.getIconName = function (productKindName) {
            if (productKindName === void 0) { productKindName = ''; }
            return i6.getProductKindIconName(productKindName);
        };
        ProductItemCardComponent.prototype.getIconColor = function (productKindName) {
            if (productKindName === void 0) { productKindName = ''; }
            return i6.toKebabCase(productKindName);
        };
        /**
         * emits "itemSelected" event
         */
        ProductItemCardComponent.prototype.onItemSelected = function () {
            this.itemSelect.emit(this.item);
        };
        ProductItemCardComponent.prototype.onFavorite = function (account) {
            this.favorite.emit(account);
        };
        ProductItemCardComponent.prototype.onViewTransactions = function (id) {
            this.viewTransactions.emit(id);
        };
        ProductItemCardComponent.prototype.onNewPayment = function (id) {
            this.newPayment.emit(id);
        };
        ProductItemCardComponent.prototype.onViewStatements = function (id) {
            this.viewStatements.emit(id);
        };
        ProductItemCardComponent.prototype.onViewBalanceHistory = function (id) {
            this.viewBalanceHistory.emit(id);
        };
        return ProductItemCardComponent;
    }());
    ProductItemCardComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCardComponent, deps: [{ token: i6__namespace.DomAttributesService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemCardComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemCardComponent, selector: "bb-product-item-card", inputs: { allowedNavigations: "allowedNavigations", canToggleFavorite: "canToggleFavorite", isFavorite: "isFavorite", item: "item" }, outputs: { itemSelect: "itemSelect", favorite: "favorite", viewTransactions: "viewTransactions", viewStatements: "viewStatements", newPayment: "newPayment", viewBalanceHistory: "viewBalanceHistory" }, ngImport: i0__namespace, template: "<div class=\"bb-product-item-card\" (bbKeyboardClick)=\"hostRef.onItemSelected()\">\n  <div class=\"bb-product-item-card__header\">\n    <div class=\"bb-product-item-card__kind\">\n      <bb-icon-ui\n        class=\"bb-product-item-card__kind bb-product-item-card__kind--icon\"\n        class=\"bb-product-item-card__kind-icon\"\n        backgroundType=\"square\"\n        size=\"sm\"\n        [name]=\"getIconName(item?.productKindName)\"\n        color=\"secondary\">\n      </bb-icon-ui>\n      <bb-product-kind-name\n        data-role=\"product-kind\"\n        class=\"bb-text-bold bb-product-item-card__kind-text\"\n        [name]=\"item?.productKindName\"></bb-product-kind-name>\n    </div>\n    <div class=\"bb-product-item-card__buttons\">\n      <div\n        *ngIf=\"hostRef.canToggleFavorite\"\n        triggers=\"hover focus\"\n        placement=\"bottom\"\n        bbTooltip=\"Toggle favorite account\"\n        i18n-bbTooltip=\"Toggle favorite account|Button tooltip favorite account\n          @@product-item-card-ui.button.tooltip.favorite\"\n        data-role=\"favorite-icon\"\n      >\n        <button\n          bbButton\n          color=\"link\"\n          [circle]=\"true\"\n          [attr.aria-describedby]=\"hostRef.accountNameId\"\n          (click)=\"onFavorite(item); $event.stopPropagation()\"\n        >\n        <span class=\"sr-only\" i18n=\"Show if is favorite account@@product-item-card.is.favorite.account\">\n          {hostRef.isFavorite ? 'yes' : 'no', select, yes {Favorite account} no {Not favorite account}}\n        </span>\n          <span class=\"sr-only\" i18n=\"Toggle favorite account@@product-item-card.button.favoriteUnfavorite\">\n          Toggle favorite account\n        </span>\n          <bb-icon-ui\n            [name]=\"favoriteIcon\"\n          ></bb-icon-ui>\n        </button>\n      </div>\n      <bb-dropdown-menu-ui\n        btnColor=\"none\"\n        [btnCircle]=\"true\"\n        icon=\"ellipsis-h\"\n        bbTooltip=\"More actions\"\n        i18n-bbTooltip=\"More actions@@product-item-card-ui.label.moreActions\"\n        triggers=\"hover focus\"\n        placement=\"bottom\"\n        aria-label=\"More actions\"\n        i18n-aria-label=\"More actions@@product-item-card-ui.label.moreActions\"\n        [attr.aria-describedby]=\"hostRef.accountNameId\"\n        (click)=\"$event.stopPropagation()\"\n        container=\"body\"\n      >\n        <ng-template bbDropdownMenuItem>\n          <a\n            *ngIf=\"hostRef.allowedNavigations?.includes(hostRef.accountNavigationType.PAYMENTS)\"\n            i18n=\"New Payment@@product-item-card-ui.label.newPayment\"\n            role=\"menuitem\"\n            data-role=\"navigate-to-new-payment\"\n            class=\"dropdown-item\"\n            aria-label=\"Navigate to new payment\"\n            i18n-aria-label=\"Navigate to new payment | Navigate to new payment aria label\n              @@product-item-card-ui.aria.label.view.new.payment\"\n            tabindex=\"0\"\n            (bbKeyboardClick)=\"hostRef.onNewPayment(item?.id); $event.stopPropagation()\">\n            New Payment\n          </a>\n          <a\n            *ngIf=\"hostRef.allowedNavigations?.includes(hostRef.accountNavigationType.TRANSACTIONS)\"\n            i18n=\"See Transactions@@product-item-card-ui.label.viewTransactions\"\n            role=\"menuitem\"\n            data-role=\"navigate-to-transactions\"\n            class=\"dropdown-item\"\n            aria-label=\"Navigate to transaction\"\n            i18n-aria-label=\"Navigate to Transaction | Navigate to Transaction aria label\n              @@product-item-card-ui.aria.label.view.transaction\"\n            tabindex=\"0\"\n            (bbKeyboardClick)=\"hostRef.onViewTransactions(item?.id); $event.stopPropagation()\">\n            See Transactions\n          </a>\n          <a\n            *ngIf=\"hostRef.allowedNavigations?.includes(hostRef.accountNavigationType.BALANCE_HISTORY)\"\n            i18n=\"See Balance history@@product-item-card-ui.label.viewBalanceHistory\"\n            role=\"menuitem\"\n            data-role=\"navigate-to-balance-history\"\n            class=\"dropdown-item\"\n            aria-label=\"Navigate to balance history\"\n            i18n-aria-label=\"Navigate to balance history | Navigate to balance history aria label\n              @@product-item-card-ui.aria.label.view.balanceHistory\"\n            tabindex=\"0\"\n            (bbKeyboardClick)=\"hostRef.onViewBalanceHistory(item?.id); $event.stopPropagation()\">\n            See Balance history\n          </a>\n          <a\n            *ngIf=\"hostRef.allowedNavigations?.includes(hostRef.accountNavigationType.STATEMENTS)\"\n            i18n=\"See Statements@@product-item-card-ui.label.viewStatements\"\n            role=\"menuitem\"\n            data-role=\"navigate-to-account-statements\"\n            class=\"dropdown-item\"\n            aria-label=\"Navigate to statements\"\n            i18n-aria-label=\"Navigate to Statements | Navigate to Statements aria label\n              @@product-item-card-ui.aria.label.view.statements\"\n            tabindex=\"0\"\n            (bbKeyboardClick)=\"hostRef.onViewStatements(item?.id); $event.stopPropagation()\">\n            See Statements\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n  <div class=\"bb-product-item-card__body\">\n    <div>\n      <div>\n        <div\n          role=\"link\"\n          tabindex=\"0\"\n          data-role=\"product-name\"\n          class=\"bb-product-item-card__name\"\n          [id]=\"hostRef.accountNameId\"\n          (bbKeyboardClick)=\"hostRef.onItemSelected(); $event.stopPropagation();\"\n        >\n          {{ item?.displayName }}\n        </div>\n        <div\n          *ngIf=\"item?.bankAlias\"\n          data-role=\"product-alias\"\n          class=\"bb-product-item-card__alias\"\n        >\n          ({{ item?.bankAlias }})\n        </div>\n      </div>\n      <div\n        class=\"bb-account-info__product-number\"\n        data-role=\"card-view-account-number\"\n        *ngIf=\"item && (item?.IBAN || item?.BBAN || item?.number)\"\n      >\n        <bb-product-number\n          [product]=\"item\"\n        ></bb-product-number>\n      </div>\n    </div>\n    <div class=\"bb-product-item-card__balance\">\n      <bb-amount-ui\n        class=\"bb-account__amount bb-highlight\"\n        [amount]=\"item?.bookedBalance\"\n        [currency]=\"item?.currency\"\n        [mapCurrency]=\"false\"\n        data-role=\"card-booked-balance\"\n      >\n      </bb-amount-ui>\n      <div *ngIf=\"item?.availableBalance\">\n        <bb-amount-ui\n          class=\"bb-subtitle bb-product-item-card__balance-secondary\"\n          [amount]=\"item?.availableBalance\"\n          [currency]=\"item?.currency\"\n          [mapCurrency]=\"false\"\n          data-role=\"card-available-balance\"\n        >\n        </bb-amount-ui>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: ProductKindNameComponent, selector: "bb-product-kind-name", inputs: ["name", "isPlural"] }, { type: i4__namespace$2.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: ProductNumberComponent, selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i2__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i7__namespace$2.KeyboardClickDirective, selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i4__namespace$2.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCardComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-card',
                        templateUrl: 'product-item-card-ui.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i6__namespace.DomAttributesService }]; }, propDecorators: { allowedNavigations: [{
                    type: i0.Input
                }], canToggleFavorite: [{
                    type: i0.Input
                }], isFavorite: [{
                    type: i0.Input
                }], item: [{
                    type: i0.Input
                }], itemSelect: [{
                    type: i0.Output
                }], favorite: [{
                    type: i0.Output
                }], viewTransactions: [{
                    type: i0.Output
                }], viewStatements: [{
                    type: i0.Output
                }], newPayment: [{
                    type: i0.Output
                }], viewBalanceHistory: [{
                    type: i0.Output
                }] } });

    var ProductKindNameModule = /** @class */ (function () {
        function ProductKindNameModule() {
        }
        return ProductKindNameModule;
    }());
    ProductKindNameModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindNameModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductKindNameModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindNameModule, declarations: [ProductKindNameComponent, ProductKindNameCustomizableDirective], imports: [i3.CommonModule], exports: [ProductKindNameComponent, ProductKindNameCustomizableDirective] });
    ProductKindNameModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindNameModule, imports: [[i3.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindNameModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule],
                        declarations: [ProductKindNameComponent, ProductKindNameCustomizableDirective],
                        exports: [ProductKindNameComponent, ProductKindNameCustomizableDirective],
                    }]
            }] });

    var uiModules$6 = [
        i1.IconModule,
        i4$2.DropdownMenuModule,
        paymentCardNumberPipe.PaymentCardNumberModule,
        i2.AmountModule,
        i4.ButtonModule,
        i5.TooltipModule,
        ProductKindNameModule,
        i7$2.KeyboardClickModule,
        ProductNumberModule,
    ];
    var components$5 = [ProductItemCardComponent];
    var ProductItemCardModule = /** @class */ (function () {
        function ProductItemCardModule() {
        }
        return ProductItemCardModule;
    }());
    ProductItemCardModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCardModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemCardModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCardModule, declarations: [ProductItemCardComponent], imports: [i3.CommonModule, i1.IconModule,
            i4$2.DropdownMenuModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            i2.AmountModule,
            i4.ButtonModule,
            i5.TooltipModule,
            ProductKindNameModule,
            i7$2.KeyboardClickModule,
            ProductNumberModule], exports: [ProductItemCardComponent, i1.IconModule,
            i4$2.DropdownMenuModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            i2.AmountModule,
            i4.ButtonModule,
            i5.TooltipModule,
            ProductKindNameModule,
            i7$2.KeyboardClickModule,
            ProductNumberModule] });
    ProductItemCardModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCardModule, providers: [i6.DomAttributesService], imports: [__spreadArray([i3.CommonModule], __read(uiModules$6)), i1.IconModule,
            i4$2.DropdownMenuModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            i2.AmountModule,
            i4.ButtonModule,
            i5.TooltipModule,
            ProductKindNameModule,
            i7$2.KeyboardClickModule,
            ProductNumberModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCardModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$6)),
                        providers: [i6.DomAttributesService],
                        declarations: __spreadArray([], __read(components$5)),
                        exports: __spreadArray(__spreadArray([], __read(components$5)), __read(uiModules$6)),
                    }]
            }] });

    /**
     * Displays product item title
     *
     * @usageNotes
     *
     * ```html
     * <bb-product-item-custom-title-ui
     *   [title]="'title'"
     *   [productNumber]="'12345678'"
     *   [productNumberType]="'bban'"
     *   [favorite]="true"
     * ></bb-product-item-custom-title-ui>
     * ```
     *
     * @ngModule ProductItemCustomModule
     */
    var ProductItemCustomTitleComponent = /** @class */ (function () {
        function ProductItemCustomTitleComponent() {
            /**
             * The card Title value. Default is empty string
             *
             * @default ''
             */
            this.title = '';
            /**
             * Specifies if title can be focused and selected
             *
             * @default false
             */
            this.titleInteractive = false;
            /**
             * Specifies if logo should be displayed
             *
             * @default false
             */
            this.showLogo = true;
            /**
             * Source for bank logo.
             * Can be either a URL or base64 image.
             *
             * @default ''
             */
            this.logoSrc = '';
            /**
             * Product kind name to display a related logo icon.
             *
             * @default ''
             */
            this.logoKind = '';
            /**
             * Specifies if external title should be displayed.
             *
             * @default false
             */
            this.showExternalTitle = true;
            /**
             * The favorite state of card (add favorite icon next to title)
             *
             * @default false
             */
            this.favorite = false;
            /**
             * The favorite icon color (define star icon color)
             *
             * @default 'primary'
             */
            this.favoriteIconColor = 'primary';
            /**
             * The product Number. Default is empty string
             *
             * @default ''
             */
            this.productNumber = '';
            /**
             * State name to display
             * Supported values: 'active', 'inactive', 'closed'
             * If the state name is not supported it will be shown as it is
             *
             * @default ''
             */
            this.state = '';
            /**
             * selectTitle emits when custom title is selected
             */
            this.selectCustomTitle = new i0.EventEmitter();
            this.uniqueSelectCustomTitleEvent = new rxjs.Subject();
            this.subscriptions = [];
        }
        /**
         * @internal
         */
        ProductItemCustomTitleComponent.prototype.ngOnInit = function () {
            var _this = this;
            var uniqueSelectCustomTitleSubscription = this.uniqueSelectCustomTitleEvent
                .pipe(operators.distinctUntilChanged())
                .subscribe(function (event) { return _this.selectCustomTitle.emit(event); });
            this.subscriptions.push(uniqueSelectCustomTitleSubscription);
        };
        /**
         * @internal
         */
        ProductItemCustomTitleComponent.prototype.ngOnDestroy = function () {
            this.subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); });
            this.uniqueSelectCustomTitleEvent.complete();
        };
        /**
         * emits "selectCustomTitle" event
         */
        ProductItemCustomTitleComponent.prototype.onSelectCustomTitle = function (event) {
            this.uniqueSelectCustomTitleEvent.next(event);
        };
        /**
         * Returns financial institution name
         */
        ProductItemCustomTitleComponent.prototype.getExternalTitle = function () {
            var _a;
            if (this.showExternalTitle) {
                return ((_a = this.externalTitle) !== null && _a !== void 0 ? _a : $localize(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([":@@product-summary-ui.product-item-custom-title.external-title:External account"], [":@@product-summary-ui.product-item-custom-title.external-title:External account"]))));
            }
            return undefined;
        };
        return ProductItemCustomTitleComponent;
    }());
    ProductItemCustomTitleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCustomTitleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemCustomTitleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemCustomTitleComponent, selector: "bb-product-item-custom-title-ui", inputs: { title: "title", titleInteractive: "titleInteractive", showLogo: "showLogo", logoSrc: "logoSrc", logoKind: "logoKind", showExternalTitle: "showExternalTitle", externalTitle: "externalTitle", favorite: "favorite", favoriteIconColor: "favoriteIconColor", productNumber: "productNumber", productNumberType: "productNumberType", state: "state" }, outputs: { selectCustomTitle: "selectCustomTitle" }, ngImport: i0__namespace, template: "<div class=\"bb-account-info\" (click)=\"onSelectCustomTitle($event)\">\n  <ng-container *ngIf=\"showLogo && (logoSrc || logoKind); else titleWithoutLogo\">\n    <div class=\"bb-stack bb-stack--align-top bb-stack--density-sm bb-block bb-block--xs\">\n      <bb-product-summary-account-logo\n        *ngIf=\"logoSrc || logoKind\"\n        class=\"bb-stack__item\"\n        [logoSrc]=\"logoSrc\"\n        [productKindName]=\"logoKind\"\n        iconColor=\"secondary\"\n        iconSize=\"sm\"\n        logoSize=\"sm\"\n      ></bb-product-summary-account-logo>\n      <div *ngIf=\"showExternalTitle; else accountTitle\" class=\"bb-stack__item\">\n        <ng-container *ngTemplateOutlet=\"accountExternalTitle\"></ng-container>\n      </div>\n    </div>\n    <ng-container *ngIf=\"showExternalTitle\">\n      <ng-container *ngTemplateOutlet=\"accountTitle\"></ng-container>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #titleWithoutLogo>\n    <ng-container *ngTemplateOutlet=\"accountExternalTitle\"></ng-container>\n    <ng-container *ngTemplateOutlet=\"accountTitle\"></ng-container>\n  </ng-template>\n\n  <ng-template #accountExternalTitle>\n    <div *ngIf=\"showExternalTitle\" class=\"bb-subtitle bb-text-semi-bold bb-text-support bb-block bb-block--xs\">\n      <bb-ellipsis-ui [text]=\"getExternalTitle()\" lineClamp=\"1\"></bb-ellipsis-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #accountTitle>\n    <div class=\"bb-stack bb-account-info__title bb-block bb-block--xs\" *ngIf=\"title || favorite || state\">\n      <div class=\"bb-stack__item bb-stack__item--spacing-sm\" data-role=\"card-title\">\n        <bb-ellipsis-ui\n          *ngIf=\"titleInteractive; else staticTitle\"\n          [text]=\"title\"\n          role=\"link\"\n          tabindex=\"0\"\n          lineClamp=\"1\"\n          (bbKeyboardClick)=\"onSelectCustomTitle($event)\"\n        ></bb-ellipsis-ui>\n        <ng-template #staticTitle>\n          <bb-ellipsis-ui [text]=\"title\" lineClamp=\"1\"></bb-ellipsis-ui>\n        </ng-template>\n      </div>\n      <bb-icon-ui\n        *ngIf=\"favorite\"\n        class=\"bb-stack__item bb-account-info__icon\"\n        size=\"sm\"\n        [color]=\"favoriteIconColor\"\n        data-role=\"favorite-icon\"\n        name=\"star\"\n        tabindex=\"0\"\n        aria-label=\"Favorite account\"\n        i18n-aria-label=\"Favorite account|Icon aria-label favorite account\n                @@product-summary.product-item-title-custom.icon.favorite.aria-label\"\n        bbTooltip=\"Favorite account\"\n        triggers=\"hover focus\"\n        i18n-bbTooltip=\"Favorite account|Icon tooltip favorite account\n                @@product-summary.product-item-title-custom.icon.favorite.tooltip\"\n      ></bb-icon-ui>\n      <bb-arrangement-state-indicator\n        *ngIf=\"state\"\n        [state]=\"state\"\n        class=\"bb-stack__item\"\n        data-role=\"arrangementState\"\n      ></bb-arrangement-state-indicator>\n    </div>\n  </ng-template>\n\n  <div\n      (mousedown)=\"$event.stopPropagation()\"\n      *ngIf=\"productNumber\"\n      data-role=\"card-sub-title\"\n      class=\"bb-account-info__product-number\"\n    >\n    <bb-ellipsis-ui>\n      <bb-product-number\n        [number]=\"productNumber\"\n        [type]=\"productNumberType\"\n      ></bb-product-number>\n    </bb-ellipsis-ui>\n  </div>\n</div>\n\n", components: [{ type: ProductSummaryAccountLogoComponent, selector: "bb-product-summary-account-logo", inputs: ["logoSrc", "productKindName", "defaultProductKindName", "iconColor", "iconSize", "logoSize"] }, { type: i2__namespace$2.EllipsisComponent, selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }, { type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: ArrangementStateIndicatorComponent, selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }, { type: ProductNumberComponent, selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i7__namespace$2.KeyboardClickDirective, selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i5__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCustomTitleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-custom-title-ui',
                        templateUrl: './bb-product-item-custom-title-ui.component.html',
                    }]
            }], propDecorators: { title: [{
                    type: i0.Input
                }], titleInteractive: [{
                    type: i0.Input
                }], showLogo: [{
                    type: i0.Input
                }], logoSrc: [{
                    type: i0.Input
                }], logoKind: [{
                    type: i0.Input
                }], showExternalTitle: [{
                    type: i0.Input
                }], externalTitle: [{
                    type: i0.Input
                }], favorite: [{
                    type: i0.Input
                }], favoriteIconColor: [{
                    type: i0.Input
                }], productNumber: [{
                    type: i0.Input
                }], productNumberType: [{
                    type: i0.Input
                }], state: [{
                    type: i0.Input
                }], selectCustomTitle: [{
                    type: i0.Output
                }] } });
    var templateObject_1$1;

    var uiModules$5 = [
        i1.IconModule,
        paymentCardNumberPipe.PaymentCardNumberModule,
        ArrangementStateIndicatorModule,
        i2$2.EllipsisModule,
        i5.TooltipModule,
        ProductNumberModule,
        i7$2.KeyboardClickModule,
        ProductSummaryAccountLogoModule,
    ];
    var components$4 = [ProductItemCustomTitleComponent];
    var ProductItemCustomModule = /** @class */ (function () {
        function ProductItemCustomModule() {
        }
        return ProductItemCustomModule;
    }());
    ProductItemCustomModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCustomModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemCustomModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCustomModule, declarations: [ProductItemCustomTitleComponent], imports: [i3.CommonModule, i1$1.BackbaseCoreModule, i1.IconModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            ArrangementStateIndicatorModule,
            i2$2.EllipsisModule,
            i5.TooltipModule,
            ProductNumberModule,
            i7$2.KeyboardClickModule,
            ProductSummaryAccountLogoModule], exports: [ProductItemCustomTitleComponent, i1.IconModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            ArrangementStateIndicatorModule,
            i2$2.EllipsisModule,
            i5.TooltipModule,
            ProductNumberModule,
            i7$2.KeyboardClickModule,
            ProductSummaryAccountLogoModule] });
    ProductItemCustomModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCustomModule, imports: [__spreadArray([i3.CommonModule, i1$1.BackbaseCoreModule], __read(uiModules$5)), i1.IconModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            ArrangementStateIndicatorModule,
            i2$2.EllipsisModule,
            i5.TooltipModule,
            ProductNumberModule,
            i7$2.KeyboardClickModule,
            ProductSummaryAccountLogoModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCustomModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule, i1$1.BackbaseCoreModule], __read(uiModules$5)),
                        declarations: __spreadArray([], __read(components$4)),
                        exports: __spreadArray(__spreadArray([], __read(components$4)), __read(uiModules$5)),
                    }]
            }] });

    /**
     * Displays product kind item
     *
     * @usageNotes
     *
     * ```html
     * <bb-product-kind
     *   [item]="item"
     * ></bb-product-kind>
     * ```
     *
     * @ngModule ProductKindModule
     */
    var ProductKindComponent = /** @class */ (function (_super) {
        __extends(ProductKindComponent, _super);
        /**
         * @internal
         */
        function ProductKindComponent(element, changeDetector) {
            var _this = _super.call(this, element, changeDetector) || this;
            _this.hostRef = _this;
            /**
             * A method to return the alias of the given account
             */
            _this.getAlias = i6.getAccountAlias;
            /**
             * Returns true if product has external info
             */
            _this.hasExternalInfo = i6.hasExternalInfo;
            /**
             * Emits ProductKind when selected
             */
            _this.selectProductKind = new i0.EventEmitter();
            _this.uniqueSelectProductKindEvent = new rxjs.Subject();
            _this.subscriptions = [];
            return _this;
        }
        /**
         * @internal
         */
        ProductKindComponent.prototype.ngOnInit = function () {
            var _this = this;
            var uniqueSelectProductKindSubscription = this.uniqueSelectProductKindEvent
                .pipe(operators.distinctUntilChanged())
                .subscribe(function () { return _this.selectProductKind.emit(_this.item); });
            this.subscriptions.push(uniqueSelectProductKindSubscription);
        };
        /**
         * @internal
         */
        ProductKindComponent.prototype.ngOnDestroy = function () {
            this.subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); });
            this.uniqueSelectProductKindEvent.complete();
        };
        /**
         * Emits `selectProductKind` event
         */
        ProductKindComponent.prototype.onSelectProductKind = function (event) {
            if (event === void 0) { event = new Event('default'); }
            this.uniqueSelectProductKindEvent.next(event);
        };
        return ProductKindComponent;
    }(i6.ResponsiveContainerComponent));
    ProductKindComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindComponent, deps: [{ token: i0__namespace.ElementRef }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductKindComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductKindComponent, selector: "bb-product-kind", inputs: { item: "item", showLogo: "showLogo" }, outputs: { selectProductKind: "selectProductKind" }, usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductKindCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"item\">\n</ng-container>\n\n<ng-template bbProductKindCustomizable\n  let-hostRef\n  let-item=\"context\">\n  <div class=\"bb-product-kind-ui\">\n    <div class=\"bb-product-kind-ui__item bb-stack bb-stack--align-top\" (click)=\"hostRef.onSelectProductKind($event)\">\n      <div *ngIf=\"hostRef.showLogo && hostRef.responsiveView !== 'mobile'\" class=\"bb-stack__item\">\n        <ng-container *ngTemplateOutlet=\"productLogo\"></ng-container>\n      </div>\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <bb-product-item-custom-title-ui\n          *ngIf=\"hostRef.hasExternalInfo(item) && hostRef.responsiveView !== 'mobile'\"\n          [showExternalTitle]=\"true\"\n          [externalTitle]=\"item?.financialInstitution?.name\"\n        ></bb-product-item-custom-title-ui>\n        <ng-container *ngTemplateOutlet=\"productItem\"></ng-container>\n      </div>\n    </div>\n\n    <ng-template #productLogo>\n      <bb-product-summary-account-logo\n        [logoSrc]=\"item?.financialInstitution?.logo\"\n        [productKindName]=\"item?.productKindName\"\n        iconColor=\"secondary\"\n      ></bb-product-summary-account-logo>\n    </ng-template>\n\n    <ng-template #productItem>\n      <ng-container [ngSwitch]=\"item.kind\">\n\n        <!-- Current Account -->\n        <ng-container *ngSwitchCase=\"'currentAccounts'\">\n          <bb-product-item-current-account-ui\n            [title]=\"hostRef.getAlias(item)\"\n            [mainSectionCurrency]=\"item.currency\"\n            [mainSectionAmount]=\"item.availableBalance\"\n            mainSectionTitle=\"Available Balance\"\n            i18n-mainSectionTitle=\"Available Balance|Main Section tittle\n            @@product-summary-item-current-account-ui.main.section.title\"\n            [secondarySectionCurrency]=\"item.currency\"\n            [secondarySectionAmount]=\"item.creditLimitUsage\"\n            secondarySectionTitle=\"Credit Limit Usage\"\n            i18n-secondarySectionTitle=\"Credit Limit Usage|Secondary Section tittle\n            @@product-summary-item-current-account-ui.secondary.section.title\"\n            [active]=\"false\"\n            [productDetailsInfo]=\"{\n            'owners': item.accountHolderNames || ''\n          }\"\n          >\n            <ng-template bbCustomProductItemCurrentAccountTitle>\n              <ng-container *ngTemplateOutlet=\"productTitle\"></ng-container>\n            </ng-template>\n            <ng-template bbCustomProductItemCurrentAccountDetailsFormatter>\n              <ng-container *ngTemplateOutlet=\"productBalance; context: { amount: item.bookedBalance }\"></ng-container>\n            </ng-template>\n          </bb-product-item-current-account-ui>\n        </ng-container>\n\n        <!-- Savings Account -->\n        <ng-container *ngSwitchCase=\"'savingsAccounts'\">\n          <bb-product-item-savings-account-ui\n            [title]=\"hostRef.getAlias(item)\"\n            [mainSectionCurrency]=\"item.currency\"\n            [mainSectionAmount]=\"item.accruedInterest\"\n            mainSectionTitle=\"Accrued interest\"\n            i18n-mainSectionTitle=\"Accrued interest|Main Section tittle\n            @@product-summary-item-saving-accounts-ui.main.section.title\"\n            [active]=\"false\"\n            [productDetailsInfo]=\"{\n            'owners': item.accountHolderNames || ''\n          }\"\n          >\n            <ng-template bbCustomProductItemSavingsAccountTitle>\n              <ng-container *ngTemplateOutlet=\"productTitle\"></ng-container>\n            </ng-template>\n            <ng-template bbCustomProductItemSavingsAccountDetailsFormatter>\n              <ng-container *ngTemplateOutlet=\"productBalance; context: { amount: item.bookedBalance }\"></ng-container>\n            </ng-template>\n          </bb-product-item-savings-account-ui>\n        </ng-container>\n\n        <!-- Term Deposit -->\n        <ng-container *ngSwitchCase=\"'termDeposits'\">\n          <bb-product-item-term-deposit-ui\n            [title]=\"hostRef.getAlias(item)\"\n            [mainSectionCurrency]=\"item.currency\"\n            [mainSectionAmount]=\"item.accruedInterest\"\n            mainSectionTitle=\"Accrued interest\"\n            i18n-mainSectionTitle=\"Accrued interest|Accrued interest tittle\n            @@product-summary-item-term-deposit-ui.main.section.title\"\n            [active]=\"false\"\n            [productDetailsInfo]=\"{\n            'owners': item.accountHolderNames || ''\n          }\"\n          >\n            <ng-template bbCustomProductItemTermDepositTitle>\n              <ng-container *ngTemplateOutlet=\"productTitle\"></ng-container>\n            </ng-template>\n            <ng-template bbCustomProductItemTermDepositDetailsFormatter>\n              <ng-container *ngTemplateOutlet=\"productBalance; context: { amount: item.principalAmount }\"></ng-container>\n            </ng-template>\n          </bb-product-item-term-deposit-ui>\n        </ng-container>\n\n        <!-- Loans -->\n        <ng-container *ngSwitchCase=\"'loans'\">\n          <bb-product-item-loan-ui\n            [title]=\"hostRef.getAlias(item)\"\n            [active]=\"false\"\n            [productDetailsInfo]=\"{\n            'owners': item.accountHolderNames || ''\n          }\"\n          >\n            <ng-template bbCustomProductItemLoanTitle>\n              <ng-container *ngTemplateOutlet=\"productTitle\"></ng-container>\n            </ng-template>\n            <ng-template bbCustomProductItemLoanDetailsFormatter>\n              <ng-container *ngTemplateOutlet=\"productBalance; context: { amount: item.bookedBalance }\"></ng-container>\n            </ng-template>\n          </bb-product-item-loan-ui>\n        </ng-container>\n\n        <!-- Credit Card -->\n        <ng-container *ngSwitchCase=\"'creditCards'\">\n          <bb-product-item-credit-card-ui\n            [title]=\"hostRef.getAlias(item)\"\n            [mainSectionCurrency]=\"item.currency\"\n            [mainSectionAmount]=\"item.availableBalance\"\n            mainSectionTitle=\"Available Balance\"\n            i18n-mainSectionTitle=\"Available Balance|Main Section tittle\n            @@product-summary-item-credit-card-ui.main.section.title\"\n            [secondarySectionCurrency]=\"item.currency\"\n            [secondarySectionAmount]=\"item.creditLimit\"\n            secondarySectionTitle=\"Credit Limit\"\n            i18n-secondarySectionTitle=\"Credit Limit|Secondary Section tittle\n            @@product-summary-item-credit-card-ui.secondary.section.title\"\n            [active]=\"false\"\n            [productDetailsInfo]=\"{\n            'owners': item.accountHolderNames || ''\n          }\"\n          >\n            <ng-template bbCustomProductItemCreditCardTitle>\n              <ng-container *ngTemplateOutlet=\"productTitle\"></ng-container>\n            </ng-template>\n            <ng-template bbCustomProductItemCreditCardDetailsFormatter>\n              <ng-container *ngTemplateOutlet=\"productBalance; context: { amount: item.bookedBalance }\"></ng-container>\n            </ng-template>\n          </bb-product-item-credit-card-ui>\n        </ng-container>\n\n        <!-- Debit Card -->\n        <ng-container *ngSwitchCase=\"'debitCards'\">\n          <bb-product-item-debit-card-ui\n            [title]=\"hostRef.getAlias(item)\"\n            [active]=\"false\"\n            [productDetailsInfo]=\"{\n            'owners': item.accountHolderNames || ''\n          }\"\n          >\n            <ng-template bbCustomProductItemDebitCardTitle>\n              <ng-container *ngTemplateOutlet=\"productTitle\"></ng-container>\n            </ng-template>\n          </bb-product-item-debit-card-ui>\n        </ng-container>\n\n        <!-- Investment Account -->\n        <ng-container *ngSwitchCase=\"'investmentAccounts'\">\n          <bb-product-item-investment-account-ui\n            [title]=\"hostRef.getAlias(item)\"\n            [active]=\"false\"\n            [productDetailsInfo]=\"{\n            'owners': item.accountHolderNames || ''\n          }\"\n          >\n            <ng-template bbCustomProductItemInvestmentAccountTitle>\n              <ng-container *ngTemplateOutlet=\"productTitle\"></ng-container>\n            </ng-template>\n            <ng-template bbCustomProductItemInvestmentAccountDetailsFormatter>\n              <ng-container *ngTemplateOutlet=\"productBalance; context: { amount: item.currentInvestmentValue }\"></ng-container>\n            </ng-template>\n          </bb-product-item-investment-account-ui>\n        </ng-container>\n\n        <!-- Custom Account -->\n        <ng-container *ngSwitchDefault>\n          <bb-product-item-basic-account-ui\n            [title]=\"hostRef.getAlias(item)\"\n            [active]=\"false\"\n            [productDetailsInfo]=\"{\n            'owners': item.accountHolderNames || ''\n          }\"\n          >\n            <ng-template bbCustomProductItemBasicAccountTitle>\n              <ng-container *ngTemplateOutlet=\"productTitle\"></ng-container>\n            </ng-template>\n            <ng-template bbCustomProductItemBasicAccountDetailsFormatter>\n              <ng-container *ngTemplateOutlet=\"productBalance; context: { amount: item.bookedBalance }\"></ng-container>\n            </ng-template>\n          </bb-product-item-basic-account-ui>\n        </ng-container>\n\n      </ng-container>\n    </ng-template>\n\n    <ng-template #productTitle>\n      <bb-product-item-custom-title-ui\n        [title]=\"hostRef.getAlias(item)\"\n        [titleInteractive]=\"true\"\n        [showLogo]=\"hostRef.showLogo && hostRef.responsiveView == 'mobile'\"\n        [logoSrc]=\"item?.financialInstitution?.logo\"\n        [logoKind]=\"item?.productKindName\"\n        [showExternalTitle]=\"hostRef.hasExternalInfo(item) && hostRef.responsiveView == 'mobile'\"\n        [externalTitle]=\"item?.financialInstitution?.name\"\n        [productNumber]=\"item | bbProductNumberValue\"\n        [productNumberType]=\"item | bbProductNumberType\"\n        [favorite]=\"item?.userPreferences?.favorite\"\n        [state]=\"item?.state?.state\"\n        (selectCustomTitle)=\"hostRef.onSelectProductKind($event)\"\n      ></bb-product-item-custom-title-ui>\n    </ng-template>\n\n    <ng-template #productBalance let-amount=\"amount\">\n      <div class=\"bb-text-align-right\" *ngIf=\"amount | bbIsDefined\">\n        <bb-amount-ui\n          class=\"bb-highlight bb-product-item__amount\"\n          [amount]=\"amount\"\n          [currency]=\"item?.currency\"\n        ></bb-amount-ui>\n        <div *ngIf=\"hostRef.hasExternalInfo(item) && item?.lastSyncDate\" class=\"bb-text-support bb-subtitle\">\n          {{ item?.lastSyncDate | bbDateUpdatedAgo }}\n        </div>\n      </div>\n    </ng-template>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return ProductItemCustomTitleComponent; }), selector: "bb-product-item-custom-title-ui", inputs: ["title", "titleInteractive", "showLogo", "logoSrc", "logoKind", "showExternalTitle", "externalTitle", "favorite", "favoriteIconColor", "productNumber", "productNumberType", "state"], outputs: ["selectCustomTitle"] }, { type: i0__namespace.forwardRef(function () { return ProductSummaryAccountLogoComponent; }), selector: "bb-product-summary-account-logo", inputs: ["logoSrc", "productKindName", "defaultProductKindName", "iconColor", "iconSize", "logoSize"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace$3.ProductItemCurrentAccountComponent; }), selector: "bb-product-item-current-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "secondarySectionCurrency", "secondarySectionAmount", "secondarySectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$3.ProductItemSavingsAccountComponent; }), selector: "bb-product-item-savings-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace$3.ProductItemTermDepositComponent; }), selector: "bb-product-item-term-deposit-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }, { type: i0__namespace.forwardRef(function () { return i6__namespace$2.ProductItemLoanComponent; }), selector: "bb-product-item-loan-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }, { type: i0__namespace.forwardRef(function () { return i7__namespace$3.ProductItemCreditCardComponent; }), selector: "bb-product-item-credit-card-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "secondarySectionCurrency", "secondarySectionAmount", "secondarySectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }, { type: i0__namespace.forwardRef(function () { return i8__namespace.ProductItemDebitCardComponent; }), selector: "bb-product-item-debit-card-ui", inputs: ["title", "productNumber", "productNumberFormat", "highlight", "active", "productDetailsInfo", "favorite", "favoriteIconColor"] }, { type: i0__namespace.forwardRef(function () { return i9__namespace.ProductItemInvestmentAccountComponent; }), selector: "bb-product-item-investment-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }, { type: i0__namespace.forwardRef(function () { return i10__namespace.ProductItemBasicAccountComponent; }), selector: "bb-product-item-basic-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "showCurrencySymbol", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor", "selected", "type", "status", "balanceLabel", "bankBranchCode"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductKindCustomizableDirective; }), selector: "[bbProductKindCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgTemplateOutlet; }), selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace$3.CustomProductItemCurrentAccountTitleDirective; }), selector: "ng-template[bbCustomProductItemCurrentAccountTitle]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace$3.CustomProductItemCurrentAccountDetailsFormatterDirective; }), selector: "ng-template[bbCustomProductItemCurrentAccountDetailsFormatter]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$3.CustomProductItemSavingsAccountTitleDirective; }), selector: "ng-template[bbCustomProductItemSavingsAccountTitle]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$3.CustomProductItemSavingsAccountDetailsFormatterDirective; }), selector: "ng-template[bbCustomProductItemSavingsAccountDetailsFormatter]" }, { type: i0__namespace.forwardRef(function () { return i5__namespace$3.CustomProductItemTermDepositTitleDirective; }), selector: "ng-template[bbCustomProductItemTermDepositTitle]" }, { type: i0__namespace.forwardRef(function () { return i5__namespace$3.CustomProductItemTermDepositDetailsFormatterDirective; }), selector: "ng-template[bbCustomProductItemTermDepositDetailsFormatter]" }, { type: i0__namespace.forwardRef(function () { return i6__namespace$2.CustomProductItemLoanTitleDirective; }), selector: "ng-template[bbCustomProductItemLoanTitle]" }, { type: i0__namespace.forwardRef(function () { return i6__namespace$2.CustomProductItemLoanDetailsFormatterDirective; }), selector: "ng-template[bbCustomProductItemLoanDetailsFormatter]" }, { type: i0__namespace.forwardRef(function () { return i7__namespace$3.CustomProductItemCreditCardTitleDirective; }), selector: "ng-template[bbCustomProductItemCreditCardTitle]" }, { type: i0__namespace.forwardRef(function () { return i7__namespace$3.CustomProductItemCreditCardDetailsFormatterDirective; }), selector: "ng-template[bbCustomProductItemCreditCardDetailsFormatter]" }, { type: i0__namespace.forwardRef(function () { return i8__namespace.CustomProductItemDebitCardTitleDirective; }), selector: "ng-template[bbCustomProductItemDebitCardTitle]" }, { type: i0__namespace.forwardRef(function () { return i9__namespace.CustomProductItemInvestmentAccountTitleDirective; }), selector: "ng-template[bbCustomProductItemInvestmentAccountTitle]" }, { type: i0__namespace.forwardRef(function () { return i9__namespace.CustomProductItemInvestmentAccountDetailsFormatterDirective; }), selector: "ng-template[bbCustomProductItemInvestmentAccountDetailsFormatter]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }, { type: i0__namespace.forwardRef(function () { return i10__namespace.CustomProductItemBasicAccountTitleDirective; }), selector: "ng-template[bbCustomProductItemBasicAccountTitle]" }, { type: i0__namespace.forwardRef(function () { return i10__namespace.CustomProductItemBasicAccountDetailsFormatterDirective; }), selector: "ng-template[bbCustomProductItemBasicAccountDetailsFormatter]" }], pipes: { "bbProductNumberValue": i0__namespace.forwardRef(function () { return i6__namespace.ProductNumberValuePipe; }), "bbProductNumberType": i0__namespace.forwardRef(function () { return i6__namespace.ProductNumberTypePipe; }), "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }), "bbDateUpdatedAgo": i0__namespace.forwardRef(function () { return i6__namespace.DateUpdatedAgoPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-kind',
                        templateUrl: 'product-kind-ui.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { item: [{
                    type: i0.Input
                }], selectProductKind: [{
                    type: i0.Output
                }], showLogo: [{
                    type: i0.Input
                }] } });
    var ProductKindCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductKindCustomizableDirective, _super);
        function ProductKindCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductKindCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductKindCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductKindCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductKindCustomizableDirective, selector: "[bbProductKindCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductKindCustomizable]',
                    }]
            }] });

    var ProductKindCollapsibleComponent = /** @class */ (function () {
        function ProductKindCollapsibleComponent() {
            /**
             * Emits the id of clicked account
             */
            this.selectAccount = new i0.EventEmitter();
            /**
             * Emits selected product
             */
            this.selectProduct = new i0.EventEmitter();
            /**
             * Emits the boolean value to toggle the expand/collapse state of the collapsable
             */
            this.isExpandedChange = new i0.EventEmitter();
            this.hostRef = this;
        }
        ProductKindCollapsibleComponent.prototype.onSelectAccount = function (id) {
            this.selectAccount.emit(id);
        };
        ProductKindCollapsibleComponent.prototype.toggleExpanded = function () {
            this.isExpandedChange.emit(!this.isExpanded);
        };
        return ProductKindCollapsibleComponent;
    }());
    ProductKindCollapsibleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCollapsibleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductKindCollapsibleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductKindCollapsibleComponent, selector: "bb-product-kind-collapsible-ui", inputs: { isExpanded: "isExpanded", showIcons: "showIcons", iconName: "iconName", productKind: "productKind" }, outputs: { selectAccount: "selectAccount", selectProduct: "selectProduct", isExpandedChange: "isExpandedChange" }, ngImport: i0__namespace, template: "<ng-container bbProductKindCollapsibleCustomizable\n              [bbHostRef]=\"hostRef\">\n</ng-container>\n\n<ng-template bbProductKindCollapsibleCustomizable\n             let-hostRef>\n  <div class=\"bb-product-kind card card-body\">\n    <div role=\"button\"\n         tabindex=\"0\"\n         [attr.aria-expanded]=\"!hostRef.isExpanded\"\n         class=\"bb-product-kind__header\"\n         data-role=\"expand-button\"\n         [class.bb-product-kind__header--collapsed]=\"hostRef.isExpanded\"\n         (bbKeyboardClick)=\"hostRef.toggleExpanded()\">\n      <div class=\"bb-product-kind__title\">\n        <bb-icon-ui [attr.data-role]=\"hostRef.iconName\"\n                    *ngIf=\"hostRef.showIcons && hostRef.iconName\"\n                    [name]=\"hostRef.iconName\"\n                    class=\"bb-product-kind__title-icon\">\n        </bb-icon-ui>\n        <bb-product-kind-name\n          [attr.data-role]=\"hostRef.productKind?.products[0]?.productKindUri\"\n          [isPlural]=\"true\"\n          [name]=\"hostRef.productKind?.products[0]?.productKindUri\"></bb-product-kind-name>\n      </div>\n      <div class=\"bb-product-kind__balance\">\n        <ng-container *ngIf=\"hostRef.productKind?.aggregatedBalance\">\n          <span class=\"bb-product-kind__balance-block\">\n            <span class=\"bb-product-kind__balance-title\"\n                  i18n=\"Total label|Label for a product summary widget total label component@@product-summary-total.label.total\">\n              Total\n            </span>\n            <bb-amount-ui data-role=\"current-account-total-amount\"\n                          [currency]=\"hostRef.productKind?.currency\"\n                          [amount]=\"hostRef.productKind?.aggregatedBalance\"></bb-amount-ui>\n          </span>\n        </ng-container>\n        <bb-icon-ui class=\"bb-product-kind__balance-icon \"\n                    name=\"toggle-{{!hostRef.isExpanded ? 'up' : 'down'}}\"></bb-icon-ui>\n      </div>\n    </div>\n\n    <div class=\"bb-product-kind__item-group\"\n         [ngbCollapse]=\"hostRef.isExpanded\">\n      <div class=\"bb-product-kind__item bb-list__item\"\n           *ngFor=\"let item of hostRef.productKind?.products\">\n        <bb-product-kind\n          [item]=\"item\"\n          [showLogo]=\"hostRef.showIcons\"\n          (selectProductKind)=\"hostRef.selectProduct.emit(item); hostRef.onSelectAccount($event.id);\"\n        ></bb-product-kind>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return ProductKindNameComponent; }), selector: "bb-product-kind-name", inputs: ["name", "isPlural"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return ProductKindComponent; }), selector: "bb-product-kind", inputs: ["item", "showLogo"], outputs: ["selectProductKind"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductKindCollapsibleCustomizableDirective; }), selector: "[bbProductKindCollapsibleCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i7__namespace$2.KeyboardClickDirective; }), selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i7__namespace$4.NgbCollapse; }), selector: "[ngbCollapse]", inputs: ["ngbCollapse", "animation"], outputs: ["ngbCollapseChange", "shown", "hidden"], exportAs: ["ngbCollapse"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCollapsibleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-kind-collapsible-ui',
                        templateUrl: './product-kind-collapsible.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { isExpanded: [{
                    type: i0.Input
                }], showIcons: [{
                    type: i0.Input
                }], iconName: [{
                    type: i0.Input
                }], productKind: [{
                    type: i0.Input
                }], selectAccount: [{
                    type: i0.Output
                }], selectProduct: [{
                    type: i0.Output
                }], isExpandedChange: [{
                    type: i0.Output
                }] } });
    var ProductKindCollapsibleCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductKindCollapsibleCustomizableDirective, _super);
        function ProductKindCollapsibleCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductKindCollapsibleCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductKindCollapsibleCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCollapsibleCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductKindCollapsibleCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductKindCollapsibleCustomizableDirective, selector: "[bbProductKindCollapsibleCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCollapsibleCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductKindCollapsibleCustomizable]',
                    }]
            }] });

    var uiModules$4 = [
        i3$3.ProductItemCurrentAccountModule,
        i4$3.ProductItemSavingsAccountModule,
        i5$3.ProductItemTermDepositModule,
        i6$2.ProductItemLoanModule,
        i7$3.ProductItemCreditCardModule,
        i8.ProductItemDebitCardModule,
        i9.ProductItemInvestmentAccountModule,
        i10.ProductItemBasicAccountModule,
        ProductItemCustomModule,
        i7$2.KeyboardClickModule,
        ProductNumberModule,
        ProductSummaryAccountLogoModule,
        i2.AmountModule,
        i6.ValidationModule,
        i6.DatePipeModule,
    ];
    var components$3 = [ProductKindComponent];
    var directives = [ProductKindCustomizableDirective];
    var ProductKindModule = /** @class */ (function () {
        function ProductKindModule() {
        }
        return ProductKindModule;
    }());
    ProductKindModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductKindModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindModule, declarations: [ProductKindComponent, ProductKindCustomizableDirective], imports: [i3.CommonModule, i3$3.ProductItemCurrentAccountModule,
            i4$3.ProductItemSavingsAccountModule,
            i5$3.ProductItemTermDepositModule,
            i6$2.ProductItemLoanModule,
            i7$3.ProductItemCreditCardModule,
            i8.ProductItemDebitCardModule,
            i9.ProductItemInvestmentAccountModule,
            i10.ProductItemBasicAccountModule,
            ProductItemCustomModule,
            i7$2.KeyboardClickModule,
            ProductNumberModule,
            ProductSummaryAccountLogoModule,
            i2.AmountModule,
            i6.ValidationModule,
            i6.DatePipeModule], exports: [ProductKindComponent, ProductKindCustomizableDirective, i3$3.ProductItemCurrentAccountModule,
            i4$3.ProductItemSavingsAccountModule,
            i5$3.ProductItemTermDepositModule,
            i6$2.ProductItemLoanModule,
            i7$3.ProductItemCreditCardModule,
            i8.ProductItemDebitCardModule,
            i9.ProductItemInvestmentAccountModule,
            i10.ProductItemBasicAccountModule,
            ProductItemCustomModule,
            i7$2.KeyboardClickModule,
            ProductNumberModule,
            ProductSummaryAccountLogoModule,
            i2.AmountModule,
            i6.ValidationModule,
            i6.DatePipeModule] });
    ProductKindModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$4)), i3$3.ProductItemCurrentAccountModule,
            i4$3.ProductItemSavingsAccountModule,
            i5$3.ProductItemTermDepositModule,
            i6$2.ProductItemLoanModule,
            i7$3.ProductItemCreditCardModule,
            i8.ProductItemDebitCardModule,
            i9.ProductItemInvestmentAccountModule,
            i10.ProductItemBasicAccountModule,
            ProductItemCustomModule,
            i7$2.KeyboardClickModule,
            ProductNumberModule,
            ProductSummaryAccountLogoModule,
            i2.AmountModule,
            i6.ValidationModule,
            i6.DatePipeModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$4)),
                        declarations: __spreadArray(__spreadArray([], __read(components$3)), __read(directives)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components$3)), __read(directives)), __read(uiModules$4)),
                    }]
            }] });

    var uiModules$3 = [i1.IconModule, i2.AmountModule, i7$2.KeyboardClickModule, i7$4.NgbModule, ProductKindModule, ProductKindNameModule];
    var components$2 = [ProductKindCollapsibleComponent, ProductKindCollapsibleCustomizableDirective];
    var ProductKindCollapsibleModule = /** @class */ (function () {
        function ProductKindCollapsibleModule() {
        }
        return ProductKindCollapsibleModule;
    }());
    ProductKindCollapsibleModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCollapsibleModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductKindCollapsibleModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCollapsibleModule, declarations: [ProductKindCollapsibleComponent, ProductKindCollapsibleCustomizableDirective], imports: [i3.CommonModule, i1.IconModule, i2.AmountModule, i7$2.KeyboardClickModule, i7$4.NgbModule, ProductKindModule, ProductKindNameModule], exports: [ProductKindCollapsibleComponent, ProductKindCollapsibleCustomizableDirective, i1.IconModule, i2.AmountModule, i7$2.KeyboardClickModule, i7$4.NgbModule, ProductKindModule, ProductKindNameModule] });
    ProductKindCollapsibleModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCollapsibleModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$3)), i1.IconModule, i2.AmountModule, i7$2.KeyboardClickModule, i7$4.NgbModule, ProductKindModule, ProductKindNameModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductKindCollapsibleModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$3)),
                        declarations: __spreadArray([], __read(components$2)),
                        exports: __spreadArray(__spreadArray([], __read(components$2)), __read(uiModules$3)),
                    }]
            }] });

    var ProductNeedsAttentionItemComponent = /** @class */ (function (_super) {
        __extends(ProductNeedsAttentionItemComponent, _super);
        function ProductNeedsAttentionItemComponent(datePipe, element, changeDetector) {
            var _this = _super.call(this, element, changeDetector) || this;
            _this.datePipe = datePipe;
            _this.hostRef = _this;
            _this.productKindUri = i6.ProductKindUri;
            /**
             * Emits ProductKind when selected
             */
            _this.selectProductKind = new i0.EventEmitter();
            /**
             * Emits arrangement id when pay now is clicked
             */
            _this.payNowClick = new i0.EventEmitter();
            return _this;
        }
        Object.defineProperty(ProductNeedsAttentionItemComponent.prototype, "statusBadges", {
            /**
             * Localisation for statusBadge
             */
            get: function () {
                var _a, _b, _c, _d, _e, _f;
                return {
                    overdueWithDate: $localize(templateObject_1 || (templateObject_1 = __makeTemplateObject([":Status badge for overdue accounts with date|status badge for overdue accounts with date@@product-summary-ui.product-needs-attention-item.badge.overdueWithDate:", " Payments Missed Since ", ""], [":Status badge for overdue accounts with date|status badge for overdue accounts with date@@product-summary-ui.product-needs-attention-item.badge.overdueWithDate:", " Payments Missed Since ", ""])), (_b = (_a = this.item) === null || _a === void 0 ? void 0 : _a.paymentsPastDue) !== null && _b !== void 0 ? _b : '', this.datePipe.transform((_c = this.item) === null || _c === void 0 ? void 0 : _c.overdueSince, 'MMM d, yyyy')),
                    overdueWithoutDate: $localize(templateObject_2 || (templateObject_2 = __makeTemplateObject([":Status badge for overdue accounts without date|status badge for overdue accounts without date@@product-summary-ui.product-needs-attention-item.badge.overdueWithoutDate:", " Payments Missed"], [":Status badge for overdue accounts without date|status badge for overdue accounts without date@@product-summary-ui.product-needs-attention-item.badge.overdueWithoutDate:", " Payments Missed"])), (_e = (_d = this.item) === null || _d === void 0 ? void 0 : _d.paymentsPastDue) !== null && _e !== void 0 ? _e : ''),
                    overdrawnWithDate: $localize(templateObject_3 || (templateObject_3 = __makeTemplateObject([":Status badge for overdrawn accounts with date|status badge for overdrawn accounts with date@@product-summary-ui.product-needs-attention-item.badge.overdrawnWithDate:Overdrawn Since ", ""], [":Status badge for overdrawn accounts with date|status badge for overdrawn accounts with date@@product-summary-ui.product-needs-attention-item.badge.overdrawnWithDate:Overdrawn Since ", ""])), this.datePipe.transform((_f = this.item) === null || _f === void 0 ? void 0 : _f.overdueSince, 'MMM d, yyyy')),
                    overdrawnWithoutDate: $localize(templateObject_4 || (templateObject_4 = __makeTemplateObject([":Status badge for overdrawn accounts without date|status badge for overdrawn accounts without date@@product-summary-ui.product-needs-attention-item.badge.overdrawnWithoutDate:Overdrawn"], [":Status badge for overdrawn accounts without date|status badge for overdrawn accounts without date@@product-summary-ui.product-needs-attention-item.badge.overdrawnWithoutDate:Overdrawn"]))),
                };
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Emits `selectProductKind` event
         */
        ProductNeedsAttentionItemComponent.prototype.onSelectProductKind = function () {
            this.selectProductKind.emit(this.item);
        };
        return ProductNeedsAttentionItemComponent;
    }(i6.ResponsiveContainerComponent));
    ProductNeedsAttentionItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionItemComponent, deps: [{ token: i1__namespace$2.BbDatePipe }, { token: i0__namespace.ElementRef }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductNeedsAttentionItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductNeedsAttentionItemComponent, selector: "bb-product-needs-attention-item-ui", inputs: { item: "item", showLogo: "showLogo" }, outputs: { selectProductKind: "selectProductKind", payNowClick: "payNowClick" }, usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductNeedsAttentionItemCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"item\"\n></ng-container>\n\n<ng-template\n  bbProductNeedsAttentionItemCustomizable\n  let-hostRef\n>\n  <div class=\"bb-product-needs-attention-item-ui\">\n    <div class=\"bb-product-needs-attention-item-ui__item\" (click)=\"hostRef.onSelectProductKind($event)\">\n      <!-- Account details  -->\n      <div class=\"bb-stack bb-stack--align-top bb-product-needs-attention-item-ui-header\">\n        <div class=\"bb-stack__item\" *ngIf=\"hostRef.showLogo && hostRef.responsiveView !== 'mobile'\">\n          <ng-container *ngTemplateOutlet=\"productLogo\"></ng-container>\n        </div>\n        <div class=\"bb-stack__item bb-stack__item--fill\">\n          <div class=\"bb-stack bb-stack--wrap\">\n            <div class=\"bb-stack__item\">\n              <div\n                role=\"link\"\n                tabindex=\"0\"\n                class=\"bb-text-bold\"\n                data-role=\"overdue-account-name\"\n                (bbKeyboardClick)=\"hostRef.onSelectProductKind($event)\"\n              >\n                {{ hostRef.item?.name }}\n              </div>\n              <div\n                class=\"bb-account-info__product-number\"\n                *ngIf=\"hostRef.item && (hostRef.item.IBAN || hostRef.item.BBAN || hostRef.item.number)\"\n              >\n                <bb-product-number\n                  data-role=\"overdue-account-number\"\n                  [product]=\"hostRef.item\"\n                ></bb-product-number>\n              </div>\n            </div>\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right-lg-down bb-product-item__details\"\n              [ngClass]=\"{\n                'bb-stack__item--push-right': !(hostRef.responsiveView === 'mobile'),\n                'bb-stack__item--push-left': (hostRef.responsiveView === 'mobile')\n              }\"\n            >\n              <bb-amount-ui\n                data-role=\"overdue-account-booked-balance\"\n                class=\"bb-text-bold\"\n                [amount]=\"hostRef.item?.bookedBalance\"\n                [currency]=\"hostRef.item?.currency\"\n                [mapCurrency]=\"true\"\n              >\n              </bb-amount-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Account status -->\n      <div class=\"bb-stack bb-block bb-block--sm bb-block--md-md-down\">\n        <div class=\"bb-stack__item\">\n          <bb-badge-ui\n            *ngIf=\"hostRef.item.productKindUri === hostRef.productKindUri.LOAN || hostRef.item.productKindUri === hostRef.productKindUri.CREDIT_CARD; else overdrawnStatusBadge\"\n            text=\"{{hostRef.item.overdueSince ? hostRef.statusBadges.overdueWithDate : hostRef.statusBadges.overdueWithoutDate}}\"\n            color=\"danger\"\n            data-role=\"overdue-account-status-badge\"\n          ></bb-badge-ui>\n          <ng-template #overdrawnStatusBadge>\n            <bb-badge-ui\n              text=\"{{hostRef.item.overdueSince ? hostRef.statusBadges.overdrawnWithDate : hostRef.statusBadges.overdrawnWithoutDate}}\"\n              color=\"danger\"\n              data-role=\"overdue-account-status-badge\"\n            ></bb-badge-ui>\n          </ng-template>\n        </div>\n        <div class=\"bb-stack__item bb-stack__item--push-right\">\n          <bb-amount-ui\n            class=\"bb-text-bold bb-text-danger\"\n            data-role=\"overdue-account-secondary-balance\"\n            [amount]=\"hostRef.item?.secondaryBalance\"\n            [currency]=\"hostRef.item?.currency\"\n            [mapCurrency]=\"true\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n\n      <!-- Pay now button -->\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"primary\"\n          class=\"bb-button-bar__button\"\n          data-role=\"overdue-account-pay-now-button\"\n          i18n=\"Pay Now button@@product-summary-ui.bb-product-needs-attention-item.button.payNow\"\n          (click)=\"hostRef.payNowClick.emit(hostRef.item.id); $event.stopPropagation()\"\n        >\n          Pay Now\n        </button>\n      </div>\n    </div>\n\n    <ng-template #productLogo>\n      <bb-product-summary-account-logo\n        [logoSrc]=\"hostRef.item?.financialInstitution?.logo\"\n        [productKindName]=\"hostRef.item?.productKindName\"\n        iconColor=\"secondary\"\n        data-role=\"overdue-account-logo\"\n      ></bb-product-summary-account-logo>\n    </ng-template>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$4.BadgeComponent; }), selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i0__namespace.forwardRef(function () { return ProductSummaryAccountLogoComponent; }), selector: "bb-product-summary-account-logo", inputs: ["logoSrc", "productKindName", "defaultProductKindName", "iconColor", "iconSize", "logoSize"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductNeedsAttentionItemCustomizableDirective; }), selector: "[bbProductNeedsAttentionItemCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgTemplateOutlet; }), selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i0__namespace.forwardRef(function () { return i7__namespace$2.KeyboardClickDirective; }), selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-needs-attention-item-ui',
                        templateUrl: './product-needs-attention-item.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.BbDatePipe }, { type: i0__namespace.ElementRef }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { item: [{
                    type: i0.Input
                }], showLogo: [{
                    type: i0.Input
                }], selectProductKind: [{
                    type: i0.Output
                }], payNowClick: [{
                    type: i0.Output
                }] } });
    var ProductNeedsAttentionItemCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductNeedsAttentionItemCustomizableDirective, _super);
        function ProductNeedsAttentionItemCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductNeedsAttentionItemCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductNeedsAttentionItemCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionItemCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductNeedsAttentionItemCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductNeedsAttentionItemCustomizableDirective, selector: "[bbProductNeedsAttentionItemCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionItemCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductNeedsAttentionItemCustomizable]',
                    }]
            }] });
    var templateObject_1, templateObject_2, templateObject_3, templateObject_4;

    var ProductNeedsAttentionComponent = /** @class */ (function () {
        function ProductNeedsAttentionComponent() {
            /**
             * Emits the id of clicked account
             */
            this.selectAccount = new i0.EventEmitter();
            /**
             * Emits selected product
             */
            this.selectProduct = new i0.EventEmitter();
            /**
             * Emits the boolean value to toggle the expand/collapse state of the collapsable
             */
            this.isExpandedChange = new i0.EventEmitter();
            /**
             * Emits arrangement id when pay now is clicked
             */
            this.payNowClick = new i0.EventEmitter();
            this.hostRef = this;
        }
        ProductNeedsAttentionComponent.prototype.onSelectAccount = function (id) {
            this.selectAccount.emit(id);
        };
        ProductNeedsAttentionComponent.prototype.toggleExpanded = function () {
            this.isExpandedChange.emit(!this.isExpanded);
        };
        return ProductNeedsAttentionComponent;
    }());
    ProductNeedsAttentionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductNeedsAttentionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductNeedsAttentionComponent, selector: "bb-product-needs-attention-ui", inputs: { isExpanded: "isExpanded", showIcons: "showIcons", iconName: "iconName", productKind: "productKind" }, outputs: { selectAccount: "selectAccount", selectProduct: "selectProduct", isExpandedChange: "isExpandedChange", payNowClick: "payNowClick" }, ngImport: i0__namespace, template: "<ng-container\n  bbProductNeedsAttentionCustomizable\n  [bbHostRef]=\"hostRef\"\n></ng-container>\n\n<ng-template\n  bbProductNeedsAttentionCustomizable\n  let-hostRef\n>\n  <div class=\"bb-product-needs-attention card card-body\">\n    <div\n      role=\"button\"\n      tabindex=\"0\"\n      [attr.aria-expanded]=\"!hostRef.isExpanded\"\n      class=\"bb-product-needs-attention__header\"\n      data-role=\"needs-attention-expand-button\"\n      [class.bb-product-kind__header--collapsed]=\"hostRef.isExpanded\"\n      (bbKeyboardClick)=\"hostRef.toggleExpanded()\"\n    >\n      <div class=\"bb-product-needs-attention__header-title bb-stack\">\n        <bb-icon-ui\n          name=\"error\"\n          color=\"danger\"\n          data-role=\"needs-attention-title-icon\"\n          class=\"bb-product-needs-attention-title-icon bb-stack__item bb-stack__item--spacing-sm\"\n        ></bb-icon-ui>\n        <span \n          data-role=\"needs-attention-title-text\"\n          class=\"bb-product-needs-attention-title-text bb-stack__item\"\n        >Needs Your Attention</span>\n      </div>\n\n      <div class=\"bb-product-needs-attention__header-icon\">\n        <bb-icon-ui\n          class=\"bb-product-needs-attention-header-icon-chevron\"\n          data-role=\"needs-attention-header-icon-chevron\"\n          name=\"toggle-{{!hostRef.isExpanded ? 'up' : 'down'}}\"\n        ></bb-icon-ui>\n      </div>\n    </div>\n\n    <div\n      class=\"bb-product-needs-attention__item-group\"\n      [ngbCollapse]=\"hostRef.isExpanded\"\n    >\n      <div\n        class=\"bb-product-needs-attention-item bb-list__item\"\n        *ngFor=\"let item of hostRef.productKind?.products\"\n      >\n        <bb-product-needs-attention-item-ui\n          data-role=\"needs-attention-product-item\"\n          [item]=\"item\"\n          [showLogo]=\"hostRef.showIcons\"\n          (selectProductKind)=\"hostRef.selectProduct.emit(item); hostRef.onSelectAccount($event.id);\"\n          (payNowClick)=\"hostRef.payNowClick.emit($event);\"\n        ></bb-product-needs-attention-item-ui>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return ProductNeedsAttentionItemComponent; }), selector: "bb-product-needs-attention-item-ui", inputs: ["item", "showLogo"], outputs: ["selectProductKind", "payNowClick"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductNeedsAttentionCustomizableDirective; }), selector: "[bbProductNeedsAttentionCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i7__namespace$2.KeyboardClickDirective; }), selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i0__namespace.forwardRef(function () { return i7__namespace$4.NgbCollapse; }), selector: "[ngbCollapse]", inputs: ["ngbCollapse", "animation"], outputs: ["ngbCollapseChange", "shown", "hidden"], exportAs: ["ngbCollapse"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-needs-attention-ui',
                        templateUrl: './product-needs-attention.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { isExpanded: [{
                    type: i0.Input
                }], showIcons: [{
                    type: i0.Input
                }], iconName: [{
                    type: i0.Input
                }], productKind: [{
                    type: i0.Input
                }], selectAccount: [{
                    type: i0.Output
                }], selectProduct: [{
                    type: i0.Output
                }], isExpandedChange: [{
                    type: i0.Output
                }], payNowClick: [{
                    type: i0.Output
                }] } });
    var ProductNeedsAttentionCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductNeedsAttentionCustomizableDirective, _super);
        function ProductNeedsAttentionCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductNeedsAttentionCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductNeedsAttentionCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductNeedsAttentionCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductNeedsAttentionCustomizableDirective, selector: "[bbProductNeedsAttentionCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductNeedsAttentionCustomizable]',
                    }]
            }] });

    var uiModules$2 = [
        i1.IconModule,
        i2.AmountModule,
        i7$2.KeyboardClickModule,
        i7$4.NgbModule,
        i4$4.BadgeModule,
        ProductSummaryAccountLogoModule,
        ProductNumberModule,
        paymentCardNumberPipe.PaymentCardNumberModule,
        i4.ButtonModule,
    ];
    var components$1 = [ProductNeedsAttentionItemComponent, ProductNeedsAttentionItemCustomizableDirective];
    var ProductNeedsAttentionItemModule = /** @class */ (function () {
        function ProductNeedsAttentionItemModule() {
        }
        return ProductNeedsAttentionItemModule;
    }());
    ProductNeedsAttentionItemModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionItemModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductNeedsAttentionItemModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionItemModule, declarations: [ProductNeedsAttentionItemComponent, ProductNeedsAttentionItemCustomizableDirective], imports: [i3.CommonModule, i1.IconModule,
            i2.AmountModule,
            i7$2.KeyboardClickModule,
            i7$4.NgbModule,
            i4$4.BadgeModule,
            ProductSummaryAccountLogoModule,
            ProductNumberModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            i4.ButtonModule], exports: [ProductNeedsAttentionItemComponent, ProductNeedsAttentionItemCustomizableDirective, i1.IconModule,
            i2.AmountModule,
            i7$2.KeyboardClickModule,
            i7$4.NgbModule,
            i4$4.BadgeModule,
            ProductSummaryAccountLogoModule,
            ProductNumberModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            i4.ButtonModule] });
    ProductNeedsAttentionItemModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionItemModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$2)), i1.IconModule,
            i2.AmountModule,
            i7$2.KeyboardClickModule,
            i7$4.NgbModule,
            i4$4.BadgeModule,
            ProductSummaryAccountLogoModule,
            ProductNumberModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            i4.ButtonModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionItemModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$2)),
                        declarations: __spreadArray([], __read(components$1)),
                        exports: __spreadArray(__spreadArray([], __read(components$1)), __read(uiModules$2)),
                    }]
            }] });

    var uiModules$1 = [i1.IconModule, i2.AmountModule, i7$2.KeyboardClickModule, i7$4.NgbModule, ProductNeedsAttentionItemModule];
    var components = [ProductNeedsAttentionComponent, ProductNeedsAttentionCustomizableDirective];
    var ProductNeedsAttentionModule = /** @class */ (function () {
        function ProductNeedsAttentionModule() {
        }
        return ProductNeedsAttentionModule;
    }());
    ProductNeedsAttentionModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductNeedsAttentionModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionModule, declarations: [ProductNeedsAttentionComponent, ProductNeedsAttentionCustomizableDirective], imports: [i3.CommonModule, i1.IconModule, i2.AmountModule, i7$2.KeyboardClickModule, i7$4.NgbModule, ProductNeedsAttentionItemModule], exports: [ProductNeedsAttentionComponent, ProductNeedsAttentionCustomizableDirective, i1.IconModule, i2.AmountModule, i7$2.KeyboardClickModule, i7$4.NgbModule, ProductNeedsAttentionItemModule] });
    ProductNeedsAttentionModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionModule, imports: [__spreadArray([i3.CommonModule], __read(uiModules$1)), i1.IconModule, i2.AmountModule, i7$2.KeyboardClickModule, i7$4.NgbModule, ProductNeedsAttentionItemModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductNeedsAttentionModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules$1)),
                        declarations: __spreadArray([], __read(components)),
                        exports: __spreadArray(__spreadArray([], __read(components)), __read(uiModules$1)),
                    }]
            }] });

    var ProductSummaryFooterComponent = /** @class */ (function () {
        function ProductSummaryFooterComponent() {
            /**
             * If `true`, the "First" and "Last" page links are shown.
             */
            this.boundaryLinks = true;
            /**
             * If `true`, the "Next" and "Previous" page links are shown.
             */
            this.directionLinks = false;
            /**
             * Event (Output) that emits when page prop is changed
             */
            this.pageChange = new i0.EventEmitter();
            /**
             * Event (Output) that emits when load-more
             */
            this.loadMore = new i0.EventEmitter();
            this.PaginationType = i6.PaginationType;
        }
        ProductSummaryFooterComponent.prototype.onPageChange = function (page) {
            this.pageChange.emit(page);
        };
        ProductSummaryFooterComponent.prototype.onLoadMore = function () {
            if (!this.loading) {
                this.loadMore.emit();
            }
        };
        return ProductSummaryFooterComponent;
    }());
    ProductSummaryFooterComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryFooterComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductSummaryFooterComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryFooterComponent, selector: "bb-product-summary-footer-ui", inputs: { page: "page", count: "count", itemsPerPage: "itemsPerPage", paginationType: "paginationType", hasMore: "hasMore", loading: "loading", boundaryLinks: "boundaryLinks", directionLinks: "directionLinks", maxNavPages: "maxNavPages" }, outputs: { pageChange: "pageChange", loadMore: "loadMore" }, ngImport: i0__namespace, template: "<div class=\"bb-stack bb-stack--center\">\n  <bb-pagination-ui\n    *ngIf=\"paginationType === PaginationType.PAGINATION && (hasMore || (!!page && page > 0))\"\n    [boundaryLinks]=\"boundaryLinks\"\n    [directionLinks]=\"directionLinks\"\n    [itemsPerPage]=\"itemsPerPage\"\n    [maxNavPages]=\"maxNavPages\"\n    [page]=\"page\"\n    [totalItems]=\"count\"\n    (pageChange)=\"onPageChange($event)\">\n  </bb-pagination-ui>\n\n  <bb-load-button-ui\n    color=\"secondary\"\n    *ngIf=\"paginationType === PaginationType.LOAD_MORE && hasMore\"\n    [size]=\"page\"\n    [totalCount]=\"count\"\n    (paramChange)=\"onLoadMore()\"\n    [isLoading]=\"loading\">\n      <span i18n=\"Load more|Load more button@@accounts-overview-footer.pagination.button.load-more\">\n        Load more\n      </span>\n  </bb-load-button-ui>\n</div>\n", components: [{ type: i1__namespace$6.PaginatorComponent, selector: "bb-pagination-ui", inputs: ["page", "boundaryLinks", "directionLinks", "totalItems", "itemsPerPage", "maxNavPages"], outputs: ["pageChange"] }, { type: i2__namespace$3.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryFooterComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-summary-footer-ui',
                        templateUrl: './product-summary-footer.component.html',
                    }]
            }], propDecorators: { page: [{
                    type: i0.Input
                }], count: [{
                    type: i0.Input
                }], itemsPerPage: [{
                    type: i0.Input
                }], paginationType: [{
                    type: i0.Input
                }], hasMore: [{
                    type: i0.Input
                }], loading: [{
                    type: i0.Input
                }], boundaryLinks: [{
                    type: i0.Input
                }], directionLinks: [{
                    type: i0.Input
                }], maxNavPages: [{
                    type: i0.Input
                }], pageChange: [{
                    type: i0.Output
                }], loadMore: [{
                    type: i0.Output
                }] } });

    var ProductSummaryFooterModule = /** @class */ (function () {
        function ProductSummaryFooterModule() {
        }
        return ProductSummaryFooterModule;
    }());
    ProductSummaryFooterModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryFooterModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductSummaryFooterModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryFooterModule, declarations: [ProductSummaryFooterComponent], imports: [i3.CommonModule, i1$6.PaginationModule, i2$3.LoadButtonModule], exports: [ProductSummaryFooterComponent] });
    ProductSummaryFooterModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryFooterModule, imports: [[i3.CommonModule, i1$6.PaginationModule, i2$3.LoadButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryFooterModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i1$6.PaginationModule, i2$3.LoadButtonModule],
                        declarations: [ProductSummaryFooterComponent],
                        exports: [ProductSummaryFooterComponent],
                    }]
            }] });

    /**
     * Displays a loading indicator while favourite accounts are being loaded
     *
     * @usageNotes
     *
     * ### Display details of an account
     *
     * ```html
     * <bb-product-summary-loading></bb-product-summary-loading>
     * ```
     *
     * @ngModule ProductSummaryUiModule
     */
    var ProductSummaryLoadingComponent = /** @class */ (function () {
        function ProductSummaryLoadingComponent() {
            /**
             * Flag indicating if list is requesting new data.
             *
             * @default false
             */
            this.isLoading = false;
            /**
             * Text to be displayed during loading.
             *
             * @default ''.
             */
            this.text = '';
        }
        return ProductSummaryLoadingComponent;
    }());
    ProductSummaryLoadingComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryLoadingComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductSummaryLoadingComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryLoadingComponent, selector: "bb-product-summary-loading", inputs: { isLoading: "isLoading", text: "text", classes: "classes" }, ngImport: i0__namespace, template: "<ng-container *ngIf=\"!isLoading; else loading\">\n  <ng-content></ng-content>\n</ng-container>\n\n<ng-template #loading>\n  <div [ngClass]=\"classes\">\n    <bb-loading-indicator-ui [text]=\"text\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n", components: [{ type: i6__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryLoadingComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-summary-loading',
                        templateUrl: 'bb-product-summary-loading.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { isLoading: [{
                    type: i0.Input
                }], text: [{
                    type: i0.Input
                }], classes: [{
                    type: i0.Input
                }] } });

    var ProductSummaryLoadingModule = /** @class */ (function () {
        function ProductSummaryLoadingModule() {
        }
        return ProductSummaryLoadingModule;
    }());
    ProductSummaryLoadingModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryLoadingModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductSummaryLoadingModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryLoadingModule, declarations: [ProductSummaryLoadingComponent], imports: [i3.CommonModule, i6$1.LoadingIndicatorModule], exports: [ProductSummaryLoadingComponent] });
    ProductSummaryLoadingModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryLoadingModule, imports: [[i3.CommonModule, i6$1.LoadingIndicatorModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryLoadingModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i6$1.LoadingIndicatorModule],
                        declarations: [ProductSummaryLoadingComponent],
                        exports: [ProductSummaryLoadingComponent],
                    }]
            }] });

    var uiModules = [
        AccountGraphicalHeaderModule,
        AccountHeaderModule,
        AccountPickerModule,
        AccountStateModule,
        AreaChartModule,
        ArrangementStateIndicatorModule,
        ChartLegendModule,
        CreditLimitModule,
        LineChartModule,
        ProductItemCardModule,
        ProductItemCustomModule,
        ProductKindCollapsibleModule,
        ProductKindModule,
        ProductKindNameModule,
        ProductNeedsAttentionModule,
        ProductNeedsAttentionItemModule,
        ProductNumberModule,
        ProductSummaryAccountLogoModule,
        ProductSummaryFooterModule,
        ProductSummaryLoadingModule,
    ];
    var ProductSummaryUiModule = /** @class */ (function () {
        function ProductSummaryUiModule() {
        }
        return ProductSummaryUiModule;
    }());
    ProductSummaryUiModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryUiModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductSummaryUiModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryUiModule, imports: [AccountGraphicalHeaderModule,
            AccountHeaderModule,
            AccountPickerModule,
            AccountStateModule,
            AreaChartModule,
            ArrangementStateIndicatorModule,
            ChartLegendModule,
            CreditLimitModule,
            LineChartModule,
            ProductItemCardModule,
            ProductItemCustomModule,
            ProductKindCollapsibleModule,
            ProductKindModule,
            ProductKindNameModule,
            ProductNeedsAttentionModule,
            ProductNeedsAttentionItemModule,
            ProductNumberModule,
            ProductSummaryAccountLogoModule,
            ProductSummaryFooterModule,
            ProductSummaryLoadingModule], exports: [AccountGraphicalHeaderModule,
            AccountHeaderModule,
            AccountPickerModule,
            AccountStateModule,
            AreaChartModule,
            ArrangementStateIndicatorModule,
            ChartLegendModule,
            CreditLimitModule,
            LineChartModule,
            ProductItemCardModule,
            ProductItemCustomModule,
            ProductKindCollapsibleModule,
            ProductKindModule,
            ProductKindNameModule,
            ProductNeedsAttentionModule,
            ProductNeedsAttentionItemModule,
            ProductNumberModule,
            ProductSummaryAccountLogoModule,
            ProductSummaryFooterModule,
            ProductSummaryLoadingModule] });
    ProductSummaryUiModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryUiModule, imports: [__spreadArray([], __read(uiModules)), AccountGraphicalHeaderModule,
            AccountHeaderModule,
            AccountPickerModule,
            AccountStateModule,
            AreaChartModule,
            ArrangementStateIndicatorModule,
            ChartLegendModule,
            CreditLimitModule,
            LineChartModule,
            ProductItemCardModule,
            ProductItemCustomModule,
            ProductKindCollapsibleModule,
            ProductKindModule,
            ProductKindNameModule,
            ProductNeedsAttentionModule,
            ProductNeedsAttentionItemModule,
            ProductNumberModule,
            ProductSummaryAccountLogoModule,
            ProductSummaryFooterModule,
            ProductSummaryLoadingModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryUiModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([], __read(uiModules)),
                        exports: __spreadArray([], __read(uiModules)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AccountGraphicalHeaderComponent = AccountGraphicalHeaderComponent;
    exports.AccountGraphicalHeaderModule = AccountGraphicalHeaderModule;
    exports.AccountHeaderComponent = AccountHeaderComponent;
    exports.AccountHeaderModule = AccountHeaderModule;
    exports.AccountPickerComponent = AccountPickerComponent;
    exports.AccountPickerModule = AccountPickerModule;
    exports.AccountStateComponent = AccountStateComponent;
    exports.AccountStateCustomizableDirective = AccountStateCustomizableDirective;
    exports.AccountStateModule = AccountStateModule;
    exports.AreaChartComponent = AreaChartComponent;
    exports.AreaChartLegendComponent = AreaChartLegendComponent;
    exports.AreaChartModule = AreaChartModule;
    exports.ArrangementStateIndicatorComponent = ArrangementStateIndicatorComponent;
    exports.ArrangementStateIndicatorCustomizableDirective = ArrangementStateIndicatorCustomizableDirective;
    exports.ArrangementStateIndicatorModule = ArrangementStateIndicatorModule;
    exports.BalanceHistoryAreaChartCustomizableDirective = BalanceHistoryAreaChartCustomizableDirective;
    exports.BalanceHistoryAreaChartLegendCustomizableDirective = BalanceHistoryAreaChartLegendCustomizableDirective;
    exports.BalanceHistoryLineChartCustomizableDirective = BalanceHistoryLineChartCustomizableDirective;
    exports.BalanceHistoryLineChartLegendCustomizableDirective = BalanceHistoryLineChartLegendCustomizableDirective;
    exports.BalanceHistoryLineChartTooltipCustomizableDirective = BalanceHistoryLineChartTooltipCustomizableDirective;
    exports.BalanceHistoryLineChartTooltipSeriesCustomizableDirective = BalanceHistoryLineChartTooltipSeriesCustomizableDirective;
    exports.ChartLegendComponent = ChartLegendComponent;
    exports.ChartLegendCustomizableDirective = ChartLegendCustomizableDirective;
    exports.ChartLegendModule = ChartLegendModule;
    exports.CreditLimitAttributeComponent = CreditLimitAttributeComponent;
    exports.CreditLimitComponent = CreditLimitComponent;
    exports.CreditLimitMinimumPaymentComponent = CreditLimitMinimumPaymentComponent;
    exports.CreditLimitModule = CreditLimitModule;
    exports.CreditLimitStatusBarComponent = CreditLimitStatusBarComponent;
    exports.CustomGroupItemsHeaderDirective = CustomGroupItemsHeaderDirective;
    exports.CustomLoadingTemplateDirective = CustomLoadingTemplateDirective;
    exports.CustomMultiSelectedItemsLabelDirective = CustomMultiSelectedItemsLabelDirective;
    exports.CustomOptionItemDirective = CustomOptionItemDirective;
    exports.CustomOptionsHeaderDirective = CustomOptionsHeaderDirective;
    exports.CustomSingleSelectedItemLabelDirective = CustomSingleSelectedItemLabelDirective;
    exports.LineChartComponent = LineChartComponent;
    exports.LineChartLegendComponent = LineChartLegendComponent;
    exports.LineChartModule = LineChartModule;
    exports.ProductItemCardComponent = ProductItemCardComponent;
    exports.ProductItemCardModule = ProductItemCardModule;
    exports.ProductItemCustomModule = ProductItemCustomModule;
    exports.ProductItemCustomTitleComponent = ProductItemCustomTitleComponent;
    exports.ProductKindCollapsibleComponent = ProductKindCollapsibleComponent;
    exports.ProductKindCollapsibleCustomizableDirective = ProductKindCollapsibleCustomizableDirective;
    exports.ProductKindCollapsibleModule = ProductKindCollapsibleModule;
    exports.ProductKindComponent = ProductKindComponent;
    exports.ProductKindCustomizableDirective = ProductKindCustomizableDirective;
    exports.ProductKindModule = ProductKindModule;
    exports.ProductKindNameComponent = ProductKindNameComponent;
    exports.ProductKindNameCustomizableDirective = ProductKindNameCustomizableDirective;
    exports.ProductKindNameModule = ProductKindNameModule;
    exports.ProductNeedsAttentionComponent = ProductNeedsAttentionComponent;
    exports.ProductNeedsAttentionCustomizableDirective = ProductNeedsAttentionCustomizableDirective;
    exports.ProductNeedsAttentionItemComponent = ProductNeedsAttentionItemComponent;
    exports.ProductNeedsAttentionItemCustomizableDirective = ProductNeedsAttentionItemCustomizableDirective;
    exports.ProductNeedsAttentionItemModule = ProductNeedsAttentionItemModule;
    exports.ProductNeedsAttentionModule = ProductNeedsAttentionModule;
    exports.ProductNumberComponent = ProductNumberComponent;
    exports.ProductNumberCustomizableDirective = ProductNumberCustomizableDirective;
    exports.ProductNumberModule = ProductNumberModule;
    exports.ProductSummaryAccountLogoComponent = ProductSummaryAccountLogoComponent;
    exports.ProductSummaryAccountLogoCustomizableDirective = ProductSummaryAccountLogoCustomizableDirective;
    exports.ProductSummaryAccountLogoModule = ProductSummaryAccountLogoModule;
    exports.ProductSummaryFooterComponent = ProductSummaryFooterComponent;
    exports.ProductSummaryFooterModule = ProductSummaryFooterModule;
    exports.ProductSummaryLoadingComponent = ProductSummaryLoadingComponent;
    exports.ProductSummaryLoadingModule = ProductSummaryLoadingModule;
    exports.ProductSummaryUiModule = ProductSummaryUiModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-product-summary-ui.umd.js.map
