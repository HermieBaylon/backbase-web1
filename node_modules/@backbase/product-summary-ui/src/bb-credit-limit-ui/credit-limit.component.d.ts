import { ChangeDetectorRef } from '@angular/core';
import { ElementRef } from '@angular/core';
import { AccountArrangementItem as ProductType } from '@backbase/data-ang/arrangements';
import { ResponsiveContainerComponent } from '@backbase/product-summary-common-ang';
import { CreditLimitViewMode } from './types';
import * as i0 from "@angular/core";
/**
 * Displays credit limit of the passed product.
 *
 * @usageNotes
 *
 * ### Usage example
 * ```
 * <bb-credit-limit
 *   [product]=product
 *   viewMode='filled'
 * ></bb-credit-limit>
 * ```
 *
 * @NgModule AccountHeaderModule
 */
export declare class CreditLimitComponent extends ResponsiveContainerComponent {
    private readonly el;
    private readonly changeDetector;
    /**
     * AccountArrangementItem to display credit limit
     *
     * @default undefined
     */
    product: ProductType | undefined;
    /**
     * View Mode. Can be "filled" or "emptied"
     *
     * @default "emptied"
     */
    viewMode: CreditLimitViewMode;
    /**
     * Defines whether to show minimum payment information
     *
     * @default "true"
     */
    showMinimumPayment: boolean;
    /**
     * Whether currency should be displayed as a sign.
     *
     * @default true.
     */
    useShortCurrency: boolean;
    /**
     * Localization for account attributes
     */
    readonly localization: {
        owed: string;
        reserved: string;
        overdue: string;
        leftToSpend: string;
        minimumPayment: string;
        of: string;
    };
    /**
     * Constructor
     *
     * @param el
     * @param changeDetector
     */
    constructor(el: ElementRef<HTMLElement>, changeDetector: ChangeDetectorRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CreditLimitComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CreditLimitComponent, "bb-credit-limit", never, { "product": "product"; "viewMode": "viewMode"; "showMinimumPayment": "showMinimumPayment"; "useShortCurrency": "useShortCurrency"; }, {}, never, never>;
}
