import { BbTemplate } from '@backbase/foundation-ang/core';
import { ProductKindNames } from '@backbase/product-summary-common-ang';
import * as i0 from "@angular/core";
/**
 * A component for displaying an account logo.
 * In case the logo is not reachable a related icon is displayed basing on `productKindName`.
 *
 * @usageNotes
 *
 * ### Include this widget in your `AppModule`:
 *
 * ```typescript
 * @NgModule({
 *   imports: [
 *     ProductSummaryAccountLogoModule,
 *   ],
 *   ...
 * })
 * export class AppModule {}
 * ```
 *
 * ### Display details
 *
 * ```html
 * <bb-product-summary-account-logo
 *   [logoSrc]="externalBank.logo"
 *   [productKindName]="item.productKindName"
 *   [defaultProductKindName]="'Current Account'"
 * ></bb-product-summary-account-logo>
 * ```
 *
 * @ngModule ProductSummaryAccountLogoModule
 */
export declare class ProductSummaryAccountLogoComponent {
    readonly hostRef: ProductSummaryAccountLogoComponent;
    /**
     * Source for bank logo.
     * Can be either a URL or base64 image.
     *
     * @default ''
     */
    logoSrc: string;
    /**
     * Product kind name to display a related icon.
     *
     * @default ''
     */
    productKindName: string;
    /**
     * Default product kind name to display icons
     */
    defaultProductKindName: ProductKindNames;
    /**
     * Sets the same icon color for all product kinds
     *
     * @default undefined
     */
    iconColor: string | undefined;
    /**
     * Sets icon size
     *
     * @default 'md'
     */
    iconSize: string;
    /**
     * Sets icon size
     *
     * @default 'md'
     */
    logoSize: string;
    /**
     * Indicates whether during loading of the image any errors appeared
     *
     * @default false
     */
    isImgError: boolean;
    /**
     * Returns a related icon color for the given 'productKindName'
     */
    getProductKindIconColor(): string;
    /**
     * Returns a related icon name for the given 'productKindName'
     */
    getProductKindIconName(): string;
    /**
     * Event handler for the `error` event of `img`
     * sets `isImgError` to `true`
     */
    onImgError(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryAccountLogoComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProductSummaryAccountLogoComponent, "bb-product-summary-account-logo", never, { "logoSrc": "logoSrc"; "productKindName": "productKindName"; "defaultProductKindName": "defaultProductKindName"; "iconColor": "iconColor"; "iconSize": "iconSize"; "logoSize": "logoSize"; }, {}, never, never>;
}
/**
 * This is an extension slot to be used for customizing the logo
 *
 * @usageNotes
 *
 * ### Customize details
 *
 * ```html
 * <ng-template
 *   bbProductSummaryAccountLogoCustomizable
 *   let-hostRef>
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryAccountDetailsWidgetModule
 */
export declare class ProductSummaryAccountLogoCustomizableDirective extends BbTemplate<ProductSummaryAccountLogoComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryAccountLogoCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryAccountLogoCustomizableDirective, "[bbProductSummaryAccountLogoCustomizable]", never, {}, {}, never>;
}
