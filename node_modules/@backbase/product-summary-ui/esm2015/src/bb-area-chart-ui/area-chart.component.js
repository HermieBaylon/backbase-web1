import { Component, Input, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@swimlane/ngx-charts";
import * as i2 from "@backbase/ui-ang/amount";
import * as i3 from "@angular/common";
export class AreaChartComponent {
    constructor() {
        this.hostRef = this;
        /**
         * The chart data (data series)
         */
        this.dataSeries = [];
        /**
         * Show or hide X Axis
         */
        this.showXAxis = true;
        /**
         * Show or hide Y Axis
         */
        this.showYAxis = true;
        /**
         * Fill elements with a gradient instead of a solid color
         */
        this.gradient = false;
        /**
         * Show or hide the legend
         */
        this.showLegend = false;
        /**
         * Show or hide the X axis label
         */
        this.showXAxisLabel = false;
        /**
         * Show or hide the Y axis label
         */
        this.showYAxisLabel = false;
        /**
         * X axis label text
         */
        this.xAxisLabel = '';
        /**
         * Y axis label text
         */
        this.yAxisLabel = '';
        /**
         * Set the minimum value of the y axis to the minimum value in the data, instead of 0
         */
        this.autoScale = false;
        /**
         * Set the base value of chart
         */
        this.baseValue = 0;
        /**
         * Set animations to true
         */
        this.animations = true;
        /**
         * Set custom colors for negative and positive areas
         */
        this.customColors = [];
        /**
         * The currency data
         */
        this.currency = '';
    }
}
AreaChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AreaChartComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AreaChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AreaChartComponent, selector: "bb-area-chart-ui", inputs: { dataSeries: "dataSeries", showXAxis: "showXAxis", showYAxis: "showYAxis", gradient: "gradient", showLegend: "showLegend", showXAxisLabel: "showXAxisLabel", showYAxisLabel: "showYAxisLabel", xAxisLabel: "xAxisLabel", yAxisLabel: "yAxisLabel", autoScale: "autoScale", baseValue: "baseValue", animations: "animations", customColors: "customColors", currency: "currency" }, ngImport: i0, template: "<ng-container\n  bbBalanceHistoryAreaChartCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    baseValue: baseValue,\n    autoScale: autoScale,\n    dataSeries: dataSeries,\n    gradient: gradient,\n    customColors: customColors,\n    xAxis: showXAxis,\n    yAxis: showYAxis,\n    legend: showLegend,\n    showXAxisLabel: showXAxisLabel,\n    showYAxisLabel: showYAxisLabel,\n    xAxisLabel: xAxisLabel,\n    yAxisLabel: yAxisLabel,\n    animations: animations\n  }\">\n</ng-container>\n\n<ng-template\n  bbBalanceHistoryAreaChartCustomizable\n  let-hostRef\n  let-baseValue=\"context.baseValue\"\n  let-autoScale=\"context.autoScale\"\n  let-dataSeries=\"context.dataSeries\"\n  let-gradient=\"context.gradient\"\n  let-customColors=\"context.customColors\"\n  let-xAxis=\"context.xAxis\"\n  let-yAxis=\"context.yAxis\"\n  let-legend=\"context.legend\"\n  let-showXAxisLabel=\"context.showXAxisLabel\"\n  let-showYAxisLabel=\"context.showYAxisLabel\"\n  let-xAxisLabel=\"context.xAxisLabel\"\n  let-yAxisLabel=\"context.yAxisLabel\"\n  let-animations=\"context.animations\">\n  <div class=\"bb-stack bb-product-summary-area-chart\">\n    <ngx-charts-area-chart\n      [baseValue]=\"baseValue\"\n      [autoScale]=\"autoScale\"\n      [results]=\"dataSeries\"\n      [gradient]=\"gradient\"\n      [customColors]=\"customColors\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\"\n      [animations]=\"animations\">\n\n      <ng-template #tooltipTemplate let-model=\"model\">\n          <div class=\"bb-product-summary-area-chart__tooltip\">\n              <h6\n              class=\"bb-product-summary-area-chart__tooltip-heading\"\n              data-role=\"tooltip-header\"\n            >{{model.name | date: 'mediumDate' }}</h6>\n            <hr class=\"bb-product-summary-area-chart__tooltip-divider\"/>\n            <table class=\"bb-product-summary-area-chart__tooltip-table\">\n              <tr data-role=\"tooltip-item\"\n              >\n                <td class=\"bb-product-summary-area-chart__tooltip-label\">\n                  <span\n                    class=\"align-middle\"\n                    i18n=\"Balance History period@@balance-history-area.chart.tooltipItem\"\n                    data-role=\"tooltip-item-name\"\n                  >Balance: </span>\n                </td>\n                <td\n                  class=\"bb-product-summary-area-chart__tooltip-value\"\n                  data-role=\"tooltip-item-value\"\n                >\n                  <bb-amount-ui\n                    [amount]=\"model.value\"\n                    [showPlusSign]=\"true\"\n                    [currency]=\"hostRef.currency\"\n                    [showPercent]=\"false\"\n                    class=\"align-middle\"\n                  ></bb-amount-ui>\n                </td>\n              </tr>\n            </table>\n          </div>\n        </ng-template>\n\n      <ng-template #seriesTooltipTemplate let-model=\"model\">\n        <div class=\"bb-product-summary-area-chart__tooltip\">\n            <h6\n            class=\"bb-product-summary-area-chart__tooltip-heading\"\n            data-role=\"tooltip-header\"\n          >{{model[0]?.name | date: 'mediumDate' }}</h6>\n          <hr class=\"bb-product-summary-area-chart__tooltip-divider\"/>\n          <table class=\"bb-product-summary-area-chart__tooltip-table\">\n            <tr\n              *ngFor=\"let item of model\"\n              data-role=\"tooltip-item\"\n            >\n              <td class=\"bb-product-summary-area-chart__tooltip-label\">\n                <span\n                  class=\"align-middle\"\n                  i18n=\"Balance History period@@balance-history-area..tooltipItem\"\n                  data-role=\"tooltip-item-name\"\n                >Balance: </span>\n              </td>\n              <td\n                class=\"bb-product-summary-area-chart__tooltip-value\"\n                data-role=\"tooltip-item-value\"\n              >\n                <bb-amount-ui\n                  [amount]=\"item.value\"\n                  [showPlusSign]=\"true\"\n                  [currency]=\"hostRef.currency\"\n                  [showPercent]=\"false\"\n                  class=\"align-middle\"\n                ></bb-amount-ui>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </ng-template>\n\n    </ngx-charts-area-chart>\n  </div>\n</ng-template>\n\n", components: [{ type: i0.forwardRef(function () { return i1.AreaChartComponent; }), selector: "ngx-charts-area-chart", inputs: ["legend", "legendTitle", "legendPosition", "xAxis", "yAxis", "baseValue", "autoScale", "timeline", "showGridLines", "curve", "activeEntries", "trimXAxisTicks", "trimYAxisTicks", "rotateXAxisTicks", "maxXAxisTickLength", "maxYAxisTickLength", "roundDomains", "tooltipDisabled", "showXAxisLabel", "showYAxisLabel", "xAxisLabel", "yAxisLabel", "gradient", "schemeType", "xAxisTickFormatting", "yAxisTickFormatting", "xAxisTicks", "yAxisTicks", "xScaleMin", "xScaleMax", "yScaleMin", "yScaleMax"], outputs: ["activate", "deactivate"] }, { type: i0.forwardRef(function () { return i2.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i0.forwardRef(function () { return BalanceHistoryAreaChartCustomizableDirective; }), selector: "[bbBalanceHistoryAreaChartCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "date": i0.forwardRef(function () { return i3.DatePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AreaChartComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-area-chart-ui',
                    templateUrl: 'area-chart.component.html',
                }]
        }], propDecorators: { dataSeries: [{
                type: Input
            }], showXAxis: [{
                type: Input
            }], showYAxis: [{
                type: Input
            }], gradient: [{
                type: Input
            }], showLegend: [{
                type: Input
            }], showXAxisLabel: [{
                type: Input
            }], showYAxisLabel: [{
                type: Input
            }], xAxisLabel: [{
                type: Input
            }], yAxisLabel: [{
                type: Input
            }], autoScale: [{
                type: Input
            }], baseValue: [{
                type: Input
            }], animations: [{
                type: Input
            }], customColors: [{
                type: Input
            }], currency: [{
                type: Input
            }] } });
export class BalanceHistoryAreaChartCustomizableDirective extends BbTemplate {
}
BalanceHistoryAreaChartCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BalanceHistoryAreaChartCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BalanceHistoryAreaChartCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BalanceHistoryAreaChartCustomizableDirective, selector: "[bbBalanceHistoryAreaChartCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BalanceHistoryAreaChartCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbBalanceHistoryAreaChartCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,