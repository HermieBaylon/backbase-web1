import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/loading-indicator";
import * as i2 from "@angular/common";
/**
 * Displays a loading indicator while favourite accounts are being loaded
 *
 * @usageNotes
 *
 * ### Display details of an account
 *
 * ```html
 * <bb-product-summary-loading></bb-product-summary-loading>
 * ```
 *
 * @ngModule ProductSummaryUiModule
 */
export class ProductSummaryLoadingComponent {
    constructor() {
        /**
         * Flag indicating if list is requesting new data.
         *
         * @default false
         */
        this.isLoading = false;
        /**
         * Text to be displayed during loading.
         *
         * @default ''.
         */
        this.text = '';
    }
}
ProductSummaryLoadingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryLoadingComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ProductSummaryLoadingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryLoadingComponent, selector: "bb-product-summary-loading", inputs: { isLoading: "isLoading", text: "text", classes: "classes" }, ngImport: i0, template: "<ng-container *ngIf=\"!isLoading; else loading\">\n  <ng-content></ng-content>\n</ng-container>\n\n<ng-template #loading>\n  <div [ngClass]=\"classes\">\n    <bb-loading-indicator-ui [text]=\"text\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n", components: [{ type: i1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryLoadingComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-product-summary-loading',
                    templateUrl: 'bb-product-summary-loading.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { isLoading: [{
                type: Input
            }], text: [{
                type: Input
            }], classes: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmItcHJvZHVjdC1zdW1tYXJ5LWxvYWRpbmcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9wcm9kdWN0LXN1bW1hcnktdWkvc3JjL2JiLXByb2R1Y3Qtc3VtbWFyeS1sb2FkaW5nL2JiLXByb2R1Y3Qtc3VtbWFyeS1sb2FkaW5nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvcHJvZHVjdC1zdW1tYXJ5LXVpL3NyYy9iYi1wcm9kdWN0LXN1bW1hcnktbG9hZGluZy9iYi1wcm9kdWN0LXN1bW1hcnktbG9hZGluZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUUxRTs7Ozs7Ozs7Ozs7O0dBWUc7QUFNSCxNQUFNLE9BQU8sOEJBQThCO0lBTDNDO1FBTUU7Ozs7V0FJRztRQUNNLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFDM0I7Ozs7V0FJRztRQUNNLFNBQUksR0FBRyxFQUFFLENBQUM7S0FPcEI7OzRIQW5CWSw4QkFBOEI7Z0hBQTlCLDhCQUE4Qix3SUNwQjNDLCtQQVNBOzRGRFdhLDhCQUE4QjtrQkFMMUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0QyxXQUFXLEVBQUUsMkNBQTJDO29CQUN4RCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OEJBT1UsU0FBUztzQkFBakIsS0FBSztnQkFNRyxJQUFJO3NCQUFaLEtBQUs7Z0JBTUcsT0FBTztzQkFBZixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBEaXNwbGF5cyBhIGxvYWRpbmcgaW5kaWNhdG9yIHdoaWxlIGZhdm91cml0ZSBhY2NvdW50cyBhcmUgYmVpbmcgbG9hZGVkXG4gKlxuICogQHVzYWdlTm90ZXNcbiAqXG4gKiAjIyMgRGlzcGxheSBkZXRhaWxzIG9mIGFuIGFjY291bnRcbiAqXG4gKiBgYGBodG1sXG4gKiA8YmItcHJvZHVjdC1zdW1tYXJ5LWxvYWRpbmc+PC9iYi1wcm9kdWN0LXN1bW1hcnktbG9hZGluZz5cbiAqIGBgYFxuICpcbiAqIEBuZ01vZHVsZSBQcm9kdWN0U3VtbWFyeVVpTW9kdWxlXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLXByb2R1Y3Qtc3VtbWFyeS1sb2FkaW5nJyxcbiAgdGVtcGxhdGVVcmw6ICdiYi1wcm9kdWN0LXN1bW1hcnktbG9hZGluZy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBQcm9kdWN0U3VtbWFyeUxvYWRpbmdDb21wb25lbnQge1xuICAvKipcbiAgICogRmxhZyBpbmRpY2F0aW5nIGlmIGxpc3QgaXMgcmVxdWVzdGluZyBuZXcgZGF0YS5cbiAgICpcbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIEBJbnB1dCgpIGlzTG9hZGluZyA9IGZhbHNlO1xuICAvKipcbiAgICogVGV4dCB0byBiZSBkaXNwbGF5ZWQgZHVyaW5nIGxvYWRpbmcuXG4gICAqXG4gICAqIEBkZWZhdWx0ICcnLlxuICAgKi9cbiAgQElucHV0KCkgdGV4dCA9ICcnO1xuICAvKipcbiAgICogQ2xhc3NlcyB0aGF0IHdvdWxkIGJlIGFwcGxpZWQgdG8gbG9hZGluZyBjb250YWluZXJcbiAgICpcbiAgICogQGRlZmF1bHQgdW5kZWZpbmVkXG4gICAqL1xuICBASW5wdXQoKSBjbGFzc2VzOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiIWlzTG9hZGluZzsgZWxzZSBsb2FkaW5nXCI+XG4gIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbjwvbmctY29udGFpbmVyPlxuXG48bmctdGVtcGxhdGUgI2xvYWRpbmc+XG4gIDxkaXYgW25nQ2xhc3NdPVwiY2xhc3Nlc1wiPlxuICAgIDxiYi1sb2FkaW5nLWluZGljYXRvci11aSBbdGV4dF09XCJ0ZXh0XCI+PC9iYi1sb2FkaW5nLWluZGljYXRvci11aT5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuIl19