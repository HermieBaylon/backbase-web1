import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { IconModule } from '@backbase/ui-ang/icon';
import { ArrangementStateIndicatorComponent, ArrangementStateIndicatorCustomizableDirective, } from './arrangement-state-indicator.component';
import * as i0 from "@angular/core";
const uiModules = [IconModule];
const components = [ArrangementStateIndicatorComponent];
const directives = [ArrangementStateIndicatorCustomizableDirective];
export class ArrangementStateIndicatorModule {
}
ArrangementStateIndicatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ArrangementStateIndicatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ArrangementStateIndicatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ArrangementStateIndicatorModule, declarations: [ArrangementStateIndicatorComponent, ArrangementStateIndicatorCustomizableDirective], imports: [CommonModule, IconModule], exports: [ArrangementStateIndicatorComponent, ArrangementStateIndicatorCustomizableDirective, IconModule] });
ArrangementStateIndicatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ArrangementStateIndicatorModule, imports: [[CommonModule, ...uiModules], IconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ArrangementStateIndicatorModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...uiModules],
                    declarations: [...components, ...directives],
                    exports: [...components, ...directives, ...uiModules],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYW5nZW1lbnQtc3RhdGUtaW5kaWNhdG9yLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvcHJvZHVjdC1zdW1tYXJ5LXVpL3NyYy9iYi1hcnJhbmdlbWVudC1zdGF0ZS1pbmRpY2F0b3ItdWkvYXJyYW5nZW1lbnQtc3RhdGUtaW5kaWNhdG9yLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbkQsT0FBTyxFQUNMLGtDQUFrQyxFQUNsQyw4Q0FBOEMsR0FDL0MsTUFBTSx5Q0FBeUMsQ0FBQzs7QUFFakQsTUFBTSxTQUFTLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUUvQixNQUFNLFVBQVUsR0FBRyxDQUFDLGtDQUFrQyxDQUFDLENBQUM7QUFFeEQsTUFBTSxVQUFVLEdBQUcsQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO0FBT3BFLE1BQU0sT0FBTywrQkFBK0I7OzZIQUEvQiwrQkFBK0I7OEhBQS9CLCtCQUErQixpQkFUeEIsa0NBQWtDLEVBRWxDLDhDQUE4QyxhQUd0RCxZQUFZLEVBUEwsVUFBVSxhQUVULGtDQUFrQyxFQUVsQyw4Q0FBOEMsRUFKL0MsVUFBVTs4SEFXaEIsK0JBQStCLFlBSmpDLENBQUMsWUFBWSxFQUFFLEdBQUcsU0FBUyxDQUFDLEVBUHBCLFVBQVU7NEZBV2hCLCtCQUErQjtrQkFMM0MsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxTQUFTLENBQUM7b0JBQ3JDLFlBQVksRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLEdBQUcsVUFBVSxDQUFDO29CQUM1QyxPQUFPLEVBQUUsQ0FBQyxHQUFHLFVBQVUsRUFBRSxHQUFHLFVBQVUsRUFBRSxHQUFHLFNBQVMsQ0FBQztpQkFDdEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEljb25Nb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2ljb24nO1xuaW1wb3J0IHtcbiAgQXJyYW5nZW1lbnRTdGF0ZUluZGljYXRvckNvbXBvbmVudCxcbiAgQXJyYW5nZW1lbnRTdGF0ZUluZGljYXRvckN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbn0gZnJvbSAnLi9hcnJhbmdlbWVudC1zdGF0ZS1pbmRpY2F0b3IuY29tcG9uZW50JztcblxuY29uc3QgdWlNb2R1bGVzID0gW0ljb25Nb2R1bGVdO1xuXG5jb25zdCBjb21wb25lbnRzID0gW0FycmFuZ2VtZW50U3RhdGVJbmRpY2F0b3JDb21wb25lbnRdO1xuXG5jb25zdCBkaXJlY3RpdmVzID0gW0FycmFuZ2VtZW50U3RhdGVJbmRpY2F0b3JDdXN0b21pemFibGVEaXJlY3RpdmVdO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCAuLi51aU1vZHVsZXNdLFxuICBkZWNsYXJhdGlvbnM6IFsuLi5jb21wb25lbnRzLCAuLi5kaXJlY3RpdmVzXSxcbiAgZXhwb3J0czogWy4uLmNvbXBvbmVudHMsIC4uLmRpcmVjdGl2ZXMsIC4uLnVpTW9kdWxlc10sXG59KVxuZXhwb3J0IGNsYXNzIEFycmFuZ2VtZW50U3RhdGVJbmRpY2F0b3JNb2R1bGUge31cbiJdfQ==