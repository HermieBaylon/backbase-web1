import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { ProductKindNames, ProductKindUri } from '@backbase/product-summary-common-ang';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ProductKindNameComponent {
    constructor() {
        this.hostRef = this;
        this.productKindNames = ProductKindNames;
        this.productKindUri = ProductKindUri;
        /**
         * Product kind name for which display a localized version
         *
         * @default ''
         */
        this.name = '';
        /**
         * Defines whether product kind name is plural
         *
         * @default false
         */
        this.isPlural = false;
    }
}
ProductKindNameComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductKindNameComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ProductKindNameComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductKindNameComponent, selector: "bb-product-kind-name", inputs: { name: "name", isPlural: "isPlural" }, ngImport: i0, template: "<ng-container\n  bbProductKindNameCustomizable\n  [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template\n  bbProductKindNameCustomizable\n  let-hostRef>\n  <ng-container [ngSwitch]=\"hostRef.name\">\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.CURRENT_ACCOUNT\">\n      <span i18n=\"Current Account|Product kind name@@product-summary.product-kind-name.current-account\">\n        {+hostRef.isPlural, plural, =0 {Current Account} =1 {Current Accounts}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.SAVINGS_ACCOUNT\">\n      <span i18n=\"Savings Account|Product kind name@@product-summary.product-kind-name.savings-account\">\n        {+hostRef.isPlural, plural, =0 {Savings Account} =1 {Savings Accounts}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.TERM_DEPOSIT\">\n      <span i18n=\"Terms Deposit|Product kind name@@product-summary.product-kind-name.term-deposit\">\n        {+hostRef.isPlural, plural, =0 {Term Deposit} =1 {Term Deposits}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.LOAN\">\n      <span i18n=\"Loan|Product kind name@@product-summary.product-kind-name.loan\">\n        {+hostRef.isPlural, plural, =0 {Loan} =1 {Loans}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.CREDIT_CARD\">\n      <span i18n=\"Credit Card|Product kind name@@product-summary.product-kind-name.credit-card\">\n        {+hostRef.isPlural, plural, =0 {Credit Card} =1 {Credit Cards}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.DEBIT_CARD\">\n      <span i18n=\"Debit card|Product kind name@@product-summary.product-kind-name.debit-card\">\n        {+hostRef.isPlural, plural, =0 {Debit Card} =1 {Debit Cards}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"hostRef.productKindUri.INVESTMENT_ACCOUNT\">\n      <span i18n=\"Investment Account|Product kind name@@product-summary.product-kind-name.investment-account\">\n        {+hostRef.isPlural, plural, =0 {Investment Account} =1 {Investment Accounts}}\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <span>{{hostRef.name}}</span>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n", directives: [{ type: i0.forwardRef(function () { return ProductKindNameCustomizableDirective; }), selector: "[bbProductKindNameCustomizable]" }, { type: i0.forwardRef(function () { return i1.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0.forwardRef(function () { return i1.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0.forwardRef(function () { return i1.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductKindNameComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-product-kind-name',
                    templateUrl: 'bb-product-kind-name.component.html',
                }]
        }], propDecorators: { name: [{
                type: Input
            }], isPlural: [{
                type: Input
            }] } });
/**
 * This is an extension slot to be used for customizing the entire component
 *
 * @usageNotes
 *
 * ### Customize details
 *
 * ```html
 * <ng-template
 *   bbProductKindNameCustomizable
 *   let-hostRef>
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryAccountDetailsWidgetModule
 */
export class ProductKindNameCustomizableDirective extends BbTemplate {
}
ProductKindNameCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductKindNameCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductKindNameCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductKindNameCustomizableDirective, selector: "[bbProductKindNameCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductKindNameCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductKindNameCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmItcHJvZHVjdC1raW5kLW5hbWUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9wcm9kdWN0LXN1bW1hcnktdWkvc3JjL2JiLXByb2R1Y3Qta2luZC1uYW1lL2JiLXByb2R1Y3Qta2luZC1uYW1lLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvcHJvZHVjdC1zdW1tYXJ5LXVpL3NyYy9iYi1wcm9kdWN0LWtpbmQtbmFtZS9iYi1wcm9kdWN0LWtpbmQtbmFtZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzNELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQzs7O0FBTXhGLE1BQU0sT0FBTyx3QkFBd0I7SUFKckM7UUFLVyxZQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ2YscUJBQWdCLEdBQUcsZ0JBQWdCLENBQUM7UUFDcEMsbUJBQWMsR0FBRyxjQUFjLENBQUM7UUFDekM7Ozs7V0FJRztRQUNNLFNBQUksR0FBRyxFQUFFLENBQUM7UUFDbkI7Ozs7V0FJRztRQUNNLGFBQVEsR0FBRyxLQUFLLENBQUM7S0FDM0I7O3NIQWhCWSx3QkFBd0I7MEdBQXhCLHdCQUF3Qiw0R0NSckMsK3lFQWlEQSwwRERIYSxvQ0FBb0M7NEZBdENwQyx3QkFBd0I7a0JBSnBDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsV0FBVyxFQUFFLHFDQUFxQztpQkFDbkQ7OEJBVVUsSUFBSTtzQkFBWixLQUFLO2dCQU1HLFFBQVE7c0JBQWhCLEtBQUs7O0FBR1I7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFJSCxNQUFNLE9BQU8sb0NBQXFDLFNBQVEsVUFBK0M7O2tJQUE1RixvQ0FBb0M7c0hBQXBDLG9DQUFvQzs0RkFBcEMsb0NBQW9DO2tCQUhoRCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxpQ0FBaUM7aUJBQzVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBEaXJlY3RpdmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYlRlbXBsYXRlIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuaW1wb3J0IHsgUHJvZHVjdEtpbmROYW1lcywgUHJvZHVjdEtpbmRVcmkgfSBmcm9tICdAYmFja2Jhc2UvcHJvZHVjdC1zdW1tYXJ5LWNvbW1vbi1hbmcnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1wcm9kdWN0LWtpbmQtbmFtZScsXG4gIHRlbXBsYXRlVXJsOiAnYmItcHJvZHVjdC1raW5kLW5hbWUuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBQcm9kdWN0S2luZE5hbWVDb21wb25lbnQge1xuICByZWFkb25seSBob3N0UmVmID0gdGhpcztcbiAgcmVhZG9ubHkgcHJvZHVjdEtpbmROYW1lcyA9IFByb2R1Y3RLaW5kTmFtZXM7XG4gIHJlYWRvbmx5IHByb2R1Y3RLaW5kVXJpID0gUHJvZHVjdEtpbmRVcmk7XG4gIC8qKlxuICAgKiBQcm9kdWN0IGtpbmQgbmFtZSBmb3Igd2hpY2ggZGlzcGxheSBhIGxvY2FsaXplZCB2ZXJzaW9uXG4gICAqXG4gICAqIEBkZWZhdWx0ICcnXG4gICAqL1xuICBASW5wdXQoKSBuYW1lID0gJyc7XG4gIC8qKlxuICAgKiBEZWZpbmVzIHdoZXRoZXIgcHJvZHVjdCBraW5kIG5hbWUgaXMgcGx1cmFsXG4gICAqXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBASW5wdXQoKSBpc1BsdXJhbCA9IGZhbHNlO1xufVxuXG4vKipcbiAqIFRoaXMgaXMgYW4gZXh0ZW5zaW9uIHNsb3QgdG8gYmUgdXNlZCBmb3IgY3VzdG9taXppbmcgdGhlIGVudGlyZSBjb21wb25lbnRcbiAqXG4gKiBAdXNhZ2VOb3Rlc1xuICpcbiAqICMjIyBDdXN0b21pemUgZGV0YWlsc1xuICpcbiAqIGBgYGh0bWxcbiAqIDxuZy10ZW1wbGF0ZVxuICogICBiYlByb2R1Y3RLaW5kTmFtZUN1c3RvbWl6YWJsZVxuICogICBsZXQtaG9zdFJlZj5cbiAqICAgWW91ciBjdXN0b20gdGVtcGxhdGUgaGVyZVxuICogPC9uZy10ZW1wbGF0ZT5cbiAqIGBgYFxuICpcbiAqIEBOZ01vZHVsZSBQcm9kdWN0U3VtbWFyeUFjY291bnREZXRhaWxzV2lkZ2V0TW9kdWxlXG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYlByb2R1Y3RLaW5kTmFtZUN1c3RvbWl6YWJsZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBQcm9kdWN0S2luZE5hbWVDdXN0b21pemFibGVEaXJlY3RpdmUgZXh0ZW5kcyBCYlRlbXBsYXRlPFByb2R1Y3RLaW5kTmFtZUNvbXBvbmVudCwgdW5kZWZpbmVkPiB7fVxuIiwiPG5nLWNvbnRhaW5lclxuICBiYlByb2R1Y3RLaW5kTmFtZUN1c3RvbWl6YWJsZVxuICBbYmJIb3N0UmVmXT1cImhvc3RSZWZcIj48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlXG4gIGJiUHJvZHVjdEtpbmROYW1lQ3VzdG9taXphYmxlXG4gIGxldC1ob3N0UmVmPlxuICA8bmctY29udGFpbmVyIFtuZ1N3aXRjaF09XCJob3N0UmVmLm5hbWVcIj5cbiAgICA8bmctY29udGFpbmVyICpuZ1N3aXRjaENhc2U9XCJob3N0UmVmLnByb2R1Y3RLaW5kVXJpLkNVUlJFTlRfQUNDT1VOVFwiPlxuICAgICAgPHNwYW4gaTE4bj1cIkN1cnJlbnQgQWNjb3VudHxQcm9kdWN0IGtpbmQgbmFtZUBAcHJvZHVjdC1zdW1tYXJ5LnByb2R1Y3Qta2luZC1uYW1lLmN1cnJlbnQtYWNjb3VudFwiPlxuICAgICAgICB7K2hvc3RSZWYuaXNQbHVyYWwsIHBsdXJhbCwgPTAge0N1cnJlbnQgQWNjb3VudH0gPTEge0N1cnJlbnQgQWNjb3VudHN9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cImhvc3RSZWYucHJvZHVjdEtpbmRVcmkuU0FWSU5HU19BQ0NPVU5UXCI+XG4gICAgICA8c3BhbiBpMThuPVwiU2F2aW5ncyBBY2NvdW50fFByb2R1Y3Qga2luZCBuYW1lQEBwcm9kdWN0LXN1bW1hcnkucHJvZHVjdC1raW5kLW5hbWUuc2F2aW5ncy1hY2NvdW50XCI+XG4gICAgICAgIHsraG9zdFJlZi5pc1BsdXJhbCwgcGx1cmFsLCA9MCB7U2F2aW5ncyBBY2NvdW50fSA9MSB7U2F2aW5ncyBBY2NvdW50c319XG4gICAgICA8L3NwYW4+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiaG9zdFJlZi5wcm9kdWN0S2luZFVyaS5URVJNX0RFUE9TSVRcIj5cbiAgICAgIDxzcGFuIGkxOG49XCJUZXJtcyBEZXBvc2l0fFByb2R1Y3Qga2luZCBuYW1lQEBwcm9kdWN0LXN1bW1hcnkucHJvZHVjdC1raW5kLW5hbWUudGVybS1kZXBvc2l0XCI+XG4gICAgICAgIHsraG9zdFJlZi5pc1BsdXJhbCwgcGx1cmFsLCA9MCB7VGVybSBEZXBvc2l0fSA9MSB7VGVybSBEZXBvc2l0c319XG4gICAgICA8L3NwYW4+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiaG9zdFJlZi5wcm9kdWN0S2luZFVyaS5MT0FOXCI+XG4gICAgICA8c3BhbiBpMThuPVwiTG9hbnxQcm9kdWN0IGtpbmQgbmFtZUBAcHJvZHVjdC1zdW1tYXJ5LnByb2R1Y3Qta2luZC1uYW1lLmxvYW5cIj5cbiAgICAgICAgeytob3N0UmVmLmlzUGx1cmFsLCBwbHVyYWwsID0wIHtMb2FufSA9MSB7TG9hbnN9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cImhvc3RSZWYucHJvZHVjdEtpbmRVcmkuQ1JFRElUX0NBUkRcIj5cbiAgICAgIDxzcGFuIGkxOG49XCJDcmVkaXQgQ2FyZHxQcm9kdWN0IGtpbmQgbmFtZUBAcHJvZHVjdC1zdW1tYXJ5LnByb2R1Y3Qta2luZC1uYW1lLmNyZWRpdC1jYXJkXCI+XG4gICAgICAgIHsraG9zdFJlZi5pc1BsdXJhbCwgcGx1cmFsLCA9MCB7Q3JlZGl0IENhcmR9ID0xIHtDcmVkaXQgQ2FyZHN9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cImhvc3RSZWYucHJvZHVjdEtpbmRVcmkuREVCSVRfQ0FSRFwiPlxuICAgICAgPHNwYW4gaTE4bj1cIkRlYml0IGNhcmR8UHJvZHVjdCBraW5kIG5hbWVAQHByb2R1Y3Qtc3VtbWFyeS5wcm9kdWN0LWtpbmQtbmFtZS5kZWJpdC1jYXJkXCI+XG4gICAgICAgIHsraG9zdFJlZi5pc1BsdXJhbCwgcGx1cmFsLCA9MCB7RGViaXQgQ2FyZH0gPTEge0RlYml0IENhcmRzfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8bmctY29udGFpbmVyICpuZ1N3aXRjaENhc2U9XCJob3N0UmVmLnByb2R1Y3RLaW5kVXJpLklOVkVTVE1FTlRfQUNDT1VOVFwiPlxuICAgICAgPHNwYW4gaTE4bj1cIkludmVzdG1lbnQgQWNjb3VudHxQcm9kdWN0IGtpbmQgbmFtZUBAcHJvZHVjdC1zdW1tYXJ5LnByb2R1Y3Qta2luZC1uYW1lLmludmVzdG1lbnQtYWNjb3VudFwiPlxuICAgICAgICB7K2hvc3RSZWYuaXNQbHVyYWwsIHBsdXJhbCwgPTAge0ludmVzdG1lbnQgQWNjb3VudH0gPTEge0ludmVzdG1lbnQgQWNjb3VudHN9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoRGVmYXVsdD5cbiAgICAgIDxzcGFuPnt7aG9zdFJlZi5uYW1lfX08L3NwYW4+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvbmctY29udGFpbmVyPlxuPC9uZy10ZW1wbGF0ZT5cblxuIl19