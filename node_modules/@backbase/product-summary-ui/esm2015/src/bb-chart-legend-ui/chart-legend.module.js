import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { IconModule } from '@backbase/ui-ang/icon';
import { AmountModule } from '@backbase/ui-ang/amount';
import { ChartLegendCustomizableDirective, ChartLegendComponent } from './chart-legend.component';
import * as i0 from "@angular/core";
const uiModules = [IconModule, AmountModule];
const components = [ChartLegendComponent];
const directives = [ChartLegendCustomizableDirective];
export class ChartLegendModule {
}
ChartLegendModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ChartLegendModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ChartLegendModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ChartLegendModule, declarations: [ChartLegendComponent, ChartLegendCustomizableDirective], imports: [CommonModule, IconModule, AmountModule], exports: [ChartLegendComponent, ChartLegendCustomizableDirective, IconModule, AmountModule] });
ChartLegendModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ChartLegendModule, imports: [[CommonModule, ...uiModules], IconModule, AmountModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ChartLegendModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...uiModules],
                    declarations: [...components, ...directives],
                    exports: [...components, ...directives, ...uiModules],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtbGVnZW5kLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvcHJvZHVjdC1zdW1tYXJ5LXVpL3NyYy9iYi1jaGFydC1sZWdlbmQtdWkvY2hhcnQtbGVnZW5kLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDOztBQUVsRyxNQUFNLFNBQVMsR0FBRyxDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUU3QyxNQUFNLFVBQVUsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFFMUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO0FBT3RELE1BQU0sT0FBTyxpQkFBaUI7OytHQUFqQixpQkFBaUI7Z0hBQWpCLGlCQUFpQixpQkFUVixvQkFBb0IsRUFFcEIsZ0NBQWdDLGFBR3hDLFlBQVksRUFQTCxVQUFVLEVBQUUsWUFBWSxhQUV2QixvQkFBb0IsRUFFcEIsZ0NBQWdDLEVBSmpDLFVBQVUsRUFBRSxZQUFZO2dIQVc5QixpQkFBaUIsWUFKbkIsQ0FBQyxZQUFZLEVBQUUsR0FBRyxTQUFTLENBQUMsRUFQcEIsVUFBVSxFQUFFLFlBQVk7NEZBVzlCLGlCQUFpQjtrQkFMN0IsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxTQUFTLENBQUM7b0JBQ3JDLFlBQVksRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLEdBQUcsVUFBVSxDQUFDO29CQUM1QyxPQUFPLEVBQUUsQ0FBQyxHQUFHLFVBQVUsRUFBRSxHQUFHLFVBQVUsRUFBRSxHQUFHLFNBQVMsQ0FBQztpQkFDdEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEljb25Nb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2ljb24nO1xuaW1wb3J0IHsgQW1vdW50TW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9hbW91bnQnO1xuaW1wb3J0IHsgQ2hhcnRMZWdlbmRDdXN0b21pemFibGVEaXJlY3RpdmUsIENoYXJ0TGVnZW5kQ29tcG9uZW50IH0gZnJvbSAnLi9jaGFydC1sZWdlbmQuY29tcG9uZW50JztcblxuY29uc3QgdWlNb2R1bGVzID0gW0ljb25Nb2R1bGUsIEFtb3VudE1vZHVsZV07XG5cbmNvbnN0IGNvbXBvbmVudHMgPSBbQ2hhcnRMZWdlbmRDb21wb25lbnRdO1xuXG5jb25zdCBkaXJlY3RpdmVzID0gW0NoYXJ0TGVnZW5kQ3VzdG9taXphYmxlRGlyZWN0aXZlXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgLi4udWlNb2R1bGVzXSxcbiAgZGVjbGFyYXRpb25zOiBbLi4uY29tcG9uZW50cywgLi4uZGlyZWN0aXZlc10sXG4gIGV4cG9ydHM6IFsuLi5jb21wb25lbnRzLCAuLi5kaXJlY3RpdmVzLCAuLi51aU1vZHVsZXNdLFxufSlcbmV4cG9ydCBjbGFzcyBDaGFydExlZ2VuZE1vZHVsZSB7fVxuIl19