import { Component, EventEmitter, Input, Output } from '@angular/core';
import { AccountAliasDisplayingLevel, ResponsiveContainerComponent } from '@backbase/product-summary-common-ang';
import * as i0 from "@angular/core";
import * as i1 from "../bb-account-header-ui/bb-account-header.component";
import * as i2 from "../bb-credit-limit-ui/credit-limit.component";
import * as i3 from "@backbase/ui-ang/payment-card";
import * as i4 from "@backbase/ui-ang/icon";
import * as i5 from "../bb-credit-limit-ui/credit-limit-minimum-payment/credit-limit-minimum-payment.component";
import * as i6 from "@angular/common";
import * as i7 from "@backbase/ui-ang/button";
import * as i8 from "@backbase/product-summary-common-ang";
/**
 * Displays account graphical header
 *
 * @usageNotes
 *
 * ### Usage example
 * ```
 * <bb-account-graphical-header
 *   [product]="product"
 *   [canEditAlias]="true"
 *   [useShortCurrency]="false"
 *   [creditLimitViewMode]="emptied"
 *   [canRepay]="true"
 *   [canCashInAdvance]="true"
 *   [creditCardBackgroundType]="black-card"
 *   (aliasUpdated)="onAliasUpdated($event)"
 *   (repayInitiated)="onRepayInitiated()"
 *   (cashAdvanceInitiated)="onCashAdvanceInitiated()"
 * ></bb-account-graphical-header>
 * ```
 *
 * @NgModule AccountGraphicalHeaderModule
 */
export class AccountGraphicalHeaderComponent extends ResponsiveContainerComponent {
    /**
     * @internal
     */
    constructor(el, changeDetector) {
        super(el, changeDetector);
        this.el = el;
        this.changeDetector = changeDetector;
        /**
         * Defines visibility level of the account alis.
         *
         * @default 'USER'
         */
        this.aliasLevel = AccountAliasDisplayingLevel.USER;
        /**
         * Defines if alias can be edited
         *
         * @default false
         */
        this.canEditAlias = false;
        /**
         * Whether currency should be displayed as a sign.
         *
         * @default true
         */
        this.useShortCurrency = true;
        /**
         * Credit Limit view mode. Can be "filled" or "emptied"
         *
         * @default "emptied"
         */
        this.creditLimitViewMode = 'emptied';
        /**
         * Defines if quick repay is allowed
         *
         * @default false
         */
        this.canRepay = false;
        /**
         * Defines if cash in advance is allowed
         *
         * @default false
         */
        this.canCashInAdvance = false;
        /**
         * Credit card background type
         *
         * @default "black-card"
         */
        this.creditCardBackgroundType = 'black-card';
        /**
         * Defines visibility of the logo
         *
         * @default false
         */
        this.isLogoVisible = false;
        /**
         * Event (Output) that emits when item alias is changed
         */
        this.aliasUpdated = new EventEmitter();
        /**
         * Event (Output) that emits when `repay` action initiated
         */
        this.repayInitiated = new EventEmitter();
        /**
         * Event (Output) that emits when `cash advance` action initiated
         */
        this.cashAdvanceInitiated = new EventEmitter();
    }
    /**
     * A configuration for graphical presentation of payment card
     */
    get graphicalCreditCardConfiguration() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        return {
            number: (_b = (_a = this.product) === null || _a === void 0 ? void 0 : _a.number) !== null && _b !== void 0 ? _b : '',
            vendor: (_e = (_d = (_c = this.product) === null || _c === void 0 ? void 0 : _c.cardDetails) === null || _d === void 0 ? void 0 : _d.cardProvider) !== null && _e !== void 0 ? _e : '',
            name: (_g = (_f = this.product) === null || _f === void 0 ? void 0 : _f.accountHolderNames) !== null && _g !== void 0 ? _g : '',
            expirationDate: ((_h = this.product) === null || _h === void 0 ? void 0 : _h.validThru) ? new Date((_j = this.product) === null || _j === void 0 ? void 0 : _j.validThru) : undefined,
            cardName: this.creditCardBackgroundType,
        };
    }
    /**
     * Event handler for the `click` event of `repay-button`;
     * Emits `arrangementId` to `repayInitiated`
     */
    repayButtonClicked() {
        this.repayInitiated.emit(this.getArrangementId());
    }
    /**
     * Event handler for the `click` event of `cash-advance-button`;
     * Emits `arrangementId` to `cashAdvanceInitiated`
     */
    cashAdvanceButtonClicked() {
        this.cashAdvanceInitiated.emit(this.getArrangementId());
    }
    /**
     * Returns arrangement id of the product
     *
     * @private
     */
    getArrangementId() {
        var _a;
        return (_a = this.product) === null || _a === void 0 ? void 0 : _a.id;
    }
}
AccountGraphicalHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountGraphicalHeaderComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
AccountGraphicalHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountGraphicalHeaderComponent, selector: "bb-account-graphical-header", inputs: { product: "product", aliasLevel: "aliasLevel", canEditAlias: "canEditAlias", useShortCurrency: "useShortCurrency", creditLimitViewMode: "creditLimitViewMode", canRepay: "canRepay", canCashInAdvance: "canCashInAdvance", creditCardBackgroundType: "creditCardBackgroundType", isLogoVisible: "isLogoVisible" }, outputs: { aliasUpdated: "aliasUpdated", repayInitiated: "repayInitiated", cashAdvanceInitiated: "cashAdvanceInitiated" }, usesInheritance: true, ngImport: i0, template: "<div\n  class=\"bb-account-graphical-header\"\n  data-role=\"account-graphical-header\"\n>\n  <div class=\"bb-stack bb-stack--align-top\">\n    <div class=\"bb-stack__item bb-stack__item--fill bb-stack__item--spacing-xl\">\n      <div class=\"bb-account-graphical-header__title\"\n           [ngClass]=\"{\n                'bb-stack__item--spacing-none': responsiveView === 'tablet',\n                'bb-block bb-block--xl': !accountHeader.aliasEditMode,\n                'bb-account-graphical-header__title--input-mode': accountHeader.aliasEditMode\n              }\">\n        <bb-account-header\n                data-role=\"bb-account-graphical-header-account-header\"\n                #accountHeader\n                [product]=\"product\"\n                [aliasLevel]=\"aliasLevel\"\n                [canEditAlias]=\"canEditAlias\"\n                [showBalance]=\"false\"\n                [isLogoVisible]=\"isLogoVisible\"\n                (aliasUpdated)=\"aliasUpdated.emit($event)\"\n        ></bb-account-header>\n      </div>\n      <div>\n        <bb-credit-limit\n                data-role=\"bb-account-graphical-header-credit-limit\"\n                [product]=\"product\"\n                [viewMode]=\"creditLimitViewMode\"\n                [showMinimumPayment]=\"responsiveView === 'tablet' || responsiveView === 'mobile'\"\n                [useShortCurrency]=\"useShortCurrency\"\n                [responsiveView]=\"responsiveView\"\n        ></bb-credit-limit>\n      </div>\n    </div>\n\n    <div class=\"bb-stack__item\" *ngIf=\"responsiveView === 'screen'\">\n      <bb-payment-card-ui\n              data-role=\"bb-account-graphical-header-payment-card\"\n              [paymentCard]=\"graphicalCreditCardConfiguration\"\n              [paymentCardNumberFormat]=\"'cardNumber' | bbProductNumberFormat\"\n      ></bb-payment-card-ui>\n    </div>\n  </div>\n\n  <div *ngIf=\"canRepay || canCashInAdvance || (responsiveView === 'screen' && product?.minimumPayment)\"\n       class=\"bb-block bb-block--lg\"></div>\n\n  <div class=\"bb-stack bb-stack--align-bottom\">\n    <div class=\"bb-stack_item bb-stack__item--fill\"  *ngIf=\"canRepay || canCashInAdvance\">\n      <div class=\"bb-stack bb-stack--wrap\"\n           [ngClass]=\"{\n                 'bb-stack--density-none': responsiveView === 'mobile'\n               }\">\n        <button\n                *ngIf=\"canRepay\"\n                class=\"bb-stack__item\"\n                [ngClass]=\"{\n                'bb-stack__item--fill': responsiveView === 'mobile'\n              }\"\n                bbButton\n                type=\"button\"\n                color=\"primary\"\n                data-role=\"account-graphical-header-repay-button\"\n                (click)=\"repayButtonClicked()\"\n        >\n          <bb-icon-ui name=\"call-received\"></bb-icon-ui>\n          <span i18n=\"Repay@@bb-product-summary-account-graphical.repay\">Repay</span>\n        </button>\n        <div *ngIf=\"canRepay && canCashInAdvance\" class=\"bb-stack__break bb-stack__break--down bb-stack__break--spacing-sm\"></div>\n        <button\n                *ngIf=\"canCashInAdvance\"\n                class=\"bb-stack__item\"\n                [ngClass]=\"{\n                'bb-stack__item--fill': responsiveView === 'mobile'\n              }\"\n                bbButton\n                type=\"button\"\n                color=\"secondary\"\n                data-role=\"account-graphical-header-cash-advance-button\"\n                (click)=\"cashAdvanceButtonClicked()\"\n        >\n          <bb-icon-ui name=\"call-made\"></bb-icon-ui>\n          <span i18n=\"Cash advance@@bb-product-summary-account-graphical.cash-advance\">Cash advance</span>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"bb-stack_item bb-stack__item--push-right\"\n         *ngIf=\"responsiveView === 'screen' && product?.minimumPayment\">\n      <bb-credit-limit-minimum-payment\n              data-role=\"bb-account-graphical-header-minimum-payment\"\n              [minimumPayment]=\"product?.minimumPayment | bbAbsoluteValue\"\n              [minimumPaymentDueDate]=\"product?.minimumPaymentDueDate\"\n              [currency]=\"product?.currency\"\n              [useShortCurrency]=\"useShortCurrency\"\n      ></bb-credit-limit-minimum-payment>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.AccountHeaderComponent, selector: "bb-account-header", inputs: ["product", "canEditAlias", "aliasLevel", "showBalance", "isBalanceTypeVisible", "isLogoVisible", "mapCurrency"], outputs: ["aliasUpdated"] }, { type: i2.CreditLimitComponent, selector: "bb-credit-limit", inputs: ["product", "viewMode", "showMinimumPayment", "useShortCurrency"] }, { type: i3.PaymentCardComponent, selector: "bb-payment-card-ui", inputs: ["paymentCard", "paymentCardNumberFormat"] }, { type: i4.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i5.CreditLimitMinimumPaymentComponent, selector: "bb-credit-limit-minimum-payment", inputs: ["minimumPayment", "minimumPaymentDueDate", "currency", "useShortCurrency", "isSmallScreen", "isExtraSmallScreen", "responsiveView"] }], directives: [{ type: i6.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "bbProductNumberFormat": i8.ProductNumberFormatPipe, "bbAbsoluteValue": i8.AbsoluteValuePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountGraphicalHeaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-graphical-header',
                    templateUrl: './account-graphical-header.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { product: [{
                type: Input
            }], aliasLevel: [{
                type: Input
            }], canEditAlias: [{
                type: Input
            }], useShortCurrency: [{
                type: Input
            }], creditLimitViewMode: [{
                type: Input
            }], canRepay: [{
                type: Input
            }], canCashInAdvance: [{
                type: Input
            }], creditCardBackgroundType: [{
                type: Input
            }], isLogoVisible: [{
                type: Input
            }], aliasUpdated: [{
                type: Output
            }], repayInitiated: [{
                type: Output
            }], cashAdvanceInitiated: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,