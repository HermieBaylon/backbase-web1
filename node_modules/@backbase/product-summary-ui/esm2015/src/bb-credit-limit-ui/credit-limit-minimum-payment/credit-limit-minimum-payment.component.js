import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../credit-limit-attribute/credit-limit-attribute.component";
import * as i2 from "@backbase/ui-ang/amount";
import * as i3 from "@angular/common";
import * as i4 from "@backbase/ui-ang/date-pipe";
/**
 * Displays a credit limit minimum payment info
 *
 * @usageNotes
 *
 * ```html
 * <bb-credit-limit-minimum-payment
 *   [minimumPayment]="100"
 *   [minimumPaymentDueDate]="'2021-03-15T16:41:41.090Z'"
 *   [currency]="EUR"
 * ></bb-credit-limit-minimum-payment>
 * ```
 *
 * @ngModule CreditLimitModule
 */
export class CreditLimitMinimumPaymentComponent {
    constructor() {
        /**
         * Whether currency should be displayed as a sign.
         *
         * @default true.
         */
        this.useShortCurrency = true;
        /**
         * Specifies whether to use small screen layout
         *
         * @default false.
         */
        this.isSmallScreen = false;
        /**
         * Specifies whether to use extra small screen layout
         *
         * @default false.
         */
        this.isExtraSmallScreen = false;
        /**
         * Specifies whether container size is small
         */
        this.responsiveView = 'screen';
    }
}
CreditLimitMinimumPaymentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CreditLimitMinimumPaymentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CreditLimitMinimumPaymentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CreditLimitMinimumPaymentComponent, selector: "bb-credit-limit-minimum-payment", inputs: { minimumPayment: "minimumPayment", minimumPaymentDueDate: "minimumPaymentDueDate", currency: "currency", useShortCurrency: "useShortCurrency", isSmallScreen: "isSmallScreen", isExtraSmallScreen: "isExtraSmallScreen", responsiveView: "responsiveView" }, ngImport: i0, template: "<bb-credit-limit-attribute\n  class=\"bb-text-align-right--md-up\"\n  data-role=\"credit-limit-minimum-payment\"\n  title=\"Minimum Payment\"\n  i18n-title=\"Minimum Payment|Credit limit attribute: Minimum Payment@@bb-credit-limit-attribute-minimum-payment\"\n  [responsiveView]=\"responsiveView\"\n>\n  <div class=\"bb-stack bb-stack--wrap bb-stack--density-xs bb-text-semi-bold\"\n       [ngClass]=\"{\n         'bb-subtitle, justify-content-end': responsiveView === 'mobile' || responsiveView === 'tablet'\n       }\"\n       data-role=\"credit-limit-minimum-payment-value\"\n  >\n    <bb-amount-ui\n      class=\"bb-stack__item\"\n      [currency]=\"currency\"\n      [amount]=\"minimumPayment\"\n      [mapCurrency]=\"useShortCurrency\">\n    </bb-amount-ui>\n\n    <ng-container *ngIf=\"minimumPaymentDueDate\">\n      <div class=\"bb-stack__break bb-stack__break--xs-down\"></div>\n      <span class=\"bb-stack__item\"\n            i18n=\"due|Minimum payment: due to date@@bb-credit-limit-attribute-minimum-payment-due\">\n        due\n      </span>\n      <span class=\"bb-stack__item\">\n        {{minimumPaymentDueDate | bbDate}}\n      </span>\n    </ng-container>\n  </div>\n</bb-credit-limit-attribute>\n", components: [{ type: i1.CreditLimitAttributeComponent, selector: "bb-credit-limit-attribute", inputs: ["title", "color", "currency", "amount", "isAmountColored", "useShortCurrency", "isSmallScreen", "isExtraSmallScreen", "responsiveView"] }, { type: i2.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "bbDate": i4.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CreditLimitMinimumPaymentComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-credit-limit-minimum-payment',
                    templateUrl: './credit-limit-minimum-payment.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { minimumPayment: [{
                type: Input
            }], minimumPaymentDueDate: [{
                type: Input
            }], currency: [{
                type: Input
            }], useShortCurrency: [{
                type: Input
            }], isSmallScreen: [{
                type: Input
            }], isExtraSmallScreen: [{
                type: Input
            }], responsiveView: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlZGl0LWxpbWl0LW1pbmltdW0tcGF5bWVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3Byb2R1Y3Qtc3VtbWFyeS11aS9zcmMvYmItY3JlZGl0LWxpbWl0LXVpL2NyZWRpdC1saW1pdC1taW5pbXVtLXBheW1lbnQvY3JlZGl0LWxpbWl0LW1pbmltdW0tcGF5bWVudC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3Byb2R1Y3Qtc3VtbWFyeS11aS9zcmMvYmItY3JlZGl0LWxpbWl0LXVpL2NyZWRpdC1saW1pdC1taW5pbXVtLXBheW1lbnQvY3JlZGl0LWxpbWl0LW1pbmltdW0tcGF5bWVudC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBRzFFOzs7Ozs7Ozs7Ozs7OztHQWNHO0FBTUgsTUFBTSxPQUFPLGtDQUFrQztJQUwvQztRQXdCRTs7OztXQUlHO1FBQ00scUJBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQ2pDOzs7O1dBSUc7UUFDTSxrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUMvQjs7OztXQUlHO1FBQ00sdUJBQWtCLEdBQUcsS0FBSyxDQUFDO1FBQ3BDOztXQUVHO1FBQ00sbUJBQWMsR0FBbUIsUUFBUSxDQUFDO0tBQ3BEOztnSUF6Q1ksa0NBQWtDO29IQUFsQyxrQ0FBa0MsNlVDdkIvQyxtc0NBZ0NBOzRGRFRhLGtDQUFrQztrQkFMOUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUNBQWlDO29CQUMzQyxXQUFXLEVBQUUsK0NBQStDO29CQUM1RCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OEJBT1UsY0FBYztzQkFBdEIsS0FBSztnQkFNRyxxQkFBcUI7c0JBQTdCLEtBQUs7Z0JBTUcsUUFBUTtzQkFBaEIsS0FBSztnQkFNRyxnQkFBZ0I7c0JBQXhCLEtBQUs7Z0JBTUcsYUFBYTtzQkFBckIsS0FBSztnQkFNRyxrQkFBa0I7c0JBQTFCLEtBQUs7Z0JBSUcsY0FBYztzQkFBdEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZXNwb25zaXZlVmlldyB9IGZyb20gJ0BiYWNrYmFzZS9wcm9kdWN0LXN1bW1hcnktY29tbW9uLWFuZyc7XG5cbi8qKlxuICogRGlzcGxheXMgYSBjcmVkaXQgbGltaXQgbWluaW11bSBwYXltZW50IGluZm9cbiAqXG4gKiBAdXNhZ2VOb3Rlc1xuICpcbiAqIGBgYGh0bWxcbiAqIDxiYi1jcmVkaXQtbGltaXQtbWluaW11bS1wYXltZW50XG4gKiAgIFttaW5pbXVtUGF5bWVudF09XCIxMDBcIlxuICogICBbbWluaW11bVBheW1lbnREdWVEYXRlXT1cIicyMDIxLTAzLTE1VDE2OjQxOjQxLjA5MFonXCJcbiAqICAgW2N1cnJlbmN5XT1cIkVVUlwiXG4gKiA+PC9iYi1jcmVkaXQtbGltaXQtbWluaW11bS1wYXltZW50PlxuICogYGBgXG4gKlxuICogQG5nTW9kdWxlIENyZWRpdExpbWl0TW9kdWxlXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWNyZWRpdC1saW1pdC1taW5pbXVtLXBheW1lbnQnLFxuICB0ZW1wbGF0ZVVybDogJy4vY3JlZGl0LWxpbWl0LW1pbmltdW0tcGF5bWVudC5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBDcmVkaXRMaW1pdE1pbmltdW1QYXltZW50Q29tcG9uZW50IHtcbiAgLyoqXG4gICAqIE1pbmltdW0gUGF5bWVudFxuICAgKlxuICAgKiBAZGVmYXVsdCB1bmRlZmluZWQuXG4gICAqL1xuICBASW5wdXQoKSBtaW5pbXVtUGF5bWVudDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogTWluaW11bSBQYXltZW50IGR1ZSBkYXRlXG4gICAqXG4gICAqIEBkZWZhdWx0IHVuZGVmaW5lZC5cbiAgICovXG4gIEBJbnB1dCgpIG1pbmltdW1QYXltZW50RHVlRGF0ZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogQ3VycmVuY3lcbiAgICpcbiAgICogQGRlZmF1bHQgdW5kZWZpbmVkLlxuICAgKi9cbiAgQElucHV0KCkgY3VycmVuY3k6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFdoZXRoZXIgY3VycmVuY3kgc2hvdWxkIGJlIGRpc3BsYXllZCBhcyBhIHNpZ24uXG4gICAqXG4gICAqIEBkZWZhdWx0IHRydWUuXG4gICAqL1xuICBASW5wdXQoKSB1c2VTaG9ydEN1cnJlbmN5ID0gdHJ1ZTtcbiAgLyoqXG4gICAqIFNwZWNpZmllcyB3aGV0aGVyIHRvIHVzZSBzbWFsbCBzY3JlZW4gbGF5b3V0XG4gICAqXG4gICAqIEBkZWZhdWx0IGZhbHNlLlxuICAgKi9cbiAgQElucHV0KCkgaXNTbWFsbFNjcmVlbiA9IGZhbHNlO1xuICAvKipcbiAgICogU3BlY2lmaWVzIHdoZXRoZXIgdG8gdXNlIGV4dHJhIHNtYWxsIHNjcmVlbiBsYXlvdXRcbiAgICpcbiAgICogQGRlZmF1bHQgZmFsc2UuXG4gICAqL1xuICBASW5wdXQoKSBpc0V4dHJhU21hbGxTY3JlZW4gPSBmYWxzZTtcbiAgLyoqXG4gICAqIFNwZWNpZmllcyB3aGV0aGVyIGNvbnRhaW5lciBzaXplIGlzIHNtYWxsXG4gICAqL1xuICBASW5wdXQoKSByZXNwb25zaXZlVmlldzogUmVzcG9uc2l2ZVZpZXcgPSAnc2NyZWVuJztcbn1cbiIsIjxiYi1jcmVkaXQtbGltaXQtYXR0cmlidXRlXG4gIGNsYXNzPVwiYmItdGV4dC1hbGlnbi1yaWdodC0tbWQtdXBcIlxuICBkYXRhLXJvbGU9XCJjcmVkaXQtbGltaXQtbWluaW11bS1wYXltZW50XCJcbiAgdGl0bGU9XCJNaW5pbXVtIFBheW1lbnRcIlxuICBpMThuLXRpdGxlPVwiTWluaW11bSBQYXltZW50fENyZWRpdCBsaW1pdCBhdHRyaWJ1dGU6IE1pbmltdW0gUGF5bWVudEBAYmItY3JlZGl0LWxpbWl0LWF0dHJpYnV0ZS1taW5pbXVtLXBheW1lbnRcIlxuICBbcmVzcG9uc2l2ZVZpZXddPVwicmVzcG9uc2l2ZVZpZXdcIlxuPlxuICA8ZGl2IGNsYXNzPVwiYmItc3RhY2sgYmItc3RhY2stLXdyYXAgYmItc3RhY2stLWRlbnNpdHkteHMgYmItdGV4dC1zZW1pLWJvbGRcIlxuICAgICAgIFtuZ0NsYXNzXT1cIntcbiAgICAgICAgICdiYi1zdWJ0aXRsZSwganVzdGlmeS1jb250ZW50LWVuZCc6IHJlc3BvbnNpdmVWaWV3ID09PSAnbW9iaWxlJyB8fCByZXNwb25zaXZlVmlldyA9PT0gJ3RhYmxldCdcbiAgICAgICB9XCJcbiAgICAgICBkYXRhLXJvbGU9XCJjcmVkaXQtbGltaXQtbWluaW11bS1wYXltZW50LXZhbHVlXCJcbiAgPlxuICAgIDxiYi1hbW91bnQtdWlcbiAgICAgIGNsYXNzPVwiYmItc3RhY2tfX2l0ZW1cIlxuICAgICAgW2N1cnJlbmN5XT1cImN1cnJlbmN5XCJcbiAgICAgIFthbW91bnRdPVwibWluaW11bVBheW1lbnRcIlxuICAgICAgW21hcEN1cnJlbmN5XT1cInVzZVNob3J0Q3VycmVuY3lcIj5cbiAgICA8L2JiLWFtb3VudC11aT5cblxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJtaW5pbXVtUGF5bWVudER1ZURhdGVcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFja19fYnJlYWsgYmItc3RhY2tfX2JyZWFrLS14cy1kb3duXCI+PC9kaXY+XG4gICAgICA8c3BhbiBjbGFzcz1cImJiLXN0YWNrX19pdGVtXCJcbiAgICAgICAgICAgIGkxOG49XCJkdWV8TWluaW11bSBwYXltZW50OiBkdWUgdG8gZGF0ZUBAYmItY3JlZGl0LWxpbWl0LWF0dHJpYnV0ZS1taW5pbXVtLXBheW1lbnQtZHVlXCI+XG4gICAgICAgIGR1ZVxuICAgICAgPC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9XCJiYi1zdGFja19faXRlbVwiPlxuICAgICAgICB7e21pbmltdW1QYXltZW50RHVlRGF0ZSB8IGJiRGF0ZX19XG4gICAgICA8L3NwYW4+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvZGl2PlxuPC9iYi1jcmVkaXQtbGltaXQtYXR0cmlidXRlPlxuIl19