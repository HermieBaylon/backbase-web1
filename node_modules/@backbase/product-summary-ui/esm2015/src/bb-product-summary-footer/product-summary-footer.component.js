import { Component, Input, Output, EventEmitter } from '@angular/core';
import { PaginationType } from '@backbase/product-summary-common-ang';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/pagination";
import * as i2 from "@backbase/ui-ang/load-button";
import * as i3 from "@angular/common";
export class ProductSummaryFooterComponent {
    constructor() {
        /**
         * If `true`, the "First" and "Last" page links are shown.
         */
        this.boundaryLinks = true;
        /**
         * If `true`, the "Next" and "Previous" page links are shown.
         */
        this.directionLinks = false;
        /**
         * Event (Output) that emits when page prop is changed
         */
        this.pageChange = new EventEmitter();
        /**
         * Event (Output) that emits when load-more
         */
        this.loadMore = new EventEmitter();
        this.PaginationType = PaginationType;
    }
    onPageChange(page) {
        this.pageChange.emit(page);
    }
    onLoadMore() {
        if (!this.loading) {
            this.loadMore.emit();
        }
    }
}
ProductSummaryFooterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryFooterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ProductSummaryFooterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryFooterComponent, selector: "bb-product-summary-footer-ui", inputs: { page: "page", count: "count", itemsPerPage: "itemsPerPage", paginationType: "paginationType", hasMore: "hasMore", loading: "loading", boundaryLinks: "boundaryLinks", directionLinks: "directionLinks", maxNavPages: "maxNavPages" }, outputs: { pageChange: "pageChange", loadMore: "loadMore" }, ngImport: i0, template: "<div class=\"bb-stack bb-stack--center\">\n  <bb-pagination-ui\n    *ngIf=\"paginationType === PaginationType.PAGINATION && (hasMore || (!!page && page > 0))\"\n    [boundaryLinks]=\"boundaryLinks\"\n    [directionLinks]=\"directionLinks\"\n    [itemsPerPage]=\"itemsPerPage\"\n    [maxNavPages]=\"maxNavPages\"\n    [page]=\"page\"\n    [totalItems]=\"count\"\n    (pageChange)=\"onPageChange($event)\">\n  </bb-pagination-ui>\n\n  <bb-load-button-ui\n    color=\"secondary\"\n    *ngIf=\"paginationType === PaginationType.LOAD_MORE && hasMore\"\n    [size]=\"page\"\n    [totalCount]=\"count\"\n    (paramChange)=\"onLoadMore()\"\n    [isLoading]=\"loading\">\n      <span i18n=\"Load more|Load more button@@accounts-overview-footer.pagination.button.load-more\">\n        Load more\n      </span>\n  </bb-load-button-ui>\n</div>\n", components: [{ type: i1.PaginatorComponent, selector: "bb-pagination-ui", inputs: ["page", "boundaryLinks", "directionLinks", "totalItems", "itemsPerPage", "maxNavPages"], outputs: ["pageChange"] }, { type: i2.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryFooterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-product-summary-footer-ui',
                    templateUrl: './product-summary-footer.component.html',
                }]
        }], propDecorators: { page: [{
                type: Input
            }], count: [{
                type: Input
            }], itemsPerPage: [{
                type: Input
            }], paginationType: [{
                type: Input
            }], hasMore: [{
                type: Input
            }], loading: [{
                type: Input
            }], boundaryLinks: [{
                type: Input
            }], directionLinks: [{
                type: Input
            }], maxNavPages: [{
                type: Input
            }], pageChange: [{
                type: Output
            }], loadMore: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1zdW1tYXJ5LWZvb3Rlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3Byb2R1Y3Qtc3VtbWFyeS11aS9zcmMvYmItcHJvZHVjdC1zdW1tYXJ5LWZvb3Rlci9wcm9kdWN0LXN1bW1hcnktZm9vdGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvcHJvZHVjdC1zdW1tYXJ5LXVpL3NyYy9iYi1wcm9kdWN0LXN1bW1hcnktZm9vdGVyL3Byb2R1Y3Qtc3VtbWFyeS1mb290ZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0NBQXNDLENBQUM7Ozs7O0FBTXRFLE1BQU0sT0FBTyw2QkFBNkI7SUFKMUM7UUE2QkU7O1dBRUc7UUFDTSxrQkFBYSxHQUFHLElBQUksQ0FBQztRQUM5Qjs7V0FFRztRQUNNLG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBS2hDOztXQUVHO1FBQ08sZUFBVSxHQUF5QixJQUFJLFlBQVksRUFBVSxDQUFDO1FBQ3hFOztXQUVHO1FBQ08sYUFBUSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ2hFLG1CQUFjLEdBQUcsY0FBYyxDQUFDO0tBV2pDO0lBVEMsWUFBWSxDQUFDLElBQVk7UUFDdkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELFVBQVU7UUFDUixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ3RCO0lBQ0gsQ0FBQzs7MkhBdkRVLDZCQUE2QjsrR0FBN0IsNkJBQTZCLGlYQ1AxQyxtMEJBd0JBOzRGRGpCYSw2QkFBNkI7a0JBSnpDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDhCQUE4QjtvQkFDeEMsV0FBVyxFQUFFLHlDQUF5QztpQkFDdkQ7OEJBS1UsSUFBSTtzQkFBWixLQUFLO2dCQUlHLEtBQUs7c0JBQWIsS0FBSztnQkFJRyxZQUFZO3NCQUFwQixLQUFLO2dCQUlHLGNBQWM7c0JBQXRCLEtBQUs7Z0JBSUcsT0FBTztzQkFBZixLQUFLO2dCQUlHLE9BQU87c0JBQWYsS0FBSztnQkFJRyxhQUFhO3NCQUFyQixLQUFLO2dCQUlHLGNBQWM7c0JBQXRCLEtBQUs7Z0JBSUcsV0FBVztzQkFBbkIsS0FBSztnQkFJSSxVQUFVO3NCQUFuQixNQUFNO2dCQUlHLFFBQVE7c0JBQWpCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGFnaW5hdGlvblR5cGUgfSBmcm9tICdAYmFja2Jhc2UvcHJvZHVjdC1zdW1tYXJ5LWNvbW1vbi1hbmcnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1wcm9kdWN0LXN1bW1hcnktZm9vdGVyLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb2R1Y3Qtc3VtbWFyeS1mb290ZXIuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBQcm9kdWN0U3VtbWFyeUZvb3RlckNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBDdXJyZW50IHBhZ2UgaXRlbXMgbnVtYmVyXG4gICAqL1xuICBASW5wdXQoKSBwYWdlOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBUb3RhbCBudW1iZXIgb2YgaXRlbXNcbiAgICovXG4gIEBJbnB1dCgpIGNvdW50OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBOdW1iZXIgb2YgaXRlbXMgcGVyIHBhZ2VcbiAgICovXG4gIEBJbnB1dCgpIGl0ZW1zUGVyUGFnZTogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogVHlwZSBvZiBwYWdpbmF0aW9uIChsb2FkLW1vcmUgb3IgcmVndWxhciBwYWdpbmF0aW9uKVxuICAgKi9cbiAgQElucHV0KCkgcGFnaW5hdGlvblR5cGU6IFBhZ2luYXRpb25UeXBlIHwgc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogVGhlIGZsYWcgdG8gaW5kaWNhdGUgaWYgdGhlcmUgYXJlIG1vcmUgaXRlbXNcbiAgICovXG4gIEBJbnB1dCgpIGhhc01vcmU6IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBUaGUgZmxhZyB0byBpbmRpY2F0ZSBsb2FkaW5nIHN0YXRlXG4gICAqL1xuICBASW5wdXQoKSBsb2FkaW5nOiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgXCJGaXJzdFwiIGFuZCBcIkxhc3RcIiBwYWdlIGxpbmtzIGFyZSBzaG93bi5cbiAgICovXG4gIEBJbnB1dCgpIGJvdW5kYXJ5TGlua3MgPSB0cnVlO1xuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgXCJOZXh0XCIgYW5kIFwiUHJldmlvdXNcIiBwYWdlIGxpbmtzIGFyZSBzaG93bi5cbiAgICovXG4gIEBJbnB1dCgpIGRpcmVjdGlvbkxpbmtzID0gZmFsc2U7XG4gIC8qKlxuICAgKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgcGFnZXMgdG8gZGlzcGxheS5cbiAgICovXG4gIEBJbnB1dCgpIG1heE5hdlBhZ2VzOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBFdmVudCAoT3V0cHV0KSB0aGF0IGVtaXRzIHdoZW4gcGFnZSBwcm9wIGlzIGNoYW5nZWRcbiAgICovXG4gIEBPdXRwdXQoKSBwYWdlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPiA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xuICAvKipcbiAgICogRXZlbnQgKE91dHB1dCkgdGhhdCBlbWl0cyB3aGVuIGxvYWQtbW9yZVxuICAgKi9cbiAgQE91dHB1dCgpIGxvYWRNb3JlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBQYWdpbmF0aW9uVHlwZSA9IFBhZ2luYXRpb25UeXBlO1xuXG4gIG9uUGFnZUNoYW5nZShwYWdlOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLnBhZ2VDaGFuZ2UuZW1pdChwYWdlKTtcbiAgfVxuXG4gIG9uTG9hZE1vcmUoKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmxvYWRpbmcpIHtcbiAgICAgIHRoaXMubG9hZE1vcmUuZW1pdCgpO1xuICAgIH1cbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImJiLXN0YWNrIGJiLXN0YWNrLS1jZW50ZXJcIj5cbiAgPGJiLXBhZ2luYXRpb24tdWlcbiAgICAqbmdJZj1cInBhZ2luYXRpb25UeXBlID09PSBQYWdpbmF0aW9uVHlwZS5QQUdJTkFUSU9OICYmIChoYXNNb3JlIHx8ICghIXBhZ2UgJiYgcGFnZSA+IDApKVwiXG4gICAgW2JvdW5kYXJ5TGlua3NdPVwiYm91bmRhcnlMaW5rc1wiXG4gICAgW2RpcmVjdGlvbkxpbmtzXT1cImRpcmVjdGlvbkxpbmtzXCJcbiAgICBbaXRlbXNQZXJQYWdlXT1cIml0ZW1zUGVyUGFnZVwiXG4gICAgW21heE5hdlBhZ2VzXT1cIm1heE5hdlBhZ2VzXCJcbiAgICBbcGFnZV09XCJwYWdlXCJcbiAgICBbdG90YWxJdGVtc109XCJjb3VudFwiXG4gICAgKHBhZ2VDaGFuZ2UpPVwib25QYWdlQ2hhbmdlKCRldmVudClcIj5cbiAgPC9iYi1wYWdpbmF0aW9uLXVpPlxuXG4gIDxiYi1sb2FkLWJ1dHRvbi11aVxuICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAqbmdJZj1cInBhZ2luYXRpb25UeXBlID09PSBQYWdpbmF0aW9uVHlwZS5MT0FEX01PUkUgJiYgaGFzTW9yZVwiXG4gICAgW3NpemVdPVwicGFnZVwiXG4gICAgW3RvdGFsQ291bnRdPVwiY291bnRcIlxuICAgIChwYXJhbUNoYW5nZSk9XCJvbkxvYWRNb3JlKClcIlxuICAgIFtpc0xvYWRpbmddPVwibG9hZGluZ1wiPlxuICAgICAgPHNwYW4gaTE4bj1cIkxvYWQgbW9yZXxMb2FkIG1vcmUgYnV0dG9uQEBhY2NvdW50cy1vdmVydmlldy1mb290ZXIucGFnaW5hdGlvbi5idXR0b24ubG9hZC1tb3JlXCI+XG4gICAgICAgIExvYWQgbW9yZVxuICAgICAgPC9zcGFuPlxuICA8L2JiLWxvYWQtYnV0dG9uLXVpPlxuPC9kaXY+XG4iXX0=