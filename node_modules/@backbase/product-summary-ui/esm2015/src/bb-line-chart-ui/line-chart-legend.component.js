import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { findByName } from '@backbase/product-summary-common-ang';
import { CustomColorName } from '../types/chart';
import * as i0 from "@angular/core";
import * as i1 from "../bb-chart-legend-ui/chart-legend.component";
export class LineChartLegendComponent {
    constructor() {
        this.hostRef = this;
        /**
         * The chart data (data series) that this component is using to calculate min max
         */
        this.dataSeries = [];
        /**
         * The currency data
         */
        this.currency = '';
        /**
         * Set custom colors for negative and positive areas
         */
        this.customColors = [];
    }
    getMax() {
        return Math.max(...this.values);
    }
    getMin() {
        return Math.min(...this.values);
    }
    getPositiveColor() {
        const customColor = findByName(this.customColors, CustomColorName.POSITIVE);
        return customColor ? customColor.value : '';
    }
    getNegativeColor() {
        const customColor = findByName(this.customColors, CustomColorName.NEGATIVE);
        return customColor ? customColor.value : '';
    }
    get values() {
        const allDateSeries = this.dataSeries.reduce((memo, { series }) => memo.concat(series), []);
        return allDateSeries.map((date) => date.value);
    }
}
LineChartLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LineChartLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
LineChartLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LineChartLegendComponent, selector: "bb-line-chart-legend-ui", inputs: { dataSeries: "dataSeries", currency: "currency", customColors: "customColors" }, ngImport: i0, template: "<ng-container\n  bbBalanceHistoryLineChartLegendCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    dataSeries: dataSeries,\n    customColors: customColors\n  }\"\n></ng-container>\n\n<ng-template\n  bbBalanceHistoryLineChartLegendCustomizable\n  let-hostRef\n  let-dataSeries=\"context.dataSeries\"\n  let-customColors=\"context.customColors\"\n>\n  <bb-chart-legend-ui\n    [currency]=\"hostRef.currency\"\n    [maxValue]=\"hostRef.getMax()\"\n    [minValue]=\"hostRef.getMin()\"\n    [positiveColor]=\"hostRef.getPositiveColor()\"\n    [negativeColor]=\"hostRef.getNegativeColor()\"\n  ></bb-chart-legend-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.ChartLegendComponent; }), selector: "bb-chart-legend-ui", inputs: ["currency", "maxValue", "minValue", "positiveColor", "negativeColor"] }], directives: [{ type: i0.forwardRef(function () { return BalanceHistoryLineChartLegendCustomizableDirective; }), selector: "[bbBalanceHistoryLineChartLegendCustomizable]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LineChartLegendComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-line-chart-legend-ui',
                    templateUrl: 'line-chart-legend.component.html',
                }]
        }], propDecorators: { dataSeries: [{
                type: Input
            }], currency: [{
                type: Input
            }], customColors: [{
                type: Input
            }] } });
export class BalanceHistoryLineChartLegendCustomizableDirective extends BbTemplate {
}
BalanceHistoryLineChartLegendCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BalanceHistoryLineChartLegendCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
BalanceHistoryLineChartLegendCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BalanceHistoryLineChartLegendCustomizableDirective, selector: "[bbBalanceHistoryLineChartLegendCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BalanceHistoryLineChartLegendCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbBalanceHistoryLineChartLegendCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluZS1jaGFydC1sZWdlbmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9wcm9kdWN0LXN1bW1hcnktdWkvc3JjL2JiLWxpbmUtY2hhcnQtdWkvbGluZS1jaGFydC1sZWdlbmQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9wcm9kdWN0LXN1bW1hcnktdWkvc3JjL2JiLWxpbmUtY2hhcnQtdWkvbGluZS1jaGFydC1sZWdlbmQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGVBQWUsRUFBZ0IsTUFBTSxnQkFBZ0IsQ0FBQzs7O0FBTy9ELE1BQU0sT0FBTyx3QkFBd0I7SUFKckM7UUFLVyxZQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3hCOztXQUVHO1FBQ00sZUFBVSxHQUFVLEVBQUUsQ0FBQztRQUNoQzs7V0FFRztRQUNNLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDdkI7O1dBRUc7UUFDTSxpQkFBWSxHQUFtQixFQUFFLENBQUM7S0F3QjVDO0lBdEJDLE1BQU07UUFDSixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELE1BQU07UUFDSixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELGdCQUFnQjtRQUNkLE1BQU0sV0FBVyxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1RSxPQUFPLFdBQVcsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzlDLENBQUM7SUFFRCxnQkFBZ0I7UUFDZCxNQUFNLFdBQVcsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDNUUsT0FBTyxXQUFXLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUM5QyxDQUFDO0lBRUQsSUFBWSxNQUFNO1FBQ2hCLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDNUYsT0FBTyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEQsQ0FBQzs7c0hBcENVLHdCQUF3QjswR0FBeEIsd0JBQXdCLHlKQ1ZyQywyb0JBdUJBLGtRRDZCYSxrREFBa0Q7NEZBMUNsRCx3QkFBd0I7a0JBSnBDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtvQkFDbkMsV0FBVyxFQUFFLGtDQUFrQztpQkFDaEQ7OEJBTVUsVUFBVTtzQkFBbEIsS0FBSztnQkFJRyxRQUFRO3NCQUFoQixLQUFLO2dCQUlHLFlBQVk7c0JBQXBCLEtBQUs7O0FBNkJSLE1BQU0sT0FBTyxrREFBbUQsU0FBUSxVQUd2RTs7Z0pBSFksa0RBQWtEO29JQUFsRCxrREFBa0Q7NEZBQWxELGtEQUFrRDtrQkFIOUQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsK0NBQStDO2lCQUMxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRGlyZWN0aXZlLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmJUZW1wbGF0ZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlJztcbmltcG9ydCB7IGZpbmRCeU5hbWUgfSBmcm9tICdAYmFja2Jhc2UvcHJvZHVjdC1zdW1tYXJ5LWNvbW1vbi1hbmcnO1xuaW1wb3J0IHsgQ3VzdG9tQ29sb3JOYW1lLCBDdXN0b21Db2xvcnMgfSBmcm9tICcuLi90eXBlcy9jaGFydCc7XG5pbXBvcnQgeyBCYWxhbmNlSGlzdG9yeUxpbmVDaGFydExlZ2VuZEN1c3RvbWl6YWJsZURpcmVjdGl2ZUNvbnRleHQgfSBmcm9tICcuL3R5cGVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItbGluZS1jaGFydC1sZWdlbmQtdWknLFxuICB0ZW1wbGF0ZVVybDogJ2xpbmUtY2hhcnQtbGVnZW5kLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgTGluZUNoYXJ0TGVnZW5kQ29tcG9uZW50IHtcbiAgcmVhZG9ubHkgaG9zdFJlZiA9IHRoaXM7XG4gIC8qKlxuICAgKiBUaGUgY2hhcnQgZGF0YSAoZGF0YSBzZXJpZXMpIHRoYXQgdGhpcyBjb21wb25lbnQgaXMgdXNpbmcgdG8gY2FsY3VsYXRlIG1pbiBtYXhcbiAgICovXG4gIEBJbnB1dCgpIGRhdGFTZXJpZXM6IGFueVtdID0gW107XG4gIC8qKlxuICAgKiBUaGUgY3VycmVuY3kgZGF0YVxuICAgKi9cbiAgQElucHV0KCkgY3VycmVuY3kgPSAnJztcbiAgLyoqXG4gICAqIFNldCBjdXN0b20gY29sb3JzIGZvciBuZWdhdGl2ZSBhbmQgcG9zaXRpdmUgYXJlYXNcbiAgICovXG4gIEBJbnB1dCgpIGN1c3RvbUNvbG9yczogQ3VzdG9tQ29sb3JzW10gPSBbXTtcblxuICBnZXRNYXgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gTWF0aC5tYXgoLi4udGhpcy52YWx1ZXMpO1xuICB9XG5cbiAgZ2V0TWluKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIE1hdGgubWluKC4uLnRoaXMudmFsdWVzKTtcbiAgfVxuXG4gIGdldFBvc2l0aXZlQ29sb3IoKTogc3RyaW5nIHtcbiAgICBjb25zdCBjdXN0b21Db2xvciA9IGZpbmRCeU5hbWUodGhpcy5jdXN0b21Db2xvcnMsIEN1c3RvbUNvbG9yTmFtZS5QT1NJVElWRSk7XG4gICAgcmV0dXJuIGN1c3RvbUNvbG9yID8gY3VzdG9tQ29sb3IudmFsdWUgOiAnJztcbiAgfVxuXG4gIGdldE5lZ2F0aXZlQ29sb3IoKTogc3RyaW5nIHtcbiAgICBjb25zdCBjdXN0b21Db2xvciA9IGZpbmRCeU5hbWUodGhpcy5jdXN0b21Db2xvcnMsIEN1c3RvbUNvbG9yTmFtZS5ORUdBVElWRSk7XG4gICAgcmV0dXJuIGN1c3RvbUNvbG9yID8gY3VzdG9tQ29sb3IudmFsdWUgOiAnJztcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IHZhbHVlcygpOiBudW1iZXJbXSB7XG4gICAgY29uc3QgYWxsRGF0ZVNlcmllcyA9IHRoaXMuZGF0YVNlcmllcy5yZWR1Y2UoKG1lbW8sIHsgc2VyaWVzIH0pID0+IG1lbW8uY29uY2F0KHNlcmllcyksIFtdKTtcbiAgICByZXR1cm4gYWxsRGF0ZVNlcmllcy5tYXAoKGRhdGU6IGFueSkgPT4gZGF0ZS52YWx1ZSk7XG4gIH1cbn1cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2JiQmFsYW5jZUhpc3RvcnlMaW5lQ2hhcnRMZWdlbmRDdXN0b21pemFibGVdJyxcbn0pXG5leHBvcnQgY2xhc3MgQmFsYW5jZUhpc3RvcnlMaW5lQ2hhcnRMZWdlbmRDdXN0b21pemFibGVEaXJlY3RpdmUgZXh0ZW5kcyBCYlRlbXBsYXRlPFxuICBMaW5lQ2hhcnRMZWdlbmRDb21wb25lbnQsXG4gIEJhbGFuY2VIaXN0b3J5TGluZUNoYXJ0TGVnZW5kQ3VzdG9taXphYmxlRGlyZWN0aXZlQ29udGV4dFxuPiB7fVxuIiwiPG5nLWNvbnRhaW5lclxuICBiYkJhbGFuY2VIaXN0b3J5TGluZUNoYXJ0TGVnZW5kQ3VzdG9taXphYmxlXG4gIFtiYkhvc3RSZWZdPVwiaG9zdFJlZlwiXG4gIFtiYlRlbXBsYXRlQ29udGV4dF09XCJ7XG4gICAgZGF0YVNlcmllczogZGF0YVNlcmllcyxcbiAgICBjdXN0b21Db2xvcnM6IGN1c3RvbUNvbG9yc1xuICB9XCJcbj48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlXG4gIGJiQmFsYW5jZUhpc3RvcnlMaW5lQ2hhcnRMZWdlbmRDdXN0b21pemFibGVcbiAgbGV0LWhvc3RSZWZcbiAgbGV0LWRhdGFTZXJpZXM9XCJjb250ZXh0LmRhdGFTZXJpZXNcIlxuICBsZXQtY3VzdG9tQ29sb3JzPVwiY29udGV4dC5jdXN0b21Db2xvcnNcIlxuPlxuICA8YmItY2hhcnQtbGVnZW5kLXVpXG4gICAgW2N1cnJlbmN5XT1cImhvc3RSZWYuY3VycmVuY3lcIlxuICAgIFttYXhWYWx1ZV09XCJob3N0UmVmLmdldE1heCgpXCJcbiAgICBbbWluVmFsdWVdPVwiaG9zdFJlZi5nZXRNaW4oKVwiXG4gICAgW3Bvc2l0aXZlQ29sb3JdPVwiaG9zdFJlZi5nZXRQb3NpdGl2ZUNvbG9yKClcIlxuICAgIFtuZWdhdGl2ZUNvbG9yXT1cImhvc3RSZWYuZ2V0TmVnYXRpdmVDb2xvcigpXCJcbiAgPjwvYmItY2hhcnQtbGVnZW5kLXVpPlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==