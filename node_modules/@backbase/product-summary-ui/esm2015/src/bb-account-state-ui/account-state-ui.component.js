import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/alert";
import * as i2 from "@angular/common";
export class AccountStateComponent {
    constructor() {
        this.hostRef = this;
        /**
         * Product summary account state indicator display flag.
         */
        this.isDisplayingAlert = true;
        this.isAlertCLosed = false;
    }
    /**
     * @internal
     */
    ngOnChanges() {
        this.isAlertCLosed = false;
    }
    closeAlert() {
        this.isAlertCLosed = true;
    }
}
AccountStateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountStateComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AccountStateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountStateComponent, selector: "bb-account-state-ui", inputs: { isDisplayingAlert: "isDisplayingAlert", item: "item" }, usesOnChanges: true, ngImport: i0, template: "<ng-container\nbbAccountStateCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{item:item}\">\n</ng-container>\n\n<ng-template bbAccountStateCustomizable\n  let-hostRef\n  let-item=\"context\">\n  <div class=\"row mt-3\" *ngIf=\"hostRef.isDisplayingAlert && !hostRef.isAlertCLosed\">\n    <div class=\"col-12\">\n      <bb-alert-ui\n        data-role=\"alert-danger\"\n        [title]=\"''\"\n        [modifier]=\"hostRef.item.severity\"\n        [dismissible]=\"true\"\n        (close)=\"hostRef.closeAlert()\">\n          <ng-content></ng-content>\n      </bb-alert-ui>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.AlertComponent; }), selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }], directives: [{ type: i0.forwardRef(function () { return AccountStateCustomizableDirective; }), selector: "[bbAccountStateCustomizable]" }, { type: i0.forwardRef(function () { return i2.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountStateComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-state-ui',
                    templateUrl: 'account-state-ui.component.html',
                }]
        }], propDecorators: { isDisplayingAlert: [{
                type: Input
            }], item: [{
                type: Input
            }] } });
export class AccountStateCustomizableDirective extends BbTemplate {
}
AccountStateCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountStateCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
AccountStateCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: AccountStateCustomizableDirective, selector: "[bbAccountStateCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountStateCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbAccountStateCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC1zdGF0ZS11aS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3Byb2R1Y3Qtc3VtbWFyeS11aS9zcmMvYmItYWNjb3VudC1zdGF0ZS11aS9hY2NvdW50LXN0YXRlLXVpLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvcHJvZHVjdC1zdW1tYXJ5LXVpL3NyYy9iYi1hY2NvdW50LXN0YXRlLXVpL2FjY291bnQtc3RhdGUtdWkuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7OztBQU8zRCxNQUFNLE9BQU8scUJBQXFCO0lBSmxDO1FBS1csWUFBTyxHQUFHLElBQUksQ0FBQztRQUV4Qjs7V0FFRztRQUNNLHNCQUFpQixHQUFHLElBQUksQ0FBQztRQU1sQyxrQkFBYSxHQUFHLEtBQUssQ0FBQztLQVl2QjtJQVZDOztPQUVHO0lBQ0gsV0FBVztRQUNULElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7SUFDNUIsQ0FBQzs7bUhBdkJVLHFCQUFxQjt1R0FBckIscUJBQXFCLGtKQ1JsQyxvbkJBc0JBLGtQRGVhLGlDQUFpQzs0RkE3QmpDLHFCQUFxQjtrQkFKakMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUscUJBQXFCO29CQUMvQixXQUFXLEVBQUUsaUNBQWlDO2lCQUMvQzs4QkFPVSxpQkFBaUI7c0JBQXpCLEtBQUs7Z0JBSUcsSUFBSTtzQkFBWixLQUFLOztBQW1CUixNQUFNLE9BQU8saUNBQWtDLFNBQVEsVUFBNEM7OytIQUF0RixpQ0FBaUM7bUhBQWpDLGlDQUFpQzs0RkFBakMsaUNBQWlDO2tCQUg3QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw4QkFBOEI7aUJBQ3pDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBEaXJlY3RpdmUsIElucHV0LCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJiVGVtcGxhdGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5pbXBvcnQgeyBBY2NvdW50U3RhdGUgfSBmcm9tICdAYmFja2Jhc2UvcHJvZHVjdC1zdW1tYXJ5LWNvbW1vbi1hbmcnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1hY2NvdW50LXN0YXRlLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICdhY2NvdW50LXN0YXRlLXVpLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQWNjb3VudFN0YXRlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgcmVhZG9ubHkgaG9zdFJlZiA9IHRoaXM7XG5cbiAgLyoqXG4gICAqIFByb2R1Y3Qgc3VtbWFyeSBhY2NvdW50IHN0YXRlIGluZGljYXRvciBkaXNwbGF5IGZsYWcuXG4gICAqL1xuICBASW5wdXQoKSBpc0Rpc3BsYXlpbmdBbGVydCA9IHRydWU7XG4gIC8qKlxuICAgKiBQcm9kdWN0IHN1bW1hcnkgQWNjb3VudCBzdGF0ZSBkYXRhIHRoYXQgdGhpcyBjb21wb25lbnQgZGlzcGxheXMuXG4gICAqL1xuICBASW5wdXQoKSBpdGVtOiBBY2NvdW50U3RhdGUgfCB1bmRlZmluZWQ7XG5cbiAgaXNBbGVydENMb3NlZCA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIG5nT25DaGFuZ2VzKCk6IHZvaWQge1xuICAgIHRoaXMuaXNBbGVydENMb3NlZCA9IGZhbHNlO1xuICB9XG5cbiAgY2xvc2VBbGVydCgpIHtcbiAgICB0aGlzLmlzQWxlcnRDTG9zZWQgPSB0cnVlO1xuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYkFjY291bnRTdGF0ZUN1c3RvbWl6YWJsZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBBY2NvdW50U3RhdGVDdXN0b21pemFibGVEaXJlY3RpdmUgZXh0ZW5kcyBCYlRlbXBsYXRlPEFjY291bnRTdGF0ZUNvbXBvbmVudCwgdW5kZWZpbmVkPiB7fVxuIiwiPG5nLWNvbnRhaW5lclxuYmJBY2NvdW50U3RhdGVDdXN0b21pemFibGVcbiAgW2JiSG9zdFJlZl09XCJob3N0UmVmXCJcbiAgW2JiVGVtcGxhdGVDb250ZXh0XT1cIntpdGVtOml0ZW19XCI+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlIGJiQWNjb3VudFN0YXRlQ3VzdG9taXphYmxlXG4gIGxldC1ob3N0UmVmXG4gIGxldC1pdGVtPVwiY29udGV4dFwiPlxuICA8ZGl2IGNsYXNzPVwicm93IG10LTNcIiAqbmdJZj1cImhvc3RSZWYuaXNEaXNwbGF5aW5nQWxlcnQgJiYgIWhvc3RSZWYuaXNBbGVydENMb3NlZFwiPlxuICAgIDxkaXYgY2xhc3M9XCJjb2wtMTJcIj5cbiAgICAgIDxiYi1hbGVydC11aVxuICAgICAgICBkYXRhLXJvbGU9XCJhbGVydC1kYW5nZXJcIlxuICAgICAgICBbdGl0bGVdPVwiJydcIlxuICAgICAgICBbbW9kaWZpZXJdPVwiaG9zdFJlZi5pdGVtLnNldmVyaXR5XCJcbiAgICAgICAgW2Rpc21pc3NpYmxlXT1cInRydWVcIlxuICAgICAgICAoY2xvc2UpPVwiaG9zdFJlZi5jbG9zZUFsZXJ0KClcIj5cbiAgICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICA8L2JiLWFsZXJ0LXVpPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+XG4iXX0=