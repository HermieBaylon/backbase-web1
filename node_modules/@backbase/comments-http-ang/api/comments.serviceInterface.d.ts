/**
 * Comments client
 * Add and list comment threads, view, edit, add, and delete posts to threads.
 *
 * The version of the OpenAPI document: 2.1.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs';
import { PostAddDto } from '../model/models';
import { PostDto } from '../model/models';
import { PostUpdateDto } from '../model/models';
import { ThreadAddDto } from '../model/models';
import { ThreadDto } from '../model/models';
import { ThreadIdDto } from '../model/models';
import { Configuration } from '../configuration';
export interface CommentsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    /**
     *
     * Add a new post.
     * @param threadId The thread\&#39;s unique ID
     * @param postAddDto
     */
    addPost(threadId: string, postAddDto: PostAddDto, extraHttpRequestParams?: any): Observable<PostDto>;
    /**
     *
     * Add a new thread.
     * @param threadAddDto
     */
    addThread(threadAddDto: ThreadAddDto, extraHttpRequestParams?: any): Observable<ThreadIdDto>;
    /**
     *
     * Deletes a specific post for a thread.
     * @param threadId The thread\&#39;s unique ID
     * @param postId The post\&#39;s unique ID
     */
    deletePost(threadId: string, postId: string, extraHttpRequestParams?: any): Observable<{}>;
    /**
     *
     * Get thread\&#39;s posts by &#x60;threadId&#x60;.
     * @param threadId The thread\&#39;s unique ID
     */
    getPostList(threadId: string, extraHttpRequestParams?: any): Observable<Array<PostDto>>;
    /**
     *
     * Get all threads belong to the given entity. Sorted by the creation date in descending order.
     * @param entityFilter Multiple key-value entities filter.
     */
    getThreadList(entityFilter: {
        [key: string]: string;
    }, extraHttpRequestParams?: any): Observable<Array<ThreadDto>>;
    /**
     *
     * Updates a specific post for a thread.
     * @param threadId The thread\&#39;s unique ID
     * @param postId The post\&#39;s unique ID
     * @param postUpdateDto
     */
    updatePost(threadId: string, postId: string, postUpdateDto: PostUpdateDto, extraHttpRequestParams?: any): Observable<PostDto>;
}
