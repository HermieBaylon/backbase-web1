{"version":3,"file":"backbase-product-summary-manage-accounts-widget-ang.js","sources":["../../../../libs/product-summary-manage-accounts-widget-ang/src/manage-account-error.ts","../../../../libs/product-summary-manage-accounts-widget-ang/src/manage.service.ts","../../../../libs/product-summary-manage-accounts-widget-ang/src/model/constants.ts","../../../../libs/product-summary-manage-accounts-widget-ang/src/manage-accounts-widget-properties.service.ts","../../../../libs/product-summary-manage-accounts-widget-ang/src/manage-account-item/manage-account-item.component.ts","../../../../libs/product-summary-manage-accounts-widget-ang/src/manage-account-item/manage-account-item.component.html","../../../../libs/product-summary-manage-accounts-widget-ang/src/product-summary-manage-accounts-widget/product-summary-manage-accounts-widget.component.ts","../../../../libs/product-summary-manage-accounts-widget-ang/src/product-summary-manage-accounts-widget/product-summary-manage-accounts-widget.component.html","../../../../libs/product-summary-manage-accounts-widget-ang/src/product-summary-manage-accounts-widget.module.ts","../../../../libs/product-summary-manage-accounts-widget-ang/backbase-product-summary-manage-accounts-widget-ang.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\n\nexport class ManageAccountNotFound {\n  messages: string[];\n  kind: 'ManageAccountNotFound' = 'ManageAccountNotFound';\n  constructor(readonly response: HttpErrorResponse) {\n    this.messages = ((response.error || {}).errors || []).map((e: any) => e.message);\n  }\n}\n\nexport class ManageAccountBadRequest {\n  messages: string[];\n  kind: 'ManageAccountBadRequest' = 'ManageAccountBadRequest';\n  constructor(readonly response: HttpErrorResponse) {\n    this.messages = ((response.error || {}).errors || []).map((e: any) => e.message);\n  }\n}\n\nexport class ManageAccountAccessDenied {\n  messages: string[];\n  kind: 'ManageAccountAccessDenied' = 'ManageAccountAccessDenied';\n  constructor(readonly response: HttpErrorResponse) {\n    this.messages = ((response.error || {}).errors || []).map((e: any) => e.message);\n  }\n}\n\nexport class ManageAccountUnknownError {\n  messages: string[];\n  kind: 'ManageAccountUnknownError' = 'ManageAccountUnknownError';\n  constructor(readonly response: HttpErrorResponse) {\n    this.messages = [response.message];\n  }\n}\n\nexport class ManageAccountConnectivityError {\n  messages: string[];\n  kind: 'ManageAccountConnectivityError' = 'ManageAccountConnectivityError';\n  constructor(readonly response: HttpErrorResponse) {\n    this.messages = ((response.error || {}).errors || []).map((e: any) => e.message);\n  }\n}\n\nexport type ManageAccountError =\n  | ManageAccountAccessDenied\n  | ManageAccountBadRequest\n  | ManageAccountNotFound\n  | ManageAccountConnectivityError\n  | ManageAccountUnknownError;\n\nexport const parseError = (error: HttpErrorResponse): ManageAccountError => {\n  if (error.error instanceof ErrorEvent) {\n    return new ManageAccountUnknownError(error);\n  } else {\n    switch (error.status) {\n      case 0:\n        return new ManageAccountConnectivityError(error);\n      case 401:\n        return new ManageAccountAccessDenied(error);\n      case 403:\n        return new ManageAccountAccessDenied(error);\n      case 400:\n        return new ManageAccountBadRequest(error);\n      case 404:\n        return new ManageAccountNotFound(error);\n      default:\n        return new ManageAccountUnknownError(error);\n    }\n  }\n};\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { BehaviorSubject, combineLatest, Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, map, scan, switchMap, take, tap } from 'rxjs/operators';\nimport {\n  ArrangementsHttpService,\n  AccountUserPreferences,\n  ProductSummaryHttpService,\n} from '@backbase/data-ang/arrangements';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { parseError, ManageAccountError } from './manage-account-error';\nimport { GetArrangementsRequestParams, UpdateVisibilityItem } from './model/types';\nimport {\n  Accounts,\n  ProductSummaryItem,\n  GetProductsummaryRequest,\n  HttpResponseType,\n  PaginationType,\n} from '@backbase/product-summary-common-ang';\n\nconst toDataServiceForVisibility = (state: ProductSummaryItem): UpdateVisibilityItem => {\n  let visibility = state.userPreferences ? state.userPreferences.visible : state.visible;\n  visibility = visibility !== undefined ? visibility : state.visible;\n  return {\n    arrangementId: state.id,\n    visible: !visibility,\n  };\n};\n\nconst toDataServiceForAlias = (alias: string, arrangementId: string): AccountUserPreferences => ({\n  arrangementId,\n  alias,\n});\n\n/**\n * Service for fetching and storing the list of accounts\n *\n * This service relies on providers from `ProductSummaryManageAccountsWidgetModule`.\n *\n * @see ProductSummaryManageAccountsWidgetModule\n *\n * @usageNotes\n *\n * ### Ensure the ProductSummaryManageAccountsWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ProductSummaryManageAccountsWidgetModule,\n *   ],\n * })\n * export class MyWidgetModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ManageAccountsService],\n * })\n *  export class MyComponent {\n * ```\n */\n@Injectable()\nexport class ManageAccountsService {\n  /**\n   * Constructor\n   *\n   * @param productSummaryDataService\n   * @param manageAccountDataService\n   * @param notification\n   */\n  constructor(\n    private readonly productSummaryDataService: ProductSummaryHttpService,\n    private readonly manageAccountDataService: ArrangementsHttpService,\n    private readonly notification: NotificationService,\n  ) {}\n\n  /**\n   * If the fetching of the list failed, this property\n   * holds the errors coming from the server\n   */\n  readonly error = new BehaviorSubject<ManageAccountError | undefined>(undefined);\n  /**\n   * If errors occurred during patching arrangements record,\n   * holds the errors coming from the server\n   */\n  readonly updateError = new BehaviorSubject<ManageAccountError | undefined>(undefined);\n  /**\n   * Whether the widget is currently fetching data from the server\n   */\n  readonly loading = new BehaviorSubject<boolean>(true);\n\n  private readonly revokingComplete = new BehaviorSubject<boolean>(true);\n  private readonly requestObject = new ReplaySubject<GetArrangementsRequestParams>(1);\n  /**\n   * Available product summary items.\n   */\n  readonly accountList: Observable<Accounts | undefined> = combineLatest(\n    this.requestObject,\n    this.revokingComplete,\n  ).pipe(\n    distinctUntilChanged(),\n    // resetting error and loading values\n    tap(() => this.error.next(undefined)),\n    tap(() => this.loading.next(true)),\n    switchMap(([requestObject]) => this.getAccountList(requestObject)),\n    scan(\n      (acc: Accounts, curr: Accounts): Accounts => ({\n        count: curr.count,\n        items: this.mergeResponses(acc, curr),\n        params: curr.params,\n      }),\n    ),\n    catchError((error: ManageAccountError) => {\n      this.error.next(error);\n      return of(undefined);\n    }),\n    tap(() => this.loading.next(false)),\n  );\n\n  private getAccountList(requestObject: GetProductsummaryRequest): Observable<Accounts> {\n    const from = requestObject.from || 0;\n\n    const paginationType = requestObject.paginationType || '';\n    const requestObjWithoutPaginationType = { ...requestObject };\n    delete requestObjWithoutPaginationType.paginationType;\n\n    return this.productSummaryDataService\n      .getArrangementsByBusinessFunction(requestObjWithoutPaginationType, HttpResponseType.RESPONSE)\n      .pipe(\n        map((res: HttpResponse<ProductSummaryItem[]>) => this.mapResponseWithCount(res, { from, paginationType })),\n        catchError((error: HttpErrorResponse) => {\n          throw parseError(error);\n        }),\n      );\n  }\n\n  private patchArrangementsRecord(\n    accountUserPreferences: AccountUserPreferences,\n    errorTemplateRef: TemplateRef<any> | string,\n    successTemplateRef: TemplateRef<any> | string,\n  ): Observable<HttpResponse<any> | undefined> {\n    return this.manageAccountDataService.updateUserPreferences({ accountUserPreferences }).pipe(\n      take(1),\n      tap(() => this.revokingComplete.next(true)),\n      tap(() => this.showNotification(successTemplateRef, 'success')),\n      catchError((updateError: HttpErrorResponse) => {\n        this.updateError.next(parseError(updateError));\n        this.revokingComplete.next(true);\n        this.showNotification(errorTemplateRef, 'error');\n        return of(undefined);\n      }),\n    );\n  }\n\n  /**\n   * Toggles visibility of product summary item.\n   *\n   * @param request\n   * @param errorTemplateRef\n   * @param successTemplateRef\n   */\n  toggleVisibility(\n    request: ProductSummaryItem,\n    errorTemplateRef: TemplateRef<any> | string,\n    successTemplateRef: TemplateRef<any> | string,\n  ) {\n    this.patchArrangementsRecord(toDataServiceForVisibility(request), errorTemplateRef, successTemplateRef).subscribe();\n  }\n\n  /**\n   * Updates alias of product summary item, by id.\n   *\n   * @param arrangementId\n   * @param alias\n   * @param errorTemplateRef\n   * @param successTemplateRef\n   */\n  updateAlias(\n    arrangementId: string,\n    alias: string,\n    errorTemplateRef: TemplateRef<any> | string,\n    successTemplateRef: TemplateRef<any> | string,\n  ) {\n    const payloadForAlias = toDataServiceForAlias(alias, arrangementId);\n    this.patchArrangementsRecord(payloadForAlias, errorTemplateRef, successTemplateRef).subscribe();\n  }\n\n  /**\n   * Subscribes the passed `requestObject` to the local `requestObject`\n   *\n   * @param requestObject\n   */\n  getAccountsFrom(requestObject: Observable<GetArrangementsRequestParams>) {\n    requestObject.subscribe(this.requestObject);\n  }\n\n  private showNotification(templateRef: TemplateRef<any> | string, modifier: 'success' | 'error') {\n    this.notification.showNotification({\n      header: templateRef,\n      message: '',\n      modifier,\n    });\n  }\n\n  private mergeResponses(acc: Accounts, current: Accounts): ProductSummaryItem[] {\n    if (\n      acc &&\n      acc.items &&\n      current &&\n      current.items &&\n      acc.params.paginationType === PaginationType.LOAD_MORE &&\n      current.params.from !== 0\n    ) {\n      return [...acc.items, ...current.items];\n    }\n    return current.items;\n  }\n\n  private mapResponseWithCount(\n    response: HttpResponse<ProductSummaryItem[]>,\n    { from, paginationType }: { from: number; paginationType: PaginationType | string },\n  ): Accounts {\n    // eslint-disable-next-line no-null/no-null\n    if (response.body === null) {\n      throw new Error();\n    }\n    const headerCount = response.headers ? response.headers.get('x-total-count') : undefined;\n    const counter = headerCount ? parseInt(headerCount, 10) : (response.body && response.body.length) || 0;\n    return {\n      count: counter,\n      items: response.body || [],\n      params: { from, paginationType },\n    };\n  }\n}\n","export const WidgetProperty = {\n  BUSINESS_FUNCTION: 'businessFunction',\n  RESOURCE_NAME: 'resourceName',\n  PRIVILEGE_TYPE: 'privilege',\n  SIZE: 'size',\n  SHOW_ICONS: 'showIcons',\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { WidgetProperties } from '@backbase/product-summary-common-ang';\n\nconst defaultProperties = {\n  businessFunction: 'Product Summary',\n  resourceName: 'Product Summary',\n  privilege: 'view',\n  size: 20,\n};\n\n/**\n * State management for fetching and storing widget properties from its inputs\n *\n * This service relies on providers from `ProductSummaryManageAccountsWidgetModule`.\n *\n * @see ProductSummaryManageAccountsWidgetModule\n *\n * @usageNotes\n *\n * ### Ensure the ProductSummaryManageAccountsWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ProductSummaryManageAccountsWidgetModule,\n *   ],\n * })\n * export class MyWidgetModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ManageAccountsWidgetPropertiesService],\n * })\n *  export class MyComponent {\n * ```\n */\n\n@Injectable()\nexport class ManageAccountsWidgetPropertiesService {\n  private readonly propertiesConfig$ = new BehaviorSubject(defaultProperties);\n\n  public get widgetProperties() {\n    return this.propertiesConfig$;\n  }\n\n  constructor() {}\n\n  public setConfig(config: Partial<WidgetProperties>) {\n    this.propertiesConfig$.next({\n      businessFunction: config.businessFunction || defaultProperties.businessFunction,\n      resourceName: config.resourceName || defaultProperties.resourceName,\n      privilege: config.privilege || defaultProperties.privilege,\n      size: config.size || defaultProperties.size,\n    });\n  }\n}\n","import { Component, Input, Directive, Output, EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  Arrangement,\n  ProductSummaryItem,\n  getAccountAlias,\n  hasExternalInfo,\n  ResponsiveContainerComponent,\n} from '@backbase/product-summary-common-ang';\n\n/**\n * A component for displaying an account item\n *\n * The following extension slots are available in this component:\n *\n * - `ManageAccountItemCustomizableDirective`\n *\n * @see ManageAccountItemCustomizableDirective\n *\n * @usageNotes\n *\n * ### Display details\n *\n * ```html\n * <bb-manage-account-item\n *   [item]=\"item\"\n *   [productAliasMaxLength]=\"hostRef.aliasMaxLength\"\n *   (toggleVisibility)=\"hostRef.toggleVisibility($event)\"\n *   (updateAlias)=\"hostRef.updateAlias(item.id, $event)\"\n * ></bb-manage-account-item>\n * ```\n *\n * @ngModule ProductSummaryManageAccountsWidgetModule\n */\n@Component({\n  selector: 'bb-manage-account-item',\n  templateUrl: 'manage-account-item.component.html',\n})\nexport class ManageAccountItemComponent extends ResponsiveContainerComponent {\n  /**\n   * @internal\n   */\n  readonly hostRef: ManageAccountItemComponent = this;\n  /**\n   * Returns the `alias` of the passed `account`\n   */\n  readonly getAlias: (account: any) => string | undefined = getAccountAlias;\n  /**\n   * Returns true if product has external info\n   */\n  readonly hasExternalInfo: (product: Arrangement) => boolean = hasExternalInfo;\n  /**\n   * Product item data that this component displays.\n   */\n  @Input() item: ProductSummaryItem | undefined;\n  /**\n   * Maximum allowed length of product alias\n   */\n  @Input() productAliasMaxLength: number | undefined;\n  /**\n   * Defines whether the product kind icon should be displayed\n   *\n   * @default true\n   */\n  @Input() showIcon = true;\n  /**\n   * Event (Output) that emits when item visibility is changed\n   */\n  @Output() toggleVisibility = new EventEmitter<ProductSummaryItem>();\n  /**\n   * Event (Output) that emits when item alias is changed\n   */\n  @Output() updateAlias = new EventEmitter<string>();\n\n  /**\n   * @internal\n   */\n  constructor(element: ElementRef<HTMLElement>, changeDetector: ChangeDetectorRef) {\n    super(element, changeDetector);\n  }\n\n  /**\n   * Event handler for the `click` event of `bb-switch-ui`\n   * emits the `item` to the `toggleVisibility` output\n   *\n   * @param item\n   */\n  updateVisibility(item: ProductSummaryItem): void {\n    this.toggleVisibility.emit(item);\n  }\n  /**\n   * Event handler for the `accept` event of `bb-input-inline-edit-ui`\n   * emits the `alias` to the `updateAlias`\n   *\n   * @param alias\n   */\n  onAliasUpdate(alias: string): void {\n    this.updateAlias.emit(alias);\n  }\n  /**\n   * Returns visibility status of product summary item\n   *\n   * @param item\n   */\n  checkItemVisibility(item: ProductSummaryItem): boolean | undefined {\n    const visibility = item.userPreferences ? item.userPreferences.visible : item.visible;\n    return visibility !== undefined ? visibility : item.visible;\n  }\n}\n/**\n * This is an extension slot to be used for customizing the entire component\n *\n * @usageNotes\n *\n * ### Customize the component\n *\n * ```html\n * <ng-template\n *   bbManageAccountItemCustomizable\n *   let-hostRef\n *   let-item=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryManageAccountsWidgetModule\n */\n@Directive({\n  selector: '[bbManageAccountItemCustomizable]',\n})\nexport class ManageAccountItemCustomizableDirective extends BbTemplate<\n  ManageAccountItemComponent,\n  ProductSummaryItem\n> {}\n","<ng-container\n  bbManageAccountItemCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"item\"\n>\n</ng-container>\n\n<ng-template\n  bbManageAccountItemCustomizable\n  let-hostRef\n  let-item=\"context\"\n>\n  <ng-container [ngSwitch]=\"hostRef.responsiveView\">\n    <!-- Mobile View -->\n    <ng-container *ngSwitchCase=\"'mobile'\">\n      <div class=\"row d-flex\">\n        <div class=\"col-12\" data-role=\"product-kind-info\">\n          <ng-container *ngIf=\"hostRef.hasExternalInfo(item)\">\n            <ng-container *ngTemplateOutlet=\"accountExternalInfo; context: { withLogo: hostRef.showIcon }\"></ng-container>\n          </ng-container>\n          <ng-container *ngTemplateOutlet=\"accountInternalInfo; context: { withLogo: (hostRef.showIcon && !hostRef.hasExternalInfo(item)) }\"></ng-container>\n          <div class=\"bb-block bb-block--xs\"></div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"bb-block bb-block--sm\"></div>\n          <ng-container *ngTemplateOutlet=\"changeVisibilityColumn\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n\n    <!-- Tablet View -->\n    <ng-container *ngSwitchCase=\"'tablet'\">\n      <div class=\"row d-flex align-items-center flex-nowrap\">\n        <div class=\"col p-0 pl-3 d-flex flex-basis-0 flex-grow-0\">\n          <ng-container *ngTemplateOutlet=\"accountLogo\"></ng-container>\n        </div>\n        <div class=\"col flex-grow-1 row align-items-center flex-wrap\">\n          <div class=\"col-12 col-md-6\" data-role=\"product-kind-info\">\n            <ng-container *ngIf=\"hostRef.hasExternalInfo(item)\">\n              <ng-container *ngTemplateOutlet=\"accountExternalInfo\"></ng-container>\n            </ng-container>\n            <ng-container *ngTemplateOutlet=\"accountInternalInfo; context: { withProductKindName: true }\"></ng-container>\n          </div>\n          <div class=\"col-12 col-md-auto flex-grow-1\">\n            <div class=\"bb-block bb-block--sm\"></div>\n            <ng-container *ngTemplateOutlet=\"changeVisibilityColumn\"></ng-container>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <!-- Screen View -->\n    <ng-container *ngSwitchDefault>\n      <div class=\"row d-flex align-items-center flex-nowrap\">\n        <div class=\"col p-0 pl-3 d-flex flex-basis-0 flex-grow-0\">\n          <ng-container *ngTemplateOutlet=\"accountLogo\"></ng-container>\n        </div>\n        <div class=\"col flex-grow-1 row align-items-center flex-wrap\">\n          <div class=\"col-12 col-md-6\" data-role=\"product-kind-info\">\n            <ng-container *ngIf=\"hostRef.hasExternalInfo(item)\">\n              <ng-container *ngTemplateOutlet=\"accountExternalInfo\"></ng-container>\n            </ng-container>\n            <ng-container *ngTemplateOutlet=\"accountInternalInfo\"></ng-container>\n          </div>\n          <div class=\"col\" data-role=\"account-kind-name\">\n            <bb-product-kind-name [name]=\"item.productKindName\"></bb-product-kind-name>\n          </div>\n          <div class=\"col-12 col-md-auto flex-grow-1\">\n            <ng-container *ngTemplateOutlet=\"changeVisibilityColumn\"></ng-container>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #accountLogo>\n    <bb-product-summary-account-logo\n      *ngIf=\"hostRef.showIcon\"\n      data-role=\"manage-account-item__logo\"\n      [logoSrc]=\"item?.financialInstitution?.logo\"\n      [productKindName]=\"item.productKindName\"\n      iconColor=\"secondary\"\n    ></bb-product-summary-account-logo>\n  </ng-template>\n\n  <ng-template #accountExternalInfo let-withLogo=\"withLogo\">\n    <div class=\"bb-block bb-block--xs bb-stack bb-stack--density-sm\">\n      <div class=\"bb-stack__item\" *ngIf=\"withLogo\">\n        <bb-product-summary-account-logo\n          data-role=\"manage-account-item__logo\"\n          [logoSrc]=\"item.financialInstitution?.logo\"\n          iconSize=\"sm\"\n          logoSize=\"sm\"\n          [productKindName]=\"item.productKindName\"\n          iconColor=\"secondary\"\n        ></bb-product-summary-account-logo>\n      </div>\n      <span class=\"bb-stack__item bb-text-support bb-subtitle bb-text-bold\"\n            *ngIf=\"item.financialInstitution?.name; else externalBankNameDefault\">{{item.financialInstitution?.name}}</span>\n      <ng-template #externalBankNameDefault>\n        <span class=\"bb-stack__item bb-text-support bb-subtitle bb-text-bold\"\n              i18n=\"External account|Default bank name for external accounts@@manage.account.item\">\n          External account\n        </span>\n      </ng-template>\n    </div>\n  </ng-template>\n\n  <ng-template #accountInternalInfo let-withLogo=\"withLogo\" let-withProductKindName=\"withProductKindName\">\n    <div *ngIf=\"withProductKindName\" class=\"bb-text-support bb-subtitle\" data-role=\"account-kind-name\">\n      <bb-product-kind-name [name]=\"item.productKindName\"></bb-product-kind-name>\n    </div>\n    <div\n      data-role=\"account-name\"\n      class=\"bb-block bb-block--xs bb-stack bb-stack--density-sm bb-text-bold break-word\"\n    >\n      <bb-product-summary-account-logo\n        data-role=\"manage-account-item__logo\"\n        *ngIf=\"withLogo\"\n        class=\"bb-stack__item\"\n        iconSize=\"sm\"\n        logoSize=\"sm\"\n        [productKindName]=\"item.productKindName\"\n        iconColor=\"secondary\"\n      ></bb-product-summary-account-logo>\n      <bb-input-inline-edit-ui\n        [inputText]=\"hostRef.getAlias(item)\"\n        [maxLength]=\"hostRef.productAliasMaxLength\"\n        [required]=\"false\"\n        (accept)=\"hostRef.onAliasUpdate($event)\"\n        ariaLabelEdit=\"Edit alias for {{hostRef.getAlias(item)}}\"\n        i18n-ariaLabelEdit=\"Edit alias|Inline editor aria label@@manage.account.item.alias-inline-edit.aria-label\"\n      ></bb-input-inline-edit-ui>\n    </div>\n    <bb-product-number\n      class=\"bb-text-support bb-subtitle\"\n      data-role=\"account-number\"\n      [product]=\"item\"\n    ></bb-product-number>\n    <bb-arrangement-state-indicator\n      *ngIf=\"item.state\"\n      [state]=\"item.state.state\"\n      [hideStateTextForMobile]=\"false\"\n      data-role=\"arrangement-state\"\n    ></bb-arrangement-state-indicator>\n  </ng-template>\n\n  <ng-template #changeVisibilityColumn>\n    <div class=\"bb-stack\">\n      <bb-amount-ui\n        data-role=\"account-amount\"\n        class=\"bb-stack__item bb-stack__item--push-right bb-highlight bb-stack__item--fill--md-down\"\n        [amount]=\"item.bookedBalance || item.principalAmount || item.currentInvestmentValue\"\n        [currency]=\"item.currency\"\n      ></bb-amount-ui>\n      <div class=\"bb-stack__item\">\n        <bb-switch-ui\n          class=\"bb-stack\"\n          (click)=\"hostRef.updateVisibility(item)\"\n          [ngModel]=\"hostRef.checkItemVisibility(item)\"\n          bbTooltip=\"Manage Visibility\"\n          i18n-bbTooltip=\"Manage account visibility|@@manage.account.item.switch.tooltip.showHide\"\n          triggers=\"hover, focus\"\n          aria-label=\"{{hostRef.getAlias(item)}} Visibility\"\n          i18n-aria-label=\"Account visibility|Accessibility label for the switching account visibility component\n              @@manage.account.item.switch.aria.label.showHide\"\n          aria-pressed=\"true\"\n        ></bb-switch-ui>\n      </div>\n    </div>\n  </ng-template>\n</ng-template>\n","import {\n  Component,\n  Directive,\n  TemplateRef,\n  ViewChild,\n  ElementRef,\n  Input,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { ManageAccountsService } from '../manage.service';\nimport { ManageAccountError } from '../manage-account-error';\nimport {\n  Accounts,\n  GetProductsummaryRequest,\n  PaginationType,\n  SMALL_SCREEN_SIZE,\n  processErrorMessages,\n  UserPreferencesValidationSettings,\n  ProductsExternalInfoService,\n  hasExternalInfo,\n  ProductSummaryItem,\n  WidgetProperties,\n} from '@backbase/product-summary-common-ang';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { GetArrangementsRequestParams } from '../model/types';\nimport { WidgetProperty } from '../model/constants';\nimport { ManageAccountsWidgetPropertiesService } from '../manage-accounts-widget-properties.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * Widget for displaying and managing accounts\n *\n * The following extension slots are available in this component:\n *\n * - `ProductSummaryManageAccountCustomizableDirective`\n * - `ProductSummaryManageAccountLoadingCustomizableDirective`\n * - `ManageAccountsFooterCustomizableDirective`\n *\n * @see `AccountsOverviewWidgetCustomizableDirective`\n * @see `ProductSummaryManageAccountLoadingCustomizableDirective`\n * @see `ManageAccountsFooterCustomizableDirective`\n *\n * @usageNotes\n *\n * ### Include this widget in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ProductSummaryManageAccountsWidgetModule,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n *\n * ### Include this widget (standalone model)\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'product-summary-accounts-overview-widget-ang',\n *           properties: {\n *              classId: 'ProductSummaryManageAccountsWidgetComponent',\n *              businessFunction: 'Product Summary',\n *              resourceName: 'Product Summary',\n *              privilege: 'view',\n *              size: 20,\n *              route: 'manage-accounts',\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n *\n * @ngModule ProductSummaryManageAccountsWidgetModule\n * ```\n */\n@Component({\n  selector: 'bb-product-summary-manage-accounts-widget',\n  templateUrl: 'product-summary-manage-accounts-widget.component.html',\n  providers: [ManageAccountsWidgetPropertiesService],\n})\nexport class ProductSummaryManageAccountsWidgetComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Subject for the garbage collector\n   */\n  gc$ = new Subject<void>();\n  /**\n   * @internal\n   */\n  readonly hostRef: ProductSummaryManageAccountsWidgetComponent = this;\n  /**\n   * ViewChild for `notificationError`\n   */\n  @ViewChild('notificationError', { static: true }) notificationErrorTemplate: TemplateRef<any> | string = '';\n  /**\n   * ViewChild for `notificationSuccess`\n   */\n  @ViewChild('notificationSuccess', { static: true }) notificationSuccessTemplate: TemplateRef<any> | string = '';\n  /**\n   * Contains errors occurred during fetching accounts\n   */\n  readonly error: Observable<ManageAccountError | undefined> = this.service.error;\n  /**\n   * If errors occurred during patching arrangements record,\n   * holds the errors coming from the server\n   */\n  readonly updateError: Observable<ManageAccountError | undefined> = this.service.updateError;\n  /**\n   * Available product summary items.\n   */\n  readonly accounts: Observable<Accounts | undefined> = new Observable(subscriber => {\n    const subscriptions: Subscription[] = [];\n    subscriptions.push(\n      this.service.accountList.subscribe((accounts: Accounts | undefined) => {\n        const products = accounts?.items || [];\n        subscriber.next(accounts);\n\n        if (products.some(hasExternalInfo)) {\n          subscriptions.push(\n            this.productsExternalInfoService\n              .getProductsWithExternalInfo<ProductSummaryItem>(products)\n              .pipe(map(productsWithExternalInfo => ({ ...accounts, items: productsWithExternalInfo } as Accounts)))\n              .subscribe(subscriber),\n          );\n        }\n      }, subscriber.error),\n    );\n    return () => subscriptions.forEach(subscription => subscription.unsubscribe());\n  });\n\n  /**\n   * Whether the widget is currently fetching data from the server\n   */\n  readonly loading: BehaviorSubject<boolean> = this.service.loading;\n  /**\n   * Maximum length of product item aliases\n   */\n  readonly aliasMaxLength = UserPreferencesValidationSettings.ALIAS_MAX_LENGTH;\n\n  private isSmallScreen = false;\n  /**\n   * Default business function\n   */\n  @Input(WidgetProperty.BUSINESS_FUNCTION) businessFunction = 'Product Summary';\n  /**\n   * Default resource name\n   */\n  @Input(WidgetProperty.RESOURCE_NAME) resourceName = 'Product Summary';\n  /**\n   * \"Default privilege type\n   */\n  @Input(WidgetProperty.PRIVILEGE_TYPE) privilege = 'view';\n  /**\n   * Number of accounts per page\n   */\n  @Input(WidgetProperty.SIZE) size = 20;\n  /**\n   * Defines whether product kind icons should be displayed\n   *\n   * @default true\n   */\n  @Input(WidgetProperty.SHOW_ICONS) showIcons = true;\n  /**\n   * Default pagination parameters\n   */\n  readonly paginationParams = new BehaviorSubject<GetProductsummaryRequest>({\n    from: 0,\n    size: 0,\n    businessFunction: '',\n    resourceName: '',\n    privilege: '',\n    paginationType: PaginationType.PAGINATION,\n  });\n\n  private requestParams: Observable<GetArrangementsRequestParams> = combineLatest(\n    this.paginationParams,\n    this.widgetPropertiesService.widgetProperties,\n  ).pipe(\n    takeUntil(this.gc$),\n    map(([paginationParams, widgetProperties]) => ({\n      from: paginationParams.from || 0,\n      size: widgetProperties.size,\n      businessFunction: widgetProperties.businessFunction,\n      resourceName: widgetProperties.resourceName,\n      privilege: widgetProperties.privilege,\n      paginationType: paginationParams.paginationType,\n    })),\n  );\n  /**\n   * Joins the specified error messages to display on the template\n   *\n   * @param messages\n   */\n  processErrorMessages: (messages: string[] | undefined) => string | undefined = processErrorMessages;\n  /**\n   * @internal\n   */\n  ngAfterViewInit() {\n    this.widgetPropertiesService.setConfig({\n      businessFunction: this.businessFunction,\n      resourceName: this.resourceName,\n      privilege: this.privilege,\n      size: this.size,\n    });\n\n    const containerWidth = this.el.nativeElement.children[0].getBoundingClientRect().width;\n    this.isSmallScreen = containerWidth <= SMALL_SCREEN_SIZE;\n\n    this.widgetPropertiesService.widgetProperties\n      .pipe(takeUntil(this.gc$))\n      .subscribe(widgetProperties => this.initWidgetProperties(widgetProperties));\n  }\n\n  /**\n   * Cleanups just before Angular destroys the component.\n   *\n   * @returns\n   */\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n\n  private initWidgetProperties(properties: WidgetProperties) {\n    const paginationType = this.isSmallScreen ? PaginationType.LOAD_MORE : PaginationType.PAGINATION;\n\n    this.paginationParams.next({\n      ...this.paginationParams.getValue(),\n      size: properties.size,\n      paginationType,\n    });\n\n    this.service.getAccountsFrom(this.requestParams);\n  }\n  /**\n   * Constructor\n   *\n   * @param service\n   * @param widgetPropertiesService\n   * @param productsExternalInfoService\n   * @param el\n   */\n  constructor(\n    private readonly service: ManageAccountsService,\n    private readonly widgetPropertiesService: ManageAccountsWidgetPropertiesService,\n    private readonly productsExternalInfoService: ProductsExternalInfoService,\n    private readonly el: ElementRef,\n  ) {}\n  /**\n   * Toggles visibility of product summary item.\n   *\n   * @param item\n   */\n  toggleVisibility(item: ProductSummaryItem): void {\n    this.service.toggleVisibility(item, this.notificationErrorTemplate, this.notificationSuccessTemplate);\n  }\n  /**\n   * Updates alias of product summary item, by id.\n   *\n   * @param id\n   * @param alias\n   */\n  updateAlias(id: string, alias: string = ''): void {\n    this.service.updateAlias(id, alias, this.notificationErrorTemplate, this.notificationSuccessTemplate);\n  }\n  /**\n   * Event handler for the `pageChange` event of `bb-product-summary-footer-ui`\n   * emits the new `page` value to the `paginationParams`\n   *\n   * @param page\n   */\n  onPageChange(page: number): void {\n    this.paginationParams.next({\n      ...this.paginationParams.getValue(),\n      from: page,\n    });\n  }\n  /**\n   * Event handler for the `loadMore` event of `bb-product-summary-footer-ui`\n   * updates the `from` property of `paginationParams`\n   */\n  onLoadMore(): void {\n    if (!this.loading.getValue()) {\n      this.paginationParams.next({\n        ...this.paginationParams.value,\n        from: this.paginationParams.value.from ? this.paginationParams.value.from + 1 : 1,\n      });\n    }\n  }\n}\n/**\n * This is an extension slot to be used for customizing the entire widget\n *\n * @usageNotes\n *\n * ### Customize the widget\n *\n * ```html\n * <ng-template\n *   bbManageAccountCustomizable\n *   let-hostRef\n *   let-accounts=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryManageAccountsWidgetModule\n */\n@Directive({\n  selector: '[bbManageAccountCustomizable]',\n})\nexport class ProductSummaryManageAccountCustomizableDirective extends BbTemplate<\n  ProductSummaryManageAccountsWidgetComponent,\n  ProductSummaryItem\n> {}\n/**\n * This is an extension slot to be used for customizing the loading indicator\n *\n * @usageNotes\n *\n * ### Customize the loading indicator\n *\n * ```html\n * <ng-template\n *   bbManageAccountLoadingCustomizable\n *   let-hostRef>\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryManageAccountsWidgetModule\n */\n@Directive({\n  selector: '[bbManageAccountLoadingCustomizable]',\n})\nexport class ProductSummaryManageAccountLoadingCustomizableDirective extends BbTemplate<\n  ProductSummaryManageAccountsWidgetComponent,\n  undefined\n> {}\n/**\n * This is an extension slot to be used for customizing the footer\n *\n * @usageNotes\n *\n * ### Customize the footer\n *\n * ```html\n * <ng-template\n *   bbManageAccountsFooterCustomizable\n *   let-hostRef\n *   let-accounts=\"context.accounts\"\n *   let-paginationParams=\"context.paginationParams\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryManageAccountsWidgetModule\n */\n@Directive({\n  selector: '[bbManageAccountsFooterCustomizable]',\n})\nexport class ManageAccountsFooterCustomizableDirective extends BbTemplate<\n  ProductSummaryManageAccountsWidgetComponent,\n  { accounts: ProductSummaryItem[]; paginationParams: GetProductsummaryRequest }\n> {}\n","<div class=\"bb-block bb-block--full-width\">\n  <ng-container *ngIf=\"!(hostRef.error | async | bbIsDefined) && (accounts | async) as accounts; else loadingTemplate\">\n    <ng-container *ngIf=\"((hostRef.loading | async) === false); else loadingTemplate\">\n      <ng-container bbManageAccountCustomizable\n                    [bbHostRef]=\"hostRef\"\n                    [bbTemplateContext]=\"accounts\">\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n\n<!-- Manage Accounts template -->\n<ng-template\n  bbManageAccountCustomizable\n  let-hostRef\n  let-accounts=\"context\">\n  <div class=\"bb-block bb-block--xl\"\n       data-role=\"product-summary-manage-accounts-initial-message\"\n       i18n=\"Manage Products info|Manage Products info header label@@product.summary.manage.accounts.header.info\">\n    Below you can define which products will be shown in \"My accounts\" and/or edit their account names.\n  </div>\n\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-list bb-list--density-md\">\n        <div class=\"bb-list__item\"\n             *ngFor=\"let item of accounts.items\">\n          <bb-manage-account-item\n            [item]=\"item\"\n            [productAliasMaxLength]=\"hostRef.aliasMaxLength\"\n            [showIcon]=\"this.showIcons\"\n            (toggleVisibility)=\"hostRef.toggleVisibility($event)\"\n            (updateAlias)=\"hostRef.updateAlias(item.id, $event)\"\n          ></bb-manage-account-item>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-footer\">\n      <ng-container\n        bbManageAccountsFooterCustomizable\n        [bbHostRef]=\"hostRef\"\n        [bbTemplateContext]=\"{\n            paginationParams: hostRef.paginationParams | async,\n            accounts: accounts\n          }\"\n      >\n      </ng-container>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #notificationError>\n  <span i18n=\"Failed to update Product|Error notification message@@product-summary-manage.notification.error\">\n    Failed to update Product\n  </span>\n  <span *ngIf=\"updateError | async as updateError\">\n    {{processErrorMessages(updateError.messages)}}\n  </span>\n</ng-template>\n\n<ng-template #notificationSuccess>\n  <span i18n=\"Successfully Updated|Success notification message@@product-summary-manage.notification.success\">\n    Successfully Updated\n  </span>\n</ng-template>\n\n\n<!-- Product summary loading template -->\n<ng-template #loadingTemplate>\n  <ng-container bbManageAccountLoadingCustomizable\n                [bbHostRef]=\"hostRef\">\n  </ng-container>\n</ng-template>\n\n<ng-template\n  bbManageAccountLoadingCustomizable\n  let-hostRef>\n  <ng-container *ngIf=\"hostRef.error | async as error; else loading\">\n    <bb-empty-state-ui\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n      iconClasses=\"text-muted\"\n      title=\"\"\n      [subtitle]=\"hostRef.processErrorMessages(error.messages)\"\n    ></bb-empty-state-ui>\n  </ng-container>\n  <ng-template #loading>\n    <bb-loading-indicator-ui\n      text=\"Loading Accounts...\"\n      i18n-text=\"Loading Accounts...|Text for loading indicator@@product.details.loadingAccounts\"\n    ></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n\n<ng-template\n  bbManageAccountsFooterCustomizable\n  let-hostRef\n  let-accounts=\"context.accounts\"\n  let-paginationParams=\"context.paginationParams\">\n  <bb-product-summary-footer-ui\n    [page]=\"paginationParams?.from\"\n    [count]=\"accounts?.count\"\n    [hasMore]=\"accounts?.items?.length !== accounts?.count\"\n    [loading]=\"hostRef.loading | async\"\n    [paginationType]=\"paginationParams?.paginationType\"\n    [itemsPerPage]=\"paginationParams?.size\"\n    (pageChange)=\"hostRef.onPageChange($event)\"\n    (loadMore)=\"hostRef.onLoadMore($event)\"\n  ></bb-product-summary-footer-ui>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { InputInlineEditModule } from '@backbase/ui-ang/input-inline-edit';\nimport { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { SwitchModule } from '@backbase/ui-ang/switch';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport {\n  ArrangementStateIndicatorModule,\n  ProductSummaryAccountLogoModule,\n  ProductSummaryFooterModule,\n  ProductKindNameModule,\n  ProductNumberModule,\n} from '@backbase/product-summary-ui';\nimport {\n  ProductsExternalInfoService,\n  ProductSummaryCommon,\n  ValidationModule,\n} from '@backbase/product-summary-common-ang';\n\nimport { ManageAccountsService } from './manage.service';\nimport {\n  ProductSummaryManageAccountsWidgetComponent,\n  ProductSummaryManageAccountCustomizableDirective,\n  ProductSummaryManageAccountLoadingCustomizableDirective,\n  ManageAccountsFooterCustomizableDirective,\n} from './product-summary-manage-accounts-widget/product-summary-manage-accounts-widget.component';\nimport {\n  ManageAccountItemComponent,\n  ManageAccountItemCustomizableDirective,\n} from './manage-account-item/manage-account-item.component';\n\nconst components = [ProductSummaryManageAccountsWidgetComponent, ManageAccountItemComponent];\n\nconst directives = [\n  ProductSummaryManageAccountCustomizableDirective,\n  ManageAccountItemCustomizableDirective,\n  ProductSummaryManageAccountLoadingCustomizableDirective,\n  ManageAccountsFooterCustomizableDirective,\n];\n\nconst uiModules = [\n  EmptyStateModule,\n  LoadingIndicatorModule,\n  InputInlineEditModule,\n  PaymentCardNumberModule,\n  AmountModule,\n  SwitchModule,\n  NotificationModule,\n  ArrangementStateIndicatorModule,\n  ProductSummaryAccountLogoModule,\n  ProductSummaryFooterModule,\n  ProductKindNameModule,\n  ProductNumberModule,\n  TooltipModule,\n  ValidationModule,\n];\n\n/**\n * Exports the Widgets and UI components for managing accounts\n *\n * The following widgets are included in this module:\n *  - `ProductSummaryManageAccountsWidgetComponent`\n *\n * @see ProductSummaryManageAccountsWidgetComponent\n *\n * The following components are included in this module:\n * - `ManageAccountItemComponent`,\n *\n * @see `ManageAccountItemComponent`,\n *\n * @usageNotes\n *\n * ### Include the exported widgets in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ProductSummaryManageAccountsWidgetModule,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BackbaseCoreModule.withConfig({\n      classMap: {\n        ProductSummaryManageAccountsWidgetComponent,\n      },\n    }),\n    ProductSummaryCommon,\n    ...uiModules,\n  ],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules],\n  providers: [ManageAccountsService, ProductsExternalInfoService],\n})\nexport class ProductSummaryManageAccountsWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i2","i1.ManageAccountsService","i2.ManageAccountsWidgetPropertiesService","i3","i4.ManageAccountItemComponent","i5","i6","i7","i8"],"mappings":"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"}