import { HttpErrorResponse } from '@angular/common/http';
export declare class ManageAccountNotFound {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'ManageAccountNotFound';
    constructor(response: HttpErrorResponse);
}
export declare class ManageAccountBadRequest {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'ManageAccountBadRequest';
    constructor(response: HttpErrorResponse);
}
export declare class ManageAccountAccessDenied {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'ManageAccountAccessDenied';
    constructor(response: HttpErrorResponse);
}
export declare class ManageAccountUnknownError {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'ManageAccountUnknownError';
    constructor(response: HttpErrorResponse);
}
export declare class ManageAccountConnectivityError {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'ManageAccountConnectivityError';
    constructor(response: HttpErrorResponse);
}
export declare type ManageAccountError = ManageAccountAccessDenied | ManageAccountBadRequest | ManageAccountNotFound | ManageAccountConnectivityError | ManageAccountUnknownError;
export declare const parseError: (error: HttpErrorResponse) => ManageAccountError;
