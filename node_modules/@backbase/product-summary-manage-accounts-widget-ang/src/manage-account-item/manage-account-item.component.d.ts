import { EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Arrangement, ProductSummaryItem, ResponsiveContainerComponent } from '@backbase/product-summary-common-ang';
import * as i0 from "@angular/core";
/**
 * A component for displaying an account item
 *
 * The following extension slots are available in this component:
 *
 * - `ManageAccountItemCustomizableDirective`
 *
 * @see ManageAccountItemCustomizableDirective
 *
 * @usageNotes
 *
 * ### Display details
 *
 * ```html
 * <bb-manage-account-item
 *   [item]="item"
 *   [productAliasMaxLength]="hostRef.aliasMaxLength"
 *   (toggleVisibility)="hostRef.toggleVisibility($event)"
 *   (updateAlias)="hostRef.updateAlias(item.id, $event)"
 * ></bb-manage-account-item>
 * ```
 *
 * @ngModule ProductSummaryManageAccountsWidgetModule
 */
export declare class ManageAccountItemComponent extends ResponsiveContainerComponent {
    /**
     * @internal
     */
    readonly hostRef: ManageAccountItemComponent;
    /**
     * Returns the `alias` of the passed `account`
     */
    readonly getAlias: (account: any) => string | undefined;
    /**
     * Returns true if product has external info
     */
    readonly hasExternalInfo: (product: Arrangement) => boolean;
    /**
     * Product item data that this component displays.
     */
    item: ProductSummaryItem | undefined;
    /**
     * Maximum allowed length of product alias
     */
    productAliasMaxLength: number | undefined;
    /**
     * Defines whether the product kind icon should be displayed
     *
     * @default true
     */
    showIcon: boolean;
    /**
     * Event (Output) that emits when item visibility is changed
     */
    toggleVisibility: EventEmitter<ProductSummaryItem>;
    /**
     * Event (Output) that emits when item alias is changed
     */
    updateAlias: EventEmitter<string>;
    /**
     * @internal
     */
    constructor(element: ElementRef<HTMLElement>, changeDetector: ChangeDetectorRef);
    /**
     * Event handler for the `click` event of `bb-switch-ui`
     * emits the `item` to the `toggleVisibility` output
     *
     * @param item
     */
    updateVisibility(item: ProductSummaryItem): void;
    /**
     * Event handler for the `accept` event of `bb-input-inline-edit-ui`
     * emits the `alias` to the `updateAlias`
     *
     * @param alias
     */
    onAliasUpdate(alias: string): void;
    /**
     * Returns visibility status of product summary item
     *
     * @param item
     */
    checkItemVisibility(item: ProductSummaryItem): boolean | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<ManageAccountItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ManageAccountItemComponent, "bb-manage-account-item", never, { "item": "item"; "productAliasMaxLength": "productAliasMaxLength"; "showIcon": "showIcon"; }, { "toggleVisibility": "toggleVisibility"; "updateAlias": "updateAlias"; }, never, never>;
}
/**
 * This is an extension slot to be used for customizing the entire component
 *
 * @usageNotes
 *
 * ### Customize the component
 *
 * ```html
 * <ng-template
 *   bbManageAccountItemCustomizable
 *   let-hostRef
 *   let-item="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryManageAccountsWidgetModule
 */
export declare class ManageAccountItemCustomizableDirective extends BbTemplate<ManageAccountItemComponent, ProductSummaryItem> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ManageAccountItemCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ManageAccountItemCustomizableDirective, "[bbManageAccountItemCustomizable]", never, {}, {}, never>;
}
