import { BehaviorSubject } from 'rxjs';
import { WidgetProperties } from '@backbase/product-summary-common-ang';
import * as i0 from "@angular/core";
/**
 * State management for fetching and storing widget properties from its inputs
 *
 * This service relies on providers from `ProductSummaryManageAccountsWidgetModule`.
 *
 * @see ProductSummaryManageAccountsWidgetModule
 *
 * @usageNotes
 *
 * ### Ensure the ProductSummaryManageAccountsWidgetModule is imported to your component module
 *
 * ```ts
 * @NgModule({
 *   ...
 *   imports: [
 *     ...
 *     ProductSummaryManageAccountsWidgetModule,
 *   ],
 * })
 * export class MyWidgetModule {}
 * ```
 *
 * ### Inject this service into your component
 *
 * ```ts
 * @Component({
 *   ...
 *   providers: [ManageAccountsWidgetPropertiesService],
 * })
 *  export class MyComponent {
 * ```
 */
export declare class ManageAccountsWidgetPropertiesService {
    private readonly propertiesConfig$;
    get widgetProperties(): BehaviorSubject<{
        businessFunction: string;
        resourceName: string;
        privilege: string;
        size: number;
    }>;
    constructor();
    setConfig(config: Partial<WidgetProperties>): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ManageAccountsWidgetPropertiesService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ManageAccountsWidgetPropertiesService>;
}
