import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
const defaultProperties = {
    businessFunction: 'Product Summary',
    resourceName: 'Product Summary',
    privilege: 'view',
    size: 20,
};
/**
 * State management for fetching and storing widget properties from its inputs
 *
 * This service relies on providers from `ProductSummaryManageAccountsWidgetModule`.
 *
 * @see ProductSummaryManageAccountsWidgetModule
 *
 * @usageNotes
 *
 * ### Ensure the ProductSummaryManageAccountsWidgetModule is imported to your component module
 *
 * ```ts
 * @NgModule({
 *   ...
 *   imports: [
 *     ...
 *     ProductSummaryManageAccountsWidgetModule,
 *   ],
 * })
 * export class MyWidgetModule {}
 * ```
 *
 * ### Inject this service into your component
 *
 * ```ts
 * @Component({
 *   ...
 *   providers: [ManageAccountsWidgetPropertiesService],
 * })
 *  export class MyComponent {
 * ```
 */
export class ManageAccountsWidgetPropertiesService {
    constructor() {
        this.propertiesConfig$ = new BehaviorSubject(defaultProperties);
    }
    get widgetProperties() {
        return this.propertiesConfig$;
    }
    setConfig(config) {
        this.propertiesConfig$.next({
            businessFunction: config.businessFunction || defaultProperties.businessFunction,
            resourceName: config.resourceName || defaultProperties.resourceName,
            privilege: config.privilege || defaultProperties.privilege,
            size: config.size || defaultProperties.size,
        });
    }
}
ManageAccountsWidgetPropertiesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageAccountsWidgetPropertiesService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
ManageAccountsWidgetPropertiesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageAccountsWidgetPropertiesService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageAccountsWidgetPropertiesService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLWFjY291bnRzLXdpZGdldC1wcm9wZXJ0aWVzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL3Byb2R1Y3Qtc3VtbWFyeS1tYW5hZ2UtYWNjb3VudHMtd2lkZ2V0LWFuZy9zcmMvbWFuYWdlLWFjY291bnRzLXdpZGdldC1wcm9wZXJ0aWVzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQUd2QyxNQUFNLGlCQUFpQixHQUFHO0lBQ3hCLGdCQUFnQixFQUFFLGlCQUFpQjtJQUNuQyxZQUFZLEVBQUUsaUJBQWlCO0lBQy9CLFNBQVMsRUFBRSxNQUFNO0lBQ2pCLElBQUksRUFBRSxFQUFFO0NBQ1QsQ0FBQztBQUVGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBK0JHO0FBR0gsTUFBTSxPQUFPLHFDQUFxQztJQU9oRDtRQU5pQixzQkFBaUIsR0FBRyxJQUFJLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBTTdELENBQUM7SUFKaEIsSUFBVyxnQkFBZ0I7UUFDekIsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUM7SUFDaEMsQ0FBQztJQUlNLFNBQVMsQ0FBQyxNQUFpQztRQUNoRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDO1lBQzFCLGdCQUFnQixFQUFFLE1BQU0sQ0FBQyxnQkFBZ0IsSUFBSSxpQkFBaUIsQ0FBQyxnQkFBZ0I7WUFDL0UsWUFBWSxFQUFFLE1BQU0sQ0FBQyxZQUFZLElBQUksaUJBQWlCLENBQUMsWUFBWTtZQUNuRSxTQUFTLEVBQUUsTUFBTSxDQUFDLFNBQVMsSUFBSSxpQkFBaUIsQ0FBQyxTQUFTO1lBQzFELElBQUksRUFBRSxNQUFNLENBQUMsSUFBSSxJQUFJLGlCQUFpQixDQUFDLElBQUk7U0FDNUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7bUlBaEJVLHFDQUFxQzt1SUFBckMscUNBQXFDOzRGQUFyQyxxQ0FBcUM7a0JBRGpELFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFdpZGdldFByb3BlcnRpZXMgfSBmcm9tICdAYmFja2Jhc2UvcHJvZHVjdC1zdW1tYXJ5LWNvbW1vbi1hbmcnO1xuXG5jb25zdCBkZWZhdWx0UHJvcGVydGllcyA9IHtcbiAgYnVzaW5lc3NGdW5jdGlvbjogJ1Byb2R1Y3QgU3VtbWFyeScsXG4gIHJlc291cmNlTmFtZTogJ1Byb2R1Y3QgU3VtbWFyeScsXG4gIHByaXZpbGVnZTogJ3ZpZXcnLFxuICBzaXplOiAyMCxcbn07XG5cbi8qKlxuICogU3RhdGUgbWFuYWdlbWVudCBmb3IgZmV0Y2hpbmcgYW5kIHN0b3Jpbmcgd2lkZ2V0IHByb3BlcnRpZXMgZnJvbSBpdHMgaW5wdXRzXG4gKlxuICogVGhpcyBzZXJ2aWNlIHJlbGllcyBvbiBwcm92aWRlcnMgZnJvbSBgUHJvZHVjdFN1bW1hcnlNYW5hZ2VBY2NvdW50c1dpZGdldE1vZHVsZWAuXG4gKlxuICogQHNlZSBQcm9kdWN0U3VtbWFyeU1hbmFnZUFjY291bnRzV2lkZ2V0TW9kdWxlXG4gKlxuICogQHVzYWdlTm90ZXNcbiAqXG4gKiAjIyMgRW5zdXJlIHRoZSBQcm9kdWN0U3VtbWFyeU1hbmFnZUFjY291bnRzV2lkZ2V0TW9kdWxlIGlzIGltcG9ydGVkIHRvIHlvdXIgY29tcG9uZW50IG1vZHVsZVxuICpcbiAqIGBgYHRzXG4gKiBATmdNb2R1bGUoe1xuICogICAuLi5cbiAqICAgaW1wb3J0czogW1xuICogICAgIC4uLlxuICogICAgIFByb2R1Y3RTdW1tYXJ5TWFuYWdlQWNjb3VudHNXaWRnZXRNb2R1bGUsXG4gKiAgIF0sXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIE15V2lkZ2V0TW9kdWxlIHt9XG4gKiBgYGBcbiAqXG4gKiAjIyMgSW5qZWN0IHRoaXMgc2VydmljZSBpbnRvIHlvdXIgY29tcG9uZW50XG4gKlxuICogYGBgdHNcbiAqIEBDb21wb25lbnQoe1xuICogICAuLi5cbiAqICAgcHJvdmlkZXJzOiBbTWFuYWdlQWNjb3VudHNXaWRnZXRQcm9wZXJ0aWVzU2VydmljZV0sXG4gKiB9KVxuICogIGV4cG9ydCBjbGFzcyBNeUNvbXBvbmVudCB7XG4gKiBgYGBcbiAqL1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTWFuYWdlQWNjb3VudHNXaWRnZXRQcm9wZXJ0aWVzU2VydmljZSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgcHJvcGVydGllc0NvbmZpZyQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGRlZmF1bHRQcm9wZXJ0aWVzKTtcblxuICBwdWJsaWMgZ2V0IHdpZGdldFByb3BlcnRpZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMucHJvcGVydGllc0NvbmZpZyQ7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgcHVibGljIHNldENvbmZpZyhjb25maWc6IFBhcnRpYWw8V2lkZ2V0UHJvcGVydGllcz4pIHtcbiAgICB0aGlzLnByb3BlcnRpZXNDb25maWckLm5leHQoe1xuICAgICAgYnVzaW5lc3NGdW5jdGlvbjogY29uZmlnLmJ1c2luZXNzRnVuY3Rpb24gfHwgZGVmYXVsdFByb3BlcnRpZXMuYnVzaW5lc3NGdW5jdGlvbixcbiAgICAgIHJlc291cmNlTmFtZTogY29uZmlnLnJlc291cmNlTmFtZSB8fCBkZWZhdWx0UHJvcGVydGllcy5yZXNvdXJjZU5hbWUsXG4gICAgICBwcml2aWxlZ2U6IGNvbmZpZy5wcml2aWxlZ2UgfHwgZGVmYXVsdFByb3BlcnRpZXMucHJpdmlsZWdlLFxuICAgICAgc2l6ZTogY29uZmlnLnNpemUgfHwgZGVmYXVsdFByb3BlcnRpZXMuc2l6ZSxcbiAgICB9KTtcbiAgfVxufVxuIl19