import { Component, Input, Directive, Output, EventEmitter } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { getAccountAlias, hasExternalInfo, ResponsiveContainerComponent, } from '@backbase/product-summary-common-ang';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/product-summary-ui";
import * as i2 from "@backbase/ui-ang/input-inline-edit";
import * as i3 from "@backbase/ui-ang/amount";
import * as i4 from "@backbase/ui-ang/switch";
import * as i5 from "@angular/common";
import * as i6 from "@backbase/ui-ang/tooltip-directive";
import * as i7 from "@angular/forms";
/**
 * A component for displaying an account item
 *
 * The following extension slots are available in this component:
 *
 * - `ManageAccountItemCustomizableDirective`
 *
 * @see ManageAccountItemCustomizableDirective
 *
 * @usageNotes
 *
 * ### Display details
 *
 * ```html
 * <bb-manage-account-item
 *   [item]="item"
 *   [productAliasMaxLength]="hostRef.aliasMaxLength"
 *   (toggleVisibility)="hostRef.toggleVisibility($event)"
 *   (updateAlias)="hostRef.updateAlias(item.id, $event)"
 * ></bb-manage-account-item>
 * ```
 *
 * @ngModule ProductSummaryManageAccountsWidgetModule
 */
export class ManageAccountItemComponent extends ResponsiveContainerComponent {
    /**
     * @internal
     */
    constructor(element, changeDetector) {
        super(element, changeDetector);
        /**
         * @internal
         */
        this.hostRef = this;
        /**
         * Returns the `alias` of the passed `account`
         */
        this.getAlias = getAccountAlias;
        /**
         * Returns true if product has external info
         */
        this.hasExternalInfo = hasExternalInfo;
        /**
         * Defines whether the product kind icon should be displayed
         *
         * @default true
         */
        this.showIcon = true;
        /**
         * Event (Output) that emits when item visibility is changed
         */
        this.toggleVisibility = new EventEmitter();
        /**
         * Event (Output) that emits when item alias is changed
         */
        this.updateAlias = new EventEmitter();
    }
    /**
     * Event handler for the `click` event of `bb-switch-ui`
     * emits the `item` to the `toggleVisibility` output
     *
     * @param item
     */
    updateVisibility(item) {
        this.toggleVisibility.emit(item);
    }
    /**
     * Event handler for the `accept` event of `bb-input-inline-edit-ui`
     * emits the `alias` to the `updateAlias`
     *
     * @param alias
     */
    onAliasUpdate(alias) {
        this.updateAlias.emit(alias);
    }
    /**
     * Returns visibility status of product summary item
     *
     * @param item
     */
    checkItemVisibility(item) {
        const visibility = item.userPreferences ? item.userPreferences.visible : item.visible;
        return visibility !== undefined ? visibility : item.visible;
    }
}
ManageAccountItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageAccountItemComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
ManageAccountItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ManageAccountItemComponent, selector: "bb-manage-account-item", inputs: { item: "item", productAliasMaxLength: "productAliasMaxLength", showIcon: "showIcon" }, outputs: { toggleVisibility: "toggleVisibility", updateAlias: "updateAlias" }, usesInheritance: true, ngImport: i0, template: "<ng-container\n  bbManageAccountItemCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"item\"\n>\n</ng-container>\n\n<ng-template\n  bbManageAccountItemCustomizable\n  let-hostRef\n  let-item=\"context\"\n>\n  <ng-container [ngSwitch]=\"hostRef.responsiveView\">\n    <!-- Mobile View -->\n    <ng-container *ngSwitchCase=\"'mobile'\">\n      <div class=\"row d-flex\">\n        <div class=\"col-12\" data-role=\"product-kind-info\">\n          <ng-container *ngIf=\"hostRef.hasExternalInfo(item)\">\n            <ng-container *ngTemplateOutlet=\"accountExternalInfo; context: { withLogo: hostRef.showIcon }\"></ng-container>\n          </ng-container>\n          <ng-container *ngTemplateOutlet=\"accountInternalInfo; context: { withLogo: (hostRef.showIcon && !hostRef.hasExternalInfo(item)) }\"></ng-container>\n          <div class=\"bb-block bb-block--xs\"></div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"bb-block bb-block--sm\"></div>\n          <ng-container *ngTemplateOutlet=\"changeVisibilityColumn\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n\n    <!-- Tablet View -->\n    <ng-container *ngSwitchCase=\"'tablet'\">\n      <div class=\"row d-flex align-items-center flex-nowrap\">\n        <div class=\"col p-0 pl-3 d-flex flex-basis-0 flex-grow-0\">\n          <ng-container *ngTemplateOutlet=\"accountLogo\"></ng-container>\n        </div>\n        <div class=\"col flex-grow-1 row align-items-center flex-wrap\">\n          <div class=\"col-12 col-md-6\" data-role=\"product-kind-info\">\n            <ng-container *ngIf=\"hostRef.hasExternalInfo(item)\">\n              <ng-container *ngTemplateOutlet=\"accountExternalInfo\"></ng-container>\n            </ng-container>\n            <ng-container *ngTemplateOutlet=\"accountInternalInfo; context: { withProductKindName: true }\"></ng-container>\n          </div>\n          <div class=\"col-12 col-md-auto flex-grow-1\">\n            <div class=\"bb-block bb-block--sm\"></div>\n            <ng-container *ngTemplateOutlet=\"changeVisibilityColumn\"></ng-container>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <!-- Screen View -->\n    <ng-container *ngSwitchDefault>\n      <div class=\"row d-flex align-items-center flex-nowrap\">\n        <div class=\"col p-0 pl-3 d-flex flex-basis-0 flex-grow-0\">\n          <ng-container *ngTemplateOutlet=\"accountLogo\"></ng-container>\n        </div>\n        <div class=\"col flex-grow-1 row align-items-center flex-wrap\">\n          <div class=\"col-12 col-md-6\" data-role=\"product-kind-info\">\n            <ng-container *ngIf=\"hostRef.hasExternalInfo(item)\">\n              <ng-container *ngTemplateOutlet=\"accountExternalInfo\"></ng-container>\n            </ng-container>\n            <ng-container *ngTemplateOutlet=\"accountInternalInfo\"></ng-container>\n          </div>\n          <div class=\"col\" data-role=\"account-kind-name\">\n            <bb-product-kind-name [name]=\"item.productKindName\"></bb-product-kind-name>\n          </div>\n          <div class=\"col-12 col-md-auto flex-grow-1\">\n            <ng-container *ngTemplateOutlet=\"changeVisibilityColumn\"></ng-container>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #accountLogo>\n    <bb-product-summary-account-logo\n      *ngIf=\"hostRef.showIcon\"\n      data-role=\"manage-account-item__logo\"\n      [logoSrc]=\"item?.financialInstitution?.logo\"\n      [productKindName]=\"item.productKindName\"\n      iconColor=\"secondary\"\n    ></bb-product-summary-account-logo>\n  </ng-template>\n\n  <ng-template #accountExternalInfo let-withLogo=\"withLogo\">\n    <div class=\"bb-block bb-block--xs bb-stack bb-stack--density-sm\">\n      <div class=\"bb-stack__item\" *ngIf=\"withLogo\">\n        <bb-product-summary-account-logo\n          data-role=\"manage-account-item__logo\"\n          [logoSrc]=\"item.financialInstitution?.logo\"\n          iconSize=\"sm\"\n          logoSize=\"sm\"\n          [productKindName]=\"item.productKindName\"\n          iconColor=\"secondary\"\n        ></bb-product-summary-account-logo>\n      </div>\n      <span class=\"bb-stack__item bb-text-support bb-subtitle bb-text-bold\"\n            *ngIf=\"item.financialInstitution?.name; else externalBankNameDefault\">{{item.financialInstitution?.name}}</span>\n      <ng-template #externalBankNameDefault>\n        <span class=\"bb-stack__item bb-text-support bb-subtitle bb-text-bold\"\n              i18n=\"External account|Default bank name for external accounts@@manage.account.item\">\n          External account\n        </span>\n      </ng-template>\n    </div>\n  </ng-template>\n\n  <ng-template #accountInternalInfo let-withLogo=\"withLogo\" let-withProductKindName=\"withProductKindName\">\n    <div *ngIf=\"withProductKindName\" class=\"bb-text-support bb-subtitle\" data-role=\"account-kind-name\">\n      <bb-product-kind-name [name]=\"item.productKindName\"></bb-product-kind-name>\n    </div>\n    <div\n      data-role=\"account-name\"\n      class=\"bb-block bb-block--xs bb-stack bb-stack--density-sm bb-text-bold break-word\"\n    >\n      <bb-product-summary-account-logo\n        data-role=\"manage-account-item__logo\"\n        *ngIf=\"withLogo\"\n        class=\"bb-stack__item\"\n        iconSize=\"sm\"\n        logoSize=\"sm\"\n        [productKindName]=\"item.productKindName\"\n        iconColor=\"secondary\"\n      ></bb-product-summary-account-logo>\n      <bb-input-inline-edit-ui\n        [inputText]=\"hostRef.getAlias(item)\"\n        [maxLength]=\"hostRef.productAliasMaxLength\"\n        [required]=\"false\"\n        (accept)=\"hostRef.onAliasUpdate($event)\"\n        ariaLabelEdit=\"Edit alias for {{hostRef.getAlias(item)}}\"\n        i18n-ariaLabelEdit=\"Edit alias|Inline editor aria label@@manage.account.item.alias-inline-edit.aria-label\"\n      ></bb-input-inline-edit-ui>\n    </div>\n    <bb-product-number\n      class=\"bb-text-support bb-subtitle\"\n      data-role=\"account-number\"\n      [product]=\"item\"\n    ></bb-product-number>\n    <bb-arrangement-state-indicator\n      *ngIf=\"item.state\"\n      [state]=\"item.state.state\"\n      [hideStateTextForMobile]=\"false\"\n      data-role=\"arrangement-state\"\n    ></bb-arrangement-state-indicator>\n  </ng-template>\n\n  <ng-template #changeVisibilityColumn>\n    <div class=\"bb-stack\">\n      <bb-amount-ui\n        data-role=\"account-amount\"\n        class=\"bb-stack__item bb-stack__item--push-right bb-highlight bb-stack__item--fill--md-down\"\n        [amount]=\"item.bookedBalance || item.principalAmount || item.currentInvestmentValue\"\n        [currency]=\"item.currency\"\n      ></bb-amount-ui>\n      <div class=\"bb-stack__item\">\n        <bb-switch-ui\n          class=\"bb-stack\"\n          (click)=\"hostRef.updateVisibility(item)\"\n          [ngModel]=\"hostRef.checkItemVisibility(item)\"\n          bbTooltip=\"Manage Visibility\"\n          i18n-bbTooltip=\"Manage account visibility|@@manage.account.item.switch.tooltip.showHide\"\n          triggers=\"hover, focus\"\n          aria-label=\"{{hostRef.getAlias(item)}} Visibility\"\n          i18n-aria-label=\"Account visibility|Accessibility label for the switching account visibility component\n              @@manage.account.item.switch.aria.label.showHide\"\n          aria-pressed=\"true\"\n        ></bb-switch-ui>\n      </div>\n    </div>\n  </ng-template>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.ProductKindNameComponent; }), selector: "bb-product-kind-name", inputs: ["name", "isPlural"] }, { type: i0.forwardRef(function () { return i1.ProductSummaryAccountLogoComponent; }), selector: "bb-product-summary-account-logo", inputs: ["logoSrc", "productKindName", "defaultProductKindName", "iconColor", "iconSize", "logoSize"] }, { type: i0.forwardRef(function () { return i2.InputInlineEditComponent; }), selector: "bb-input-inline-edit-ui", inputs: ["state", "canEdit", "hasLoadingState", "inputInlineTemplate", "inputText", "maxLength", "minLength", "maxValue", "minValue", "autofocus", "ariaLabelAccept", "ariaLabelCancel", "ariaLabelEdit", "tooltipAccept", "tooltipCancel", "tooltipEdit", "autocomplete", "pattern", "hint"], outputs: ["stateChange", "cancel", "accept"] }, { type: i0.forwardRef(function () { return i1.ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0.forwardRef(function () { return i1.ArrangementStateIndicatorComponent; }), selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }, { type: i0.forwardRef(function () { return i3.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0.forwardRef(function () { return i4.SwitchComponent; }), selector: "bb-switch-ui", inputs: ["labelPosition"] }], directives: [{ type: i0.forwardRef(function () { return ManageAccountItemCustomizableDirective; }), selector: "[bbManageAccountItemCustomizable]" }, { type: i0.forwardRef(function () { return i5.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0.forwardRef(function () { return i5.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0.forwardRef(function () { return i5.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i5.NgTemplateOutlet; }), selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i0.forwardRef(function () { return i5.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }, { type: i0.forwardRef(function () { return i6.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i0.forwardRef(function () { return i7.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i7.NgModel; }), selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageAccountItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-manage-account-item',
                    templateUrl: 'manage-account-item.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { item: [{
                type: Input
            }], productAliasMaxLength: [{
                type: Input
            }], showIcon: [{
                type: Input
            }], toggleVisibility: [{
                type: Output
            }], updateAlias: [{
                type: Output
            }] } });
/**
 * This is an extension slot to be used for customizing the entire component
 *
 * @usageNotes
 *
 * ### Customize the component
 *
 * ```html
 * <ng-template
 *   bbManageAccountItemCustomizable
 *   let-hostRef
 *   let-item="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryManageAccountsWidgetModule
 */
export class ManageAccountItemCustomizableDirective extends BbTemplate {
}
ManageAccountItemCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageAccountItemCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ManageAccountItemCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ManageAccountItemCustomizableDirective, selector: "[bbManageAccountItemCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageAccountItemCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbManageAccountItemCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,