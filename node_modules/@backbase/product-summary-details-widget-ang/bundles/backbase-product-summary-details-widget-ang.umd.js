(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@backbase/foundation-ang/core'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/amount'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/payment-card-number-pipe'), require('@backbase/ui-ang/payment-card'), require('@backbase/ui-ang/tooltip-directive'), require('@backbase/ui-ang/notification'), require('@backbase/product-summary-ui'), require('@backbase/product-summary-common-ang'), require('rxjs'), require('rxjs/operators'), require('@angular/router')) :
    typeof define === 'function' && define.amd ? define('@backbase/product-summary-details-widget-ang', ['exports', '@angular/core', '@angular/common', '@backbase/foundation-ang/core', '@backbase/ui-ang/button', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/amount', '@backbase/ui-ang/icon', '@backbase/ui-ang/payment-card-number-pipe', '@backbase/ui-ang/payment-card', '@backbase/ui-ang/tooltip-directive', '@backbase/ui-ang/notification', '@backbase/product-summary-ui', '@backbase/product-summary-common-ang', 'rxjs', 'rxjs/operators', '@angular/router'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["product-summary-details-widget-ang"] = {}), global.ng.core, global.ng.common, global.i1$1, global.i17, global.i14, global.i15, global.i3, global.i2, global.paymentCardNumberPipe, global.i4, global.i5, global.i3$1, global.i1, global.i6, global.rxjs, global.rxjs.operators, global.ng.router));
})(this, (function (exports, i0, i4$1, i1$1, i17, i14, i15, i3, i2, paymentCardNumberPipe, i4, i5, i3$1, i1, i6, rxjs, operators, i1$2) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$1);
    var i17__namespace = /*#__PURE__*/_interopNamespace(i17);
    var i14__namespace = /*#__PURE__*/_interopNamespace(i14);
    var i15__namespace = /*#__PURE__*/_interopNamespace(i15);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$2);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var AccountAccessDenied = /** @class */ (function () {
        function AccountAccessDenied(response) {
            this.response = response;
            this.kind = 'AccountAccessDenied';
            this.messages = ((response.error || {}).errors || []).map(function (e) { return e.message; });
        }
        return AccountAccessDenied;
    }());
    var AccountBadRequest = /** @class */ (function () {
        function AccountBadRequest(response) {
            this.response = response;
            this.kind = 'ProductKindsBadRequest';
            this.messages = ((response.error || {}).errors || []).map(function (e) { return e.message; });
        }
        return AccountBadRequest;
    }());
    var AccounttNotFound = /** @class */ (function () {
        function AccounttNotFound(response) {
            this.response = response;
            this.kind = 'ProductKindstNotFound';
            this.messages = ((response.error || {}).errors || []).map(function (e) { return e.message; });
        }
        return AccounttNotFound;
    }());
    var AccountConnectivityError = /** @class */ (function () {
        function AccountConnectivityError(response) {
            this.response = response;
            this.kind = 'ProductKindsConnectivityError';
            this.messages = ((response.error || {}).errors || []).map(function (e) { return e.message; });
        }
        return AccountConnectivityError;
    }());
    var AccountUnknownError = /** @class */ (function () {
        function AccountUnknownError(response) {
            this.response = response;
            this.kind = 'ProductKindsUnknownError';
            this.messages = [response.message];
        }
        return AccountUnknownError;
    }());
    var parseError = function (error) {
        if (error.error instanceof ErrorEvent) {
            return new AccountUnknownError(error);
        }
        else {
            switch (error.status) {
                case 0:
                    return new AccountConnectivityError(error);
                case 400:
                    return new AccountBadRequest(error);
                case 401:
                    return new AccountAccessDenied(error);
                case 403:
                    return new AccountAccessDenied(error);
                case 404:
                    return new AccounttNotFound(error);
                default:
                    return new AccountUnknownError(error);
            }
        }
    };

    /**
     * Service for fetching and storing product summary account details.
     *
     * This service relies on providers from `ProductSummaryDetailsWidgetModule`.
     *
     * @see ProductSummaryDetailsWidgetModule
     *
     * @usageNotes
     *
     * ### Ensure the ProductSummaryDetailsWidgetModule is imported to your component module
     *
     * ```ts
     * @NgModule({
     *   ...
     *   imports: [
     *     ...
     *     ProductSummaryDetailsWidgetModule,
     *   ],
     * })
     * export class MyWidgetModule {}
     * ```
     *
     * ### Inject this service into your component
     *
     * ```ts
     * @Component({
     *   ...
     *   providers: [AccountService],
     * })
     *  export class MyComponent {
     * ```
     */
    var AccountService = /** @class */ (function () {
        function AccountService(productSummaryAccountService) {
            var _this = this;
            this.productSummaryAccountService = productSummaryAccountService;
            this.arrangementId = new rxjs.ReplaySubject(1);
            /**
             * If the fetching of the account details failed, this property
             * holds the errors coming from the server
             */
            this.error = new rxjs.BehaviorSubject(undefined);
            /**
             * Defines the loading state during the loading of data.
             */
            this.isLoading = new rxjs.BehaviorSubject(false);
            /**
             * Fetches from the server and returns product details for `arrangementId`
             */
            this.productDetailsById = this.arrangementId.pipe(operators.distinctUntilChanged(function (a, b) { return i6.isEqual(a, b) && !_this.error.value; }), operators.filter(function (arrangementId) { return !!arrangementId; }), operators.tap(function () { return _this.error.next(undefined); }), operators.tap(function () { return _this.isLoading.next(true); }), operators.switchMap(function (id) { return _this.productSummaryAccountService.getAccountById(id).pipe(operators.catchError(function (error) {
                _this.error.next(parseError(error));
                return rxjs.of(undefined);
            })); }), operators.tap(function () { return _this.isLoading.next(false); }));
        }
        /**
         * Subscribes on the passed `arrangementId`
         * Causes refetching data
         *
         * @param arrangementId
         */
        AccountService.prototype.loadProductDetailsFrom = function (arrangementId) {
            arrangementId.subscribe(this.arrangementId);
        };
        /**
         * Fetches an unmasked attribute from the server for the given attribute name
         *
         * @param requestParameters
         */
        AccountService.prototype.getUnmaskedAttribute = function (requestParameters) {
            return this.productSummaryAccountService.getUnmaskedAttribute(requestParameters);
        };
        return AccountService;
    }());
    AccountService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountService, deps: [{ token: i6__namespace.ProductSummaryAccountsService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    AccountService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i6__namespace.ProductSummaryAccountsService }]; } });

    /**
     * Displays details for a product with the `'Current Account'` type
     *
     * The following extension slots are available in this component:
     *
     * - `ProductSummaryDetailsCurrentAccountCustomizableDirective`
     *
     * @see ProductSummaryDetailsCurrentAccountCustomizableDirective
     *
     * @usageNotes
     *
     * ### Display details
     *
     * ```html
     * <bb-current-account-details
     *   [product]="item"
     *   [maskableAttributes]="hostRef.maskableAttributes"
     *   (unmaskAttribute)="hostRef.onUnmaskAttribute($event, item)"
     *   (maskAttribute)="hostRef.onMaskAttribute($event, item)">
     * </bb-current-account-details>
     * ```
     *
     * @ngModule ProductSummaryDetailsWidgetModule
     */
    var CurrentAccountDetailsComponent = /** @class */ (function (_super) {
        __extends(CurrentAccountDetailsComponent, _super);
        function CurrentAccountDetailsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            /**
             * @internal
             */
            _this.hostRef = _this;
            return _this;
        }
        /**
         * Maps the passed `DebitCardItem` to `PaymentCard`
         *
         * @param debitCard
         */
        CurrentAccountDetailsComponent.prototype.debitCardToPaymentCardMapper = function (debitCard) {
            return {
                number: debitCard.number || '',
                expirationDate: debitCard.expiryDate ? new Date(debitCard.expiryDate) : undefined,
                name: '',
                vendor: '',
                cardName: '',
            };
        };
        return CurrentAccountDetailsComponent;
    }(i6.ProductSummaryAccountDetailsBaseComponent));
    CurrentAccountDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrentAccountDetailsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    CurrentAccountDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CurrentAccountDetailsComponent, selector: "bb-current-account-details", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductSummaryDetailsCurrentAccountCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    product: product\n  }\">\n</ng-container>\n<ng-template\n  bbProductSummaryDetailsCurrentAccountCustomizable\n  let-hostRef\n  let-product=\"context.product\"\n>\n  <!-- General -->\n  <div class=\"bb-product-summary-details card\" data-role=\"general-details\">\n    <div class=\"card-header\">\n      <h3 i18n=\"General|General Section label@@product.details.current.account.label.general.section\">\n        General\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.productTypeName || product.IBAN\">\n        <!-- Account Type -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.productTypeName\">\n          <div class=\"bb-block bb-block--xs bb-text-bold\"\n               i18n=\"Account Type|Account type label current account@@product.details.current.account.label.productTypeName\"\n          >Account Type\n          </div>\n          <div data-role=\"productTypeName\">{{product.productTypeName}}</div>\n        </div>\n        <!-- IBAN -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.IBAN\">\n          <div class=\"bb-block bb-block--xs bb-text-bold\"\n               i18n=\"IBAN|IBAN label current account@@product.details.current.account.label.iban\"\n          >IBAN\n          </div>\n          <div class=\"bb-stack bb-stack--density-sm\" >\n            <span data-role=\"current-account-iban\"\n                  class=\"bb-stack__item\">\n              <bb-product-number\n                type=\"iban\"\n                [number]=\"product.IBAN\"\n                [unmaskable]=\"\n                  !(product.financialInstitutionId | bbIsDefined) &&\n                  hostRef.maskableAttribute.IBAN | bbIsInArray: product.unmaskableAttributes\"\n                [masked]=\"hostRef.isMasked(hostRef.maskableAttribute.IBAN)\"\n                (unmask)=\"hostRef.onUnmaskAttribute($event)\"\n                (mask)=\"hostRef.onMaskAttribute($event)\"\n              ></bb-product-number>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.availableBalance | bbIsDefined) ||\n                   product.accountHolderNames\">\n        <!-- Available Balance -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.availableBalance | bbIsDefined\">\n          <div class=\"bb-block bb-block--xs bb-text-bold\"\n               i18n=\"Available Balance|Available Balance label current account@@product.details.current.account.label.availableBalance\"\n          >Available Balance\n          </div>\n          <div>\n            <bb-amount-ui\n              data-role=\"current-account-availableBalance\"\n              [currency]=\"product.currency\"\n              [amount]=\"product.availableBalance\">\n            </bb-amount-ui>\n          </div>\n        </div>\n        <!--  Account Owner -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountHolderNames\">\n          <div class=\"bb-block bb-block--xs bb-text-bold\"\n               i18n=\"Account Owner(s)|Account Owner label current account@@product.details.current.account.label.accountHolderNames\"\n          >Account Owner(s)\n          </div>\n          <div data-role=\"current-account-accountHolderNames\">{{product.accountHolderNames}}</div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.bankBranchCode | bbIsDefined) || (product.bankBranchCode2 | bbIsDefined)\">\n        <!-- Branch Code -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"ACH Routing Number|Branch Code label current account@@account.details.current.account.label.bankBranchCode\">\n            ACH Routing Number\n          </div>\n          <div data-role=\"bankBranchCode\">\n            {{ product.bankBranchCode }}\n          </div>\n        </div>\n        <!-- Branch Code 2 -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode2 | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"FedWire Routing Number|Branch Code 2 label current account@@account.details.current.account.label.bankBranchCode2\">\n            FedWire Routing Number\n          </div>\n          <div data-role=\"bankBranchCode2\">\n            {{ product.bankBranchCode2 }}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.state || product?.finincialInstitution?.name\">\n        <!--  Account Status -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.state?.state\">\n          <div class=\"bb-block bb-block--xs bb-text-bold\"\n               i18n=\"Account Status|Account Status label@@product.details.current.account.label.accountStatus\"\n          >Account Status\n          </div>\n          <bb-arrangement-state-indicator\n            data-role=\"account-details-accountStatus\"\n            [showIcon]=\"false\"\n            [showActive]=\"true\"\n            [state]=\"product.state.state\"\n          ></bb-arrangement-state-indicator>\n        </div>\n\n        <!-- Bank name -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.financialInstitution?.name\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Bank Name|Bank Name label current account\n                        @@product.details.current.account.label.financialInstitution.name\"\n            >Bank Name</span>\n          </div>\n          <div data-role=\"current-account-financialInstitution-name\">\n            {{product?.financialInstitution?.name}}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.lastSyncDate\">\n        <!-- Last sync date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastSyncDate\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Last sync|Last sync label@@product.details.current.account.label.lastSyncDate\"\n          >Last sync\n          </div>\n          <div data-role=\"current-account-lastSyncDate\">\n            {{ product.lastSyncDate | bbDateUpdatedAgo }}\n          </div>\n        </div>\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.lastSyncDate\"></div>\n        <!-- Placeholder -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"></div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Interest details -->\n  <div class=\"bb-product-summary-details card\" data-role=\"interest-details\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Interest Details|Interest Details label current account@@product.details.current.account.label.interest.section\">\n        Interest Details\n      </h3>\n    </div>\n\n    <div class=\"card-body\">\n\n      <div class=\"bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--lg': (product.interestDetails?.lastYearAccruedInterest | bbIsDefined)}\"\n           *ngIf=\"(product.accountInterestRate | bbIsDefined) || (product.accruedInterest | bbIsDefined)\">\n        <!-- Interest Rate -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.accountInterestRate | bbIsDefined)\">\n          <div class=\"bb-block bb-block--xs bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Interest Rate|Interest Rate label current account@@product.details.current.account.label.interestRate\">\n                Interest Rate\n              </span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Interest Rate\"\n              i18n-aria-label=\"Toggle tooltip for Interest Rate|@@product.details.current.account.interestRate.aria.label.openclose\"\n              bbTooltip=\"The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal\"\n              i18n-bbTooltip=\"Interest Rate info|Interest Rate tooltip info@@product.details.current.account.tooltip.interestRate\"\n              triggers=\"focus hover click\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"current-account-accountInterestRate\">{{product.accountInterestRate}}%</div>\n        </div>\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.accountInterestRate | bbIsDefined) &&\n                    (product.accruedInterest | bbIsDefined)\"></div>\n\n        <!-- Accrued Interest -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.accruedInterest | bbIsDefined)\">\n          <div class=\"bb-block bb-block--xs bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Accrued Interest|Accrued Interest label current account@@product.details.current.account.label.accruedInterest\"\n              >\n                Accrued Interest\n              </span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Accrued Interest\"\n              i18n-aria-label=\"Toggle tooltip for Accrued Interest|@@product.details.current.account.accruedInterest.aria.label.openclose\"\n              bbTooltip=\"The interest that is earned (credit interest) or due (debit interest) but not settled yet\"\n              i18n-bbTooltip=\"Accrued Interest info|Accrued Interest tooltip info@@product.details.current.account.tooltip.accruedInterest\"\n              triggers=\"focus hover click\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"current-account-accruedInterest\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.accruedInterest\">\n          </bb-amount-ui>\n        </div>\n      </div>\n      <div class=\"bb-stack bb-stack--wrap\"\n           *ngIf=\"(product.interestDetails?.lastYearAccruedInterest | bbIsDefined)\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.interestDetails?.lastYearAccruedInterest | bbIsDefined)\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span i18n=\"Last year\u2019s accrued interest|Last year\u2019s accrued interest label current account\n            @@product.details.current-account.label.account.lastYearAccruedInterest\"\n                  class=\"bb-text-bold bb-stack__item\">Last year\u2019s accrued interest</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Last year\u2019s accrued interest\"\n                    i18n-aria-label=\"Toggle tooltip for Last year\u2019s accrued interest|@@product.details.current-account.lastYearAccruedInterest.aria.label.openclose\"\n                    bbTooltip=\"Last year\u2019s accrued interest\"\n                    i18n-bbTooltip=\"Last year\u2019s accrued interest info|Last year\u2019s accrued interest tooltip info current account@@product.details.current-account.tooltip.lastYearAccruedInterest\"\n                    triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n                  data-role=\"current-account-lastYearAccruedInterest\"\n                  [currency]=\"product.currency\"\n                  [amount]=\"product.interestDetails?.lastYearAccruedInterest\">\n          </bb-amount-ui>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Overdraft details -->\n  <div class=\"bb-product-summary-details card\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Overdraft Details|Overdraft Details label@@product.details.current.account.label.overdraft.section\">\n        Overdraft Details\n      </h3>\n    </div>\n\n    <div class=\"card-body\">\n\n      <div class=\"bb-stack bb-stack--wrap\"\n           *ngIf=\"(product.accountInterestRate | bbIsDefined) || (product.creditLimitExpiryDate | bbIsDefined)\">\n\n        <!-- Overdraft Limit -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.creditLimit | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Overdraft Limit|Overdraft limit label current account@@product.details.current.account.label.overdraftLimit\">\n                Overdraft Limit\n              </span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Overdraft Limit\"\n              i18n-aria-label=\"Toggle tooltip for Overdraft Limit|@@product.details.current.account.overdraftLimit.aria.label.openclose\"\n              bbTooltip=\"Overdraft Limit\"\n              i18n-bbTooltip=\"Overdraft Limit info|Overdraft Limit tooltip info@@product.details.current.account.tooltip.overdraftLimit\"\n              triggers=\"focus hover click\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"current-account-creditLimit\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.creditLimit\">\n          </bb-amount-ui>\n        </div>\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.accountInterestRate && product.creditLimitExpiryDate\"></div>\n\n        <!-- Overdraft Expiry Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.creditLimitExpiryDate\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Overdraft Expiry Date|Overdraft Expiry Date label current account@@product.details.current.account.label.overdraftexpirydate\">\n                Overdraft Expiry Date\n              </span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Overdraft Expiry Date\"\n              i18n-aria-label=\"Toggle tooltip for Overdraft Expiry Date|@@product.details.current.account.overdraftexpirydate.aria.label.openclose\"\n              bbTooltip=\"Expiration date of the overdraft limit\"\n              i18n-bbTooltip=\"Overdraft Expiry Date info|Overdraft Expiry Date tooltip info@@product.details.current.account.tooltip.overdraftexpirydate\"\n              triggers=\"focus hover click\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"current-account-creditLimitExpiryDate\">\n            {{product.creditLimitExpiryDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!-- Other details -->\n  <div class=\"bb-product-summary-details card\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Other|Other label current account@@product.details.current.account.label.other.section\">\n        Other\n      </h3>\n    </div>\n\n    <div class=\"card-body\">\n\n      <div class=\"bb-stack bb-stack--wrap\"\n           *ngIf=\"product.accountOpeningDate || product.lastUpdateDate\">\n\n        <!-- Account Opening Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountOpeningDate\">\n          <div class=\"bb-block bb-block--xs bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Account Opening Date|Account Opening Date label current account@@product.details.current.account.label.accountOpeningDate\">\n                Account Opening Date\n              </span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Account Opening Date\"\n              i18n-aria-label=\"Toggle tooltip for Account Opening Date|@@product.details.current.account.accountOpeningDate.aria.label.openclose\"\n              bbTooltip=\"Account Opening Date\"\n              i18n-bbTooltip=\"Account Opening Date info|Account Opening Date tooltip info@@product.details.current.account.tooltip.accountOpeningDate\"\n              triggers=\"focus hover click\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"current-account-accountOpeningDate\">\n            {{product.accountOpeningDate | date: 'longDate'}}\n          </div>\n        </div>\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.accountOpeningDate && product.lastUpdateDate\"></div>\n\n        <!-- Last Updated Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastUpdateDate\">\n          <div class=\"bb-block bb-block--xs bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Last Updated Date|Last Updated Date label current account@@product.details.current.account.label.lastUpdateDate\">Last Updated Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Last Updated Date\"\n              i18n-aria-label=\"Toggle tooltip for Last Updated Date|@@product.details.current.account.lastUpdateDate.aria.label.openclose\"\n              bbTooltip=\"Last Updated Date\"\n              i18n-bbTooltip=\"Last Updated Date info|Last Updated Date tooltip info@@product.details.current.account.tooltip.lastUpdateDate\"\n              triggers=\"focus hover click\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"current-account-lastUpdateDate\">\n            {{product.lastUpdateDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Associated debit card -->\n  <div *ngIf=\"product?.debitCards?.length > 0\">\n    <div class=\"bb-block bb-block--xl\"></div>\n    <h3 class=\"bb-block bb-block--lg\"\n        i18n=\"Account details current account associated debit cards|Text to show account account associated debit cards\n      label@@product.details.current.account.label.associatedDebitCards\">\n      Associated Debit Cards\n    </h3>\n\n    <div class=\"bb-stack bb-stack--density-xl bb-stack--wrap\">\n      <bb-payment-card-ui\n        class=\"bb-stack__item bb-block bb-block--md\"\n        *ngFor=\"let debitCard of product.debitCards\"\n        [paymentCard]=\"hostRef.debitCardToPaymentCardMapper(debitCard)\"\n        [paymentCardNumberFormat]=\"'cardNumber'|bbProductNumberFormat\"\n      ></bb-payment-card-ui>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace.ArrangementStateIndicatorComponent; }), selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace.PaymentCardComponent; }), selector: "bb-payment-card-ui", inputs: ["paymentCard", "paymentCardNumberFormat"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsCurrentAccountCustomizableDirective; }), selector: "[bbProductSummaryDetailsCurrentAccountCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "bbIsInArray": i0__namespace.forwardRef(function () { return i6__namespace.IsInArrayPipe; }), "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }), "bbDateUpdatedAgo": i0__namespace.forwardRef(function () { return i6__namespace.DateUpdatedAgoPipe; }), "date": i0__namespace.forwardRef(function () { return i4__namespace$1.DatePipe; }), "bbProductNumberFormat": i0__namespace.forwardRef(function () { return i6__namespace.ProductNumberFormatPipe; }) }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrentAccountDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-current-account-details',
                        templateUrl: 'current-account-details.component.html',
                        //todo: either remove this line or add it to the rest of details components.
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing details
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsCurrentAccountCustomizable
     *   let-hostRef
     *   let-product="context.product">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsCurrentAccountCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsCurrentAccountCustomizableDirective, _super);
        function ProductSummaryDetailsCurrentAccountCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsCurrentAccountCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsCurrentAccountCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsCurrentAccountCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsCurrentAccountCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsCurrentAccountCustomizableDirective, selector: "[bbProductSummaryDetailsCurrentAccountCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsCurrentAccountCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsCurrentAccountCustomizable]',
                    }]
            }] });

    /**
     * Displays details for a product with the `'Savings Account'` type
     *
     * The following extension slots are available in this component:
     *
     * - `ProductSummaryDetailsSavingsAccountCustomizableDirective`
     *
     * @see ProductSummaryDetailsSavingsAccountCustomizableDirective
     *
     * @usageNotes
     *
     * ### Display details
     *
     * ```html
     * <bb-savings-account-details
     *   [product]="item"
     *   [maskableAttributes]="hostRef.maskableAttributes"
     *   (unmaskAttribute)="hostRef.onUnmaskAttribute($event, item)"
     *   (maskAttribute)="hostRef.onMaskAttribute($event, item)">
     * </bb-savings-account-details>
     * ```
     *
     * @ngModule ProductSummaryDetailsWidgetModule
     */
    var SavingsAccountDetailsComponent = /** @class */ (function (_super) {
        __extends(SavingsAccountDetailsComponent, _super);
        function SavingsAccountDetailsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            /**
             * @internal
             */
            _this.hostRef = _this;
            return _this;
        }
        return SavingsAccountDetailsComponent;
    }(i6.ProductSummaryAccountDetailsBaseComponent));
    SavingsAccountDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SavingsAccountDetailsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    SavingsAccountDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SavingsAccountDetailsComponent, selector: "bb-savings-account-details", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductSummaryDetailsSavingsAccountCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    product: product\n  }\">\n</ng-container>\n\n<ng-template\n  bbProductSummaryDetailsSavingsAccountCustomizable\n  let-hostRef\n  let-product=\"context.product\"\n>\n  <!-- General -->\n  <div class=\"bb-product-summary-details card\" data-role=\"general-details\">\n    <div class=\"card-header\">\n      <h3\n        i18n=\"General|General Section label\n      @@product.details.savings.account.label.general.section\">\n        General\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.productTypeName || product.BBAN\">\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.productTypeName\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Type|Account type label savings account\n          @@product.details.savings.account.label.productTypeName\">\n            Account Type\n          </div>\n          <div data-role=\"productTypeName\">{{product.productTypeName}}</div>\n        </div>\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.BBAN\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Number|Account number label savings account\n          @@product.details.savings.account.label.account.number\">\n            Account Number\n          </div>\n          <div class=\"bb-stack bb-stack--density-sm\">\n            <span data-role=\"savings-account-bban\"\n                  class=\"bb-stack__item\">\n              <bb-product-number\n                type=\"bban\"\n                [number]=\"product.BBAN\"\n                [unmaskable]=\"\n                  !(product.financialInstitutionId | bbIsDefined) &&\n                  hostRef.maskableAttribute.BBAN | bbIsInArray: product.unmaskableAttributes\"\n                [masked]=\"hostRef.isMasked(hostRef.maskableAttribute.BBAN)\"\n                (unmask)=\"hostRef.onUnmaskAttribute($event)\"\n                (mask)=\"hostRef.onMaskAttribute($event)\"\n              ></bb-product-number>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.bookedBalance | bbIsDefined) || product.accountHolderNames\">\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.bookedBalance | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span i18n=\"Account Balance|Account Balance label savings account\n                        @@product.details.savings.account.label.accountBalance\"\n                  class=\"bb-text-bold bb-stack__item\">Account Balance</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Account Balance\"\n              i18n-aria-label=\"Toggle tooltip for Account Balance|@@product.details.savings.account.bookedBalance.aria.label.openclose\"\n              bbTooltip=\"Account Balance\"\n              i18n-bbTooltip=\"Account Balance info|Account Balance tooltip info savings account@@product.details.savings.account.tooltip.bookedBalance\"\n              triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n\n          <bb-amount-ui\n            data-role=\"savings-account-bookedBalance\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.bookedBalance\">\n          </bb-amount-ui>\n        </div>\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountHolderNames\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Owner(s)|Account Owner label savings account\n          @@product.details.savings.account.label.accountHolderNames\">\n            Account Owner(s)\n          </div>\n          <div data-role=\"savings.account-accountHolderNames\">{{product.accountHolderNames}}</div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.bankBranchCode | bbIsDefined) || (product.bankBranchCode2 | bbIsDefined)\">\n        <!-- Branch Code -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"ACH Routing Number|Branch Code label savings account@@account.details.savings.account.label.bankBranchCode\">\n            ACH Routing Number\n          </div>\n          <div data-role=\"bankBranchCode\">\n            {{ product.bankBranchCode }}\n          </div>\n        </div>\n        <!-- Branch Code 2-->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode2 | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"FedWire Routing Number|Branch Code 2 label savings account@@account.details.savings.account.label.bankBranchCode2\">\n            FedWire Routing Number\n          </div>\n          <div data-role=\"bankBranchCode2\">\n            {{ product.bankBranchCode2 }}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.state || product?.financialInstitution?.name\">\n\n        <!-- Account status -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.state?.state\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Status|Account Status label\n                     @@product.details.savings.account.label.accountStatus\">\n            Account Status\n          </div>\n          <bb-arrangement-state-indicator\n                  data-role=\"account-details-accountStatus\"\n                  [showIcon]=\"false\"\n                  [showActive]=\"true\"\n                  [state]=\"product.state.state\"></bb-arrangement-state-indicator>\n        </div>\n\n        <!-- Bank name -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.financialInstitution?.name\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Bank Name|Bank Name label savings account\n                        @@product.details.savings.account.label.financialInstitution.name\"\n            >Bank Name</span>\n          </div>\n          <div data-role=\"savings-account-financialInstitution-name\">\n            {{product?.financialInstitution?.name}}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.remainingPeriodicTransfers | bbIsDefined) ||\n                  (product.lastSyncDate | bbIsDefined)\">\n\n        <!-- Remaining Periodic Transfers -->\n        <div class=\"bb-stack__item bb-stack__item--fill\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n            <span i18n=\"Remaining Periodic Transfers|Remaining Periodic Transfers label savings account\n                        @@product.details.savings.account.label.account.remainingPeriodicTransfers\"\n                  class=\"bb-text-bold bb-stack__item\">Remaining Periodic Transfers</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Remaining Periodic Transfers\"\n                    i18n-aria-label=\"Toggle tooltip for Remaining Periodic Transfers|@@product.details.savings.account.remainingPeriodicTransfers.aria.label.openclose\"\n                    bbTooltip=\"Remaining Periodic Transfers\"\n                    i18n-bbTooltip=\"Remaining Periodic Transfers info|Remaining Periodic Transfers tooltip info savings account@@product.details.savings.account.tooltip.remainingPeriodicTransfers\"\n                    triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"savings-account-remainingPeriodicTransfers\">\n            {{product.remainingPeriodicTransfers}}\n          </div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.remainingPeriodicTransfers | bbIsDefined) &&\n                    (product.lastSyncDate | bbIsDefined)\"></div>\n\n        <!-- Last sync date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastSyncDate\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Last sync|Last sync label@@product.details.savings.account.label.lastSyncDate\"\n          >Last sync\n          </div>\n          <div data-role=\"savings-account-lastSyncDate\">\n            {{ product.lastSyncDate | bbDateUpdatedAgo }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Interest Details -->\n  <div class=\"bb-product-summary-details card\" data-role=\"interest-details\">\n    <div class=\"card-header\">\n      <h3\n        i18n=\"Interest Details|Interest Details Section label\n      @@product.details.savings.account.label.interest.details.section\">\n        Interest Details\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--lg':\n              (product.minimumRequiredBalance | bbIsDefined) ||\n              (product.interestDetails?.lastYearAccruedInterest | bbIsDefined)\n           }\"\n           *ngIf=\"(product.accountInterestRate | bbIsDefined) ||\n                  (product.accruedInterest | bbIsDefined)\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountInterestRate | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n          <span i18n=\"Interest Rate|Interest Rate label savings account\n          @@product.details.savings.account.label.interestRate\"\n                class=\"bb-text-bold bb-stack__item\">Interest Rate</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Interest Rate\"\n              i18n-aria-label=\"Toggle tooltip for Interest Rate|@@product.details.savings.account.interestRate.aria.label.openclose\"\n              bbTooltip=\"The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal\"\n              i18n-bbTooltip=\"Interest Rate info|Interest Rate tooltip info savings account@@product.details.savings.accountt.tooltip.interestRate\"\n              triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"savings-account-accountInterestRate\">{{product.accountInterestRate}} %</div>\n        </div>\n        <div *ngIf=\"(product.accountInterestRate | bbIsDefined) &&\n                    (product.accruedInterest | bbIsDefined)\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accruedInterest | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n          <span i18n=\"Accrued Interest|Accrued Interest label savings account\n          @@product.details.savings.account.label.account.accruedInterest\"\n                class=\"bb-text-bold bb-stack__item\">Accrued Interest</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Accrued Interest\"\n              i18n-aria-label=\"Toggle tooltip for Accrued Interest|@@product.details.savings.account.accruedInterest.aria.label.openclose\"\n              bbTooltip=\"The interest that is earned (credit interest) or due (debit interest) but not settled yet\"\n              i18n-bbTooltip=\"Accrued Interest info|Accrued Interest tooltip info savings account@@product.details.savings.account.tooltip.accruedInterest\"\n              triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"savings-account-accruedInterest\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.accruedInterest\">\n          </bb-amount-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--lg':\n              (product.interestDetails?.dividendWithheldYTD | bbIsDefined) ||\n              (product.interestDetails?.annualPercentageYield | bbIsDefined)\n           }\"\n           *ngIf=\"(product.minimumRequiredBalance | bbIsDefined) ||\n                  (product.interestDetails?.lastYearAccruedInterest | bbIsDefined)\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.minimumRequiredBalance | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span i18n=\"Minimum required balance|Minimum required balance label savings account\n                        @@product.details.savings.account.label.account.minimumRequiredBalance\"\n                class=\"bb-text-bold bb-stack__item\">Minimum Required Balance</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Minimum Required Balance\"\n                    i18n-aria-label=\"Toggle tooltip for Minimum Required Balance|@@product.details.savings.account.minimumRequiredBalance.aria.label.openclose\"\n                    bbTooltip=\"Minimum amount that a customer must have in an account in order to receive some sort of service, such as keeping the account open or receive interest\"\n                    i18n-bbTooltip=\"Minimum required balance info|Minimum required balance tooltip info savings account@@product.details.savings.account.tooltip.minimumRequiredBalance\"\n                    triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n\n          <bb-amount-ui\n                  data-role=\"savings-account-minimumRequiredBalance\"\n                  [currency]=\"product.currency\"\n                  [amount]=\"product.minimumRequiredBalance\">\n          </bb-amount-ui>\n        </div>\n        <div *ngIf=\"(product.minimumRequiredBalance | bbIsDefined) &&\n                    (product.interestDetails?.lastYearAccruedInterest | bbIsDefined)\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.interestDetails?.lastYearAccruedInterest | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span i18n=\"Last year\u2019s accrued interest|Last year\u2019s accrued interest label savings account\n            @@product.details.savings.account.label.account.lastYearAccruedInterest\"\n                  class=\"bb-text-bold bb-stack__item\">Last year\u2019s accrued interest</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Last year\u2019s accrued interest\"\n                    i18n-aria-label=\"Toggle tooltip for Last year\u2019s accrued interest|@@product.details.savings.account.lastYearAccruedInterest.aria.label.openclose\"\n                    bbTooltip=\"Last year\u2019s accrued interest\"\n                    i18n-bbTooltip=\"Last year\u2019s accrued interest info|Last year\u2019s accrued interest tooltip info savings account@@product.details.savings.account.tooltip.lastYearAccruedInterest\"\n                    triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n                  data-role=\"savings-account-lastYearAccruedInterest\"\n                  [currency]=\"product.currency\"\n                  [amount]=\"product.interestDetails?.lastYearAccruedInterest\">\n          </bb-amount-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-stack bb-stack--wrap\"\n           *ngIf=\"(product.interestDetails?.dividendWithheldYTD | bbIsDefined) ||\n                  (product.interestDetails?.annualPercentageYield | bbIsDefined)\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.interestDetails?.dividendWithheldYTD | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n          <span i18n=\"Interest/Dividend Withheld YTD|Interest/Dividend Withheld YTD label savings account\n          @@product.details.savings.account.label.account.dividendWithheldYTD\"\n                class=\"bb-text-bold bb-stack__item\">Interest/Dividend Withheld YTD</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Interest/Dividend Withheld YTD\"\n              i18n-aria-label=\"Toggle tooltip for Interest/Dividend Withheld YTD|@@product.details.savings.account.dividendWithheldYTD.aria.label.openclose\"\n              bbTooltip=\"Toggle tooltip for Interest/Dividend Withheld YTD\"\n              i18n-bbTooltip=\"Toggle tooltip for Interest/Dividend Withheld YTD info|Toggle tooltip for Interest/Dividend Withheld YTD tooltip info savings account@@product.details.savings.account.tooltip.dividendWithheldYTD\"\n              triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n\n          <ng-container *ngIf=\"product.interestDetails?.dividendWithheldYTD | bbIsPercentValue; else dividendWithheldYTDAmount\">\n            {{product.interestDetails?.dividendWithheldYTD}}\n          </ng-container>\n          <ng-template #dividendWithheldYTDAmount>\n            <bb-amount-ui\n                    data-role=\"savings-account-dividendWithheldYTD\"\n                    [currency]=\"product.currency\"\n                    [amount]=\"product.interestDetails?.dividendWithheldYTD\">\n            </bb-amount-ui>\n          </ng-template>\n        </div>\n        <div *ngIf=\"(product.interestDetails?.dividendWithheldYTD | bbIsDefined) &&\n                    (product.interestDetails?.annualPercentageYield | bbIsDefined)\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.interestDetails?.annualPercentageYield | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span i18n=\"Annual Percentage Yield|Annual Percentage Yield label savings account\n            @@product.details.savings.account.label.account.annualPercentageYield\"\n                  class=\"bb-text-bold bb-stack__item\">Annual Percentage Yield</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Annual Percentage Yield\"\n                    i18n-aria-label=\"Toggle tooltip for Annual Percentage Yield|@@product.details.savings.account.annualPercentageYield.aria.label.openclose\"\n                    bbTooltip=\"Annual Percentage Yield\"\n                    i18n-bbTooltip=\"Annual Percentage Yield info|Annual Percentage Yield tooltip info savings account@@product.details.savings.account.tooltip.annualPercentageYield\"\n                    triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"savings-account-annualPercentageYield\">\n            {{product.interestDetails?.annualPercentageYield}}%\n          </div>\n      </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Other -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3\n        i18n=\"Other|Other label savings account\n      @@product.details.savings.account.label.other.section\">\n        Other\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountOpeningDate\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n          <span i18n=\"Account Opening Date|Account Opening Date label savings account\n          @@product.details.savings.account.label.accountOpeningDate\"\n                class=\"bb-text-bold bb-stack__item\">Account Opening Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Account Opening Date\"\n              i18n-aria-label=\"Toggle tooltip for Account Opening Date|@@product.details.savings.account.accountOpeningDate.aria.label.openclose\"\n              bbTooltip=\"Account Opening Date\"\n              i18n-bbTooltip=\"Account Opening Date info|Account Opening Date tooltip info@@product.details.savings.account.tooltip.accountOpeningDate\"\n              triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n\n          <div data-role=\"savings-account-accountOpeningDate\">\n            {{product.accountOpeningDate | date: 'longDate'}}\n          </div>\n        </div>\n\n        <div *ngIf=\"product.accountOpeningDate && product.lastUpdateDate\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastUpdateDate\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n          <span i18n=\"Last Updated Date|Last Updated Date label savings account\n          @@product.details.savings.account.label.lastUpdateDate\"\n                class=\"bb-text-bold bb-stack__item\">Last Updated Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Last Updated Date\"\n              i18n-aria-label=\"Toggle tooltip for Last Updated Date|@@product.details.savings.account.lastUpdateDate.aria.label.openclose\"\n              bbTooltip=\"Last Updated Date\"\n              i18n-bbTooltip=\"Last Updated Date info|Last Updated Date tooltip info@@product.details.savings.account.tooltip.lastUpdateDate\"\n              triggers=\"focus hover click\"\n            >\n            </bb-icon-ui>\n          </div>\n\n          <div data-role=\"savings-account-lastUpdateDate\">\n            {{product.lastUpdateDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace.ArrangementStateIndicatorComponent; }), selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsSavingsAccountCustomizableDirective; }), selector: "[bbProductSummaryDetailsSavingsAccountCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "bbIsInArray": i0__namespace.forwardRef(function () { return i6__namespace.IsInArrayPipe; }), "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }), "bbDateUpdatedAgo": i0__namespace.forwardRef(function () { return i6__namespace.DateUpdatedAgoPipe; }), "bbIsPercentValue": i0__namespace.forwardRef(function () { return i6__namespace.IsPercentValue; }), "date": i0__namespace.forwardRef(function () { return i4__namespace$1.DatePipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SavingsAccountDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-savings-account-details',
                        templateUrl: 'savings-account-details.component.html',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing details
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsSavingsAccountCustomizable
     *   let-hostRef
     *   let-product="context.product">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsSavingsAccountCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsSavingsAccountCustomizableDirective, _super);
        function ProductSummaryDetailsSavingsAccountCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsSavingsAccountCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsSavingsAccountCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsSavingsAccountCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsSavingsAccountCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsSavingsAccountCustomizableDirective, selector: "[bbProductSummaryDetailsSavingsAccountCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsSavingsAccountCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsSavingsAccountCustomizable]',
                    }]
            }] });

    /**
     * Displays text to show account frequency unit key label
     *
     * @usageNotes
     *
     * ### Display details
     *
     * ```html
     * <bb-frequency-unit-key
     *   [termUnit]="product.termUnit">
     * </bb-frequency-unit-key>
     * ```
     *
     * @ngModule ProductSummaryAccountDetailsWidgetModule
     */
    var FrequencyUnitKeyComponent = /** @class */ (function () {
        function FrequencyUnitKeyComponent() {
        }
        return FrequencyUnitKeyComponent;
    }());
    FrequencyUnitKeyComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FrequencyUnitKeyComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    FrequencyUnitKeyComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FrequencyUnitKeyComponent, selector: "bb-frequency-unit-key", inputs: { termUnit: "termUnit" }, ngImport: i0__namespace, template: "\n    <span\n      i18n=\"\n        Account details frequency unit key|Text to show account frequency unit key label\n        @@product.details.label.frequency.unit.key\"\n    >\n      {termUnit, select, D {day(s)} W {week(s)} M {month(s)} Y {year(s)}}\n    </span>\n  ", isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FrequencyUnitKeyComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-frequency-unit-key',
                        template: "\n    <span\n      i18n=\"\n        Account details frequency unit key|Text to show account frequency unit key label\n        @@product.details.label.frequency.unit.key\"\n    >\n      {termUnit, select, D {day(s)} W {week(s)} M {month(s)} Y {year(s)}}\n    </span>\n  ",
                    }]
            }], propDecorators: { termUnit: [{
                    type: i0.Input
                }] } });

    /**
     * Displays details for a product with the `'Term Deposit'` type
     *
     * The following extension slots are available in this component:
     *
     * - `ProductSummaryDetailsTermDepositCustomizableDirective`
     *
     * @see ProductSummaryDetailsTermDepositCustomizableDirective
     *
     * @usageNotes
     *
     * ### Display details
     *
     * ```html
     * <bb-term-deposit-details
     *   [product]="item"
     *   [maskableAttributes]="hostRef.maskableAttributes"
     *   (unmaskAttribute)="hostRef.onUnmaskAttribute($event, item)"
     *   (maskAttribute)="hostRef.onMaskAttribute($event, item)">
     * </bb-term-deposit-details>
     * ```
     *
     * @ngModule ProductSummaryDetailsWidgetModule
     */
    var TermDepositDetailsComponent = /** @class */ (function (_super) {
        __extends(TermDepositDetailsComponent, _super);
        function TermDepositDetailsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            /**
             * @internal
             */
            _this.hostRef = _this;
            return _this;
        }
        return TermDepositDetailsComponent;
    }(i6.ProductSummaryAccountDetailsBaseComponent));
    TermDepositDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TermDepositDetailsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    TermDepositDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TermDepositDetailsComponent, selector: "bb-term-deposit-details", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductSummaryDetailsTermDepositCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    product: product\n  }\">\n</ng-container>\n\n<ng-template\n  bbProductSummaryDetailsTermDepositCustomizable\n  let-hostRef\n  let-product=\"context.product\"\n>\n  <!-- General -->\n  <div class=\"bb-product-summary-details card\" data-role=\"general-details\">\n    <div class=\"card-header\">\n      <h3\n        i18n=\"General|General Section label term deposit\n        @@product.details.term.deposit.label.general.section\">\n        General\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.productTypeName || product.BBAN\">\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.productTypeName\">\n          <div\n            class=\"b-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Type|Account type label term deposit\n            @@product.details.term.deposit.label.productTypeName\">\n            Account Type\n          </div>\n          <div data-role=\"productTypeName\">{{product.productTypeName}}</div>\n        </div>\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.BBAN\">\n          <div\n            class=\"b-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Number|Account number label term deposit\n            @@product.details.term.deposit.label.account.number\">\n            Account Number\n          </div>\n          <div data-role=\"term-deposit-bban\"\n               class=\"bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item\">\n              <bb-product-number\n                type=\"bban\"\n                [number]=\"product.BBAN\"\n                [unmaskable]=\"\n                  !(product.financialInstitutionId | bbIsDefined) &&\n                  hostRef.maskableAttribute.BBAN | bbIsInArray: product.unmaskableAttributes\"\n                [masked]=\"hostRef.isMasked(hostRef.maskableAttribute.BBAN)\"\n                (unmask)=\"hostRef.onUnmaskAttribute($event)\"\n                (mask)=\"hostRef.onMaskAttribute($event)\"\n              ></bb-product-number>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.IBAN || (product.principalAmount | bbIsDefined)\">\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.IBAN\">\n          <div\n            class=\"b-block bb-block--sm bb-text-bold\"\n            i18n=\"IBAN|IBAN label term deposit\n            @@product.details.term.deposit.label.iban\">\n            IBAN\n          </div>\n          <div data-role=\"term-deposit-iban\">\n            <bb-product-number\n              type=\"iban\"\n              [number]=\"product.IBAN\"\n              [unmaskable]=\"\n                !(product.financialInstitutionId | bbIsDefined) &&\n                hostRef.maskableAttribute.IBAN | bbIsInArray: product.unmaskableAttributes\"\n              [masked]=\"hostRef.isMasked(hostRef.maskableAttribute.IBAN)\"\n              (unmask)=\"hostRef.onUnmaskAttribute($event)\"\n              (mask)=\"hostRef.onMaskAttribute($event)\"\n            ></bb-product-number>\n          </div>\n        </div>\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.principalAmount | bbIsDefined\">\n          <div class=\"b-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span\n              class=\"bb-text-bold bb-stack__item\"\n              i18n=\"Principal Amount|Principal amount label term deposit\n            @@product.details.term.deposit.label.principalAmount\"\n            >Principal Amount</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Principal Amount\"\n              i18n-aria-label=\"Toggle tooltip for Principal Amount|@@product.details.term.deposit.principalAmount.aria.label.openclose\"\n              bbTooltip=\"The amount that was (originally) contracted for the respective product\"\n              i18n-bbTooltip=\"Principal Amount info|Principal Amount tooltip info@@product.details.term.deposit.tooltip.principalAmount\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"term-deposit-principalAmount\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.principalAmount\">\n          </bb-amount-ui>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.bankBranchCode | bbIsDefined) || (product.bankBranchCode2 | bbIsDefined)\">\n        <!-- Branch Code -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"ACH Routing Number|Branch Code label term deposit@@account.details.term.deposit.label.bankBranchCode\">\n            ACH Routing Number\n          </div>\n          <div data-role=\"bankBranchCode\">\n            {{ product.bankBranchCode }}\n          </div>\n        </div>\n        <!-- Branch Code 2-->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode2 | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"FedWire Routing Number|Branch Code 2 label term deposit@@account.details.term.deposit.label.bankBranchCode2\">\n            FedWire Routing Number\n          </div>\n          <div data-role=\"bankBranchCode2\">\n            {{ product.bankBranchCode2 }}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.accountHolderNames || product.state\">\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.accountHolderNames\">\n          <div\n            class=\"b-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Owner(s)|Account Owner label term deposit\n            @@product.details.term.deposit.label.accountHolderNames\">\n            Account Owner(s)\n          </div>\n          <div data-role=\"term-deposit-accountHolderNames\">{{product.accountHolderNames}}</div>\n        </div>\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.state\">\n          <div\n            class=\"b-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Status|Account Status label\n            @@product.details.term.deposit.label.accountStatus\">\n            Account Status\n          </div>\n          <bb-arrangement-state-indicator\n            data-role=\"account-details-accountStatus\"\n            [showIcon]=\"false\"\n            [showActive]=\"true\"\n            [state]=\"product.state.state\"></bb-arrangement-state-indicator>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product?.financialInstitution?.name || product.lastSyncDate\">\n\n        <!-- Bank name -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.financialInstitution?.name\">\n\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Bank Name|Bank Name label term deposit\n                        @@product.term.deposit.label.financialInstitution-name\"\n            >Bank Name</span>\n          </div>\n          <div data-role=\"term-deposit-financialInstitution-name\">\n            {{product?.financialInstitution?.name}}\n          </div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product?.financialInstitution?.name | bbIsDefined) &&\n                    (product.lastSyncDate | bbIsDefined)\"></div>\n\n        <!-- Last sync date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastSyncDate\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Last sync|Last sync label@@product.details.term.deposit.label.lastSyncDate\"\n          >Last sync\n          </div>\n          <div data-role=\"term-deposit-lastSyncDate\">\n            {{ product.lastSyncDate | bbDateUpdatedAgo }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Interest Details -->\n  <div class=\"bb-product-summary-details card\" data-role=\"interest-details\">\n    <div class=\"card-header\">\n      <h3\n        i18n=\"Interest Details|Interest Details label term deposit\n          @@product.details.term.deposit.label.interest.details.section\">\n        Interest Details\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--lg':\n              (product.interestPaymentFrequencyNumber | bbIsDefined) ||\n              (product.autoRenewalIndicator | bbIsDefined)\n           }\"\n           *ngIf=\"(product.accountInterestRate | bbIsDefined) ||\n                  (product.accruedInterest | bbIsDefined)\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountInterestRate | bbIsDefined\">\n          <div class=\"b-block bb-block--sm  bb-stack bb-stack--density-sm\">\n              <span i18n=\"Interest Rate|Interest Rate label term deposit\n              @@product.details.term.deposit.label.interestRate\"\n                    class=\"bb-text-bold bb-stack__item\">Interest Rate</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Interest Rate\"\n              i18n-aria-label=\"Toggle tooltip for Interest Rate|@@product.details.term.deposit.interestRate.aria.label.openclose\"\n              bbTooltip=\"The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal\"\n              i18n-bbTooltip=\"Interest Rate info|Interest Rate tooltip info term deposit@@product.details.term.deposit.tooltip.interestRate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"term-deposit-accountInterestRate\">{{product.accountInterestRate}} %</div>\n        </div>\n\n        <div *ngIf=\"(product.accountInterestRate | bbIsDefined) &&\n                    (product.accruedInterest | bbIsDefined)\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accruedInterest | bbIsDefined\">\n          <div class=\"b-block bb-block--sm  bb-stack bb-stack--density-sm\">\n              <span i18n=\"Accrued Interest|Accrued Interest label term deposit\n              @@product.details.term.deposit.label.accruedInterest\"\n                    class=\"bb-text-bold bb-stack__item\">Accrued Interest</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Accrued Interest\"\n              i18n-aria-label=\"Toggle tooltip for Accrued Interest|@@product.details.term.deposit.accruedInterest.aria.label.openclose\"\n              bbTooltip=\"The interest that is earned (credit interest) or due (debit interest) but not settled yet\"\n              i18n-bbTooltip=\"Accrued Interest info|Accrued Interest tooltip info term deposit@@product.details.term.deposit.tooltip.accruedInterest\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"term-deposit-accruedInterest\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.accruedInterest\">\n          </bb-amount-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.interestPaymentFrequencyNumber | bbIsDefined\">\n          <div class=\"b-block bb-block--sm  bb-stack bb-stack--density-sm\">\n              <span i18n=\"Interest Payment Frequency|Interest Payment Frequency label term deposit\n              @@product.details.term.deposit.label.interestPaymentFrequency\"\n                    class=\"bb-text-bold bb-stack__item\">\n                Interest Payment Frequency\n              </span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Interest Payment Frequency\"\n              i18n-aria-label=\"Toggle tooltip for Interest Payment Frequency|@@product.details.term.deposit.interestPaymentFrequency.aria.label.openclose\"\n              bbTooltip=\"Number of times per year when the accumulated interest is settled to the product on a regular basis\"\n              i18n-bbTooltip=\"Interest Payment Frequency info|Interest Payment Frequency tooltip info term deposit@@product.details.term.deposit.tooltip.interestPaymentFrequency\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"term-deposit-interestPaymentFrequencyUnit\">\n            <span data-role=\"term-deposit-interestPaymentFrequencyNumber\">{{product.interestPaymentFrequencyNumber}}</span>\n            <bb-frequency-unit-key\n              [termUnit]=\"product.interestPaymentFrequencyUnit\">\n            </bb-frequency-unit-key>\n          </div>\n        </div>\n\n        <div *ngIf=\"(product.interestPaymentFrequencyNumber | bbIsDefined) &&\n                    (product.autoRenewalIndicator | bbIsDefined)\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.autoRenewalIndicator | bbIsDefined\">\n            <span class=\"b-block bb-block--sm  bb-stack bb-stack--density-sm\">\n              <span i18n=\"Auto Renewal Indicator|Auto Renewal Indicator label term deposit\n              @@product.details.term.deposit.label.autoRenewalIndicator\"\n                    class=\"bb-text-bold bb-stack__item\">Auto Renewal Indicator</span>\n                 <bb-icon-ui\n                   class=\"bb-stack__item bb-text-support\"\n                   data-role=\"toggle-tooltip-icon\"\n                   tabindex=\"0\"\n                   name=\"info\"\n                   size=\"sm\"\n                   aria-label=\"Toggle tooltip for Auto Renewal Indicator\"\n                   i18n-aria-label=\"Toggle tooltip for Auto Renewal Indicator|@@product.details.term.deposit.autoRenewalIndicator.aria.label.openclose\"\n                   bbTooltip=\"Indicates whether or not a product is to be continued after maturity automatically\"\n                   i18n-bbTooltip=\"Auto Renewal Indicator info|Auto Renewal Indicator tooltip info term deposit@@product.details.term.deposit.tooltip.autoRenewalIndicator\"\n                   triggers=\"focus hover\"\n                 >\n            </bb-icon-ui>\n            </span>\n          <div data-role=\"term-deposit-autoRenewalIndicator\">\n              <span\n                *ngIf=\"product.autoRenewalIndicator\"\n                i18n=\"Automatic Renewal|Automatic Renewal indicator label\n                @@product.details.term.deposit.label.autoRenewalIndicator.yes\">\n                  Automatic Renewal\n              </span>\n            <span\n              *ngIf=\"!product.autoRenewalIndicator | bbIsDefined\"\n              i18n=\"No Automatic Renewal|No Automatic Renewal label\n                @@product.details.term.deposit.label.autoRenewalIndicator.no\">\n                  No Automatic Renewal\n              </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Maturity Details -->\n  <div class=\"bb-product-summary-details card\">\n    <div class=\"card-header\">\n      <h3\n        i18n=\"Maturity Details|Maturity Details Section label term deposit\n          @@product.details.term.deposit.label.maturity.details.section\">\n        Maturity Details\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--lg': product.startDate || product.maturityDate}\"\n           *ngIf=\"(product.maturityAmount | bbIsDefined) ||\n                  (product.termNumber | bbIsDefined)\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.maturityAmount | bbIsDefined\">\n          <div class=\"b-block bb-block--sm  bb-stack bb-stack--density-sm\">\n              <span i18n=\"Maturity Balance|Maturity Balance label term deposit\n            @@product.details.term.deposit.label.maturityBlanace\"\n                    class=\"bb-text-bold bb-stack__item\">Maturity Balance</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Maturity Balance\"\n              i18n-aria-label=\"Toggle tooltip for Maturity Balance|@@product.details.term.deposit.maturityBlanace.aria.label.openclose\"\n              bbTooltip=\"Amount payable at the end of a holding period of a product\"\n              i18n-bbTooltip=\"Maturity Balance info|Maturity Balance tooltip info term deposit@@product.details.term.deposit.tooltip.maturityBlanace\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"term-deposit-maturityAmount\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.maturityAmount\">\n          </bb-amount-ui>\n        </div>\n\n        <div *ngIf=\"(product.maturityAmount | bbIsDefined) && (product.termNumber | bbIsDefined)\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.termNumber | bbIsDefined\">\n          <div class=\"b-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span i18n=\"Term|Term label term deposit\n            @@product.details.term.deposit.label.term\"\n                    class=\"bb-text-bold bb-stack__item\">Term</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Term\"\n              i18n-aria-label=\"Toggle tooltip for Term|@@product.details.term.deposit.term.aria.label.openclose\"\n              bbTooltip=\"The period of time and/or the interest rate arranged between Bank and customer\"\n              i18n-bbTooltip=\"Term info|Term tooltip info term deposit@@product.details.term.deposit.tooltip.term\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"loan-term-number\">\n            <span data-role=\"term-deposit-termNumber\">{{product.termNumber}}</span>\n            <bb-frequency-unit-key [termUnit]=\"product.termUnit\"></bb-frequency-unit-key>\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-block bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.startDate\">\n          <div class=\"b-block bb-block--sm bb-stack  bb-stack--density-sm\">\n              <span i18n=\"Start date|Start date label term deposit\n            @@product.details.term.deposit.label.startDate\"\n                    class=\"bb-text-bold bb-stack__item\">Start Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Start Date\"\n              i18n-aria-label=\"Toggle tooltip for Start Date|@@product.details.term.deposit.startDate.aria.label.openclose\"\n              bbTooltip=\"Start Date\"\n              i18n-bbTooltip=\"Start date info|Start date tooltip info term deposit@@product.details.term.deposit.tooltip.startDate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"term-deposit-startDate\">\n            {{product.startDate | date: 'longDate'}}\n          </div>\n        </div>\n\n        <div *ngIf=\"product.startDate && product.maturityDate\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.maturityDate\">\n          <div class=\"b-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span i18n=\"Maturity date|Maturity Date label term deposit\n            @@product.details.term.deposit.label.maturityDate\"\n                    class=\"bb-text-bold bb-stack__item\">Maturity Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Maturity Date\"\n              i18n-aria-label=\"Toggle tooltip for Maturity Date|@@product.details.term.deposit.maturityDate.aria.label.openclose\"\n              bbTooltip=\"End term of a holding period\"\n              i18n-bbTooltip=\"Maturity Date info|Maturity Date tooltip info term deposit@@product.details.term.deposit.tooltip.maturityDate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"term-deposit-maturityDate\">\n            {{product.maturityDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Other -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3\n        i18n=\"Other|Other label term deposit\n          @@product.details.term.deposit.label.other.section\">\n        Other\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"b-block bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountOpeningDate\">\n          <div class=\"b-block bb-block--sm bb-stack bb-stack--density-sm\">\n            <span i18n=\"Account Opening Date|Account Opening Date label term deposit\n            @@product.details.term.deposit.label.accountOpeningDate\"\n                  class=\"bb-text-bold bb-stack__item\">Account Opening Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Account Opening Date\"\n              i18n-aria-label=\"Toggle tooltip for Account Opening Date|@@product.details.term.deposit.accountOpeningDate.aria.label.openclose\"\n              bbTooltip=\"Account Opening Date\"\n              i18n-bbTooltip=\"Account Opening Date info|Account Opening Date tooltip info term deposit@@product.details.term.deposit.tooltip.accountOpeningDate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"term-deposit-accountOpeningDate\">\n            {{product.accountOpeningDate | date: 'longDate'}}\n          </div>\n        </div>\n\n        <div *ngIf=\"product.accountOpeningDate && product.lastUpdateDate\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastUpdateDate\">\n          <div class=\"b-block bb-block--sm bb-stack bb-stack--density-sm\">\n            <span i18n=\"Last Updated Date|Last Updated Date label term deposit\n            @@product.details.term.deposit.label.lastUpdateDate\"\n                  class=\"bb-text-bold bb-stack__item\">Last Updated Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Last Updated Date\"\n              i18n-aria-label=\"Toggle tooltip for Last Updated Date|@@product.details.term.deposit.lastUpdateDate.aria.label.openclose\"\n              bbTooltip=\"Last Updated Date\"\n              i18n-bbTooltip=\"Last Updated Date info|Last Updated Date tooltip info term deposit@@product.details.term.deposit.tooltip.lastUpdateDate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"term-deposit-lastUpdateDate\">\n            {{product.lastUpdateDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace.ArrangementStateIndicatorComponent; }), selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }, { type: i0__namespace.forwardRef(function () { return FrequencyUnitKeyComponent; }), selector: "bb-frequency-unit-key", inputs: ["termUnit"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsTermDepositCustomizableDirective; }), selector: "[bbProductSummaryDetailsTermDepositCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "bbIsInArray": i0__namespace.forwardRef(function () { return i6__namespace.IsInArrayPipe; }), "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }), "bbDateUpdatedAgo": i0__namespace.forwardRef(function () { return i6__namespace.DateUpdatedAgoPipe; }), "date": i0__namespace.forwardRef(function () { return i4__namespace$1.DatePipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TermDepositDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-term-deposit-details',
                        templateUrl: 'term-deposit-details.component.html',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing details
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsTermDepositCustomizable
     *   let-hostRef
     *   let-product="context.product">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsTermDepositCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsTermDepositCustomizableDirective, _super);
        function ProductSummaryDetailsTermDepositCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsTermDepositCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsTermDepositCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsTermDepositCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsTermDepositCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsTermDepositCustomizableDirective, selector: "[bbProductSummaryDetailsTermDepositCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsTermDepositCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsTermDepositCustomizable]',
                    }]
            }] });

    /**
     * Displays details for a product with the `'Loan'` type
     *
     * The following extension slots are available in this component:
     *
     * - `ProductSummaryDetailsLoanCustomizableDirective`
     *
     * @see ProductSummaryDetailsLoanCustomizableDirective
     *
     * @usageNotes
     *
     * ### Display details
     *
     * ```html
     * <bb-loan-details
     *   [product]="item"
     *   [maskableAttributes]="hostRef.maskableAttributes"
     *   (unmaskAttribute)="hostRef.onUnmaskAttribute($event, item)"
     *   (maskAttribute)="hostRef.onMaskAttribute($event, item)">
     * </bb-loan-details>
     * ```
     *
     * @ngModule ProductSummaryDetailsWidgetModule
     */
    var LoanDetailsComponent = /** @class */ (function (_super) {
        __extends(LoanDetailsComponent, _super);
        function LoanDetailsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.hostRef = _this;
            return _this;
        }
        return LoanDetailsComponent;
    }(i6.ProductSummaryAccountDetailsBaseComponent));
    LoanDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanDetailsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    LoanDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoanDetailsComponent, selector: "bb-loan-details", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductSummaryDetailsLoanCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    product: product\n  }\">\n</ng-container>\n\n<ng-template\n  bbProductSummaryDetailsLoanCustomizable\n  let-hostRef\n  let-product=\"context.product\"\n>\n  <!-- General -->\n  <div class=\"bb-product-summary-details card\" data-role=\"general-details\">\n    <div class=\"card-header\">\n      <h3 i18n=\"General|General Section label loan\n      @@product.details.loan.label.general.section\">\n        General\n      </h3>\n    </div>\n\n    <div class=\"card-body\">\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.productTypeName || product.BBAN\">\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.productTypeName\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Type|Account type label loan\n            @@product.details.loan.label.productTypeName\">\n            Account Type\n          </div>\n          <div data-role=\"productTypeName\">{{product.productTypeName}}</div>\n        </div>\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.BBAN\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Number|Account number label loan\n            @@product.details.loan.label.account.number\">\n            Account Number\n          </div>\n          <div data-role=\"loan-bban\"\n               class=\"bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item\">\n              <bb-product-number\n                type=\"bban\"\n                [number]=\"product.BBAN\"\n                [unmaskable]=\"\n                  !(product.financialInstitutionId | bbIsDefined) &&\n                  hostRef.maskableAttribute.BBAN | bbIsInArray: product.unmaskableAttributes\"\n                [masked]=\"hostRef.isMasked(hostRef.maskableAttribute.BBAN)\"\n                (unmask)=\"hostRef.onUnmaskAttribute($event)\"\n                (mask)=\"hostRef.onMaskAttribute($event)\"\n              ></bb-product-number>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           [ngClass]=\"{'bb-block--lg': product.bankBranchCode || product.bankBranchCode2 || product.state}\"\n           *ngIf=\"(product.bookedBalance | bbIsDefined) || product.accountHolderNames\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.bookedBalance | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n            <span i18n=\"Outstanding Amount|Outstanding amount label loan\n            @@product.details.loan.label.outstandingamount\"\n                  class=\"bb-text-bold bb-stack__item\">Outstanding Amount</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Outstanding Amount\"\n              i18n-aria-label=\"Toggle tooltip for Outstanding Amount|@@product.details.loan.outstandingamount.aria.label.openclose\"\n              bbTooltip=\"Outstanding Amount\"\n              i18n-bbTooltip=\"Outstanding Amount info|Outstanding Amount tooltip info loan@@product.details.loan.tooltip.outstandingamount\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"loan-bookedBalance\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.bookedBalance\">\n          </bb-amount-ui>\n        </div>\n\n        <div *ngIf=\"(product.bookedBalance | bbIsDefined) && product.accountHolderNames\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountHolderNames\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Owner(s)|Account Owner label loan\n            @@product.details.loan.label.accountHolderNames\">\n            Account Owner(s)\n          </div>\n          <div data-role=\"loan-accountHolderNames\">{{product.accountHolderNames}}</div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.bankBranchCode | bbIsDefined) || (product.bankBranchCode2 | bbIsDefined)\">\n        <!-- Branch Code -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"ACH Routing Number|Branch Code label loan@@account.details.loan.label.bankBranchCode\">\n            ACH Routing Number\n          </div>\n          <div data-role=\"bankBranchCode\">\n            {{ product.bankBranchCode }}\n          </div>\n        </div>\n        <!-- Branch Code 2-->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode2 | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"FedWire Routing Number|Branch Code 2 label loan@@account.details.loan.label.bankBranchCode2\">\n            FedWire Routing Number\n          </div>\n          <div data-role=\"bankBranchCode2\">\n            {{ product.bankBranchCode2 }}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.state || product?.financialInstitution?.name\">\n        <!-- Account status -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.state?.state\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Status|Account Status label\n            @@product.details.loan.label.accountStatus\">\n            Account Status\n          </div>\n          <bb-arrangement-state-indicator\n            data-role=\"account-details-accountStatus\"\n            [showIcon]=\"false\"\n            [showActive]=\"true\"\n            [state]=\"product.state.state\"></bb-arrangement-state-indicator>\n        </div>\n        <!-- Bank name -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.financialInstitution?.name\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Bank Name|Bank Name label loan\n                        @@product.details.loan.label.financialInstitution.name\"\n            >Bank Name</span>\n          </div>\n          <div data-role=\"loan-financialInstitution-name\">\n            {{product?.financialInstitution?.name}}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.lastSyncDate\">\n        <!-- Last sync date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastSyncDate\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Last sync|Last sync label@@product.details.loan.label.lastSyncDate\"\n          >Last sync\n          </div>\n          <div data-role=\"loan-lastSyncDate\">\n            {{ product.lastSyncDate | bbDateUpdatedAgo }}\n          </div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.lastSyncDate\"></div>\n        <!-- Placeholder -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"></div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Loan Details -->\n  <div class=\"bb-product-summary-details card\" data-role=\"interest-details\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Loan Details|Loan Details label loan\n      @@product.details.loan.label.loan.details.section\">\n        Loan Details\n      </h3>\n    </div>\n\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--lg':\n             (product.accountInterestRate | bbIsDefined) ||\n             (product.termNumber | bbIsDefined)\n           }\"\n           *ngIf=\"(product.monthlyInstalmentAmount | bbIsDefined) || (product.principalAmount | bbIsDefined)\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.monthlyInstalmentAmount | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n            <span class=\"bb-text-bold bb-stack__item\"\n                  i18n=\"Monthly Instalment Amount|Monthly Instalment Amount label loan\n            @@product.details.loan.label.monthlyInstalmentAmount\"\n            >Monthly Instalment Amount</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Monthly Instalment Amount\"\n              i18n-aria-label=\"Toggle tooltip for Monthly Instalment Amount|@@product.details.loan.monthlyInstalmentAmount.aria.label.openclose\"\n              bbTooltip=\"A fixed payment amount paid by a borrower to the bank at a specified date each calendar month\"\n              i18n-bbTooltip=\"Monthly Instalment Amount info|Monthly Instalment Amount tooltip info loan@@product.details.loan.tooltip.monthlyInstalmentAmount\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"loan-monthlyInstalmentAmount\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.monthlyInstalmentAmount\">\n          </bb-amount-ui>\n        </div>\n\n        <div *ngIf=\"(product.monthlyInstalmentAmount | bbIsDefined) && (product.principalAmount | bbIsDefined)\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.principalAmount | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span\n              i18n=\"Principal Amount|Principal amount label loan\n            @@product.details.loan.label.principalAmount\"\n              class=\"bb-text-bold bb-stack__item\">Principal Amount</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Principal Amount\"\n              i18n-aria-label=\"Toggle tooltip for Principal Amount|@@product.details.loan.principalAmount.aria.label.openclose\"\n              bbTooltip=\"The amount that was (originally) contracted for the respective product\"\n              i18n-bbTooltip=\"Principal Amount info|Principal Amount tooltip info loan@@product.details.loan.tooltip.principalAmount\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"loan-principalAmount\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.principalAmount\">\n          </bb-amount-ui>\n        </div>\n      </div>\n      <div class=\"bb-stack bb-stack--wrap\"\n           *ngIf=\"(product.accountInterestRate | bbIsDefined) || (product.termNumber | bbIsDefined)\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountInterestRate | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span i18n=\"Interest rate|Interest rate label loan\n            @@product.details.loan.label.interestRate\"\n                  class=\"bb-text-bold bb-stack__item\">Interest rate</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle Interest rate\"\n              i18n-aria-label=\"Toggle Interest rate|@@product.details.loan.interestRate.aria.label.openclose\"\n              bbTooltip=\"The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal\"\n              i18n-bbTooltip=\"Interest rate info|Interest rate tooltip info loan@@product.details.loan.tooltip.interestRate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"loan-accountInterestRate\">\n            {{product.accountInterestRate}} %\n          </div>\n        </div>\n\n        <div *ngIf=\"(product.accountInterestRate | bbIsDefined) && (product.termNumber | bbIsDefined)\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.termNumber | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span i18n=\"Term|Term label loan\n            @@product.details.loan.label.term\"\n                  class=\"bb-text-bold bb-stack__item\">Term</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Term\"\n              i18n-aria-label=\"Toggle tooltip for Term|@@product.details.loan.term.aria.label.openclose\"\n              bbTooltip=\"The period of time and/or the interest rate arranged between Bank and customer\"\n              i18n-bbTooltip=\"Term info|Term tooltip info loan@@product.details.loan.tooltip.term\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"loan-termNumber\">\n            <span>{{product.termNumber}}</span>\n            <bb-frequency-unit-key\n              [termUnit]=\"product.termUnit\">\n            </bb-frequency-unit-key>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Other -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Other|Other label loan\n      @@product.details.loan.label.other.section\">\n        Other\n      </h3>\n    </div>\n\n    <div class=\"card-body\">\n      <div class=\"bb-stack bb-stack--wrap\"\n           *ngIf=\"product.accountOpeningDate || product.lastUpdateDate\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountOpeningDate\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n          <span i18n=\"Account Opening Date|Account Opening Date label loan\n          @@product.details.loan.label.accountOpeningDate\"\n                class=\"bb-text-bold bb-stack__item\">Account Opening Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              size=\"sm\"\n              name=\"info\"\n              aria-label=\"Toggle tooltip for Account Opening Date\"\n              i18n-aria-label=\"Toggle tooltip for Account Opening Date|@@product.details.loan.accountOpeningDate.aria.label.openclose\"\n              bbTooltip=\"Account Opening Date\"\n              i18n-bbTooltip=\"Account Opening Date info|Account Opening Date tooltip info loan@@product.details.loan.tooltip.accountOpeningDate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"loan-accountOpeningDate\">\n            {{product.accountOpeningDate | date: 'longDate'}}\n          </div>\n        </div>\n        <div *ngIf=\"product.accountOpeningDate && product.lastUpdateDate\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastUpdateDate\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n          <span\n            i18n=\"Last Updated Date|Last Updated Date label loan\n          @@product.details.loan.label.lastUpdateDate\"\n            class=\"bb-text-bold bb-stack__item\">Last Updated Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Last Updated Date\"\n              i18n-aria-label=\"Toggle tooltip for Last Updated Date|@@product.details.loan.lastUpdateDate.aria.label.openclose\"\n              bbTooltip=\"Last Updated Date\"\n              i18n-bbTooltip=\"Last Updated Date info|Last Updated Date tooltip info loan@@product.details.loan.tooltip.lastUpdateDate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <div data-role=\"loan-lastUpdateDate\">\n            {{product.lastUpdateDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace.ArrangementStateIndicatorComponent; }), selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }, { type: i0__namespace.forwardRef(function () { return FrequencyUnitKeyComponent; }), selector: "bb-frequency-unit-key", inputs: ["termUnit"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsLoanCustomizableDirective; }), selector: "[bbProductSummaryDetailsLoanCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }], pipes: { "bbIsInArray": i0__namespace.forwardRef(function () { return i6__namespace.IsInArrayPipe; }), "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }), "bbDateUpdatedAgo": i0__namespace.forwardRef(function () { return i6__namespace.DateUpdatedAgoPipe; }), "date": i0__namespace.forwardRef(function () { return i4__namespace$1.DatePipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoanDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-loan-details',
                        templateUrl: 'loan-details.component.html',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing details
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsLoanCustomizable
     *   let-hostRef
     *   let-product="context.product">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsLoanCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsLoanCustomizableDirective, _super);
        function ProductSummaryDetailsLoanCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsLoanCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsLoanCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsLoanCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsLoanCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsLoanCustomizableDirective, selector: "[bbProductSummaryDetailsLoanCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsLoanCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsLoanCustomizable]',
                    }]
            }] });

    /**
     * Displays details for a product with the `'Credit Card'` type
     *
     * The following extension slots are available in this component:
     *
     * - `ProductSummaryDetailsCreditCardCustomizableDirective`
     *
     * @see ProductSummaryDetailsCreditCardCustomizableDirective
     *
     * @usageNotes
     *
     * ### Display details
     *
     * ```html
     * <bb-credit-card-details
     *   [product]="item"
     *   [maskableAttributes]="hostRef.maskableAttributes"
     *   (unmaskAttribute)="hostRef.onUnmaskAttribute($event, item)"
     *   (maskAttribute)="hostRef.onMaskAttribute($event, item)">
     * </bb-credit-card-details>
     * ```
     *
     * @ngModule ProductSummaryDetailsWidgetModule
     */
    var CreditCardDetailsComponent = /** @class */ (function (_super) {
        __extends(CreditCardDetailsComponent, _super);
        function CreditCardDetailsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            /**
             * @internal
             */
            _this.hostRef = _this;
            return _this;
        }
        return CreditCardDetailsComponent;
    }(i6.ProductSummaryAccountDetailsBaseComponent));
    CreditCardDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditCardDetailsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    CreditCardDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CreditCardDetailsComponent, selector: "bb-credit-card-details", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductSummaryDetailsCreditCardCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    product: product\n  }\">\n</ng-container>\n\n<ng-template\n  bbProductSummaryDetailsCreditCardCustomizable\n  let-hostRef\n  let-product=\"context.product\"\n>\n  <!-- General -->\n  <div class=\"bb-product-summary-details card\" data-role=\"general-details\">\n    <div class=\"card-header\">\n      <h3 i18n=\"General|General Section label@@product.details.credit.card.label.general.section\"\n      >General</h3>\n    </div>\n\n    <div class=\"card-body\">\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--md': product.accountHolderNames || product.cardDetails?.cardProvider}\"\n           *ngIf=\"product.productTypeName || product.number\">\n\n        <!-- Account Type -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.productTypeName\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Type|Account type label credit card@@product.details.credit.card.label.productTypeName\"\n          >Account Type\n          </div>\n          <div data-role=\"credit-card-productTypeName\">{{product.productTypeName}}</div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.productTypeName && product.state\"></div>\n\n        <!-- Account Number -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.number\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Number|Account Number label credit card@@product.details.credit.card.label.number\"\n          >Account Number\n          </div>\n          <div class=\"bb-stack bb-stack--density-sm\"\n               data-role=\"credit-card-number\">\n            <span class=\"bb-stack__item\">\n              <bb-product-number\n                type=\"cardNumber\"\n                [number]=\"product.number\"\n                [unmaskable]=\"\n                  !(product.financialInstitutionId | bbIsDefined) &&\n                  (hostRef.maskableAttribute.Number | bbIsInArray: product.unmaskableAttributes)\"\n                [masked]=\"hostRef.isMasked(hostRef.maskableAttribute.Number)\"\n                (unmask)=\"hostRef.onUnmaskAttribute($event)\"\n                (mask)=\"hostRef.onMaskAttribute($event)\"\n              ></bb-product-number>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--md': product.state || product.validThru}\"\n           *ngIf=\"product.accountHolderNames || product.cardDetails?.cardProvider\">\n\n        <!-- Account Owner(s) -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountHolderNames\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Owner(s)|Account Owner label credit card@@product.details.credit.card.label.accountHolderNames\"\n          >Account Owner(s)\n          </div>\n          <div data-role=\"credit-card-accountHolderNames\">{{product.accountHolderNames}}</div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.accountHolderNames && product.cardDetails?.cardProvider\"></div>\n\n        <!-- Card Provider -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.cardDetails?.cardProvider\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Card Provider|Card Provider label credit card\n                        @@product.details.credit.card.label.cardProvider\"\n            >Card Provider</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Card Provider\"\n                    i18n-aria-label=\"Toggle tooltip for Card Provider|@@product.details.credit.card.cardProvider.aria.label.openclose\"\n                    bbTooltip=\"Card Provider\"\n                    i18n-bbTooltip=\"Card Provider info|Card Provider tooltip info@@product.details.credit.card.tooltip.cardProvider\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-cardProvider\">{{product.cardDetails?.cardProvider}}</div>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--md': product?.financialInstitution?.name || product.lastSyncDate }\"\n           *ngIf=\"product.state || product.validThru\">\n\n        <!-- Valid Thru -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.validThru\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Valid thru|Valid thru label credit card\n                        @@product.details.credit.card.label.validThru\"\n            >Valid thru</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Valid thru\"\n                    i18n-aria-label=\"Toggle tooltip for Valid thru|@@product.details.credit.card.validThru.aria.label.openclose\"\n                    bbTooltip=\"Expiration date of a credit card, after which is no longer valid\"\n                    i18n-bbTooltip=\"Valid thru info|Valid thru tooltip info@@product.details.credit.card.tooltip.validThru\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-validThru\">\n            {{product.validThru | date: 'longDate'}}\n          </div>\n        </div>\n\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.state && product.validThru\"></div>\n\n        <!-- Account Status -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.state\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Status|Account Status label@@product.details.credit.card.label.accountStatus\"\n          >Account Status\n          </div>\n          <bb-arrangement-state-indicator\n            data-role=\"account-details-accountStatus\"\n            [showIcon]=\"false\"\n            [showActive]=\"true\"\n            [state]=\"product.state.state\"></bb-arrangement-state-indicator>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product?.financialInstitution?.name || product.lastSyncDate\">\n\n        <!-- Bank name -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.financialInstitution?.name\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Bank Name|Bank Name label credit card\n                        @@product.details.credit.card.label.financialInstitution.name\"\n            >Bank Name</span>\n          </div>\n          <div data-role=\"credit-card-financialInstitution-name\">\n            {{product?.financialInstitution?.name}}\n          </div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product?.financialInstitution?.name && product.lastSyncDate\"></div>\n\n        <!-- Last sync date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastSyncDate\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Last sync|Last sync label@@product.details.credit.card.label.lastSyncDate\"\n          >Last sync\n          </div>\n          <div data-role=\"credit-card-lastSyncDate\">\n            {{ product.lastSyncDate | bbDateUpdatedAgo }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Status -->\n  <div class=\"bb-product-summary-details card\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Status|Status Section label@@product.details.credit.card.label.status.section\"\n      >Status</h3>\n    </div>\n\n    <div class=\"card-body\">\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--md': product.creditLimit || product.cardDetails?.statementBalance}\"\n           *ngIf=\"(product.bookedBalance | bbIsDefined) || (product.remainingCredit | bbIsDefined)\">\n\n        <!-- Consumed Amount -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             data-role=\"credit-card-bookedBalance\"\n             *ngIf=\"product.bookedBalance | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Consumed Amount|Consumed Amount label credit card@@product.details.credit.card.label.consumedAmount\">\n                Consumed Amount\n              </span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Trigger tooltip for Consumed Amount\"\n              i18n-aria-label=\"Trigger tooltip for Consumed Amount|@@product.details.credit.card.consumedAmount.aria.label.openclose\"\n              bbTooltip=\"Consumed Amount\"\n              i18n-bbTooltip=\"Consumed Amount info|Consumed Amount tooltip info@@product.details.credit.card.tooltip.consumedAmount\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"credit-card-consumedAmount\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.bookedBalance\">\n          </bb-amount-ui>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.bookedBalance | bbIsDefined) && (product.remainingCredit | bbIsDefined)\"></div>\n\n        <!-- Remaining Amount -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.remainingCredit | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Remaining Amount|Remaining Amount label credit card@@product.details.credit.card.label.remainingAmount\">\n                Remaining Amount\n              </span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Trigger tooltip for Remaining Amount\"\n              i18n-aria-label=\"Trigger tooltip for Remaining Amount|@@product.details.credit.card.remainingAmount.aria.label.openclose\"\n              bbTooltip=\"Remaining Amount\"\n              i18n-bbTooltip=\"Remaining Amount info|Remaining Amount tooltip info@@product.details.credit.card.tooltip.remainingAmount\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"credit-card-remainingCredit\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.remainingCredit\">\n          </bb-amount-ui>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--md': product.cardDetails?.availableCashCredit ||\n           product.cardDetails?.cashCreditLimit}\"\n           *ngIf=\"(product.creditLimit | bbIsDefined) || (product.cardDetails?.statementBalance | bbIsDefined)\">\n\n        <!-- Credit Limit -->\n        <div class=\"bb-stack__item bb-stack__item--fill\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Credit Limit|Credit Limit label credit card@@product.details.credit.card.label.creditLimit\"\n              >Credit Limit</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Trigger tooltip for Credit Limit\"\n              i18n-aria-label=\"Trigger tooltip for Credit Limit|@@product.details.credit.card.creditLimit.aria.label.openclose\"\n              bbTooltip=\"Monetary amount of the used overdraft\"\n              i18n-bbTooltip=\"Credit Limit info|Credit Limit tooltip info@@product.details.credit.card.tooltip.creditLimit\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"credit-card-creditLimit\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.creditLimit\">\n          </bb-amount-ui>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.creditLimit | bbIsDefined) && (product.cardDetails?.statementBalance | bbIsDefined)\"></div>\n\n        <!-- Statement Balance -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.cardDetails?.statementBalance | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Statement Balance|Statement Balance label credit card\n                          @@product.details.credit.card.label.statementBalance\">\n                Statement Balance\n              </span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Trigger tooltip for Statement Balance\"\n                    i18n-aria-label=\"Trigger tooltip for Statement Balance@@product.details.credit.card.statementBalance.aria.label.openclose\"\n                    bbTooltip=\"Statement Balance\"\n                    i18n-bbTooltip=\"Statement Balance info|Statement Balance tooltip info@@product.details.credit.card.tooltip.statementBalance\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n                  data-role=\"credit-card-statementBalance\"\n                  [currency]=\"product.currency\"\n                  [amount]=\"product.cardDetails?.statementBalance\">\n          </bb-amount-ui>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           *ngIf=\"(product.cardDetails?.availableCashCredit | bbIsDefined) ||\n                  (product.cardDetails?.cashCreditLimit | bbIsDefined)\">\n\n        <!-- Available Cash Credit Limit -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.cardDetails?.availableCashCredit | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Available Cash Credit Limit|Available Cash Credit Limit label credit card\n                          @@product.details.credit.card.label.availableCashCredit\"\n              >Available Cash Credit Limit</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Trigger tooltip for Available Cash Credit Limit\"\n                    i18n-aria-label=\"Trigger tooltip for Available Cash Credit Limit\n                                     @@product.details.credit.card.availableCashCredit.aria.label.openclose\"\n                    bbTooltip=\"Available Cash Credit Limit\"\n                    i18n-bbTooltip=\"Available Cash Credit Limit info|Available Cash Credit Limit tooltip info\n                                    @@product.details.credit.card.tooltip.availableCashCredit\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n                  data-role=\"credit-card-availableCashCredit\"\n                  [currency]=\"product.currency\"\n                  [amount]=\"product.cardDetails?.availableCashCredit\">\n          </bb-amount-ui>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.cardDetails?.availableCashCredit | bbIsDefined) &&\n             (product.cardDetails?.cashCreditLimit | bbIsDefined)\"></div>\n\n        <!-- Cash Credit Limit -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.cardDetails?.cashCreditLimit | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Cash Credit Limit|Cash Credit Limit label credit card\n                          @@product.details.credit.card.label.cashCreditLimit\">\n                Cash Credit Limit\n              </span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Trigger tooltip for Cash Credit Limit\"\n                    i18n-aria-label=\"Trigger tooltip for Cash Credit Limit\n                                     @@product.details.credit.card.cashCreditLimit.aria.label.openclose\"\n                    bbTooltip=\"Cash Credit Limit\"\n                    i18n-bbTooltip=\"Cash Credit Limit info|Cash Credit Limit tooltip info\n                                    @@product.details.credit.card.tooltip.cashCreditLimit\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n                  data-role=\"credit-card-cashCreditLimit\"\n                  [currency]=\"product.currency\"\n                  [amount]=\"product.cardDetails?.cashCreditLimit\">\n          </bb-amount-ui>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Payment and Interest Details -->\n  <div class=\"bb-product-summary-details card\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Payment and Interest Details|Payment and Interest Details Section label@@product.details.credit.card.label.payment.section\"\n      >Payment and Interest Details</h3>\n    </div>\n    <div class=\"card-body\">\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           *ngIf=\"(product.minimumPayment | bbIsDefined) || product.minimumPaymentDueDate\"\n           [ngClass]=\"{\n             'bb-block--md': (product.applicableInterestRate | bbIsDefined) ||\n             (product.interestDetails?.cashAdvanceInterestRate | bbIsDefined)\n           }\"\n      >\n\n        <!-- Minimum Payment -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.minimumPayment | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Minimum Payment|Minimum Payment label credit card@@product.details.credit.card.label.minimumPayment\"\n              >Minimum Payment</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Trigger tooltip for Minimum Payment\"\n              i18n-aria-label=\"Trigger tooltip for Minimum Payment|@@product.details.credit.card.minimumPayment.aria.label.openclose\"\n              bbTooltip=\"The minimum payment set a percentage of balance, or a fixed cash amount\"\n              i18n-bbTooltip=\"Minimum Payment info|Minimum Payment tooltip info@@product.details.credit.card.tooltip.minimumPayment\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"credit-card-minimumPayment\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.minimumPayment\">\n          </bb-amount-ui>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.minimumPayment | bbIsDefined) && (product.applicableInterestRate | bbIsDefined)\"></div>\n\n        <!-- Minimum Payment Due Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.minimumPaymentDueDate | bbIsDefined)\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Minimum Payment Due Date|Minimum Payment Due Date label credit card@@product.details.credit.card.label.minimumPaymentDueDate\"\n              >Minimum Payment Due Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Trigger tooltip for Minimum Payment Due Date\"\n              i18n-aria-label=\"Trigger tooltip for Minimum Payment Due Date|@@product.details.credit.card.minimumPaymentDueDate.aria.label.openclose\"\n              bbTooltip=\"Minimum Payment Due Date shown on your monthly statement to remain in good standing\"\n              i18n-bbTooltip=\"Minimum Payment Due Date info|Minimum Payment Due Date tooltip info@@product.details.credit.card.tooltip.minimumPaymentDueDate\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-minimumPaymentDueDate\">\n            {{product.minimumPaymentDueDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           [ngClass]=\"{\n             'bb-block--md':\n               (product.cardDetails?.lastPaymentAmount | bbIsDefined) ||\n               (product.cardDetails?.lastPaymentDate | bbIsDefined)}\"\n           *ngIf=\"(product.applicableInterestRate | bbIsDefined) ||\n                  (product.interestDetails?.cashAdvanceInterestRate | bbIsDefined)\">\n\n        <!-- Cash Advance APR -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.interestDetails?.cashAdvanceInterestRate | bbIsDefined)\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Cash Advance APR|Cash Advance APR label credit card\n                          @@product.details.credit.card.label.cashAdvanceInterestRate\"\n              >Cash Advance APR</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Cash Advance APR\"\n                    i18n-aria-label=\"Toggle tooltip for Cash Advance APR\n                                     @@product.details.credit.card.cashAdvanceInterestRate.aria.label.openclose\"\n                    bbTooltip=\"Cash Advance APR\"\n                    i18n-bbTooltip=\"Cash Advance APR info|Cash Advance APR tooltip info\n                     @@product.details.credit.card.tooltip.cashAdvanceInterestRate\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-cashAdvanceInterestRate\">\n            {{product.interestDetails?.cashAdvanceInterestRate}} %\n          </div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.applicableInterestRate | bbIsDefined) &&\n                    (product.interestDetails?.cashAdvanceInterestRate | bbIsDefined)\"></div>\n\n        <!-- Interest Rate -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.applicableInterestRate | bbIsDefined)\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Interest Rate|Interest Rate label credit card@@product.details.credit.card.label.applicableInterestRate\"\n              >Interest Rate</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Interest Rate\"\n                    i18n-aria-label=\"Toggle tooltip for Interest Rate|@@product.details.credit.card.applicableInterestRate.aria.label.openclose\"\n                    bbTooltip=\"The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal\"\n                    i18n-bbTooltip=\"Interest Rate info|Interest Rate tooltip info@@product.details.credit.card.tooltip.applicableInterestRate\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-applicableInterestRate\">\n            {{product.applicableInterestRate}} %\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--md':\n            (product.cardDetails?.previousStatementBalance | bbIsDefined) ||\n             product.cardDetails?.previousStatementDate\n           }\"\n           *ngIf=\"\n            (product.cardDetails?.lastPaymentAmount | bbIsDefined) ||\n             product.cardDetails?.lastPaymentDate\">\n\n        <!-- Last Payment Amount -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.cardDetails?.lastPaymentAmount | bbIsDefined)\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Last Payment Amount|Last Payment Amount label credit card\n                          @@product.details.credit.card.label.lastPaymentAmount\"\n              >Last Payment Amount</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Last Payment Amount\"\n                    i18n-aria-label=\"Toggle tooltip for Last Payment Amount\n                                     @@product.details.credit.card.lastPaymentAmount.aria.label.openclose\"\n                    bbTooltip=\"Last Payment Amount\"\n                    i18n-bbTooltip=\"Last Payment Amount info|Last Payment Amount tooltip info\n                                    @@product.details.credit.card.tooltip.lastPaymentAmount\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n                  data-role=\"credit-card-lastPaymentAmount\"\n                  [currency]=\"product.currency\"\n                  [amount]=\"product.cardDetails?.lastPaymentAmount\">\n          </bb-amount-ui>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"\n               (product.cardDetails?.lastPaymentAmount | bbIsDefined) &&\n                product.cardDetails?.lastPaymentDate\"></div>\n\n        <!-- Last Payment Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.cardDetails?.lastPaymentDate\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Last Payment Date|Last Payment Date label credit card\n                          @@product.details.credit.card.label.lastPaymentDate\"\n              >Last Payment Date</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Last Payment Date\"\n                    i18n-aria-label=\"Toggle tooltip for Last Payment Date|@@product.details.credit.card.lastPaymentDate.aria.label.openclose\"\n                    bbTooltip=\"Last Payment Date\"\n                    i18n-bbTooltip=\"Last Payment Date info|Last Payment Date tooltip info@@product.details.credit.card.tooltip.lastPaymentDate\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-lastPaymentDate\">\n            {{product.cardDetails?.lastPaymentDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           [ngClass]=\"{'bb-block--md':\n             (product.interestDetails?.penaltyInterestRate | bbIsDefined) ||\n             (product.cardDetails?.latePaymentFee | bbIsDefined)\n            }\"\n           *ngIf=\"\n             (product.cardDetails?.previousStatementBalance | bbIsDefined) ||\n              product.cardDetails?.previousStatementDate\">\n\n        <!-- Last Statement Balance -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.cardDetails?.previousStatementBalance | bbIsDefined)\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Last Statement Balance|Last Statement Balance label credit card\n                          @@product.details.credit.card.label.previousStatementBalance \"\n              >Last Statement Balance</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Last Statement Balance\"\n                    i18n-aria-label=\"Toggle tooltip for Last Statement Balance|@@product.details.credit.card.previousStatementBalance.aria.label.openclose\"\n                    bbTooltip=\"Last Statement Balance\"\n                    i18n-bbTooltip=\"Last Statement Balance info|Last Statement Balance tooltip info@@product.details.credit.card.tooltip.previousStatementBalance\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n                  data-role=\"credit-card-previousStatementBalance\"\n                  [currency]=\"product.currency\"\n                  [amount]=\"product.cardDetails?.previousStatementBalance\">\n          </bb-amount-ui>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.cardDetails?.previousStatementBalance | bbIsDefined) &&\n                     product.cardDetails?.previousStatementDate\"></div>\n\n        <!-- Last Statement Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.cardDetails?.previousStatementDate\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Last Statement Date|Last Statement Date label credit card\n                          @@product.details.credit.card.label.previousStatementDate\"\n              >Last Statement Date</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Last Statement Date\"\n                    i18n-aria-label=\"Toggle tooltip for Last Statement Date\n                                     @@product.details.credit.card.previousStatementDate.aria.label.openclose\"\n                    bbTooltip=\"Last Statement Date\"\n                    i18n-bbTooltip=\"Last Statement Date info|Last Statement Date tooltip info\n                                    @@product.details.credit.card.tooltip.previousStatementDate\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-previousStatementDate\">\n            {{product.cardDetails?.previousStatementDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           *ngIf=\"(product.interestDetails?.penaltyInterestRate | bbIsDefined) ||\n                  (product.cardDetails?.latePaymentFee | bbIsDefined)\">\n\n        <!-- Penalty APR -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.interestDetails?.penaltyInterestRate | bbIsDefined)\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Penalty APR|Penalty APR label credit card\n                          @@product.details.credit.card.label.penaltyInterestRate\"\n              >Penalty APR</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Toggle tooltip for Penalty APR\"\n                    i18n-aria-label=\"Toggle tooltip for Penalty APR|@@product.details.credit.card.penaltyInterestRate.aria.label.openclose\"\n                    bbTooltip=\"Penalty APR\"\n                    i18n-bbTooltip=\"Penalty APR info|Penalty APR tooltip info@@product.details.credit.card.tooltip.penaltyInterestRate \"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-penaltyInterestRate\">\n            {{product.interestDetails?.penaltyInterestRate}} %\n          </div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.interestDetails?.penaltyInterestRate | bbIsDefined) &&\n                    (product.cardDetails?.latePaymentFee | bbIsDefined)\"></div>\n\n        <!-- Late Fee -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"(product.cardDetails?.latePaymentFee | bbIsDefined)\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Late Fee|Late Fee label credit card\n                          @@product.details.credit.card.label.latePaymentFee\"\n              >Late Fee</span>\n            <bb-icon-ui\n                    class=\"bb-stack__item bb-text-support\"\n                    data-role=\"toggle-tooltip-icon\"\n                    tabindex=\"0\"\n                    name=\"info\"\n                    size=\"sm\"\n                    aria-label=\"Late Fee\"\n                    i18n-aria-label=\"Toggle tooltip for Late Fee\n                                     @@product.details.credit.card.latePaymentFee.aria.label.openclose\"\n                    bbTooltip=\"Late Fee\"\n                    i18n-bbTooltip=\"Late Fee info|Late Fee tooltip info\n                                    @@product.details.credit.card.tooltip.latePaymentFee\"\n                    triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <ng-container *ngIf=\"product.cardDetails?.latePaymentFee | bbIsPercentValue; else latePaymentAmount\"\n          >\n            <span data-role=\"credit-card-latePaymentFee\">{{product.cardDetails?.latePaymentFee}}</span>\n          </ng-container>\n          <ng-template #latePaymentAmount>\n            <bb-amount-ui\n                    data-role=\"credit-card-latePaymentFee\"\n                    [currency]=\"product.currency\"\n                    [amount]=\"product.cardDetails?.latePaymentFee\">\n            </bb-amount-ui>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Other -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Other|Other label current account@@product.details.credit.card.label.other.section\"\n      >Other</h3>\n    </div>\n\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           *ngIf=\"product.accountOpeningDate || product.lastUpdateDate\">\n\n        <!-- Account Opening Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountOpeningDate\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Account Opening Date|Account Opening Date label current account@@product.details.credit.card.label.accountOpeningDate\"\n              >Account Opening Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Account Opening Date\"\n              i18n-aria-label=\"Toggle tooltip for Account Opening Date|@@product.details.credit.card.accountOpeningDate.aria.label.openclose\"\n              bbTooltip=\"The date of activation of the account in the bank's system\"\n              i18n-bbTooltip=\"Account Opening Date info|Account Opening Date tooltip info@@product.details.credit.card.tooltip.accountOpeningDate\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-accountOpeningDate\">\n            {{product.accountOpeningDate | date: 'longDate'}}\n          </div>\n        </div>\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.accountOpeningDate && product.lastUpdateDate\"></div>\n\n        <!-- Last Updated Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastUpdateDate\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Last Updated Date|Last Updated Date label current account@@product.details.credit.card.label.lastUpdateDate\"\n              >Last Updated Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Last Update Date\"\n              i18n-aria-label=\"Toggle tooltip for Last Update Date|@@product.details.credit.card.lastUpdateDate.aria.label.openclose\"\n              bbTooltip=\"Last date of parameter update for the product\"\n              i18n-bbTooltip=\"Last Updated Date info|Last Updated Date tooltip info@@product.details.credit.card.tooltip.lastUpdateDate\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"credit-card-lastUpdateDate\">\n            {{product.lastUpdateDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace.ArrangementStateIndicatorComponent; }), selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsCreditCardCustomizableDirective; }), selector: "[bbProductSummaryDetailsCreditCardCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }], pipes: { "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }), "bbIsInArray": i0__namespace.forwardRef(function () { return i6__namespace.IsInArrayPipe; }), "date": i0__namespace.forwardRef(function () { return i4__namespace$1.DatePipe; }), "bbDateUpdatedAgo": i0__namespace.forwardRef(function () { return i6__namespace.DateUpdatedAgoPipe; }), "bbIsPercentValue": i0__namespace.forwardRef(function () { return i6__namespace.IsPercentValue; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CreditCardDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-credit-card-details',
                        templateUrl: 'credit-card-details.component.html',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing details
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsCreditCardCustomizable
     *   let-hostRef
     *   let-product="context.product">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsCreditCardCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsCreditCardCustomizableDirective, _super);
        function ProductSummaryDetailsCreditCardCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsCreditCardCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsCreditCardCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsCreditCardCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsCreditCardCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsCreditCardCustomizableDirective, selector: "[bbProductSummaryDetailsCreditCardCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsCreditCardCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsCreditCardCustomizable]',
                    }]
            }] });

    /**
     * Displays details for a product with the `'Debit Card'` type
     *
     * The following extension slots are available in this component:
     *
     * - `ProductSummaryDetailsDebitCardCustomizableDirective`
     *
     * @see ProductSummaryDetailsDebitCardCustomizableDirective
     *
     * @usageNotes
     *
     * ### Display details
     *
     * ```html
     * <bb-debit-card-details
     *   [product]="item"
     *   [maskableAttributes]="hostRef.maskableAttributes"
     *   (unmaskAttribute)="hostRef.onUnmaskAttribute($event, item)"
     *   (maskAttribute)="hostRef.onMaskAttribute($event, item)">
     * </bb-debit-card-details>
     * ```
     *
     * @ngModule ProductSummaryDetailsWidgetModule
     */
    var DebitCardDetailsComponent = /** @class */ (function (_super) {
        __extends(DebitCardDetailsComponent, _super);
        function DebitCardDetailsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.hostRef = _this;
            return _this;
        }
        return DebitCardDetailsComponent;
    }(i6.ProductSummaryAccountDetailsBaseComponent));
    DebitCardDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DebitCardDetailsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    DebitCardDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DebitCardDetailsComponent, selector: "bb-debit-card-details", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductSummaryDetailsDebitCardCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    product: product\n  }\">\n</ng-container>\n\n<ng-template\n  bbProductSummaryDetailsDebitCardCustomizable\n  let-hostRef\n  let-product=\"context.product\"\n>\n  <!-- General -->\n  <div class=\"bb-product-summary-details card\" data-role=\"general-details\">\n    <div class=\"card-header\">\n      <h3 i18n=\"General|General Section label debit card@@product.details.debit.card.label.general.section\"\n      >General</h3>\n    </div>\n\n    <div class=\"card-body\">\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.productTypeName || product.IBAN\"\n      >\n        <!-- Account Type -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.productTypeName\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n\n          >\n            Account Type\n          </div>\n          <div data-role=\"productTypeName\">\n            {{ product.productTypeName }}\n          </div>\n        </div>\n        <!-- IBAN -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.IBAN\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"IBAN|IBAN label debit card@@product.details.debit.card.label.iban\"\n          >\n            IBAN\n          </div>\n          <div class=\"bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item\">\n              <bb-product-number\n                type=\"iban\"\n                [number]=\"product.IBAN\"\n                [unmaskable]=\"\n                  !(product.financialInstitutionId | bbIsDefined) &&\n                  hostRef.maskableAttribute.IBAN | bbIsInArray: product.unmaskableAttributes\"\n                [masked]=\"hostRef.isMasked(hostRef.maskableAttribute.IBAN)\"\n                (unmask)=\"hostRef.onUnmaskAttribute($event)\"\n                (mask)=\"hostRef.onMaskAttribute($event)\"\n              ></bb-product-number>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.availableBalance | bbIsDefined) || product.accountHolderNames\">\n        <!-- Available Balance -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.availableBalance | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\">\n            Available Balance\n          </div>\n          <bb-amount-ui\n            data-role=\"debit-card-availableBalance\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.availableBalance\">\n          </bb-amount-ui>\n        </div>\n        <!-- Account Owner(s) -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountHolderNames\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Owner(s)|Account Owner label debit card@@product.details.debit.card.label.accountHolderNames\"\n          >\n            Account Owner(s)\n          </div>\n          <div data-role=\"debit-card-accountHolderNames\">\n            {{product.accountHolderNames}}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.bankBranchCode | bbIsDefined) || (product.bankBranchCode2 | bbIsDefined)\">\n        <!-- Branch Code -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"ACH Routing Number|Branch Code label debit card@@account.details.debit.card.label.bankBranchCode\">\n            ACH Routing Number\n          </div>\n          <div data-role=\"bankBranchCode\">\n            {{ product.bankBranchCode }}\n          </div>\n        </div>\n        <!-- Branch Code 2-->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode2 | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"FedWire Routing Number|Branch Code 2 label debit card@@account.details.debit.card.label.bankBranchCode2\">\n            FedWire Routing Number\n          </div>\n          <div data-role=\"bankBranchCode2\">\n            {{ product.bankBranchCode2 }}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.state || product?.financialInstitution?.name\">\n        <!-- Account Status -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.state?.state\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Status|Account Status label@@product.details.account.label.accountStatus\"\n          >\n            Account Status\n          </div>\n          <bb-arrangement-state-indicator\n            data-role=\"account-details-accountStatus\"\n            [showIcon]=\"false\"\n            [showActive]=\"true\"\n            [state]=\"product.state.state\"\n          ></bb-arrangement-state-indicator>\n        </div>\n\n        <!-- Bank name -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.financialInstitution?.name\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Bank Name|Bank Name label debit card\n                        @@product.details.debit.card.label.financialInstitution.name\"\n            >Bank Name</span>\n          </div>\n          <div data-role=\"debit-card-financialInstitution-name\">\n            {{product?.financialInstitution?.name}}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.lastSyncDate\">\n        <!-- Last sync date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastSyncDate\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Last sync|Last sync label@@product.details.debit.card.label.lastSyncDate\"\n          >Last sync\n          </div>\n          <div data-role=\"debit-card-lastSyncDate\">\n            {{ product.lastSyncDate | bbDateUpdatedAgo }}\n          </div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.lastSyncDate\"></div>\n        <!-- Placeholder -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"></div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Other -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Other|Other label debit card@@product.details.debit.card.label.other.section\">Other</h3>\n    </div>\n\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           *ngIf=\"product.accountOpeningDate || product.lastUpdateDate\">\n\n        <!-- Account Opening Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountOpeningDate\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Account Opening Date|Account Opening Date label debit card@@product.details.debit.card.label.accountOpeningDate\"\n              >Account Opening Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Account Opening Date\"\n              i18n-aria-label=\"Toggle tooltip for Account Opening Date|@@product.details.debit.card.accountOpeningDate.aria.label.openclose\"\n              bbTooltip=\"Account Opening Date\"\n              i18n-bbTooltip=\"Account Opening Date info|Account Opening Date tooltip info debit card@@product.details.debit.card.tooltip.accountOpeningDate\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"debit-card-accountOpeningDate\">\n            {{product.accountOpeningDate | date: 'longDate'}}\n          </div>\n        </div>\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.accountOpeningDate && product.lastUpdateDate\"></div>\n\n        <!-- Last Updated Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastUpdateDate\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Last Updated Date|Last Updated Date label debit card@@product.details.debit.card.label.lastUpdateDate\"\n              >Last Updated Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Last Updated Date\"\n              i18n-aria-label=\"Toggle tooltip for Last Updated Date|@@product.details.debit.card.lastUpdateDate.aria.label.openclose\"\n              bbTooltip=\"Last Updated Date\"\n              i18n-bbTooltip=\"Last Updated Date info|Last Updated Date tooltip info debit card@@product.details.debit.card.tooltip.lastUpdateDate\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"debit-card-lastUpdateDate\">\n            {{product.lastUpdateDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace.ArrangementStateIndicatorComponent; }), selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsDebitCardCustomizableDirective; }), selector: "[bbProductSummaryDetailsDebitCardCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }], pipes: { "bbIsInArray": i0__namespace.forwardRef(function () { return i6__namespace.IsInArrayPipe; }), "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }), "bbDateUpdatedAgo": i0__namespace.forwardRef(function () { return i6__namespace.DateUpdatedAgoPipe; }), "date": i0__namespace.forwardRef(function () { return i4__namespace$1.DatePipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DebitCardDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-debit-card-details',
                        templateUrl: 'debit-card-details.component.html',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing details
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsDebitCardCustomizable
     *   let-hostRef
     *   let-product="context.product">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsDebitCardCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsDebitCardCustomizableDirective, _super);
        function ProductSummaryDetailsDebitCardCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsDebitCardCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsDebitCardCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsDebitCardCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsDebitCardCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsDebitCardCustomizableDirective, selector: "[bbProductSummaryDetailsDebitCardCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsDebitCardCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsDebitCardCustomizable]',
                    }]
            }] });

    /**
     * Displays details for a product with the `'Investment Account'` type
     *
     * The following extension slots are available in this component:
     *
     * - `ProductSummaryDetailsInvestmentAccountCustomizableDirective`
     *
     * @see ProductSummaryDetailsInvestmentAccountCustomizableDirective
     *
     * @usageNotes
     *
     * ### Display details
     *
     * ```html
     * <bb-investment-account-details
     *   [product]="item"
     *   [maskableAttributes]="hostRef.maskableAttributes"
     *   (unmaskAttribute)="hostRef.onUnmaskAttribute($event, item)"
     *   (maskAttribute)="hostRef.onMaskAttribute($event, item)">
     * </bb-investment-account-details>
     * ```
     *
     * @ngModule ProductSummaryDetailsWidgetModule
     */
    var InvestmentAccountDetailsComponent = /** @class */ (function (_super) {
        __extends(InvestmentAccountDetailsComponent, _super);
        function InvestmentAccountDetailsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.hostRef = _this;
            return _this;
        }
        return InvestmentAccountDetailsComponent;
    }(i6.ProductSummaryAccountDetailsBaseComponent));
    InvestmentAccountDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InvestmentAccountDetailsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    InvestmentAccountDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InvestmentAccountDetailsComponent, selector: "bb-investment-account-details", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductSummaryDetailsInvestmentAccountCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    product: product\n  }\">\n</ng-container>\n\n<ng-template\n  bbProductSummaryDetailsInvestmentAccountCustomizable\n  let-hostRef\n  let-product=\"context.product\"\n>\n  <!-- General -->\n  <div class=\"bb-product-summary-details card\" data-role=\"general-details\">\n    <div class=\"card-header\">\n      <h3\n        i18n=\"General|General Section label investment account\n        @@product.details.investment.account.label.general.section\">\n        General\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.productTypeName || product.BBAN\">\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.productTypeName\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Type|Account type label investment account\n              @@product.details.investment.account.label.productTypeName\">\n            Account Type\n          </div>\n          <div data-role=\"productTypeName\">{{product.productTypeName}}</div>\n        </div>\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.BBAN\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Number|Account number label investment account\n              @@product.details.investment.account.label.account.number\">\n            Account Number\n          </div>\n          <div data-role=\"investment-account-bban\"\n               class=\"bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item\">\n              <bb-product-number\n                type=\"bban\"\n                [number]=\"product.BBAN\"\n                [unmaskable]=\"\n                  !(product.financialInstitutionId | bbIsDefined) &&\n                  hostRef.maskableAttribute.BBAN | bbIsInArray: product.unmaskableAttributes\"\n                [masked]=\"hostRef.isMasked(hostRef.maskableAttribute.BBAN)\"\n                (unmask)=\"hostRef.onUnmaskAttribute($event)\"\n                (mask)=\"hostRef.onMaskAttribute($event)\"\n              ></bb-product-number>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.totalInvestmentValue | bbIsDefined) || product.accountHolderNames\">\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.totalInvestmentValue | bbIsDefined\">\n          <div\n            class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n              <span i18n=\"Total Investment Value|Total investment label investment account\n              @@product.details.investment.account.label.totalInvestmentValue\"\n                    class=\"bb-text-bold bb-stack__item\">Total Investment Value</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Total investment value\"\n              i18n-aria-label=\"Toggle tooltip for Total investment value|@@product.details.investment.account.totalInvestmentValue.aria.label.openclose\"\n              bbTooltip=\"Total investment value\"\n              i18n-bbTooltip=\"Total investment value info|Total investment value tooltip info investment account@@product.details.investment.account.tooltip.totalInvestmentValue\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"investment-account-totalInvestmentValue\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.totalInvestmentValue\">\n          </bb-amount-ui>\n        </div>\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountHolderNames\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Owner(s)|Account Owner label investment account\n              @@product.details.investment.account.label.accountHolderNames\">\n            Account Owner(s)\n          </div>\n          <div data-role=\"investment-account-accountHolderNames\">{{product.accountHolderNames}}</div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.bankBranchCode | bbIsDefined) || (product.bankBranchCode2 | bbIsDefined)\">\n        <!-- Branch Code -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"ACH Routing Number|Branch Code label investment account@@account.details.investment.account.label.bankBranchCode\">\n            ACH Routing Number\n          </div>\n          <div data-role=\"bankBranchCode\">\n            {{ product.bankBranchCode }}\n          </div>\n        </div>\n        <!-- Branch Code 2-->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode2 | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"FedWire Routing Number|Branch Code 2 label investment account@@account.details.investment.account.label.bankBranchCode2\">\n            FedWire Routing Number\n          </div>\n          <div data-role=\"bankBranchCode2\">\n            {{ product.bankBranchCode2 }}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.state || product?.financialInstitution?.name\">\n        <!-- Account status -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.state?.state\">\n          <div\n            class=\"bb-block bb-block--sm bb-text-bold\"\n            i18n=\"Account Status|Account Status label\n              @@product.details.investment.account.label.accountStatus\">\n            Account Status\n          </div>\n          <bb-arrangement-state-indicator\n            data-role=\"account-details-accountStatus\"\n            [showIcon]=\"false\"\n            [showActive]=\"true\"\n            [state]=\"product?.state?.state\"></bb-arrangement-state-indicator>\n        </div>\n\n        <!-- Bank name -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.financialInstitution?.name\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Bank Name|Bank Name label investment account\n                        @@product.details.investment.account.label.financialInstitution.name\"\n            >Bank Name</span>\n          </div>\n          <div data-role=\"investment-account-financialInstitution-name\">\n            {{product?.financialInstitution?.name}}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.lastSyncDate\">\n        <!-- Last sync date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastSyncDate\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Last sync|Last sync label@@product.details.investment.account.label.lastSyncDate\"\n          >Last sync\n          </div>\n          <div data-role=\"investment-account-lastSyncDate\">\n            {{ product.lastSyncDate | bbDateUpdatedAgo }}\n          </div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.lastSyncDate\"></div>\n        <!-- Placeholder -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"></div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Other -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3\n        i18n=\"Other|Other label investment account\n        @@product.details.investment.account.label.other.section\">\n        Other\n      </h3>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-stack bb-stack--wrap\"\n           *ngIf=\"product.accountOpeningDate || product.lastUpdateDate\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountOpeningDate\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span i18n=\"Account Opening Date|Account Opening Date label investment account\n            @@product.details.investment.account.label.accountOpeningDate\"\n                  class=\"bb-text-bold bb-stack__item\">Account Opening Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Account Opening Date\"\n              i18n-aria-label=\"Toggle tooltip for Account Opening Date|@@product.details.investment.account.accountOpeningDate.aria.label.openclose\"\n              bbTooltip=\"Account Opening Date\"\n              i18n-bbTooltip=\"Account Opening Date info|Account Opening Date tooltip info investment account@@product.details.investment.account.tooltip.accountOpeningDate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n\n          <div data-role=\"investment-account-accountOpeningDate\">\n            {{product.accountOpeningDate | date: 'longDate'}}\n          </div>\n        </div>\n\n        <div *ngIf=\"product.accountOpeningDate && product.lastUpdateDate\"\n             class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-lg\"></div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastUpdateDate\">\n          <div class=\"bb-block bb-block--sm  bb-stack bb-stack--density-sm\">\n            <span i18n=\"Last Updated Date|Last Updated Date label investment account\n            @@product.details.investment.account.label.lastUpdateDate\"\n                  class=\"bb-stack__item bb-text-bold\">Last Updated Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Tooltip for Last Updated Date\"\n              i18n-aria-label=\"Tooltip for Last Updated Date|@@product.details.investment.account.lastUpdateDate.aria.label.openclose\"\n              bbTooltip=\"Last Updated Date\"\n              i18n-bbTooltip=\"Last Updated Date info|Last Updated Date tooltip info investment account@@product.details.investment.account.tooltip.lastUpdateDate\"\n              triggers=\"focus hover\"\n            >\n            </bb-icon-ui>\n          </div>\n\n          <div data-role=\"investment-account-lastUpdateDate\">\n            {{product.lastUpdateDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace.ArrangementStateIndicatorComponent; }), selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsInvestmentAccountCustomizableDirective; }), selector: "[bbProductSummaryDetailsInvestmentAccountCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }], pipes: { "bbIsInArray": i0__namespace.forwardRef(function () { return i6__namespace.IsInArrayPipe; }), "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }), "bbDateUpdatedAgo": i0__namespace.forwardRef(function () { return i6__namespace.DateUpdatedAgoPipe; }), "date": i0__namespace.forwardRef(function () { return i4__namespace$1.DatePipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InvestmentAccountDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-investment-account-details',
                        templateUrl: 'investment-account-details.component.html',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing details
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsInvestmentAccountCustomizable
     *   let-hostRef
     *   let-product="context.product">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsInvestmentAccountCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsInvestmentAccountCustomizableDirective, _super);
        function ProductSummaryDetailsInvestmentAccountCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsInvestmentAccountCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsInvestmentAccountCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsInvestmentAccountCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsInvestmentAccountCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsInvestmentAccountCustomizableDirective, selector: "[bbProductSummaryDetailsInvestmentAccountCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsInvestmentAccountCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsInvestmentAccountCustomizable]',
                    }]
            }] });

    /**
     * Displays details for a product with the default a custom type (Default view)
     *
     * The following extension slots are available in this component:
     *
     * - `ProductSummaryDetailsOtherCustomizableDirective`
     *
     * @see ProductSummaryDetailsOtherCustomizableDirective
     *
     * @usageNotes
     *
     * ### Display details
     *
     * ```html
     * <bb-other-account-details
     *   [product]="item"
     *   [maskableAttributes]="hostRef.maskableAttributes"
     *   (unmaskAttribute)="hostRef.onUnmaskAttribute($event, item)"
     *   (maskAttribute)="hostRef.onMaskAttribute($event, item)">
     * </bb-other-account-details>
     * ```
     *
     * @ngModule ProductSummaryDetailsWidgetModule
     */
    var OtherDetailsComponent = /** @class */ (function (_super) {
        __extends(OtherDetailsComponent, _super);
        function OtherDetailsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            /**
             * @internal
             */
            _this.hostRef = _this;
            return _this;
        }
        return OtherDetailsComponent;
    }(i6.ProductSummaryAccountDetailsBaseComponent));
    OtherDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: OtherDetailsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    OtherDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: OtherDetailsComponent, selector: "bb-other-account-details", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbProductSummaryDetailsOtherCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    product: product\n  }\">\n</ng-container>\n\n<ng-template\n  bbProductSummaryDetailsOtherCustomizable\n  let-hostRef\n  let-product=\"context.product\"\n>\n  <!-- General -->\n  <div class=\"bb-product-summary-details card\" data-role=\"general-details\">\n    <div class=\"card-header\">\n      <h3 i18n=\"General|General Section label@@product.details.other.account.label.general.section\">General</h3>\n    </div>\n\n    <div class=\"card-body\">\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.productTypeName || product.IBAN\"\n      >\n        <!-- Account Type -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.productTypeName\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Type|Account type label other account@@product.details.other.account.label.productTypeName\"\n          >\n            Account Type\n          </div>\n          <div data-role=\"productTypeName\">\n            {{product.productTypeName}}\n          </div>\n        </div>\n        <!-- Account Number -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.IBAN\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Number|Account number label other account@@product.details.other.account.label.account.number\"\n          >\n            Account Number\n          </div>\n          <div class=\"bb-stack bb-stack--density-sm\"\n               data-role=\"other-account-iban\">\n            <span class=\"bb-stack__item\">\n              <bb-product-number\n                type=\"iban\"\n                [number]=\"product.IBAN\"\n                [unmaskable]=\"\n                  !(product.financialInstitutionId | bbIsDefined) &&\n                  hostRef.maskableAttribute.IBAN | bbIsInArray: product.unmaskableAttributes\"\n                [masked]=\"hostRef.isMasked(hostRef.maskableAttribute.IBAN)\"\n                (unmask)=\"hostRef.onUnmaskAttribute($event)\"\n                (mask)=\"hostRef.onMaskAttribute($event)\"\n              ></bb-product-number>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.bookedBalance | bbIsDefined) || product.accountHolderNames\">\n        <!-- Account Balance -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.bookedBalance | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Account Balance|Account Balance label other account@@product.details.other.account.label.bookedBalance\"\n              >Account Balance</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Account Balance\"\n              i18n-aria-label=\"Toggle tooltip for Account Balance|@@product.details.other.account.bookedBalance.aria.label.openclose\"\n              bbTooltip=\"Account Balance\"\n              i18n-bbTooltip=\"Account Balance info|Account Balance tooltip info other account@@product.details.other.account.tooltip.bookedBalance\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"other-account-bookedBalance\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.bookedBalance\">\n          </bb-amount-ui>\n        </div>\n        <!-- Account Owner(s) -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountHolderNames\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Owner(s)|Account Owner label other account@@product.details.other.account.label.accountHolderNames\">\n            Account Owner(s)\n          </div>\n          <div data-role=\"other-account-accountHolderNames\">\n            {{product.accountHolderNames}}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"(product.bankBranchCode | bbIsDefined) || (product.bankBranchCode2 | bbIsDefined)\">\n        <!-- Branch Code -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"ACH Routing Number|Branch Code label other account@@account.details.other.account.label.bankBranchCode\">\n            ACH Routing Number\n          </div>\n          <div data-role=\"bankBranchCode\">\n            {{ product.bankBranchCode }}\n          </div>\n        </div>\n        <!-- Branch Code 2-->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\" *ngIf=\"product.bankBranchCode2 | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"FedWire Routing Number|Branch Code 2 label other account@@account.details.other.account.label.bankBranchCode2\">\n            FedWire Routing Number\n          </div>\n          <div data-role=\"bankBranchCode2\">\n            {{ product.bankBranchCode2 }}\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.state || product?.financialInstitution?.name\">\n        <!-- Account Status -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.state?.state\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Account Status|Account Status label@@product.details.other.account.label.accountStatus\"\n          >\n            Account Status\n          </div>\n          <bb-arrangement-state-indicator\n            data-role=\"account-details-accountStatus\"\n            [showIcon]=\"false\"\n            [showActive]=\"true\"\n            [state]=\"product.state.state\"\n          ></bb-arrangement-state-indicator>\n        </div>\n\n        <!-- Bank name -->\n        <div class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product?.financialInstitution?.name\">\n          <div class=\"bb-block bb-block--sm bb-text-bold bb-stack bb-stack--density-sm\">\n            <span class=\"bb-stack__item bb-text-bold\"\n                  i18n=\"Bank Name|Bank Name label\n                        @@product.details.other.account.label.financialInstitution-name\"\n            >Bank Name</span>\n          </div>\n          <div data-role=\"other-financialInstitution-name\">\n            {{product?.financialInstitution?.name}}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n           *ngIf=\"product.lastSyncDate\">\n        <!-- Last sync date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastSyncDate\">\n          <div class=\"bb-block bb-block--sm bb-text-bold\"\n               i18n=\"Last sync|Last sync label@@product.details.other.label.lastSyncDate\"\n          >Last sync\n          </div>\n          <div data-role=\"other-lastSyncDate\">\n            {{ product.lastSyncDate | bbDateUpdatedAgo }}\n          </div>\n        </div>\n\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.lastSyncDate\"></div>\n        <!-- Placeholder -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"></div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Interest Details -->\n  <div class=\"bb-product-summary-details card\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Interest Details|Interest Details label other account@@product.details.other.account.label.interest.section\">\n        Interest Details</h3>\n    </div>\n\n    <div class=\"card-body\"\n         *ngIf=\"(product.accountInterestRate | bbIsDefined) || (product.accruedInterest | bbIsDefined)\">\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\">\n\n        <!-- Interest Rate -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountInterestRate | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Interest Rate|Interest Rate label other account@@product.details.other.account.label.interestRate\"\n              >Interest Rate</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Interest Rate\"\n              i18n-aria-label=\"Toggle tooltip for Interest Rate|@@product.details.other.account.interestRate.aria.label.openclose\"\n              bbTooltip=\"The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal\"\n              i18n-bbTooltip=\"Interest Rate info|Interest Rate tooltip info@@product.details.other.account.tooltip.interestRate\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"other-account-accountInterestRate\">{{product.accountInterestRate}}%</div>\n        </div>\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"(product.accountInterestRate | bbIsDefined) && (product.accruedInterest | bbIsDefined)\"></div>\n\n        <!-- Accrued Interest -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accruedInterest | bbIsDefined\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Accrued Interest|Accrued Interest label other account@@product.details.other.account.label.accruedInterest\"\n              >Accrued Interest</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Accrued Interest\"\n              i18n-aria-label=\"Toggle tooltip for Accrued Interest|@@product.details.other.account.accruedInterest.aria.label.openclose\"\n              bbTooltip=\"The interest that is earned (credit interest) or due (debit interest) but not settled yet\"\n              i18n-bbTooltip=\"Accrued Interest info|Accrued Interest tooltip info@@product.details.other.account.tooltip.accruedInterest\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <bb-amount-ui\n            data-role=\"other-account-accruedInterest\"\n            [currency]=\"product.currency\"\n            [amount]=\"product.accruedInterest\">\n          </bb-amount-ui>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!-- Other -->\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h3 i18n=\"Other|Other label other account@@product.details.other.account.label.other.section\">Other</h3>\n    </div>\n\n    <div class=\"card-body\">\n\n      <div class=\"bb-block bb-block\u2014md bb-stack bb-stack--wrap\"\n           *ngIf=\"product.accountOpeningDate || product.lastUpdateDate\">\n\n        <!-- Account Opening Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.accountOpeningDate\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Account Opening Date|Account Opening Date label other account@@product.details.other.account.label.accountOpeningDate\"\n              >Account Opening Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Account Opening Date\"\n              i18n-aria-label=\"Toggle tooltip for Account Opening Date|@@product.details.other.account.accountOpeningDate.aria.label.openclose\"\n              bbTooltip=\"Account Opening Date\"\n              i18n-bbTooltip=\"Account Opening Date info|Account Opening Date tooltip info other account@@product.details.other.account.tooltip.accountOpeningDate\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"other-account-accountOpeningDate\">\n            {{product.accountOpeningDate | date: 'longDate'}}\n          </div>\n        </div>\n        <div class=\"bb-stack__break bb-stack__break--sm-down bb-stack__break--spacing-md\"\n             *ngIf=\"product.accountOpeningDate && product.lastUpdateDate\"></div>\n\n        <!-- Last Updated Date -->\n        <div class=\"bb-stack__item bb-stack__item--fill\"\n             *ngIf=\"product.lastUpdateDate\">\n          <div class=\"bb-block bb-block--sm bb-stack bb-stack--density-sm\">\n              <span class=\"bb-stack__item bb-text-bold\"\n                    i18n=\"Last Updated Date|Last Updated Date label other account@@product.details.other.account.label.lastUpdateDate\"\n              >Last Updated Date</span>\n            <bb-icon-ui\n              class=\"bb-stack__item bb-text-support\"\n              data-role=\"toggle-tooltip-icon\"\n              tabindex=\"0\"\n              name=\"info\"\n              size=\"sm\"\n              aria-label=\"Toggle tooltip for Last Updated Date\"\n              i18n-aria-label=\"Toggle tooltip for Last Updated Date|@@product.details.other.account.lastUpdateDate.aria.label.openclose\"\n              bbTooltip=\"Last Updated Date\"\n              i18n-bbTooltip=\"Last Updated Date info|Last Updated Date tooltip info other account@@product.details.other.account.tooltip.lastUpdateDate\"\n              triggers=\"focus hover\"\n            ></bb-icon-ui>\n          </div>\n          <div data-role=\"other-account-lastUpdateDate\">\n            {{product.lastUpdateDate | date: 'longDate'}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.ProductNumberComponent; }), selector: "bb-product-number", inputs: ["number", "product", "format", "type", "unmaskable", "masked"], outputs: ["mask", "unmask"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace.ArrangementStateIndicatorComponent; }), selector: "bb-arrangement-state-indicator", inputs: ["state", "showActive", "showIcon", "hideStateTextForMobile"] }], directives: [{ type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsOtherCustomizableDirective; }), selector: "[bbProductSummaryDetailsOtherCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }], pipes: { "bbIsInArray": i0__namespace.forwardRef(function () { return i6__namespace.IsInArrayPipe; }), "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }), "bbDateUpdatedAgo": i0__namespace.forwardRef(function () { return i6__namespace.DateUpdatedAgoPipe; }), "date": i0__namespace.forwardRef(function () { return i4__namespace$1.DatePipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: OtherDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-other-account-details',
                        templateUrl: 'other-details.component.html',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing details
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsOtherCustomizable
     *   let-hostRef
     *   let-product="context.product">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsOtherCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsOtherCustomizableDirective, _super);
        function ProductSummaryDetailsOtherCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsOtherCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsOtherCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsOtherCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsOtherCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsOtherCustomizableDirective, selector: "[bbProductSummaryDetailsOtherCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsOtherCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsOtherCustomizable]',
                    }]
            }] });

    /**
     * Displays details for a product using its ID.
     * The ID is taken from the `selectedAccount` route param.
     *
     * The following extension slots are available in this component:
     *
     * - `ProductSummaryDetailsCustomizableDirective`
     *
     * @see ProductSummaryDetailsCustomizableDirective
     *
     * - `ProductSummaryDetailsHeaderCustomizableDirective`
     *
     * @see ProductSummaryDetailsHeaderCustomizableDirective
     *
     * - `ProductSummaryDetailsViewCustomizableDirective`
     *
     * @see ProductSummaryDetailsViewCustomizableDirective
     *
     * - `ProductSummaryDetailsLoadingCustomizableDirective`
     *
     * @see ProductSummaryDetailsLoadingCustomizableDirective
     *
     * - `ProductSummaryDetailsNoAccountSelectedCustomizableDirective`
     *
     * @see ProductSummaryDetailsNoAccountSelectedCustomizableDirective
     *
     * @usageNotes
     *
     * ### Display details of an account
     *
     * ```html
     * <bb-product-summary-account-details></bb-product-summary-account-details>
     * ```
     *
     * @ngModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsComponent = /** @class */ (function () {
        /**
         * Constructor
         *
         * @param route
         * @param service
         * @param notificationService
         * @param localWindow
         * @param productsExternalInfoService
         */
        function ProductSummaryDetailsComponent(route, service, notificationService, localWindow, productsExternalInfoService) {
            var _this = this;
            this.route = route;
            this.service = service;
            this.notificationService = notificationService;
            this.localWindow = localWindow;
            this.productsExternalInfoService = productsExternalInfoService;
            /**
             * Error notification template reference
             */
            this.errorNotificationTemplate = '';
            /**
             * @internal
             */
            this.hostRef = this;
            this.subscriptions = new rxjs.Subscription();
            /**
             * The ID of the account for which to show the details
             * If not present, the widget has the `noAccountSelected` error state
             */
            this.productId = this.getRouteParam(this.route, 'selectedAccount').pipe(operators.filter(function (productId) {
                var isMultiple = productId ? productId.split(',').length > 1 : false;
                _this.multiple.next(isMultiple);
                return !isMultiple;
            }), operators.map(function (productId) { return productId || ''; }));
            /**
             * If the fetching of the account details failed, this property
             * holds the errors coming from the server
             */
            this.error = this.service.error;
            /**
             * Defines the loading state during the loading of data.
             */
            this.isLoading = this.service.isLoading;
            /**
             * Event is triggered when an unmask button was clicked in any of the product types
             */
            this.unmaskedProductEvent = new rxjs.BehaviorSubject(undefined);
            /**
             * List of maskable attributes to store their states
             */
            this.maskableAttributes = [];
            /**
             * The account details fetched from the server
             */
            this.item = new rxjs.Observable(function (subscriber) {
                var subscriptions = [];
                subscriptions.push(_this._item$.subscribe(function (product) {
                    subscriber.next(product);
                    if (product && i6.hasExternalInfo(product)) {
                        subscriptions.push(_this.productsExternalInfoService
                            .getProductsWithExternalInfo([product])
                            .pipe(operators.map(function (_a) {
                            var _b = __read(_a, 1), productWithFinancialInstitution = _b[0];
                            return productWithFinancialInstitution;
                        }))
                            .subscribe(subscriber));
                    }
                }, subscriber.error));
                return function () { return subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); }); };
            });
            this._item$ = rxjs.combineLatest([
                this.service.productDetailsById.pipe(operators.tap(function () {
                    _this.maskableAttributes = [];
                    _this.unmaskedProductEvent.next(undefined);
                })),
                this.unmaskedProductEvent.pipe(operators.switchMap(function (payload) {
                    if (payload && !payload.attributeValue) {
                        return _this.getUnmaskedAttribute(payload).pipe(operators.filter(function (unmaskedAttribute) { return !!unmaskedAttribute; }), operators.tap(function (unmaskedAttribute) {
                            var maskableAttribute = _this.maskableAttributes.find(function (attribute) { return attribute.attributeName === payload.attributeName; });
                            if (maskableAttribute) {
                                maskableAttribute.masked = false;
                                maskableAttribute.unmaskedValue = unmaskedAttribute;
                            }
                        }), operators.map(function (unmaskedValue) { return ({
                            attributeName: payload.attributeName,
                            attributeValue: unmaskedValue,
                            product: payload.product,
                        }); }));
                    }
                    return rxjs.of(payload);
                }), operators.map(function (payload) {
                    if (payload) {
                        var product = payload.product, attributeName = payload.attributeName, attributeValue = payload.attributeValue;
                        return _this.updateUnmaskedAttributes(product, attributeName, attributeValue || '');
                    }
                    return payload;
                })),
            ]).pipe(operators.map(this.mapProductDetails.bind(this)));
            /**
             * Sets whether the bank customer can see details for multiple accounts at a time.
             */
            this.multiple = new rxjs.BehaviorSubject(false);
            /**
             * List of supported product kind names
             */
            this.productKindNames = i6.ProductKindNames;
            /**
             * Joins the specified error messages to display on the template
             *
             * @param messages
             */
            this.processErrorMessages = i6.processErrorMessages;
            /**
             * Sets the passed unmasked attribute to the product
             *
             * @param product
             * @param attributeName
             * @param attributeValue
             * @private
             */
            this.updateUnmaskedAttributes = i6.setAttribute;
        }
        /**
         * Event handler for product kind details components like `bb-current-account-details`
         * Emits `UnmaskedProductEventPayload` to `unmaskedProductEvent`
         *
         * @param attributeName
         * @param product
         */
        ProductSummaryDetailsComponent.prototype.onMaskAttribute = function (attributeName, product) {
            var maskableAttribute = this.maskableAttributes.find(function (attribute) { return attribute.attributeName === attributeName && attribute.maskedValue; });
            if (maskableAttribute) {
                this.unmaskedProductEvent.next({ attributeName: attributeName, product: product, attributeValue: maskableAttribute.maskedValue });
                maskableAttribute.masked = true;
            }
        };
        /**
         * Event handler for product kind details components like `bb-current-account-details`
         * Emits `UnmaskedProductEventPayload` to `unmaskedProductEvent`
         *
         * @param attributeName
         * @param product
         */
        ProductSummaryDetailsComponent.prototype.onUnmaskAttribute = function (attributeName, product) {
            var maskableAttribute = this.maskableAttributes.find(function (attribute) { return attribute.attributeName === attributeName && attribute.unmaskedValue; });
            var payload = { attributeName: attributeName, product: product };
            if (maskableAttribute) {
                payload['attributeValue'] = maskableAttribute.unmaskedValue;
                maskableAttribute.masked = false;
            }
            else {
                this.maskableAttributes.push({
                    attributeName: attributeName,
                    maskedValue: product[attributeName],
                });
            }
            this.unmaskedProductEvent.next(payload);
        };
        /**
         * Returns unmasked productItem if present otherwise masked one
         *
         * @param details
         * @private
         */
        ProductSummaryDetailsComponent.prototype.mapProductDetails = function (details) {
            var _a = __read(details, 2), productDetails = _a[0], unmaskedProduct = _a[1];
            return unmaskedProduct ? unmaskedProduct : productDetails;
        };
        ProductSummaryDetailsComponent.prototype.getRouteParam = function (route, param) {
            var paramValue = route.paramMap.pipe(operators.pluck('params', param));
            if (!route.parent) {
                return paramValue;
            }
            // ensure that level that has actual value keeps it from being cleared
            return rxjs.combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(operators.map(function (params) { return params[0] || params[1]; }));
        };
        /**
         * @internal
         */
        ProductSummaryDetailsComponent.prototype.ngOnInit = function () {
            this.service.loadProductDetailsFrom(this.productId);
        };
        /**
         * Prints out product details
         */
        ProductSummaryDetailsComponent.prototype.print = function () {
            this.localWindow.print();
        };
        /**
         * @internal
         */
        ProductSummaryDetailsComponent.prototype.ngOnDestroy = function () {
            this.subscriptions.unsubscribe();
        };
        /**
         * Fetches unmasked attribute for the given product
         * and returns a new product with the attribute unmasked
         */
        ProductSummaryDetailsComponent.prototype.getUnmaskedAttribute = function (unmaskedProductEventPayload) {
            var _this = this;
            var attributeName = unmaskedProductEventPayload.attributeName, product = unmaskedProductEventPayload.product;
            var requestParameters = {
                attributeName: attributeName,
                arrangementId: product.id,
            };
            return this.service.getUnmaskedAttribute(requestParameters).pipe(operators.catchError(function (error) {
                _this.notificationService.showNotification({
                    header: _this.errorNotificationTemplate,
                    message: _this.processErrorMessages(error === null || error === void 0 ? void 0 : error.messages),
                    modifier: 'error',
                });
                return rxjs.of('');
            }));
        };
        return ProductSummaryDetailsComponent;
    }());
    ProductSummaryDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsComponent, deps: [{ token: i1__namespace$1.ActivatedRoute }, { token: AccountService }, { token: i3__namespace$1.NotificationService }, { token: i6.WINDOW }, { token: i6__namespace.ProductsExternalInfoService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductSummaryDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsComponent, selector: "bb-product-summary-details", viewQueries: [{ propertyName: "errorNotificationTemplate", first: true, predicate: ["errorNotificationTemplate"], descendants: true, static: true }], ngImport: i0__namespace, template: "<ng-container *ngIf=\"((hostRef.multiple | async) === false); else multipleAccounts\">\n  <ng-container *ngIf=\"productId | async as productId; else noAccountSelected\">\n    <ng-container *ngIf=\"((isLoading | async) === false) && !(error | async | bbIsDefined) && (item | async) as item; else loadingTemplate\">\n      <ng-container\n        bbProductSummaryDetailsViewCustomizable\n        [bbHostRef]=\"hostRef\"\n        [bbTemplateContext]=\"item\">\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<!-- Product summary wrapper template -->\n<ng-template\n  bbProductSummaryDetailsViewCustomizable\n  let-hostRef\n  let-item=\"context\">\n\n  <ng-container\n    bbProductSummaryDetailsHeaderCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"item\">\n  </ng-container>\n\n  <ng-container\n    bbProductSummaryDetailsCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"item\">\n  </ng-container>\n</ng-template>\n\n<!-- Product summary header template -->\n<ng-template\n  bbProductSummaryDetailsHeaderCustomizable\n  let-hostRef\n  let-item=\"context\">\n  <div\n    class=\"bb-stack bb-block bb-block--xl\"\n    data-role=\"product-summary-details-header\"\n  >\n    <h2\n      class=\"bb-stack__item bb-stack__item--fill\"\n      data-role=\"product-summary-details-header-name\"\n    >\n      {{item.displayName}}\n    </h2>\n    <button\n      bbButton\n      type=\"button\"\n      color=\"secondary\"\n      data-role=\"print\"\n      class=\"bb-stack__item\"\n      buttonSize=\"md\"\n      [circle]=\"true\"\n      (click)=\"hostRef.print()\"\n    >\n      <bb-icon-ui name=\"print\"></bb-icon-ui>\n      <span\n        class=\"sr-only\"\n        data-role=\"button-print\"\n        i18n=\"print button@@product.details.button.print\"\n      >Print</span>\n    </button>\n  </div>\n</ng-template>\n\n<!-- Product summary details template -->\n<ng-template\n  bbProductSummaryDetailsCustomizable\n  let-hostRef\n  let-item=\"context\">\n  <ng-container\n    [ngSwitch]=\"item.productKindName\">\n    <!-- Current Account -->\n    <ng-container *ngSwitchCase=\"hostRef.productKindNames.CURRENT_ACCOUNT\">\n      <bb-current-account-details\n        [product]=\"item\"\n        [maskableAttributes]=\"hostRef.maskableAttributes\"\n        (unmaskAttribute)=\"hostRef.onUnmaskAttribute($event, item)\"\n        (maskAttribute)=\"hostRef.onMaskAttribute($event, item)\"\n      >\n      </bb-current-account-details>\n    </ng-container>\n    <!-- Savings Account -->\n    <ng-container *ngSwitchCase=\"hostRef.productKindNames.SAVINGS_ACCOUNT\">\n      <bb-savings-account-details\n        [product]=\"item\"\n        [maskableAttributes]=\"hostRef.maskableAttributes\"\n        (unmaskAttribute)=\"hostRef.onUnmaskAttribute($event, item)\"\n        (maskAttribute)=\"hostRef.onMaskAttribute($event, item)\"\n      >\n      </bb-savings-account-details>\n    </ng-container>\n    <!-- Term Deposit -->\n    <ng-container *ngSwitchCase=\"hostRef.productKindNames.TERM_DEPOSIT\">\n      <bb-term-deposit-details\n        [product]=\"item\"\n        [maskableAttributes]=\"hostRef.maskableAttributes\"\n        (unmaskAttribute)=\"hostRef.onUnmaskAttribute($event, item)\"\n        (maskAttribute)=\"hostRef.onMaskAttribute($event, item)\"\n      >\n      </bb-term-deposit-details>\n    </ng-container>\n    <!-- Loan -->\n    <ng-container *ngSwitchCase=\"hostRef.productKindNames.LOAN\">\n      <bb-loan-details\n        [product]=\"item\"\n        [maskableAttributes]=\"hostRef.maskableAttributes\"\n        (unmaskAttribute)=\"hostRef.onUnmaskAttribute($event, item)\"\n        (maskAttribute)=\"hostRef.onMaskAttribute($event, item)\"\n      >\n      </bb-loan-details>\n    </ng-container>\n    <!-- Credit Card -->\n    <ng-container *ngSwitchCase=\"hostRef.productKindNames.CREDIT_CARD\">\n      <bb-credit-card-details\n        [product]=\"item\"\n        [maskableAttributes]=\"hostRef.maskableAttributes\"\n        (unmaskAttribute)=\"hostRef.onUnmaskAttribute($event, item)\"\n        (maskAttribute)=\"hostRef.onMaskAttribute($event, item)\"\n      >\n      </bb-credit-card-details>\n    </ng-container>\n    <!-- Debit Card -->\n    <ng-container *ngSwitchCase=\"hostRef.productKindNames.DEBIT_CARD\">\n      <bb-debit-card-details\n        [product]=\"item\"\n        [maskableAttributes]=\"hostRef.maskableAttributes\"\n        (unmaskAttribute)=\"hostRef.onUnmaskAttribute($event, item)\"\n        (maskAttribute)=\"hostRef.onMaskAttribute($event, item)\"\n      >\n      </bb-debit-card-details>\n    </ng-container>\n    <!-- Investment Account -->\n    <ng-container *ngSwitchCase=\"hostRef.productKindNames.INVESTMENT_ACCOUNT\">\n      <bb-investment-account-details\n        [product]=\"item\"\n        [maskableAttributes]=\"hostRef.maskableAttributes\"\n        (unmaskAttribute)=\"hostRef.onUnmaskAttribute($event, item)\"\n        (maskAttribute)=\"hostRef.onMaskAttribute($event, item)\"\n      >\n      </bb-investment-account-details>\n    </ng-container>\n    <!--\n      Other (Default):\n      This template can be used to add more custom productKinds.\n      The productKind is passed to the template so a customer can add\n      additional switch/if statements to determine what product template should be displayed\n    -->\n    <ng-container *ngSwitchDefault>\n      <bb-other-account-details\n        [product]=\"item\"\n        [maskableAttributes]=\"hostRef.maskableAttributes\"\n        (unmaskAttribute)=\"hostRef.onUnmaskAttribute($event, item)\"\n        (maskAttribute)=\"hostRef.onMaskAttribute($event, item)\"\n      >\n      </bb-other-account-details>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<!-- Product summary details loading template -->\n<ng-template #loadingTemplate>\n  <ng-container bbProductSummaryDetailsLoadingCustomizable\n                [bbHostRef]=\"hostRef\">\n  </ng-container>\n</ng-template>\n\n<ng-template\n  bbProductSummaryDetailsLoadingCustomizable\n  let-hostRef>\n  <ng-container *ngIf=\"hostRef.error | async as error; else loading\">\n    <bb-empty-state-ui\n      iconSize=\"xxl\"\n      iconModifier=\"error-outline\"\n      iconClasses=\"text-muted\"\n      [title]=\"''\"\n      [subtitle]=\"hostRef.processErrorMessages(error.messages)\"\n    ></bb-empty-state-ui>\n  </ng-container>\n  <ng-template #loading>\n    <bb-loading-indicator-ui\n      i18n-text=\"@@product.details.loadingAccounts\"\n      [text]=\"'Loading Accounts...'\"\n    ></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n\n<!-- Product summary details no account selected template -->\n<ng-template #noAccountSelected>\n  <ng-container bbProductSummaryDetailsNoAccountSelectedCustomizable\n                [bbHostRef]=\"hostRef\">\n  </ng-container>\n</ng-template>\n\n<ng-template\n  bbProductSummaryDetailsNoAccountSelectedCustomizable\n  let-hostRef>\n  <bb-empty-state-ui\n    i18n-title=\"No accounts selected tittle|Empty state title label when there are no account details@@product.details.empty.title\"\n    [title]=\"'No account(s) selected.'\"\n    i18n-subtitle=\"No accounts selected subtitle|Empty state subtitle label when there are no account details@@product.details.empty.subtitle\"\n    [subtitle]=\"'Please select an account first.'\"\n  >\n  </bb-empty-state-ui>\n</ng-template>\n\n<ng-template #multipleAccounts>\n  <bb-empty-state-ui\n    data-role=\"product-summary-details-error-multi-selection\"\n    iconSize=\"xxl\"\n    iconModifier=\"error-outline\"\n    iconClasses=\"text-muted\"\n    title=\"You have selected multiple accounts\"\n    i18n-title=\"You have selected multiple accounts|Error title when getting multiple accounts@@product.details.error.multiple.title\"\n    subtitle=\"Please select only one account to display the account information\"\n    i18n-subtitle=\"Please select only one account to display the account information|Error subtitle when getting multiple accounts@@product.details.error.multiple.subtitle\"\n  ></bb-empty-state-ui>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i2__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return CurrentAccountDetailsComponent; }), selector: "bb-current-account-details" }, { type: i0__namespace.forwardRef(function () { return SavingsAccountDetailsComponent; }), selector: "bb-savings-account-details" }, { type: i0__namespace.forwardRef(function () { return TermDepositDetailsComponent; }), selector: "bb-term-deposit-details" }, { type: i0__namespace.forwardRef(function () { return LoanDetailsComponent; }), selector: "bb-loan-details" }, { type: i0__namespace.forwardRef(function () { return CreditCardDetailsComponent; }), selector: "bb-credit-card-details" }, { type: i0__namespace.forwardRef(function () { return DebitCardDetailsComponent; }), selector: "bb-debit-card-details" }, { type: i0__namespace.forwardRef(function () { return InvestmentAccountDetailsComponent; }), selector: "bb-investment-account-details" }, { type: i0__namespace.forwardRef(function () { return OtherDetailsComponent; }), selector: "bb-other-account-details" }, { type: i0__namespace.forwardRef(function () { return i14__namespace.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i0__namespace.forwardRef(function () { return i15__namespace.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsViewCustomizableDirective; }), selector: "[bbProductSummaryDetailsViewCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsHeaderCustomizableDirective; }), selector: "[bbProductSummaryDetailsHeaderCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsCustomizableDirective; }), selector: "[bbProductSummaryDetailsCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i17__namespace.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace$1.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsLoadingCustomizableDirective; }), selector: "[bbProductSummaryDetailsLoadingCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryDetailsNoAccountSelectedCustomizableDirective; }), selector: "[bbProductSummaryDetailsNoAccountSelectedCustomizable]" }], pipes: { "async": i0__namespace.forwardRef(function () { return i4__namespace$1.AsyncPipe; }), "bbIsDefined": i0__namespace.forwardRef(function () { return i6__namespace.IsDefinedPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-summary-details',
                        templateUrl: './product-summary-details.component.html',
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace$1.ActivatedRoute }, { type: AccountService }, { type: i3__namespace$1.NotificationService }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i6.WINDOW]
                        }] }, { type: i6__namespace.ProductsExternalInfoService }];
        }, propDecorators: { errorNotificationTemplate: [{
                    type: i0.ViewChild,
                    args: ['errorNotificationTemplate', { static: true }]
                }] } });
    /**
     * This is an extension slot to be used for customizing the NoAccountSelected state
     *
     * @usageNotes
     *
     * ### Customize the NoAccountSelected view
     *
     * ```html
     * <ng-template
     *  bbProductSummaryDetailsNoAccountSelectedCustomizable
     *  [bbHostRef]="hostRef">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsNoAccountSelectedCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsNoAccountSelectedCustomizableDirective, _super);
        function ProductSummaryDetailsNoAccountSelectedCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsNoAccountSelectedCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsNoAccountSelectedCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsNoAccountSelectedCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsNoAccountSelectedCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsNoAccountSelectedCustomizableDirective, selector: "[bbProductSummaryDetailsNoAccountSelectedCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsNoAccountSelectedCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsNoAccountSelectedCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing the loading state
     *
     * @usageNotes
     *
     * ### Customize the loading view
     *
     * ```html
     * <ng-template
     *  bbProductSummaryDetailsLoadingCustomizable
     *  [bbHostRef]="hostRef">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsLoadingCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsLoadingCustomizableDirective, _super);
        function ProductSummaryDetailsLoadingCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsLoadingCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsLoadingCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsLoadingCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsLoadingCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsLoadingCustomizableDirective, selector: "[bbProductSummaryDetailsLoadingCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsLoadingCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsLoadingCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing the entire view
     *
     * @usageNotes
     *
     * ### Customize the entire view
     *
     * ```html
     * <ng-template
     *  bbProductSummaryDetailsViewCustomizable
     *  let-hostRef
     *  let-item="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsViewCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsViewCustomizableDirective, _super);
        function ProductSummaryDetailsViewCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsViewCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsViewCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsViewCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsViewCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsViewCustomizableDirective, selector: "[bbProductSummaryDetailsViewCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsViewCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsViewCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing the header
     *
     * @usageNotes
     *
     * ### Customize the header
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsHeaderCustomizable
     *   let-hostRef
     *   let-item="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsHeaderCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsHeaderCustomizableDirective, _super);
        function ProductSummaryDetailsHeaderCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsHeaderCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsHeaderCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsHeaderCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsHeaderCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsHeaderCustomizableDirective, selector: "[bbProductSummaryDetailsHeaderCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsHeaderCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsHeaderCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing details
     *
     * @usageNotes
     *
     * ### Customize details
     *
     * ```html
     * <ng-template
     *   bbProductSummaryDetailsCustomizable
     *   let-hostRef
     *   let-item="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryDetailsWidgetModule
     */
    var ProductSummaryDetailsCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryDetailsCustomizableDirective, _super);
        function ProductSummaryDetailsCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryDetailsCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryDetailsCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryDetailsCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsCustomizableDirective, selector: "[bbProductSummaryDetailsCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryDetailsCustomizable]',
                    }]
            }] });

    /**
     * A widget for displaying account details
     *
     * @usageNotes
     *
     * ### Include this widget in your `AppModule`:
     *
     * ```typescript
     * @NgModule({
     *   imports: [
     *     ProductSummaryDetailsWidgetModule,
     *   ],
     *   ...
     * })
     * export class AppModule {}
     * ```
     *
     * ### Include this widget (standalone model)
     *
     * ```typescript
     * export const environment: Environment = {
     *   ...
     *   bootstrap: {
     *     pageModel: {
     *       name: 'root',
     *       properties: {},
     *       children: [
     *         {
     *           name: 'product-summary-account-details-widget-ang',
     *           properties: {
     *              classId: 'ProductSummaryDetailsWidgetComponent',
     *           },
     *         },
     *       ],
     *     },
     *   },
     * };
     * ```
     */
    var ProductSummaryDetailsWidgetComponent = /** @class */ (function () {
        function ProductSummaryDetailsWidgetComponent() {
            this.hostRef = this;
        }
        return ProductSummaryDetailsWidgetComponent;
    }());
    ProductSummaryDetailsWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsWidgetComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductSummaryDetailsWidgetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryDetailsWidgetComponent, selector: "bb-product-summary-details-widget", providers: [AccountService, i6.ProductSummaryAccountsService], ngImport: i0__namespace, template: " <bb-product-summary-details></bb-product-summary-details> ", isInline: true, components: [{ type: ProductSummaryDetailsComponent, selector: "bb-product-summary-details" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsWidgetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-summary-details-widget',
                        template: " <bb-product-summary-details></bb-product-summary-details> ",
                        providers: [AccountService, i6.ProductSummaryAccountsService],
                    }]
            }] });

    var components = [
        ProductSummaryDetailsWidgetComponent,
        ProductSummaryDetailsComponent,
        CurrentAccountDetailsComponent,
        SavingsAccountDetailsComponent,
        TermDepositDetailsComponent,
        LoanDetailsComponent,
        CreditCardDetailsComponent,
        DebitCardDetailsComponent,
        InvestmentAccountDetailsComponent,
        OtherDetailsComponent,
        FrequencyUnitKeyComponent,
    ];
    var directives = [
        ProductSummaryDetailsLoadingCustomizableDirective,
        ProductSummaryDetailsNoAccountSelectedCustomizableDirective,
        ProductSummaryDetailsViewCustomizableDirective,
        ProductSummaryDetailsCustomizableDirective,
        ProductSummaryDetailsHeaderCustomizableDirective,
        ProductSummaryDetailsCurrentAccountCustomizableDirective,
        ProductSummaryDetailsSavingsAccountCustomizableDirective,
        ProductSummaryDetailsTermDepositCustomizableDirective,
        ProductSummaryDetailsLoanCustomizableDirective,
        ProductSummaryDetailsCreditCardCustomizableDirective,
        ProductSummaryDetailsDebitCardCustomizableDirective,
        ProductSummaryDetailsInvestmentAccountCustomizableDirective,
        ProductSummaryDetailsOtherCustomizableDirective,
    ];
    var uiModules = [
        i3.AmountModule,
        i17.ButtonModule,
        i14.EmptyStateModule,
        i2.IconModule,
        i15.LoadingIndicatorModule,
        paymentCardNumberPipe.PaymentCardNumberModule,
        i4.PaymentCardModule,
        i5.TooltipModule,
        i1.ArrangementStateIndicatorModule,
        i1.ProductNumberModule,
        i6.ValidationModule,
        i3$1.NotificationModule,
        i6.DatePipeModule,
    ];
    var services = [i6.ProductsExternalInfoService];
    /**
     * Exports the Widgets and UI components for displaying of account details. (Retail banking)
     *
     * The following widgets are included in this module:
     *  - `ProductSummaryDetailsWidgetComponent`
     *
     * @see ProductSummaryDetailsWidgetComponent
     *
     * The following components are included in this module:
     * - `ProductSummaryDetailsComponent`,
     * - `CurrentAccountDetailsComponent`,
     * - `SavingsAccountDetailsComponent`,
     * - `TermDepositDetailsComponent`,
     * - `LoanDetailsComponent`,
     * - `CreditCardDetailsComponent`,
     * - `DebitCardDetailsComponent`,
     * - `InvestmentAccountDetailsComponent`,
     * - `OtherDetailsComponent`,
     * - `FrequencyUnitKeyComponent`,
     *
     * @see `ProductSummaryDetailsComponent`,
     * @see `CurrentAccountDetailsComponent`,
     * @see `SavingsAccountDetailsComponent`,
     * @see `TermDepositDetailsComponent`,
     * @see `LoanDetailsComponent`,
     * @see `CreditCardDetailsComponent`,
     * @see `DebitCardDetailsComponent`,
     * @see `InvestmentAccountDetailsComponent`,
     * @see `OtherDetailsComponent`,
     * @see `FrequencyUnitKeyComponent`,
     *
     * @usageNotes
     *
     * ### Include the exported widgets in your `AppModule`:
     *
     * ```typescript
     * @NgModule({
     *   imports: [
     *     ProductSummaryDetailsWidgetModule,
     *   ],
     *   ...
     * })
     * export class AppModule {}
     * ```
     */
    var ProductSummaryDetailsWidgetModule = /** @class */ (function () {
        function ProductSummaryDetailsWidgetModule() {
        }
        return ProductSummaryDetailsWidgetModule;
    }());
    ProductSummaryDetailsWidgetModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsWidgetModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductSummaryDetailsWidgetModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsWidgetModule, declarations: [ProductSummaryDetailsWidgetComponent,
            ProductSummaryDetailsComponent,
            CurrentAccountDetailsComponent,
            SavingsAccountDetailsComponent,
            TermDepositDetailsComponent,
            LoanDetailsComponent,
            CreditCardDetailsComponent,
            DebitCardDetailsComponent,
            InvestmentAccountDetailsComponent,
            OtherDetailsComponent,
            FrequencyUnitKeyComponent, ProductSummaryDetailsLoadingCustomizableDirective,
            ProductSummaryDetailsNoAccountSelectedCustomizableDirective,
            ProductSummaryDetailsViewCustomizableDirective,
            ProductSummaryDetailsCustomizableDirective,
            ProductSummaryDetailsHeaderCustomizableDirective,
            ProductSummaryDetailsCurrentAccountCustomizableDirective,
            ProductSummaryDetailsSavingsAccountCustomizableDirective,
            ProductSummaryDetailsTermDepositCustomizableDirective,
            ProductSummaryDetailsLoanCustomizableDirective,
            ProductSummaryDetailsCreditCardCustomizableDirective,
            ProductSummaryDetailsDebitCardCustomizableDirective,
            ProductSummaryDetailsInvestmentAccountCustomizableDirective,
            ProductSummaryDetailsOtherCustomizableDirective], imports: [i4$1.CommonModule, i1__namespace$2.BackbaseCoreModule, i6.ProductSummaryCommon,
            i6.DatePipeModule, i3.AmountModule,
            i17.ButtonModule,
            i14.EmptyStateModule,
            i2.IconModule,
            i15.LoadingIndicatorModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            i4.PaymentCardModule,
            i5.TooltipModule,
            i1.ArrangementStateIndicatorModule,
            i1.ProductNumberModule,
            i6.ValidationModule,
            i3$1.NotificationModule,
            i6.DatePipeModule], exports: [ProductSummaryDetailsWidgetComponent,
            ProductSummaryDetailsComponent,
            CurrentAccountDetailsComponent,
            SavingsAccountDetailsComponent,
            TermDepositDetailsComponent,
            LoanDetailsComponent,
            CreditCardDetailsComponent,
            DebitCardDetailsComponent,
            InvestmentAccountDetailsComponent,
            OtherDetailsComponent,
            FrequencyUnitKeyComponent, ProductSummaryDetailsLoadingCustomizableDirective,
            ProductSummaryDetailsNoAccountSelectedCustomizableDirective,
            ProductSummaryDetailsViewCustomizableDirective,
            ProductSummaryDetailsCustomizableDirective,
            ProductSummaryDetailsHeaderCustomizableDirective,
            ProductSummaryDetailsCurrentAccountCustomizableDirective,
            ProductSummaryDetailsSavingsAccountCustomizableDirective,
            ProductSummaryDetailsTermDepositCustomizableDirective,
            ProductSummaryDetailsLoanCustomizableDirective,
            ProductSummaryDetailsCreditCardCustomizableDirective,
            ProductSummaryDetailsDebitCardCustomizableDirective,
            ProductSummaryDetailsInvestmentAccountCustomizableDirective,
            ProductSummaryDetailsOtherCustomizableDirective, i3.AmountModule,
            i17.ButtonModule,
            i14.EmptyStateModule,
            i2.IconModule,
            i15.LoadingIndicatorModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            i4.PaymentCardModule,
            i5.TooltipModule,
            i1.ArrangementStateIndicatorModule,
            i1.ProductNumberModule,
            i6.ValidationModule,
            i3$1.NotificationModule,
            i6.DatePipeModule] });
    ProductSummaryDetailsWidgetModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsWidgetModule, providers: __spreadArray([], __read(services)), imports: [__spreadArray([
                i4$1.CommonModule,
                i1$1.BackbaseCoreModule.withConfig({
                    classMap: { ProductSummaryDetailsWidgetComponent: ProductSummaryDetailsWidgetComponent },
                }),
                i6.ProductSummaryCommon,
                i6.DatePipeModule
            ], __read(uiModules)), i3.AmountModule,
            i17.ButtonModule,
            i14.EmptyStateModule,
            i2.IconModule,
            i15.LoadingIndicatorModule,
            paymentCardNumberPipe.PaymentCardNumberModule,
            i4.PaymentCardModule,
            i5.TooltipModule,
            i1.ArrangementStateIndicatorModule,
            i1.ProductNumberModule,
            i6.ValidationModule,
            i3$1.NotificationModule,
            i6.DatePipeModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryDetailsWidgetModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([
                            i4$1.CommonModule,
                            i1$1.BackbaseCoreModule.withConfig({
                                classMap: { ProductSummaryDetailsWidgetComponent: ProductSummaryDetailsWidgetComponent },
                            }),
                            i6.ProductSummaryCommon,
                            i6.DatePipeModule
                        ], __read(uiModules)),
                        declarations: __spreadArray(__spreadArray([], __read(components)), __read(directives)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components)), __read(directives)), __read(uiModules)),
                        entryComponents: [ProductSummaryDetailsComponent],
                        providers: __spreadArray([], __read(services)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AccountAccessDenied = AccountAccessDenied;
    exports.AccountBadRequest = AccountBadRequest;
    exports.AccountConnectivityError = AccountConnectivityError;
    exports.AccountService = AccountService;
    exports.AccountUnknownError = AccountUnknownError;
    exports.AccounttNotFound = AccounttNotFound;
    exports.CreditCardDetailsComponent = CreditCardDetailsComponent;
    exports.CurrentAccountDetailsComponent = CurrentAccountDetailsComponent;
    exports.DebitCardDetailsComponent = DebitCardDetailsComponent;
    exports.FrequencyUnitKeyComponent = FrequencyUnitKeyComponent;
    exports.InvestmentAccountDetailsComponent = InvestmentAccountDetailsComponent;
    exports.LoanDetailsComponent = LoanDetailsComponent;
    exports.OtherDetailsComponent = OtherDetailsComponent;
    exports.ProductSummaryDetailsComponent = ProductSummaryDetailsComponent;
    exports.ProductSummaryDetailsCreditCardCustomizableDirective = ProductSummaryDetailsCreditCardCustomizableDirective;
    exports.ProductSummaryDetailsCurrentAccountCustomizableDirective = ProductSummaryDetailsCurrentAccountCustomizableDirective;
    exports.ProductSummaryDetailsCustomizableDirective = ProductSummaryDetailsCustomizableDirective;
    exports.ProductSummaryDetailsDebitCardCustomizableDirective = ProductSummaryDetailsDebitCardCustomizableDirective;
    exports.ProductSummaryDetailsHeaderCustomizableDirective = ProductSummaryDetailsHeaderCustomizableDirective;
    exports.ProductSummaryDetailsInvestmentAccountCustomizableDirective = ProductSummaryDetailsInvestmentAccountCustomizableDirective;
    exports.ProductSummaryDetailsLoadingCustomizableDirective = ProductSummaryDetailsLoadingCustomizableDirective;
    exports.ProductSummaryDetailsLoanCustomizableDirective = ProductSummaryDetailsLoanCustomizableDirective;
    exports.ProductSummaryDetailsNoAccountSelectedCustomizableDirective = ProductSummaryDetailsNoAccountSelectedCustomizableDirective;
    exports.ProductSummaryDetailsOtherCustomizableDirective = ProductSummaryDetailsOtherCustomizableDirective;
    exports.ProductSummaryDetailsSavingsAccountCustomizableDirective = ProductSummaryDetailsSavingsAccountCustomizableDirective;
    exports.ProductSummaryDetailsTermDepositCustomizableDirective = ProductSummaryDetailsTermDepositCustomizableDirective;
    exports.ProductSummaryDetailsViewCustomizableDirective = ProductSummaryDetailsViewCustomizableDirective;
    exports.ProductSummaryDetailsWidgetComponent = ProductSummaryDetailsWidgetComponent;
    exports.ProductSummaryDetailsWidgetModule = ProductSummaryDetailsWidgetModule;
    exports.SavingsAccountDetailsComponent = SavingsAccountDetailsComponent;
    exports.TermDepositDetailsComponent = TermDepositDetailsComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-product-summary-details-widget-ang.umd.js.map
