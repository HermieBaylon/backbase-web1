import { HttpErrorResponse } from '@angular/common/http';
export declare class AccountAccessDenied {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'AccountAccessDenied';
    constructor(response: HttpErrorResponse);
}
export declare class AccountBadRequest {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'ProductKindsBadRequest';
    constructor(response: HttpErrorResponse);
}
export declare class AccounttNotFound {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'ProductKindstNotFound';
    constructor(response: HttpErrorResponse);
}
export declare class AccountConnectivityError {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'ProductKindsConnectivityError';
    constructor(response: HttpErrorResponse);
}
export declare class AccountUnknownError {
    readonly response: HttpErrorResponse;
    messages: string[];
    kind: 'ProductKindsUnknownError';
    constructor(response: HttpErrorResponse);
}
export declare type AccountError = AccountAccessDenied | AccountBadRequest | AccounttNotFound | AccountConnectivityError | AccountUnknownError;
export declare const parseError: (error: HttpErrorResponse) => AccountError;
