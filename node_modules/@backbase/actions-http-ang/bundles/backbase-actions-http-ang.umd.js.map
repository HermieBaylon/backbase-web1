{"version":3,"file":"backbase-actions-http-ang.umd.js","sources":["../../model/daysOfWeek.ts","../../model/hoursOfDay.ts","../../model/templateType.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/actionRecipeSpecifications.service.ts","../../api/actionRecipeSpecifications.service.mocks.ts","../../api/actionRecipes.service.ts","../../api/actionRecipes.service.mocks.ts"],"sourcesContent":["/**\n * Actions client\n * Retrieve action recipe specifications. Create, read, update, and delete action recipes. Retrieve payment statuses and types.\n *\n * The version of the OpenAPI document: 2.0.12\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport type DaysOfWeek = 'MON' | 'TUE' | 'WED' | 'THU' | 'FRI' | 'SAT' | 'SUN';\n\nexport const DaysOfWeek = {\n    MON: 'MON' as DaysOfWeek,\n    TUE: 'TUE' as DaysOfWeek,\n    WED: 'WED' as DaysOfWeek,\n    THU: 'THU' as DaysOfWeek,\n    FRI: 'FRI' as DaysOfWeek,\n    SAT: 'SAT' as DaysOfWeek,\n    SUN: 'SUN' as DaysOfWeek\n};\n\n","/**\n * Actions client\n * Retrieve action recipe specifications. Create, read, update, and delete action recipes. Retrieve payment statuses and types.\n *\n * The version of the OpenAPI document: 2.0.12\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport type HoursOfDay = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | '13' | '14' | '15' | '16' | '17' | '18' | '19' | '20' | '21' | '22' | '23';\n\nexport const HoursOfDay = {\n    _0: '0' as HoursOfDay,\n    _1: '1' as HoursOfDay,\n    _2: '2' as HoursOfDay,\n    _3: '3' as HoursOfDay,\n    _4: '4' as HoursOfDay,\n    _5: '5' as HoursOfDay,\n    _6: '6' as HoursOfDay,\n    _7: '7' as HoursOfDay,\n    _8: '8' as HoursOfDay,\n    _9: '9' as HoursOfDay,\n    _10: '10' as HoursOfDay,\n    _11: '11' as HoursOfDay,\n    _12: '12' as HoursOfDay,\n    _13: '13' as HoursOfDay,\n    _14: '14' as HoursOfDay,\n    _15: '15' as HoursOfDay,\n    _16: '16' as HoursOfDay,\n    _17: '17' as HoursOfDay,\n    _18: '18' as HoursOfDay,\n    _19: '19' as HoursOfDay,\n    _20: '20' as HoursOfDay,\n    _21: '21' as HoursOfDay,\n    _22: '22' as HoursOfDay,\n    _23: '23' as HoursOfDay\n};\n\n","/**\n * Actions client\n * Retrieve action recipe specifications. Create, read, update, and delete action recipes. Retrieve payment statuses and types.\n *\n * The version of the OpenAPI document: 2.0.12\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Template type\n */\nexport type TemplateType = 'REGULAR' | 'DIGEST';\n\nexport const TemplateType = {\n    REGULAR: 'REGULAR' as TemplateType,\n    DIGEST: 'DIGEST' as TemplateType\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const ACTIONS_BASE_PATH = new InjectionToken<string>('ACTIONS_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface ActionsConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class ActionsConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: ActionsConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link ActionsConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link ActionsConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module ActionsConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { ActionsConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class ActionsApiModule {\n    public static forRoot(configurationFactory: () => ActionsConfiguration): ModuleWithProviders<ActionsApiModule> {\n        return {\n            ngModule: ActionsApiModule,\n            providers: [ { provide: ActionsConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ActionsApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: ActionsConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('ActionsApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Actions client\n * Retrieve action recipe specifications. Create, read, update, and delete action recipes. Retrieve payment statuses and types.\n *\n * The version of the OpenAPI document: 2.0.12\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ActionRecipeSpecificationsGetResponseBody } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { ACTIONS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ActionsConfiguration }                                     from '../configuration';\n\n\nexport interface GetActionRecipeSpecificationsRequestParams {\n    /** Represents a number of page */\n    [\"offset\"]?: number;\n    /** Represents a page size */\n    [\"limit\"]?: number;\n    /** Order by field: name, type, category */\n    [\"orderBy\"]?: string;\n    /** Direction */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionRecipeSpecificationsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ActionsConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACTIONS_BASE_PATH) basePath: string, @Optional() configuration: ActionsConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieves action recipe specifications.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipeSpecifications(requestParameters: GetActionRecipeSpecificationsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ActionRecipeSpecificationsGetResponseBody>;\n    /**\n     * Retrieves action recipe specifications.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipeSpecifications(requestParameters: GetActionRecipeSpecificationsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ActionRecipeSpecificationsGetResponseBody>>;\n    /**\n     * Retrieves action recipe specifications.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipeSpecifications(requestParameters: GetActionRecipeSpecificationsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ActionRecipeSpecificationsGetResponseBody>>;\n    /**\n     * Retrieves action recipe specifications.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipeSpecifications(requestParameters: GetActionRecipeSpecificationsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _offset = requestParameters[\"offset\"];\n        const _limit = requestParameters[\"limit\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_offset !== undefined && _offset !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_offset, 'offset');\n        }\n        if (_limit !== undefined && _limit !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_limit, 'limit');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ActionRecipeSpecificationsGetResponseBody>(`${this.configuration.basePath}/client-api/v2/action-recipe-specifications`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getActionRecipeSpecificationsUrl(requestParameters: GetActionRecipeSpecificationsRequestParams): string {\n        const _offset = requestParameters[\"offset\"];\n        const _limit = requestParameters[\"limit\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_offset !== undefined && _offset !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_offset, 'offset');\n        }\n        if (_limit !== undefined && _limit !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_limit, 'limit');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/action-recipe-specifications${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/action-recipe-specifications URL pattern\n*/\nexport const ActionRecipeSpecificationsHttpServiceGetActionRecipeSpecificationsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipe-specifications\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"actionRecipeSpecifications\" : [ {\n    \"id\" : \"1\",\n    \"name\" : \"New Transaction\",\n    \"userDefinable\" : true,\n    \"origin\" : \"Transaction\",\n    \"type\" : \"newTransaction\",\n    \"category\" : \"arrangementBased\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"severityLevel\" : \"INFO\",\n      \"route\" : {\n        \"whereTo\" : \"transaction-view\",\n        \"dataTemplate\" : \"{\\\"id\\\": \\\"${transactions[0].id}\\\", \\\"arrangementId\\\": \\\"${transactions[0].arrangementId}\\\"}\"\n      },\n      \"templates\" : [ {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"REGULAR\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      }, {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"DIGEST\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      } ]\n    }, {\n      \"type\" : \"email\",\n      \"templates\" : [ {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"REGULAR\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      }, {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"DIGEST\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      } ]\n    }, {\n      \"type\" : \"sms\",\n      \"templates\" : [ {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"REGULAR\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      }, {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"DIGEST\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      } ]\n    }, {\n      \"type\" : \"push\",\n      \"severityLevel\" : \"INFO\",\n      \"route\" : {\n        \"whereTo\" : \"transaction-view\",\n        \"dataTemplate\" : \"{\\\"id\\\": \\\"${transactions[0].id}\\\", \\\"arrangementId\\\": \\\"${transactions[0].arrangementId}\\\"}\"\n      },\n      \"templates\" : [ {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"REGULAR\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      }, {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"DIGEST\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      } ]\n    } ],\n    \"digestEnabled\" : true,\n    \"recipeDefaults\" : {\n      \"amount\" : \"0\",\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ]\n    }\n  }, {\n    \"id\" : \"4\",\n    \"name\" : \"Account Low Balance\",\n    \"userDefinable\" : true,\n    \"type\" : \"accountLowBalance\",\n    \"category\" : \"arrangementBased\",\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"email\"\n    }, {\n      \"type\" : \"sms\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"amount\" : \"200\",\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ],\n      \"additions\" : {\n        \"type\" : \"Cash Withdraw\"\n      }\n    }\n  }, {\n    \"id\" : \"5\",\n    \"name\" : \"Payment Status Updated\",\n    \"userDefinable\" : true,\n    \"type\" : \"paymentStatusUpdated\",\n    \"category\" : \"paymentStatusBased\",\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : true,\n    \"recipeDefaults\" : {\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ]\n    }\n  }, {\n    \"id\" : \"6\",\n    \"name\" : \"Party Status Updated\",\n    \"userDefinable\" : true,\n    \"type\" : \"partyStatusUpdated\",\n    \"category\" : \"partyStatusBased\",\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ]\n    }\n  }, {\n    \"id\" : \"8\",\n    \"name\" : \"Saving goal\",\n    \"type\" : \"savingGoal\",\n    \"category\" : \"userBased\",\n    \"userDefinable\" : true,\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false\n  }, {\n    \"id\" : \"9\",\n    \"name\" : \"Account statement is ready\",\n    \"type\" : \"accountStatementIsReady\",\n    \"category\" : \"arrangementBased\",\n    \"userDefinable\" : true,\n    \"actions\" : [ {\n      \"type\" : \"email\"\n    }, {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false\n  }, {\n    \"id\" : \"10\",\n    \"name\" : \"Account Low Balance Business\",\n    \"type\" : \"accountLowBalance\",\n    \"category\" : \"arrangementBased\",\n    \"userDefinable\" : true,\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"amount\" : \"0\",\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ]\n    }\n  }, {\n    \"id\" : \"13\",\n    \"name\" : \"Payment to approve\",\n    \"type\" : \"paymentToApprove\",\n    \"category\" : \"paymentResourceBased\",\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ],\n      \"additions\" : {\n        \"resource\" : \"Payments\"\n      }\n    }\n  }, {\n    \"id\" : \"14\",\n    \"name\" : \"Contact to approve\",\n    \"type\" : \"contactToApprove\",\n    \"category\" : \"contactResourceBased\",\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ],\n      \"additions\" : {\n        \"resource\" : \"Contacts\"\n      }\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const ActionRecipeSpecificationsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/action-recipe-specifications\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"actionRecipeSpecifications\" : [ {\n    \"id\" : \"1\",\n    \"name\" : \"New Transaction\",\n    \"userDefinable\" : true,\n    \"origin\" : \"Transaction\",\n    \"type\" : \"newTransaction\",\n    \"category\" : \"arrangementBased\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"severityLevel\" : \"INFO\",\n      \"route\" : {\n        \"whereTo\" : \"transaction-view\",\n        \"dataTemplate\" : \"{\\\"id\\\": \\\"${transactions[0].id}\\\", \\\"arrangementId\\\": \\\"${transactions[0].arrangementId}\\\"}\"\n      },\n      \"templates\" : [ {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"REGULAR\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      }, {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"DIGEST\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      } ]\n    }, {\n      \"type\" : \"email\",\n      \"templates\" : [ {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"REGULAR\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      }, {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"DIGEST\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      } ]\n    }, {\n      \"type\" : \"sms\",\n      \"templates\" : [ {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"REGULAR\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      }, {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"DIGEST\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      } ]\n    }, {\n      \"type\" : \"push\",\n      \"severityLevel\" : \"INFO\",\n      \"route\" : {\n        \"whereTo\" : \"transaction-view\",\n        \"dataTemplate\" : \"{\\\"id\\\": \\\"${transactions[0].id}\\\", \\\"arrangementId\\\": \\\"${transactions[0].arrangementId}\\\"}\"\n      },\n      \"templates\" : [ {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"REGULAR\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      }, {\n        \"locale\" : \"en-US\",\n        \"kind\" : \"DIGEST\",\n        \"path\" : \"/pathto/template\",\n        \"repository\" : \"repository_id\"\n      } ]\n    } ],\n    \"digestEnabled\" : true,\n    \"recipeDefaults\" : {\n      \"amount\" : \"0\",\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ]\n    }\n  }, {\n    \"id\" : \"4\",\n    \"name\" : \"Account Low Balance\",\n    \"userDefinable\" : true,\n    \"type\" : \"accountLowBalance\",\n    \"category\" : \"arrangementBased\",\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"email\"\n    }, {\n      \"type\" : \"sms\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"amount\" : \"200\",\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ],\n      \"additions\" : {\n        \"type\" : \"Cash Withdraw\"\n      }\n    }\n  }, {\n    \"id\" : \"5\",\n    \"name\" : \"Payment Status Updated\",\n    \"userDefinable\" : true,\n    \"type\" : \"paymentStatusUpdated\",\n    \"category\" : \"paymentStatusBased\",\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : true,\n    \"recipeDefaults\" : {\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ]\n    }\n  }, {\n    \"id\" : \"6\",\n    \"name\" : \"Party Status Updated\",\n    \"userDefinable\" : true,\n    \"type\" : \"partyStatusUpdated\",\n    \"category\" : \"partyStatusBased\",\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ]\n    }\n  }, {\n    \"id\" : \"8\",\n    \"name\" : \"Saving goal\",\n    \"type\" : \"savingGoal\",\n    \"category\" : \"userBased\",\n    \"userDefinable\" : true,\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false\n  }, {\n    \"id\" : \"9\",\n    \"name\" : \"Account statement is ready\",\n    \"type\" : \"accountStatementIsReady\",\n    \"category\" : \"arrangementBased\",\n    \"userDefinable\" : true,\n    \"actions\" : [ {\n      \"type\" : \"email\"\n    }, {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false\n  }, {\n    \"id\" : \"10\",\n    \"name\" : \"Account Low Balance Business\",\n    \"type\" : \"accountLowBalance\",\n    \"category\" : \"arrangementBased\",\n    \"userDefinable\" : true,\n    \"actions\" : [ {\n      \"type\" : \"notification\"\n    }, {\n      \"type\" : \"push\"\n    } ],\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"amount\" : \"0\",\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ]\n    }\n  }, {\n    \"id\" : \"13\",\n    \"name\" : \"Payment to approve\",\n    \"type\" : \"paymentToApprove\",\n    \"category\" : \"paymentResourceBased\",\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ],\n      \"additions\" : {\n        \"resource\" : \"Payments\"\n      }\n    }\n  }, {\n    \"id\" : \"14\",\n    \"name\" : \"Contact to approve\",\n    \"type\" : \"contactToApprove\",\n    \"category\" : \"contactResourceBased\",\n    \"digestEnabled\" : false,\n    \"recipeDefaults\" : {\n      \"actions\" : [ {\n        \"type\" : \"notification\"\n      }, {\n        \"type\" : \"push\"\n      } ],\n      \"additions\" : {\n        \"resource\" : \"Contacts\"\n      }\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Actions client\n * Retrieve action recipe specifications. Create, read, update, and delete action recipes. Retrieve payment statuses and types.\n *\n * The version of the OpenAPI document: 2.0.12\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ActionRecipeGetResponseBody } from '../model/models';\nimport { ActionRecipePutRequestBody } from '../model/models';\nimport { ActionRecipesGetResponseBody } from '../model/models';\nimport { ActionRecipesPostRequestBody } from '../model/models';\nimport { ActionRecipesPostResponseBody } from '../model/models';\nimport { ActionsHistoryGetResponseBody } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BatchProcessingPutRequestBody } from '../model/models';\nimport { BatchProcessingPutResponseBody } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PaymentStatusesGetResponseBody } from '../model/models';\nimport { PaymentTypesGetResponseBody } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { ACTIONS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ActionsConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteActionRecipeRequestParams {\n    [\"recipeId\"]: string;\n}\n\nexport interface GetActionRecipeRequestParams {\n    [\"recipeId\"]: string;\n}\n\nexport interface GetActionRecipesRequestParams {\n    [\"specificationId\"]?: string;\n    [\"active\"]?: boolean;\n    /** Represents a number of page */\n    [\"offset\"]?: number;\n    /** Represents a page size */\n    [\"limit\"]?: number;\n    /** Order by field: name, active, specificationId, amount, createdOn */\n    [\"orderBy\"]?: string;\n    /** Direction */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\nexport interface GetActionsHistoryRequestParams {\n    /** Represents a number of page */\n    [\"offset\"]?: number;\n    /** Represents a page size */\n    [\"limit\"]?: number;\n}\n\nexport interface GetActionsHistoryByUserRequestParams {\n    [\"userId\"]: string;\n    /** Service agreement ID of business user. */\n    [\"serviceAgreementId\"]?: string;\n    /** Represents a number of page */\n    [\"offset\"]?: number;\n    /** Represents a page size */\n    [\"limit\"]?: number;\n}\n\nexport interface PostActionRecipesRequestParams {\n    [\"actionRecipesPostRequestBody\"]?: ActionRecipesPostRequestBody;\n}\n\nexport interface PostActivationRequestRequestParams {\n    [\"recipeId\"]: string;\n}\n\nexport interface PostDeactivationRequestRequestParams {\n    [\"recipeId\"]: string;\n}\n\nexport interface PutActionRecipeRequestParams {\n    [\"recipeId\"]: string;\n    [\"actionRecipePutRequestBody\"]?: ActionRecipePutRequestBody;\n}\n\nexport interface PutBatchProcessingRequestParams {\n    [\"batchProcessingPutRequestBody\"]?: BatchProcessingPutRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionRecipesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ActionsConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(ACTIONS_BASE_PATH) basePath: string, @Optional() configuration: ActionsConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Removes the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;delete&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be deleted.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteActionRecipe(requestParameters: DeleteActionRecipeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Removes the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;delete&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be deleted.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteActionRecipe(requestParameters: DeleteActionRecipeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Removes the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;delete&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be deleted.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteActionRecipe(requestParameters: DeleteActionRecipeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Removes the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;delete&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be deleted.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteActionRecipe(requestParameters: DeleteActionRecipeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling deleteActionRecipe.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteActionRecipeUrl(requestParameters: DeleteActionRecipeRequestParams): string {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling deleteActionRecipe.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}`;\n    }\n\n    /**\n     * Retrieves the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipe(requestParameters: GetActionRecipeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ActionRecipeGetResponseBody>;\n    /**\n     * Retrieves the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipe(requestParameters: GetActionRecipeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ActionRecipeGetResponseBody>>;\n    /**\n     * Retrieves the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipe(requestParameters: GetActionRecipeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ActionRecipeGetResponseBody>>;\n    /**\n     * Retrieves the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipe(requestParameters: GetActionRecipeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling getActionRecipe.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ActionRecipeGetResponseBody>(`${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getActionRecipeUrl(requestParameters: GetActionRecipeRequestParams): string {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling getActionRecipe.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}`;\n    }\n\n    /**\n     * Returns a list of action recipes. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipes(requestParameters: GetActionRecipesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ActionRecipesGetResponseBody>;\n    /**\n     * Returns a list of action recipes. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipes(requestParameters: GetActionRecipesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ActionRecipesGetResponseBody>>;\n    /**\n     * Returns a list of action recipes. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipes(requestParameters: GetActionRecipesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ActionRecipesGetResponseBody>>;\n    /**\n     * Returns a list of action recipes. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionRecipes(requestParameters: GetActionRecipesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _specificationId = requestParameters[\"specificationId\"];\n        const _active = requestParameters[\"active\"];\n        const _offset = requestParameters[\"offset\"];\n        const _limit = requestParameters[\"limit\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_specificationId !== undefined && _specificationId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_specificationId, 'specificationId');\n        }\n        if (_active !== undefined && _active !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_active, 'active');\n        }\n        if (_offset !== undefined && _offset !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_offset, 'offset');\n        }\n        if (_limit !== undefined && _limit !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_limit, 'limit');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ActionRecipesGetResponseBody>(`${this.configuration.basePath}/client-api/v2/action-recipes`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getActionRecipesUrl(requestParameters: GetActionRecipesRequestParams): string {\n        const _specificationId = requestParameters[\"specificationId\"];\n        const _active = requestParameters[\"active\"];\n        const _offset = requestParameters[\"offset\"];\n        const _limit = requestParameters[\"limit\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_specificationId !== undefined && _specificationId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_specificationId, 'specificationId');\n        }\n        if (_active !== undefined && _active !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_active, 'active');\n        }\n        if (_offset !== undefined && _offset !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_offset, 'offset');\n        }\n        if (_limit !== undefined && _limit !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_limit, 'limit');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/action-recipes${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieves the history of all actions for the logged-in user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionsHistory(requestParameters: GetActionsHistoryRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ActionsHistoryGetResponseBody>;\n    /**\n     * Retrieves the history of all actions for the logged-in user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionsHistory(requestParameters: GetActionsHistoryRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ActionsHistoryGetResponseBody>>;\n    /**\n     * Retrieves the history of all actions for the logged-in user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionsHistory(requestParameters: GetActionsHistoryRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ActionsHistoryGetResponseBody>>;\n    /**\n     * Retrieves the history of all actions for the logged-in user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionsHistory(requestParameters: GetActionsHistoryRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _offset = requestParameters[\"offset\"];\n        const _limit = requestParameters[\"limit\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_offset !== undefined && _offset !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_offset, 'offset');\n        }\n        if (_limit !== undefined && _limit !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_limit, 'limit');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ActionsHistoryGetResponseBody>(`${this.configuration.basePath}/client-api/v2/action-recipes/history`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getActionsHistoryUrl(requestParameters: GetActionsHistoryRequestParams): string {\n        const _offset = requestParameters[\"offset\"];\n        const _limit = requestParameters[\"limit\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_offset !== undefined && _offset !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_offset, 'offset');\n        }\n        if (_limit !== undefined && _limit !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_limit, 'limit');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/history${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieves the alerts history records by target user ID. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Access Actions History&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionsHistoryByUser(requestParameters: GetActionsHistoryByUserRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ActionsHistoryGetResponseBody>;\n    /**\n     * Retrieves the alerts history records by target user ID. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Access Actions History&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionsHistoryByUser(requestParameters: GetActionsHistoryByUserRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ActionsHistoryGetResponseBody>>;\n    /**\n     * Retrieves the alerts history records by target user ID. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Access Actions History&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionsHistoryByUser(requestParameters: GetActionsHistoryByUserRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ActionsHistoryGetResponseBody>>;\n    /**\n     * Retrieves the alerts history records by target user ID. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;  - Business function: &#x60;Access Actions History&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActionsHistoryByUser(requestParameters: GetActionsHistoryByUserRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getActionsHistoryByUser.');\n        }\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _offset = requestParameters[\"offset\"];\n        const _limit = requestParameters[\"limit\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_offset !== undefined && _offset !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_offset, 'offset');\n        }\n        if (_limit !== undefined && _limit !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_limit, 'limit');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ActionsHistoryGetResponseBody>(`${this.configuration.basePath}/client-api/v2/action-recipes/history/${encodeURIComponent(String(_userId))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getActionsHistoryByUserUrl(requestParameters: GetActionsHistoryByUserRequestParams): string {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getActionsHistoryByUser.');\n        }\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _offset = requestParameters[\"offset\"];\n        const _limit = requestParameters[\"limit\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_offset !== undefined && _offset !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_offset, 'offset');\n        }\n        if (_limit !== undefined && _limit !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_limit, 'limit');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/history/${encodeURIComponent(String(_userId))}${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieves all available payment statuses.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentStatuses(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PaymentStatusesGetResponseBody>;\n    /**\n     * Retrieves all available payment statuses.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentStatuses(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PaymentStatusesGetResponseBody>>;\n    /**\n     * Retrieves all available payment statuses.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentStatuses(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PaymentStatusesGetResponseBody>>;\n    /**\n     * Retrieves all available payment statuses.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentStatuses(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PaymentStatusesGetResponseBody>(`${this.configuration.basePath}/client-api/v2/action-recipes/payment-statuses`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPaymentStatusesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/payment-statuses`;\n    }\n\n    /**\n     * Retrieves all available payment types for the logged-in user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentTypes(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PaymentTypesGetResponseBody>;\n    /**\n     * Retrieves all available payment types for the logged-in user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentTypes(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PaymentTypesGetResponseBody>>;\n    /**\n     * Retrieves all available payment types for the logged-in user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentTypes(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PaymentTypesGetResponseBody>>;\n    /**\n     * Retrieves all available payment types for the logged-in user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentTypes(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PaymentTypesGetResponseBody>(`${this.configuration.basePath}/client-api/v2/action-recipes/payment-types`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPaymentTypesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/payment-types`;\n    }\n\n    /**\n     * Creates a new action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;create&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the payload when creating a new action recipe.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postActionRecipes(requestParameters: PostActionRecipesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ActionRecipesPostResponseBody>;\n    /**\n     * Creates a new action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;create&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the payload when creating a new action recipe.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postActionRecipes(requestParameters: PostActionRecipesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ActionRecipesPostResponseBody>>;\n    /**\n     * Creates a new action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;create&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the payload when creating a new action recipe.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postActionRecipes(requestParameters: PostActionRecipesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ActionRecipesPostResponseBody>>;\n    /**\n     * Creates a new action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;create&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the payload when creating a new action recipe.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postActionRecipes(requestParameters: PostActionRecipesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _actionRecipesPostRequestBody = requestParameters[\"actionRecipesPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ActionRecipesPostResponseBody>(`${this.configuration.basePath}/client-api/v2/action-recipes`,\n            _actionRecipesPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postActionRecipesUrl(requestParameters: PostActionRecipesRequestParams): string {\n        const _actionRecipesPostRequestBody = requestParameters[\"actionRecipesPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/action-recipes`;\n    }\n\n    /**\n     * Activates the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;execute&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be activated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postActivationRequest(requestParameters: PostActivationRequestRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Activates the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;execute&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be activated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postActivationRequest(requestParameters: PostActivationRequestRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Activates the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;execute&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be activated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postActivationRequest(requestParameters: PostActivationRequestRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Activates the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;execute&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be activated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postActivationRequest(requestParameters: PostActivationRequestRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling postActivationRequest.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}/activation-request`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postActivationRequestUrl(requestParameters: PostActivationRequestRequestParams): string {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling postActivationRequest.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}/activation-request`;\n    }\n\n    /**\n     * Deactivates the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;execute&#x60;   - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be deactivated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postDeactivationRequest(requestParameters: PostDeactivationRequestRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Deactivates the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;execute&#x60;   - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be deactivated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postDeactivationRequest(requestParameters: PostDeactivationRequestRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Deactivates the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;execute&#x60;   - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be deactivated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postDeactivationRequest(requestParameters: PostDeactivationRequestRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Deactivates the specified action recipe. Caller must have the following permissions:   - Privileges: &#x60;view&#x60;, &#x60;execute&#x60;   - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be deactivated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postDeactivationRequest(requestParameters: PostDeactivationRequestRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling postDeactivationRequest.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}/deactivation-request`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postDeactivationRequestUrl(requestParameters: PostDeactivationRequestRequestParams): string {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling postDeactivationRequest.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}/deactivation-request`;\n    }\n\n    /**\n     * Updates the specified action recipe. Caller must have the following permissions:    - Privileges: &#x60;view&#x60;, &#x60;edit&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be updated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putActionRecipe(requestParameters: PutActionRecipeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Updates the specified action recipe. Caller must have the following permissions:    - Privileges: &#x60;view&#x60;, &#x60;edit&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be updated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putActionRecipe(requestParameters: PutActionRecipeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Updates the specified action recipe. Caller must have the following permissions:    - Privileges: &#x60;view&#x60;, &#x60;edit&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be updated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putActionRecipe(requestParameters: PutActionRecipeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Updates the specified action recipe. Caller must have the following permissions:    - Privileges: &#x60;view&#x60;, &#x60;edit&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;  Additionally, arrangement validation takes place in two cases:   - If the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;   - Deprecated. If the action recipe belongs to an action recipe specification with an ID &#x60;1&#x60; or &#x60;4&#x60; if there is no category specified   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe that needs to be updated.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putActionRecipe(requestParameters: PutActionRecipeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling putActionRecipe.');\n        }\n        const _actionRecipePutRequestBody = requestParameters[\"actionRecipePutRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}`,\n            _actionRecipePutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putActionRecipeUrl(requestParameters: PutActionRecipeRequestParams): string {\n        const _recipeId = requestParameters[\"recipeId\"];\n        if (_recipeId === null || _recipeId === undefined) {\n            throw new Error('Required parameter recipeId was null or undefined when calling putActionRecipe.');\n        }\n        const _actionRecipePutRequestBody = requestParameters[\"actionRecipePutRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/${encodeURIComponent(String(_recipeId))}`;\n    }\n\n    /**\n     * Upserts action recipes in batch. Single endpoint for an update/insert multiple action recipes.  The action recipe will be created if it has no ID. When the action recipe has an ID, it will be updated.  The &#x60;specificationId&#x60; is taken into account only for action recipe creation. There is no ability to update the &#x60;specificationId&#x60;  field so it should be the same as in the original recipe.  Caller must have the following permissions:    - Privileges: &#x60;view&#x60;, &#x60;create&#x60;, &#x60;edit&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place when the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;.   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe object.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putBatchProcessing(requestParameters: PutBatchProcessingRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BatchProcessingPutResponseBody>;\n    /**\n     * Upserts action recipes in batch. Single endpoint for an update/insert multiple action recipes.  The action recipe will be created if it has no ID. When the action recipe has an ID, it will be updated.  The &#x60;specificationId&#x60; is taken into account only for action recipe creation. There is no ability to update the &#x60;specificationId&#x60;  field so it should be the same as in the original recipe.  Caller must have the following permissions:    - Privileges: &#x60;view&#x60;, &#x60;create&#x60;, &#x60;edit&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place when the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;.   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe object.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putBatchProcessing(requestParameters: PutBatchProcessingRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BatchProcessingPutResponseBody>>;\n    /**\n     * Upserts action recipes in batch. Single endpoint for an update/insert multiple action recipes.  The action recipe will be created if it has no ID. When the action recipe has an ID, it will be updated.  The &#x60;specificationId&#x60; is taken into account only for action recipe creation. There is no ability to update the &#x60;specificationId&#x60;  field so it should be the same as in the original recipe.  Caller must have the following permissions:    - Privileges: &#x60;view&#x60;, &#x60;create&#x60;, &#x60;edit&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place when the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;.   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe object.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putBatchProcessing(requestParameters: PutBatchProcessingRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BatchProcessingPutResponseBody>>;\n    /**\n     * Upserts action recipes in batch. Single endpoint for an update/insert multiple action recipes.  The action recipe will be created if it has no ID. When the action recipe has an ID, it will be updated.  The &#x60;specificationId&#x60; is taken into account only for action recipe creation. There is no ability to update the &#x60;specificationId&#x60;  field so it should be the same as in the original recipe.  Caller must have the following permissions:    - Privileges: &#x60;view&#x60;, &#x60;create&#x60;, &#x60;edit&#x60;  - Business function: &#x60;Manage Action Recipes&#x60;   The permission check could be switched off by setting the parameter &#x60;backbase.access-control.enabled&#x60; to &#x60;false&#x60;.  Additionally, arrangement validation takes place when the action recipe belongs to an action recipe specification with the category &#x60;arrangementBased&#x60;.   Arrangement validation implies verification that the logged-in user has the &#x60;view&#x60; privilege for the &#x60;Product Summary&#x60; business function for the &#x60;arrangement&#x60; specified in the action recipe object.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putBatchProcessing(requestParameters: PutBatchProcessingRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _batchProcessingPutRequestBody = requestParameters[\"batchProcessingPutRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<BatchProcessingPutResponseBody>(`${this.configuration.basePath}/client-api/v2/action-recipes/batch`,\n            _batchProcessingPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putBatchProcessingUrl(requestParameters: PutBatchProcessingRequestParams): string {\n        const _batchProcessingPutRequestBody = requestParameters[\"batchProcessingPutRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/action-recipes/batch`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/action-recipes/{recipeId} URL pattern\n*/\nexport const ActionRecipesHttpServiceDeleteActionRecipeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes/{recipeId} URL pattern\n*/\nexport const ActionRecipesHttpServiceGetActionRecipeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"1\",\n  \"name\" : \"Transaction > 100 EUR\",\n  \"active\" : true,\n  \"specificationId\" : \"1\",\n  \"userId\" : \"kjordan\",\n  \"actions\" : [ {\n    \"type\" : \"notification\",\n    \"enabled\" : true\n  }, {\n    \"type\" : \"email\",\n    \"enabled\" : false\n  }, {\n    \"type\" : \"sms\",\n    \"enabled\" : false\n  }, {\n    \"type\" : \"push\",\n    \"enabled\" : true\n  } ],\n  \"amount\" : \"100\",\n  \"arrangementId\" : \"123\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes URL pattern\n*/\nexport const ActionRecipesHttpServiceGetActionRecipesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"totalCount\" : 20,\n  \"actionRecipes\" : [ {\n    \"id\" : \"1\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4691\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"2\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4691\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"3\",\n    \"name\" : \"Transaction > 300 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"4\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"5\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"6\",\n    \"name\" : \"Rounding rule\",\n    \"active\" : false,\n    \"specificationId\" : \"3\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"payment\",\n      \"enabled\" : true\n    } ],\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4691\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\",\n    \"additions\" : {\n      \"targetArrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\"\n    }\n  }, {\n    \"id\" : \"7\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"8\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"9\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"10\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"11\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"12\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"13\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"14\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"15\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"16\",\n    \"name\" : \"Rounding rule Example\",\n    \"active\" : true,\n    \"specificationId\" : \"3\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"payment\",\n      \"enabled\" : true\n    } ],\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"targetArrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\"\n    }\n  }, {\n    \"id\" : \"17\",\n    \"name\" : \"Payment Status Rejected\",\n    \"active\" : false,\n    \"specificationId\" : \"5\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"paymentStatuses\" : \"rejected\"\n    }\n  }, {\n    \"id\" : \"18\",\n    \"name\" : \"Payment Status Rejected\",\n    \"active\" : true,\n    \"specificationId\" : \"5\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"paymentStatuses\" : \"rejected\"\n    }\n  }, {\n    \"id\" : \"19\",\n    \"name\" : \"Contact Status Rejected\",\n    \"active\" : false,\n    \"specificationId\" : \"6\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"partyStatuses\" : \"rejected\"\n    }\n  }, {\n    \"id\" : \"20\",\n    \"name\" : \"Contact Status Rejected\",\n    \"active\" : true,\n    \"specificationId\" : \"6\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"partyStatuses\" : \"rejected\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes/history URL pattern\n*/\nexport const ActionRecipesHttpServiceGetActionsHistoryMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/history\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"actionEventsHistory\" : [ {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"sms\",\n    \"alertDate\" : \"2019-12-16T19:35:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"+380987654321\", \"+380123456789\" ]\n  }, {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"email\",\n    \"alertDate\" : \"2019-12-16T19:25:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"user@domain.com\", \"resu@domain.com\" ]\n  }, {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"notification\",\n    \"alertDate\" : \"2019-12-16T19:15:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"User id - 'userId'\" ]\n  }, {\n    \"alertName\" : \"Party status updated alert\",\n    \"deliveryMethod\" : \"notification\",\n    \"alertDate\" : \"2019-12-16T19:10:05.000+0000\",\n    \"alertText\" : \"Your contact 'Sarah' is active. You can find this in 'My Requests'\",\n    \"destinations\" : [ \"User id - 'Sarah', Service agreement id - '2b5b4bff-4135-4d18-b3fc-eb86d647dccd'\" ]\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes/history/{userId} URL pattern\n*/\nexport const ActionRecipesHttpServiceGetActionsHistoryByUserMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/history/{userId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"actionEventsHistory\" : [ {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"sms\",\n    \"alertDate\" : \"2019-12-16T19:35:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"+380987654321\", \"+380123456789\" ]\n  }, {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"email\",\n    \"alertDate\" : \"2019-12-16T19:25:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"user@domain.com\", \"resu@domain.com\" ]\n  }, {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"notification\",\n    \"alertDate\" : \"2019-12-16T19:15:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"User id - 'userId'\" ]\n  }, {\n    \"alertName\" : \"Party status updated alert\",\n    \"deliveryMethod\" : \"notification\",\n    \"alertDate\" : \"2019-12-16T19:10:05.000+0000\",\n    \"alertText\" : \"Your contact 'Sarah' is active. You can find this in 'My Requests'\",\n    \"destinations\" : [ \"User id - 'Sarah', Service agreement id - '2b5b4bff-4135-4d18-b3fc-eb86d647dccd'\" ]\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes/payment-statuses URL pattern\n*/\nexport const ActionRecipesHttpServiceGetPaymentStatusesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/payment-statuses\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"paymentStatuses\" : [ \"DRAFT\", \"ENTERED\", \"READY\", \"ACCEPTED\", \"PROCESSED\", \"REJECTED\", \"CANCELLED\" ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes/payment-types URL pattern\n*/\nexport const ActionRecipesHttpServiceGetPaymentTypesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/payment-types\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"paymentTypes\" : [ \"SEPA CT\", \"US Domestic Wire\", \"US Foreign Wire\" ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes URL pattern\n*/\nexport const ActionRecipesHttpServicePostActionRecipesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"id\" : \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes/{recipeId}/activation-request URL pattern\n*/\nexport const ActionRecipesHttpServicePostActivationRequestMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}/activation-request\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes/{recipeId}/deactivation-request URL pattern\n*/\nexport const ActionRecipesHttpServicePostDeactivationRequestMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}/deactivation-request\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes/{recipeId} URL pattern\n*/\nexport const ActionRecipesHttpServicePutActionRecipeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/action-recipes/batch URL pattern\n*/\nexport const ActionRecipesHttpServicePutBatchProcessingMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/action-recipes/batch\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"actionRecipes\" : [ {\n    \"id\" : \"1\",\n    \"name\" : \"TransactionExecuted for User\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-03-18T11:36:02.000+0000\",\n    \"recurrence\" : {\n      \"daysOfWeek\" : [ \"MON\", \"FRI\" ],\n      \"hoursOfDay\" : [ \"9\", \"17\" ],\n      \"quartzExpression\" : \"0 0 9,17 ? * MON,FRI *\"\n    }\n  }, {\n    \"id\" : \"2\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-03-18T11:36:02.000+0000\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const ActionRecipesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"1\",\n  \"name\" : \"Transaction > 100 EUR\",\n  \"active\" : true,\n  \"specificationId\" : \"1\",\n  \"userId\" : \"kjordan\",\n  \"actions\" : [ {\n    \"type\" : \"notification\",\n    \"enabled\" : true\n  }, {\n    \"type\" : \"email\",\n    \"enabled\" : false\n  }, {\n    \"type\" : \"sms\",\n    \"enabled\" : false\n  }, {\n    \"type\" : \"push\",\n    \"enabled\" : true\n  } ],\n  \"amount\" : \"100\",\n  \"arrangementId\" : \"123\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"totalCount\" : 20,\n  \"actionRecipes\" : [ {\n    \"id\" : \"1\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4691\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"2\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4691\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"3\",\n    \"name\" : \"Transaction > 300 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"4\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"5\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"6\",\n    \"name\" : \"Rounding rule\",\n    \"active\" : false,\n    \"specificationId\" : \"3\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"payment\",\n      \"enabled\" : true\n    } ],\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4691\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\",\n    \"additions\" : {\n      \"targetArrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\"\n    }\n  }, {\n    \"id\" : \"7\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"8\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"9\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"10\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-17T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"11\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"12\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"13\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"14\",\n    \"name\" : \"Transaction > 100 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"15\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\"\n  }, {\n    \"id\" : \"16\",\n    \"name\" : \"Rounding rule Example\",\n    \"active\" : true,\n    \"specificationId\" : \"3\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"payment\",\n      \"enabled\" : true\n    } ],\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"targetArrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\"\n    }\n  }, {\n    \"id\" : \"17\",\n    \"name\" : \"Payment Status Rejected\",\n    \"active\" : false,\n    \"specificationId\" : \"5\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"paymentStatuses\" : \"rejected\"\n    }\n  }, {\n    \"id\" : \"18\",\n    \"name\" : \"Payment Status Rejected\",\n    \"active\" : true,\n    \"specificationId\" : \"5\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"paymentStatuses\" : \"rejected\"\n    }\n  }, {\n    \"id\" : \"19\",\n    \"name\" : \"Contact Status Rejected\",\n    \"active\" : false,\n    \"specificationId\" : \"6\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"partyStatuses\" : \"rejected\"\n    }\n  }, {\n    \"id\" : \"20\",\n    \"name\" : \"Contact Status Rejected\",\n    \"active\" : true,\n    \"specificationId\" : \"6\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"push\",\n      \"enabled\" : true\n    } ],\n    \"createdOn\" : \"2020-01-16T12:52:34.000+0000\",\n    \"additions\" : {\n      \"partyStatuses\" : \"rejected\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes/history\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"actionEventsHistory\" : [ {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"sms\",\n    \"alertDate\" : \"2019-12-16T19:35:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"+380987654321\", \"+380123456789\" ]\n  }, {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"email\",\n    \"alertDate\" : \"2019-12-16T19:25:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"user@domain.com\", \"resu@domain.com\" ]\n  }, {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"notification\",\n    \"alertDate\" : \"2019-12-16T19:15:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"User id - 'userId'\" ]\n  }, {\n    \"alertName\" : \"Party status updated alert\",\n    \"deliveryMethod\" : \"notification\",\n    \"alertDate\" : \"2019-12-16T19:10:05.000+0000\",\n    \"alertText\" : \"Your contact 'Sarah' is active. You can find this in 'My Requests'\",\n    \"destinations\" : [ \"User id - 'Sarah', Service agreement id - '2b5b4bff-4135-4d18-b3fc-eb86d647dccd'\" ]\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes/history/{userId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"actionEventsHistory\" : [ {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"sms\",\n    \"alertDate\" : \"2019-12-16T19:35:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"+380987654321\", \"+380123456789\" ]\n  }, {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"email\",\n    \"alertDate\" : \"2019-12-16T19:25:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"user@domain.com\", \"resu@domain.com\" ]\n  }, {\n    \"alertName\" : \"Low balance alert\",\n    \"deliveryMethod\" : \"notification\",\n    \"alertDate\" : \"2019-12-16T19:15:05.000+0000\",\n    \"alertText\" : \"Warning! Your account balance is below 20 EUR.\",\n    \"destinations\" : [ \"User id - 'userId'\" ]\n  }, {\n    \"alertName\" : \"Party status updated alert\",\n    \"deliveryMethod\" : \"notification\",\n    \"alertDate\" : \"2019-12-16T19:10:05.000+0000\",\n    \"alertText\" : \"Your contact 'Sarah' is active. You can find this in 'My Requests'\",\n    \"destinations\" : [ \"User id - 'Sarah', Service agreement id - '2b5b4bff-4135-4d18-b3fc-eb86d647dccd'\" ]\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes/payment-statuses\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"paymentStatuses\" : [ \"DRAFT\", \"ENTERED\", \"READY\", \"ACCEPTED\", \"PROCESSED\", \"REJECTED\", \"CANCELLED\" ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes/payment-types\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"paymentTypes\" : [ \"SEPA CT\", \"US Domestic Wire\", \"US Foreign Wire\" ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"id\" : \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}/activation-request\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}/deactivation-request\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes/{recipeId}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/action-recipes/batch\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"actionRecipes\" : [ {\n    \"id\" : \"1\",\n    \"name\" : \"TransactionExecuted for User\",\n    \"active\" : true,\n    \"specificationId\" : \"1\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    } ],\n    \"amount\" : \"100\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-03-18T11:36:02.000+0000\",\n    \"recurrence\" : {\n      \"daysOfWeek\" : [ \"MON\", \"FRI\" ],\n      \"hoursOfDay\" : [ \"9\", \"17\" ],\n      \"quartzExpression\" : \"0 0 9,17 ? * MON,FRI *\"\n    }\n  }, {\n    \"id\" : \"2\",\n    \"name\" : \"Account Low Balance < 1000 EUR\",\n    \"active\" : true,\n    \"specificationId\" : \"4\",\n    \"userId\" : \"kjordan\",\n    \"actions\" : [ {\n      \"type\" : \"notification\",\n      \"enabled\" : false\n    }, {\n      \"type\" : \"email\",\n      \"enabled\" : true\n    }, {\n      \"type\" : \"sms\",\n      \"enabled\" : false\n    } ],\n    \"amount\" : \"300\",\n    \"arrangementId\" : \"6cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n    \"createdOn\" : \"2020-03-18T11:36:02.000+0000\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}