import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ActionRecipeSpecificationsGetResponseBody } from '../model/models';
import { ActionsConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetActionRecipeSpecificationsRequestParams {
    ["offset"]?: number;
    ["limit"]?: number;
    ["orderBy"]?: string;
    ["direction"]?: 'ASC' | 'DESC';
}
export declare class ActionRecipeSpecificationsHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: ActionsConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: ActionsConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getActionRecipeSpecifications(requestParameters: GetActionRecipeSpecificationsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<ActionRecipeSpecificationsGetResponseBody>;
    getActionRecipeSpecifications(requestParameters: GetActionRecipeSpecificationsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<ActionRecipeSpecificationsGetResponseBody>>;
    getActionRecipeSpecifications(requestParameters: GetActionRecipeSpecificationsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<ActionRecipeSpecificationsGetResponseBody>>;
    getActionRecipeSpecificationsUrl(requestParameters: GetActionRecipeSpecificationsRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionRecipeSpecificationsHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ActionRecipeSpecificationsHttpService>;
}
