{"version":3,"file":"backbase-manage-upcoming-and-historical-payments-journey-ang.umd.js","sources":["../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/communication.service.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/cancel-payment-confirmation/cancel-payment-confirmation.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/cancel-payment-confirmation/cancel-payment-confirmation.component.html","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/helpers/constants.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/details-list/upcoming-payments-details-list.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/details-list/upcoming-payments-details-list.component.html","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/helpers/mappers.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/details-modal/upcoming-payments-details.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/details-modal/upcoming-payments-details.component.html","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/helpers/utils.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/models/config.model.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/services/config.service.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/item/upcoming-payments-item.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/item/upcoming-payments-item.component.html","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/item-group/upcoming-payments-item-group.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/item-group/upcoming-payments-item-group.component.html","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/list/upcoming-payments-list.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/list/upcoming-payments-list.component.html","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/models/payments.model.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/services/payments.service.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/payment-list-container/payments-list-container.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/payment-list-container/payments-list-container.component.html","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/manage-upcoming-and-historical-payments-journey.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/services/navigation.service.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/views/history-payments-view/history-payments-view.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/views/payments-container-view/upcoming-and-history-payments-tab-container-view.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/views/payments-container-view/upcoming-and-history-payments-tab-container-view.component.html","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/views/upcoming-payments-view/upcoming-payments-view.component.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/manage-upcoming-and-historical-payments-journey.module.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/index.ts","../../../../libs/manage-upcoming-and-historical-payments-journey/src/backbase-manage-upcoming-and-historical-payments-journey-ang.ts"],"sourcesContent":["import { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\n\nexport abstract class CommunicationService {\n  abstract navigateToEditPayment(_: IdentifiedPaymentOrder): void;\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'bb-upcoming-payments-cancel-payment-confirmation',\n  templateUrl: 'cancel-payment-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingPaymentsCancelPaymentConfirmationComponent {\n  readonly modelOptions = {\n    backdrop: 'static',\n    keyboard: false,\n  };\n\n  /**\n   * Indicator for confirmation dialog open state.\n   * Default value is `false`.\n   */\n  @Input() isOpen = false;\n  /**\n   * Indicator for recurring payment state.\n   * Default value is `false`.\n   */\n  @Input() isRecurring = false;\n  /**\n   * Changes will be triggered on keepPayment event emit.\n   */\n  @Output() keepPayment = new EventEmitter();\n  /**\n   * Changes will be triggered on cancelPayment event emit.\n   */\n  @Output() cancelPayment = new EventEmitter();\n\n  onKeepPaymentClick() {\n    this.keepPayment.emit();\n  }\n  onCancelPaymentClick() {\n    this.cancelPayment.emit();\n  }\n}\n","<bb-modal-ui [isOpen]=\"isOpen\" [modalOptions]=\"modelOptions\">\n  <bb-modal-header-ui data-role=\"cancel-payment-confirmation-header\">\n    <ng-template bbCustomModalHeader>\n      <h2 i18n=\"Cancel payment|Dialog header@@upcoming-payments.recurring.confirm.dialog.header\">\n        {isRecurring, select, true {Cancel Recurring Payment?} other {Cancel Upcoming Payment?}}\n      </h2>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui data-role=\"cancel-payment-confirmation-body\">\n    <ng-template bbCustomModalBody>\n      <ng-container\n        i18n=\"\n          Confirmation message body|confirmation message for cancel payment\n          dialog@@upcoming-payments.confirm.dialog.body.message\"\n      >\n        {isRecurring, select, true {This recurring payment will be permanently cancelled.} other {This upcoming payment\n        will be permanently cancelled.}}\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui #footerRef data-role=\"cancel-payment-confirmation-footer\">\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          (click)=\"onCancelPaymentClick()\"\n          color=\"danger\"\n          data-role=\"cancel-payment-confirm-btn\"\n          i18n=\"Cancel payment|Request payment cancellation@@upcoming-payments.confirm.dialog.action.cancelPayment\"\n        >\n          Cancel payment\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          (click)=\"onKeepPaymentClick()\"\n          color=\"link\"\n          data-role=\"keep-payment-btn\"\n          i18n=\"\n            Keep payment|keep payment and close confirmation dialog@@upcoming-payments.confirm.dialog.action.keepPayment\"\n        >\n          Not now\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export const P2P_PAYMENT_TYPE = 'P2P_TRANSFER';\nexport const P2P_REASON_CODES = {\n  pending: 'PP01',\n  inProcess: 'PP02',\n};\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  CounterpartyAccount,\n  IdentifiedPaymentOrder,\n  IdentifiedTransaction as IdentifiedCreditTransaction,\n  OriginatorAccount,\n} from '@backbase/data-ang/payment-order';\nimport { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { P2P_PAYMENT_TYPE } from '../../helpers/constants';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfiguration } from '../../models/config.model';\n\n@Component({\n  selector: 'bb-upcoming-payments-details-list',\n  templateUrl: 'upcoming-payments-details-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingPaymentsDetailsListComponent {\n  readonly accountNumberFormat: PaymentCardNumberFormat = {\n    length: 36,\n    maskRange: [0, -4],\n    segments: 4,\n  };\n  /**\n   * Payment order details\n   */\n  @Input() payment?: IdentifiedPaymentOrder;\n  /**\n   * Journey configs\n   */\n  @Input() config?: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration;\n\n  public get transactionInformation(): IdentifiedCreditTransaction | undefined {\n    return this.payment?.transferTransactionInformation;\n  }\n  get originatorAccount(): CounterpartyAccount | OriginatorAccount | undefined {\n    return this.transactionInformation?.counterparty?.role === 'DEBTOR'\n      ? this.payment?.transferTransactionInformation?.counterpartyAccount\n      : this.payment?.originatorAccount;\n  }\n  get counterPartyAccount() {\n    return this.transactionInformation?.counterparty?.role === 'DEBTOR'\n      ? this.payment?.originatorAccount\n      : this.payment?.transferTransactionInformation?.counterpartyAccount;\n  }\n  get paymentTypeInfo(): string {\n    const text = this.config?.paymentTypeInfoTexts[this.payment?.paymentType || ''];\n    return $localize`:@@upcoming-and-history-payments-details.payment-type-info:${text || ''}`;\n  }\n\n  get isAccountNumber() {\n    const scheme = this.payment?.transferTransactionInformation?.counterpartyAccount?.identification?.schemeName;\n    return ['IBAN', 'BBAN'].includes(scheme || '');\n  }\n\n  get isP2PTransfer() {\n    return this.payment?.paymentType === P2P_PAYMENT_TYPE;\n  }\n}\n","<div class=\"break-word bb-block bb-block--lg\">\n  <div class=\"bb-text-bold\" i18n=\"Paying From Account@@upcoming-payments.payment.details.fromAccount.name\">\n    From account\n  </div>\n  <div>\n    {{\n      transactionInformation?.counterparty?.role === 'DEBTOR'\n        ? transactionInformation?.counterparty?.name\n        : payment?.originator?.name\n    }}\n  </div>\n  <div class=\"bb-block bb-block--md\" data-role=\"paying-from-account\">\n    <div class=\"contextual-alternates-off\" *ngIf=\"config?.maskAccounts; else unmaskedAccount\">\n      {{ originatorAccount?.identification?.identification | paymentCardNumber: accountNumberFormat | slice: -14 }}\n    </div>\n    <ng-template #unmaskedAccount>\n      {{ originatorAccount?.identification?.identification }}\n    </ng-template>\n  </div>\n\n  <div class=\"bb-text-bold\" i18n=\"Counter Party Name@@upcoming-payments.payment.details.toAccount.details\">\n    To recipient\n  </div>\n  <div data-role=\"counter-party-name\">\n    {{\n      transactionInformation?.counterparty?.role === 'DEBTOR'\n        ? payment?.originator?.name\n        : transactionInformation?.counterparty?.name\n    }}\n  </div>\n  <div class=\"bb-block bb-block--md\" data-role=\"counter-party-account\">\n    <div\n      class=\"contextual-alternates-off\"\n      *ngIf=\"config?.maskAccounts && isAccountNumber; else unmaskedCounterpartyTemp\"\n    >\n      {{ counterPartyAccount?.identification?.identification | paymentCardNumber: accountNumberFormat | slice: -14 }}\n    </div>\n    <ng-template #unmaskedCounterpartyTemp>\n      {{ counterPartyAccount?.identification?.identification }}\n    </ng-template>\n  </div>\n  <ng-container *ngIf=\"payment?.paymentSetupId && isP2PTransfer\">\n    <div\n      class=\"bb-text-bold\"\n      i18n=\"@@upcoming-payments.payment.details.toAccount.confirmation-number\"\n      data-role=\"payment-details-confirmation-number-title\"\n    >\n      Confirmation number\n    </div>\n    <div data-role=\"payment-details-confirmation-number\">\n      {{ payment?.paymentSetupId }}\n    </div>\n  </ng-container>\n</div>\n\n<hr class=\"bb-block bb-block--lg\" />\n\n<ng-container *ngIf=\"payment?.paymentMode !== 'RECURRING'; else recurringTemp\">\n  <div class=\"bb-text-bold\" i18n=\"Execution Date@@upcoming-payments.payment.details.executionDate\">Send date</div>\n  <div class=\"bb-block bb-block--md\" data-role=\"execution-date\">\n    {{ payment?.schedule?.nextExecutionDate || payment?.requestedExecutionDate | date: 'longDate' }}\n  </div>\n</ng-container>\n\n<ng-template #recurringTemp>\n  <div class=\"bb-text-bold\" i18n=\"Start Date@@upcoming-payments.payment.details.schedule.startDate\">Start date</div>\n  <div class=\"bb-block bb-block--md\" data-role=\"start-date\">\n    {{ payment?.schedule?.startDate | date: 'longDate' }}\n  </div>\n\n  <ng-container *ngIf=\"payment?.schedule?.endDate\">\n    <div class=\"bb-text-bold\" i18n=\"End Date@@upcoming-payments.payment.details.schedule.endDate\">End date</div>\n    <div class=\"bb-block bb-block--md\" data-role=\"end-date\">\n      {{ payment?.schedule?.endDate | date: 'longDate' }}\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"payment?.schedule?.transferFrequency\">\n    <div class=\"bb-text-bold\" i18n=\"Recurring Frequency@@upcoming-payments.payment.details.schedule.transferFrequency\">\n      Frequency\n    </div>\n    <div class=\"bb-block bb-block--md\" data-role=\"recurring-frequency\">\n      {{ payment?.schedule?.transferFrequency | titlecase }}\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"payment?.schedule?.repeat\">\n    <div class=\"bb-text-bold\" i18n=\"Number of Occurrences@@upcoming-payments.payment.details.schedule.repeat\">\n      Number of occurrences\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      {{ payment?.schedule?.repeat }}\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-container *ngIf=\"transactionInformation?.remittanceInformation\">\n  <div class=\"bb-text-bold\" i18n=\"Description@@upcoming-payments.payment.details.remittanceInformation.content\">\n    Description\n  </div>\n  <div class=\"bb-block bb-block--md break-word\" data-role=\"description\">\n    {{ transactionInformation?.remittanceInformation?.content }}\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"paymentTypeInfo\">\n  <hr class=\"bb-block bb-block--lg\" />\n  <div class=\"bb-text-bold\" i18n=\"@@upcoming-payments.payment.details.payment-type\">Payment Type</div>\n  <div class=\"bb-block bb-block--md break-word\">\n    {{ paymentTypeInfo }}\n  </div>\n</ng-container>\n","import { IdentifiedPaymentOrder, Status } from '@backbase/data-ang/payment-order';\nimport { UpcomingPaymentsGroup } from '../models/payments.model';\nimport { P2P_PAYMENT_TYPE, P2P_REASON_CODES } from './constants';\n\nexport const mapPaymentOrdersToUpcomingPayments = (payments: IdentifiedPaymentOrder[]): UpcomingPaymentsGroup[] => {\n  return payments.reduce<UpcomingPaymentsGroup[]>((acc, item) => {\n    const executionDate = item.schedule?.nextExecutionDate || item.requestedExecutionDate || '';\n    const index = acc.findIndex(upcomingPayment => upcomingPayment.executionDate === executionDate);\n    if (index <= -1) {\n      acc.push({ executionDate, items: [item] });\n    } else {\n      acc[index].items.push(item);\n    }\n    return acc;\n  }, []);\n};\n\nexport const mapStatusText = (payment?: IdentifiedPaymentOrder): { text: string; color: string } | undefined => {\n  const reasonCodeMap = {\n    [P2P_REASON_CODES.pending]: { text: 'Pending', color: 'warning' },\n    [P2P_REASON_CODES.inProcess]: {\n      text: 'Accepted by recipient',\n      color: '',\n    },\n  };\n\n  switch (payment?.status) {\n    case Status.ACCEPTED:\n      return payment?.paymentType === P2P_PAYMENT_TYPE ? reasonCodeMap[payment?.reasonCode || ''] : undefined;\n    case Status.REJECTED:\n      return { text: 'Rejected', color: 'danger' };\n    case Status.CANCELLED:\n      return { text: 'Cancelled', color: 'info' };\n    case Status.PROCESSED:\n      return { text: 'Sent to recipient', color: '' };\n    default:\n      return undefined;\n  }\n};\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { P2P_PAYMENT_TYPE, P2P_REASON_CODES } from '../../helpers/constants';\nimport { mapStatusText } from '../../helpers/mappers';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfiguration } from '../../models/config.model';\n\n@Component({\n  selector: 'bb-upcoming-payments-details',\n  templateUrl: 'upcoming-payments-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingPaymentsDetailsComponent {\n  readonly p2pReasonCodes = P2P_REASON_CODES;\n  readonly p2pPaymentType = P2P_PAYMENT_TYPE;\n  /**\n   * Indicator for details dialog open state.\n   * Default value is `false`.\n   */\n  @Input() isOpen = false;\n  /**\n   * Selected payment data.\n   */\n  @Input() payment?: IdentifiedPaymentOrder;\n  /**\n   * Journey configs\n   */\n  @Input() config?: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration;\n  /**\n   * Changes will be triggered on cancelPayment event emit.\n   */\n  @Output() cancelPayment = new EventEmitter();\n  /**\n   * Changes will be triggered on close event emit.\n   */\n  @Output() close = new EventEmitter();\n  /**\n   * Changes will be triggered on editPayment event emit.\n   */\n  @Output() editPayment = new EventEmitter<IdentifiedPaymentOrder>();\n  /**\n   * Maps the status texts\n   */\n  get statusText(): { text: string; color: string } | undefined {\n    const statusText = mapStatusText(this.payment);\n    return (\n      statusText && {\n        text: $localize`:@@upcoming-payments-list-item-badge:${statusText.text}`,\n        color: statusText.color,\n      }\n    );\n  }\n\n  onCancelPayment() {\n    this.cancelPayment.emit();\n  }\n\n  onClose() {\n    this.isOpen = false;\n    this.close.emit();\n  }\n\n  onEditPayment() {\n    this.editPayment.emit(this.payment);\n  }\n}\n","<bb-modal-ui [isOpen]=\"isOpen\" (cancel)=\"onClose()\" (confirm)=\"onClose()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-upcoming-payments-details-header__wrapper bb-block--lg\">\n        <div class=\"bb-block--sm\">\n          <bb-icon-ui\n            [name]=\"payment?.paymentMode === 'RECURRING' ? 'repeat' : 'call-made'\"\n            [size]=\"'xl'\"\n            backgroundType=\"square\"\n            color=\"{{ payment?.paymentMode === 'RECURRING' ? 'secondary' : 'inactive' }}\"\n          ></bb-icon-ui>\n        </div>\n\n        <div\n          class=\"bb-text-bold bb-block--sm\"\n          *ngIf=\"payment?.transferTransactionInformation?.counterparty as counterparty\"\n        >\n          {{ counterparty?.role === 'DEBTOR' ? payment?.originator?.name : counterparty?.name }}\n        </div>\n\n        <div class=\"bb-heading-3 bb-block--sm\">\n          <bb-amount-ui\n            [currency]=\"payment?.transferTransactionInformation?.instructedAmount?.currencyCode\"\n            [amount]=\"payment?.transferTransactionInformation?.instructedAmount?.amount\"\n            [mapCurrency]=\"config?.uiComponentProps?.mapCurrency\"\n          ></bb-amount-ui>\n        </div>\n        <bb-badge-ui\n          *ngIf=\"statusText?.text && statusText?.color\"\n          color=\"{{ statusText?.color }}\"\n          text=\"{{ statusText?.text }}\"\n        ></bb-badge-ui>\n        <ng-container *ngIf=\"statusText?.text && !statusText?.color\">\n          <div class=\"bb-inline-stack\">\n            <span class=\"text-muted bb-stack__item bb-stack__item--spacing-sm\">{{ statusText?.text }}</span>\n            <span\n              bbTooltip=\"This payment can’t be cancelled because it has already been accepted by the recipient.\"\n              i18n-bbTooltip=\"@@upcoming-payments-journey.payment-item.details-modal.tooltip\"\n              placement=\"bottom\"\n              triggers=\"hover\"\n            >\n              <bb-icon-ui name=\"info\" class=\"text-muted bb-stack\" size=\"sm\"></bb-icon-ui>\n            </span>\n          </div>\n        </ng-container>\n      </div>\n\n      <button\n        (click)=\"onClose()\"\n        type=\"button\"\n        class=\"bb-upcoming-payments-details__modal-header-button-close\"\n        aria-label=\"Close payment detail dialog\"\n        data-role=\"close-popup-btn\"\n        i18n-aria-label=\"Close payment detail dialog@@upcoming-payemnts.payment.details.header.close\"\n      >\n        <bb-icon-ui name=\"clear\" class=\"bb-stack\"></bb-icon-ui>\n      </button>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <bb-upcoming-payments-details-list [payment]=\"payment\" [config]=\"config\"></bb-upcoming-payments-details-list>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\" *ngIf=\"payment?.status === 'ACCEPTED'\">\n        <button\n          bbButton\n          *ngIf=\"!(payment?.reasonCode === p2pReasonCodes.inProcess)\"\n          class=\"bb-button-bar__button\"\n          (click)=\"onCancelPayment()\"\n          color=\"danger\"\n          data-role=\"cancel-payment-btn\"\n          i18n=\"Cancel payment|Cancel selected payment@@upcoming-payments.payment.details.action.cancel\"\n        >\n          Cancel payment\n        </button>\n\n        <button\n          bbButton\n          *ngIf=\"!(payment?.paymentType === p2pPaymentType)\"\n          (click)=\"onEditPayment()\"\n          class=\"bb-button-bar__button\"\n          i18n=\"Edit payment|Edit selected payment@@upcoming-payments.payment.details.action.edit\"\n          type=\"button\"\n        >\n          Edit\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { GetPaymentOrdersRequestParams, IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\n\nexport const getDateOnly = (dateArg = new Date()): string => {\n  const date = new Date(dateArg);\n  const month = String(date.getMonth() + 1);\n  const day = String(date.getDate());\n  const year = String(date.getFullYear());\n\n  return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n};\n\nexport const getRelativeDate = (next?: number, ISOStringFormat?: boolean): string => {\n  const date = new Date();\n\n  if (next) {\n    date.setDate(date.getDate() + next);\n  }\n\n  return ISOStringFormat ? date.toISOString() : getDateOnly(date);\n};\n\nexport const sortItems = (\n  payments: IdentifiedPaymentOrder[],\n  sortDirection: GetPaymentOrdersRequestParams['direction'],\n): IdentifiedPaymentOrder[] => {\n  return payments.sort((item1: IdentifiedPaymentOrder, item2: IdentifiedPaymentOrder) => {\n    const item1Date = item1.schedule?.nextExecutionDate || item1.requestedExecutionDate;\n    const item2Date = item2.schedule?.nextExecutionDate || item2.requestedExecutionDate;\n    const sortValue = new Date(item1Date || '').getTime() - new Date(item2Date || '').getTime();\n    return sortDirection === 'ASC' ? sortValue : -sortValue;\n  });\n};\n\nexport const unifyItems = (payments: IdentifiedPaymentOrder[]): IdentifiedPaymentOrder[] => {\n  return payments.reduce((result: IdentifiedPaymentOrder[], item: IdentifiedPaymentOrder) => {\n    const hasPeer = result.some(i => i.id === item.id);\n    return hasPeer ? result : result.concat(item);\n  }, []);\n};\n","import { InjectionToken } from '@angular/core';\nimport { GetPaymentOrdersRequestParams } from '@backbase/data-ang/payment-order';\n\nexport const ManageUpcomingAndHistoricalPaymentsJourneyConfigurationToken =\n  new InjectionToken<ManageUpcomingAndHistoricalPaymentsJourneyConfiguration>(\n    'ManageUpcomingAndHistoricalPaymentsJourneyConfigurationToken injection token',\n  );\n\nexport interface ManageUpcomingAndHistoricalPaymentsJourneyConfiguration {\n  notificationDismissTime: number;\n  maskAccounts: boolean;\n  upcomingPaymentParams: GetPaymentOrdersRequestParams;\n  historyPaymentParams: GetPaymentOrdersRequestParams;\n  paymentTypeInfoTexts: BaseObject<string>;\n  journeyTitle: string;\n  uiComponentProps?: UiComponentProps;\n}\n\nexport interface UiComponentProps {\n  mapCurrency: boolean;\n}\n\nexport interface BaseObject<T> {\n  [key: string]: T;\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { GetPaymentOrdersRequestParams } from '@backbase/data-ang/payment-order';\nimport { getDateOnly } from '../helpers/utils';\nimport {\n  BaseObject,\n  ManageUpcomingAndHistoricalPaymentsJourneyConfiguration,\n  ManageUpcomingAndHistoricalPaymentsJourneyConfigurationToken,\n  UiComponentProps,\n} from '../models/config.model';\n\nconst configDefaults: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration = {\n  notificationDismissTime: 3000,\n  maskAccounts: false,\n  upcomingPaymentParams: {\n    orderBy: 'requestedExecutionDate',\n    direction: 'ASC',\n    status: ['ACCEPTED'],\n    executionDateFrom: getDateOnly(),\n    nextExecutionDateFrom: getDateOnly(),\n    from: 0,\n    size: 50,\n  },\n  historyPaymentParams: {\n    orderBy: 'requestedExecutionDate',\n    direction: 'DESC',\n    status: ['CANCELLED', 'REJECTED', 'PROCESSED'],\n    from: 0,\n    size: 50,\n  },\n  paymentTypeInfoTexts: {\n    INTERNAL_TRANSFER: 'Internal account transfer',\n    INTRABANK_TRANSFER: 'Pay someone using account number',\n    P2P_TRANSFER: 'Pay someone using mobile number or email address',\n  },\n  journeyTitle: 'Scheduled Transfers',\n  uiComponentProps: {\n    mapCurrency: true,\n  },\n};\n\n@Injectable()\nexport class ManageUpcomingAndHistoricalPaymentsJourneyConfigService {\n  private _config: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration;\n\n  constructor(\n    @Optional()\n    @Inject(ManageUpcomingAndHistoricalPaymentsJourneyConfigurationToken)\n    private readonly config: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration,\n  ) {\n    this._config = { ...configDefaults, ...(this.config || {}) };\n  }\n\n  get defaults(): ManageUpcomingAndHistoricalPaymentsJourneyConfiguration {\n    return configDefaults;\n  }\n\n  get notificationDismissTime(): number {\n    return this._config.notificationDismissTime;\n  }\n  get maskAccounts(): boolean {\n    return this._config.maskAccounts;\n  }\n  get historyPaymentParams(): GetPaymentOrdersRequestParams {\n    return this._config.historyPaymentParams;\n  }\n  get upcomingPaymentParams(): GetPaymentOrdersRequestParams {\n    return this._config.upcomingPaymentParams;\n  }\n  get paymentTypeInfoTexts(): BaseObject<string> {\n    return this._config.paymentTypeInfoTexts;\n  }\n  get journeyTitle(): string {\n    return this._config.journeyTitle;\n  }\n  get uiComponentProps(): UiComponentProps | undefined {\n    return this._config.uiComponentProps;\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Optional, Output } from '@angular/core';\nimport {\n  IdentifiedPaymentOrder,\n  IdentifiedTransaction as IdentifiedCreditTransaction,\n} from '@backbase/data-ang/payment-order';\nimport { CommunicationService } from '../../communication.service';\nimport { P2P_PAYMENT_TYPE, P2P_REASON_CODES } from '../../helpers/constants';\nimport { mapStatusText } from '../../helpers/mappers';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfigService as ConfigService } from '../../services/config.service';\n\n@Component({\n  selector: 'bb-upcoming-payments-item',\n  templateUrl: 'upcoming-payments-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingPaymentsItemComponent {\n  readonly p2pReasonCodes = P2P_REASON_CODES;\n  readonly p2pPaymentType = P2P_PAYMENT_TYPE;\n  /**\n   * the upcoming payment Item.\n   */\n  @Input() payment?: IdentifiedPaymentOrder;\n  /**\n   * Changes will be triggered on cancelPayment event emit.\n   */\n  @Output() cancelPayment = new EventEmitter();\n\n  constructor(@Optional() private readonly communicatonService: CommunicationService, readonly config: ConfigService) {}\n\n  public get transactionInformation(): IdentifiedCreditTransaction | undefined {\n    return this.payment?.transferTransactionInformation;\n  }\n\n  public get schedule() {\n    return this.payment?.schedule?.transferFrequency;\n  }\n  public get isRecurring() {\n    return this.payment?.paymentMode === 'RECURRING';\n  }\n\n  public get statusText(): { text: string; color: string } | undefined {\n    const statusText = mapStatusText(this.payment);\n    return (\n      statusText && {\n        text: $localize`:@@upcoming-payments-list-item-badge:${statusText.text}`,\n        color: statusText.color,\n      }\n    );\n  }\n\n  onCancelClick(event: Event) {\n    event.stopPropagation();\n    this.cancelPayment.emit();\n  }\n\n  onEditClick(event: Event) {\n    if (this.payment) {\n      event.stopPropagation();\n      this.communicatonService?.navigateToEditPayment(this.payment);\n    }\n  }\n}\n","<div class=\"bb-stack\" data-role=\"upcoming-payment-item\">\n  <bb-icon-ui\n    name=\"{{ isRecurring ? 'repeat' : 'call-made' }}\"\n    class=\"bb-stack__item bb-stack__item--spacing-md\"\n    backgroundType=\"square\"\n    size=\"lg\"\n    color=\"{{ isRecurring ? 'secondary' : 'inactive' }}\"\n  ></bb-icon-ui>\n  <ng-container *ngIf=\"transactionInformation\">\n    <div class=\"bb-stack__item bb-stack__item--fill bb-ellipsis bb-ellipsis--single-line\">\n      <div class=\"bb-stack bb-block bb-block--xs\">\n        <span class=\"sr-only\" i18n=\"screenReader@@upcoming-payments.group.item.counterparty\">\n          Counter party name:\n        </span>\n        <div\n          class=\"bb-text-bold bb-stack__item bb-stack__item--spacing-md bb-ellipsis bb-ellipsis--single-line\"\n          data-role=\"upcoming-payment-item-counterparty-name\"\n        >\n          {{\n            transactionInformation?.counterparty?.role === 'DEBTOR'\n              ? payment?.originator?.name\n              : transactionInformation?.counterparty?.name\n          }}\n        </div>\n        <bb-badge-ui\n          *ngIf=\"statusText?.text && statusText?.color\"\n          class=\"bb-stack__item\"\n          color=\"{{ statusText?.color }}\"\n          text=\"{{ statusText?.text }}\"\n        ></bb-badge-ui>\n      </div>\n      <div class=\"bb-inline-stack text-muted bb-subtitle\">\n        <span i18n=\"@@upcoming-payments.group.item.from-label\">From&nbsp;</span>\n        <div class=\"bb-inline-stack__item bb-inline-stack__item--spacing-none bb-block bb-block--full-width\">\n          <bb-ellipsis-ui\n            [text]=\"\n              transactionInformation?.counterparty?.role === 'DEBTOR'\n                ? transactionInformation?.counterparty?.name\n                : payment?.originator?.name\n            \"\n          ></bb-ellipsis-ui>\n        </div>\n        <div *ngIf=\"payment?.paymentMode === 'RECURRING'\" class=\"bb-inline-stack__item\">\n          <span class=\"sr-only\" i18n=\"screenReader@@upcoming-payments.group.item.paymentMode\"> Payment Mode: </span>\n          <span> - {{ schedule | titlecase }} </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-stack__item bb-text-align-right\">\n      <div class=\"bb-block bb-block--xs bb-text-align-right bb-text-bold\">\n        <span class=\"sr-only\" i18n=\"screenReader@@upcoming-payments.group.item.amount\"> Amount: </span>\n        <bb-amount-ui\n          data-role=\"upcoming-payment-item-amount\"\n          [currency]=\"transactionInformation?.instructedAmount?.currencyCode\"\n          [amount]=\"transactionInformation?.instructedAmount?.amount\"\n          [mapCurrency]=\"config.uiComponentProps?.mapCurrency\"\n        ></bb-amount-ui>\n      </div>\n\n      <ng-container *ngIf=\"this.payment?.status === 'ACCEPTED'\">\n        <button\n          bbButton\n          *ngIf=\"!(payment?.paymentType === p2pPaymentType)\"\n          color=\"link-text\"\n          buttonSize=\"sm\"\n          class=\"bb-stack__item bb-stack__item--spacing-lg\"\n          (click)=\"onEditClick($event)\"\n          (keydown.enter)=\"onEditClick($event)\"\n          (keydown.space)=\"onEditClick($event)\"\n          i18n=\"@@upcoming-payments.group.item.button.edit\"\n        >\n          Edit\n        </button>\n        <button\n          bbButton\n          *ngIf=\"!(payment?.reasonCode === p2pReasonCodes.inProcess)\"\n          color=\"link-text\"\n          buttonSize=\"sm\"\n          class=\"bb-stack__item bb-text-warning bb-text-danger\"\n          (click)=\"onCancelClick($event)\"\n          (keydown.enter)=\"onCancelClick($event)\"\n          (keydown.space)=\"onCancelClick($event)\"\n          i18n=\"@@upcoming-payments.group.item.button.cancel\"\n          data-role=\"upcoming-payment-item-cancel-button\"\n        >\n          Cancel\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"payment?.reasonCode === p2pReasonCodes.inProcess && payment?.status === 'ACCEPTED'\">\n        <div class=\"bb-inline-stack\">\n          <span\n            class=\"text-muted bb-subtitle bb-stack__item bb-stack__item--spacing-xs\"\n            i18n=\"@@upcoming-payments-journey.payment-item.ready-status.text\"\n            >Accepted</span\n          >\n          <span\n            bbTooltip=\"This payment can’t be cancelled or edited because it has already been accepted by the recipient.\"\n            i18n-bbTooltip=\"@@upcoming-payments-journey.payment-item.ready-status.tooltip\"\n            placement=\"bottom\"\n            triggers=\"hover\"\n          >\n            <bb-icon-ui name=\"info\" class=\"text-muted bb-stack\" size=\"sm\"></bb-icon-ui>\n          </span>\n        </div>\n      </ng-container>\n    </div>\n  </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { getRelativeDate } from '../../helpers/utils';\nimport { UpcomingPaymentsGroup } from '../../models/payments.model';\n\n@Component({\n  selector: 'bb-upcoming-payments-item-group',\n  templateUrl: './upcoming-payments-item-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingPaymentsItemGroupComponent {\n  /**\n   * The upcoming payment.\n   */\n  @Input() paymentsGroup?: UpcomingPaymentsGroup;\n  /**\n   * Changes will be triggered on paymentItemClick event emit.\n   */\n  @Output() paymentItemClick = new EventEmitter<IdentifiedPaymentOrder>();\n  /**\n   *On cancel event emit.\n   */\n  @Output() cancelPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  onPaymentItemClick(paymentItem?: IdentifiedPaymentOrder) {\n    this.paymentItemClick.emit(paymentItem);\n  }\n\n  trackPaymentItem(_: number, payment?: { requestedExecutionDate: string }) {\n    return payment ? payment.requestedExecutionDate : undefined;\n  }\n\n  formatExecutionDate(): string | undefined {\n    let result = this.paymentsGroup?.executionDate;\n\n    if (result === getRelativeDate()) {\n      result = 'today';\n    } else if (result === getRelativeDate(1)) {\n      result = 'tomorrow';\n    }\n\n    return result;\n  }\n\n  onCancelPayment(payment: IdentifiedPaymentOrder): void {\n    this.cancelPayment.emit(payment);\n  }\n}\n","<!-- Execution date -->\n<div\n  class=\"bb-stack bb-subheader bb-text-support bb-block bb-block--xl\"\n  i18n=\"@@upcoming-payments.group.header\"\n  data-role=\"group-item-label\"\n>\n  {formatExecutionDate(), select, today {Today} tomorrow {Tomorrow} other\n  {{{ paymentsGroup?.executionDate | date:'longDate'}}} }\n</div>\n<!-- group of payments -->\n<ng-container *ngIf=\"paymentsGroup?.items?.length > 0\">\n  <div class=\"bb-block bb-block--sm\">\n    <ul class=\"bb-list\">\n      <li\n        *ngFor=\"let payment of paymentsGroup?.items; trackBy: trackPaymentItem\"\n        class=\"bb-list__item bb-list__item--no-separator\"\n      >\n        <div\n          data-role=\"group-item-row\"\n          role=\"button\"\n          tabindex=\"0\"\n          (keydown.enter)=\"onPaymentItemClick(payment)\"\n          (click)=\"onPaymentItemClick(payment)\"\n        >\n          <bb-upcoming-payments-item\n            [payment]=\"payment\"\n            (cancelPayment)=\"onCancelPayment(payment)\"\n          ></bb-upcoming-payments-item>\n        </div>\n      </li>\n    </ul>\n  </div>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { LoadMoreParams } from '@backbase/ui-ang/load-button';\nimport { UpcomingPaymentsGroup } from '../../models/payments.model';\n\n@Component({\n  selector: 'bb-upcoming-payments-list',\n  templateUrl: 'upcoming-payments-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingPaymentsListComponent {\n  /**\n   * The upcoming payment list.\n   */\n  @Input() upcomingPayments?: UpcomingPaymentsGroup[] = [];\n  /**\n   * Total count for payment.\n   * Default value is `0`.\n   */\n  @Input() totalCount = 0;\n  /**\n   * Indicator for load more loading state.\n   * Default value is `false`.\n   */\n  @Input() loading = false;\n  /**\n   * From parameter for load more payments request.\n   * Default value is `0`.\n   */\n  @Input() loadMoreFrom = 0;\n  /**\n   * Size parameter for load more payments request.\n   * Default value is `0`.\n   */\n  @Input() loadMoreSize = 0;\n  /**\n   * changes will be triggered on paymentItemClick event emit.\n   */\n  @Output() paymentItemClick = new EventEmitter<IdentifiedPaymentOrder>();\n  /**\n   * changes will be triggered on loadMoreParam event emit.\n   */\n  @Output() loadMoreParam = new EventEmitter<LoadMoreParams>();\n  /**\n   *On cancel event emit.\n   */\n  @Output() cancelPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  loadMoreParamChange(event: LoadMoreParams) {\n    this.loadMoreFrom = event.from;\n    this.loadMoreParam.emit(event);\n  }\n\n  onPaymentItemClick(paymentItem: IdentifiedPaymentOrder) {\n    this.paymentItemClick.emit(paymentItem);\n  }\n\n  trackPaymentsGroup(_: number, paymentsGroup?: UpcomingPaymentsGroup): string | undefined {\n    return paymentsGroup ? paymentsGroup.executionDate : undefined;\n  }\n\n  onCancelPayment(payment: IdentifiedPaymentOrder) {\n    this.cancelPayment.emit(payment);\n  }\n\n  get hasMore(): boolean {\n    const currentCount = this.loadMoreFrom * this.loadMoreSize + this.loadMoreSize;\n    return currentCount < this.totalCount;\n  }\n}\n","<ng-container *ngIf=\"upcomingPayments && upcomingPayments?.length > 0; else emptyState\">\n  <div class=\"bb-list bb-block bb-block--xl\">\n    <div class=\"bb-list__item\" *ngFor=\"let paymentsGroup of upcomingPayments; trackBy: trackPaymentsGroup\">\n      <bb-upcoming-payments-item-group\n        (paymentItemClick)=\"onPaymentItemClick($event)\"\n        [paymentsGroup]=\"paymentsGroup\"\n        (cancelPayment)=\"onCancelPayment($event)\"\n        data-role=\"upcoming-payment-group-item\"\n      ></bb-upcoming-payments-item-group>\n    </div>\n  </div>\n  <div class=\"bb-text-align-center\" *ngIf=\"hasMore || loading\">\n    <bb-load-button-ui\n      color=\"link\"\n      i18n=\"Load more payment|Load more button for loading more payments@@upcoming-payments.load.more\"\n      data-role=\"load-more-btn\"\n      [isLoading]=\"loading\"\n      [size]=\"loadMoreSize\"\n      [from]=\"loadMoreFrom\"\n      [totalCount]=\"totalCount\"\n      (paramChange)=\"loadMoreParamChange($event)\"\n    >\n      Load more\n    </bb-load-button-ui>\n  </div>\n</ng-container>\n<ng-template #emptyState>\n  <div class=\"bb-state-container\">\n    <bb-empty-state-ui\n      title=\"No Payments\"\n      i18n-title=\"@@upcoming-payments.no.payments.title\"\n      subtitle=\"You do not have any payments to be displayed.\"\n      i18n-subtitle=\"@@upcoming-payments.no.payments.subTitle\"\n      iconSize=\"xl\"\n      iconModifier=\"loans\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n","import { GetPaymentOrdersRequestParams, IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\n\nexport interface PaymentsResponse {\n  items: IdentifiedPaymentOrder[];\n  totalCount: number;\n}\nexport interface UpcomingPaymentResponse {\n  items: UpcomingPaymentsGroup[];\n  totalCount: number;\n}\n\nexport interface UpcomingPaymentsGroup {\n  items: IdentifiedPaymentOrder[];\n  executionDate?: string;\n}\n\nexport enum PaymentActionsTypes {\n  LoadPayments = 'LoadPayments',\n  LoadMore = 'LoadMore',\n  ReturnCachedData = 'ReturnCachedPayments',\n}\n\nexport interface PaymentState extends GetPaymentOrdersRequestParams {\n  type?: PaymentActionsTypes;\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  GetPaymentOrdersRequestParams,\n  IdentifiedPaymentOrder,\n  PaymentOrderCancelPostResponse,\n  PaymentOrdersHttpService,\n} from '@backbase/data-ang/payment-order';\nimport { BehaviorSubject, combineLatest, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, finalize, map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { sortItems, unifyItems } from '../helpers/utils';\nimport { PaymentActionsTypes, PaymentsResponse, PaymentState } from '../models/payments.model';\n\n@Injectable()\nexport class PaymentService {\n  private readonly loadMore$ = new BehaviorSubject<GetPaymentOrdersRequestParams['from']>(undefined);\n  private readonly loadPayments$ = new ReplaySubject<GetPaymentOrdersRequestParams>(1);\n  private readonly returnCachedData$ = new Subject<void>();\n  private readonly loadingSub$ = new ReplaySubject<boolean>(1);\n  private readonly actingSub$ = new ReplaySubject<boolean>(1);\n  private payments?: PaymentsResponse;\n  private totalCounts = { withExecutionDate: 0, withNextExecutionDate: 0 };\n  /**\n   * Observable flag that checks whether a payment is loading\n   */\n  readonly loading$ = this.loadingSub$.pipe(distinctUntilChanged());\n  /**\n   * Observable to check the payment type\n   */\n  readonly acting$ = this.actingSub$.pipe(distinctUntilChanged());\n\n  private readonly paymentActions$ = combineLatest([\n    this.loadPayments$.pipe(map(params => ({ type: PaymentActionsTypes.LoadPayments, ...params }))),\n    this.loadMore$.pipe(map(from => ({ type: PaymentActionsTypes.LoadMore, from }))),\n  ]).pipe(\n    map(([state, loadMore]) => ({ ...state, ...(loadMore.from ? loadMore : null) })),\n    filter((action: PaymentState) => action.type !== undefined),\n  );\n\n  private readonly paymentState$ = merge(\n    this.paymentActions$,\n    this.returnCachedData$.pipe(map(() => ({ type: PaymentActionsTypes.ReturnCachedData }))),\n  ).pipe(\n    switchMap(({ type, ...params }) => {\n      if (type === PaymentActionsTypes.ReturnCachedData) {\n        return of(this.payments);\n      }\n\n      const isLoadMore = type === PaymentActionsTypes.LoadMore;\n      this.loadingSub$.next(true);\n      return this.combinePaymentCalls(params).pipe(\n        map(response => this.handlePaymentSuccess({ ...response, isLoadMore })),\n        finalize(() => this.loadingSub$.next(false)),\n      );\n    }),\n    shareReplay(),\n  );\n\n  /**\n   * Getter for the payments\n   */\n  public get payments$() {\n    return this.paymentState$;\n  }\n\n  constructor(private readonly paymentOrdersService: PaymentOrdersHttpService) {}\n\n  /**\n   * Loads the upcoming payments\n   *\n   * @returns\n   */\n  loadPayments(params?: GetPaymentOrdersRequestParams) {\n    this.loadPayments$.next(params);\n  }\n\n  /**\n   * Loads more payments\n   *\n   * @param from Loads from value\n   * @returns\n   */\n  loadMore(from: number) {\n    this.loadMore$.next(from);\n  }\n\n  /**\n   * Cancels a payment order\n   *\n   * @param paymentOrderId Payment order id\n   * @param version Payment version\n   */\n  cancelPayment(paymentOrderId: string, version: number): Observable<HttpResponse<PaymentOrderCancelPostResponse>> {\n    this.actingSub$.next(true);\n    return this.paymentOrdersService\n      .postCancelByPaymentOrderId(\n        {\n          paymentOrderId,\n          paymentOrderCancelPostRequest: { version },\n        },\n        'response',\n      )\n      .pipe(\n        finalize(() => this.actingSub$.next(false)),\n        tap(() => {\n          this.handleCancelPaymentSuccess(paymentOrderId);\n        }),\n      );\n  }\n\n  private handleCancelPaymentSuccess(paymentOrderId: string) {\n    if (this.payments) {\n      const newItems = this.payments.items.filter(item => item.id !== paymentOrderId);\n      this.payments = {\n        items: newItems,\n        totalCount: this.payments.totalCount,\n      };\n      this.returnCachedData$.next();\n    }\n  }\n\n  private handlePaymentSuccess(payload: PaymentsResponse & { isLoadMore: boolean }) {\n    const orders: IdentifiedPaymentOrder[] = [];\n    if (payload.isLoadMore) {\n      const existingPayments = this.payments?.items || [];\n      orders.push(...existingPayments);\n    }\n\n    this.payments = {\n      items: [...orders, ...payload.items],\n      totalCount: payload.totalCount || payload.items.length,\n    };\n\n    return this.payments;\n  }\n\n  private fetchPayments(params: GetPaymentOrdersRequestParams): Observable<PaymentsResponse> {\n    return this.paymentOrdersService.getPaymentOrders(params, 'response').pipe(\n      map(response => {\n        const totalCount = response.headers.get('x-total-count');\n        return {\n          totalCount: Number(totalCount),\n          items: response.body || [],\n        };\n      }),\n    );\n  }\n\n  private combinePaymentCalls(params: GetPaymentOrdersRequestParams): Observable<PaymentsResponse> {\n    /* Payment-order endpoint doesn't allow to make a call with both nextExecutionDateFrom and executionDateFrom parameters.\n     * nextExecutionDateFrom is needed for recurring payments, executionDateFrom is needed for both recurring and one-off payments\n     */\n    if (params.nextExecutionDateFrom && params.executionDateFrom) {\n      return this.handleMultipleCalls(params);\n    } else {\n      return this.fetchPayments(params);\n    }\n  }\n\n  private handleMultipleCalls(params: GetPaymentOrdersRequestParams) {\n    const { nextExecutionDateFrom, executionDateFrom, size, ...others } = params;\n    const sizePerCall = (size || 0) / 2; // Divide pageSize with 2 because there will be two calls\n    let callWithNextExecution = this.fetchPayments({ ...others, nextExecutionDateFrom, size: sizePerCall });\n    let callWithExecution = this.fetchPayments({ ...others, executionDateFrom, size: sizePerCall });\n\n    const hasMore = (totalCount: number) => (params?.from || 0) * sizePerCall < totalCount;\n    const mapPaymentCalls = (call: Observable<PaymentsResponse>, totalCount: number) => {\n      return hasMore(totalCount) ? call : of({ items: [], totalCount });\n    };\n\n    if (params.from && params.from > 0) {\n      callWithNextExecution = mapPaymentCalls(callWithNextExecution, this.totalCounts.withNextExecutionDate);\n      callWithExecution = mapPaymentCalls(callWithExecution, this.totalCounts.withExecutionDate);\n    }\n\n    return combineLatest([callWithExecution, callWithNextExecution]).pipe(\n      map(([firstCall, secondCall]) => {\n        const items = [...firstCall.items, ...secondCall.items];\n        this.totalCounts = {\n          withExecutionDate: firstCall.totalCount,\n          withNextExecutionDate: secondCall.totalCount,\n        };\n\n        return {\n          // Take highest value by multiplying it in order to produce load-more button logic correctly\n          totalCount: Math.max(firstCall.totalCount, secondCall.totalCount) * 2,\n          items: unifyItems(sortItems(items, params.direction || 'DESC')),\n        };\n      }),\n    );\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { LoadMoreParams } from '@backbase/ui-ang/load-button';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError, takeUntil } from 'rxjs/operators';\nimport { CommunicationService } from '../../communication.service';\nimport { UpcomingPaymentResponse } from '../../models/payments.model';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfigService as ConfigService } from '../../services/config.service';\nimport { PaymentService } from '../../services/payments.service';\n\n@Component({\n  selector: 'bb-payments-list-container',\n  templateUrl: 'payments-list-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentsListContainerComponent implements OnInit, OnDestroy {\n  openConfirmation = false;\n  error?: HttpErrorResponse;\n  loadMoreFrom = 0;\n  readonly acting$ = this.journeyDataService.acting$;\n  readonly loading$ = this.journeyDataService.loading$;\n  selectedPaymentItem?: IdentifiedPaymentOrder;\n  paymentItemToCancel?: IdentifiedPaymentOrder;\n\n  private readonly destroy$ = new Subject();\n\n  /**\n   * Payments stream\n   */\n  @Input() payments$?: Observable<UpcomingPaymentResponse | undefined>;\n  /**\n   * Flag if component is rendering history payments\n   */\n  @Input() isHistoryPayments = false;\n\n  get pageSize(): number | undefined {\n    return this.isHistoryPayments\n      ? this.configService.historyPaymentParams.size\n      : this.configService.upcomingPaymentParams.size;\n  }\n\n  constructor(\n    private readonly journeyDataService: PaymentService,\n    readonly configService: ConfigService,\n    private readonly notificationService: NotificationService,\n    @Optional() private readonly communicatonService: CommunicationService,\n  ) {}\n\n  ngOnInit() {\n    this.payments$ = this.payments$?.pipe(\n      catchError(error => {\n        this.error = error;\n        return of(undefined);\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onPaymentItemClick(selectedPaymentItem: IdentifiedPaymentOrder): void {\n    this.selectedPaymentItem = selectedPaymentItem;\n  }\n\n  onLoadMoreParam(params: LoadMoreParams): void {\n    this.journeyDataService.loadMore(params.from);\n    this.loadMoreFrom = this.loadMoreFrom + 1;\n  }\n\n  onConfirmCancelPayment(confirmed: boolean) {\n    this.openConfirmation = false;\n    const paymentItem = this.paymentItemToCancel;\n    this.paymentItemToCancel = undefined;\n    if (!confirmed) {\n      return;\n    }\n    this.selectedPaymentItem = undefined;\n    if (paymentItem) {\n      const creditorName = paymentItem.transferTransactionInformation?.counterparty?.name;\n      const isRecurring = this.isRecurringPayment(paymentItem);\n\n      this.journeyDataService\n        .cancelPayment(paymentItem.id, paymentItem.version)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(\n          () => {\n            this.showNotification(true, {\n              header: $localize`:@@upcoming-payments-cancel-success-header:Payment cancelled`,\n              message: isRecurring\n                ? $localize`:@@upcoming-payments-cancel-success-msg-recurring:Recurring payment to \"${creditorName}\" has been cancelled successfully.`\n                : $localize`:@@upcoming-payments-cancel-success-msg:Upcoming payment to \"${creditorName}\" has been cancelled successfully.`,\n            });\n          },\n          () => {\n            this.showNotification(false, {\n              header: $localize`:@@upcoming-payments-cancel-fail-header:Failed to Cancel Payment!`,\n              message: $localize`:@@upcoming-payments-cancel-fail-msg:Failed to cancel The payment to \"${creditorName}\".`,\n            });\n          },\n        );\n    }\n  }\n\n  private showNotification(success: boolean, notification: { header: string; message: string }) {\n    this.notificationService.showNotification({\n      dismissible: true,\n      ttl: this.configService.notificationDismissTime,\n      modifier: success ? 'success' : 'error',\n      ...notification,\n    });\n  }\n\n  isRecurringPayment(payment: IdentifiedPaymentOrder | undefined): boolean {\n    return payment?.paymentMode === 'RECURRING';\n  }\n\n  onCloseDetails(): void {\n    this.selectedPaymentItem = undefined;\n  }\n\n  onCancelPayment(paymentItem: IdentifiedPaymentOrder): void {\n    this.paymentItemToCancel = paymentItem;\n    this.openConfirmation = true;\n  }\n\n  onEditPayment(payment: IdentifiedPaymentOrder): void {\n    this.communicatonService?.navigateToEditPayment(payment);\n  }\n}\n","<ng-container *ngIf=\"!error; else errorState\">\n  <ng-container *ngIf=\"payments$ | async as payments; else loadingPayments\">\n    <bb-upcoming-payments-list\n      *ngIf=\"!(acting$ | async); else acting\"\n      [upcomingPayments]=\"payments?.items\"\n      [totalCount]=\"payments?.totalCount\"\n      [loadMoreSize]=\"pageSize\"\n      [loadMoreFrom]=\"loadMoreFrom\"\n      [loading]=\"loading$ | async\"\n      (paymentItemClick)=\"onPaymentItemClick($event)\"\n      (loadMoreParam)=\"onLoadMoreParam($event)\"\n      (cancelPayment)=\"onCancelPayment($event)\"\n    ></bb-upcoming-payments-list>\n\n    <ng-template #acting>\n      <bb-loading-indicator-ui\n        text=\"updating data...\"\n        i18n-text=\"@@bb-upcoming-and-history-payments-journey.payment-list-container.acting-placeholder\"\n      ></bb-loading-indicator-ui>\n    </ng-template>\n\n    <bb-upcoming-payments-cancel-payment-confirmation\n      *ngIf=\"openConfirmation\"\n      [isOpen]=\"openConfirmation\"\n      [isRecurring]=\"isRecurringPayment(paymentItemToCancel)\"\n      (cancelPayment)=\"onConfirmCancelPayment(true)\"\n      (keepPayment)=\"onConfirmCancelPayment(false)\"\n    ></bb-upcoming-payments-cancel-payment-confirmation>\n\n    <bb-upcoming-payments-details\n      *ngIf=\"selectedPaymentItem\"\n      [isOpen]=\"!!selectedPaymentItem\"\n      (close)=\"onCloseDetails()\"\n      [payment]=\"selectedPaymentItem\"\n      [config]=\"configService\"\n      (cancelPayment)=\"onCancelPayment(selectedPaymentItem)\"\n      (editPayment)=\"onEditPayment(selectedPaymentItem)\"\n    ></bb-upcoming-payments-details>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingPayments>\n  <bb-loading-indicator-ui\n    text=\"Loading data...\"\n    text-i18n=\"@@bb-upcoming-and-history-payments-journey.payment-list-container.loading-placeholder\"\n  ></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"bb-state-container\">\n    <bb-empty-state-ui\n      i18n-title=\"@@upcoming-payments.history.error.generic.title\"\n      title=\"Page couldn't load\"\n      i18n-subtitle=\"@@upcoming-payments.history.error.generic.subtitle\"\n      subtitle=\"Try to reload the page or contact the system administrator.\"\n      iconSize=\"xxl\"\n      iconModifier=\"error\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n","import { Component } from '@angular/core';\nimport '@angular/localize/init';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfigService } from './services/config.service';\n\n@Component({\n  selector: 'bb-manage-upcoming-and-historical-payments-journey',\n  template: `\n    <ng-container>\n      <bb-header-ui\n        headingType=\"h2\"\n        headingClasses=\"bb-heading-1 bb-block bb-block--xl\"\n        [heading]=\"title\"\n        i18n-heading=\"@@upcoming-and-history-payments-journey.header\"\n      ></bb-header-ui>\n      <router-outlet></router-outlet>\n    </ng-container>\n  `,\n})\nexport class ManageUpcomingAndHistoricalPaymentsJourneyComponent {\n  get title() {\n    return $localize`:@@upcoming-history-payments-journey-title:${this.configService.journeyTitle}`;\n  }\n  constructor(private readonly configService: ManageUpcomingAndHistoricalPaymentsJourneyConfigService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\n\n@Injectable()\nexport class ManageUpcomingAndHistoricalPaymentsNavigationService {\n  constructor(private readonly router: Router, private readonly route: ActivatedRoute) {}\n  /**\n   * Navigation to history payments view tab\n   */\n  navigateToHistory(extras?: NavigationExtras): void {\n    this.router.navigate(['history'], { relativeTo: this.route, ...(extras || {}) });\n  }\n  /**\n   * Navigation to upcoming payments view tab\n   */\n  navigateToUpcoming(extras?: NavigationExtras): void {\n    this.router.navigate(['upcoming'], { relativeTo: this.route, ...(extras || {}) });\n  }\n  /**\n   * Method to return correct tab index in order to activate it\n   */\n  mapRouteToTabIndex(): 1 | 0 {\n    const routeSections = this.router.url.split('/');\n    return routeSections[routeSections.length - 1] === 'history' ? 1 : 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { mapPaymentOrdersToUpcomingPayments } from '../../helpers/mappers';\nimport { UpcomingPaymentResponse } from '../../models/payments.model';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfigService as ConfigService } from '../../services/config.service';\nimport { PaymentService } from '../../services/payments.service';\n\n@Component({\n  selector: 'bb-history-payments-view',\n  template: `\n    <div class=\"card card-body\">\n      <bb-payments-list-container [payments$]=\"payments$\" [isHistoryPayments]=\"true\"> </bb-payments-list-container>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PaymentService],\n})\nexport class HistoryPaymentsViewComponent implements OnInit {\n  readonly payments$ = this.dataService.payments$.pipe(\n    map(\n      payload =>\n        payload && {\n          items: mapPaymentOrdersToUpcomingPayments(payload.items),\n          totalCount: payload.totalCount,\n        },\n    ),\n  ) as Observable<UpcomingPaymentResponse | undefined>;\n\n  constructor(private readonly dataService: PaymentService, private readonly config: ConfigService) {}\n\n  ngOnInit() {\n    this.dataService.loadPayments(this.config.historyPaymentParams);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ManageUpcomingAndHistoricalPaymentsNavigationService } from '../../services/navigation.service';\n\n@Component({\n  selector: 'bb-upcoming-and-history-payments-tab-container-view',\n  templateUrl: 'upcoming-and-history-payments-tab-container-view.component.html',\n})\nexport class UpcomingAndHistoryPaymentsTabContainerViewComponent implements OnInit {\n  initialTabSelection = 0;\n\n  constructor(\n    private readonly navigationService: ManageUpcomingAndHistoricalPaymentsNavigationService,\n    private readonly route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.initialTabSelection = this.navigationService.mapRouteToTabIndex();\n  }\n\n  onTabSelect(tabIndex: 0 | 1): void {\n    if (tabIndex === 0) {\n      this.navigationService.navigateToUpcoming({ relativeTo: this.route });\n    } else {\n      this.navigationService.navigateToHistory({ relativeTo: this.route });\n    }\n  }\n}\n","<bb-tab-group-ui\n  [initialSelection]=\"initialTabSelection\"\n  (select)=\"onTabSelect($event)\"\n  class=\"bb-upcoming-payments-tab-container\"\n>\n  <bb-tab-ui i18n=\"@@bb-upcoming-and-history-payments-journey.upcoming-tab\">Schedule</bb-tab-ui>\n  <bb-tab-ui i18n=\"@@bb-upcoming-and-history-payments-journey.history-tab\">History</bb-tab-ui>\n</bb-tab-group-ui>\n\n<router-outlet></router-outlet>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { mapPaymentOrdersToUpcomingPayments } from '../../helpers/mappers';\nimport { UpcomingPaymentResponse } from '../../models/payments.model';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfigService as ConfigService } from '../../services/config.service';\nimport { PaymentService } from '../../services/payments.service';\n\n@Component({\n  selector: 'bb-upcoming-payments-view',\n  template: `\n    <div class=\"card card-body\">\n      <bb-payments-list-container [payments$]=\"payments$\"></bb-payments-list-container>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PaymentService],\n})\nexport class UpcomingPaymentsViewComponent implements OnInit {\n  readonly payments$ = this.dataService.payments$.pipe(\n    map(\n      payload =>\n        payload && {\n          items: mapPaymentOrdersToUpcomingPayments(payload.items),\n          totalCount: payload.totalCount,\n        },\n    ),\n  ) as Observable<UpcomingPaymentResponse | undefined>;\n\n  constructor(private readonly dataService: PaymentService, private readonly config: ConfigService) {}\n\n  ngOnInit() {\n    this.dataService.loadPayments(this.config.upcomingPaymentParams);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideRoutes, Route, RouterModule } from '@angular/router';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { TabModule } from '@backbase/ui-ang/tab';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { UpcomingPaymentsCancelPaymentConfirmationComponent } from './components/cancel-payment-confirmation/cancel-payment-confirmation.component';\nimport { UpcomingPaymentsDetailsListComponent } from './components/details-list/upcoming-payments-details-list.component';\nimport { UpcomingPaymentsDetailsComponent } from './components/details-modal/upcoming-payments-details.component';\nimport { UpcomingPaymentsItemGroupComponent } from './components/item-group/upcoming-payments-item-group.component';\nimport { UpcomingPaymentsItemComponent } from './components/item/upcoming-payments-item.component';\nimport { UpcomingPaymentsListComponent } from './components/list/upcoming-payments-list.component';\nimport { PaymentsListContainerComponent } from './components/payment-list-container/payments-list-container.component';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyComponent } from './manage-upcoming-and-historical-payments-journey.component';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfigService } from './services/config.service';\nimport { ManageUpcomingAndHistoricalPaymentsNavigationService } from './services/navigation.service';\nimport { HistoryPaymentsViewComponent } from './views/history-payments-view/history-payments-view.component';\nimport { UpcomingAndHistoryPaymentsTabContainerViewComponent } from './views/payments-container-view/upcoming-and-history-payments-tab-container-view.component';\nimport { UpcomingPaymentsViewComponent } from './views/upcoming-payments-view/upcoming-payments-view.component';\n\nconst defaultRoute: Route = {\n  path: '',\n  component: ManageUpcomingAndHistoricalPaymentsJourneyComponent,\n  children: [\n    {\n      path: '',\n      component: UpcomingPaymentsViewComponent,\n    },\n  ],\n};\n\nconst components = [\n  ManageUpcomingAndHistoricalPaymentsJourneyComponent,\n  UpcomingPaymentsViewComponent,\n  HistoryPaymentsViewComponent,\n  UpcomingAndHistoryPaymentsTabContainerViewComponent,\n  PaymentsListContainerComponent,\n  UpcomingPaymentsListComponent,\n  UpcomingPaymentsItemGroupComponent,\n  UpcomingPaymentsItemComponent,\n  UpcomingPaymentsDetailsComponent,\n  UpcomingPaymentsDetailsListComponent,\n  UpcomingPaymentsCancelPaymentConfirmationComponent,\n];\n\nconst uiModules = [\n  TabModule,\n  IconModule,\n  AmountModule,\n  LoadButtonModule,\n  EmptyStateModule,\n  LoadingIndicatorModule,\n  ModalModule,\n  ButtonModule,\n  HeaderModule,\n  PaymentCardNumberModule,\n  TooltipModule,\n  EllipsisModule,\n  BadgeModule,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [\n    CommonModule,\n    RouterModule,\n    BackbaseCoreModule.withConfig({\n      classMap: {\n        ManageUpcomingAndHistoricalPaymentsJourneyComponent,\n      },\n    }),\n    ...uiModules,\n  ],\n  providers: [\n    ManageUpcomingAndHistoricalPaymentsJourneyConfigService,\n    ManageUpcomingAndHistoricalPaymentsNavigationService,\n  ],\n  exports: [...uiModules, ...components],\n})\nexport class ManageUpcomingAndHistoricalPaymentsJourneyModule {\n  static forRoot(\n    data: { route: Route; [key: string]: any } = { route: defaultRoute },\n  ): ModuleWithProviders<ManageUpcomingAndHistoricalPaymentsJourneyModule> {\n    return {\n      ngModule: ManageUpcomingAndHistoricalPaymentsJourneyModule,\n      providers: [provideRoutes([data.route])],\n    };\n  }\n}\n","// Services\nexport { CommunicationService as ManageUpcomingAndHistoricalPaymentsCommunicationService } from './lib/communication.service';\nexport { UpcomingPaymentsCancelPaymentConfirmationComponent as ӨUpcomingPaymentsCancelPaymentConfirmationComponent } from './lib/components/cancel-payment-confirmation/cancel-payment-confirmation.component';\nexport { UpcomingPaymentsDetailsListComponent as ӨUpcomingPaymentsDetailsListComponent } from './lib/components/details-list/upcoming-payments-details-list.component';\nexport { UpcomingPaymentsDetailsComponent as ӨUpcomingPaymentsDetailsComponent } from './lib/components/details-modal/upcoming-payments-details.component';\nexport { UpcomingPaymentsItemGroupComponent as ӨUpcomingPaymentsItemGroupComponent } from './lib/components/item-group/upcoming-payments-item-group.component';\nexport { UpcomingPaymentsItemComponent as ӨUpcomingPaymentsItemComponent } from './lib/components/item/upcoming-payments-item.component';\n// Ui-components\nexport { UpcomingPaymentsListComponent as ӨUpcomingPaymentsListComponent } from './lib/components/list/upcoming-payments-list.component';\nexport { PaymentsListContainerComponent as ӨPaymentsListContainerComponent } from './lib/components/payment-list-container/payments-list-container.component';\nexport { ManageUpcomingAndHistoricalPaymentsJourneyComponent } from './lib/manage-upcoming-and-historical-payments-journey.component';\nexport { ManageUpcomingAndHistoricalPaymentsJourneyModule } from './lib/manage-upcoming-and-historical-payments-journey.module';\nexport * from './lib/models/config.model';\nexport { ManageUpcomingAndHistoricalPaymentsJourneyConfigService } from './lib/services/config.service';\nexport { ManageUpcomingAndHistoricalPaymentsNavigationService } from './lib/services/navigation.service';\nexport { PaymentService } from './lib/services/payments.service';\nexport { HistoryPaymentsViewComponent } from './lib/views/history-payments-view/history-payments-view.component';\nexport { UpcomingAndHistoryPaymentsTabContainerViewComponent } from './lib/views/payments-container-view/upcoming-and-history-payments-tab-container-view.component';\nexport { UpcomingPaymentsViewComponent } from './lib/views/upcoming-payments-view/upcoming-payments-view.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["EventEmitter","i0","i1","i2","Component","ChangeDetectionStrategy","Input","Output","Status","templateObject_1","i3","i4","i5.UpcomingPaymentsDetailsListComponent","i6","i7","i8","InjectionToken","Injectable","Optional","Inject","i1.CommunicationService","i2.ManageUpcomingAndHistoricalPaymentsJourneyConfigService","i5","i9","i1.UpcomingPaymentsItemComponent","i1.UpcomingPaymentsItemGroupComponent","BehaviorSubject","ReplaySubject","Subject","distinctUntilChanged","combineLatest","map","filter","merge","switchMap","of","finalize","shareReplay","tap","catchError","takeUntil","i1.PaymentService","i4.CommunicationService","i5.UpcomingPaymentsListComponent","i7.UpcomingPaymentsCancelPaymentConfirmationComponent","i8.UpcomingPaymentsDetailsComponent","i10","i1.ManageUpcomingAndHistoricalPaymentsJourneyConfigService","i3.PaymentsListContainerComponent","i1.ManageUpcomingAndHistoricalPaymentsNavigationService","TabModule","IconModule","AmountModule","LoadButtonModule","EmptyStateModule","LoadingIndicatorModule","ModalModule","ButtonModule","HeaderModule","PaymentCardNumberModule","TooltipModule","EllipsisModule","BadgeModule","provideRoutes","CommonModule","RouterModule","BackbaseCoreModule","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,QAAA,oBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,oBAAA,GAAA;SAEC;QAAA,OAAA,oBAAA,CAAA;IAAA,CAAA,EAAA;;ACGD,QAAA,kDAAA,kBAAA,YAAA;IALA,IAAA,SAAA,kDAAA,GAAA;YAMW,IAAA,CAAA,YAAY,GAAG;IACtB,YAAA,QAAQ,EAAE,QAAQ;IAClB,YAAA,QAAQ,EAAE,KAAK;aAChB,CAAC;IAEF;;;IAGG;IACM,QAAA,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;IACxB;;;IAGG;IACM,QAAA,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;IAC7B;;IAEG;IACO,QAAA,IAAA,CAAA,WAAW,GAAG,IAAIA,eAAY,EAAE,CAAC;IAC3C;;IAEG;IACO,QAAA,IAAA,CAAA,aAAa,GAAG,IAAIA,eAAY,EAAE,CAAC;SAQ9C;IANC,IAAA,kDAAA,CAAA,SAAA,CAAA,kBAAkB,GAAlB,YAAA;IACE,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACzB,CAAA;IACD,IAAA,kDAAA,CAAA,SAAA,CAAA,oBAAoB,GAApB,YAAA;IACE,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B,CAAA;;;6LA9BU,kDAAkD,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAC,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAlD,mBAAA,kDAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kDAAkD,sOCP/D,k7DAmDA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAAF,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHD5Ca,kDAAkD,EAAA,UAAA,EAAA,CAAA;sBAL9DG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,kDAAkD;IAC5D,oBAAA,WAAW,EAAE,4CAA4C;wBACzD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD,CAAA;kCAWU,MAAM,EAAA,CAAA;0BAAdC,QAAK;oBAKG,WAAW,EAAA,CAAA;0BAAnBA,QAAK;oBAII,WAAW,EAAA,CAAA;0BAApBC,SAAM;oBAIG,aAAa,EAAA,CAAA;0BAAtBA,SAAM;;;IE9BT;;;;;;;;;;;;;IAagF;IAChF;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC,EAAA;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAA,EAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,EAAA,EAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtG,IAAA,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEc,SAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAA;IAC1B,IAAA,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;IACrC,QAAA,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;IAC9F,IAAA,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IACvC,IAAA,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;IAEM,IAAI,QAAQ,GAAG,YAAA;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAA;IAC3C,QAAA,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACjD,YAAA,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,SAAA;IACD,QAAA,OAAO,CAAC,CAAC;IACb,KAAC,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;IAEe,SAAA,MAAM,CAAC,CAAC,EAAE,CAAC,EAAA;QACvB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC/E,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;YAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,gBAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,SAAA;IACL,IAAA,OAAO,CAAC,CAAC;IACb,CAAC;IAEK,SAAU,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAA;IACpD,IAAA,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;IAAE,QAAA,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;IAC1H,QAAA,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;IAAE,YAAA,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;IAAE,gBAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,IAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;IAEe,SAAA,OAAO,CAAC,UAAU,EAAE,SAAS,EAAA;IACzC,IAAA,OAAO,UAAU,MAAM,EAAE,GAAG,EAAA,EAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,CAAA;IACzE,CAAC;IAEe,SAAA,UAAU,CAAC,WAAW,EAAE,aAAa,EAAA;QACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;IAEK,SAAU,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAA;IACvD,IAAA,SAAS,KAAK,CAAC,KAAK,EAAA,EAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAA,EAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAC5G,IAAA,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAA;IACrD,QAAA,SAAS,SAAS,CAAC,KAAK,EAAA,EAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAAE,SAAA;IAAC,QAAA,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAAE,SAAA,EAAE;IAC3F,QAAA,SAAS,QAAQ,CAAC,KAAK,EAAA,EAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAAE,SAAA;IAAC,QAAA,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAAE,SAAA,EAAE;IAC9F,QAAA,SAAS,IAAI,CAAC,MAAM,EAAA,EAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;IAC9G,QAAA,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1E,KAAC,CAAC,CAAC;IACP,CAAC;IAEe,SAAA,WAAW,CAAC,OAAO,EAAE,IAAI,EAAA;IACrC,IAAA,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAA,EAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IAAE,YAAA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAA,EAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,SAAS,IAAI,CAAC,CAAC,EAAA,EAAI,OAAO,UAAU,CAAC,EAAI,EAAA,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,SAAS,IAAI,CAAC,EAAE,EAAA;IACZ,QAAA,IAAI,CAAC;IAAE,YAAA,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;IAC9D,QAAA,OAAO,CAAC;gBAAE,IAAI;IACV,gBAAA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;IAAE,oBAAA,OAAO,CAAC,CAAC;IAC7J,gBAAA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;IAAE,oBAAA,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IACxC,gBAAA,QAAQ,EAAE,CAAC,CAAC,CAAC;IACT,oBAAA,KAAK,CAAC,CAAC;IAAC,oBAAA,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;IAC9B,oBAAA,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;IAAC,wBAAA,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IACxD,oBAAA,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;IAAC,wBAAA,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAAC,wBAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;IACjD,oBAAA,KAAK,CAAC;IAAE,wBAAA,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAAC,wBAAA,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;IACjD,oBAAA;IACI,wBAAA,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;IAAE,yBAAA;IAC5G,wBAAA,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAAE,4BAAA,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;IAAE,yBAAA;IACtF,wBAAA,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAAE,4BAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;IAAE,yBAAA;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAAE,4BAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,4BAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;IAAE,yBAAA;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;IAAE,4BAAA,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IACtB,wBAAA,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;IAC9B,iBAAA;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAC9B,aAAA;IAAC,YAAA,OAAO,CAAC,EAAE;IAAE,gBAAA,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;IAAE,aAAA;IAAS,oBAAA;IAAE,gBAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAAE,aAAA;IAC1D,QAAA,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;IAAE,YAAA,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;IAEM,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAA;QAC9D,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,YAAA,EAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC,KAAK,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAA;QACtB,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;IAEa,SAAA,YAAY,CAAC,CAAC,EAAE,CAAC,EAAA;QAC7B,KAAK,IAAI,CAAC,IAAI,CAAC;IAAE,QAAA,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAAE,YAAA,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClH,CAAC;IAEK,SAAU,QAAQ,CAAC,CAAC,EAAA;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAC9E,IAAA,IAAI,CAAC;IAAE,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,IAAA,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;YAAE,OAAO;IAC1C,YAAA,IAAI,EAAE,YAAA;IACF,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;wBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;IACnC,gBAAA,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;iBAC3C;aACJ,CAAC;IACF,IAAA,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;IAEe,SAAA,MAAM,CAAC,CAAC,EAAE,CAAC,EAAA;IACvB,IAAA,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3D,IAAA,IAAI,CAAC,CAAC;IAAE,QAAA,OAAO,CAAC,CAAC;IACjB,IAAA,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;IAAE,YAAA,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC9E,KAAA;IACD,IAAA,OAAO,KAAK,EAAE;IAAE,QAAA,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;IAAE,KAAA;IAC/B,YAAA;YACJ,IAAI;IACA,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;IAAE,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpD,SAAA;IACO,gBAAA;IAAE,YAAA,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;IAAE,SAAA;IACpC,KAAA;IACD,IAAA,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,QAAQ,GAAA;IACpB,IAAA,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;IAC9C,QAAA,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,IAAA,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,cAAc,GAAA;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;IAAE,QAAA,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACpF,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,IAAA,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAA;IACxC,IAAA,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;IAAE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjF,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;IACpB,gBAAA,IAAI,CAAC,EAAE;IAAE,oBAAA,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrD,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,aAAA;IACJ,SAAA;IACD,IAAA,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7D,CAAC;IAEK,SAAU,OAAO,CAAC,CAAC,EAAA;QACrB,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;aAEe,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,EAAA;QAC3D,IAAI,CAAC,MAAM,CAAC,aAAa;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IACvF,IAAA,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IAC9D,IAAA,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAc,EAAA,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACtH,SAAS,IAAI,CAAC,CAAC,EAAA,EAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAA,EAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAI,EAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IAC1I,IAAA,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAAE,KAAA;IAAC,IAAA,OAAO,CAAC,EAAE;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAAE,KAAA,EAAE;QAClF,SAAS,IAAI,CAAC,CAAC,EAAA,EAAI,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IACxH,IAAA,SAAS,OAAO,CAAC,KAAK,EAAA,EAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;IAClD,IAAA,SAAS,MAAM,CAAC,KAAK,EAAA,EAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;IAClD,IAAA,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAA,EAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM;IAAE,QAAA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;IAEK,SAAU,gBAAgB,CAAC,CAAC,EAAA;QAC9B,IAAI,CAAC,EAAE,CAAC,CAAC;IACT,IAAA,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAA,EAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAC5I,IAAA,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAI,EAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAI,EAAA,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;IAEK,SAAU,aAAa,CAAC,CAAC,EAAA;QAC3B,IAAI,CAAC,MAAM,CAAC,aAAa;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACnC,IAAA,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAA,EAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACjN,SAAS,IAAI,CAAC,CAAC,EAAI,EAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAA,EAAI,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAI,EAAA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IAChK,IAAA,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,EAAI,EAAA,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;IAEe,SAAA,oBAAoB,CAAC,MAAM,EAAE,GAAG,EAAA;QAC5C,IAAI,MAAM,CAAC,cAAc,EAAE;IAAE,QAAA,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IAAE,KAAA;IAAM,SAAA;IAAE,QAAA,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;IAAE,KAAA;IAC/G,IAAA,OAAO,MAAM,CAAC;IAClB,CAAC;IAAA,CAAC;IAEF,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAA;IACnD,IAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC,IAAI,UAAS,CAAC,EAAE,CAAC,EAAA;IACd,IAAA,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;IAEI,SAAU,YAAY,CAAC,GAAG,EAAA;IAC5B,IAAA,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU;IAAE,QAAA,OAAO,GAAG,CAAC;QACtC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,GAAG,IAAI,IAAI;YAAE,KAAK,IAAI,CAAC,IAAI,GAAG;IAAE,YAAA,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAAE,gBAAA,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACzI,IAAA,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAChC,IAAA,OAAO,MAAM,CAAC;IAClB,CAAC;IAEK,SAAU,eAAe,CAAC,GAAG,EAAA;IAC/B,IAAA,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;IAEK,SAAU,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAA;IAC3D,IAAA,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,0EAA0E,CAAC,CAAC;IACnL,IAAA,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAClG,CAAC;IAEK,SAAU,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAA;QAClE,IAAI,IAAI,KAAK,GAAG;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;IACxE,IAAA,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,yEAAyE,CAAC,CAAC;IAClL,IAAA,OAAO,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAC9G;;IC9OO,IAAM,gBAAgB,GAAG,cAAc,CAAC;IACxC,IAAM,gBAAgB,GAAG;IAC9B,IAAA,OAAO,EAAE,MAAM;IACf,IAAA,SAAS,EAAE,MAAM;KAClB;;ACYD,QAAA,oCAAA,kBAAA,YAAA;IALA,IAAA,SAAA,oCAAA,GAAA;YAMW,IAAA,CAAA,mBAAmB,GAA4B;IACtD,YAAA,MAAM,EAAE,EAAE;IACV,YAAA,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,YAAA,QAAQ,EAAE,CAAC;aACZ,CAAC;SAoCH;IA1BC,IAAA,MAAA,CAAA,cAAA,CAAW,oCAAsB,CAAA,SAAA,EAAA,wBAAA,EAAA;IAAjC,QAAA,GAAA,EAAA,YAAA;;gBACE,OAAO,MAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,8BAA8B,CAAC;aACrD;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,oCAAiB,CAAA,SAAA,EAAA,mBAAA,EAAA;IAArB,QAAA,GAAA,EAAA,YAAA;;gBACE,OAAO,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,sBAAsB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,MAAK,QAAQ;sBAC/D,MAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,8BAA8B,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,mBAAmB;sBACjE,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,iBAAiB,CAAC;aACrC;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,oCAAmB,CAAA,SAAA,EAAA,qBAAA,EAAA;IAAvB,QAAA,GAAA,EAAA,YAAA;;gBACE,OAAO,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,sBAAsB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,MAAK,QAAQ;sBAC/D,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,0CAAE,iBAAiB;sBAC/B,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,8BAA8B,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,mBAAmB,CAAC;aACvE;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,oCAAe,CAAA,SAAA,EAAA,iBAAA,EAAA;IAAnB,QAAA,GAAA,EAAA,YAAA;;gBACE,IAAM,IAAI,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,oBAAoB,CAAC,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,KAAI,EAAE,CAAC,CAAC;gBAChF,OAAO,SAAS,wIAAA,6DAA8D,EAAU,EAAE,CAAZ,CAAA,CAAA,EAAA,IAAI,IAAI,EAAE,CAAG,CAAA;aAC5F;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,oCAAe,CAAA,SAAA,EAAA,iBAAA,EAAA;IAAnB,QAAA,GAAA,EAAA,YAAA;;gBACE,IAAM,MAAM,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,8BAA8B,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,mBAAmB,0CAAE,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;IAC7G,YAAA,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;aAChD;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,oCAAa,CAAA,SAAA,EAAA,eAAA,EAAA;IAAjB,QAAA,GAAA,EAAA,YAAA;;IACE,YAAA,OAAO,CAAA,MAAA,IAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,MAAK,gBAAgB,CAAC;aACvD;;;IAAA,KAAA,CAAA,CAAA;;;+KAxCU,oCAAoC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAN,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAApC,mBAAA,oCAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oCAAoC,sIChBjD,0/IAgHA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAA,eAAA,CAAA,SAAA,EAAA,mBAAA,EAAAC,aAAA,CAAA,qBAAA,EAAA,MAAA,EAAAD,eAAA,CAAA,QAAA,EAAA,WAAA,EAAAA,eAAA,CAAA,aAAA,EAAA,EAAA,eAAA,EAAAD,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDhGa,oCAAoC,EAAA,UAAA,EAAA,CAAA;sBALhDG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,mCAAmC;IAC7C,oBAAA,WAAW,EAAE,+CAA+C;wBAC5D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD,CAAA;kCAUU,OAAO,EAAA,CAAA;0BAAfC,QAAK;oBAIG,MAAM,EAAA,CAAA;0BAAdA,QAAK;;;;IEzBD,IAAM,kCAAkC,GAAG,UAAC,QAAkC,EAAA;IACnF,IAAA,OAAO,QAAQ,CAAC,MAAM,CAA0B,UAAC,GAAG,EAAE,IAAI,EAAA;;IACxD,QAAA,IAAM,aAAa,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,iBAAiB,KAAI,IAAI,CAAC,sBAAsB,IAAI,EAAE,CAAC;IAC5F,QAAA,IAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,UAAA,eAAe,EAAA,EAAI,OAAA,eAAe,CAAC,aAAa,KAAK,aAAa,CAA/C,EAA+C,CAAC,CAAC;IAChG,QAAA,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;IACf,YAAA,GAAG,CAAC,IAAI,CAAC,EAAE,aAAa,EAAA,aAAA,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,SAAA;IAAM,aAAA;gBACL,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,SAAA;IACD,QAAA,OAAO,GAAG,CAAC;SACZ,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC;IAEK,IAAM,aAAa,GAAG,UAAC,OAAgC,EAAA;;IAC5D,IAAA,IAAM,aAAa,IAAA,EAAA,GAAA,EAAA;IACjB,QAAA,EAAA,CAAC,gBAAgB,CAAC,OAAO,CAAA,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;YACjE,EAAC,CAAA,gBAAgB,CAAC,SAAS,CAAG,GAAA;IAC5B,YAAA,IAAI,EAAE,uBAAuB;IAC7B,YAAA,KAAK,EAAE,EAAE;IACV,SAAA;eACF,CAAC;IAEF,IAAA,QAAQ,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,MAAM;YACrB,KAAKE,WAAM,CAAC,QAAQ;gBAClB,OAAO,CAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,WAAW,MAAK,gBAAgB,GAAG,aAAa,CAAC,CAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU,KAAI,EAAE,CAAC,GAAG,SAAS,CAAC;YAC1G,KAAKA,WAAM,CAAC,QAAQ;gBAClB,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;YAC/C,KAAKA,WAAM,CAAC,SAAS;gBACnB,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;YAC9C,KAAKA,WAAM,CAAC,SAAS;gBACnB,OAAO,EAAE,IAAI,EAAE,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;IAClD,QAAA;IACE,YAAA,OAAO,SAAS,CAAC;IACpB,KAAA;IACH,CAAC;;AC3BD,QAAA,gCAAA,kBAAA,YAAA;IALA,IAAA,SAAA,gCAAA,GAAA;IAMW,QAAA,IAAc,CAAA,cAAA,GAAG,gBAAgB,CAAC;IAClC,QAAA,IAAc,CAAA,cAAA,GAAG,gBAAgB,CAAC;IAC3C;;;IAGG;IACM,QAAA,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;IASxB;;IAEG;IACO,QAAA,IAAA,CAAA,aAAa,GAAG,IAAIR,eAAY,EAAE,CAAC;IAC7C;;IAEG;IACO,QAAA,IAAA,CAAA,KAAK,GAAG,IAAIA,eAAY,EAAE,CAAC;IACrC;;IAEG;IACO,QAAA,IAAA,CAAA,WAAW,GAAG,IAAIA,eAAY,EAA0B,CAAC;SA0BpE;IAtBC,IAAA,MAAA,CAAA,cAAA,CAAI,gCAAU,CAAA,SAAA,EAAA,YAAA,EAAA;IAHd;;IAEG;IACH,QAAA,GAAA,EAAA,YAAA;gBACE,IAAM,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC/C,QACE,UAAU,IAAI;oBACZ,IAAI,EAAE,SAAS,CAAAS,kBAAA,KAAAA,kBAAA,GAAA,oBAAA,CAAA,CAAA,uCAAA,EAAA,EAAA,CAAA,EAAA,CAAA,uCAAwC,EAAe,EAAE,CAAjB,CAAA,CAAA,EAAA,UAAU,CAAC,IAAI,CAAE;oBACxE,KAAK,EAAE,UAAU,CAAC,KAAK;IACxB,aAAA,EACD;aACH;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,gCAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;IACE,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B,CAAA;IAED,IAAA,gCAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACE,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACpB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB,CAAA;IAED,IAAA,gCAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;YACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrC,CAAA;;;2KApDU,gCAAgC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAR,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAhC,mBAAA,gCAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,gCAAgC,4OCX7C,+yHA+FA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,eAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,aAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,oCAAA,EAAA,QAAA,EAAA,mCAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,aAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,EAAA,EAAA,IAAA,EAAAW,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAZ,aAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,EAAA,EAAA,IAAA,EAAAa,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAAd,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDpFa,gCAAgC,EAAA,UAAA,EAAA,CAAA;sBAL5CG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,8BAA8B;IACxC,oBAAA,WAAW,EAAE,0CAA0C;wBACvD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD,CAAA;kCAQU,MAAM,EAAA,CAAA;0BAAdC,QAAK;oBAIG,OAAO,EAAA,CAAA;0BAAfA,QAAK;oBAIG,MAAM,EAAA,CAAA;0BAAdA,QAAK;oBAII,aAAa,EAAA,CAAA;0BAAtBC,SAAM;oBAIG,KAAK,EAAA,CAAA;0BAAdA,SAAM;oBAIG,WAAW,EAAA,CAAA;0BAApBA,SAAM;;;;IEpCF,IAAM,WAAW,GAAG,UAAC,OAAoB,EAAA;QAApB,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAc,GAAA,IAAA,IAAI,EAAE,CAAA,EAAA;IAC9C,IAAA,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAC1C,IAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QACnC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAExC,IAAA,OAAU,IAAI,GAAI,GAAA,GAAA,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAI,GAAA,GAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAG,CAAC;IACrE,CAAC,CAAC;IAEK,IAAM,eAAe,GAAG,UAAC,IAAa,EAAE,eAAyB,EAAA;IACtE,IAAA,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAExB,IAAA,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;IACrC,KAAA;IAED,IAAA,OAAO,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IAClE,CAAC,CAAC;IAEK,IAAM,SAAS,GAAG,UACvB,QAAkC,EAClC,aAAyD,EAAA;IAEzD,IAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAC,KAA6B,EAAE,KAA6B,EAAA;;IAChF,QAAA,IAAM,SAAS,GAAG,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,iBAAiB,KAAI,KAAK,CAAC,sBAAsB,CAAC;IACpF,QAAA,IAAM,SAAS,GAAG,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,iBAAiB,KAAI,KAAK,CAAC,sBAAsB,CAAC;YACpF,IAAM,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;IAC5F,QAAA,OAAO,aAAa,KAAK,KAAK,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC;IAC1D,KAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEK,IAAM,UAAU,GAAG,UAAC,QAAkC,EAAA;IAC3D,IAAA,OAAO,QAAQ,CAAC,MAAM,CAAC,UAAC,MAAgC,EAAE,IAA4B,EAAA;YACpF,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI,EAAA,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAhB,EAAgB,CAAC,CAAC;IACnD,QAAA,OAAO,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC/C,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;;QCnCY,4DAA4D,GACvE,IAAIS,iBAAc,CAChB,8EAA8E;;ICKlF,IAAM,cAAc,GAA4D;IAC9E,IAAA,uBAAuB,EAAE,IAAI;IAC7B,IAAA,YAAY,EAAE,KAAK;IACnB,IAAA,qBAAqB,EAAE;IACrB,QAAA,OAAO,EAAE,wBAAwB;IACjC,QAAA,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,CAAC,UAAU,CAAC;YACpB,iBAAiB,EAAE,WAAW,EAAE;YAChC,qBAAqB,EAAE,WAAW,EAAE;IACpC,QAAA,IAAI,EAAE,CAAC;IACP,QAAA,IAAI,EAAE,EAAE;IACT,KAAA;IACD,IAAA,oBAAoB,EAAE;IACpB,QAAA,OAAO,EAAE,wBAAwB;IACjC,QAAA,SAAS,EAAE,MAAM;IACjB,QAAA,MAAM,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,WAAW,CAAC;IAC9C,QAAA,IAAI,EAAE,CAAC;IACP,QAAA,IAAI,EAAE,EAAE;IACT,KAAA;IACD,IAAA,oBAAoB,EAAE;IACpB,QAAA,iBAAiB,EAAE,2BAA2B;IAC9C,QAAA,kBAAkB,EAAE,kCAAkC;IACtD,QAAA,YAAY,EAAE,kDAAkD;IACjE,KAAA;IACD,IAAA,YAAY,EAAE,qBAAqB;IACnC,IAAA,gBAAgB,EAAE;IAChB,QAAA,WAAW,EAAE,IAAI;IAClB,KAAA;KACF,CAAC;AAGF,QAAA,uDAAA,kBAAA,YAAA;IAGE,IAAA,SAAA,uDAAA,CAGmB,MAA+D,EAAA;IAA/D,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAyD;YAEhF,IAAI,CAAC,OAAO,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAc,CAAK,GAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAG,CAAC;SAC9D;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,uDAAQ,CAAA,SAAA,EAAA,UAAA,EAAA;IAAZ,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,cAAc,CAAC;aACvB;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,uDAAuB,CAAA,SAAA,EAAA,yBAAA,EAAA;IAA3B,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC;aAC7C;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,uDAAY,CAAA,SAAA,EAAA,cAAA,EAAA;IAAhB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;aAClC;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,uDAAoB,CAAA,SAAA,EAAA,sBAAA,EAAA;IAAxB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;aAC1C;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,uDAAqB,CAAA,SAAA,EAAA,uBAAA,EAAA;IAAzB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;aAC3C;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,uDAAoB,CAAA,SAAA,EAAA,sBAAA,EAAA;IAAxB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;aAC1C;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,uDAAY,CAAA,SAAA,EAAA,cAAA,EAAA;IAAhB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;aAClC;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,uDAAgB,CAAA,SAAA,EAAA,kBAAA,EAAA;IAApB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;aACtC;;;IAAA,KAAA,CAAA,CAAA;;;IAnCU,mBAAA,uDAAA,CAAA,IAAA,GAAAf,aAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,uDAAuD,kBAKxD,4DAA4D,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAAA,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;sMAL3D,uDAAuD,EAAA,CAAA,CAAA;sHAAvD,uDAAuD,EAAA,UAAA,EAAA,CAAA;sBADnEgB,aAAU;;;kCAKNC,WAAQ;;kCACRC,SAAM;mCAAC,4DAA4D,CAAA;;;;AC/BxE,QAAA,6BAAA,kBAAA,YAAA;QAYE,SAAyC,6BAAA,CAAA,mBAAyC,EAAW,MAAqB,EAAA;IAAzE,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAsB;IAAW,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAe;IAXzG,QAAA,IAAc,CAAA,cAAA,GAAG,gBAAgB,CAAC;IAClC,QAAA,IAAc,CAAA,cAAA,GAAG,gBAAgB,CAAC;IAK3C;;IAEG;IACO,QAAA,IAAA,CAAA,aAAa,GAAG,IAAInB,eAAY,EAAE,CAAC;SAEyE;IAEtH,IAAA,MAAA,CAAA,cAAA,CAAW,6BAAsB,CAAA,SAAA,EAAA,wBAAA,EAAA;IAAjC,QAAA,GAAA,EAAA,YAAA;;gBACE,OAAO,MAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,8BAA8B,CAAC;aACrD;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAW,6BAAQ,CAAA,SAAA,EAAA,UAAA,EAAA;IAAnB,QAAA,GAAA,EAAA,YAAA;;gBACE,OAAO,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,iBAAiB,CAAC;aAClD;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAW,6BAAW,CAAA,SAAA,EAAA,aAAA,EAAA;IAAtB,QAAA,GAAA,EAAA,YAAA;;IACE,YAAA,OAAO,CAAA,MAAA,IAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,MAAK,WAAW,CAAC;aAClD;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAW,6BAAU,CAAA,SAAA,EAAA,YAAA,EAAA;IAArB,QAAA,GAAA,EAAA,YAAA;gBACE,IAAM,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC/C,QACE,UAAU,IAAI;oBACZ,IAAI,EAAE,SAAS,CAAAS,kBAAA,KAAAA,kBAAA,GAAA,oBAAA,CAAA,CAAA,uCAAA,EAAA,EAAA,CAAA,EAAA,CAAA,uCAAwC,EAAe,EAAE,CAAjB,CAAA,CAAA,EAAA,UAAU,CAAC,IAAI,CAAE;oBACxE,KAAK,EAAE,UAAU,CAAC,KAAK;IACxB,aAAA,EACD;aACH;;;IAAA,KAAA,CAAA,CAAA;QAED,6BAAa,CAAA,SAAA,CAAA,aAAA,GAAb,UAAc,KAAY,EAAA;YACxB,KAAK,CAAC,eAAe,EAAE,CAAC;IACxB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B,CAAA;QAED,6BAAW,CAAA,SAAA,CAAA,WAAA,GAAX,UAAY,KAAY,EAAA;;YACtB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,KAAK,CAAC,eAAe,EAAE,CAAC;IACxB,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,mBAAmB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/D,SAAA;SACF,CAAA;;;wKA7CU,6BAA6B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAW,oBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,uDAAA,EAAA,CAAA,EAAA,MAAA,EAAApB,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA7B,mBAAA,6BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,6BAA6B,yJCf1C,8rJA4GA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAS,eAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAW,aAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAQ,aAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,WAAA,EAAAT,eAAA,CAAA,aAAA,EAAA,EAAA,eAAA,EAAAb,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHD7Fa,6BAA6B,EAAA,UAAA,EAAA,CAAA;sBALzCG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,2BAA2B;IACrC,oBAAA,WAAW,EAAE,uCAAuC;wBACpD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD,CAAA;;;kCAaca,WAAQ;;6BANZ,OAAO,EAAA,CAAA;0BAAfZ,QAAK;oBAII,aAAa,EAAA,CAAA;0BAAtBC,SAAM;;;;AEfT,QAAA,kCAAA,kBAAA,YAAA;IALA,IAAA,SAAA,kCAAA,GAAA;IAUE;;IAEG;IACO,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAIP,eAAY,EAA0B,CAAC;IACxE;;IAEG;IACO,QAAA,IAAA,CAAA,aAAa,GAAG,IAAIA,eAAY,EAA0B,CAAC;SAyBtE;QAvBC,kCAAkB,CAAA,SAAA,CAAA,kBAAA,GAAlB,UAAmB,WAAoC,EAAA;IACrD,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACzC,CAAA;IAED,IAAA,kCAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,UAAiB,CAAS,EAAE,OAA4C,EAAA;YACtE,OAAO,OAAO,GAAG,OAAO,CAAC,sBAAsB,GAAG,SAAS,CAAC;SAC7D,CAAA;IAED,IAAA,kCAAA,CAAA,SAAA,CAAA,mBAAmB,GAAnB,YAAA;;YACE,IAAI,MAAM,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC;IAE/C,QAAA,IAAI,MAAM,KAAK,eAAe,EAAE,EAAE;gBAChC,MAAM,GAAG,OAAO,CAAC;IAClB,SAAA;IAAM,aAAA,IAAI,MAAM,KAAK,eAAe,CAAC,CAAC,CAAC,EAAE;gBACxC,MAAM,GAAG,UAAU,CAAC;IACrB,SAAA;IAED,QAAA,OAAO,MAAM,CAAC;SACf,CAAA;QAED,kCAAe,CAAA,SAAA,CAAA,eAAA,GAAf,UAAgB,OAA+B,EAAA;IAC7C,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClC,CAAA;;;6KApCU,kCAAkC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAC,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAlC,mBAAA,kCAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kCAAkC,iNCV/C,6lCAiCA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAuB,6BAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAArB,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAAA,eAAA,CAAA,QAAA,EAAA,EAAA,eAAA,EAAAF,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDvBa,kCAAkC,EAAA,UAAA,EAAA,CAAA;sBAL9CG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,iCAAiC;IAC3C,oBAAA,WAAW,EAAE,+CAA+C;wBAC5D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD,CAAA;kCAKU,aAAa,EAAA,CAAA;0BAArBC,QAAK;oBAII,gBAAgB,EAAA,CAAA;0BAAzBC,SAAM;oBAIG,aAAa,EAAA,CAAA;0BAAtBA,SAAM;;;AEZT,QAAA,6BAAA,kBAAA,YAAA;IALA,IAAA,SAAA,6BAAA,GAAA;IAME;;IAEG;IACM,QAAA,IAAgB,CAAA,gBAAA,GAA6B,EAAE,CAAC;IACzD;;;IAGG;IACM,QAAA,IAAU,CAAA,UAAA,GAAG,CAAC,CAAC;IACxB;;;IAGG;IACM,QAAA,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;IACzB;;;IAGG;IACM,QAAA,IAAY,CAAA,YAAA,GAAG,CAAC,CAAC;IAC1B;;;IAGG;IACM,QAAA,IAAY,CAAA,YAAA,GAAG,CAAC,CAAC;IAC1B;;IAEG;IACO,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAIP,eAAY,EAA0B,CAAC;IACxE;;IAEG;IACO,QAAA,IAAA,CAAA,aAAa,GAAG,IAAIA,eAAY,EAAkB,CAAC;IAC7D;;IAEG;IACO,QAAA,IAAA,CAAA,aAAa,GAAG,IAAIA,eAAY,EAA0B,CAAC;SAuBtE;QArBC,6BAAmB,CAAA,SAAA,CAAA,mBAAA,GAAnB,UAAoB,KAAqB,EAAA;IACvC,QAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC;IAC/B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChC,CAAA;QAED,6BAAkB,CAAA,SAAA,CAAA,kBAAA,GAAlB,UAAmB,WAAmC,EAAA;IACpD,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACzC,CAAA;IAED,IAAA,6BAAA,CAAA,SAAA,CAAA,kBAAkB,GAAlB,UAAmB,CAAS,EAAE,aAAqC,EAAA;YACjE,OAAO,aAAa,GAAG,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SAChE,CAAA;QAED,6BAAe,CAAA,SAAA,CAAA,eAAA,GAAf,UAAgB,OAA+B,EAAA;IAC7C,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClC,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,6BAAO,CAAA,SAAA,EAAA,SAAA,EAAA;IAAX,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IAC/E,YAAA,OAAO,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;aACvC;;;IAAA,KAAA,CAAA,CAAA;;;wKA1DU,6BAA6B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAC,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA7B,mBAAA,6BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,6BAA6B,2VCV1C,y9CAsCA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAwB,kCAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAtB,eAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,eAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,aAAA,EAAA,cAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAAV,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHD5Ba,6BAA6B,EAAA,UAAA,EAAA,CAAA;sBALzCG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,2BAA2B;IACrC,oBAAA,WAAW,EAAE,uCAAuC;wBACpD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD,CAAA;kCAKU,gBAAgB,EAAA,CAAA;0BAAxBC,QAAK;oBAKG,UAAU,EAAA,CAAA;0BAAlBA,QAAK;oBAKG,OAAO,EAAA,CAAA;0BAAfA,QAAK;oBAKG,YAAY,EAAA,CAAA;0BAApBA,QAAK;oBAKG,YAAY,EAAA,CAAA;0BAApBA,QAAK;oBAII,gBAAgB,EAAA,CAAA;0BAAzBC,SAAM;oBAIG,aAAa,EAAA,CAAA;0BAAtBA,SAAM;oBAIG,aAAa,EAAA,CAAA;0BAAtBA,SAAM;;;IE9BT,IAAY,mBAIX,CAAA;IAJD,CAAA,UAAY,mBAAmB,EAAA;IAC7B,IAAA,mBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;IAC7B,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;IACrB,IAAA,mBAAA,CAAA,kBAAA,CAAA,GAAA,sBAAyC,CAAA;IAC3C,CAAC,EAJW,mBAAmB,KAAnB,mBAAmB,GAI9B,EAAA,CAAA,CAAA;;ACND,QAAA,cAAA,kBAAA,YAAA;IAmDE,IAAA,SAAA,cAAA,CAA6B,oBAA8C,EAAA;YAA3E,IAA+E,KAAA,GAAA,IAAA,CAAA;IAAlD,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAA0B;YAlD1D,IAAA,CAAA,SAAS,GAAG,IAAImB,oBAAe,CAAwC,SAAS,CAAC,CAAC;YAClF,IAAA,CAAA,aAAa,GAAG,IAAIC,kBAAa,CAAgC,CAAC,CAAC,CAAC;IACpE,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAIC,YAAO,EAAQ,CAAC;YACxC,IAAA,CAAA,WAAW,GAAG,IAAID,kBAAa,CAAU,CAAC,CAAC,CAAC;YAC5C,IAAA,CAAA,UAAU,GAAG,IAAIA,kBAAa,CAAU,CAAC,CAAC,CAAC;IAEpD,QAAA,IAAW,CAAA,WAAA,GAAG,EAAE,iBAAiB,EAAE,CAAC,EAAE,qBAAqB,EAAE,CAAC,EAAE,CAAC;IACzE;;IAEG;IACM,QAAA,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAACE,8BAAoB,EAAE,CAAC,CAAC;IAClE;;IAEG;IACM,QAAA,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAACA,8BAAoB,EAAE,CAAC,CAAC;IAE/C,QAAA,IAAe,CAAA,eAAA,GAAGC,kBAAa,CAAC;IAC/C,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAACC,aAAG,CAAC,UAAA,MAAM,EAAA,EAAI,QAAG,MAAA,CAAA,MAAA,CAAA,EAAA,IAAI,EAAE,mBAAmB,CAAC,YAAY,EAAK,EAAA,MAAM,CAAG,EAAvD,EAAuD,CAAC,CAAC;gBAC/F,IAAI,CAAC,SAAS,CAAC,IAAI,CAACA,aAAG,CAAC,UAAA,IAAI,EAAI,EAAA,QAAC,EAAE,IAAI,EAAE,mBAAmB,CAAC,QAAQ,EAAE,IAAI,EAAA,IAAA,EAAE,EAAC,EAAA,CAAC,CAAC;IACjF,SAAA,CAAC,CAAC,IAAI,CACLA,aAAG,CAAC,UAAC,EAAiB,EAAA;IAAjB,YAAA,IAAA,EAAA,GAAA,aAAiB,EAAhB,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IAAM,YAAA,QAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,IAAM,QAAQ,CAAC,IAAI,GAAG,QAAQ,GAAG,IAAI,EAAI,EAAA;IAApD,SAAoD,CAAC,EAChFC,gBAAM,CAAC,UAAC,MAAoB,EAAK,EAAA,OAAA,MAAM,CAAC,IAAI,KAAK,SAAS,GAAA,CAAC,CAC5D,CAAC;IAEe,QAAA,IAAA,CAAA,aAAa,GAAGC,UAAK,CACpC,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAACF,aAAG,CAAC,YAAM,EAAA,QAAC,EAAE,IAAI,EAAE,mBAAmB,CAAC,gBAAgB,EAAE,EAA/C,EAAgD,CAAC,CAAC,CACzF,CAAC,IAAI,CACJG,mBAAS,CAAC,UAAC,EAAmB,EAAA;IAAjB,YAAA,IAAA,IAAI,GAAa,EAAA,CAAA,IAAb,EAAK,MAAM,GAAA,MAAA,CAAA,EAAA,EAAjB,QAAmB,CAAF,CAAA;IAC1B,YAAA,IAAI,IAAI,KAAK,mBAAmB,CAAC,gBAAgB,EAAE;IACjD,gBAAA,OAAOC,OAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;IAC1B,aAAA;IAED,YAAA,IAAM,UAAU,GAAG,IAAI,KAAK,mBAAmB,CAAC,QAAQ,CAAC;IACzD,YAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5B,OAAO,KAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAI,CAC1CJ,aAAG,CAAC,UAAA,QAAQ,EAAI,EAAA,OAAA,KAAI,CAAC,oBAAoB,CAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,CAAE,EAAA,EAAA,UAAU,EAAA,UAAA,IAAG,CAAtD,EAAsD,CAAC,EACvEK,kBAAQ,CAAC,YAAM,EAAA,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAA5B,EAA4B,CAAC,CAC7C,CAAC;IACJ,SAAC,CAAC,EACFC,qBAAW,EAAE,CACd,CAAC;SAS6E;IAJ/E,IAAA,MAAA,CAAA,cAAA,CAAW,cAAS,CAAA,SAAA,EAAA,WAAA,EAAA;IAHpB;;IAEG;IACH,QAAA,GAAA,EAAA,YAAA;gBACE,OAAO,IAAI,CAAC,aAAa,CAAC;aAC3B;;;IAAA,KAAA,CAAA,CAAA;IAID;;;;IAIG;QACH,cAAY,CAAA,SAAA,CAAA,YAAA,GAAZ,UAAa,MAAsC,EAAA;IACjD,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjC,CAAA;IAED;;;;;IAKG;QACH,cAAQ,CAAA,SAAA,CAAA,QAAA,GAAR,UAAS,IAAY,EAAA;IACnB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3B,CAAA;IAED;;;;;IAKG;IACH,IAAA,cAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,cAAsB,EAAE,OAAe,EAAA;YAArD,IAgBC,KAAA,GAAA,IAAA,CAAA;IAfC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC,oBAAoB;IAC7B,aAAA,0BAA0B,CACzB;IACE,YAAA,cAAc,EAAA,cAAA;IACd,YAAA,6BAA6B,EAAE,EAAE,OAAO,EAAA,OAAA,EAAE;IAC3C,SAAA,EACD,UAAU,CACX;IACA,aAAA,IAAI,CACHD,kBAAQ,CAAC,cAAM,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAA,CAAC,EAC3CE,aAAG,CAAC,YAAA;IACF,YAAA,KAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,CAAC;aACjD,CAAC,CACH,CAAC;SACL,CAAA;QAEO,cAA0B,CAAA,SAAA,CAAA,0BAAA,GAA1B,UAA2B,cAAsB,EAAA;YACvD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,EAAI,EAAA,OAAA,IAAI,CAAC,EAAE,KAAK,cAAc,CAAA,EAAA,CAAC,CAAC;gBAChF,IAAI,CAAC,QAAQ,GAAG;IACd,gBAAA,KAAK,EAAE,QAAQ;IACf,gBAAA,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;iBACrC,CAAC;IACF,YAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAC/B,SAAA;SACF,CAAA;QAEO,cAAoB,CAAA,SAAA,CAAA,oBAAA,GAApB,UAAqB,OAAmD,EAAA;;YAC9E,IAAM,MAAM,GAA6B,EAAE,CAAC;YAC5C,IAAI,OAAO,CAAC,UAAU,EAAE;IACtB,YAAA,IAAM,gBAAgB,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,KAAI,EAAE,CAAC;IACpD,YAAA,MAAM,CAAC,IAAI,CAAA,KAAA,CAAX,MAAM,EAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAS,gBAAgB,CAAE,CAAA,CAAA,CAAA;IAClC,SAAA;YAED,IAAI,CAAC,QAAQ,GAAG;IACd,YAAA,KAAK,yCAAM,MAAM,CAAA,CAAA,EAAA,MAAA,CAAK,OAAO,CAAC,KAAK,CAAC,CAAA;gBACpC,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM;aACvD,CAAC;YAEF,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB,CAAA;QAEO,cAAa,CAAA,SAAA,CAAA,aAAA,GAAb,UAAc,MAAqC,EAAA;IACzD,QAAA,OAAO,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,IAAI,CACxEP,aAAG,CAAC,UAAA,QAAQ,EAAA;gBACV,IAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBACzD,OAAO;IACL,gBAAA,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC;IAC9B,gBAAA,KAAK,EAAE,QAAQ,CAAC,IAAI,IAAI,EAAE;iBAC3B,CAAC;aACH,CAAC,CACH,CAAC;SACH,CAAA;QAEO,cAAmB,CAAA,SAAA,CAAA,mBAAA,GAAnB,UAAoB,MAAqC,EAAA;IAC/D;;IAEG;IACH,QAAA,IAAI,MAAM,CAAC,qBAAqB,IAAI,MAAM,CAAC,iBAAiB,EAAE;IAC5D,YAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;IACzC,SAAA;IAAM,aAAA;IACL,YAAA,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACnC,SAAA;SACF,CAAA;QAEO,cAAmB,CAAA,SAAA,CAAA,mBAAA,GAAnB,UAAoB,MAAqC,EAAA;YAAzD,IA+BP,KAAA,GAAA,IAAA,CAAA;IA9BS,QAAA,IAAA,qBAAqB,GAAyC,MAAM,CAAA,qBAA/C,EAAE,iBAAiB,GAAsB,MAAM,CAA5B,iBAAA,EAAE,IAAI,GAAgB,MAAM,CAAA,IAAtB,EAAK,MAAM,GAAK,MAAA,CAAA,MAAM,EAAtE,CAAA,uBAAA,EAAA,mBAAA,EAAA,MAAA,CAA6D,CAAS,CAAC;YAC7E,IAAM,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,QAAA,IAAI,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAM,CAAE,EAAA,EAAA,qBAAqB,EAAA,qBAAA,EAAE,IAAI,EAAE,WAAW,IAAG,CAAC;IACxG,QAAA,IAAI,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAM,CAAE,EAAA,EAAA,iBAAiB,EAAA,iBAAA,EAAE,IAAI,EAAE,WAAW,IAAG,CAAC;IAEhG,QAAA,IAAM,OAAO,GAAG,UAAC,UAAkB,EAAA,EAAK,OAAA,CAAC,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,IAAI,KAAI,CAAC,IAAI,WAAW,GAAG,UAAU,CAAA,EAAA,CAAC;IACvF,QAAA,IAAM,eAAe,GAAG,UAAC,IAAkC,EAAE,UAAkB,EAAA;gBAC7E,OAAO,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,GAAGI,OAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAA,UAAA,EAAE,CAAC,CAAC;IACpE,SAAC,CAAC;YAEF,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE;gBAClC,qBAAqB,GAAG,eAAe,CAAC,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;gBACvG,iBAAiB,GAAG,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IAC5F,SAAA;IAED,QAAA,OAAOL,kBAAa,CAAC,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC,CAAC,IAAI,CACnEC,aAAG,CAAC,UAAC,EAAuB,EAAA;IAAvB,YAAA,IAAA,EAAA,GAAA,aAAuB,EAAtB,SAAS,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,UAAU,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;gBACzB,IAAM,KAAK,GAAO,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAA,SAAS,CAAC,KAAK,WAAK,UAAU,CAAC,KAAK,CAAA,CAAC,CAAC;gBACxD,KAAI,CAAC,WAAW,GAAG;oBACjB,iBAAiB,EAAE,SAAS,CAAC,UAAU;oBACvC,qBAAqB,EAAE,UAAU,CAAC,UAAU;iBAC7C,CAAC;gBAEF,OAAO;;IAEL,gBAAA,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC;IACrE,gBAAA,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC;iBAChE,CAAC;aACH,CAAC,CACH,CAAC;SACH,CAAA;;;yJAhLU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA7B,eAAA,CAAA,wBAAA,EAAA,CAAA,EAAA,MAAA,EAAAD,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;6JAAd,cAAc,EAAA,CAAA,CAAA;sHAAd,cAAc,EAAA,UAAA,EAAA,CAAA;sBAD1BgB,aAAU;;;ACIX,QAAA,8BAAA,kBAAA,YAAA;IA0BE,IAAA,SAAA,8BAAA,CACmB,kBAAkC,EAC1C,aAA4B,EACpB,mBAAwC,EAC5B,mBAAyC,EAAA;IAHrD,QAAA,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAgB;IAC1C,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;IACpB,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;IAC5B,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAsB;IA7BxE,QAAA,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;IAEzB,QAAA,IAAY,CAAA,YAAA,GAAG,CAAC,CAAC;YACR,IAAA,CAAA,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;YAC1C,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;IAIpC,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAIW,YAAO,EAAE,CAAC;IAM1C;;IAEG;IACM,QAAA,IAAiB,CAAA,iBAAA,GAAG,KAAK,CAAC;SAa/B;IAXJ,IAAA,MAAA,CAAA,cAAA,CAAI,8BAAQ,CAAA,SAAA,EAAA,UAAA,EAAA;IAAZ,QAAA,GAAA,EAAA,YAAA;gBACE,OAAO,IAAI,CAAC,iBAAiB;IAC3B,kBAAE,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI;sBAC5C,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC;aACnD;;;IAAA,KAAA,CAAA,CAAA;IASD,IAAA,8BAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YAAA,IAOC,KAAA,GAAA,IAAA,CAAA;;IANC,QAAA,IAAI,CAAC,SAAS,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CACnCW,oBAAU,CAAC,UAAA,KAAK,EAAA;IACd,YAAA,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACnB,YAAA,OAAOJ,OAAE,CAAC,SAAS,CAAC,CAAC;aACtB,CAAC,CACH,CAAC;SACH,CAAA;IAED,IAAA,8BAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACrB,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SAC1B,CAAA;QAED,8BAAkB,CAAA,SAAA,CAAA,kBAAA,GAAlB,UAAmB,mBAA2C,EAAA;IAC5D,QAAA,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;SAChD,CAAA;QAED,8BAAe,CAAA,SAAA,CAAA,eAAA,GAAf,UAAgB,MAAsB,EAAA;YACpC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SAC3C,CAAA;QAED,8BAAsB,CAAA,SAAA,CAAA,sBAAA,GAAtB,UAAuB,SAAkB,EAAA;YAAzC,IAgCC,KAAA,GAAA,IAAA,CAAA;;IA/BC,QAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAC9B,QAAA,IAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;IAC7C,QAAA,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;YACrC,IAAI,CAAC,SAAS,EAAE;gBACd,OAAO;IACR,SAAA;IACD,QAAA,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;IACrC,QAAA,IAAI,WAAW,EAAE;gBACf,IAAM,cAAY,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,WAAW,CAAC,8BAA8B,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC;gBACpF,IAAM,aAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;IAEzD,YAAA,IAAI,CAAC,kBAAkB;qBACpB,aAAa,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,OAAO,CAAC;IAClD,iBAAA,IAAI,CAACK,mBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9B,iBAAA,SAAS,CACR,YAAA;IACE,gBAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;IAC1B,oBAAA,MAAM,EAAE,SAAS,CAAA/B,kBAAA,KAAAA,kBAAA,GAAA,oBAAA,CAAA,CAAA,8DAAA,CAAA,EAAA,CAAA,8DAA8D,CAAA,CAAA,CAAA,CAAA;IAC/E,oBAAA,OAAO,EAAE,aAAW;IAClB,0BAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,2EAAA,EAAA,qCAAA,CAAA,EAAA,CAAA,2EAA2E,EAAY,qCAAoC,KAAhD,cAAY,CAAA,GAChG,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,gEAAA,EAAA,qCAAA,CAAA,EAAA,CAAA,gEAAgE,EAAY,qCAAoC,CAAA,CAAA,CAAA,EAAhD,cAAY,CAAoC;IAC9H,iBAAA,CAAC,CAAC;IACL,aAAC,EACD,YAAA;IACE,gBAAA,KAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;IAC3B,oBAAA,MAAM,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,mEAAA,CAAA,EAAA,CAAA,mEAAmE,CAAA,CAAA,CAAA,CAAA;wBACpF,OAAO,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,yEAAA,EAAA,KAAA,CAAA,EAAA,CAAA,yEAAyE,EAAY,KAAI,CAAA,CAAA,CAAA,EAAhB,cAAY,CAAI;IAC5G,iBAAA,CAAC,CAAC;IACL,aAAC,CACF,CAAC;IACL,SAAA;SACF,CAAA;IAEO,IAAA,8BAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,UAAiB,OAAgB,EAAE,YAAiD,EAAA;IAC1F,QAAA,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CACvC,MAAA,CAAA,MAAA,CAAA,EAAA,WAAW,EAAE,IAAI,EACjB,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,uBAAuB,EAC/C,QAAQ,EAAE,OAAO,GAAG,SAAS,GAAG,OAAO,EACpC,EAAA,YAAY,EACf,CAAC;SACJ,CAAA;QAED,8BAAkB,CAAA,SAAA,CAAA,kBAAA,GAAlB,UAAmB,OAA2C,EAAA;YAC5D,OAAO,CAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,WAAW,MAAK,WAAW,CAAC;SAC7C,CAAA;IAED,IAAA,8BAAA,CAAA,SAAA,CAAA,cAAc,GAAd,YAAA;IACE,QAAA,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;SACtC,CAAA;QAED,8BAAe,CAAA,SAAA,CAAA,eAAA,GAAf,UAAgB,WAAmC,EAAA;IACjD,QAAA,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC;IACvC,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B,CAAA;QAED,8BAAa,CAAA,SAAA,CAAA,aAAA,GAAb,UAAc,OAA+B,EAAA;;YAC3C,CAAA,EAAA,GAAA,IAAI,CAAC,mBAAmB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,qBAAqB,CAAC,OAAO,CAAC,CAAC;SAC1D,CAAA;;;yKAlHU,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAgC,cAAA,EAAA,EAAA,EAAA,KAAA,EAAApB,uDAAA,EAAA,EAAA,EAAA,KAAA,EAAAX,eAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAgC,oBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAAzC,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA9B,mBAAA,8BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,8BAA8B,yJCjB3C,wzEA4DA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA0C,6BAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,YAAA,EAAA,SAAA,EAAA,cAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA9B,aAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,WAAA,EAAA,eAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA+B,kDAAA,EAAA,QAAA,EAAA,kDAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,gCAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAtB,eAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,aAAA,EAAA,cAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAuB,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAA,eAAA,CAAA,SAAA,EAAA,EAAA,eAAA,EAAA7C,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHD3Ca,8BAA8B,EAAA,UAAA,EAAA,CAAA;sBAL1CG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,4BAA4B;IACtC,oBAAA,WAAW,EAAE,wCAAwC;wBACrD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD,CAAA;;;kCA+BIa,WAAQ;;6BAhBF,SAAS,EAAA,CAAA;0BAAjBZ,QAAK;oBAIG,iBAAiB,EAAA,CAAA;0BAAzBA,QAAK;;;;AEjBR,QAAA,mDAAA,kBAAA,YAAA;IAIE,IAAA,SAAA,mDAAA,CAA6B,aAAsE,EAAA;IAAtE,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAyD;SAAI;IAHvG,IAAA,MAAA,CAAA,cAAA,CAAI,mDAAK,CAAA,SAAA,EAAA,OAAA,EAAA;IAAT,QAAA,GAAA,EAAA,YAAA;gBACE,OAAO,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,6CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,6CAA8C,EAA+B,EAAE,CAAjC,CAAA,CAAA,EAAA,IAAI,CAAC,aAAa,CAAC,YAAY,CAAG,CAAA;aACjG;;;IAAA,KAAA,CAAA,CAAA;;;8LAHU,mDAAmD,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAyC,uDAAA,EAAA,CAAA,EAAA,MAAA,EAAA9C,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAnD,mBAAA,mDAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mDAAmD,EAZpD,QAAA,EAAA,oDAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,QAAA,EAAA,oUAUT,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAE,eAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAO,eAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,OAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;sHAEU,mDAAmD,EAAA,UAAA,EAAA,CAAA;sBAd/DN,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,oDAAoD;IAC9D,oBAAA,QAAQ,EAAE,oUAUT;qBACF,CAAA;;;;ACbD,QAAA,oDAAA,kBAAA,YAAA;QACE,SAA6B,oDAAA,CAAA,MAAc,EAAmB,KAAqB,EAAA;IAAtD,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;IAAmB,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAAgB;SAAI;IACvF;;IAEG;QACH,oDAAiB,CAAA,SAAA,CAAA,iBAAA,GAAjB,UAAkB,MAAyB,EAAA;IACzC,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAI,MAAA,CAAA,MAAA,CAAA,EAAA,UAAU,EAAE,IAAI,CAAC,KAAK,EAAK,GAAC,MAAM,IAAI,EAAE,EAAC,CAAG,CAAC;SAClF,CAAA;IACD;;IAEG;QACH,oDAAkB,CAAA,SAAA,CAAA,kBAAA,GAAlB,UAAmB,MAAyB,EAAA;IAC1C,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAI,MAAA,CAAA,MAAA,CAAA,EAAA,UAAU,EAAE,IAAI,CAAC,KAAK,EAAK,GAAC,MAAM,IAAI,EAAE,EAAC,CAAG,CAAC;SACnF,CAAA;IACD;;IAEG;IACH,IAAA,oDAAA,CAAA,SAAA,CAAA,kBAAkB,GAAlB,YAAA;IACE,QAAA,IAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjD,QAAA,OAAO,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;SACtE,CAAA;;;+LApBU,oDAAoD,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAF,eAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,eAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAAD,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;mMAApD,oDAAoD,EAAA,CAAA,CAAA;sHAApD,oDAAoD,EAAA,UAAA,EAAA,CAAA;sBADhEgB,aAAU;;;ACeX,QAAA,4BAAA,kBAAA,YAAA;QAWE,SAA6B,4BAAA,CAAA,WAA2B,EAAmB,MAAqB,EAAA;IAAnE,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAgB;IAAmB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAe;IAVvF,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAClDc,aAAG,CACD,UAAA,OAAO,EACL,EAAA,OAAA,OAAO,IAAI;IACT,YAAA,KAAK,EAAE,kCAAkC,CAAC,OAAO,CAAC,KAAK,CAAC;gBACxD,UAAU,EAAE,OAAO,CAAC,UAAU;aAC/B,CAHD,EAGC,CACJ,CACiD,CAAC;SAE+C;IAEpG,IAAA,4BAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YACE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;SACjE,CAAA;;;uKAfU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAU,cAAA,EAAA,EAAA,EAAA,KAAA,EAAApB,uDAAA,EAAA,CAAA,EAAA,MAAA,EAAApB,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA5B,mBAAA,4BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,4BAA4B,EAF5B,QAAA,EAAA,0BAAA,EAAA,SAAA,EAAA,CAAC,cAAc,CAAC,EANjB,QAAA,EAAAA,aAAA,EAAA,QAAA,EAAA,+KAIT,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA+C,8BAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA/C,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHAIU,4BAA4B,EAAA,UAAA,EAAA,CAAA;sBAVxCG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,0BAA0B;IACpC,oBAAA,QAAQ,EAAE,+KAIT;wBACD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,SAAS,EAAE,CAAC,cAAc,CAAC;qBAC5B,CAAA;;;ACTD,QAAA,mDAAA,kBAAA,YAAA;QAGE,SACmB,mDAAA,CAAA,iBAAuE,EACvE,KAAqB,EAAA;IADrB,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAsD;IACvE,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAAgB;IAJxC,QAAA,IAAmB,CAAA,mBAAA,GAAG,CAAC,CAAC;SAKpB;IAEJ,IAAA,mDAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YACE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC;SACxE,CAAA;QAED,mDAAW,CAAA,SAAA,CAAA,WAAA,GAAX,UAAY,QAAe,EAAA;YACzB,IAAI,QAAQ,KAAK,CAAC,EAAE;IAClB,YAAA,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACvE,SAAA;IAAM,aAAA;IACL,YAAA,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACtE,SAAA;SACF,CAAA;;;8LAlBU,mDAAmD,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA4C,oDAAA,EAAA,EAAA,EAAA,KAAA,EAAA9C,eAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAAF,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAnD,mBAAA,mDAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mDAAmD,sGCRhE,sZAUA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAS,eAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,YAAA,EAAA,QAAA,EAAA,WAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAP,eAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,OAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;sHDFa,mDAAmD,EAAA,UAAA,EAAA,CAAA;sBAJ/DC,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,qDAAqD;IAC/D,oBAAA,WAAW,EAAE,iEAAiE;qBAC/E,CAAA;;;AEWD,QAAA,6BAAA,kBAAA,YAAA;QAWE,SAA6B,6BAAA,CAAA,WAA2B,EAAmB,MAAqB,EAAA;IAAnE,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAgB;IAAmB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAe;IAVvF,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAClD2B,aAAG,CACD,UAAA,OAAO,EACL,EAAA,OAAA,OAAO,IAAI;IACT,YAAA,KAAK,EAAE,kCAAkC,CAAC,OAAO,CAAC,KAAK,CAAC;gBACxD,UAAU,EAAE,OAAO,CAAC,UAAU;aAC/B,CAHD,EAGC,CACJ,CACiD,CAAC;SAE+C;IAEpG,IAAA,6BAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YACE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;SAClE,CAAA;;;wKAfU,6BAA6B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAU,cAAA,EAAA,EAAA,EAAA,KAAA,EAAApB,uDAAA,EAAA,CAAA,EAAA,MAAA,EAAApB,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA7B,mBAAA,6BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,6BAA6B,EAF7B,QAAA,EAAA,2BAAA,EAAA,SAAA,EAAA,CAAC,cAAc,CAAC,EANjB,QAAA,EAAAA,aAAA,EAAA,QAAA,EAAA,iJAIT,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA+C,8BAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA/C,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHAIU,6BAA6B,EAAA,UAAA,EAAA,CAAA;sBAVzCG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,2BAA2B;IACrC,oBAAA,QAAQ,EAAE,iJAIT;wBACD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,SAAS,EAAE,CAAC,cAAc,CAAC;qBAC5B,CAAA;;;ICcD,IAAM,YAAY,GAAU;IAC1B,IAAA,IAAI,EAAE,EAAE;IACR,IAAA,SAAS,EAAE,mDAAmD;IAC9D,IAAA,QAAQ,EAAE;IACR,QAAA;IACE,YAAA,IAAI,EAAE,EAAE;IACR,YAAA,SAAS,EAAE,6BAA6B;IACzC,SAAA;IACF,KAAA;KACF,CAAC;IAEF,IAAM,UAAU,GAAG;QACjB,mDAAmD;QACnD,6BAA6B;QAC7B,4BAA4B;QAC5B,mDAAmD;QACnD,8BAA8B;QAC9B,6BAA6B;QAC7B,kCAAkC;QAClC,6BAA6B;QAC7B,gCAAgC;QAChC,oCAAoC;QACpC,kDAAkD;KACnD,CAAC;IAEF,IAAM,SAAS,GAAG;QAChB6C,cAAS;QACTC,eAAU;QACVC,eAAY;QACZC,qBAAgB;QAChBC,qBAAgB;QAChBC,yBAAsB;QACtBC,cAAW;QACXC,eAAY;QACZC,iBAAY;QACZC,0BAAuB;QACvBC,gBAAa;QACbC,iBAAc;QACdC,cAAW;KACZ,CAAC;AAoBF,QAAA,gDAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,gDAAA,GAAA;;QACS,gDAAO,CAAA,OAAA,GAAd,UACE,IAAoE,EAAA;IAApE,QAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAA+C,KAAK,EAAE,YAAY,EAAE,CAAA,EAAA;YAEpE,OAAO;IACL,YAAA,QAAQ,EAAE,gDAAgD;gBAC1D,SAAS,EAAE,CAACC,kBAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACzC,CAAC;SACH,CAAA;;;2LARU,gDAAgD,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA9D,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;IAAhD,mBAAA,gDAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,gDAAgD,iBA/C3D,mDAAmD;YACnD,6BAA6B;YAC7B,4BAA4B;YAC5B,mDAAmD;YACnD,8BAA8B;YAC9B,6BAA6B;YAC7B,kCAAkC;YAClC,6BAA6B;YAC7B,gCAAgC;YAChC,oCAAoC;IACpC,QAAA,kDAAkD,aAsBhD+D,iBAAY;IACZ,QAAAC,iBAAY,sCAnBdf,cAAS;YACTC,eAAU;YACVC,eAAY;YACZC,qBAAgB;YAChBC,qBAAgB;YAChBC,yBAAsB;YACtBC,cAAW;YACXC,eAAY;YACZC,iBAAY;YACZC,0BAAuB;YACvBC,gBAAa;YACbC,iBAAc;IACd,QAAAC,cAAW,aAZXZ,cAAS;YACTC,eAAU;YACVC,eAAY;YACZC,qBAAgB;YAChBC,qBAAgB;YAChBC,yBAAsB;YACtBC,cAAW;YACXC,eAAY;YACZC,iBAAY;YACZC,0BAAuB;YACvBC,gBAAa;YACbC,iBAAc;IACd,QAAAC,cAAW,EA1BX,mDAAmD;YACnD,6BAA6B;YAC7B,4BAA4B;YAC5B,mDAAmD;YACnD,8BAA8B;YAC9B,6BAA6B;YAC7B,kCAAkC;YAClC,6BAA6B;YAC7B,gCAAgC;YAChC,oCAAoC;YACpC,kDAAkD,CAAA,EAAA,CAAA,CAAA;IAqCvC,mBAAA,gDAAA,CAAA,IAAA,GAAA7D,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,gDAAgD,EANhD,SAAA,EAAA;YACT,uDAAuD;YACvD,oDAAoD;IACrD,KAAA,EAbQ,OAAA,EAAA,CAAA,aAAA,CAAA;gBACP+D,iBAAY;gBACZC,iBAAY;gBACZC,uBAAkB,CAAC,UAAU,CAAC;IAC5B,gBAAA,QAAQ,EAAE;IACR,oBAAA,mDAAmD,EAAA,mDAAA;IACpD,iBAAA;iBACF,CAAC;IACC,SAAA,EAAA,MAAA,CAAA,SAAS,IAzBdhB,cAAS;YACTC,eAAU;YACVC,eAAY;YACZC,qBAAgB;YAChBC,qBAAgB;YAChBC,yBAAsB;YACtBC,cAAW;YACXC,eAAY;YACZC,iBAAY;YACZC,0BAAuB;YACvBC,gBAAa;YACbC,iBAAc;YACdC,cAAW,CAAA,EAAA,CAAA,CAAA;sHAqBA,gDAAgD,EAAA,UAAA,EAAA,CAAA;sBAlB5DK,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;wBACR,YAAY,EAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAM,UAAU,CAAC,CAAA;wBAC7B,OAAO,EAAA,aAAA,CAAA;4BACLH,iBAAY;4BACZC,iBAAY;4BACZC,uBAAkB,CAAC,UAAU,CAAC;IAC5B,4BAAA,QAAQ,EAAE;IACR,gCAAA,mDAAmD,EAAA,mDAAA;IACpD,6BAAA;6BACF,CAAC;IACC,qBAAA,EAAA,MAAA,CAAA,SAAS,CACb,CAAA;IACD,oBAAA,SAAS,EAAE;4BACT,uDAAuD;4BACvD,oDAAoD;IACrD,qBAAA;IACD,oBAAA,OAAO,EAAM,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAA,SAAS,CAAK,CAAA,EAAA,MAAA,CAAA,UAAU,CAAC,CAAA;qBACvC,CAAA;;;ICzFD;;ICAA;;IAEG;;;;;;;;;;;;;;;;;;;;;;;;;;"}