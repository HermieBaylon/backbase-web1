import { Status } from '@backbase/data-ang/payment-order';
import { P2P_PAYMENT_TYPE, P2P_REASON_CODES } from './constants';
export const mapPaymentOrdersToUpcomingPayments = (payments) => {
    return payments.reduce((acc, item) => {
        var _a;
        const executionDate = ((_a = item.schedule) === null || _a === void 0 ? void 0 : _a.nextExecutionDate) || item.requestedExecutionDate || '';
        const index = acc.findIndex(upcomingPayment => upcomingPayment.executionDate === executionDate);
        if (index <= -1) {
            acc.push({ executionDate, items: [item] });
        }
        else {
            acc[index].items.push(item);
        }
        return acc;
    }, []);
};
export const mapStatusText = (payment) => {
    const reasonCodeMap = {
        [P2P_REASON_CODES.pending]: { text: 'Pending', color: 'warning' },
        [P2P_REASON_CODES.inProcess]: {
            text: 'Accepted by recipient',
            color: '',
        },
    };
    switch (payment === null || payment === void 0 ? void 0 : payment.status) {
        case Status.ACCEPTED:
            return (payment === null || payment === void 0 ? void 0 : payment.paymentType) === P2P_PAYMENT_TYPE ? reasonCodeMap[(payment === null || payment === void 0 ? void 0 : payment.reasonCode) || ''] : undefined;
        case Status.REJECTED:
            return { text: 'Rejected', color: 'danger' };
        case Status.CANCELLED:
            return { text: 'Cancelled', color: 'info' };
        case Status.PROCESSED:
            return { text: 'Sent to recipient', color: '' };
        default:
            return undefined;
    }
};
//# sourceMappingURL=mappers.js.map