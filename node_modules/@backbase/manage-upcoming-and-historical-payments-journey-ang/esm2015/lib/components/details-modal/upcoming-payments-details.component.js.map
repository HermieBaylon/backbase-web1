{"version":3,"file":"upcoming-payments-details.component.js","sourceRoot":"","sources":["../../../../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/details-modal/upcoming-payments-details.component.ts","../../../../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/details-modal/upcoming-payments-details.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEhG,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAC7E,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;;;;;;;;;;AAQtD,MAAM,OAAO,gCAAgC;IAL7C;QAMW,mBAAc,GAAG,gBAAgB,CAAC;QAClC,mBAAc,GAAG,gBAAgB,CAAC;QAC3C;;;WAGG;QACM,WAAM,GAAG,KAAK,CAAC;QASxB;;WAEG;QACO,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAC7C;;WAEG;QACO,UAAK,GAAG,IAAI,YAAY,EAAE,CAAC;QACrC;;WAEG;QACO,gBAAW,GAAG,IAAI,YAAY,EAA0B,CAAC;KA0BpE;IAzBC;;OAEG;IACH,IAAI,UAAU;QACZ,MAAM,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/C,OAAO,CACL,UAAU,IAAI;YACZ,IAAI,EAAE,SAAS,CAAA,wCAAwC,UAAU,CAAC,IAAI,EAAE;YACxE,KAAK,EAAE,UAAU,CAAC,KAAK;SACxB,CACF,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;;iJApDU,gCAAgC;qIAAhC,gCAAgC,iOCX7C,+yHA+FA;4FDpFa,gCAAgC;kBAL5C,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,0CAA0C;oBACvD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAQU,MAAM;sBAAd,KAAK;gBAIG,OAAO;sBAAf,KAAK;gBAIG,MAAM;sBAAd,KAAK;gBAII,aAAa;sBAAtB,MAAM;gBAIG,KAAK;sBAAd,MAAM;gBAIG,WAAW;sBAApB,MAAM","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { P2P_PAYMENT_TYPE, P2P_REASON_CODES } from '../../helpers/constants';\nimport { mapStatusText } from '../../helpers/mappers';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfiguration } from '../../models/config.model';\n\n@Component({\n  selector: 'bb-upcoming-payments-details',\n  templateUrl: 'upcoming-payments-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingPaymentsDetailsComponent {\n  readonly p2pReasonCodes = P2P_REASON_CODES;\n  readonly p2pPaymentType = P2P_PAYMENT_TYPE;\n  /**\n   * Indicator for details dialog open state.\n   * Default value is `false`.\n   */\n  @Input() isOpen = false;\n  /**\n   * Selected payment data.\n   */\n  @Input() payment?: IdentifiedPaymentOrder;\n  /**\n   * Journey configs\n   */\n  @Input() config?: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration;\n  /**\n   * Changes will be triggered on cancelPayment event emit.\n   */\n  @Output() cancelPayment = new EventEmitter();\n  /**\n   * Changes will be triggered on close event emit.\n   */\n  @Output() close = new EventEmitter();\n  /**\n   * Changes will be triggered on editPayment event emit.\n   */\n  @Output() editPayment = new EventEmitter<IdentifiedPaymentOrder>();\n  /**\n   * Maps the status texts\n   */\n  get statusText(): { text: string; color: string } | undefined {\n    const statusText = mapStatusText(this.payment);\n    return (\n      statusText && {\n        text: $localize`:@@upcoming-payments-list-item-badge:${statusText.text}`,\n        color: statusText.color,\n      }\n    );\n  }\n\n  onCancelPayment() {\n    this.cancelPayment.emit();\n  }\n\n  onClose() {\n    this.isOpen = false;\n    this.close.emit();\n  }\n\n  onEditPayment() {\n    this.editPayment.emit(this.payment);\n  }\n}\n","<bb-modal-ui [isOpen]=\"isOpen\" (cancel)=\"onClose()\" (confirm)=\"onClose()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-upcoming-payments-details-header__wrapper bb-block--lg\">\n        <div class=\"bb-block--sm\">\n          <bb-icon-ui\n            [name]=\"payment?.paymentMode === 'RECURRING' ? 'repeat' : 'call-made'\"\n            [size]=\"'xl'\"\n            backgroundType=\"square\"\n            color=\"{{ payment?.paymentMode === 'RECURRING' ? 'secondary' : 'inactive' }}\"\n          ></bb-icon-ui>\n        </div>\n\n        <div\n          class=\"bb-text-bold bb-block--sm\"\n          *ngIf=\"payment?.transferTransactionInformation?.counterparty as counterparty\"\n        >\n          {{ counterparty?.role === 'DEBTOR' ? payment?.originator?.name : counterparty?.name }}\n        </div>\n\n        <div class=\"bb-heading-3 bb-block--sm\">\n          <bb-amount-ui\n            [currency]=\"payment?.transferTransactionInformation?.instructedAmount?.currencyCode\"\n            [amount]=\"payment?.transferTransactionInformation?.instructedAmount?.amount\"\n            [mapCurrency]=\"config?.uiComponentProps?.mapCurrency\"\n          ></bb-amount-ui>\n        </div>\n        <bb-badge-ui\n          *ngIf=\"statusText?.text && statusText?.color\"\n          color=\"{{ statusText?.color }}\"\n          text=\"{{ statusText?.text }}\"\n        ></bb-badge-ui>\n        <ng-container *ngIf=\"statusText?.text && !statusText?.color\">\n          <div class=\"bb-inline-stack\">\n            <span class=\"text-muted bb-stack__item bb-stack__item--spacing-sm\">{{ statusText?.text }}</span>\n            <span\n              bbTooltip=\"This payment canâ€™t be cancelled because it has already been accepted by the recipient.\"\n              i18n-bbTooltip=\"@@upcoming-payments-journey.payment-item.details-modal.tooltip\"\n              placement=\"bottom\"\n              triggers=\"hover\"\n            >\n              <bb-icon-ui name=\"info\" class=\"text-muted bb-stack\" size=\"sm\"></bb-icon-ui>\n            </span>\n          </div>\n        </ng-container>\n      </div>\n\n      <button\n        (click)=\"onClose()\"\n        type=\"button\"\n        class=\"bb-upcoming-payments-details__modal-header-button-close\"\n        aria-label=\"Close payment detail dialog\"\n        data-role=\"close-popup-btn\"\n        i18n-aria-label=\"Close payment detail dialog@@upcoming-payemnts.payment.details.header.close\"\n      >\n        <bb-icon-ui name=\"clear\" class=\"bb-stack\"></bb-icon-ui>\n      </button>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <bb-upcoming-payments-details-list [payment]=\"payment\" [config]=\"config\"></bb-upcoming-payments-details-list>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\" *ngIf=\"payment?.status === 'ACCEPTED'\">\n        <button\n          bbButton\n          *ngIf=\"!(payment?.reasonCode === p2pReasonCodes.inProcess)\"\n          class=\"bb-button-bar__button\"\n          (click)=\"onCancelPayment()\"\n          color=\"danger\"\n          data-role=\"cancel-payment-btn\"\n          i18n=\"Cancel payment|Cancel selected payment@@upcoming-payments.payment.details.action.cancel\"\n        >\n          Cancel payment\n        </button>\n\n        <button\n          bbButton\n          *ngIf=\"!(payment?.paymentType === p2pPaymentType)\"\n          (click)=\"onEditPayment()\"\n          class=\"bb-button-bar__button\"\n          i18n=\"Edit payment|Edit selected payment@@upcoming-payments.payment.details.action.edit\"\n          type=\"button\"\n        >\n          Edit\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n"]}