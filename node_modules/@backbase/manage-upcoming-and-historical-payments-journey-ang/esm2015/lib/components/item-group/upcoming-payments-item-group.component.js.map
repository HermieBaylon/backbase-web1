{"version":3,"file":"upcoming-payments-item-group.component.js","sourceRoot":"","sources":["../../../../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/item-group/upcoming-payments-item-group.component.ts","../../../../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/item-group/upcoming-payments-item-group.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEhG,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;;;;AAQtD,MAAM,OAAO,kCAAkC;IAL/C;QAUE;;WAEG;QACO,qBAAgB,GAAG,IAAI,YAAY,EAA0B,CAAC;QACxE;;WAEG;QACO,kBAAa,GAAG,IAAI,YAAY,EAA0B,CAAC;KAyBtE;IAvBC,kBAAkB,CAAC,WAAoC;QACrD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;IAED,gBAAgB,CAAC,CAAS,EAAE,OAA4C;QACtE,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,SAAS,CAAC;IAC9D,CAAC;IAED,mBAAmB;;QACjB,IAAI,MAAM,GAAG,MAAA,IAAI,CAAC,aAAa,0CAAE,aAAa,CAAC;QAE/C,IAAI,MAAM,KAAK,eAAe,EAAE,EAAE;YAChC,MAAM,GAAG,OAAO,CAAC;SAClB;aAAM,IAAI,MAAM,KAAK,eAAe,CAAC,CAAC,CAAC,EAAE;YACxC,MAAM,GAAG,UAAU,CAAC;SACrB;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,eAAe,CAAC,OAA+B;QAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;;mJApCU,kCAAkC;uIAAlC,kCAAkC,sMCV/C,6lCAiCA;4FDvBa,kCAAkC;kBAL9C,SAAS;mBAAC;oBACT,QAAQ,EAAE,iCAAiC;oBAC3C,WAAW,EAAE,+CAA+C;oBAC5D,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAKU,aAAa;sBAArB,KAAK;gBAII,gBAAgB;sBAAzB,MAAM;gBAIG,aAAa;sBAAtB,MAAM","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { getRelativeDate } from '../../helpers/utils';\nimport { UpcomingPaymentsGroup } from '../../models/payments.model';\n\n@Component({\n  selector: 'bb-upcoming-payments-item-group',\n  templateUrl: './upcoming-payments-item-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingPaymentsItemGroupComponent {\n  /**\n   * The upcoming payment.\n   */\n  @Input() paymentsGroup?: UpcomingPaymentsGroup;\n  /**\n   * Changes will be triggered on paymentItemClick event emit.\n   */\n  @Output() paymentItemClick = new EventEmitter<IdentifiedPaymentOrder>();\n  /**\n   *On cancel event emit.\n   */\n  @Output() cancelPayment = new EventEmitter<IdentifiedPaymentOrder>();\n\n  onPaymentItemClick(paymentItem?: IdentifiedPaymentOrder) {\n    this.paymentItemClick.emit(paymentItem);\n  }\n\n  trackPaymentItem(_: number, payment?: { requestedExecutionDate: string }) {\n    return payment ? payment.requestedExecutionDate : undefined;\n  }\n\n  formatExecutionDate(): string | undefined {\n    let result = this.paymentsGroup?.executionDate;\n\n    if (result === getRelativeDate()) {\n      result = 'today';\n    } else if (result === getRelativeDate(1)) {\n      result = 'tomorrow';\n    }\n\n    return result;\n  }\n\n  onCancelPayment(payment: IdentifiedPaymentOrder): void {\n    this.cancelPayment.emit(payment);\n  }\n}\n","<!-- Execution date -->\n<div\n  class=\"bb-stack bb-subheader bb-text-support bb-block bb-block--xl\"\n  i18n=\"@@upcoming-payments.group.header\"\n  data-role=\"group-item-label\"\n>\n  {formatExecutionDate(), select, today {Today} tomorrow {Tomorrow} other\n  {{{ paymentsGroup?.executionDate | date:'longDate'}}} }\n</div>\n<!-- group of payments -->\n<ng-container *ngIf=\"paymentsGroup?.items?.length > 0\">\n  <div class=\"bb-block bb-block--sm\">\n    <ul class=\"bb-list\">\n      <li\n        *ngFor=\"let payment of paymentsGroup?.items; trackBy: trackPaymentItem\"\n        class=\"bb-list__item bb-list__item--no-separator\"\n      >\n        <div\n          data-role=\"group-item-row\"\n          role=\"button\"\n          tabindex=\"0\"\n          (keydown.enter)=\"onPaymentItemClick(payment)\"\n          (click)=\"onPaymentItemClick(payment)\"\n        >\n          <bb-upcoming-payments-item\n            [payment]=\"payment\"\n            (cancelPayment)=\"onCancelPayment(payment)\"\n          ></bb-upcoming-payments-item>\n        </div>\n      </li>\n    </ul>\n  </div>\n</ng-container>\n"]}