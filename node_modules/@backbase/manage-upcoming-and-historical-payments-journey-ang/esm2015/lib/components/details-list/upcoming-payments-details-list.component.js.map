{"version":3,"file":"upcoming-payments-details-list.component.js","sourceRoot":"","sources":["../../../../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/details-list/upcoming-payments-details-list.component.ts","../../../../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/components/details-list/upcoming-payments-details-list.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAQ1E,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;;;;AAQ3D,MAAM,OAAO,oCAAoC;IALjD;QAMW,wBAAmB,GAA4B;YACtD,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClB,QAAQ,EAAE,CAAC;SACZ,CAAC;KAoCH;IA1BC,IAAW,sBAAsB;;QAC/B,OAAO,MAAA,IAAI,CAAC,OAAO,0CAAE,8BAA8B,CAAC;IACtD,CAAC;IACD,IAAI,iBAAiB;;QACnB,OAAO,CAAA,MAAA,MAAA,IAAI,CAAC,sBAAsB,0CAAE,YAAY,0CAAE,IAAI,MAAK,QAAQ;YACjE,CAAC,CAAC,MAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,8BAA8B,0CAAE,mBAAmB;YACnE,CAAC,CAAC,MAAA,IAAI,CAAC,OAAO,0CAAE,iBAAiB,CAAC;IACtC,CAAC;IACD,IAAI,mBAAmB;;QACrB,OAAO,CAAA,MAAA,MAAA,IAAI,CAAC,sBAAsB,0CAAE,YAAY,0CAAE,IAAI,MAAK,QAAQ;YACjE,CAAC,CAAC,MAAA,IAAI,CAAC,OAAO,0CAAE,iBAAiB;YACjC,CAAC,CAAC,MAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,8BAA8B,0CAAE,mBAAmB,CAAC;IACxE,CAAC;IACD,IAAI,eAAe;;QACjB,MAAM,IAAI,GAAG,MAAA,IAAI,CAAC,MAAM,0CAAE,oBAAoB,CAAC,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,WAAW,KAAI,EAAE,CAAC,CAAC;QAChF,OAAO,SAAS,CAAA,8DAA8D,IAAI,IAAI,EAAE,EAAE,CAAC;IAC7F,CAAC;IAED,IAAI,eAAe;;QACjB,MAAM,MAAM,GAAG,MAAA,MAAA,MAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,8BAA8B,0CAAE,mBAAmB,0CAAE,cAAc,0CAAE,UAAU,CAAC;QAC7G,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,IAAI,aAAa;;QACf,OAAO,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,WAAW,MAAK,gBAAgB,CAAC;IACxD,CAAC;;qJAxCU,oCAAoC;yIAApC,oCAAoC,2HChBjD,0/IAgHA;4FDhGa,oCAAoC;kBALhD,SAAS;mBAAC;oBACT,QAAQ,EAAE,mCAAmC;oBAC7C,WAAW,EAAE,+CAA+C;oBAC5D,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAUU,OAAO;sBAAf,KAAK;gBAIG,MAAM;sBAAd,KAAK","sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  CounterpartyAccount,\n  IdentifiedPaymentOrder,\n  IdentifiedTransaction as IdentifiedCreditTransaction,\n  OriginatorAccount,\n} from '@backbase/data-ang/payment-order';\nimport { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { P2P_PAYMENT_TYPE } from '../../helpers/constants';\nimport { ManageUpcomingAndHistoricalPaymentsJourneyConfiguration } from '../../models/config.model';\n\n@Component({\n  selector: 'bb-upcoming-payments-details-list',\n  templateUrl: 'upcoming-payments-details-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpcomingPaymentsDetailsListComponent {\n  readonly accountNumberFormat: PaymentCardNumberFormat = {\n    length: 36,\n    maskRange: [0, -4],\n    segments: 4,\n  };\n  /**\n   * Payment order details\n   */\n  @Input() payment?: IdentifiedPaymentOrder;\n  /**\n   * Journey configs\n   */\n  @Input() config?: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration;\n\n  public get transactionInformation(): IdentifiedCreditTransaction | undefined {\n    return this.payment?.transferTransactionInformation;\n  }\n  get originatorAccount(): CounterpartyAccount | OriginatorAccount | undefined {\n    return this.transactionInformation?.counterparty?.role === 'DEBTOR'\n      ? this.payment?.transferTransactionInformation?.counterpartyAccount\n      : this.payment?.originatorAccount;\n  }\n  get counterPartyAccount() {\n    return this.transactionInformation?.counterparty?.role === 'DEBTOR'\n      ? this.payment?.originatorAccount\n      : this.payment?.transferTransactionInformation?.counterpartyAccount;\n  }\n  get paymentTypeInfo(): string {\n    const text = this.config?.paymentTypeInfoTexts[this.payment?.paymentType || ''];\n    return $localize`:@@upcoming-and-history-payments-details.payment-type-info:${text || ''}`;\n  }\n\n  get isAccountNumber() {\n    const scheme = this.payment?.transferTransactionInformation?.counterpartyAccount?.identification?.schemeName;\n    return ['IBAN', 'BBAN'].includes(scheme || '');\n  }\n\n  get isP2PTransfer() {\n    return this.payment?.paymentType === P2P_PAYMENT_TYPE;\n  }\n}\n","<div class=\"break-word bb-block bb-block--lg\">\n  <div class=\"bb-text-bold\" i18n=\"Paying From Account@@upcoming-payments.payment.details.fromAccount.name\">\n    From account\n  </div>\n  <div>\n    {{\n      transactionInformation?.counterparty?.role === 'DEBTOR'\n        ? transactionInformation?.counterparty?.name\n        : payment?.originator?.name\n    }}\n  </div>\n  <div class=\"bb-block bb-block--md\" data-role=\"paying-from-account\">\n    <div class=\"contextual-alternates-off\" *ngIf=\"config?.maskAccounts; else unmaskedAccount\">\n      {{ originatorAccount?.identification?.identification | paymentCardNumber: accountNumberFormat | slice: -14 }}\n    </div>\n    <ng-template #unmaskedAccount>\n      {{ originatorAccount?.identification?.identification }}\n    </ng-template>\n  </div>\n\n  <div class=\"bb-text-bold\" i18n=\"Counter Party Name@@upcoming-payments.payment.details.toAccount.details\">\n    To recipient\n  </div>\n  <div data-role=\"counter-party-name\">\n    {{\n      transactionInformation?.counterparty?.role === 'DEBTOR'\n        ? payment?.originator?.name\n        : transactionInformation?.counterparty?.name\n    }}\n  </div>\n  <div class=\"bb-block bb-block--md\" data-role=\"counter-party-account\">\n    <div\n      class=\"contextual-alternates-off\"\n      *ngIf=\"config?.maskAccounts && isAccountNumber; else unmaskedCounterpartyTemp\"\n    >\n      {{ counterPartyAccount?.identification?.identification | paymentCardNumber: accountNumberFormat | slice: -14 }}\n    </div>\n    <ng-template #unmaskedCounterpartyTemp>\n      {{ counterPartyAccount?.identification?.identification }}\n    </ng-template>\n  </div>\n  <ng-container *ngIf=\"payment?.paymentSetupId && isP2PTransfer\">\n    <div\n      class=\"bb-text-bold\"\n      i18n=\"@@upcoming-payments.payment.details.toAccount.confirmation-number\"\n      data-role=\"payment-details-confirmation-number-title\"\n    >\n      Confirmation number\n    </div>\n    <div data-role=\"payment-details-confirmation-number\">\n      {{ payment?.paymentSetupId }}\n    </div>\n  </ng-container>\n</div>\n\n<hr class=\"bb-block bb-block--lg\" />\n\n<ng-container *ngIf=\"payment?.paymentMode !== 'RECURRING'; else recurringTemp\">\n  <div class=\"bb-text-bold\" i18n=\"Execution Date@@upcoming-payments.payment.details.executionDate\">Send date</div>\n  <div class=\"bb-block bb-block--md\" data-role=\"execution-date\">\n    {{ payment?.schedule?.nextExecutionDate || payment?.requestedExecutionDate | date: 'longDate' }}\n  </div>\n</ng-container>\n\n<ng-template #recurringTemp>\n  <div class=\"bb-text-bold\" i18n=\"Start Date@@upcoming-payments.payment.details.schedule.startDate\">Start date</div>\n  <div class=\"bb-block bb-block--md\" data-role=\"start-date\">\n    {{ payment?.schedule?.startDate | date: 'longDate' }}\n  </div>\n\n  <ng-container *ngIf=\"payment?.schedule?.endDate\">\n    <div class=\"bb-text-bold\" i18n=\"End Date@@upcoming-payments.payment.details.schedule.endDate\">End date</div>\n    <div class=\"bb-block bb-block--md\" data-role=\"end-date\">\n      {{ payment?.schedule?.endDate | date: 'longDate' }}\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"payment?.schedule?.transferFrequency\">\n    <div class=\"bb-text-bold\" i18n=\"Recurring Frequency@@upcoming-payments.payment.details.schedule.transferFrequency\">\n      Frequency\n    </div>\n    <div class=\"bb-block bb-block--md\" data-role=\"recurring-frequency\">\n      {{ payment?.schedule?.transferFrequency | titlecase }}\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"payment?.schedule?.repeat\">\n    <div class=\"bb-text-bold\" i18n=\"Number of Occurrences@@upcoming-payments.payment.details.schedule.repeat\">\n      Number of occurrences\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      {{ payment?.schedule?.repeat }}\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-container *ngIf=\"transactionInformation?.remittanceInformation\">\n  <div class=\"bb-text-bold\" i18n=\"Description@@upcoming-payments.payment.details.remittanceInformation.content\">\n    Description\n  </div>\n  <div class=\"bb-block bb-block--md break-word\" data-role=\"description\">\n    {{ transactionInformation?.remittanceInformation?.content }}\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"paymentTypeInfo\">\n  <hr class=\"bb-block bb-block--lg\" />\n  <div class=\"bb-text-bold\" i18n=\"@@upcoming-payments.payment.details.payment-type\">Payment Type</div>\n  <div class=\"bb-block bb-block--md break-word\">\n    {{ paymentTypeInfo }}\n  </div>\n</ng-container>\n"]}