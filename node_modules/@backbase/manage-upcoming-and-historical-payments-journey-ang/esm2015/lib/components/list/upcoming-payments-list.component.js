import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../item-group/upcoming-payments-item-group.component";
import * as i2 from "@backbase/ui-ang/load-button";
import * as i3 from "@backbase/ui-ang/empty-state";
import * as i4 from "@angular/common";
export class UpcomingPaymentsListComponent {
    constructor() {
        /**
         * The upcoming payment list.
         */
        this.upcomingPayments = [];
        /**
         * Total count for payment.
         * Default value is `0`.
         */
        this.totalCount = 0;
        /**
         * Indicator for load more loading state.
         * Default value is `false`.
         */
        this.loading = false;
        /**
         * From parameter for load more payments request.
         * Default value is `0`.
         */
        this.loadMoreFrom = 0;
        /**
         * Size parameter for load more payments request.
         * Default value is `0`.
         */
        this.loadMoreSize = 0;
        /**
         * changes will be triggered on paymentItemClick event emit.
         */
        this.paymentItemClick = new EventEmitter();
        /**
         * changes will be triggered on loadMoreParam event emit.
         */
        this.loadMoreParam = new EventEmitter();
        /**
         *On cancel event emit.
         */
        this.cancelPayment = new EventEmitter();
    }
    loadMoreParamChange(event) {
        this.loadMoreFrom = event.from;
        this.loadMoreParam.emit(event);
    }
    onPaymentItemClick(paymentItem) {
        this.paymentItemClick.emit(paymentItem);
    }
    trackPaymentsGroup(_, paymentsGroup) {
        return paymentsGroup ? paymentsGroup.executionDate : undefined;
    }
    onCancelPayment(payment) {
        this.cancelPayment.emit(payment);
    }
    get hasMore() {
        const currentCount = this.loadMoreFrom * this.loadMoreSize + this.loadMoreSize;
        return currentCount < this.totalCount;
    }
}
/** @nocollapse */ UpcomingPaymentsListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UpcomingPaymentsListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ UpcomingPaymentsListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: UpcomingPaymentsListComponent, selector: "bb-upcoming-payments-list", inputs: { upcomingPayments: "upcomingPayments", totalCount: "totalCount", loading: "loading", loadMoreFrom: "loadMoreFrom", loadMoreSize: "loadMoreSize" }, outputs: { paymentItemClick: "paymentItemClick", loadMoreParam: "loadMoreParam", cancelPayment: "cancelPayment" }, ngImport: i0, template: "<ng-container *ngIf=\"upcomingPayments && upcomingPayments?.length > 0; else emptyState\">\n  <div class=\"bb-list bb-block bb-block--xl\">\n    <div class=\"bb-list__item\" *ngFor=\"let paymentsGroup of upcomingPayments; trackBy: trackPaymentsGroup\">\n      <bb-upcoming-payments-item-group\n        (paymentItemClick)=\"onPaymentItemClick($event)\"\n        [paymentsGroup]=\"paymentsGroup\"\n        (cancelPayment)=\"onCancelPayment($event)\"\n        data-role=\"upcoming-payment-group-item\"\n      ></bb-upcoming-payments-item-group>\n    </div>\n  </div>\n  <div class=\"bb-text-align-center\" *ngIf=\"hasMore || loading\">\n    <bb-load-button-ui\n      color=\"link\"\n      i18n=\"Load more payment|Load more button for loading more payments@@upcoming-payments.load.more\"\n      data-role=\"load-more-btn\"\n      [isLoading]=\"loading\"\n      [size]=\"loadMoreSize\"\n      [from]=\"loadMoreFrom\"\n      [totalCount]=\"totalCount\"\n      (paramChange)=\"loadMoreParamChange($event)\"\n    >\n      Load more\n    </bb-load-button-ui>\n  </div>\n</ng-container>\n<ng-template #emptyState>\n  <div class=\"bb-state-container\">\n    <bb-empty-state-ui\n      title=\"No Payments\"\n      i18n-title=\"@@upcoming-payments.no.payments.title\"\n      subtitle=\"You do not have any payments to be displayed.\"\n      i18n-subtitle=\"@@upcoming-payments.no.payments.subTitle\"\n      iconSize=\"xl\"\n      iconModifier=\"loans\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n", components: [{ type: i1.UpcomingPaymentsItemGroupComponent, selector: "bb-upcoming-payments-item-group", inputs: ["paymentsGroup"], outputs: ["paymentItemClick", "cancelPayment"] }, { type: i2.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i3.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UpcomingPaymentsListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-upcoming-payments-list',
                    templateUrl: 'upcoming-payments-list.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { upcomingPayments: [{
                type: Input
            }], totalCount: [{
                type: Input
            }], loading: [{
                type: Input
            }], loadMoreFrom: [{
                type: Input
            }], loadMoreSize: [{
                type: Input
            }], paymentItemClick: [{
                type: Output
            }], loadMoreParam: [{
                type: Output
            }], cancelPayment: [{
                type: Output
            }] } });
//# sourceMappingURL=upcoming-payments-list.component.js.map