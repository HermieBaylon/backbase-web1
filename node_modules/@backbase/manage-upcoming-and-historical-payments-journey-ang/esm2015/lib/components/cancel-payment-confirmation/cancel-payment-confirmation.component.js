import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/modal";
import * as i2 from "@backbase/ui-ang/button";
export class UpcomingPaymentsCancelPaymentConfirmationComponent {
    constructor() {
        this.modelOptions = {
            backdrop: 'static',
            keyboard: false,
        };
        /**
         * Indicator for confirmation dialog open state.
         * Default value is `false`.
         */
        this.isOpen = false;
        /**
         * Indicator for recurring payment state.
         * Default value is `false`.
         */
        this.isRecurring = false;
        /**
         * Changes will be triggered on keepPayment event emit.
         */
        this.keepPayment = new EventEmitter();
        /**
         * Changes will be triggered on cancelPayment event emit.
         */
        this.cancelPayment = new EventEmitter();
    }
    onKeepPaymentClick() {
        this.keepPayment.emit();
    }
    onCancelPaymentClick() {
        this.cancelPayment.emit();
    }
}
/** @nocollapse */ UpcomingPaymentsCancelPaymentConfirmationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UpcomingPaymentsCancelPaymentConfirmationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ UpcomingPaymentsCancelPaymentConfirmationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: UpcomingPaymentsCancelPaymentConfirmationComponent, selector: "bb-upcoming-payments-cancel-payment-confirmation", inputs: { isOpen: "isOpen", isRecurring: "isRecurring" }, outputs: { keepPayment: "keepPayment", cancelPayment: "cancelPayment" }, ngImport: i0, template: "<bb-modal-ui [isOpen]=\"isOpen\" [modalOptions]=\"modelOptions\">\n  <bb-modal-header-ui data-role=\"cancel-payment-confirmation-header\">\n    <ng-template bbCustomModalHeader>\n      <h2 i18n=\"Cancel payment|Dialog header@@upcoming-payments.recurring.confirm.dialog.header\">\n        {isRecurring, select, true {Cancel Recurring Payment?} other {Cancel Upcoming Payment?}}\n      </h2>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui data-role=\"cancel-payment-confirmation-body\">\n    <ng-template bbCustomModalBody>\n      <ng-container\n        i18n=\"\n          Confirmation message body|confirmation message for cancel payment\n          dialog@@upcoming-payments.confirm.dialog.body.message\"\n      >\n        {isRecurring, select, true {This recurring payment will be permanently cancelled.} other {This upcoming payment\n        will be permanently cancelled.}}\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui #footerRef data-role=\"cancel-payment-confirmation-footer\">\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          (click)=\"onCancelPaymentClick()\"\n          color=\"danger\"\n          data-role=\"cancel-payment-confirm-btn\"\n          i18n=\"Cancel payment|Request payment cancellation@@upcoming-payments.confirm.dialog.action.cancelPayment\"\n        >\n          Cancel payment\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          (click)=\"onKeepPaymentClick()\"\n          color=\"link\"\n          data-role=\"keep-payment-btn\"\n          i18n=\"\n            Keep payment|keep payment and close confirmation dialog@@upcoming-payments.confirm.dialog.action.keepPayment\"\n        >\n          Not now\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UpcomingPaymentsCancelPaymentConfirmationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-upcoming-payments-cancel-payment-confirmation',
                    templateUrl: 'cancel-payment-confirmation.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { isOpen: [{
                type: Input
            }], isRecurring: [{
                type: Input
            }], keepPayment: [{
                type: Output
            }], cancelPayment: [{
                type: Output
            }] } });
//# sourceMappingURL=cancel-payment-confirmation.component.js.map