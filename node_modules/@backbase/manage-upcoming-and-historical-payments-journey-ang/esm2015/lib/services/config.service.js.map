{"version":3,"file":"config.service.js","sourceRoot":"","sources":["../../../../../../libs/manage-upcoming-and-historical-payments-journey/src/lib/services/config.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAE7D,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAGL,4DAA4D,GAE7D,MAAM,wBAAwB,CAAC;;AAEhC,MAAM,cAAc,GAA4D;IAC9E,uBAAuB,EAAE,IAAI;IAC7B,YAAY,EAAE,KAAK;IACnB,qBAAqB,EAAE;QACrB,OAAO,EAAE,wBAAwB;QACjC,SAAS,EAAE,KAAK;QAChB,MAAM,EAAE,CAAC,UAAU,CAAC;QACpB,iBAAiB,EAAE,WAAW,EAAE;QAChC,qBAAqB,EAAE,WAAW,EAAE;QACpC,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,EAAE;KACT;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,wBAAwB;QACjC,SAAS,EAAE,MAAM;QACjB,MAAM,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,WAAW,CAAC;QAC9C,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,EAAE;KACT;IACD,oBAAoB,EAAE;QACpB,iBAAiB,EAAE,2BAA2B;QAC9C,kBAAkB,EAAE,kCAAkC;QACtD,YAAY,EAAE,kDAAkD;KACjE;IACD,YAAY,EAAE,qBAAqB;IACnC,gBAAgB,EAAE;QAChB,WAAW,EAAE,IAAI;KAClB;CACF,CAAC;AAGF,MAAM,OAAO,uDAAuD;IAGlE,YAGmB,MAA+D;QAA/D,WAAM,GAAN,MAAM,CAAyD;QAEhF,IAAI,CAAC,OAAO,mCAAQ,cAAc,GAAK,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAE,CAAC;IAC/D,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,IAAI,uBAAuB;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC;IAC9C,CAAC;IACD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;IACnC,CAAC;IACD,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;IAC3C,CAAC;IACD,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;IAC5C,CAAC;IACD,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;IAC3C,CAAC;IACD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;IACnC,CAAC;IACD,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;IACvC,CAAC;;wKAnCU,uDAAuD,kBAKxD,4DAA4D;4KAL3D,uDAAuD;4FAAvD,uDAAuD;kBADnE,UAAU;;0BAKN,QAAQ;;0BACR,MAAM;2BAAC,4DAA4D","sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\nimport { GetPaymentOrdersRequestParams } from '@backbase/data-ang/payment-order';\nimport { getDateOnly } from '../helpers/utils';\nimport {\n  BaseObject,\n  ManageUpcomingAndHistoricalPaymentsJourneyConfiguration,\n  ManageUpcomingAndHistoricalPaymentsJourneyConfigurationToken,\n  UiComponentProps,\n} from '../models/config.model';\n\nconst configDefaults: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration = {\n  notificationDismissTime: 3000,\n  maskAccounts: false,\n  upcomingPaymentParams: {\n    orderBy: 'requestedExecutionDate',\n    direction: 'ASC',\n    status: ['ACCEPTED'],\n    executionDateFrom: getDateOnly(),\n    nextExecutionDateFrom: getDateOnly(),\n    from: 0,\n    size: 50,\n  },\n  historyPaymentParams: {\n    orderBy: 'requestedExecutionDate',\n    direction: 'DESC',\n    status: ['CANCELLED', 'REJECTED', 'PROCESSED'],\n    from: 0,\n    size: 50,\n  },\n  paymentTypeInfoTexts: {\n    INTERNAL_TRANSFER: 'Internal account transfer',\n    INTRABANK_TRANSFER: 'Pay someone using account number',\n    P2P_TRANSFER: 'Pay someone using mobile number or email address',\n  },\n  journeyTitle: 'Scheduled Transfers',\n  uiComponentProps: {\n    mapCurrency: true,\n  },\n};\n\n@Injectable()\nexport class ManageUpcomingAndHistoricalPaymentsJourneyConfigService {\n  private _config: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration;\n\n  constructor(\n    @Optional()\n    @Inject(ManageUpcomingAndHistoricalPaymentsJourneyConfigurationToken)\n    private readonly config: ManageUpcomingAndHistoricalPaymentsJourneyConfiguration,\n  ) {\n    this._config = { ...configDefaults, ...(this.config || {}) };\n  }\n\n  get defaults(): ManageUpcomingAndHistoricalPaymentsJourneyConfiguration {\n    return configDefaults;\n  }\n\n  get notificationDismissTime(): number {\n    return this._config.notificationDismissTime;\n  }\n  get maskAccounts(): boolean {\n    return this._config.maskAccounts;\n  }\n  get historyPaymentParams(): GetPaymentOrdersRequestParams {\n    return this._config.historyPaymentParams;\n  }\n  get upcomingPaymentParams(): GetPaymentOrdersRequestParams {\n    return this._config.upcomingPaymentParams;\n  }\n  get paymentTypeInfoTexts(): BaseObject<string> {\n    return this._config.paymentTypeInfoTexts;\n  }\n  get journeyTitle(): string {\n    return this._config.journeyTitle;\n  }\n  get uiComponentProps(): UiComponentProps | undefined {\n    return this._config.uiComponentProps;\n  }\n}\n"]}