import { EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export declare class UpcomingPaymentsCancelPaymentConfirmationComponent {
    readonly modelOptions: {
        backdrop: string;
        keyboard: boolean;
    };
    /**
     * Indicator for confirmation dialog open state.
     * Default value is `false`.
     */
    isOpen: boolean;
    /**
     * Indicator for recurring payment state.
     * Default value is `false`.
     */
    isRecurring: boolean;
    /**
     * Changes will be triggered on keepPayment event emit.
     */
    keepPayment: EventEmitter<any>;
    /**
     * Changes will be triggered on cancelPayment event emit.
     */
    cancelPayment: EventEmitter<any>;
    onKeepPaymentClick(): void;
    onCancelPaymentClick(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UpcomingPaymentsCancelPaymentConfirmationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UpcomingPaymentsCancelPaymentConfirmationComponent, "bb-upcoming-payments-cancel-payment-confirmation", never, { "isOpen": "isOpen"; "isRecurring": "isRecurring"; }, { "keepPayment": "keepPayment"; "cancelPayment": "cancelPayment"; }, never, never>;
}
