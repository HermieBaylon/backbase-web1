import { EventEmitter } from '@angular/core';
import { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';
import { UpcomingPaymentsGroup } from '../../models/payments.model';
import * as i0 from "@angular/core";
export declare class UpcomingPaymentsItemGroupComponent {
    /**
     * The upcoming payment.
     */
    paymentsGroup?: UpcomingPaymentsGroup;
    /**
     * Changes will be triggered on paymentItemClick event emit.
     */
    paymentItemClick: EventEmitter<IdentifiedPaymentOrder>;
    /**
     *On cancel event emit.
     */
    cancelPayment: EventEmitter<IdentifiedPaymentOrder>;
    onPaymentItemClick(paymentItem?: IdentifiedPaymentOrder): void;
    trackPaymentItem(_: number, payment?: {
        requestedExecutionDate: string;
    }): string | undefined;
    formatExecutionDate(): string | undefined;
    onCancelPayment(payment: IdentifiedPaymentOrder): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UpcomingPaymentsItemGroupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UpcomingPaymentsItemGroupComponent, "bb-upcoming-payments-item-group", never, { "paymentsGroup": "paymentsGroup"; }, { "paymentItemClick": "paymentItemClick"; "cancelPayment": "cancelPayment"; }, never, never>;
}
