{"version":3,"file":"backbase-positive-pay-check-v1-client-ang.umd.js","sources":["../../model/direction.ts","../../model/exceptionCheckDecisionRequest.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/positivePayChecks.service.ts","../../api/positivePayChecks.service.mocks.ts"],"sourcesContent":["/**\n * Positive Pay Checks Client\n * Operations to manage checks in Positive Pay system.\n *\n * The version of the OpenAPI document: 1.10.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Direction in which the results are ordered Default value is DESC. \n */\nexport type Direction = 'ASC' | 'DESC';\n\nexport const Direction = {\n    ASC: 'ASC' as Direction,\n    DESC: 'DESC' as Direction\n};\n\n","/**\n * Positive Pay Checks Client\n * Operations to manage checks in Positive Pay system.\n *\n * The version of the OpenAPI document: 1.10.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Exception check decision request.\n */\nexport interface ExceptionCheckDecisionRequest { \n    /**\n     * Exception check action type\n     */\n    [\"actionType\"]: ExceptionCheckDecisionRequest.ActionTypeEnum;\n    /**\n     * Rejection reason\n     */\n    [\"rejectionReason\"]?: string;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace ExceptionCheckDecisionRequest {\n    export type ActionTypeEnum = 'PAY' | 'REJECT';\n    export const ActionTypeEnum = {\n        PAY: 'PAY' as ActionTypeEnum,\n        REJECT: 'REJECT' as ActionTypeEnum\n    };\n}\n\n\n","import { InjectionToken } from '@angular/core';\n\nexport const POSITIVE_PAY_CHECK_BASE_PATH = new InjectionToken<string>('POSITIVE_PAY_CHECK_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface PositivePayCheckConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class PositivePayCheckConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: PositivePayCheckConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link PositivePayCheckConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link PositivePayCheckConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module PositivePayCheckConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { PositivePayCheckConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class PositivePayCheckApiModule {\n    public static forRoot(configurationFactory: () => PositivePayCheckConfiguration): ModuleWithProviders<PositivePayCheckApiModule> {\n        return {\n            ngModule: PositivePayCheckApiModule,\n            providers: [ { provide: PositivePayCheckConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: PositivePayCheckApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: PositivePayCheckConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('PositivePayCheckApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Positive Pay Checks Client\n * Operations to manage checks in Positive Pay system.\n *\n * The version of the OpenAPI document: 1.10.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { CountResponse } from '../model/models';\nimport { ExceptionCheckDecisionRequest } from '../model/models';\nimport { ExceptionCheckDetailsResponse } from '../model/models';\nimport { ExceptionCheckFilter } from '../model/models';\nimport { ExceptionCheckList } from '../model/models';\nimport { IssuedCheck } from '../model/models';\nimport { IssuedCheckFilter } from '../model/models';\nimport { IssuedCheckList } from '../model/models';\nimport { IssuedCheckSubmitRequest } from '../model/models';\nimport { ModelError } from '../model/models';\nimport { SettingList } from '../model/models';\nimport { StartFileUploadRequest } from '../model/models';\nimport { StartFileUploadResponse } from '../model/models';\n\nimport { POSITIVE_PAY_CHECK_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PositivePayCheckConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteCheckRequestParams {\n    /** ID of the check. */\n    [\"id\"]: string;\n}\n\nexport interface FilterChecksRequestParams {\n    [\"body\"]: IssuedCheckFilter;\n}\n\nexport interface FilterExceptionsRequestParams {\n    [\"body\"]: ExceptionCheckFilter;\n}\n\nexport interface GetExceptionDetailsRequestParams {\n    /** ID of the exception check. */\n    [\"id\"]: string;\n}\n\nexport interface ProcessExceptionDecisionRequestParams {\n    /** ID of the exception check. */\n    [\"id\"]: string;\n    [\"body\"]: ExceptionCheckDecisionRequest;\n}\n\nexport interface StartChecksFileUploadRequestParams {\n    [\"body\"]: StartFileUploadRequest;\n}\n\nexport interface SubmitCheckRequestParams {\n    [\"body\"]: IssuedCheckSubmitRequest;\n}\n\nexport interface UpdateSettingsRequestParams {\n    [\"body\"]: SettingList;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PositivePayChecksHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PositivePayCheckConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(POSITIVE_PAY_CHECK_BASE_PATH) basePath: string, @Optional() configuration: PositivePayCheckConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete issued check which are in Saved or Submitted statuses from Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteCheck(requestParameters: DeleteCheckRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete issued check which are in Saved or Submitted statuses from Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteCheck(requestParameters: DeleteCheckRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete issued check which are in Saved or Submitted statuses from Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteCheck(requestParameters: DeleteCheckRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete issued check which are in Saved or Submitted statuses from Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteCheck(requestParameters: DeleteCheckRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteCheck.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v1/checks/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteCheckUrl(requestParameters: DeleteCheckRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteCheck.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/checks/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Returns list of filtered checks which were submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterChecks(requestParameters: FilterChecksRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<IssuedCheckList>;\n    /**\n     * Returns list of filtered checks which were submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterChecks(requestParameters: FilterChecksRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<IssuedCheckList>>;\n    /**\n     * Returns list of filtered checks which were submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterChecks(requestParameters: FilterChecksRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<IssuedCheckList>>;\n    /**\n     * Returns list of filtered checks which were submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterChecks(requestParameters: FilterChecksRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling filterChecks.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<IssuedCheckList>(`${this.configuration.basePath}/client-api/v1/checks/filter`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public filterChecksUrl(requestParameters: FilterChecksRequestParams): string {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling filterChecks.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/checks/filter`;\n    }\n\n    /**\n     * Returns list of filtered exceptions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterExceptions(requestParameters: FilterExceptionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExceptionCheckList>;\n    /**\n     * Returns list of filtered exceptions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterExceptions(requestParameters: FilterExceptionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExceptionCheckList>>;\n    /**\n     * Returns list of filtered exceptions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterExceptions(requestParameters: FilterExceptionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExceptionCheckList>>;\n    /**\n     * Returns list of filtered exceptions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterExceptions(requestParameters: FilterExceptionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling filterExceptions.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ExceptionCheckList>(`${this.configuration.basePath}/client-api/v1/exceptions/filter`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public filterExceptionsUrl(requestParameters: FilterExceptionsRequestParams): string {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling filterExceptions.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/exceptions/filter`;\n    }\n\n    /**\n     * Counts items in Positive Pay check.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCounts(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CountResponse>;\n    /**\n     * Counts items in Positive Pay check.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCounts(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CountResponse>>;\n    /**\n     * Counts items in Positive Pay check.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCounts(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CountResponse>>;\n    /**\n     * Counts items in Positive Pay check.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCounts(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CountResponse>(`${this.configuration.basePath}/client-api/v1/counts`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCountsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/counts`;\n    }\n\n    /**\n     * Returns exception check details and associated issued check details.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExceptionDetails(requestParameters: GetExceptionDetailsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExceptionCheckDetailsResponse>;\n    /**\n     * Returns exception check details and associated issued check details.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExceptionDetails(requestParameters: GetExceptionDetailsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExceptionCheckDetailsResponse>>;\n    /**\n     * Returns exception check details and associated issued check details.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExceptionDetails(requestParameters: GetExceptionDetailsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExceptionCheckDetailsResponse>>;\n    /**\n     * Returns exception check details and associated issued check details.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExceptionDetails(requestParameters: GetExceptionDetailsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getExceptionDetails.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ExceptionCheckDetailsResponse>(`${this.configuration.basePath}/client-api/v1/exceptions/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getExceptionDetailsUrl(requestParameters: GetExceptionDetailsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getExceptionDetails.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/exceptions/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Returns list of settings in Positive Pay.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSettings(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<SettingList>;\n    /**\n     * Returns list of settings in Positive Pay.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSettings(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<SettingList>>;\n    /**\n     * Returns list of settings in Positive Pay.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSettings(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<SettingList>>;\n    /**\n     * Returns list of settings in Positive Pay.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSettings(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<SettingList>(`${this.configuration.basePath}/client-api/v1/settings`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getSettingsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/settings`;\n    }\n\n    /**\n     * Process exception check decisioning - pay or reject check payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public processExceptionDecision(requestParameters: ProcessExceptionDecisionRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Process exception check decisioning - pay or reject check payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public processExceptionDecision(requestParameters: ProcessExceptionDecisionRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Process exception check decisioning - pay or reject check payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public processExceptionDecision(requestParameters: ProcessExceptionDecisionRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Process exception check decisioning - pay or reject check payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public processExceptionDecision(requestParameters: ProcessExceptionDecisionRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling processExceptionDecision.');\n        }\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling processExceptionDecision.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/client-api/v1/exceptions/${encodeURIComponent(String(_id))}`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public processExceptionDecisionUrl(requestParameters: ProcessExceptionDecisionRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling processExceptionDecision.');\n        }\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling processExceptionDecision.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/exceptions/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Preparation process of file upload to obtain an upload id which will be used in actual upload.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public startChecksFileUpload(requestParameters: StartChecksFileUploadRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<StartFileUploadResponse>;\n    /**\n     * Preparation process of file upload to obtain an upload id which will be used in actual upload.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public startChecksFileUpload(requestParameters: StartChecksFileUploadRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<StartFileUploadResponse>>;\n    /**\n     * Preparation process of file upload to obtain an upload id which will be used in actual upload.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public startChecksFileUpload(requestParameters: StartChecksFileUploadRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<StartFileUploadResponse>>;\n    /**\n     * Preparation process of file upload to obtain an upload id which will be used in actual upload.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public startChecksFileUpload(requestParameters: StartChecksFileUploadRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling startChecksFileUpload.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<StartFileUploadResponse>(`${this.configuration.basePath}/client-api/v1/uploads/checks`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public startChecksFileUploadUrl(requestParameters: StartChecksFileUploadRequestParams): string {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling startChecksFileUpload.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/uploads/checks`;\n    }\n\n    /**\n     * Submit issued check to Positive Pay system\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitCheck(requestParameters: SubmitCheckRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<IssuedCheck>;\n    /**\n     * Submit issued check to Positive Pay system\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitCheck(requestParameters: SubmitCheckRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<IssuedCheck>>;\n    /**\n     * Submit issued check to Positive Pay system\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitCheck(requestParameters: SubmitCheckRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<IssuedCheck>>;\n    /**\n     * Submit issued check to Positive Pay system\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitCheck(requestParameters: SubmitCheckRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling submitCheck.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<IssuedCheck>(`${this.configuration.basePath}/client-api/v1/checks`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public submitCheckUrl(requestParameters: SubmitCheckRequestParams): string {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling submitCheck.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/checks`;\n    }\n\n    /**\n     * Updates settings in Positive Pay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateSettings(requestParameters: UpdateSettingsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Updates settings in Positive Pay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateSettings(requestParameters: UpdateSettingsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Updates settings in Positive Pay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateSettings(requestParameters: UpdateSettingsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Updates settings in Positive Pay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateSettings(requestParameters: UpdateSettingsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateSettings.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/client-api/v1/settings`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateSettingsUrl(requestParameters: UpdateSettingsRequestParams): string {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateSettings.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/settings`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/checks/{id} URL pattern\n*/\nexport const PositivePayChecksHttpServiceDeleteCheckMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/checks/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/checks/filter URL pattern\n*/\nexport const PositivePayChecksHttpServiceFilterChecksMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/checks/filter\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"checks\" : [ {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f31\",\n    \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n    \"payeeName\" : \"Sarah Lee\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"99.99\"\n    },\n    \"checkNumber\" : \"111456789123456789123456789111\",\n    \"issueDate\" : \"2020-11-01\",\n    \"voidCheck\" : false,\n    \"registrationDate\" : \"2005-10-21T11:50:23.000-05:00\",\n    \"issueStatus\" : \"SUBMITTED\"\n  }, {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\",\n    \"arrangementId\" : \"aa9d66ae-b927-4ac7-8799-c5a38a53ed24\",\n    \"payeeName\" : \" \",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"150.54\"\n    },\n    \"checkNumber\" : \"333456789123456789123456789333\",\n    \"issueDate\" : \"2020-11-01\",\n    \"voidCheck\" : true,\n    \"registrationDate\" : \"2009-09-20T15:42:20.000-05:00\",\n    \"issueStatus\" : \"SUBMITTED\"\n  }, {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f33\",\n    \"arrangementId\" : \"c3d62af-3r27-4ac7-8799-c5a38a596asf2\",\n    \"payeeName\" : \"Robin Green\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"CAD\",\n      \"amount\" : \"10.89\"\n    },\n    \"checkNumber\" : \"444456789123456789123456789444\",\n    \"issueDate\" : \"2020-11-01\",\n    \"voidCheck\" : false,\n    \"issueStatus\" : \"SAVED\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/exceptions/filter URL pattern\n*/\nexport const PositivePayChecksHttpServiceFilterExceptionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/exceptions/filter\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"exceptions\" : [ {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\",\n    \"checkNumber\" : \"111456789123456789123456789111\",\n    \"accountNumber\" : \"12312312312321213\",\n    \"issueDate\" : \"2020-11-01\",\n    \"payeeName\" : \"Robin Green\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"150.54\"\n    },\n    \"errors\" : [ \"Data mismatch\", \"Duplicate check\" ],\n    \"displayName\" : \"Current account\"\n  }, {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f44\",\n    \"checkNumber\" : \"111456789123456789123456789222\",\n    \"accountNumber\" : \"12312312312324444\",\n    \"issueDate\" : \"2021-01-05\",\n    \"payeeName\" : \"Robert Plant\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"120.00\"\n    },\n    \"errors\" : [ \"Already paid\" ],\n    \"displayName\" : \"Saving account\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/counts URL pattern\n*/\nexport const PositivePayChecksHttpServiceGetCountsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/counts\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"exceptionCount\" : 250\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/exceptions/{id} URL pattern\n*/\nexport const PositivePayChecksHttpServiceGetExceptionDetailsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/exceptions/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"exceptionCheck\" : {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\",\n    \"checkNumber\" : \"111456789123456789123456789111\",\n    \"accountNumber\" : \"12312312312321213\",\n    \"issueDate\" : \"2020-11-01\",\n    \"payeeName\" : \"Robin Green\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"150.54\"\n    },\n    \"errors\" : [ \"Data mismatch\", \"Duplicate check\" ],\n    \"checkDepositDate\" : \"2020-12-01T10:05:28Z\",\n    \"exceptionDate\" : \"2020-12-01T11:00:00Z\",\n    \"displayName\" : \"Payroll account for new hires\"\n  },\n  \"issuedCheck\" : {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f31\",\n    \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n    \"payeeName\" : \"Sarah Lee\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"99.99\"\n    },\n    \"checkNumber\" : \"111456789123456789123456789111\",\n    \"issueDate\" : \"2020-11-01\",\n    \"voidCheck\" : false,\n    \"registrationDate\" : \"2020-12-31T01:30:00.000-05:00\",\n    \"issueStatus\" : \"SAVED\",\n    \"displayName\" : \"Payroll account for new hires\",\n    \"userFullName\" : \"Jimmy Page\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/settings URL pattern\n*/\nexport const PositivePayChecksHttpServiceGetSettingsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/settings\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"settings\" : [ {\n    \"subscription\" : \"checks-positive-pay-with-payee-match\",\n    \"systemDecision\" : \"Reject\",\n    \"additions\" : {\n      \"costs-to-update\" : \"$1.50 ex. taxes\"\n    }\n  }, {\n    \"subscription\" : \"checks-positive-pay-without-payee-match\",\n    \"systemDecision\" : \"Pay\"\n  } ],\n  \"additions\" : {\n    \"settingId\" : \"1\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/exceptions/{id} URL pattern\n*/\nexport const PositivePayChecksHttpServiceProcessExceptionDecisionMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/exceptions/{id}\",\n        method: \"PATCH\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/uploads/checks URL pattern\n*/\nexport const PositivePayChecksHttpServiceStartChecksFileUploadMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/uploads/checks\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"uploadId\" : \"10\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/checks URL pattern\n*/\nexport const PositivePayChecksHttpServiceSubmitCheckMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/checks\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f31\",\n  \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n  \"payeeName\" : \"Sarah Lee\",\n  \"amountDetails\" : {\n    \"currencyCode\" : \"USD\",\n    \"amount\" : \"99.99\"\n  },\n  \"checkNumber\" : \"111456789123456789123456789111\",\n  \"issueDate\" : \"2020-11-01\",\n  \"voidCheck\" : false,\n  \"registrationDate\" : \"2020-12-31T01:30:00.000\",\n  \"issueStatus\" : \"SAVED\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/settings URL pattern\n*/\nexport const PositivePayChecksHttpServiceUpdateSettingsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/settings\",\n        method: \"PATCH\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const PositivePayChecksHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/checks/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/checks/filter\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"checks\" : [ {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f31\",\n    \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n    \"payeeName\" : \"Sarah Lee\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"99.99\"\n    },\n    \"checkNumber\" : \"111456789123456789123456789111\",\n    \"issueDate\" : \"2020-11-01\",\n    \"voidCheck\" : false,\n    \"registrationDate\" : \"2005-10-21T11:50:23.000-05:00\",\n    \"issueStatus\" : \"SUBMITTED\"\n  }, {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\",\n    \"arrangementId\" : \"aa9d66ae-b927-4ac7-8799-c5a38a53ed24\",\n    \"payeeName\" : \" \",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"150.54\"\n    },\n    \"checkNumber\" : \"333456789123456789123456789333\",\n    \"issueDate\" : \"2020-11-01\",\n    \"voidCheck\" : true,\n    \"registrationDate\" : \"2009-09-20T15:42:20.000-05:00\",\n    \"issueStatus\" : \"SUBMITTED\"\n  }, {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f33\",\n    \"arrangementId\" : \"c3d62af-3r27-4ac7-8799-c5a38a596asf2\",\n    \"payeeName\" : \"Robin Green\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"CAD\",\n      \"amount\" : \"10.89\"\n    },\n    \"checkNumber\" : \"444456789123456789123456789444\",\n    \"issueDate\" : \"2020-11-01\",\n    \"voidCheck\" : false,\n    \"issueStatus\" : \"SAVED\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/exceptions/filter\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"exceptions\" : [ {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\",\n    \"checkNumber\" : \"111456789123456789123456789111\",\n    \"accountNumber\" : \"12312312312321213\",\n    \"issueDate\" : \"2020-11-01\",\n    \"payeeName\" : \"Robin Green\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"150.54\"\n    },\n    \"errors\" : [ \"Data mismatch\", \"Duplicate check\" ],\n    \"displayName\" : \"Current account\"\n  }, {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f44\",\n    \"checkNumber\" : \"111456789123456789123456789222\",\n    \"accountNumber\" : \"12312312312324444\",\n    \"issueDate\" : \"2021-01-05\",\n    \"payeeName\" : \"Robert Plant\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"120.00\"\n    },\n    \"errors\" : [ \"Already paid\" ],\n    \"displayName\" : \"Saving account\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/counts\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"exceptionCount\" : 250\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/exceptions/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"exceptionCheck\" : {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\",\n    \"checkNumber\" : \"111456789123456789123456789111\",\n    \"accountNumber\" : \"12312312312321213\",\n    \"issueDate\" : \"2020-11-01\",\n    \"payeeName\" : \"Robin Green\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"150.54\"\n    },\n    \"errors\" : [ \"Data mismatch\", \"Duplicate check\" ],\n    \"checkDepositDate\" : \"2020-12-01T10:05:28Z\",\n    \"exceptionDate\" : \"2020-12-01T11:00:00Z\",\n    \"displayName\" : \"Payroll account for new hires\"\n  },\n  \"issuedCheck\" : {\n    \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f31\",\n    \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n    \"payeeName\" : \"Sarah Lee\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"USD\",\n      \"amount\" : \"99.99\"\n    },\n    \"checkNumber\" : \"111456789123456789123456789111\",\n    \"issueDate\" : \"2020-11-01\",\n    \"voidCheck\" : false,\n    \"registrationDate\" : \"2020-12-31T01:30:00.000-05:00\",\n    \"issueStatus\" : \"SAVED\",\n    \"displayName\" : \"Payroll account for new hires\",\n    \"userFullName\" : \"Jimmy Page\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/settings\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"settings\" : [ {\n    \"subscription\" : \"checks-positive-pay-with-payee-match\",\n    \"systemDecision\" : \"Reject\",\n    \"additions\" : {\n      \"costs-to-update\" : \"$1.50 ex. taxes\"\n    }\n  }, {\n    \"subscription\" : \"checks-positive-pay-without-payee-match\",\n    \"systemDecision\" : \"Pay\"\n  } ],\n  \"additions\" : {\n    \"settingId\" : \"1\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/exceptions/{id}\",\n        method: \"PATCH\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/uploads/checks\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"uploadId\" : \"10\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/checks\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f31\",\n  \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n  \"payeeName\" : \"Sarah Lee\",\n  \"amountDetails\" : {\n    \"currencyCode\" : \"USD\",\n    \"amount\" : \"99.99\"\n  },\n  \"checkNumber\" : \"111456789123456789123456789111\",\n  \"issueDate\" : \"2020-11-01\",\n  \"voidCheck\" : false,\n  \"registrationDate\" : \"2020-12-31T01:30:00.000\",\n  \"issueStatus\" : \"SAVED\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/settings\",\n        method: \"PATCH\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["ExceptionCheckDecisionRequest","InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","Injectable","Inject","createMocks"],"mappings":"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"}