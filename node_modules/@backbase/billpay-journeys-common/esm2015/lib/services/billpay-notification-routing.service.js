import { Subject } from 'rxjs';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class BillpayNotificationRoutingService {
    constructor() {
        this._upcommingPaymentsSubject = new Subject();
        this.upcommingPaymentsSubject$ = this._upcommingPaymentsSubject.asObservable();
        this._managePaymentSubject = new Subject();
        this.managePaymentSubject$ = this._managePaymentSubject.asObservable();
        this._managePayeesSubject = new Subject();
        this.managePayeesSubject$ = this._managePayeesSubject.asObservable();
    }
    navigateToPayments() {
        this._upcommingPaymentsSubject.next();
    }
    navigateToNewPayment(payeeId) {
        this._managePaymentSubject.next(payeeId);
    }
    navigateToPayees() {
        this._managePayeesSubject.next();
    }
}
/** @nocollapse */ BillpayNotificationRoutingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BillpayNotificationRoutingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ BillpayNotificationRoutingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BillpayNotificationRoutingService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BillpayNotificationRoutingService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }] });
//# sourceMappingURL=billpay-notification-routing.service.js.map