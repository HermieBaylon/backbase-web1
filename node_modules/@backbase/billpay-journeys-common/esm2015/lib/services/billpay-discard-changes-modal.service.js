import { ChangeDetectorRef, Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import { tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
export class BillpayDiscardChangesModalService {
    /** @internal */
    constructor(cdRef) {
        this.cdRef = cdRef;
        this.isDiscardModalOpen = false;
        this.modalResolve$ = new Subject();
    }
    openModal() {
        this.isDiscardModalOpen = true;
        this.cdRef.detach();
        this.cdRef.detectChanges();
        return this.modalResolve$.asObservable().pipe(tap(() => this.cdRef.reattach()));
    }
    onModalResolve(resolvedWith) {
        this.isDiscardModalOpen = false;
        this.cdRef.detectChanges();
        this.modalResolve$.next(resolvedWith);
    }
}
/** @nocollapse */ BillpayDiscardChangesModalService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BillpayDiscardChangesModalService, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ BillpayDiscardChangesModalService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BillpayDiscardChangesModalService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BillpayDiscardChangesModalService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=billpay-discard-changes-modal.service.js.map