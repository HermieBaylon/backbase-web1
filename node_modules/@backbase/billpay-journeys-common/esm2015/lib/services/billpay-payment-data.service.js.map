{"version":3,"file":"billpay-payment-data.service.js","sourceRoot":"","sources":["../../../../../../libs/billpay-journeys-common/src/lib/services/billpay-payment-data.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { map, tap, catchError, switchMap } from 'rxjs/operators';\nimport {\n  BillPayPaymentsService,\n  BillPayPayeesSummaryService,\n  BillPayAccountsService,\n  PaymentRequest,\n  RecurringPayment,\n  OneOffPayment,\n  BillPayAccountsGetResponseBody,\n  BillPayPayeesSummaryGetResponseBody,\n  RecurringPaymentByIdPutResponseBody,\n  BillPayRecurringPaymentsPostResponseBody,\n  PaymentByIdPutResponseBody,\n  BillPayPaymentsPostResponseBody,\n  Payment,\n} from '@backbase/data-ang/billpay';\nimport { PaymentFormState, FrequencyKeys } from '../model';\nimport { formatDate } from '@angular/common';\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport { LoadingState } from '../model';\n\n@Injectable()\nexport class BillpayPaymentDataService {\n  private currentPayeesLoadingState = LoadingState.Inactive;\n  private currentAccountsLoadingState = LoadingState.Inactive;\n  private readonly reload = new BehaviorSubject(undefined);\n  private readonly decimalSeparator: string;\n\n  /** @internal */\n  constructor(\n    private readonly paymentData: BillPayPaymentsService,\n    private readonly accountsData: BillPayAccountsService,\n    private readonly payeesSummaryData: BillPayPayeesSummaryService,\n    @Inject(LOCALE_ID) private readonly locale: string,\n  ) {\n    this.decimalSeparator = getLocaleNumberSymbol(this.locale, NumberSymbol.CurrencyDecimal);\n  }\n\n  get payeesLoadingState(): LoadingState {\n    return this.currentPayeesLoadingState;\n  }\n\n  get accountsLoadingState(): LoadingState {\n    return this.currentAccountsLoadingState;\n  }\n\n  getOneOffPayment(id: string): Observable<OneOffPayment> {\n    return this.paymentData.getPaymentById({ id }).pipe(map(body => body.payment));\n  }\n\n  getRecurringPayment(id: string): Observable<Payment> {\n    return this.paymentData.getRecurringPaymentById({ id }).pipe(map(body => body.payment));\n  }\n\n  getPayeesAndAccounts(): Observable<BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody> {\n    return combineLatest([this.getPayees(), this.getAccounts()]).pipe(\n      map(\n        ([payeeSummaries, accounts]) =>\n          ({ ...payeeSummaries, ...accounts } as BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody),\n      ),\n    );\n  }\n\n  createPayment(\n    payment: PaymentFormState,\n  ): Observable<BillPayPaymentsPostResponseBody | BillPayRecurringPaymentsPostResponseBody> {\n    return payment.schedule.frequency === FrequencyKeys.Once\n      ? this.paymentData.postBillPayPayments({\n          billPayPaymentsPostRequestBody: { payments: [this.toPaymentRequest(payment)] },\n        })\n      : this.paymentData.postBillPayRecurringPayments({\n          billPayRecurringPaymentsPostRequestBody: { payment: this.toRecurringPaymentRequest(payment) },\n        });\n  }\n\n  updatePaymentRecurring(payment: PaymentFormState, id: string): Observable<RecurringPaymentByIdPutResponseBody> {\n    return this.paymentData.putRecurringPaymentById({\n      id,\n      recurringPaymentByIdPutRequestBody: { payment: this.toRecurringPaymentRequest(payment) },\n    });\n  }\n\n  updatePaymentOneOff(payment: PaymentFormState, id: string): Observable<PaymentByIdPutResponseBody> {\n    return this.paymentData.putPaymentById({\n      id,\n      paymentByIdPutRequestBody: { payment: this.toPaymentRequest(payment) },\n    });\n  }\n\n  private getPayees(): Observable<BillPayPayeesSummaryGetResponseBody | undefined> {\n    return this.reload.asObservable().pipe(\n      tap(() => (this.currentPayeesLoadingState = LoadingState.Loading)),\n      switchMap(() => this.payeesSummaryData.getBillPayPayeesSummary()),\n      tap(() => (this.currentPayeesLoadingState = LoadingState.Inactive)),\n      catchError(() => {\n        this.currentPayeesLoadingState = LoadingState.Error;\n        return of(undefined);\n      }),\n    );\n  }\n\n  private getAccounts(): Observable<BillPayAccountsGetResponseBody | undefined> {\n    return this.reload.asObservable().pipe(\n      tap(() => (this.currentAccountsLoadingState = LoadingState.Loading)),\n      switchMap(() => this.accountsData.getBillPayAccounts()),\n      tap(() => (this.currentAccountsLoadingState = LoadingState.Inactive)),\n      catchError(() => {\n        this.currentAccountsLoadingState = LoadingState.Error;\n        return of(undefined);\n      }),\n    );\n  }\n\n  private toShortISODate(date: string): string {\n    return formatDate(date, 'yyyy-MM-dd', this.locale);\n  }\n\n  private toPaymentRequest({\n    payeeTo: { id: payeeID },\n    accountFrom: { accountNumber, routingNumber, accountType, id },\n    amount,\n    memo,\n    schedule,\n    overnightDeliveryAddress,\n  }: PaymentFormState): PaymentRequest {\n    return {\n      payeeID,\n      paymentAccount: {\n        ...(id && { id: id }),\n        accountNumber,\n        routingNumber,\n        accountType,\n      },\n      ...(schedule.paymentService &&\n        schedule.paymentService.service && { paymentServiceType: schedule.paymentService.service.paymentServiceType }),\n      amount: {\n        amount: amount.amount.replace(this.decimalSeparator, '.'),\n        currencyCode: amount.currency,\n      },\n      paymentDate: this.toShortISODate(schedule.startDate),\n      ...(memo && { paymentMemo: memo }),\n      ...(overnightDeliveryAddress && {\n        overnightDeliveryAddress: {\n          address1: overnightDeliveryAddress.address1,\n          state: overnightDeliveryAddress.state,\n          city: overnightDeliveryAddress.city,\n          postalCode: overnightDeliveryAddress.postalCode,\n          ...(overnightDeliveryAddress.address2 && { address2: overnightDeliveryAddress.address2 }),\n        },\n      }),\n    };\n  }\n\n  private toRecurringPaymentRequest({\n    payeeTo: { id: payeeID },\n    accountFrom: { accountNumber, routingNumber, accountType, id },\n    amount,\n    schedule,\n    memo,\n  }: PaymentFormState): RecurringPayment {\n    return {\n      payeeID,\n      paymentAccount: {\n        ...(id && { id: id }),\n        accountNumber,\n        routingNumber,\n        accountType,\n      },\n      amount: {\n        amount: amount.amount.replace(this.decimalSeparator, '.'),\n        currencyCode: amount.currency,\n      },\n      ...(memo && { paymentMemo: memo }),\n      paymentDate: this.toShortISODate(schedule.startDate),\n      ...(schedule.repeat && { numberOfInstances: schedule.repeat }),\n      frequency: schedule.frequency,\n      paymentScheduledAlert: schedule.alertPendingCheckbox,\n      paymentSentAlert: schedule.alertSentCheckbox,\n      modelExpirationAlert: schedule.alertLastPendingCheckbox,\n    };\n  }\n}\n"]}