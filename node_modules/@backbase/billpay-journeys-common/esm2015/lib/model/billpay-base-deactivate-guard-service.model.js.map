{"version":3,"file":"billpay-base-deactivate-guard-service.model.js","sourceRoot":"","sources":["../../../../../../libs/billpay-journeys-common/src/lib/model/billpay-base-deactivate-guard-service.model.ts"],"names":[],"mappings":"AASA,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAGrC,MAAM,OAAgB,iCAAiC;IAIrD,gBAAgB;IAChB,YAA+B,MAAc,EAAqB,QAAkB;QAArD,WAAM,GAAN,MAAM,CAAQ;QAAqB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAExF,aAAa,CACX,SAA6C,EAC7C,YAAoC,EACpC,YAAiC,EACjC,SAA8B;QAE9B,MAAM,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3F,MAAM,sBAAsB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;QACtG,MAAM,cAAc,GAAG,YAAY,CAAC,GAAG,KAAK,SAAS,CAAC,GAAG,CAAC;QAC1D,MAAM,mBAAmB,GAAG,kBAAkB,IAAI,sBAAsB,IAAI,cAAc,CAAC;QAE3F,OAAO,CACL,mBAAmB;YACnB,SAAS,CAAC,SAAS,EAAE,CAAC,IAAI;YACxB,6EAA6E;YAC7E,GAAG,CAAC,aAAa,CAAC,EAAE;gBAClB,IAAI,CAAC,aAAa,EAAE;oBAClB,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,EAAE,YAAkC,CAAC,CAAC;oBACzF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;iBAC7C;YACH,CAAC,CAAC,CACH,CACF,CAAC;IACJ,CAAC;CACF","sourcesContent":["import {\n  ActivatedRouteSnapshot,\n  CanDeactivate,\n  Router,\n  RouterStateSnapshot,\n  UrlCreationOptions,\n} from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { BillpayDiscardChangesFormComponent } from './billpay-discard-changes-form-component.model';\n\nexport abstract class BillpayBaseDeactivateGuardService implements CanDeactivate<BillpayDiscardChangesFormComponent> {\n  protected abstract readonly allowedPreviousRoutes: RegExp[];\n  protected abstract readonly allowedNextRoutes: RegExp[];\n\n  /** @internal */\n  constructor(protected readonly router: Router, protected readonly location: Location) {}\n\n  canDeactivate(\n    component: BillpayDiscardChangesFormComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState: RouterStateSnapshot,\n  ): Observable<boolean> | boolean {\n    const isNextRouteAllowed = this.allowedNextRoutes.some(route => route.test(nextState.url));\n    const isPreviousRouteAllowed = this.allowedPreviousRoutes.some(route => route.test(currentState.url));\n    const isNotSameRoute = currentState.url !== nextState.url;\n    const isNavigationAllowed = isNextRouteAllowed && isPreviousRouteAllowed && isNotSameRoute;\n\n    return (\n      isNavigationAllowed ||\n      component.openModal().pipe(\n        // TODO: Due to Angular issue https://github.com/angular/angular/issues/13586\n        tap(canDeactivate => {\n          if (!canDeactivate) {\n            const currentUrlTree = this.router.createUrlTree([], currentRoute as UrlCreationOptions);\n            this.location.go(currentUrlTree.toString());\n          }\n        }),\n      )\n    );\n  }\n}\n"]}