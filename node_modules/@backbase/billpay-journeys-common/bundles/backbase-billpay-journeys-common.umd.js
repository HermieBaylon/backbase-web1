(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/router'), require('@angular/forms'), require('@backbase/foundation-ang/core'), require('rxjs/operators'), require('rxjs'), require('@angular/localize/init'), require('@backbase/data-ang/billpay'), require('@backbase/ui-ang/notification'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/header'), require('@backbase/ui-ang/amount'), require('@backbase/ui-ang/payment-card-number-pipe'), require('@backbase/ui-ang/input-text'), require('@backbase/ui-ang/input-validation-message'), require('@backbase/ui-ang/dropdown-single-select'), require('@backbase/ui-ang/modal'), require('@backbase/ui-ang/keyboard-click-directive'), require('@ng-bootstrap/ng-bootstrap')) :
    typeof define === 'function' && define.amd ? define('@backbase/billpay-journeys-common', ['exports', '@angular/core', '@angular/common', '@angular/router', '@angular/forms', '@backbase/foundation-ang/core', 'rxjs/operators', 'rxjs', '@angular/localize/init', '@backbase/data-ang/billpay', '@backbase/ui-ang/notification', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/button', '@backbase/ui-ang/header', '@backbase/ui-ang/amount', '@backbase/ui-ang/payment-card-number-pipe', '@backbase/ui-ang/input-text', '@backbase/ui-ang/input-validation-message', '@backbase/ui-ang/dropdown-single-select', '@backbase/ui-ang/modal', '@backbase/ui-ang/keyboard-click-directive', '@ng-bootstrap/ng-bootstrap'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["billpay-journeys-common"] = {}), global.ng.core, global.ng.common, global.ng.router, global.ng.forms, global.core, global.rxjs.operators, global.rxjs, global.ng.localize.init, global.i1, global.i2$1, global.i3, global.i4$1, global.i3$1, global.i2$2, global.i3$2, global.i5, global.i2$3, global.i3$3, global.i4$2, global.i1$2, global.keyboardClickDirective, global.i2$4));
})(this, (function (exports, i0, i4, i2, i1$1, core, operators, rxjs, init, i1, i2$1, i3, i4$1, i3$1, i2$2, i3$2, i5, i2$3, i3$3, i4$2, i1$2, keyboardClickDirective, i2$4) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4$1);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i3__namespace$2 = /*#__PURE__*/_interopNamespace(i3$2);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i2__namespace$3 = /*#__PURE__*/_interopNamespace(i2$3);
    var i3__namespace$3 = /*#__PURE__*/_interopNamespace(i3$3);
    var i4__namespace$2 = /*#__PURE__*/_interopNamespace(i4$2);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i2__namespace$4 = /*#__PURE__*/_interopNamespace(i2$4);

    /******************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function () { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }
    function __classPrivateFieldIn(state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function"))
            throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    }

    var accountNumberFullFormat = {
        length: 0,
        maskRange: [0, 0],
        segments: 0,
    };
    var accountNumberMaskedFormat = {
        length: 9,
        maskRange: [0, 5],
        segments: 0,
    };

    var ONE_OFF_PAYMENT = 'oneOff';
    var RECURRING_PAYMENT = 'recurring';

    var ENROLMENT_PATH = 'enrolment';

    exports.EndTypes = void 0;
    (function (EndTypes) {
        EndTypes["Never"] = "never";
        EndTypes["On"] = "on";
        EndTypes["After"] = "after";
    })(exports.EndTypes || (exports.EndTypes = {}));
    exports.FrequencyKeys = void 0;
    (function (FrequencyKeys) {
        FrequencyKeys["Once"] = "ONCE";
        FrequencyKeys["Weekly"] = "WEEKLY";
        FrequencyKeys["Biweekly"] = "EVERY_2_WEEKS";
        FrequencyKeys["Monthly"] = "MONTHLY";
        FrequencyKeys["EveryTwoWeeks"] = "EVERY_2_WEEKS";
        FrequencyKeys["SemiMonthly"] = "TWICE_A_MONTH";
        FrequencyKeys["EveryFourWeeks"] = "EVERY_4_WEEKS";
        FrequencyKeys["EveryTwoMonths"] = "EVERY_2_MONTHS";
        FrequencyKeys["Quarterly"] = "EVERY_3_MONTHS";
        FrequencyKeys["EverySixMonths"] = "EVERY_6_MONTHS";
        FrequencyKeys["Annually"] = "ANNUALLY";
    })(exports.FrequencyKeys || (exports.FrequencyKeys = {}));

    exports.PaymentServicesTypes = void 0;
    (function (PaymentServicesTypes) {
        PaymentServicesTypes["Regular"] = "REGULAR_PAYMENT";
        PaymentServicesTypes["Overnight"] = "OVERNIGHT_CHECK";
        PaymentServicesTypes["Expedited"] = "EXPEDITED_PAYMENT";
        PaymentServicesTypes["Other"] = "OTHER";
    })(exports.PaymentServicesTypes || (exports.PaymentServicesTypes = {}));
    exports.LoadingState = void 0;
    (function (LoadingState) {
        LoadingState[LoadingState["Loading"] = 0] = "Loading";
        LoadingState[LoadingState["Error"] = 1] = "Error";
        LoadingState[LoadingState["Inactive"] = 2] = "Inactive";
    })(exports.LoadingState || (exports.LoadingState = {}));
    exports.Direction = void 0;
    (function (Direction) {
        Direction["ASC"] = "ASC";
        Direction["DESC"] = "DESC";
    })(exports.Direction || (exports.Direction = {}));

    var BillpayBaseDeactivateGuardService = /** @class */ (function () {
        /** @internal */
        function BillpayBaseDeactivateGuardService(router, location) {
            this.router = router;
            this.location = location;
        }
        BillpayBaseDeactivateGuardService.prototype.canDeactivate = function (component, currentRoute, currentState, nextState) {
            var _this = this;
            var isNextRouteAllowed = this.allowedNextRoutes.some(function (route) { return route.test(nextState.url); });
            var isPreviousRouteAllowed = this.allowedPreviousRoutes.some(function (route) { return route.test(currentState.url); });
            var isNotSameRoute = currentState.url !== nextState.url;
            var isNavigationAllowed = isNextRouteAllowed && isPreviousRouteAllowed && isNotSameRoute;
            return (isNavigationAllowed ||
                component.openModal().pipe(
                // TODO: Due to Angular issue https://github.com/angular/angular/issues/13586
                operators.tap(function (canDeactivate) {
                    if (!canDeactivate) {
                        var currentUrlTree = _this.router.createUrlTree([], currentRoute);
                        _this.location.go(currentUrlTree.toString());
                    }
                })));
        };
        return BillpayBaseDeactivateGuardService;
    }());

    var recurringFrequencies = [
        { name: $localize(templateObject_1 || (templateObject_1 = __makeTemplateObject([":@@billpay-common.frequency-label.weekly:Weekly"], [":@@billpay-common.frequency-label.weekly:Weekly"]))), value: exports.FrequencyKeys.Weekly },
        { name: $localize(templateObject_2 || (templateObject_2 = __makeTemplateObject([":@@billpay-common.frequency-label.every-two-week:Every two weeks"], [":@@billpay-common.frequency-label.every-two-week:Every two weeks"]))), value: exports.FrequencyKeys.Biweekly },
        { name: $localize(templateObject_3 || (templateObject_3 = __makeTemplateObject([":@@billpay-common.frequency-label.monthly:Monthly"], [":@@billpay-common.frequency-label.monthly:Monthly"]))), value: exports.FrequencyKeys.Monthly },
    ];
    var frequencies = __spreadArray([
        { name: $localize(templateObject_4 || (templateObject_4 = __makeTemplateObject([":@@billpay-common.frequency-label.once:Once"], [":@@billpay-common.frequency-label.once:Once"]))), value: exports.FrequencyKeys.Once }
    ], __read(recurringFrequencies));
    var templateObject_1, templateObject_2, templateObject_3, templateObject_4;

    var formControlOptions = {
        emitEvent: false,
    };

    var states = [
        'AL',
        'AK',
        'AZ',
        'AR',
        'CA',
        'CO',
        'CT',
        'DE',
        'FL',
        'GA',
        'HI',
        'ID',
        'IL',
        'IN',
        'IA',
        'KS',
        'KY',
        'LA',
        'ME',
        'MD',
        'MA',
        'MI',
        'MN',
        'MS',
        'MO',
        'MT',
        'NE',
        'NV',
        'NH',
        'NJ',
        'NM',
        'NY',
        'NC',
        'ND',
        'OH',
        'OK',
        'OR',
        'PA',
        'RI',
        'SC',
        'SD',
        'TN',
        'TX',
        'UT',
        'VT',
        'VA',
        'WA',
        'WV',
        'WI',
        'WY',
    ];

    var BillpayEnrolmentService = /** @class */ (function () {
        function BillpayEnrolmentService(dataService, route, router) {
            var _this = this;
            this.dataService = dataService;
            this.route = route;
            this.router = router;
            this.previousRoute = new rxjs.BehaviorSubject(undefined);
            this.getRoutePath = function (route, path) {
                if (route.snapshot && route.snapshot.routeConfig && route.snapshot.routeConfig.path) {
                    path += '/' + route.snapshot.routeConfig.path;
                }
                if (!route.firstChild) {
                    return path;
                }
                return _this.getRoutePath(route.firstChild, path);
            };
        }
        BillpayEnrolmentService.prototype.enrolUser = function () {
            return this.dataService.postBillPayEnrolment('response').pipe(operators.map(function (response) { return response.status === 204; }), operators.catchError(function (error) { return rxjs.of(error.status === 204); }));
        };
        BillpayEnrolmentService.prototype.isEnrolled = function () {
            return this.dataService.getBillPayEnrolment().pipe(operators.map(function (body) { return body.enrolment.enrolled; }), operators.catchError(function () { return rxjs.of(false); }));
        };
        BillpayEnrolmentService.prototype.getCurrentRoute = function () {
            return this.getRoutePath(this.route, '');
        };
        BillpayEnrolmentService.prototype.redirectUser = function (previousRoute) {
            if (previousRoute && !previousRoute.includes(ENROLMENT_PATH)) {
                this.router.navigateByUrl(previousRoute);
            }
            else {
                this.router.navigate(['./']);
            }
        };
        return BillpayEnrolmentService;
    }());
    /** @nocollapse */ BillpayEnrolmentService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEnrolmentService, deps: [{ token: i1__namespace.BillPayEnrolmentService }, { token: i2__namespace.ActivatedRoute }, { token: i2__namespace.Router }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ BillpayEnrolmentService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEnrolmentService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEnrolmentService, decorators: [{
                type: i0.Injectable,
                args: [{ providedIn: 'root' }]
            }], ctorParameters: function () { return [{ type: i1__namespace.BillPayEnrolmentService }, { type: i2__namespace.ActivatedRoute }, { type: i2__namespace.Router }]; } });

    var BillpayEnrolmentGuard = /** @class */ (function () {
        function BillpayEnrolmentGuard(router, enrolmentService) {
            this.router = router;
            this.enrolmentService = enrolmentService;
        }
        BillpayEnrolmentGuard.prototype.canActivate = function (route, state) {
            var _this = this;
            return this.enrolmentService.isEnrolled().pipe(operators.map(function (enrolled) {
                var currentRoute = _this.enrolmentService.getCurrentRoute();
                if (!enrolled && !(currentRoute === null || currentRoute === void 0 ? void 0 : currentRoute.endsWith(ENROLMENT_PATH))) {
                    _this.enrolmentService.previousRoute.next(state.url);
                    var parentRoutes = route.pathFromRoot.map(function (snapshot) { var _a; return (_a = snapshot === null || snapshot === void 0 ? void 0 : snapshot.routeConfig) === null || _a === void 0 ? void 0 : _a.path; }).filter(function (item) { return !!item; });
                    _this.router.navigate(__spreadArray(__spreadArray([], __read(parentRoutes)), [ENROLMENT_PATH]));
                    return false;
                }
                return true;
            }));
        };
        return BillpayEnrolmentGuard;
    }());
    /** @nocollapse */ BillpayEnrolmentGuard.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEnrolmentGuard, deps: [{ token: i2__namespace.Router }, { token: BillpayEnrolmentService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ BillpayEnrolmentGuard.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEnrolmentGuard, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEnrolmentGuard, decorators: [{
                type: i0.Injectable,
                args: [{ providedIn: 'root' }]
            }], ctorParameters: function () { return [{ type: i2__namespace.Router }, { type: BillpayEnrolmentService }]; } });

    var BillpayPaymentParserService = /** @class */ (function () {
        function BillpayPaymentParserService(locale) {
            this.locale = locale;
            this.decimalSeparator = i4.getLocaleNumberSymbol(this.locale, i4.NumberSymbol.CurrencyDecimal);
        }
        BillpayPaymentParserService.prototype.paymentRecurringToFormState = function (payment, payees) {
            var frequency = payment.recurring && recurringFrequencies.find(function (item) { return item.value === payment.frequency; });
            var endType = payment.numberOfInstances ? exports.EndTypes.After : exports.EndTypes.Never;
            return Object.assign(Object.assign({}, this.parsePaymentCommonResponse(payment, payees)), { schedule: Object.assign({ repeat: payment.numberOfInstances, endType: endType, startDate: payment.paymentDate, alertPendingCheckbox: payment.paymentScheduledAlert || false, alertSentCheckbox: payment.paymentSentAlert || false, alertLastPendingCheckbox: payment.modelExpirationAlert || false }, (frequency && { frequency: frequency.value })) });
        };
        BillpayPaymentParserService.prototype.paymentOneOffToFormState = function (payment, payees) {
            return Object.assign(Object.assign({}, this.parsePaymentCommonResponse(payment, payees)), { schedule: {
                    startDate: payment.paymentDate,
                    alertPendingCheckbox: false,
                    alertSentCheckbox: false,
                    alertLastPendingCheckbox: false,
                    frequency: exports.FrequencyKeys.Once,
                } });
        };
        BillpayPaymentParserService.prototype.paymentFormStateToReview = function (_b) {
            var accountFrom = _b.accountFrom, payeeTo = _b.payeeTo, amount = _b.amount, memo = _b.memo, schedule = _b.schedule, overnightDeliveryAddress = _b.overnightDeliveryAddress;
            return Object.assign(Object.assign(Object.assign(Object.assign({ amount: {
                    amount: amount.amount.replace(this.decimalSeparator, '.'),
                    currencyCode: amount.currency,
                }, paymentDate: schedule.paymentServiceDate || schedule.startDate, paymentAccount: accountFrom, recurring: schedule.frequency !== exports.FrequencyKeys.Once }, (memo && { paymentMemo: memo })), (overnightDeliveryAddress && { overnightDeliveryAddress: overnightDeliveryAddress })), this.parsePaymentFormPayee(payeeTo)), this.parsePaymentFormSchedule(schedule));
        };
        BillpayPaymentParserService.prototype.paymentAndPayeeResponsesToReview = function (payment, payee) {
            return Object.assign(Object.assign({}, this.paymentResponseToReview(payment)), (payee.address && { address: payee.address }));
        };
        // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars
        BillpayPaymentParserService.prototype.paymentResponseToReview = function (_a) {
            var id = _a.id, status = _a.status, ebillID = _a.ebillID, rest = __rest(_a, ["id", "status", "ebillID"]);
            return rest;
        };
        BillpayPaymentParserService.prototype.parsePaymentFormPayee = function (payee) {
            return Object.assign(Object.assign({ payeeID: payee.id, payeeName: payee.name }, (payee.accountNumber && { payeeAccountNumber: payee.accountNumber })), (payee.nickName && { payeeNickName: payee.nickName }));
        };
        BillpayPaymentParserService.prototype.parsePaymentFormSchedule = function (schedule) {
            return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (this.getScheduleFee(schedule) && { fee: this.getScheduleFee(schedule) })), (schedule.repeat && { numberOfInstances: schedule.repeat })), (schedule.frequency !== exports.FrequencyKeys.Once && { frequency: schedule.frequency })), (schedule.alertPendingCheckbox && { paymentScheduledAlert: schedule.alertPendingCheckbox })), (schedule.alertSentCheckbox && { paymentSentAlert: schedule.alertSentCheckbox })), (schedule.alertLastPendingCheckbox && { modelExpirationAlert: schedule.alertLastPendingCheckbox }));
        };
        BillpayPaymentParserService.prototype.getScheduleFee = function (schedule) {
            return ((schedule.paymentService &&
                (schedule.paymentService.index === exports.PaymentServicesTypes.Expedited ||
                    schedule.paymentService.index === exports.PaymentServicesTypes.Overnight) &&
                schedule.paymentService.service &&
                schedule.paymentService.service.fee) ||
                undefined);
        };
        BillpayPaymentParserService.prototype.parsePaymentCommonResponse = function (payment, payees) {
            var payeeTo = payees.find(function (item) { return item.id === payment.payeeID; });
            var amount = payment.amount && {
                currency: payment.amount.currencyCode,
                amount: payment.amount.amount.replace(this.decimalSeparator, '.'),
            };
            return Object.assign(Object.assign(Object.assign(Object.assign({ paymentId: payment.id }, (payment.amount && { amount: amount })), (payeeTo && { payeeTo: payeeTo })), (payment.paymentAccount && { accountFrom: payment.paymentAccount })), (payment.paymentMemo && { memo: payment.paymentMemo }));
        };
        return BillpayPaymentParserService;
    }());
    /** @nocollapse */ BillpayPaymentParserService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentParserService, deps: [{ token: i0.LOCALE_ID }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ BillpayPaymentParserService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentParserService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentParserService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.LOCALE_ID]
                        }] }];
        } });

    var BillpayPaymentScheduleService = /** @class */ (function () {
        function BillpayPaymentScheduleService() {
        }
        Object.defineProperty(BillpayPaymentScheduleService.prototype, "today", {
            get: function () {
                return this.getLocalISODate(new Date());
            },
            enumerable: false,
            configurable: true
        });
        BillpayPaymentScheduleService.prototype.estimatedEndDate = function (date, freq, occurs) {
            if (occurs === void 0) { occurs = 0; }
            var parsedDate = new Date(date);
            switch (freq) {
                case exports.FrequencyKeys.Monthly:
                    return parsedDate.setMonth(parsedDate.getMonth() + occurs);
                case exports.FrequencyKeys.Biweekly:
                    return (new Date(parsedDate.setDate(parsedDate.getDate() - 1)).setHours(0, 0, 0) + occurs * (1000 * 3600 * 24) * 14);
                case exports.FrequencyKeys.Weekly:
                    return (new Date(parsedDate.setDate(parsedDate.getDate() - 1)).setHours(0, 0, 0) + occurs * (1000 * 3600 * 24) * 7);
                default:
                    return parsedDate.getTime();
            }
        };
        BillpayPaymentScheduleService.prototype.estimatedOccurences = function (startDate, endDate, freq) {
            var d1 = new Date(startDate);
            var d2 = new Date(endDate);
            switch (freq) {
                case exports.FrequencyKeys.Monthly:
                    return this.toMonthDifference(d1, d2);
                case exports.FrequencyKeys.Biweekly:
                    return Math.ceil(this.toDaysDifference(d1, d2) / 14);
                case exports.FrequencyKeys.Weekly:
                    return Math.ceil(this.toDaysDifference(d1, d2) / 7);
                default:
                    return 1;
            }
        };
        BillpayPaymentScheduleService.prototype.estimatedPaymentServiceDate = function (services, serviceType) {
            var service = services && services.find(function (item) { return !!(item && item.paymentServiceType === serviceType); });
            if (service) {
                return new Date(service.cutoffTime).getTime() < new Date(service.earliestPaymentDate).getTime()
                    ? this.getLocalISODate(service.earliestPaymentDate)
                    : this.getLocalISODate(service.nextPaymentDate);
            }
            else {
                return this.today;
            }
        };
        BillpayPaymentScheduleService.prototype.toMonthDifference = function (d1, d2) {
            var endMonth = d2.getMonth();
            var startMonth = d1.getMonth();
            var endDay = d2.getDate();
            var startDay = d1.getDate();
            var lastDayOfEndMonth = new Date(d2.getFullYear(), endMonth + 1, 0).getDate();
            var lastDayOfStartMonth = new Date(d1.getFullYear(), startMonth + 1, 0).getDate();
            var strictMonths = (d2.getFullYear() - d1.getFullYear()) * 12 - startMonth + endMonth - 1;
            strictMonths = strictMonths <= 0 ? 0 : strictMonths;
            var softMonths = (startDay <= endDay && startMonth !== endMonth) ||
                (startDay === lastDayOfStartMonth && endDay === lastDayOfEndMonth && startMonth !== endMonth)
                ? 2
                : 1;
            return strictMonths + softMonths;
        };
        BillpayPaymentScheduleService.prototype.toDaysDifference = function (d1, d2) {
            var rest = d2.getTime() - d1.getTime();
            var result = Math.ceil(Math.abs(rest) / (1000 * 3600 * 24));
            if (rest < 0) {
                return 0;
            }
            else {
                return result ? result + 1 : 1;
            }
        };
        BillpayPaymentScheduleService.prototype.getLocalISODate = function (_date) {
            var ISODateRegExp = /\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/g;
            // Check if the date is already ISO
            if (typeof _date === 'string' && ISODateRegExp.test(_date)) {
                return _date;
            }
            var date = new Date(_date);
            var timezonezoffset = date.getTimezoneOffset() * 60000;
            return new Date(date.getTime() + timezonezoffset).toISOString();
        };
        return BillpayPaymentScheduleService;
    }());
    /** @nocollapse */ BillpayPaymentScheduleService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentScheduleService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ BillpayPaymentScheduleService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentScheduleService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentScheduleService, decorators: [{
                type: i0.Injectable
            }] });

    var BillpayUtilityService = /** @class */ (function () {
        function BillpayUtilityService() {
        }
        BillpayUtilityService.checkForProperty = function (property, inObject) {
            var propertyAsArray = [];
            if (typeof property === 'string') {
                propertyAsArray = property.split('.');
            }
            else {
                propertyAsArray = property;
            }
            return propertyAsArray.reduce(function (currentObject, currentProperty) { return currentObject && currentObject[currentProperty] ? currentObject[currentProperty] : undefined; }, inObject);
        };
        BillpayUtilityService.generateId = function () {
            return Math.floor(Math.random() * Date.now()).toString();
        };
        return BillpayUtilityService;
    }());
    /** @nocollapse */ BillpayUtilityService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayUtilityService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ BillpayUtilityService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayUtilityService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayUtilityService, decorators: [{
                type: i0.Injectable
            }] });

    var BillpayPaymentDataService = /** @class */ (function () {
        /** @internal */
        function BillpayPaymentDataService(paymentData, accountsData, payeesSummaryData, locale) {
            this.paymentData = paymentData;
            this.accountsData = accountsData;
            this.payeesSummaryData = payeesSummaryData;
            this.locale = locale;
            this.currentPayeesLoadingState = exports.LoadingState.Inactive;
            this.currentAccountsLoadingState = exports.LoadingState.Inactive;
            this.reload = new rxjs.BehaviorSubject(undefined);
            this.decimalSeparator = i4.getLocaleNumberSymbol(this.locale, i4.NumberSymbol.CurrencyDecimal);
        }
        Object.defineProperty(BillpayPaymentDataService.prototype, "payeesLoadingState", {
            get: function () {
                return this.currentPayeesLoadingState;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPaymentDataService.prototype, "accountsLoadingState", {
            get: function () {
                return this.currentAccountsLoadingState;
            },
            enumerable: false,
            configurable: true
        });
        BillpayPaymentDataService.prototype.getOneOffPayment = function (id) {
            return this.paymentData.getPaymentById({ id: id }).pipe(operators.map(function (body) { return body.payment; }));
        };
        BillpayPaymentDataService.prototype.getRecurringPayment = function (id) {
            return this.paymentData.getRecurringPaymentById({ id: id }).pipe(operators.map(function (body) { return body.payment; }));
        };
        BillpayPaymentDataService.prototype.getPayeesAndAccounts = function () {
            return rxjs.combineLatest([this.getPayees(), this.getAccounts()]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), payeeSummaries = _b[0], accounts = _b[1];
                return (Object.assign(Object.assign({}, payeeSummaries), accounts));
            }));
        };
        BillpayPaymentDataService.prototype.createPayment = function (payment) {
            return payment.schedule.frequency === exports.FrequencyKeys.Once
                ? this.paymentData.postBillPayPayments({
                    billPayPaymentsPostRequestBody: { payments: [this.toPaymentRequest(payment)] },
                })
                : this.paymentData.postBillPayRecurringPayments({
                    billPayRecurringPaymentsPostRequestBody: { payment: this.toRecurringPaymentRequest(payment) },
                });
        };
        BillpayPaymentDataService.prototype.updatePaymentRecurring = function (payment, id) {
            return this.paymentData.putRecurringPaymentById({
                id: id,
                recurringPaymentByIdPutRequestBody: { payment: this.toRecurringPaymentRequest(payment) },
            });
        };
        BillpayPaymentDataService.prototype.updatePaymentOneOff = function (payment, id) {
            return this.paymentData.putPaymentById({
                id: id,
                paymentByIdPutRequestBody: { payment: this.toPaymentRequest(payment) },
            });
        };
        BillpayPaymentDataService.prototype.getPayees = function () {
            var _this = this;
            return this.reload.asObservable().pipe(operators.tap(function () { return (_this.currentPayeesLoadingState = exports.LoadingState.Loading); }), operators.switchMap(function () { return _this.payeesSummaryData.getBillPayPayeesSummary(); }), operators.tap(function () { return (_this.currentPayeesLoadingState = exports.LoadingState.Inactive); }), operators.catchError(function () {
                _this.currentPayeesLoadingState = exports.LoadingState.Error;
                return rxjs.of(undefined);
            }));
        };
        BillpayPaymentDataService.prototype.getAccounts = function () {
            var _this = this;
            return this.reload.asObservable().pipe(operators.tap(function () { return (_this.currentAccountsLoadingState = exports.LoadingState.Loading); }), operators.switchMap(function () { return _this.accountsData.getBillPayAccounts(); }), operators.tap(function () { return (_this.currentAccountsLoadingState = exports.LoadingState.Inactive); }), operators.catchError(function () {
                _this.currentAccountsLoadingState = exports.LoadingState.Error;
                return rxjs.of(undefined);
            }));
        };
        BillpayPaymentDataService.prototype.toShortISODate = function (date) {
            return i4.formatDate(date, 'yyyy-MM-dd', this.locale);
        };
        BillpayPaymentDataService.prototype.toPaymentRequest = function (_a) {
            var payeeID = _a.payeeTo.id, _b = _a.accountFrom, accountNumber = _b.accountNumber, routingNumber = _b.routingNumber, accountType = _b.accountType, id = _b.id, amount = _a.amount, memo = _a.memo, schedule = _a.schedule, overnightDeliveryAddress = _a.overnightDeliveryAddress;
            return Object.assign(Object.assign(Object.assign(Object.assign({ payeeID: payeeID, paymentAccount: Object.assign(Object.assign({}, (id && { id: id })), { accountNumber: accountNumber, routingNumber: routingNumber, accountType: accountType }) }, (schedule.paymentService &&
                schedule.paymentService.service && { paymentServiceType: schedule.paymentService.service.paymentServiceType })), { amount: {
                    amount: amount.amount.replace(this.decimalSeparator, '.'),
                    currencyCode: amount.currency,
                }, paymentDate: this.toShortISODate(schedule.startDate) }), (memo && { paymentMemo: memo })), (overnightDeliveryAddress && {
                overnightDeliveryAddress: Object.assign({ address1: overnightDeliveryAddress.address1, state: overnightDeliveryAddress.state, city: overnightDeliveryAddress.city, postalCode: overnightDeliveryAddress.postalCode }, (overnightDeliveryAddress.address2 && { address2: overnightDeliveryAddress.address2 })),
            }));
        };
        BillpayPaymentDataService.prototype.toRecurringPaymentRequest = function (_a) {
            var payeeID = _a.payeeTo.id, _b = _a.accountFrom, accountNumber = _b.accountNumber, routingNumber = _b.routingNumber, accountType = _b.accountType, id = _b.id, amount = _a.amount, schedule = _a.schedule, memo = _a.memo;
            return Object.assign(Object.assign(Object.assign(Object.assign({ payeeID: payeeID, paymentAccount: Object.assign(Object.assign({}, (id && { id: id })), { accountNumber: accountNumber, routingNumber: routingNumber, accountType: accountType }), amount: {
                    amount: amount.amount.replace(this.decimalSeparator, '.'),
                    currencyCode: amount.currency,
                } }, (memo && { paymentMemo: memo })), { paymentDate: this.toShortISODate(schedule.startDate) }), (schedule.repeat && { numberOfInstances: schedule.repeat })), { frequency: schedule.frequency, paymentScheduledAlert: schedule.alertPendingCheckbox, paymentSentAlert: schedule.alertSentCheckbox, modelExpirationAlert: schedule.alertLastPendingCheckbox });
        };
        return BillpayPaymentDataService;
    }());
    /** @nocollapse */ BillpayPaymentDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentDataService, deps: [{ token: i1__namespace.BillPayPaymentsService }, { token: i1__namespace.BillPayAccountsService }, { token: i1__namespace.BillPayPayeesSummaryService }, { token: i0.LOCALE_ID }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ BillpayPaymentDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentDataService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentDataService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i1__namespace.BillPayPaymentsService }, { type: i1__namespace.BillPayAccountsService }, { type: i1__namespace.BillPayPayeesSummaryService }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.LOCALE_ID]
                        }] }];
        } });

    var BillpayEnrolmentComponent = /** @class */ (function () {
        function BillpayEnrolmentComponent(billpayEnrolmentService, cd, notificationService) {
            this.billpayEnrolmentService = billpayEnrolmentService;
            this.cd = cd;
            this.notificationService = notificationService;
            this.enrolmentFailed = false;
            this.loading = false;
            this.notificationHeaderSuccessTemplate = '';
            this.notificationHeaderErrorTemplate = '';
        }
        BillpayEnrolmentComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.loading = true;
            this.billpayEnrolmentService
                .isEnrolled()
                .pipe(operators.first())
                .subscribe(function (isEnrolled) {
                if (isEnrolled) {
                    _this.loading = false;
                    _this.redirectUser();
                }
                else {
                    _this.enrolUser();
                }
            }, function () {
                _this.onEnrolFail();
                _this.cd.markForCheck();
            });
        };
        BillpayEnrolmentComponent.prototype.enrolUser = function () {
            var _this = this;
            this.loading = true;
            this.enrolmentFailed = false;
            this.billpayEnrolmentService
                .enrolUser()
                .pipe(operators.first())
                .subscribe(function (isEnrolled) {
                if (isEnrolled) {
                    _this.onEnrolSuccess();
                }
                else {
                    _this.onEnrolFail();
                }
                _this.cd.markForCheck();
            });
        };
        BillpayEnrolmentComponent.prototype.onEnrolSuccess = function () {
            this.loading = false;
            this.notificationService.showNotification({
                header: this.notificationHeaderSuccessTemplate,
                message: '',
                modifier: 'success',
                ttl: this.notificationDismissTime,
            });
            this.redirectUser();
        };
        BillpayEnrolmentComponent.prototype.onEnrolFail = function () {
            this.loading = false;
            this.enrolmentFailed = true;
            this.notificationService.showNotification({
                header: this.notificationHeaderErrorTemplate,
                message: '',
                modifier: 'error',
                ttl: this.notificationDismissTime,
            });
        };
        BillpayEnrolmentComponent.prototype.redirectUser = function () {
            var _this = this;
            this.billpayEnrolmentService.previousRoute.pipe(operators.first()).subscribe(function (route) {
                _this.billpayEnrolmentService.redirectUser(route || '');
            });
        };
        return BillpayEnrolmentComponent;
    }());
    /** @nocollapse */ BillpayEnrolmentComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEnrolmentComponent, deps: [{ token: BillpayEnrolmentService }, { token: i0__namespace.ChangeDetectorRef }, { token: i2__namespace$1.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ BillpayEnrolmentComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BillpayEnrolmentComponent, selector: "bb-billpay-enrolment", inputs: { notificationDismissTime: "notificationDismissTime" }, viewQueries: [{ propertyName: "notificationHeaderSuccessTemplate", first: true, predicate: ["successHeader"], descendants: true }, { propertyName: "notificationHeaderErrorTemplate", first: true, predicate: ["errorHeader"], descendants: true }], ngImport: i0__namespace, template: "<div class=\"card card-lg\">\n  <div class=\"card-body\">\n    <div *ngIf=\"loading\">\n      <bb-loading-indicator-ui\n        i18n-text=\"\n          Enrolling in the bill pay service...|Enrolment Widget enrolling text@@bb-billpay-enrolment.enrolling.text\"\n        text=\"Enrolling in the bill pay service...\"\n        loaderSize=\"lg\"\n      ></bb-loading-indicator-ui>\n    </div>\n\n    <div *ngIf=\"enrolmentFailed\">\n      <div class=\"bb-state-container\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconColor=\"danger\"\n          iconModifier=\"error-outline\"\n          subtitle=\"Try enrolling again or contact support\"\n          i18n-subtitle=\"\n            Try enrolling again or contact support|Enrolment Widget failure\n            subtitle@@bb-billpay-enrolment.failure.subtitle\"\n          title=\"Enrolment failed\"\n          i18n-title=\"Enrolment failed|Enrolment Widget failure title@@bb-billpay-enrolment.failure.title\"\n        >\n        </bb-empty-state-ui>\n        <div class=\"bb-state-container__footer\">\n          <button\n            bbButton\n            data-role=\"button-enrolment-retry\"\n            (click)=\"enrolUser()\"\n            i18n=\"Try enrolling again|Enrolment Widget Try enrolling again button@@bb-billpay-enrolment.button.tryAgain\"\n          >\n            Try enrolling again\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #successHeader>\n  <span i18n=\"Enrolment successful|Enrolment successful message@@b-billpay-enrolment.message.successful\"\n    >Enrolment successful</span\n  >\n</ng-template>\n\n<ng-template #errorHeader>\n  <span i18n=\"Enrolment failed|Enrolment failed message@@b-billpay-enrolment.message.failed\">Enrolment failed</span>\n</ng-template>\n", components: [{ type: i3__namespace.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i4__namespace.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i4__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace$1.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEnrolmentComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-enrolment',
                        templateUrl: './billpay-enrolment.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: BillpayEnrolmentService }, { type: i0__namespace.ChangeDetectorRef }, { type: i2__namespace$1.NotificationService }]; }, propDecorators: { notificationDismissTime: [{
                    type: i0.Input
                }], notificationHeaderSuccessTemplate: [{
                    type: i0.ViewChild,
                    args: ['successHeader']
                }], notificationHeaderErrorTemplate: [{
                    type: i0.ViewChild,
                    args: ['errorHeader']
                }] } });

    var BillpayPaymentReviewCardComponent = /** @class */ (function () {
        /** @internal */
        function BillpayPaymentReviewCardComponent(scheduleService) {
            this.scheduleService = scheduleService;
            /**
             * Whether the account number should be masked. Defaults to true.
             */
            this.accountNumberMask = true;
        }
        Object.defineProperty(BillpayPaymentReviewCardComponent.prototype, "totalAmount", {
            get: function () {
                var fee = Number(this.paymentReview && this.paymentReview.fee && this.paymentReview.fee.amount) || 0;
                var amount = Number(this.paymentReview && this.paymentReview.amount && this.paymentReview.amount.amount) || 0;
                return fee + amount;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPaymentReviewCardComponent.prototype, "accountNumberFormatConfig", {
            get: function () {
                return this.accountNumberMask ? accountNumberMaskedFormat : accountNumberFullFormat;
            },
            enumerable: false,
            configurable: true
        });
        BillpayPaymentReviewCardComponent.prototype.getEndDate = function (paymentDate, numberOfInstances, frequency) {
            return this.scheduleService.estimatedEndDate(paymentDate, frequency, numberOfInstances);
        };
        return BillpayPaymentReviewCardComponent;
    }());
    /** @nocollapse */ BillpayPaymentReviewCardComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentReviewCardComponent, deps: [{ token: BillpayPaymentScheduleService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ BillpayPaymentReviewCardComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BillpayPaymentReviewCardComponent, selector: "bb-billpay-payment-review-card", inputs: { paymentReview: "paymentReview", accountNumberMask: "accountNumberMask", frequencyLabel: "frequencyLabel" }, ngImport: i0__namespace, template: "<section class=\"bb-block bb-block--xl\">\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      data-role=\"from-title\"\n      headingClasses=\"h3\"\n      headingType=\"h2\"\n      heading=\"From\"\n      i18n-heading=\"From section title|Label for group of data related to the account@@billpay-payment-review-card.from\"\n    >\n    </bb-header-ui>\n  </div>\n  <ng-container *ngIf=\"paymentReview?.paymentAccount?.accountNickName\">\n    <div\n      class=\"bb-text-bold\"\n      i18n=\"From account name title|Label for account name in from group@@billpay-payment-review-card.from.account-name\"\n      data-role=\"account-name-label\"\n    >\n      Account name\n    </div>\n    <div class=\"bb-block bb-block--md\" data-role=\"account-name\">\n      {{ paymentReview?.paymentAccount?.accountNickName }}\n    </div>\n  </ng-container>\n  <div\n    i18n=\"From account type title|Label for account type in from group@@billpay-payment-review-card.from.account-type\"\n    class=\"bb-text-bold\"\n    data-role=\"account-type-label\"\n  >\n    Account type\n  </div>\n  <div\n    data-role=\"account-type\"\n    class=\"bb-block bb-block--md\"\n    i18n=\"Payment account types@@billpay-payment-review-card.payment.account-types\"\n  >\n    {paymentReview?.paymentAccount?.accountType, select, CD_ACCOUNT {CD account} CHECKING_ACCOUNT {Checking account}\n    SAVINGS_ACCOUNT {Savings account} LOAN_ACCOUNT {Loan account} OTHER_ACCOUNT {Other account}}\n  </div>\n  <div\n    i18n=\"\n      From account number title|Label for account number in from group@@billpay-payment-review-card.from.account-number\"\n    class=\"bb-text-bold\"\n    data-role=\"account-number-label\"\n  >\n    Account number\n  </div>\n  <div data-role=\"account-number\">\n    {{ paymentReview?.paymentAccount?.accountNumber | paymentCardNumber: accountNumberFormatConfig }}\n  </div>\n</section>\n\n<section class=\"bb-block bb-block--xl\">\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h2\"\n      headingClasses=\"h3\"\n      heading=\"To\"\n      i18n-heading=\"\n        To section title|Label for group of data related to the payee account@@billpay-payment-review-card.to\"\n      data-role=\"to-title\"\n    >\n    </bb-header-ui>\n  </div>\n  <div\n    i18n=\"To payee name title|Label for payee name in to group@@billpay-payment-review-card.to.payee-name\"\n    class=\"bb-text-bold\"\n    data-role=\"payee-name-label\"\n  >\n    Payee name\n  </div>\n  <div data-role=\"payee-name\" class=\"bb-block bb-block--md\">\n    <span>{{\n      (paymentReview?.payeeNickName && paymentReview?.payeeNickName + \" (\" + paymentReview?.payeeName + \")\") ||\n        paymentReview?.payeeName\n    }}</span>\n  </div>\n  <ng-container *ngIf=\"paymentReview?.payeeAccountNumber\">\n    <div\n      data-role=\"payee-account-number-label\"\n      i18n=\"\n        To payee account number title|Label for payee account number in to\n        group@@billpay-payment-review-card.to.payee-account-number\"\n      class=\"bb-text-bold\"\n    >\n      Payee account number\n    </div>\n    <div data-role=\"payee-account-number\" class=\"bb-block bb-block--md\">\n      {{ paymentReview?.payeeAccountNumber | paymentCardNumber: accountNumberFormatConfig }}\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"paymentReview?.address as payeeAddress\">\n    <div\n      data-role=\"payee-address-label\"\n      i18n=\"To payee address title|Label for payee address in to group@@billpay-payment-review-card.to.payee-address\"\n      class=\"bb-text-bold\"\n    >\n      Payee address\n    </div>\n    <div data-role=\"payee-address\" class=\"bb-block bb-block--md\">\n      <div>{{ payeeAddress?.address1 }}</div>\n      <div *ngIf=\"payeeAddress?.address2\">{{ payeeAddress?.address2 }}</div>\n      <div>{{ payeeAddress?.city }}&nbsp;{{ payeeAddress?.state }}&nbsp;{{ payeeAddress?.postalCode }}</div>\n    </div>\n  </ng-container>\n</section>\n\n<section>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h3\"\n      heading=\"Payment details\"\n      i18n-heading=\"\n        Payment details section title|Label for group of data related to the payment\n        details@@billpay-payment-review-card.details\"\n      data-role=\"payment-details-title\"\n    >\n    </bb-header-ui>\n  </div>\n  <div\n    i18n=\"Payment details amount|Label for amount in details group@@billpay-payment-review-card.details.amount\"\n    class=\"bb-text-bold\"\n    data-role=\"amount-label\"\n  >\n    Amount\n  </div>\n  <div class=\"bb-block bb-block--md\">\n    <bb-amount-ui\n      data-role=\"amount\"\n      [amount]=\"paymentReview?.amount?.amount\"\n      [currency]=\"paymentReview?.amount?.currencyCode\"\n    >\n    </bb-amount-ui>\n  </div>\n  <ng-container *ngIf=\"paymentReview?.fee\">\n    <div\n      i18n=\"Payment details fee|Label for fee in details group@@billpay-payment-review-card.details.fee\"\n      class=\"bb-text-bold\"\n      data-role=\"fee-label\"\n    >\n      Expedited payment fee\n    </div>\n    <div data-role=\"fee-amount\" class=\"bb-block bb-block--md\">\n      {{ paymentReview?.fee?.amount | currency: paymentReview?.fee?.currencyCode:\"symbol-narrow\" }}\n    </div>\n    <div\n      i18n=\"\n        Payment details total amount|Label for total amount in details\n        group@@billpay-payment-review-card.details.total.amount\"\n      class=\"bb-text-bold\"\n      data-role=\"total-amount-label\"\n    >\n      Total amount\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-amount-ui data-role=\"total-amount\" [amount]=\"totalAmount\" [currency]=\"paymentReview?.amount?.currencyCode\">\n      </bb-amount-ui>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"paymentReview?.paymentMemo\">\n    <div\n      i18n=\"Payment details memo|Label for memo in details group@@billpay-payment-review-card.details.memo\"\n      class=\"bb-text-bold\"\n      data-role=\"memo-label\"\n    >\n      Memo\n    </div>\n    <div class=\"bb-block bb-block--md\" data-role=\"memo\">{{ paymentReview?.paymentMemo }}</div>\n  </ng-container>\n  <div\n    i18n=\"\n      Payment details frequency|Label for frequency in details\n      group@@billpay-payment-review-card.details.frequency-label\"\n    class=\"bb-text-bold\"\n    data-role=\"frequency-label\"\n  >\n    Frequency\n  </div>\n\n  <ng-container *ngIf=\"!paymentReview?.recurring; else recurringFrequency\">\n    <div\n      data-role=\"frequency\"\n      class=\"bb-block bb-block--md\"\n      i18n=\"Payment details frequency|Label for frequency once@@billpay-payment-review-card.details.frequency.once\"\n    >\n      Once\n    </div>\n    <div\n      i18n=\"\n        Payment details deliver by|Label for deliver by in details\n        group@@billpay-payment-review-card.details.deliver-by-label\"\n      class=\"bb-text-bold\"\n      data-role=\"deliver-by\"\n    >\n      Deliver payment by\n    </div>\n    <div data-role=\"deliver-date\" class=\"bb-block bb-block--md\">\n      {{ paymentReview?.paymentDate | date: \"fullDate\" }}\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"paymentReview?.overnightDeliveryAddress as address\">\n    <div\n      data-role=\"overnight-address-label\"\n      i18n=\"\n        Payment overnight address|Label for overnight\n        address@@billpay-payment-review-card.details.overnight-address.label\"\n      class=\"bb-text-bold\"\n    >\n      Overnight check address\n    </div>\n    <div data-role=\"overnight-address\" class=\"bb-block bb-block--md\">\n      <div>{{ address?.address1 }}</div>\n      <div *ngIf=\"address?.address2\">{{ address?.address2 }}</div>\n      <div>{{ address?.city }}&nbsp;{{ address?.state }}&nbsp;{{ address?.postalCode }}</div>\n    </div>\n  </ng-container>\n\n  <ng-template #recurringFrequency>\n    <div data-role=\"frequency\" class=\"bb-block bb-block--md\">\n      <ng-container *ngIf=\"frequencyLabel; else defaultLabels\">{{ frequencyLabel }}</ng-container>\n      <!-- Remove default labels after journey migration phase 2 -->\n      <ng-template #defaultLabels>\n        <span\n          i18n=\"\n            Payment details frequency|Label for frequency in details\n            group@@billpay-payment-review-card.details.frequency.list\"\n        >\n          {paymentReview?.frequency, select, ONCE {Once} WEEKLY {Weekly} EVERY_2_WEEKS {Every two weeks} MONTHLY\n          {Monthly} EVERY_4_WEEKS {Every for weeks} TWICE_A_MONTH {Semi monthly} EVERY_2_MONTHS {Every two months}\n          EVERY_3_MONTHS { Every three months} EVERY_6_MONTHS {Every six months} ANNUALLY {Annually}}\n        </span>\n      </ng-template>\n    </div>\n    <div\n      i18n=\"\n        Payment details deliver by|Label for deliver by in details\n        group@@billpay-payment-review-card.details.amount.other\"\n      class=\"bb-text-bold\"\n      data-role=\"deliver-by\"\n    >\n      Deliver first payment by\n    </div>\n    <div data-role=\"deliver-date\" class=\"bb-block bb-block--md\">\n      {{ paymentReview?.paymentDate | date: \"fullDate\" }}\n    </div>\n    <div\n      i18n=\"Payment details ending|Label for ending in details group@@billpay-payment-review-card.details.ending-label\"\n      class=\"bb-text-bold\"\n      data-role=\"ending-label\"\n    >\n      Ending\n    </div>\n    <div data-role=\"ending\" class=\"bb-block bb-block--md\">\n      <span\n        *ngIf=\"paymentReview?.numberOfInstances; else neverEnding\"\n        i18n=\"Payment details ending|Label for ending in details group@@billpay-payment-review-card.details.ending\"\n        >After { paymentReview?.numberOfInstances, plural, =1 {{{paymentReview?.numberOfInstances}} payment } other\n        {{{paymentReview?.numberOfInstances}} payments } } (estimated\n        {{\n          getEndDate(paymentReview?.paymentDate, paymentReview?.numberOfInstances, paymentReview?.frequency)\n            | date: \"longDate\"\n        }})</span\n      >\n      <ng-template #neverEnding>\n        <span\n          i18n=\"Payment details ending|Label for never ending payment@@billpay-payment-review-card.details.ending.never\"\n          >Never\n        </span>\n      </ng-template>\n    </div>\n    <div\n      *ngIf=\"\n        paymentReview?.paymentScheduledAlert || paymentReview?.paymentSentAlert || paymentReview?.modelExpirationAlert\n      \"\n      i18n=\"Payment details notify me|Label for notify me in details group@@billpay-payment-review-card.details.notify\"\n      class=\"bb-text-bold\"\n      data-role=\"notify-label\"\n    >\n      Notify me\n    </div>\n    <div>\n      <ul>\n        <li\n          *ngIf=\"paymentReview?.paymentScheduledAlert\"\n          i18n=\"\n            Payment details when a payment is pending|Label for when a payment is pending in details\n            group@@billpay-payment-review-card.details.notify.pending\"\n          data-role=\"alertPendingCheckbox\"\n        >\n          When a payment is pending\n        </li>\n        <li\n          *ngIf=\"paymentReview?.paymentSentAlert\"\n          i18n=\"\n            Payment details when a payment has been sent|Label for when a payment has been sent in details\n            group@@billpay-payment-review-card.details.notify.sent\"\n          data-role=\"alertSentCheckbox\"\n        >\n          When a payment has been sent\n        </li>\n        <li\n          *ngIf=\"paymentReview?.modelExpirationAlert\"\n          i18n=\"\n            Payment details when the last payment is pending|Label for when the last payment is pending in details\n            group@@billpay-payment-review-card.details.notify.pending.last\"\n          data-role=\"alertLastPendingCheckbox\"\n        >\n          When the last payment is pending\n        </li>\n      </ul>\n    </div>\n  </ng-template>\n</section>\n", components: [{ type: i2__namespace$2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i3__namespace$2.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i4__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "paymentCardNumber": i5__namespace.PaymentCardNumberPipe, "currency": i4__namespace$1.CurrencyPipe, "date": i4__namespace$1.DatePipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPaymentReviewCardComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payment-review-card',
                        templateUrl: './billpay-payment-review-card.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: BillpayPaymentScheduleService }]; }, propDecorators: { paymentReview: [{
                    type: i0.Input
                }], accountNumberMask: [{
                    type: i0.Input
                }], frequencyLabel: [{
                    type: i0.Input
                }] } });

    var BillpayAddressFormComponent = /** @class */ (function () {
        /** @internal */
        function BillpayAddressFormComponent(controlContainer) {
            this.controlContainer = controlContainer;
            this.states = states;
            this.address1RequiredId = BillpayUtilityService.generateId();
            this.address1MaxLengthId = BillpayUtilityService.generateId();
            this.address2MaxLengthId = BillpayUtilityService.generateId();
            this.cityRequiredId = BillpayUtilityService.generateId();
            this.cityMaxlengthId = BillpayUtilityService.generateId();
            this.stateLengthId = BillpayUtilityService.generateId();
            this.postalCodeRequiredId = BillpayUtilityService.generateId();
            this.postalCodePatternId = BillpayUtilityService.generateId();
            this.labelId = BillpayUtilityService.generateId();
        }
        BillpayAddressFormComponent.prototype.ngAfterContentInit = function () {
            this.formGroup = this.controlContainer.control;
        };
        BillpayAddressFormComponent.prototype.hasError = function (controlName, errorName) {
            var control = this.formGroup && this.formGroup.get(controlName);
            return !!control && control.hasError(errorName) && control.touched;
        };
        return BillpayAddressFormComponent;
    }());
    /** @nocollapse */ BillpayAddressFormComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayAddressFormComponent, deps: [{ token: i1__namespace$1.ControlContainer }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ BillpayAddressFormComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BillpayAddressFormComponent, selector: "bb-billpay-address-form", ngImport: i0__namespace, template: "<ng-container [formGroup]=\"formGroup\">\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--md\">\n      <bb-input-text-ui\n        formControlName=\"address1\"\n        data-role=\"address1-input\"\n        label=\"Address line 1\"\n        i18n-label=\"label|Label for Address line 1 field@@billpay-manual-payee-form.address-line-1-label\"\n        [aria-describedby]=\"[address1RequiredId, address1MaxLengthId].join(' ')\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('address1', 'required')\"\n      i18n=\"error text|Address line 1 is required error text@@billpay-manual-payee-form.error.address1-required\"\n      data-role=\"address1-error-required\"\n      [messageId]=\"address1RequiredId\"\n    >\n      Please enter a street number and name\n    </bb-input-validation-message-ui>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('address1', 'maxlength')\"\n      i18n=\"error text|Address line max length error text@@billpay-manual-payee-form.error.address-maxlength\"\n      data-role=\"address1-error-maxlength\"\n      [messageId]=\"address1MaxLengthId\"\n    >\n      Address may not be over forty characters\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--md\">\n      <label class=\"bb-label\" data-role=\"address2-input-label\" [attr.id]=\"'bb-address-label' + labelId\">\n        <span i18n=\"label|Label for Address line 2 (optional) field@@billpay-manual-payee-form.address-line-2-label\"\n          >Address line 2</span\n        >\n        <span\n          class=\"bb-text-default bb-text-support\"\n          i18n=\"label optional|Label for optional text@@billpay-manual-payee-form.address-line-2-label-helper\"\n        >\n          (Optional)</span\n        >\n      </label>\n      <bb-input-text-ui\n        formControlName=\"address2\"\n        data-role=\"address2-input\"\n        [aria-labelledby]=\"'bb-address-label' + labelId\"\n        [aria-describedby]=\"address2MaxLengthId\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('address2', 'maxlength')\"\n      i18n=\"error text|Address line max length error text@@billpay-manual-payee-form.error.address-maxlength\"\n      data-role=\"address2-error-maxlength\"\n      [messageId]=\"address2MaxLengthId\"\n    >\n      Address may not be over forty characters\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--sm\">\n      <bb-input-text-ui\n        formControlName=\"city\"\n        data-role=\"city-input\"\n        label=\"City\"\n        i18n-label=\"label|Label for city field@@billpay-manual-payee-form.city-label\"\n        [aria-describedby]=\"[cityRequiredId, cityMaxlengthId].join(' ')\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('city', 'required')\"\n      i18n=\"error text|City is required error text@@billpay-manual-payee-form.error.city-required\"\n      data-role=\"city-error-required\"\n      [messageId]=\"cityRequiredId\"\n    >\n      Please enter a City\n    </bb-input-validation-message-ui>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('city', 'maxlength')\"\n      i18n=\"error text|City max length error text@@billpay-manual-payee-form.error.city-maxlength\"\n      data-role=\"city-error-maxlength\"\n      [messageId]=\"cityMaxlengthId\"\n    >\n      City may not be over thirty-two characters\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--xs\">\n      <bb-dropdown-single-select-ui\n        label=\"State\"\n        i18n-label=\"label|Label for state field@@billpay-manual-payee-form.state-label\"\n        [options]=\"states\"\n        formControlName=\"state\"\n        data-role=\"state-select\"\n        [aria-describedby]=\"stateLengthId\"\n      >\n      </bb-dropdown-single-select-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('state', 'required')\"\n      i18n=\"error text|State is required error text@@billpay-manual-payee-form.error.state-required\"\n      data-role=\"state-error-required\"\n      [messageId]=\"stateLengthId\"\n    >\n      Please enter a State\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--xs\">\n      <bb-input-text-ui\n        formControlName=\"postalCode\"\n        data-role=\"postal-code-input\"\n        label=\"ZIP Code\"\n        i18n-label=\"label|Label for ZIP code field@@billpay-manual-payee-form.zip-label\"\n        [aria-describedby]=\"[postalCodeRequiredId, postalCodePatternId].join(' ')\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('postalCode', 'required')\"\n      i18n=\"error text|Zip code is required error text@@billpay-manual-payee-form.error.zip-code-required\"\n      data-role=\"postal-code-error-required\"\n      [messageId]=\"postalCodeRequiredId\"\n    >\n      Please enter a Zip Code\n    </bb-input-validation-message-ui>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('postalCode', 'pattern')\"\n      i18n=\"error text|Zip code format error text@@billpay-manual-payee-form.error.zip-code-format\"\n      data-role=\"postal-code-error-pattern\"\n      [messageId]=\"postalCodePatternId\"\n    >\n      ZIP code should be 5 or 9 digits long\n    </bb-input-validation-message-ui>\n  </div>\n</ng-container>\n", components: [{ type: i2__namespace$3.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i3__namespace$3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i4__namespace$2.DropdownSingleSelectComponent, selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }], directives: [{ type: i1__namespace$1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayAddressFormComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-address-form',
                        templateUrl: './billpay-address-form.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.ControlContainer }]; } });

    var BillpayPayeeNavigateModalComponent = /** @class */ (function () {
        function BillpayPayeeNavigateModalComponent() {
            this.resolve = new i0.EventEmitter();
        }
        BillpayPayeeNavigateModalComponent.prototype.cancelModal = function () {
            this.resolve.emit(false);
        };
        BillpayPayeeNavigateModalComponent.prototype.confirmModal = function () {
            this.resolve.emit(true);
        };
        return BillpayPayeeNavigateModalComponent;
    }());
    /** @nocollapse */ BillpayPayeeNavigateModalComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPayeeNavigateModalComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ BillpayPayeeNavigateModalComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BillpayPayeeNavigateModalComponent, selector: "bb-billpay-payee-navigate-modal", outputs: { resolve: "resolve" }, ngImport: i0__namespace, template: "<bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"payee-navigate-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        data-role=\"payee-navigate-modal-header\"\n        headingType=\"h2\"\n        i18n-heading=\"Payee navigate modal header@@billpay.payee-navigate-modal.header\"\n        heading=\"Payee cannot be deleted\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span i18n=\"Payee navigate modal body@@billpay.payee-navigate-modal.body\" data-role=\"payee-navigate-modal-body\"\n        >This payee has upcoming payments which must be canceled before deleting.</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <button\n        bbButton\n        color=\"secondary\"\n        i18n=\"cancel modal button|Cancel navigate button@@billpay.payee-navigate-modal.cancel-button\"\n        (click)=\"cancelModal()\"\n        data-role=\"payee-navigate-modal-cancel-button\"\n      >\n        Keep payee\n      </button>\n      <button\n        bbButton\n        color=\"primary\"\n        i18n=\"confirm modal button|Confirm navigate button@@billpay.payee-navigate-modal.confirm-button\"\n        (click)=\"confirmModal()\"\n        data-role=\"payee-navigate-modal-confirm-button\"\n      >\n        View scheduled payments\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$2.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$2.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2__namespace$2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$2.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$2.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$2.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1__namespace$2.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$2.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i3__namespace$1.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPayeeNavigateModalComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payee-navigate-modal',
                        templateUrl: './billpay-payee-navigate-modal.component.html',
                    }]
            }], propDecorators: { resolve: [{
                    type: i0.Output
                }] } });

    var BillpayPayeeDeleteModalComponent = /** @class */ (function () {
        function BillpayPayeeDeleteModalComponent() {
            this.resolve = new i0.EventEmitter();
        }
        BillpayPayeeDeleteModalComponent.prototype.cancelModal = function () {
            this.resolve.emit(false);
        };
        BillpayPayeeDeleteModalComponent.prototype.confirmModal = function () {
            this.resolve.emit(true);
        };
        return BillpayPayeeDeleteModalComponent;
    }());
    /** @nocollapse */ BillpayPayeeDeleteModalComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPayeeDeleteModalComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ BillpayPayeeDeleteModalComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BillpayPayeeDeleteModalComponent, selector: "bb-billpay-payee-delete-modal", outputs: { resolve: "resolve" }, ngImport: i0__namespace, template: "<bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"payee-delete-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        data-role=\"payee-delete-modal-header\"\n        headingType=\"h2\"\n        i18n-heading=\"Payee delete modal header@@billpay.payee-delete-modal.header\"\n        heading=\"Delete payee?\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span i18n=\"Payee delete modal body@@billpay.payee-delete-modal.body\" data-role=\"payee-delete-modal-body\"\n        >Are you sure you want to delete this payee? This action cannot be undone.</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <button\n        bbButton\n        color=\"secondary\"\n        i18n=\"cancel modal button|Cancel payee delete button@@billpay.payee-delete-modal.cancel-button\"\n        (click)=\"cancelModal()\"\n        data-role=\"payee-delete-modal-cancel-button\"\n      >\n        Keep payee\n      </button>\n      <button\n        bbButton\n        color=\"danger\"\n        i18n=\"confirm modal button|Confirm payee delete button@@billpay.payee-delete-modal.confirm-button\"\n        (click)=\"confirmModal()\"\n        data-role=\"payee-delete-modal-confirm-button\"\n      >\n        Delete payee\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$2.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$2.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2__namespace$2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$2.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$2.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$2.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1__namespace$2.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$2.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i3__namespace$1.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPayeeDeleteModalComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payee-delete-modal',
                        templateUrl: './billpay-payee-delete-modal.component.html',
                    }]
            }], propDecorators: { resolve: [{
                    type: i0.Output
                }] } });

    var defaultDeleteParams = {
        cancelPendingPayments: false,
    };
    var BillpayPayeeDataService = /** @class */ (function () {
        /** @internal */
        function BillpayPayeeDataService(data, payverisData, ebillsData, payeesSummaryData) {
            this.data = data;
            this.payverisData = payverisData;
            this.ebillsData = ebillsData;
            this.payeesSummaryData = payeesSummaryData;
            this.selectedDeletePayeeSource = new rxjs.BehaviorSubject(undefined);
            this.selectedDeleteEbillsSource = new rxjs.BehaviorSubject(undefined);
            this.reload = new rxjs.BehaviorSubject(undefined);
            this.buttonsDisabled = false;
            this.currentPayeesLoadingState = '';
            this.iterablePayeeSummaryList = [];
        }
        BillpayPayeeDataService.prototype.deletePayee = function (id, electronic) {
            return electronic
                ? this.data.deleteElectronicPayeeById(Object.assign(Object.assign({}, defaultDeleteParams), { id: id }))
                : this.data.deletePayeeById(Object.assign(Object.assign({}, defaultDeleteParams), { id: id }));
        };
        BillpayPayeeDataService.prototype.resolveErrors = function (id) {
            var resolveErrorsRequest = {
                payeeID: id,
            };
            return this.payverisData.postBillPayPayverisResolveEbillErrors({
                billPayPayverisResolveEbillErrorsPostRequestBody: resolveErrorsRequest,
            });
        };
        BillpayPayeeDataService.prototype.deleteEbills = function (id) {
            return this.ebillsData.deleteBillPayEbills({ id: id });
        };
        BillpayPayeeDataService.prototype.getPayees = function () {
            var _this_1 = this;
            return this.reload.asObservable().pipe(operators.tap(function () { return (_this_1.currentPayeesLoadingState = 'loading'); }), operators.switchMap(function () { return _this_1.payeesSummaryData.getBillPayPayeesSummary().pipe(operators.map(groupByEbills)); }), operators.tap(function (data) { return sortByPayeeGroup(data); }), operators.tap(function (data) { return _this_1.createIterablePayeeSummaryList(data); }), operators.tap(function () {
                _this_1.currentPayeesLoadingState = '';
            }), operators.catchError(function () {
                _this_1.currentPayeesLoadingState = 'error';
                return rxjs.of(undefined);
            }));
        };
        BillpayPayeeDataService.prototype.createIterablePayeeSummaryList = function (list) {
            this.iterablePayeeSummaryList = [];
            for (var i = 0; i < list.ebillsEnabled.length; i++) {
                var summary = list.ebillsEnabled[i];
                this.iterablePayeeSummaryList.push(summary);
            }
            for (var j = 0; j < list.ebillsNotEnabled.length; j++) {
                var summary = list.ebillsNotEnabled[j];
                this.iterablePayeeSummaryList.push(summary);
            }
        };
        BillpayPayeeDataService.prototype.reloadPayees = function () {
            this.reload.next(undefined);
        };
        BillpayPayeeDataService.prototype.disableWidgetButtons = function () {
            this.buttonsDisabled = true;
        };
        BillpayPayeeDataService.prototype.enableWidgetButtons = function () {
            this.buttonsDisabled = false;
        };
        BillpayPayeeDataService.prototype.updateSelectedDeletePayee = function (payee) {
            this.selectedDeletePayeeSource.next(payee);
        };
        BillpayPayeeDataService.prototype.updateSelectedDeleteEbills = function (payee) {
            this.selectedDeleteEbillsSource.next(payee);
        };
        Object.defineProperty(BillpayPayeeDataService.prototype, "selectedDeletePayee", {
            get: function () {
                return this.selectedDeletePayeeSource.asObservable();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeDataService.prototype, "selectedDeleteEbills", {
            get: function () {
                return this.selectedDeleteEbillsSource.asObservable();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeDataService.prototype, "payeesLoadingState", {
            get: function () {
                return this.currentPayeesLoadingState;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeDataService.prototype, "areButtonsDisabled", {
            get: function () {
                return this.buttonsDisabled;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeDataService.prototype, "numberOfPayees", {
            get: function () {
                return this.iterablePayeeSummaryList.length;
            },
            enumerable: false,
            configurable: true
        });
        BillpayPayeeDataService.prototype.payeesLoaded = function () {
            var _this = this;
            return new Promise(function (resolve) {
                (function waitUntilLoaded() {
                    if (_this.currentPayeesLoadingState === '')
                        return resolve(true);
                    setTimeout(waitUntilLoaded, 100);
                })();
            });
        };
        BillpayPayeeDataService.prototype.findPayeeSummaryById = function (payeeId) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.payeesLoaded()];
                        case 1:
                            if (_a.sent()) {
                                return [2 /*return*/, this.iterablePayeeSummaryList.find(function (summary) { return summary.id === payeeId; })];
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        return BillpayPayeeDataService;
    }());
    /** @nocollapse */ BillpayPayeeDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPayeeDataService, deps: [{ token: i1__namespace.BillPayPayeesService }, { token: i1__namespace.BillPayPayverisService }, { token: i1__namespace.BillPayEbillsService }, { token: i1__namespace.BillPayPayeesSummaryService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ BillpayPayeeDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPayeeDataService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPayeeDataService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.BillPayPayeesService }, { type: i1__namespace.BillPayPayverisService }, { type: i1__namespace.BillPayEbillsService }, { type: i1__namespace.BillPayPayeesSummaryService }]; } });
    function groupByEbills(data) {
        var payeeSummaries = data.payeeSummaries;
        return payeeSummaries.reduce(function (grouped, payeeSummary) {
            grouped[payeeSummary.ebill && payeeSummary.ebill.enabled ? 'ebillsEnabled' : 'ebillsNotEnabled'].push(payeeSummary);
            return grouped;
        }, {
            ebillsEnabled: [],
            ebillsNotEnabled: [],
        });
    }
    function sortByPayeeGroup(data) {
        sortPayeeSummaries(data.ebillsEnabled);
        sortPayeeSummaries(data.ebillsNotEnabled);
    }
    function sortPayeeSummaries(summaries) {
        summaries.sort(function (a, b) { return getPayeeDisplayName(a.name, a.nickName).toLowerCase() > getPayeeDisplayName(b.name, b.nickName).toLowerCase()
            ? 1
            : -1; });
    }
    function getPayeeDisplayName(payeeName, payeeNickName) {
        return payeeNickName || payeeName;
    }

    var BillpayEbillsDeleteModalComponent = /** @class */ (function () {
        /** @internal */
        function BillpayEbillsDeleteModalComponent(payeeListWidgetService) {
            this.payeeListWidgetService = payeeListWidgetService;
            this.resolve = new i0.EventEmitter();
        }
        Object.defineProperty(BillpayEbillsDeleteModalComponent.prototype, "selectedDeleteEbills$", {
            get: function () {
                return this.payeeListWidgetService.selectedDeleteEbills;
            },
            enumerable: false,
            configurable: true
        });
        BillpayEbillsDeleteModalComponent.prototype.cancelModal = function () {
            this.resolve.emit(false);
        };
        BillpayEbillsDeleteModalComponent.prototype.confirmModal = function () {
            this.resolve.emit(true);
        };
        return BillpayEbillsDeleteModalComponent;
    }());
    /** @nocollapse */ BillpayEbillsDeleteModalComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEbillsDeleteModalComponent, deps: [{ token: BillpayPayeeDataService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ BillpayEbillsDeleteModalComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BillpayEbillsDeleteModalComponent, selector: "bb-billpay-ebills-delete-modal", outputs: { resolve: "resolve" }, ngImport: i0__namespace, template: "<ng-container *ngIf=\"selectedDeleteEbills$ | async as payee\">\n  <bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"ebills-delete-modal\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          data-role=\"ebills-delete-modal-header\"\n          headingType=\"h2\"\n          i18n-heading=\"ebills delete modal header@@billpay.ebills-delete-modal.header\"\n          heading=\"Stop receiving eBills?\"\n        >\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span i18n=\"ebills delete modal body@@billpay.ebills-delete-modal.body\" data-role=\"ebills-delete-modal-body\"\n          >Are you sure you want to stop receiving eBills for the payee {{ payee?.nickName || payee?.name }}?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button\n          bbButton\n          color=\"secondary\"\n          i18n=\"cancel modal button|Cancel ebills delete button@@billpay.ebills-delete-modal.cancel-button\"\n          (click)=\"cancelModal()\"\n          data-role=\"ebills-delete-modal-cancel-button\"\n        >\n          Keep eBills\n        </button>\n        <button\n          bbButton\n          color=\"danger\"\n          i18n=\"confirm modal button|Confirm ebills delete button@@billpay.ebills-delete-modal.confirm-button\"\n          (click)=\"confirmModal()\"\n          data-role=\"ebills-delete-modal-confirm-button\"\n        >\n          Stop receiving eBills\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-container>\n", components: [{ type: i1__namespace$2.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$2.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2__namespace$2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$2.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$2.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i4__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$2.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1__namespace$2.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$2.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i3__namespace$1.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i4__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayEbillsDeleteModalComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-ebills-delete-modal',
                        templateUrl: './billpay-ebills-delete-modal.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: BillpayPayeeDataService }]; }, propDecorators: { resolve: [{
                    type: i0.Output
                }] } });

    var uiModules = [
        i3$1.ButtonModule,
        i3.LoadingIndicatorModule,
        i4$1.EmptyStateModule,
        i2$1.NotificationModule,
        i2$2.HeaderModule,
        i3$2.AmountModule,
        i5.PaymentCardNumberModule,
        i3$3.InputValidationMessageModule,
        i4$2.DropdownSingleSelectModule,
        i1$2.ModalModule,
        i2$3.InputTextModule,
        keyboardClickDirective.KeyboardClickModule,
    ];
    var services = [
        BillpayEnrolmentService,
        BillpayEnrolmentGuard,
        BillpayPaymentParserService,
        BillpayPaymentScheduleService,
        BillpayUtilityService,
        BillpayPaymentDataService,
    ];
    var components = [
        BillpayEnrolmentComponent,
        BillpayPaymentReviewCardComponent,
        BillpayAddressFormComponent,
        BillpayPayeeNavigateModalComponent,
        BillpayPayeeDeleteModalComponent,
        BillpayEbillsDeleteModalComponent,
    ];
    var BillpayJourneysCommonModule = /** @class */ (function () {
        function BillpayJourneysCommonModule() {
        }
        return BillpayJourneysCommonModule;
    }());
    /** @nocollapse */ BillpayJourneysCommonModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayJourneysCommonModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ BillpayJourneysCommonModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayJourneysCommonModule, declarations: [BillpayEnrolmentComponent,
            BillpayPaymentReviewCardComponent,
            BillpayAddressFormComponent,
            BillpayPayeeNavigateModalComponent,
            BillpayPayeeDeleteModalComponent,
            BillpayEbillsDeleteModalComponent], imports: [i4.CommonModule, i2.RouterModule, i1$1.ReactiveFormsModule, core.BackbaseCoreModule, i3$1.ButtonModule,
            i3.LoadingIndicatorModule,
            i4$1.EmptyStateModule,
            i2$1.NotificationModule,
            i2$2.HeaderModule,
            i3$2.AmountModule,
            i5.PaymentCardNumberModule,
            i3$3.InputValidationMessageModule,
            i4$2.DropdownSingleSelectModule,
            i1$2.ModalModule,
            i2$3.InputTextModule,
            keyboardClickDirective.KeyboardClickModule], exports: [BillpayEnrolmentComponent,
            BillpayPaymentReviewCardComponent,
            BillpayAddressFormComponent,
            BillpayPayeeNavigateModalComponent,
            BillpayPayeeDeleteModalComponent,
            BillpayEbillsDeleteModalComponent, i3$1.ButtonModule,
            i3.LoadingIndicatorModule,
            i4$1.EmptyStateModule,
            i2$1.NotificationModule,
            i2$2.HeaderModule,
            i3$2.AmountModule,
            i5.PaymentCardNumberModule,
            i3$3.InputValidationMessageModule,
            i4$2.DropdownSingleSelectModule,
            i1$2.ModalModule,
            i2$3.InputTextModule,
            keyboardClickDirective.KeyboardClickModule] });
    /** @nocollapse */ BillpayJourneysCommonModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayJourneysCommonModule, providers: __spreadArray([], __read(services)), imports: [__spreadArray([i4.CommonModule, i2.RouterModule, i1$1.ReactiveFormsModule, core.BackbaseCoreModule], __read(uiModules)), i3$1.ButtonModule,
            i3.LoadingIndicatorModule,
            i4$1.EmptyStateModule,
            i2$1.NotificationModule,
            i2$2.HeaderModule,
            i3$2.AmountModule,
            i5.PaymentCardNumberModule,
            i3$3.InputValidationMessageModule,
            i4$2.DropdownSingleSelectModule,
            i1$2.ModalModule,
            i2$3.InputTextModule,
            keyboardClickDirective.KeyboardClickModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayJourneysCommonModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: __spreadArray([], __read(components)),
                        imports: __spreadArray([i4.CommonModule, i2.RouterModule, i1$1.ReactiveFormsModule, core.BackbaseCoreModule], __read(uiModules)),
                        providers: __spreadArray([], __read(services)),
                        exports: __spreadArray(__spreadArray([], __read(components)), __read(uiModules)),
                    }]
            }] });

    var BillpayPayeeSummaryItemBaseComponent = /** @class */ (function () {
        /** @internal */
        function BillpayPayeeSummaryItemBaseComponent(dataService, dropdownButtonConfig) {
            this.dataService = dataService;
            this.dropdownButtonConfig = dropdownButtonConfig;
            this.RECURRING_PAYMENT = RECURRING_PAYMENT;
            this.ONE_OFF_PAYMENT = ONE_OFF_PAYMENT;
            this.ebillRetrieveErrorId = BillpayUtilityService.generateId();
            this.noEbillsDueId = BillpayUtilityService.generateId();
            this.ebillsAvailableId = BillpayUtilityService.generateId();
            this.recurringPaymentScheduledIdId = BillpayUtilityService.generateId();
            this.ebillPaymentScheduledId = BillpayUtilityService.generateId();
            this.ebillDueOnId = BillpayUtilityService.generateId();
            this.ebillSupportErrorId = BillpayUtilityService.generateId();
            this.ebillUserActionErrorId = BillpayUtilityService.generateId();
            this.ebillUnknownErrorId = BillpayUtilityService.generateId();
            this.payeeAmountId = BillpayUtilityService.generateId();
            this.destroy$ = new rxjs.Subject();
            dropdownButtonConfig.placement = 'bottom-right';
        }
        BillpayPayeeSummaryItemBaseComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        BillpayPayeeSummaryItemBaseComponent.prototype.handleStopEbills = function ($event) {
            $event.preventDefault();
            this.dataService.updateSelectedDeleteEbills(this.payeeSummary);
        };
        BillpayPayeeSummaryItemBaseComponent.prototype.handleDeletePayee = function ($event) {
            $event.preventDefault();
            var payee = (this.payeeSummary && !this.payeeSummary.nextPayment && this.payeeSummary) || undefined;
            this.dataService.updateSelectedDeletePayee(payee);
        };
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "payeeName", {
            get: function () {
                return (this.payeeSummary && (this.payeeSummary.nickName || this.payeeSummary.name)) || '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "payeeId", {
            get: function () {
                return (this.payeeSummary && this.payeeSummary.id) || '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "areButtonsDisabled", {
            get: function () {
                return this.dataService.areButtonsDisabled;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "areRecurringPaymentsScheduled", {
            get: function () {
                var payeeSummary = this.payeeSummary;
                return !!(payeeSummary && payeeSummary.hasRecurringPayments);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "areEbillsInErrorState", {
            get: function () {
                return this.isEbillsStatusInError();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "isEbillsErrorUnknown", {
            get: function () {
                return this.ebillErrorEquals('ERROR');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "isEbillsErrorUpdateCredentials", {
            get: function () {
                return this.ebillErrorEquals('UPDATE_CREDENTIALS');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "isEbillsErrorNotSupported", {
            get: function () {
                return this.ebillErrorEquals('NOT_SUPPORTED');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "isEbillsErrorUserAction", {
            get: function () {
                return this.ebillErrorEquals('USER_ACTION');
            },
            enumerable: false,
            configurable: true
        });
        BillpayPayeeSummaryItemBaseComponent.prototype.handleResolveEbillsErrors = function () {
            var _this = this;
            if (this.payeeSummary) {
                this.dataService
                    .resolveErrors(this.payeeSummary.id)
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function (response) {
                    if (_this.isEbillEnrolmentFlowRequired(response)) {
                        _this.handleGetEbills();
                    }
                    else {
                        _this.dataService.reloadPayees();
                    }
                });
            }
        };
        BillpayPayeeSummaryItemBaseComponent.prototype.isEbillEnrolmentFlowRequired = function (ebillEnrolmentResponse) {
            return ((ebillEnrolmentResponse.accounts && ebillEnrolmentResponse.accounts.length > 0) ||
                (ebillEnrolmentResponse.billers && ebillEnrolmentResponse.billers.length > 0) ||
                ebillEnrolmentResponse.authentication ||
                ebillEnrolmentResponse.callBackTime);
        };
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "areEbillsAvailable", {
            get: function () {
                return this.isEbillCapable() && !this.isEbillEnabled();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "areEbillsDue", {
            get: function () {
                return this.isEbillEnabled() && this.hasLatestEbill() && !this.latestEbillPaid();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "isLatestEbillPaid", {
            get: function () {
                return this.latestEbillPaid();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "areEbillsEnabledButNotDue", {
            get: function () {
                return this.isEbillEnabled() && !this.hasLatestEbill() && !this.isEbillsStatusInError();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "ebillLink", {
            get: function () {
                return this.getLatestEbillURL();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "showStopEbills", {
            get: function () {
                return this.isEbillEnabled();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayeeSummaryItemBaseComponent.prototype, "payeeType", {
            get: function () {
                return this.payeeSummary.electronic ? 'electronic' : 'manual';
            },
            enumerable: false,
            configurable: true
        });
        BillpayPayeeSummaryItemBaseComponent.prototype.isEbillsStatusInError = function () {
            var _a, _b;
            return !!(((_b = (_a = this.payeeSummary) === null || _a === void 0 ? void 0 : _a.ebill) === null || _b === void 0 ? void 0 : _b.status) !== 'ACTIVE');
        };
        BillpayPayeeSummaryItemBaseComponent.prototype.ebillErrorEquals = function (error) {
            var _a;
            var ebillSummary = (_a = this.payeeSummary) === null || _a === void 0 ? void 0 : _a.ebill;
            return !!(ebillSummary && ebillSummary.status === error);
        };
        BillpayPayeeSummaryItemBaseComponent.prototype.hasLatestEbill = function () {
            var _a, _b;
            return !!((_b = (_a = this.payeeSummary) === null || _a === void 0 ? void 0 : _a.ebill) === null || _b === void 0 ? void 0 : _b.latestBill);
        };
        BillpayPayeeSummaryItemBaseComponent.prototype.latestEbillPaid = function () {
            var _a, _b, _c;
            return !!(((_c = (_b = (_a = this.payeeSummary) === null || _a === void 0 ? void 0 : _a.ebill) === null || _b === void 0 ? void 0 : _b.latestBill) === null || _c === void 0 ? void 0 : _c.status) === 'PAID');
        };
        BillpayPayeeSummaryItemBaseComponent.prototype.getLatestEbillURL = function () {
            var _a, _b, _c;
            return ((_c = (_b = (_a = this.payeeSummary) === null || _a === void 0 ? void 0 : _a.ebill) === null || _b === void 0 ? void 0 : _b.latestBill) === null || _c === void 0 ? void 0 : _c.url) || '';
        };
        BillpayPayeeSummaryItemBaseComponent.prototype.isEbillCapable = function () {
            var _a, _b;
            return !!((_b = (_a = this.payeeSummary) === null || _a === void 0 ? void 0 : _a.ebill) === null || _b === void 0 ? void 0 : _b.capable);
        };
        BillpayPayeeSummaryItemBaseComponent.prototype.isEbillEnabled = function () {
            var _a, _b;
            return !!((_b = (_a = this.payeeSummary) === null || _a === void 0 ? void 0 : _a.ebill) === null || _b === void 0 ? void 0 : _b.enabled);
        };
        return BillpayPayeeSummaryItemBaseComponent;
    }());
    /** @nocollapse */ BillpayPayeeSummaryItemBaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPayeeSummaryItemBaseComponent, deps: [{ token: BillpayPayeeDataService }, { token: i2__namespace$4.NgbDropdownConfig }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ BillpayPayeeSummaryItemBaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BillpayPayeeSummaryItemBaseComponent, selector: "ng-component", inputs: { payeeSummary: "payeeSummary" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayPayeeSummaryItemBaseComponent, decorators: [{
                type: i0.Component,
                args: [{ template: '' }]
            }], ctorParameters: function () { return [{ type: BillpayPayeeDataService }, { type: i2__namespace$4.NgbDropdownConfig }]; }, propDecorators: { payeeSummary: [{
                    type: i0.Input
                }] } });

    var BillpayDiscardChangesModalService = /** @class */ (function () {
        /** @internal */
        function BillpayDiscardChangesModalService(cdRef) {
            this.cdRef = cdRef;
            this.isDiscardModalOpen = false;
            this.modalResolve$ = new rxjs.Subject();
        }
        BillpayDiscardChangesModalService.prototype.openModal = function () {
            var _this = this;
            this.isDiscardModalOpen = true;
            this.cdRef.detach();
            this.cdRef.detectChanges();
            return this.modalResolve$.asObservable().pipe(operators.tap(function () { return _this.cdRef.reattach(); }));
        };
        BillpayDiscardChangesModalService.prototype.onModalResolve = function (resolvedWith) {
            this.isDiscardModalOpen = false;
            this.cdRef.detectChanges();
            this.modalResolve$.next(resolvedWith);
        };
        return BillpayDiscardChangesModalService;
    }());
    /** @nocollapse */ BillpayDiscardChangesModalService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayDiscardChangesModalService, deps: [{ token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ BillpayDiscardChangesModalService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayDiscardChangesModalService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayDiscardChangesModalService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i0__namespace.ChangeDetectorRef }]; } });

    var BillpayNotificationRoutingService = /** @class */ (function () {
        function BillpayNotificationRoutingService() {
            this._upcommingPaymentsSubject = new rxjs.Subject();
            this.upcommingPaymentsSubject$ = this._upcommingPaymentsSubject.asObservable();
            this._managePaymentSubject = new rxjs.Subject();
            this.managePaymentSubject$ = this._managePaymentSubject.asObservable();
            this._managePayeesSubject = new rxjs.Subject();
            this.managePayeesSubject$ = this._managePayeesSubject.asObservable();
        }
        BillpayNotificationRoutingService.prototype.navigateToPayments = function () {
            this._upcommingPaymentsSubject.next();
        };
        BillpayNotificationRoutingService.prototype.navigateToNewPayment = function (payeeId) {
            this._managePaymentSubject.next(payeeId);
        };
        BillpayNotificationRoutingService.prototype.navigateToPayees = function () {
            this._managePayeesSubject.next();
        };
        return BillpayNotificationRoutingService;
    }());
    /** @nocollapse */ BillpayNotificationRoutingService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayNotificationRoutingService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ BillpayNotificationRoutingService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayNotificationRoutingService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BillpayNotificationRoutingService, decorators: [{
                type: i0.Injectable,
                args: [{ providedIn: 'root' }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BillpayBaseDeactivateGuardService = BillpayBaseDeactivateGuardService;
    exports.BillpayDiscardChangesModalService = BillpayDiscardChangesModalService;
    exports.BillpayEnrolmentComponent = BillpayEnrolmentComponent;
    exports.BillpayEnrolmentGuard = BillpayEnrolmentGuard;
    exports.BillpayEnrolmentService = BillpayEnrolmentService;
    exports.BillpayJourneysCommonModule = BillpayJourneysCommonModule;
    exports.BillpayNotificationRoutingService = BillpayNotificationRoutingService;
    exports.BillpayPayeeDataService = BillpayPayeeDataService;
    exports.BillpayPayeeSummaryItemBaseComponent = BillpayPayeeSummaryItemBaseComponent;
    exports.BillpayPaymentDataService = BillpayPaymentDataService;
    exports.BillpayPaymentParserService = BillpayPaymentParserService;
    exports.BillpayPaymentReviewCardComponent = BillpayPaymentReviewCardComponent;
    exports.BillpayPaymentScheduleService = BillpayPaymentScheduleService;
    exports.BillpayUtilityService = BillpayUtilityService;
    exports.ENROLMENT_PATH = ENROLMENT_PATH;
    exports.ONE_OFF_PAYMENT = ONE_OFF_PAYMENT;
    exports.RECURRING_PAYMENT = RECURRING_PAYMENT;
    exports.accountNumberFullFormat = accountNumberFullFormat;
    exports.accountNumberMaskedFormat = accountNumberMaskedFormat;
    exports.formControlOptions = formControlOptions;
    exports.frequencies = frequencies;
    exports.recurringFrequencies = recurringFrequencies;
    exports.states = states;
    exports["ӨBillpayAddressFormComponent"] = BillpayAddressFormComponent;
    exports["ӨBillpayEbillsDeleteModalComponent"] = BillpayEbillsDeleteModalComponent;
    exports["ӨBillpayPayeeDeleteModalComponent"] = BillpayPayeeDeleteModalComponent;
    exports["ӨBillpayPayeeNavigateModalComponent"] = BillpayPayeeNavigateModalComponent;
    exports["ӨBillpayPaymentReviewCardComponent"] = BillpayPaymentReviewCardComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-billpay-journeys-common.umd.js.map
