{"version":3,"file":"backbase-billpay-journeys-common.js","sources":["../../../../libs/billpay-journeys-common/src/lib/constants/account-number-format.ts","../../../../libs/billpay-journeys-common/src/lib/constants/manage-payment.ts","../../../../libs/billpay-journeys-common/src/lib/constants/navigation.ts","../../../../libs/billpay-journeys-common/src/lib/model/billpay-payment-schedule.model.ts","../../../../libs/billpay-journeys-common/src/lib/model/billpay-payment-service.model.ts","../../../../libs/billpay-journeys-common/src/lib/model/billpay-base-deactivate-guard-service.model.ts","../../../../libs/billpay-journeys-common/src/lib/constants/payment-frequencies.ts","../../../../libs/billpay-journeys-common/src/lib/constants/form-control-options.ts","../../../../libs/billpay-journeys-common/src/lib/constants/states.ts","../../../../libs/billpay-journeys-common/src/lib/services/billpay-enrolment.service.ts","../../../../libs/billpay-journeys-common/src/lib/services/billpay-enrolment.guard.ts","../../../../libs/billpay-journeys-common/src/lib/services/billpay-payment-parser.service.ts","../../../../libs/billpay-journeys-common/src/lib/services/billpay-payment-schedule.service.ts","../../../../libs/billpay-journeys-common/src/lib/services/billpay-utility.service.ts","../../../../libs/billpay-journeys-common/src/lib/services/billpay-payment-data.service.ts","../../../../libs/billpay-journeys-common/src/lib/components/billpay-enrolment/billpay-enrolment.component.ts","../../../../libs/billpay-journeys-common/src/lib/components/billpay-enrolment/billpay-enrolment.component.html","../../../../libs/billpay-journeys-common/src/lib/components/billpay-payment-review-card/billpay-payment-review-card.component.ts","../../../../libs/billpay-journeys-common/src/lib/components/billpay-payment-review-card/billpay-payment-review-card.component.html","../../../../libs/billpay-journeys-common/src/lib/components/billpay-address-form/billpay-address-form.component.ts","../../../../libs/billpay-journeys-common/src/lib/components/billpay-address-form/billpay-address-form.component.html","../../../../libs/billpay-journeys-common/src/lib/components/billpay-payee-navigate-modal/billpay-payee-navigate-modal.component.ts","../../../../libs/billpay-journeys-common/src/lib/components/billpay-payee-navigate-modal/billpay-payee-navigate-modal.component.html","../../../../libs/billpay-journeys-common/src/lib/components/billpay-payee-delete-modal/billpay-payee-delete-modal.component.ts","../../../../libs/billpay-journeys-common/src/lib/components/billpay-payee-delete-modal/billpay-payee-delete-modal.component.html","../../../../libs/billpay-journeys-common/src/lib/services/billpay-payee-data.service.ts","../../../../libs/billpay-journeys-common/src/lib/components/billpay-ebills-delete-modal/billpay-ebills-delete-modal.component.ts","../../../../libs/billpay-journeys-common/src/lib/components/billpay-ebills-delete-modal/billpay-ebills-delete-modal.component.html","../../../../libs/billpay-journeys-common/src/lib/billpay-journeys-common.module.ts","../../../../libs/billpay-journeys-common/src/lib/components/billpay-payee-summary-item-base/billpay-payee-summary-item-base.component.ts","../../../../libs/billpay-journeys-common/src/lib/services/billpay-discard-changes-modal.service.ts","../../../../libs/billpay-journeys-common/src/lib/services/billpay-notification-routing.service.ts","../../../../libs/billpay-journeys-common/src/backbase-billpay-journeys-common.ts"],"sourcesContent":["import { AccountNumberFormat } from '../model';\n\nexport const accountNumberFullFormat: AccountNumberFormat = {\n  length: 0,\n  maskRange: [0, 0],\n  segments: 0,\n};\n\nexport const accountNumberMaskedFormat: AccountNumberFormat = {\n  length: 9,\n  maskRange: [0, 5],\n  segments: 0,\n};\n","import { PaymentType } from '../model';\n\nexport const ONE_OFF_PAYMENT: PaymentType = 'oneOff';\nexport const RECURRING_PAYMENT: PaymentType = 'recurring';\n","export const ENROLMENT_PATH = 'enrolment';\n","import { PaymentServiceRadio } from './billpay-payment-service.model';\n\nexport interface Schedule {\n  frequency: FrequencyKeys;\n  startDate: string;\n  sendDate?: string;\n  endDate?: string;\n  repeat?: number;\n  endType?: string;\n  paymentService?: PaymentServiceRadio;\n  paymentServiceDate?: string;\n  alertPendingCheckbox: boolean;\n  alertSentCheckbox: boolean;\n  alertLastPendingCheckbox: boolean;\n}\n\nexport enum EndTypes {\n  Never = 'never',\n  On = 'on',\n  After = 'after',\n}\n\nexport interface Frequency {\n  value: FrequencyKeys | string;\n  name: string;\n}\n\nexport enum FrequencyKeys {\n  Once = 'ONCE',\n  Weekly = 'WEEKLY',\n  Biweekly = 'EVERY_2_WEEKS',\n  Monthly = 'MONTHLY',\n  EveryTwoWeeks = 'EVERY_2_WEEKS',\n  SemiMonthly = 'TWICE_A_MONTH',\n  EveryFourWeeks = 'EVERY_4_WEEKS',\n  EveryTwoMonths = 'EVERY_2_MONTHS',\n  Quarterly = 'EVERY_3_MONTHS',\n  EverySixMonths = 'EVERY_6_MONTHS',\n  Annually = 'ANNUALLY',\n}\n","import { PaymentService } from '@backbase/data-ang/billpay';\n\nexport interface PaymentServiceRadio {\n  index: string | PaymentServicesTypes.Other;\n  service?: PaymentService;\n}\n\nexport enum PaymentServicesTypes {\n  Regular = 'REGULAR_PAYMENT',\n  Overnight = 'OVERNIGHT_CHECK',\n  Expedited = 'EXPEDITED_PAYMENT',\n  Other = 'OTHER',\n}\n\nexport enum LoadingState {\n  Loading,\n  Error,\n  Inactive,\n}\n\nexport enum Direction {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n","import {\n  ActivatedRouteSnapshot,\n  CanDeactivate,\n  Router,\n  RouterStateSnapshot,\n  UrlCreationOptions,\n} from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { BillpayDiscardChangesFormComponent } from './billpay-discard-changes-form-component.model';\n\nexport abstract class BillpayBaseDeactivateGuardService implements CanDeactivate<BillpayDiscardChangesFormComponent> {\n  protected abstract readonly allowedPreviousRoutes: RegExp[];\n  protected abstract readonly allowedNextRoutes: RegExp[];\n\n  /** @internal */\n  constructor(protected readonly router: Router, protected readonly location: Location) {}\n\n  canDeactivate(\n    component: BillpayDiscardChangesFormComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState: RouterStateSnapshot,\n  ): Observable<boolean> | boolean {\n    const isNextRouteAllowed = this.allowedNextRoutes.some(route => route.test(nextState.url));\n    const isPreviousRouteAllowed = this.allowedPreviousRoutes.some(route => route.test(currentState.url));\n    const isNotSameRoute = currentState.url !== nextState.url;\n    const isNavigationAllowed = isNextRouteAllowed && isPreviousRouteAllowed && isNotSameRoute;\n\n    return (\n      isNavigationAllowed ||\n      component.openModal().pipe(\n        // TODO: Due to Angular issue https://github.com/angular/angular/issues/13586\n        tap(canDeactivate => {\n          if (!canDeactivate) {\n            const currentUrlTree = this.router.createUrlTree([], currentRoute as UrlCreationOptions);\n            this.location.go(currentUrlTree.toString());\n          }\n        }),\n      )\n    );\n  }\n}\n","import { Frequency, FrequencyKeys } from '../model';\nimport '@angular/localize/init';\n\nexport const recurringFrequencies: Array<Frequency> = [\n  { name: $localize`:@@billpay-common.frequency-label.weekly:Weekly`, value: FrequencyKeys.Weekly },\n  { name: $localize`:@@billpay-common.frequency-label.every-two-week:Every two weeks`, value: FrequencyKeys.Biweekly },\n  { name: $localize`:@@billpay-common.frequency-label.monthly:Monthly`, value: FrequencyKeys.Monthly },\n];\n\nexport const frequencies: Array<Frequency> = [\n  { name: $localize`:@@billpay-common.frequency-label.once:Once`, value: FrequencyKeys.Once },\n  ...recurringFrequencies,\n];\n","export const formControlOptions: { [key: string]: boolean } = {\n  emitEvent: false,\n};\n","export const states = [\n  'AL',\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n  'IA',\n  'KS',\n  'KY',\n  'LA',\n  'ME',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n  'NJ',\n  'NM',\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n  'VT',\n  'VA',\n  'WA',\n  'WV',\n  'WI',\n  'WY',\n];\n","import { Injectable } from '@angular/core';\nimport { BillPayEnrolmentService } from '@backbase/data-ang/billpay';\nimport { catchError, map } from 'rxjs/operators';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ENROLMENT_PATH } from '../constants';\n\n@Injectable({ providedIn: 'root' })\nexport class BillpayEnrolmentService {\n  previousRoute = new BehaviorSubject<string | undefined>(undefined);\n\n  constructor(\n    private readonly dataService: BillPayEnrolmentService,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n  ) {}\n\n  enrolUser(): Observable<boolean> {\n    return this.dataService.postBillPayEnrolment('response').pipe(\n      map(response => response.status === 204),\n      catchError(error => of(error.status === 204)),\n    );\n  }\n\n  isEnrolled(): Observable<boolean> {\n    return this.dataService.getBillPayEnrolment().pipe(\n      map(body => body.enrolment.enrolled),\n      catchError(() => of(false)),\n    );\n  }\n\n  getCurrentRoute(): string | undefined {\n    return this.getRoutePath(this.route, '');\n  }\n\n  redirectUser(previousRoute?: string) {\n    if (previousRoute && !previousRoute.includes(ENROLMENT_PATH)) {\n      this.router.navigateByUrl(previousRoute);\n    } else {\n      this.router.navigate(['./']);\n    }\n  }\n\n  private readonly getRoutePath = (route: ActivatedRoute, path: string): string => {\n    if (route.snapshot && route.snapshot.routeConfig && route.snapshot.routeConfig.path) {\n      path += '/' + route.snapshot.routeConfig.path;\n    }\n    if (!route.firstChild) {\n      return path;\n    }\n    return this.getRoutePath(route.firstChild, path);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ENROLMENT_PATH } from '../constants';\nimport { BillpayEnrolmentService } from './billpay-enrolment.service';\n\n@Injectable({ providedIn: 'root' })\nexport class BillpayEnrolmentGuard implements CanActivate {\n  constructor(private readonly router: Router, private readonly enrolmentService: BillpayEnrolmentService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.enrolmentService.isEnrolled().pipe(\n      map((enrolled: boolean) => {\n        const currentRoute = this.enrolmentService.getCurrentRoute();\n\n        if (!enrolled && !currentRoute?.endsWith(ENROLMENT_PATH)) {\n          this.enrolmentService.previousRoute.next(state.url);\n          const parentRoutes = route.pathFromRoot.map(snapshot => snapshot?.routeConfig?.path).filter(item => !!item);\n          this.router.navigate([...parentRoutes, ENROLMENT_PATH]);\n          return false;\n        }\n        return true;\n      }),\n    );\n  }\n}\n","import { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\n\nimport { Currency, PayeeSummary, Payment, OneOffPayment, Payee } from '@backbase/data-ang/billpay';\nimport { Schedule, EndTypes, FrequencyKeys, PaymentServicesTypes, PaymentFormState, PaymentReview } from '../model';\n\nimport { recurringFrequencies } from '../constants';\n\n@Injectable()\nexport class BillpayPaymentParserService {\n  private readonly decimalSeparator: string;\n  constructor(@Inject(LOCALE_ID) private readonly locale: string) {\n    this.decimalSeparator = getLocaleNumberSymbol(this.locale, NumberSymbol.CurrencyDecimal);\n  }\n  paymentRecurringToFormState(payment: Payment, payees: PayeeSummary[]): PaymentFormState {\n    const frequency = payment.recurring && recurringFrequencies.find(item => item.value === payment.frequency);\n    const endType = payment.numberOfInstances ? EndTypes.After : EndTypes.Never;\n\n    return {\n      ...this.parsePaymentCommonResponse(payment, payees),\n      schedule: {\n        repeat: payment.numberOfInstances,\n        endType,\n        startDate: payment.paymentDate,\n        alertPendingCheckbox: payment.paymentScheduledAlert || false,\n        alertSentCheckbox: payment.paymentSentAlert || false,\n        alertLastPendingCheckbox: payment.modelExpirationAlert || false,\n        ...(frequency && { frequency: frequency.value }),\n      },\n    } as PaymentFormState;\n  }\n\n  paymentOneOffToFormState(payment: OneOffPayment, payees: PayeeSummary[]): PaymentFormState {\n    return {\n      ...this.parsePaymentCommonResponse(payment, payees),\n      schedule: {\n        startDate: payment.paymentDate,\n        alertPendingCheckbox: false,\n        alertSentCheckbox: false,\n        alertLastPendingCheckbox: false,\n        frequency: FrequencyKeys.Once,\n      },\n    } as PaymentFormState;\n  }\n\n  paymentFormStateToReview({\n    accountFrom,\n    payeeTo,\n    amount,\n    memo,\n    schedule,\n    overnightDeliveryAddress,\n  }: PaymentFormState): PaymentReview {\n    return {\n      amount: {\n        amount: amount.amount.replace(this.decimalSeparator, '.'),\n        currencyCode: amount.currency,\n      },\n      paymentDate: schedule.paymentServiceDate || schedule.startDate,\n      paymentAccount: accountFrom,\n      recurring: schedule.frequency !== FrequencyKeys.Once,\n      ...(memo && { paymentMemo: memo }),\n      ...(overnightDeliveryAddress && { overnightDeliveryAddress }),\n      ...this.parsePaymentFormPayee(payeeTo),\n      ...this.parsePaymentFormSchedule(schedule),\n    };\n  }\n\n  paymentAndPayeeResponsesToReview(payment: Payment | OneOffPayment, payee: Payee): PaymentReview {\n    return {\n      ...this.paymentResponseToReview(payment),\n      ...(payee.address && { address: payee.address }),\n    };\n  }\n  // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n  private paymentResponseToReview({ id, status, ebillID, ...rest }: Payment | OneOffPayment) {\n    return rest;\n  }\n\n  private parsePaymentFormPayee(\n    payee: PayeeSummary,\n  ): Pick<PaymentReview, 'payeeID' | 'payeeName' | 'payeeAccountNumber' | 'payeeNickName'> {\n    return {\n      payeeID: payee.id,\n      payeeName: payee.name,\n      ...(payee.accountNumber && { payeeAccountNumber: payee.accountNumber }),\n      ...(payee.nickName && { payeeNickName: payee.nickName }),\n    };\n  }\n\n  private parsePaymentFormSchedule(\n    schedule: Schedule,\n  ): Pick<\n    PaymentReview,\n    'fee' | 'numberOfInstances' | 'frequency' | 'paymentScheduledAlert' | 'paymentSentAlert' | 'modelExpirationAlert'\n  > {\n    return {\n      ...(this.getScheduleFee(schedule) && { fee: this.getScheduleFee(schedule) }),\n      ...(schedule.repeat && { numberOfInstances: schedule.repeat }),\n      ...(schedule.frequency !== FrequencyKeys.Once && { frequency: schedule.frequency }),\n      ...(schedule.alertPendingCheckbox && { paymentScheduledAlert: schedule.alertPendingCheckbox }),\n      ...(schedule.alertSentCheckbox && { paymentSentAlert: schedule.alertSentCheckbox }),\n      ...(schedule.alertLastPendingCheckbox && { modelExpirationAlert: schedule.alertLastPendingCheckbox }),\n    };\n  }\n\n  private getScheduleFee(schedule: Schedule): Currency | undefined {\n    return (\n      (schedule.paymentService &&\n        (schedule.paymentService.index === PaymentServicesTypes.Expedited ||\n          schedule.paymentService.index === PaymentServicesTypes.Overnight) &&\n        schedule.paymentService.service &&\n        schedule.paymentService.service.fee) ||\n      undefined\n    );\n  }\n\n  private parsePaymentCommonResponse(\n    payment: Payment | OneOffPayment,\n    payees: PayeeSummary[],\n  ): Partial<PaymentFormState> {\n    const payeeTo = payees.find(item => item.id === payment.payeeID);\n    const amount = payment.amount && {\n      currency: payment.amount.currencyCode,\n      amount: payment.amount.amount.replace(this.decimalSeparator, '.'),\n    };\n    return {\n      paymentId: payment.id,\n      ...(payment.amount && { amount }),\n      ...(payeeTo && { payeeTo }),\n      ...(payment.paymentAccount && { accountFrom: payment.paymentAccount }),\n      ...(payment.paymentMemo && { memo: payment.paymentMemo }),\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PaymentService } from '@backbase/data-ang/billpay';\nimport { FrequencyKeys, PaymentServicesTypes } from '../model';\n\n@Injectable()\nexport class BillpayPaymentScheduleService {\n  get today() {\n    return this.getLocalISODate(new Date());\n  }\n\n  estimatedEndDate(date: string, freq: FrequencyKeys, occurs: number | undefined = 0): number {\n    const parsedDate = new Date(date);\n    switch (freq) {\n      case FrequencyKeys.Monthly:\n        return parsedDate.setMonth(parsedDate.getMonth() + occurs);\n      case FrequencyKeys.Biweekly:\n        return (\n          new Date(parsedDate.setDate(parsedDate.getDate() - 1)).setHours(0, 0, 0) + occurs * (1000 * 3600 * 24) * 14\n        );\n      case FrequencyKeys.Weekly:\n        return (\n          new Date(parsedDate.setDate(parsedDate.getDate() - 1)).setHours(0, 0, 0) + occurs * (1000 * 3600 * 24) * 7\n        );\n      default:\n        return parsedDate.getTime();\n    }\n  }\n\n  estimatedOccurences(startDate: string, endDate: string, freq: FrequencyKeys): number {\n    const d1 = new Date(startDate);\n    const d2 = new Date(endDate);\n    switch (freq) {\n      case FrequencyKeys.Monthly:\n        return this.toMonthDifference(d1, d2);\n      case FrequencyKeys.Biweekly:\n        return Math.ceil(this.toDaysDifference(d1, d2) / 14);\n      case FrequencyKeys.Weekly:\n        return Math.ceil(this.toDaysDifference(d1, d2) / 7);\n      default:\n        return 1;\n    }\n  }\n\n  estimatedPaymentServiceDate(\n    services: Array<PaymentService | undefined> | undefined,\n    serviceType: PaymentServicesTypes,\n  ): string {\n    const service = services && services.find(item => !!(item && item.paymentServiceType === serviceType));\n    if (service) {\n      return new Date(service.cutoffTime).getTime() < new Date(service.earliestPaymentDate).getTime()\n        ? this.getLocalISODate(service.earliestPaymentDate)\n        : this.getLocalISODate(service.nextPaymentDate);\n    } else {\n      return this.today;\n    }\n  }\n\n  private toMonthDifference(d1: Date, d2: Date) {\n    const endMonth = d2.getMonth();\n    const startMonth = d1.getMonth();\n    const endDay = d2.getDate();\n    const startDay = d1.getDate();\n    const lastDayOfEndMonth = new Date(d2.getFullYear(), endMonth + 1, 0).getDate();\n    const lastDayOfStartMonth = new Date(d1.getFullYear(), startMonth + 1, 0).getDate();\n    let strictMonths = (d2.getFullYear() - d1.getFullYear()) * 12 - startMonth + endMonth - 1;\n    strictMonths = strictMonths <= 0 ? 0 : strictMonths;\n\n    const softMonths =\n      (startDay <= endDay && startMonth !== endMonth) ||\n      (startDay === lastDayOfStartMonth && endDay === lastDayOfEndMonth && startMonth !== endMonth)\n        ? 2\n        : 1;\n\n    return strictMonths + softMonths;\n  }\n\n  private toDaysDifference(d1: Date, d2: Date) {\n    const rest = d2.getTime() - d1.getTime();\n    const result = Math.ceil(Math.abs(rest) / (1000 * 3600 * 24));\n    if (rest < 0) {\n      return 0;\n    } else {\n      return result ? result + 1 : 1;\n    }\n  }\n\n  getLocalISODate(_date: Date | string) {\n    const ISODateRegExp = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/g;\n    // Check if the date is already ISO\n    if (typeof _date === 'string' && ISODateRegExp.test(_date)) {\n      return _date;\n    }\n    const date = new Date(_date);\n    const timezonezoffset = date.getTimezoneOffset() * 60000;\n    return new Date(date.getTime() + timezonezoffset).toISOString();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BillpayUtilityService {\n  static checkForProperty(property: string | (string | number)[], inObject: any) {\n    let propertyAsArray: (string | number)[] = [];\n    if (typeof property === 'string') {\n      propertyAsArray = property.split('.');\n    } else {\n      propertyAsArray = property;\n    }\n    return propertyAsArray.reduce(\n      (currentObject: any, currentProperty: any) =>\n        currentObject && currentObject[currentProperty] ? currentObject[currentProperty] : undefined,\n      inObject,\n    );\n  }\n\n  static generateId() {\n    return Math.floor(Math.random() * Date.now()).toString();\n  }\n}\n","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { map, tap, catchError, switchMap } from 'rxjs/operators';\nimport {\n  BillPayPaymentsService,\n  BillPayPayeesSummaryService,\n  BillPayAccountsService,\n  PaymentRequest,\n  RecurringPayment,\n  OneOffPayment,\n  BillPayAccountsGetResponseBody,\n  BillPayPayeesSummaryGetResponseBody,\n  RecurringPaymentByIdPutResponseBody,\n  BillPayRecurringPaymentsPostResponseBody,\n  PaymentByIdPutResponseBody,\n  BillPayPaymentsPostResponseBody,\n  Payment,\n} from '@backbase/data-ang/billpay';\nimport { PaymentFormState, FrequencyKeys } from '../model';\nimport { formatDate } from '@angular/common';\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport { LoadingState } from '../model';\n\n@Injectable()\nexport class BillpayPaymentDataService {\n  private currentPayeesLoadingState = LoadingState.Inactive;\n  private currentAccountsLoadingState = LoadingState.Inactive;\n  private readonly reload = new BehaviorSubject(undefined);\n  private readonly decimalSeparator: string;\n\n  /** @internal */\n  constructor(\n    private readonly paymentData: BillPayPaymentsService,\n    private readonly accountsData: BillPayAccountsService,\n    private readonly payeesSummaryData: BillPayPayeesSummaryService,\n    @Inject(LOCALE_ID) private readonly locale: string,\n  ) {\n    this.decimalSeparator = getLocaleNumberSymbol(this.locale, NumberSymbol.CurrencyDecimal);\n  }\n\n  get payeesLoadingState(): LoadingState {\n    return this.currentPayeesLoadingState;\n  }\n\n  get accountsLoadingState(): LoadingState {\n    return this.currentAccountsLoadingState;\n  }\n\n  getOneOffPayment(id: string): Observable<OneOffPayment> {\n    return this.paymentData.getPaymentById({ id }).pipe(map(body => body.payment));\n  }\n\n  getRecurringPayment(id: string): Observable<Payment> {\n    return this.paymentData.getRecurringPaymentById({ id }).pipe(map(body => body.payment));\n  }\n\n  getPayeesAndAccounts(): Observable<BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody> {\n    return combineLatest([this.getPayees(), this.getAccounts()]).pipe(\n      map(\n        ([payeeSummaries, accounts]) =>\n          ({ ...payeeSummaries, ...accounts } as BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody),\n      ),\n    );\n  }\n\n  createPayment(\n    payment: PaymentFormState,\n  ): Observable<BillPayPaymentsPostResponseBody | BillPayRecurringPaymentsPostResponseBody> {\n    return payment.schedule.frequency === FrequencyKeys.Once\n      ? this.paymentData.postBillPayPayments({\n          billPayPaymentsPostRequestBody: { payments: [this.toPaymentRequest(payment)] },\n        })\n      : this.paymentData.postBillPayRecurringPayments({\n          billPayRecurringPaymentsPostRequestBody: { payment: this.toRecurringPaymentRequest(payment) },\n        });\n  }\n\n  updatePaymentRecurring(payment: PaymentFormState, id: string): Observable<RecurringPaymentByIdPutResponseBody> {\n    return this.paymentData.putRecurringPaymentById({\n      id,\n      recurringPaymentByIdPutRequestBody: { payment: this.toRecurringPaymentRequest(payment) },\n    });\n  }\n\n  updatePaymentOneOff(payment: PaymentFormState, id: string): Observable<PaymentByIdPutResponseBody> {\n    return this.paymentData.putPaymentById({\n      id,\n      paymentByIdPutRequestBody: { payment: this.toPaymentRequest(payment) },\n    });\n  }\n\n  private getPayees(): Observable<BillPayPayeesSummaryGetResponseBody | undefined> {\n    return this.reload.asObservable().pipe(\n      tap(() => (this.currentPayeesLoadingState = LoadingState.Loading)),\n      switchMap(() => this.payeesSummaryData.getBillPayPayeesSummary()),\n      tap(() => (this.currentPayeesLoadingState = LoadingState.Inactive)),\n      catchError(() => {\n        this.currentPayeesLoadingState = LoadingState.Error;\n        return of(undefined);\n      }),\n    );\n  }\n\n  private getAccounts(): Observable<BillPayAccountsGetResponseBody | undefined> {\n    return this.reload.asObservable().pipe(\n      tap(() => (this.currentAccountsLoadingState = LoadingState.Loading)),\n      switchMap(() => this.accountsData.getBillPayAccounts()),\n      tap(() => (this.currentAccountsLoadingState = LoadingState.Inactive)),\n      catchError(() => {\n        this.currentAccountsLoadingState = LoadingState.Error;\n        return of(undefined);\n      }),\n    );\n  }\n\n  private toShortISODate(date: string): string {\n    return formatDate(date, 'yyyy-MM-dd', this.locale);\n  }\n\n  private toPaymentRequest({\n    payeeTo: { id: payeeID },\n    accountFrom: { accountNumber, routingNumber, accountType, id },\n    amount,\n    memo,\n    schedule,\n    overnightDeliveryAddress,\n  }: PaymentFormState): PaymentRequest {\n    return {\n      payeeID,\n      paymentAccount: {\n        ...(id && { id: id }),\n        accountNumber,\n        routingNumber,\n        accountType,\n      },\n      ...(schedule.paymentService &&\n        schedule.paymentService.service && { paymentServiceType: schedule.paymentService.service.paymentServiceType }),\n      amount: {\n        amount: amount.amount.replace(this.decimalSeparator, '.'),\n        currencyCode: amount.currency,\n      },\n      paymentDate: this.toShortISODate(schedule.startDate),\n      ...(memo && { paymentMemo: memo }),\n      ...(overnightDeliveryAddress && {\n        overnightDeliveryAddress: {\n          address1: overnightDeliveryAddress.address1,\n          state: overnightDeliveryAddress.state,\n          city: overnightDeliveryAddress.city,\n          postalCode: overnightDeliveryAddress.postalCode,\n          ...(overnightDeliveryAddress.address2 && { address2: overnightDeliveryAddress.address2 }),\n        },\n      }),\n    };\n  }\n\n  private toRecurringPaymentRequest({\n    payeeTo: { id: payeeID },\n    accountFrom: { accountNumber, routingNumber, accountType, id },\n    amount,\n    schedule,\n    memo,\n  }: PaymentFormState): RecurringPayment {\n    return {\n      payeeID,\n      paymentAccount: {\n        ...(id && { id: id }),\n        accountNumber,\n        routingNumber,\n        accountType,\n      },\n      amount: {\n        amount: amount.amount.replace(this.decimalSeparator, '.'),\n        currencyCode: amount.currency,\n      },\n      ...(memo && { paymentMemo: memo }),\n      paymentDate: this.toShortISODate(schedule.startDate),\n      ...(schedule.repeat && { numberOfInstances: schedule.repeat }),\n      frequency: schedule.frequency,\n      paymentScheduledAlert: schedule.alertPendingCheckbox,\n      paymentSentAlert: schedule.alertSentCheckbox,\n      modelExpirationAlert: schedule.alertLastPendingCheckbox,\n    };\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef,\n  Input,\n} from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { BillpayEnrolmentService } from '../../services/billpay-enrolment.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-billpay-enrolment',\n  templateUrl: './billpay-enrolment.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayEnrolmentComponent implements OnInit {\n  enrolmentFailed = false;\n  loading = false;\n\n  @Input() notificationDismissTime?: number;\n\n  @ViewChild('successHeader') notificationHeaderSuccessTemplate: TemplateRef<any> | string = '';\n  @ViewChild('errorHeader') notificationHeaderErrorTemplate: TemplateRef<any> | string = '';\n\n  constructor(\n    private readonly billpayEnrolmentService: BillpayEnrolmentService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly notificationService: NotificationService,\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n\n    this.billpayEnrolmentService\n      .isEnrolled()\n      .pipe(first())\n      .subscribe(\n        isEnrolled => {\n          if (isEnrolled) {\n            this.loading = false;\n            this.redirectUser();\n          } else {\n            this.enrolUser();\n          }\n        },\n        () => {\n          this.onEnrolFail();\n          this.cd.markForCheck();\n        },\n      );\n  }\n\n  enrolUser() {\n    this.loading = true;\n    this.enrolmentFailed = false;\n    this.billpayEnrolmentService\n      .enrolUser()\n      .pipe(first())\n      .subscribe(isEnrolled => {\n        if (isEnrolled) {\n          this.onEnrolSuccess();\n        } else {\n          this.onEnrolFail();\n        }\n        this.cd.markForCheck();\n      });\n  }\n\n  onEnrolSuccess() {\n    this.loading = false;\n    this.notificationService.showNotification({\n      header: this.notificationHeaderSuccessTemplate,\n      message: '',\n      modifier: 'success',\n      ttl: this.notificationDismissTime,\n    });\n    this.redirectUser();\n  }\n\n  onEnrolFail() {\n    this.loading = false;\n    this.enrolmentFailed = true;\n    this.notificationService.showNotification({\n      header: this.notificationHeaderErrorTemplate,\n      message: '',\n      modifier: 'error',\n      ttl: this.notificationDismissTime,\n    });\n  }\n\n  redirectUser() {\n    this.billpayEnrolmentService.previousRoute.pipe(first()).subscribe(route => {\n      this.billpayEnrolmentService.redirectUser(route || '');\n    });\n  }\n}\n","<div class=\"card card-lg\">\n  <div class=\"card-body\">\n    <div *ngIf=\"loading\">\n      <bb-loading-indicator-ui\n        i18n-text=\"\n          Enrolling in the bill pay service...|Enrolment Widget enrolling text@@bb-billpay-enrolment.enrolling.text\"\n        text=\"Enrolling in the bill pay service...\"\n        loaderSize=\"lg\"\n      ></bb-loading-indicator-ui>\n    </div>\n\n    <div *ngIf=\"enrolmentFailed\">\n      <div class=\"bb-state-container\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconColor=\"danger\"\n          iconModifier=\"error-outline\"\n          subtitle=\"Try enrolling again or contact support\"\n          i18n-subtitle=\"\n            Try enrolling again or contact support|Enrolment Widget failure\n            subtitle@@bb-billpay-enrolment.failure.subtitle\"\n          title=\"Enrolment failed\"\n          i18n-title=\"Enrolment failed|Enrolment Widget failure title@@bb-billpay-enrolment.failure.title\"\n        >\n        </bb-empty-state-ui>\n        <div class=\"bb-state-container__footer\">\n          <button\n            bbButton\n            data-role=\"button-enrolment-retry\"\n            (click)=\"enrolUser()\"\n            i18n=\"Try enrolling again|Enrolment Widget Try enrolling again button@@bb-billpay-enrolment.button.tryAgain\"\n          >\n            Try enrolling again\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #successHeader>\n  <span i18n=\"Enrolment successful|Enrolment successful message@@b-billpay-enrolment.message.successful\"\n    >Enrolment successful</span\n  >\n</ng-template>\n\n<ng-template #errorHeader>\n  <span i18n=\"Enrolment failed|Enrolment failed message@@b-billpay-enrolment.message.failed\">Enrolment failed</span>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BillpayPaymentScheduleService } from '../../services/billpay-payment-schedule.service';\nimport { FrequencyKeys, PaymentReview, AccountNumberFormat } from '../../model';\nimport { accountNumberMaskedFormat, accountNumberFullFormat } from '../../constants';\n\n@Component({\n  selector: 'bb-billpay-payment-review-card',\n  templateUrl: './billpay-payment-review-card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentReviewCardComponent {\n  /**\n   * Details of the payment to be reviewed before creation.\n   */\n  @Input() paymentReview?: PaymentReview;\n  /**\n   * Whether the account number should be masked. Defaults to true.\n   */\n  @Input() accountNumberMask = true;\n\n  /**\n   * Frequency Label based on configuration\n   */\n  @Input() frequencyLabel?: any;\n\n  /** @internal */\n  constructor(private readonly scheduleService: BillpayPaymentScheduleService) {}\n\n  get totalAmount(): number {\n    const fee = Number(this.paymentReview && this.paymentReview.fee && this.paymentReview.fee.amount) || 0;\n    const amount = Number(this.paymentReview && this.paymentReview.amount && this.paymentReview.amount.amount) || 0;\n    return fee + amount;\n  }\n\n  get accountNumberFormatConfig(): AccountNumberFormat {\n    return this.accountNumberMask ? accountNumberMaskedFormat : accountNumberFullFormat;\n  }\n\n  getEndDate(paymentDate: string, numberOfInstances: number, frequency: string) {\n    return this.scheduleService.estimatedEndDate(paymentDate, frequency as FrequencyKeys, numberOfInstances);\n  }\n}\n","<section class=\"bb-block bb-block--xl\">\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      data-role=\"from-title\"\n      headingClasses=\"h3\"\n      headingType=\"h2\"\n      heading=\"From\"\n      i18n-heading=\"From section title|Label for group of data related to the account@@billpay-payment-review-card.from\"\n    >\n    </bb-header-ui>\n  </div>\n  <ng-container *ngIf=\"paymentReview?.paymentAccount?.accountNickName\">\n    <div\n      class=\"bb-text-bold\"\n      i18n=\"From account name title|Label for account name in from group@@billpay-payment-review-card.from.account-name\"\n      data-role=\"account-name-label\"\n    >\n      Account name\n    </div>\n    <div class=\"bb-block bb-block--md\" data-role=\"account-name\">\n      {{ paymentReview?.paymentAccount?.accountNickName }}\n    </div>\n  </ng-container>\n  <div\n    i18n=\"From account type title|Label for account type in from group@@billpay-payment-review-card.from.account-type\"\n    class=\"bb-text-bold\"\n    data-role=\"account-type-label\"\n  >\n    Account type\n  </div>\n  <div\n    data-role=\"account-type\"\n    class=\"bb-block bb-block--md\"\n    i18n=\"Payment account types@@billpay-payment-review-card.payment.account-types\"\n  >\n    {paymentReview?.paymentAccount?.accountType, select, CD_ACCOUNT {CD account} CHECKING_ACCOUNT {Checking account}\n    SAVINGS_ACCOUNT {Savings account} LOAN_ACCOUNT {Loan account} OTHER_ACCOUNT {Other account}}\n  </div>\n  <div\n    i18n=\"\n      From account number title|Label for account number in from group@@billpay-payment-review-card.from.account-number\"\n    class=\"bb-text-bold\"\n    data-role=\"account-number-label\"\n  >\n    Account number\n  </div>\n  <div data-role=\"account-number\">\n    {{ paymentReview?.paymentAccount?.accountNumber | paymentCardNumber: accountNumberFormatConfig }}\n  </div>\n</section>\n\n<section class=\"bb-block bb-block--xl\">\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h2\"\n      headingClasses=\"h3\"\n      heading=\"To\"\n      i18n-heading=\"\n        To section title|Label for group of data related to the payee account@@billpay-payment-review-card.to\"\n      data-role=\"to-title\"\n    >\n    </bb-header-ui>\n  </div>\n  <div\n    i18n=\"To payee name title|Label for payee name in to group@@billpay-payment-review-card.to.payee-name\"\n    class=\"bb-text-bold\"\n    data-role=\"payee-name-label\"\n  >\n    Payee name\n  </div>\n  <div data-role=\"payee-name\" class=\"bb-block bb-block--md\">\n    <span>{{\n      (paymentReview?.payeeNickName && paymentReview?.payeeNickName + \" (\" + paymentReview?.payeeName + \")\") ||\n        paymentReview?.payeeName\n    }}</span>\n  </div>\n  <ng-container *ngIf=\"paymentReview?.payeeAccountNumber\">\n    <div\n      data-role=\"payee-account-number-label\"\n      i18n=\"\n        To payee account number title|Label for payee account number in to\n        group@@billpay-payment-review-card.to.payee-account-number\"\n      class=\"bb-text-bold\"\n    >\n      Payee account number\n    </div>\n    <div data-role=\"payee-account-number\" class=\"bb-block bb-block--md\">\n      {{ paymentReview?.payeeAccountNumber | paymentCardNumber: accountNumberFormatConfig }}\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"paymentReview?.address as payeeAddress\">\n    <div\n      data-role=\"payee-address-label\"\n      i18n=\"To payee address title|Label for payee address in to group@@billpay-payment-review-card.to.payee-address\"\n      class=\"bb-text-bold\"\n    >\n      Payee address\n    </div>\n    <div data-role=\"payee-address\" class=\"bb-block bb-block--md\">\n      <div>{{ payeeAddress?.address1 }}</div>\n      <div *ngIf=\"payeeAddress?.address2\">{{ payeeAddress?.address2 }}</div>\n      <div>{{ payeeAddress?.city }}&nbsp;{{ payeeAddress?.state }}&nbsp;{{ payeeAddress?.postalCode }}</div>\n    </div>\n  </ng-container>\n</section>\n\n<section>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h3\"\n      heading=\"Payment details\"\n      i18n-heading=\"\n        Payment details section title|Label for group of data related to the payment\n        details@@billpay-payment-review-card.details\"\n      data-role=\"payment-details-title\"\n    >\n    </bb-header-ui>\n  </div>\n  <div\n    i18n=\"Payment details amount|Label for amount in details group@@billpay-payment-review-card.details.amount\"\n    class=\"bb-text-bold\"\n    data-role=\"amount-label\"\n  >\n    Amount\n  </div>\n  <div class=\"bb-block bb-block--md\">\n    <bb-amount-ui\n      data-role=\"amount\"\n      [amount]=\"paymentReview?.amount?.amount\"\n      [currency]=\"paymentReview?.amount?.currencyCode\"\n    >\n    </bb-amount-ui>\n  </div>\n  <ng-container *ngIf=\"paymentReview?.fee\">\n    <div\n      i18n=\"Payment details fee|Label for fee in details group@@billpay-payment-review-card.details.fee\"\n      class=\"bb-text-bold\"\n      data-role=\"fee-label\"\n    >\n      Expedited payment fee\n    </div>\n    <div data-role=\"fee-amount\" class=\"bb-block bb-block--md\">\n      {{ paymentReview?.fee?.amount | currency: paymentReview?.fee?.currencyCode:\"symbol-narrow\" }}\n    </div>\n    <div\n      i18n=\"\n        Payment details total amount|Label for total amount in details\n        group@@billpay-payment-review-card.details.total.amount\"\n      class=\"bb-text-bold\"\n      data-role=\"total-amount-label\"\n    >\n      Total amount\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-amount-ui data-role=\"total-amount\" [amount]=\"totalAmount\" [currency]=\"paymentReview?.amount?.currencyCode\">\n      </bb-amount-ui>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"paymentReview?.paymentMemo\">\n    <div\n      i18n=\"Payment details memo|Label for memo in details group@@billpay-payment-review-card.details.memo\"\n      class=\"bb-text-bold\"\n      data-role=\"memo-label\"\n    >\n      Memo\n    </div>\n    <div class=\"bb-block bb-block--md\" data-role=\"memo\">{{ paymentReview?.paymentMemo }}</div>\n  </ng-container>\n  <div\n    i18n=\"\n      Payment details frequency|Label for frequency in details\n      group@@billpay-payment-review-card.details.frequency-label\"\n    class=\"bb-text-bold\"\n    data-role=\"frequency-label\"\n  >\n    Frequency\n  </div>\n\n  <ng-container *ngIf=\"!paymentReview?.recurring; else recurringFrequency\">\n    <div\n      data-role=\"frequency\"\n      class=\"bb-block bb-block--md\"\n      i18n=\"Payment details frequency|Label for frequency once@@billpay-payment-review-card.details.frequency.once\"\n    >\n      Once\n    </div>\n    <div\n      i18n=\"\n        Payment details deliver by|Label for deliver by in details\n        group@@billpay-payment-review-card.details.deliver-by-label\"\n      class=\"bb-text-bold\"\n      data-role=\"deliver-by\"\n    >\n      Deliver payment by\n    </div>\n    <div data-role=\"deliver-date\" class=\"bb-block bb-block--md\">\n      {{ paymentReview?.paymentDate | date: \"fullDate\" }}\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"paymentReview?.overnightDeliveryAddress as address\">\n    <div\n      data-role=\"overnight-address-label\"\n      i18n=\"\n        Payment overnight address|Label for overnight\n        address@@billpay-payment-review-card.details.overnight-address.label\"\n      class=\"bb-text-bold\"\n    >\n      Overnight check address\n    </div>\n    <div data-role=\"overnight-address\" class=\"bb-block bb-block--md\">\n      <div>{{ address?.address1 }}</div>\n      <div *ngIf=\"address?.address2\">{{ address?.address2 }}</div>\n      <div>{{ address?.city }}&nbsp;{{ address?.state }}&nbsp;{{ address?.postalCode }}</div>\n    </div>\n  </ng-container>\n\n  <ng-template #recurringFrequency>\n    <div data-role=\"frequency\" class=\"bb-block bb-block--md\">\n      <ng-container *ngIf=\"frequencyLabel; else defaultLabels\">{{ frequencyLabel }}</ng-container>\n      <!-- Remove default labels after journey migration phase 2 -->\n      <ng-template #defaultLabels>\n        <span\n          i18n=\"\n            Payment details frequency|Label for frequency in details\n            group@@billpay-payment-review-card.details.frequency.list\"\n        >\n          {paymentReview?.frequency, select, ONCE {Once} WEEKLY {Weekly} EVERY_2_WEEKS {Every two weeks} MONTHLY\n          {Monthly} EVERY_4_WEEKS {Every for weeks} TWICE_A_MONTH {Semi monthly} EVERY_2_MONTHS {Every two months}\n          EVERY_3_MONTHS { Every three months} EVERY_6_MONTHS {Every six months} ANNUALLY {Annually}}\n        </span>\n      </ng-template>\n    </div>\n    <div\n      i18n=\"\n        Payment details deliver by|Label for deliver by in details\n        group@@billpay-payment-review-card.details.amount.other\"\n      class=\"bb-text-bold\"\n      data-role=\"deliver-by\"\n    >\n      Deliver first payment by\n    </div>\n    <div data-role=\"deliver-date\" class=\"bb-block bb-block--md\">\n      {{ paymentReview?.paymentDate | date: \"fullDate\" }}\n    </div>\n    <div\n      i18n=\"Payment details ending|Label for ending in details group@@billpay-payment-review-card.details.ending-label\"\n      class=\"bb-text-bold\"\n      data-role=\"ending-label\"\n    >\n      Ending\n    </div>\n    <div data-role=\"ending\" class=\"bb-block bb-block--md\">\n      <span\n        *ngIf=\"paymentReview?.numberOfInstances; else neverEnding\"\n        i18n=\"Payment details ending|Label for ending in details group@@billpay-payment-review-card.details.ending\"\n        >After { paymentReview?.numberOfInstances, plural, =1 {{{paymentReview?.numberOfInstances}} payment } other\n        {{{paymentReview?.numberOfInstances}} payments } } (estimated\n        {{\n          getEndDate(paymentReview?.paymentDate, paymentReview?.numberOfInstances, paymentReview?.frequency)\n            | date: \"longDate\"\n        }})</span\n      >\n      <ng-template #neverEnding>\n        <span\n          i18n=\"Payment details ending|Label for never ending payment@@billpay-payment-review-card.details.ending.never\"\n          >Never\n        </span>\n      </ng-template>\n    </div>\n    <div\n      *ngIf=\"\n        paymentReview?.paymentScheduledAlert || paymentReview?.paymentSentAlert || paymentReview?.modelExpirationAlert\n      \"\n      i18n=\"Payment details notify me|Label for notify me in details group@@billpay-payment-review-card.details.notify\"\n      class=\"bb-text-bold\"\n      data-role=\"notify-label\"\n    >\n      Notify me\n    </div>\n    <div>\n      <ul>\n        <li\n          *ngIf=\"paymentReview?.paymentScheduledAlert\"\n          i18n=\"\n            Payment details when a payment is pending|Label for when a payment is pending in details\n            group@@billpay-payment-review-card.details.notify.pending\"\n          data-role=\"alertPendingCheckbox\"\n        >\n          When a payment is pending\n        </li>\n        <li\n          *ngIf=\"paymentReview?.paymentSentAlert\"\n          i18n=\"\n            Payment details when a payment has been sent|Label for when a payment has been sent in details\n            group@@billpay-payment-review-card.details.notify.sent\"\n          data-role=\"alertSentCheckbox\"\n        >\n          When a payment has been sent\n        </li>\n        <li\n          *ngIf=\"paymentReview?.modelExpirationAlert\"\n          i18n=\"\n            Payment details when the last payment is pending|Label for when the last payment is pending in details\n            group@@billpay-payment-review-card.details.notify.pending.last\"\n          data-role=\"alertLastPendingCheckbox\"\n        >\n          When the last payment is pending\n        </li>\n      </ul>\n    </div>\n  </ng-template>\n</section>\n","import { AfterContentInit, Component } from '@angular/core';\nimport { ControlContainer, FormGroup } from '@angular/forms';\nimport { states } from '../../constants';\nimport { BillpayUtilityService as Utility } from '../../services/billpay-utility.service';\n\n@Component({\n  selector: 'bb-billpay-address-form',\n  templateUrl: './billpay-address-form.component.html',\n})\nexport class BillpayAddressFormComponent implements AfterContentInit {\n  readonly states = states;\n  formGroup?: FormGroup;\n  readonly address1RequiredId = Utility.generateId();\n  readonly address1MaxLengthId = Utility.generateId();\n  readonly address2MaxLengthId = Utility.generateId();\n  readonly cityRequiredId = Utility.generateId();\n  readonly cityMaxlengthId = Utility.generateId();\n  readonly stateLengthId = Utility.generateId();\n  readonly postalCodeRequiredId = Utility.generateId();\n  readonly postalCodePatternId = Utility.generateId();\n  readonly labelId = Utility.generateId();\n\n  /** @internal */\n  constructor(private readonly controlContainer: ControlContainer) {}\n\n  ngAfterContentInit() {\n    this.formGroup = this.controlContainer.control as FormGroup;\n  }\n\n  hasError(controlName: string, errorName: string): boolean {\n    const control = this.formGroup && this.formGroup.get(controlName);\n    return !!control && control.hasError(errorName) && control.touched;\n  }\n}\n","<ng-container [formGroup]=\"formGroup\">\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--md\">\n      <bb-input-text-ui\n        formControlName=\"address1\"\n        data-role=\"address1-input\"\n        label=\"Address line 1\"\n        i18n-label=\"label|Label for Address line 1 field@@billpay-manual-payee-form.address-line-1-label\"\n        [aria-describedby]=\"[address1RequiredId, address1MaxLengthId].join(' ')\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('address1', 'required')\"\n      i18n=\"error text|Address line 1 is required error text@@billpay-manual-payee-form.error.address1-required\"\n      data-role=\"address1-error-required\"\n      [messageId]=\"address1RequiredId\"\n    >\n      Please enter a street number and name\n    </bb-input-validation-message-ui>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('address1', 'maxlength')\"\n      i18n=\"error text|Address line max length error text@@billpay-manual-payee-form.error.address-maxlength\"\n      data-role=\"address1-error-maxlength\"\n      [messageId]=\"address1MaxLengthId\"\n    >\n      Address may not be over forty characters\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--md\">\n      <label class=\"bb-label\" data-role=\"address2-input-label\" [attr.id]=\"'bb-address-label' + labelId\">\n        <span i18n=\"label|Label for Address line 2 (optional) field@@billpay-manual-payee-form.address-line-2-label\"\n          >Address line 2</span\n        >\n        <span\n          class=\"bb-text-default bb-text-support\"\n          i18n=\"label optional|Label for optional text@@billpay-manual-payee-form.address-line-2-label-helper\"\n        >\n          (Optional)</span\n        >\n      </label>\n      <bb-input-text-ui\n        formControlName=\"address2\"\n        data-role=\"address2-input\"\n        [aria-labelledby]=\"'bb-address-label' + labelId\"\n        [aria-describedby]=\"address2MaxLengthId\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('address2', 'maxlength')\"\n      i18n=\"error text|Address line max length error text@@billpay-manual-payee-form.error.address-maxlength\"\n      data-role=\"address2-error-maxlength\"\n      [messageId]=\"address2MaxLengthId\"\n    >\n      Address may not be over forty characters\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--sm\">\n      <bb-input-text-ui\n        formControlName=\"city\"\n        data-role=\"city-input\"\n        label=\"City\"\n        i18n-label=\"label|Label for city field@@billpay-manual-payee-form.city-label\"\n        [aria-describedby]=\"[cityRequiredId, cityMaxlengthId].join(' ')\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('city', 'required')\"\n      i18n=\"error text|City is required error text@@billpay-manual-payee-form.error.city-required\"\n      data-role=\"city-error-required\"\n      [messageId]=\"cityRequiredId\"\n    >\n      Please enter a City\n    </bb-input-validation-message-ui>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('city', 'maxlength')\"\n      i18n=\"error text|City max length error text@@billpay-manual-payee-form.error.city-maxlength\"\n      data-role=\"city-error-maxlength\"\n      [messageId]=\"cityMaxlengthId\"\n    >\n      City may not be over thirty-two characters\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--xs\">\n      <bb-dropdown-single-select-ui\n        label=\"State\"\n        i18n-label=\"label|Label for state field@@billpay-manual-payee-form.state-label\"\n        [options]=\"states\"\n        formControlName=\"state\"\n        data-role=\"state-select\"\n        [aria-describedby]=\"stateLengthId\"\n      >\n      </bb-dropdown-single-select-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('state', 'required')\"\n      i18n=\"error text|State is required error text@@billpay-manual-payee-form.error.state-required\"\n      data-role=\"state-error-required\"\n      [messageId]=\"stateLengthId\"\n    >\n      Please enter a State\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div class=\"bb-form-field bb-form-field--xs\">\n      <bb-input-text-ui\n        formControlName=\"postalCode\"\n        data-role=\"postal-code-input\"\n        label=\"ZIP Code\"\n        i18n-label=\"label|Label for ZIP code field@@billpay-manual-payee-form.zip-label\"\n        [aria-describedby]=\"[postalCodeRequiredId, postalCodePatternId].join(' ')\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('postalCode', 'required')\"\n      i18n=\"error text|Zip code is required error text@@billpay-manual-payee-form.error.zip-code-required\"\n      data-role=\"postal-code-error-required\"\n      [messageId]=\"postalCodeRequiredId\"\n    >\n      Please enter a Zip Code\n    </bb-input-validation-message-ui>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"hasError('postalCode', 'pattern')\"\n      i18n=\"error text|Zip code format error text@@billpay-manual-payee-form.error.zip-code-format\"\n      data-role=\"postal-code-error-pattern\"\n      [messageId]=\"postalCodePatternId\"\n    >\n      ZIP code should be 5 or 9 digits long\n    </bb-input-validation-message-ui>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'bb-billpay-payee-navigate-modal',\n  templateUrl: './billpay-payee-navigate-modal.component.html',\n})\nexport class BillpayPayeeNavigateModalComponent {\n  @Output() resolve = new EventEmitter<boolean>();\n\n  cancelModal() {\n    this.resolve.emit(false);\n  }\n\n  confirmModal() {\n    this.resolve.emit(true);\n  }\n}\n","<bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"payee-navigate-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        data-role=\"payee-navigate-modal-header\"\n        headingType=\"h2\"\n        i18n-heading=\"Payee navigate modal header@@billpay.payee-navigate-modal.header\"\n        heading=\"Payee cannot be deleted\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span i18n=\"Payee navigate modal body@@billpay.payee-navigate-modal.body\" data-role=\"payee-navigate-modal-body\"\n        >This payee has upcoming payments which must be canceled before deleting.</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <button\n        bbButton\n        color=\"secondary\"\n        i18n=\"cancel modal button|Cancel navigate button@@billpay.payee-navigate-modal.cancel-button\"\n        (click)=\"cancelModal()\"\n        data-role=\"payee-navigate-modal-cancel-button\"\n      >\n        Keep payee\n      </button>\n      <button\n        bbButton\n        color=\"primary\"\n        i18n=\"confirm modal button|Confirm navigate button@@billpay.payee-navigate-modal.confirm-button\"\n        (click)=\"confirmModal()\"\n        data-role=\"payee-navigate-modal-confirm-button\"\n      >\n        View scheduled payments\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'bb-billpay-payee-delete-modal',\n  templateUrl: './billpay-payee-delete-modal.component.html',\n})\nexport class BillpayPayeeDeleteModalComponent {\n  @Output() resolve = new EventEmitter<boolean>();\n\n  cancelModal() {\n    this.resolve.emit(false);\n  }\n\n  confirmModal() {\n    this.resolve.emit(true);\n  }\n}\n","<bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"payee-delete-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        data-role=\"payee-delete-modal-header\"\n        headingType=\"h2\"\n        i18n-heading=\"Payee delete modal header@@billpay.payee-delete-modal.header\"\n        heading=\"Delete payee?\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span i18n=\"Payee delete modal body@@billpay.payee-delete-modal.body\" data-role=\"payee-delete-modal-body\"\n        >Are you sure you want to delete this payee? This action cannot be undone.</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <button\n        bbButton\n        color=\"secondary\"\n        i18n=\"cancel modal button|Cancel payee delete button@@billpay.payee-delete-modal.cancel-button\"\n        (click)=\"cancelModal()\"\n        data-role=\"payee-delete-modal-cancel-button\"\n      >\n        Keep payee\n      </button>\n      <button\n        bbButton\n        color=\"danger\"\n        i18n=\"confirm modal button|Confirm payee delete button@@billpay.payee-delete-modal.confirm-button\"\n        (click)=\"confirmModal()\"\n        data-role=\"payee-delete-modal-confirm-button\"\n      >\n        Delete payee\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Injectable } from '@angular/core';\nimport {\n  BillPayPayeesService,\n  BillPayPayverisService,\n  BillPayEbillsService,\n  BillPayPayeesSummaryService,\n  BillPayPayeesSummaryGetResponseBody,\n  BillPayPayverisResolveEbillErrorsPostRequestBody,\n  BillPayPayverisResolveEbillErrorsPostResponseBody,\n  PayeeSummary,\n} from '@backbase/data-ang/billpay';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { PayeeSummariesByEbill } from '../model';\nexport { PayeeSummary, Currency, BillPayPayeesSummaryGetResponseBody } from '@backbase/data-ang/billpay';\n\nexport const defaultDeleteParams = {\n  cancelPendingPayments: false,\n};\n\n@Injectable()\nexport class BillpayPayeeDataService {\n  private readonly selectedDeletePayeeSource = new BehaviorSubject<PayeeSummary | undefined>(undefined);\n  private readonly selectedDeleteEbillsSource = new BehaviorSubject<PayeeSummary | undefined>(undefined);\n  private readonly reload = new BehaviorSubject(undefined);\n  private buttonsDisabled = false;\n  private currentPayeesLoadingState: 'loading' | 'error' | '' = '';\n  private iterablePayeeSummaryList: PayeeSummary[] = [];\n\n  /** @internal */\n  constructor(\n    private readonly data: BillPayPayeesService,\n    private readonly payverisData: BillPayPayverisService,\n    private readonly ebillsData: BillPayEbillsService,\n    private readonly payeesSummaryData: BillPayPayeesSummaryService,\n  ) {}\n\n  deletePayee(id: string, electronic: boolean): Observable<HttpResponse<any>> {\n    return electronic\n      ? this.data.deleteElectronicPayeeById({ ...defaultDeleteParams, id })\n      : this.data.deletePayeeById({ ...defaultDeleteParams, id });\n  }\n\n  resolveErrors(id: string): Observable<BillPayPayverisResolveEbillErrorsPostResponseBody> {\n    const resolveErrorsRequest: BillPayPayverisResolveEbillErrorsPostRequestBody = {\n      payeeID: id,\n    };\n    return this.payverisData.postBillPayPayverisResolveEbillErrors({\n      billPayPayverisResolveEbillErrorsPostRequestBody: resolveErrorsRequest,\n    });\n  }\n\n  deleteEbills(id: string): Observable<HttpResponse<any>> {\n    return this.ebillsData.deleteBillPayEbills({ id });\n  }\n\n  getPayees(): Observable<PayeeSummariesByEbill | undefined> {\n    return this.reload.asObservable().pipe(\n      tap(() => (this.currentPayeesLoadingState = 'loading')),\n      switchMap(() => this.payeesSummaryData.getBillPayPayeesSummary().pipe(map(groupByEbills))),\n      tap(data => sortByPayeeGroup(data)),\n      tap(data => this.createIterablePayeeSummaryList(data)),\n      tap(() => {\n        this.currentPayeesLoadingState = '';\n      }),\n      catchError(() => {\n        this.currentPayeesLoadingState = 'error';\n        return of(undefined);\n      }),\n    );\n  }\n\n  private createIterablePayeeSummaryList(list: PayeeSummariesByEbill) {\n    this.iterablePayeeSummaryList = [];\n    for (let i = 0; i < list.ebillsEnabled.length; i++) {\n      const summary = list.ebillsEnabled[i];\n      this.iterablePayeeSummaryList.push(summary);\n    }\n    for (let j = 0; j < list.ebillsNotEnabled.length; j++) {\n      const summary = list.ebillsNotEnabled[j];\n      this.iterablePayeeSummaryList.push(summary);\n    }\n  }\n\n  reloadPayees() {\n    this.reload.next(undefined);\n  }\n\n  disableWidgetButtons() {\n    this.buttonsDisabled = true;\n  }\n\n  enableWidgetButtons() {\n    this.buttonsDisabled = false;\n  }\n\n  updateSelectedDeletePayee(payee: PayeeSummary | undefined) {\n    this.selectedDeletePayeeSource.next(payee);\n  }\n  updateSelectedDeleteEbills(payee: PayeeSummary | undefined) {\n    this.selectedDeleteEbillsSource.next(payee);\n  }\n  get selectedDeletePayee(): Observable<PayeeSummary | undefined> {\n    return this.selectedDeletePayeeSource.asObservable();\n  }\n  get selectedDeleteEbills(): Observable<PayeeSummary | undefined> {\n    return this.selectedDeleteEbillsSource.asObservable();\n  }\n\n  get payeesLoadingState() {\n    return this.currentPayeesLoadingState;\n  }\n\n  get areButtonsDisabled(): boolean {\n    return this.buttonsDisabled;\n  }\n\n  get numberOfPayees() {\n    return this.iterablePayeeSummaryList.length;\n  }\n\n  private payeesLoaded(): Promise<boolean> {\n    const _this = this;\n    return new Promise<boolean>(function (resolve) {\n      (function waitUntilLoaded() {\n        if (_this.currentPayeesLoadingState === '') return resolve(true);\n        setTimeout(waitUntilLoaded, 100);\n      })();\n    });\n  }\n\n  async findPayeeSummaryById(payeeId: string): Promise<PayeeSummary | undefined> {\n    if (await this.payeesLoaded()) {\n      return this.iterablePayeeSummaryList.find(summary => summary.id === payeeId);\n    }\n    return;\n  }\n}\n\nfunction groupByEbills(data: BillPayPayeesSummaryGetResponseBody): PayeeSummariesByEbill {\n  const payeeSummaries = data.payeeSummaries as PayeeSummary[];\n  return payeeSummaries.reduce(\n    (grouped: any, payeeSummary: PayeeSummary) => {\n      grouped[payeeSummary.ebill && payeeSummary.ebill.enabled ? 'ebillsEnabled' : 'ebillsNotEnabled'].push(\n        payeeSummary,\n      );\n      return grouped;\n    },\n    {\n      ebillsEnabled: [],\n      ebillsNotEnabled: [],\n    },\n  );\n}\n\nfunction sortByPayeeGroup(data: PayeeSummariesByEbill) {\n  sortPayeeSummaries(data.ebillsEnabled);\n  sortPayeeSummaries(data.ebillsNotEnabled);\n}\n\nfunction sortPayeeSummaries(summaries: PayeeSummary[]) {\n  summaries.sort((a, b) =>\n    getPayeeDisplayName(a.name, a.nickName).toLowerCase() > getPayeeDisplayName(b.name, b.nickName).toLowerCase()\n      ? 1\n      : -1,\n  );\n}\n\nfunction getPayeeDisplayName(payeeName: string, payeeNickName?: string): string {\n  return payeeNickName || payeeName;\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { BillpayPayeeDataService } from '../../services/billpay-payee-data.service';\n\n@Component({\n  selector: 'bb-billpay-ebills-delete-modal',\n  templateUrl: './billpay-ebills-delete-modal.component.html',\n})\nexport class BillpayEbillsDeleteModalComponent {\n  @Output() resolve = new EventEmitter<boolean>();\n\n  get selectedDeleteEbills$() {\n    return this.payeeListWidgetService.selectedDeleteEbills;\n  }\n\n  /** @internal */\n  constructor(private readonly payeeListWidgetService: BillpayPayeeDataService) {}\n\n  cancelModal() {\n    this.resolve.emit(false);\n  }\n\n  confirmModal() {\n    this.resolve.emit(true);\n  }\n}\n","<ng-container *ngIf=\"selectedDeleteEbills$ | async as payee\">\n  <bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"ebills-delete-modal\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          data-role=\"ebills-delete-modal-header\"\n          headingType=\"h2\"\n          i18n-heading=\"ebills delete modal header@@billpay.ebills-delete-modal.header\"\n          heading=\"Stop receiving eBills?\"\n        >\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span i18n=\"ebills delete modal body@@billpay.ebills-delete-modal.body\" data-role=\"ebills-delete-modal-body\"\n          >Are you sure you want to stop receiving eBills for the payee {{ payee?.nickName || payee?.name }}?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button\n          bbButton\n          color=\"secondary\"\n          i18n=\"cancel modal button|Cancel ebills delete button@@billpay.ebills-delete-modal.cancel-button\"\n          (click)=\"cancelModal()\"\n          data-role=\"ebills-delete-modal-cancel-button\"\n        >\n          Keep eBills\n        </button>\n        <button\n          bbButton\n          color=\"danger\"\n          i18n=\"confirm modal button|Confirm ebills delete button@@billpay.ebills-delete-modal.confirm-button\"\n          (click)=\"confirmModal()\"\n          data-role=\"ebills-delete-modal-confirm-button\"\n        >\n          Stop receiving eBills\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\n\nimport { BillpayEnrolmentService } from './services/billpay-enrolment.service';\nimport { BillpayEnrolmentGuard } from './services/billpay-enrolment.guard';\nimport { BillpayPaymentParserService } from './services/billpay-payment-parser.service';\nimport { BillpayPaymentScheduleService } from './services/billpay-payment-schedule.service';\nimport { BillpayUtilityService } from './services/billpay-utility.service';\nimport { BillpayPaymentDataService } from './services/billpay-payment-data.service';\n\nimport { BillpayEnrolmentComponent } from './components/billpay-enrolment/billpay-enrolment.component';\nimport { BillpayPaymentReviewCardComponent } from './components/billpay-payment-review-card/billpay-payment-review-card.component';\nimport { BillpayAddressFormComponent } from './components/billpay-address-form/billpay-address-form.component';\nimport { BillpayPayeeNavigateModalComponent } from './components/billpay-payee-navigate-modal/billpay-payee-navigate-modal.component';\nimport { BillpayPayeeDeleteModalComponent } from './components/billpay-payee-delete-modal/billpay-payee-delete-modal.component';\nimport { BillpayEbillsDeleteModalComponent } from './components/billpay-ebills-delete-modal/billpay-ebills-delete-modal.component';\n\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\n\nconst uiModules = [\n  ButtonModule,\n  LoadingIndicatorModule,\n  EmptyStateModule,\n  NotificationModule,\n  HeaderModule,\n  AmountModule,\n  PaymentCardNumberModule,\n  InputValidationMessageModule,\n  DropdownSingleSelectModule,\n  ModalModule,\n  InputTextModule,\n  KeyboardClickModule,\n];\n\nconst services = [\n  BillpayEnrolmentService,\n  BillpayEnrolmentGuard,\n  BillpayPaymentParserService,\n  BillpayPaymentScheduleService,\n  BillpayUtilityService,\n  BillpayPaymentDataService,\n];\n\nconst components = [\n  BillpayEnrolmentComponent,\n  BillpayPaymentReviewCardComponent,\n  BillpayAddressFormComponent,\n  BillpayPayeeNavigateModalComponent,\n  BillpayPayeeDeleteModalComponent,\n  BillpayEbillsDeleteModalComponent,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, BackbaseCoreModule, ...uiModules],\n  providers: [...services],\n  exports: [...components, ...uiModules],\n})\nexport class BillpayJourneysCommonModule {}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { BillpayUtilityService as Utility } from '../../services/billpay-utility.service';\nimport { BillPayPayverisEbillsEnrolmentPostResponseBody, PayeeSummary } from '@backbase/data-ang/billpay';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { ONE_OFF_PAYMENT, RECURRING_PAYMENT } from '../../constants';\nimport { BillpayPayeeDataService } from '../../services/billpay-payee-data.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({ template: '' })\nexport abstract class BillpayPayeeSummaryItemBaseComponent implements OnDestroy {\n  /**\n   * This method will be overriden by parent components\n   */\n  abstract handleGetEbills(): void;\n  /**\n   * Details of the payee summary.\n   */\n  @Input() payeeSummary: PayeeSummary | undefined;\n  RECURRING_PAYMENT = RECURRING_PAYMENT;\n  ONE_OFF_PAYMENT = ONE_OFF_PAYMENT;\n  readonly ebillRetrieveErrorId = Utility.generateId();\n  readonly noEbillsDueId = Utility.generateId();\n  readonly ebillsAvailableId = Utility.generateId();\n  readonly recurringPaymentScheduledIdId = Utility.generateId();\n  readonly ebillPaymentScheduledId = Utility.generateId();\n  readonly ebillDueOnId = Utility.generateId();\n  readonly ebillSupportErrorId = Utility.generateId();\n  readonly ebillUserActionErrorId = Utility.generateId();\n  readonly ebillUnknownErrorId = Utility.generateId();\n  readonly payeeAmountId = Utility.generateId();\n\n  readonly destroy$ = new Subject();\n\n  /** @internal */\n  constructor(\n    private readonly dataService: BillpayPayeeDataService,\n    protected readonly dropdownButtonConfig: NgbDropdownConfig,\n  ) {\n    dropdownButtonConfig.placement = 'bottom-right';\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  handleStopEbills($event: Event): void {\n    $event.preventDefault();\n    this.dataService.updateSelectedDeleteEbills(this.payeeSummary);\n  }\n\n  handleDeletePayee($event: Event): void {\n    $event.preventDefault();\n    const payee = (this.payeeSummary && !this.payeeSummary.nextPayment && this.payeeSummary) || undefined;\n\n    this.dataService.updateSelectedDeletePayee(payee);\n  }\n\n  get payeeName(): string {\n    return (this.payeeSummary && (this.payeeSummary.nickName || this.payeeSummary.name)) || '';\n  }\n\n  get payeeId(): string {\n    return (this.payeeSummary && this.payeeSummary.id) || '';\n  }\n\n  get areButtonsDisabled(): boolean {\n    return this.dataService.areButtonsDisabled;\n  }\n\n  get areRecurringPaymentsScheduled(): boolean {\n    const payeeSummary = this.payeeSummary;\n    return !!(payeeSummary && payeeSummary.hasRecurringPayments);\n  }\n\n  get areEbillsInErrorState(): boolean {\n    return this.isEbillsStatusInError();\n  }\n\n  get isEbillsErrorUnknown(): boolean {\n    return this.ebillErrorEquals('ERROR');\n  }\n\n  get isEbillsErrorUpdateCredentials(): boolean {\n    return this.ebillErrorEquals('UPDATE_CREDENTIALS');\n  }\n\n  get isEbillsErrorNotSupported(): boolean {\n    return this.ebillErrorEquals('NOT_SUPPORTED');\n  }\n\n  get isEbillsErrorUserAction(): boolean {\n    return this.ebillErrorEquals('USER_ACTION');\n  }\n\n  handleResolveEbillsErrors(): void {\n    if (this.payeeSummary) {\n      this.dataService\n        .resolveErrors(this.payeeSummary.id)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(response => {\n          if (this.isEbillEnrolmentFlowRequired(response)) {\n            this.handleGetEbills();\n          } else {\n            this.dataService.reloadPayees();\n          }\n        });\n    }\n  }\n\n  private isEbillEnrolmentFlowRequired(ebillEnrolmentResponse: BillPayPayverisEbillsEnrolmentPostResponseBody) {\n    return (\n      (ebillEnrolmentResponse.accounts && ebillEnrolmentResponse.accounts.length > 0) ||\n      (ebillEnrolmentResponse.billers && ebillEnrolmentResponse.billers.length > 0) ||\n      ebillEnrolmentResponse.authentication ||\n      ebillEnrolmentResponse.callBackTime\n    );\n  }\n\n  get areEbillsAvailable(): boolean {\n    return this.isEbillCapable() && !this.isEbillEnabled();\n  }\n\n  get areEbillsDue(): boolean {\n    return this.isEbillEnabled() && this.hasLatestEbill() && !this.latestEbillPaid();\n  }\n\n  get isLatestEbillPaid(): boolean {\n    return this.latestEbillPaid();\n  }\n\n  get areEbillsEnabledButNotDue(): boolean {\n    return this.isEbillEnabled() && !this.hasLatestEbill() && !this.isEbillsStatusInError();\n  }\n\n  get ebillLink(): string {\n    return this.getLatestEbillURL();\n  }\n\n  get showStopEbills(): boolean {\n    return this.isEbillEnabled();\n  }\n\n  get payeeType(): 'manual' | 'electronic' {\n    return (this.payeeSummary as PayeeSummary).electronic ? 'electronic' : 'manual';\n  }\n\n  private isEbillsStatusInError(): boolean {\n    return !!(this.payeeSummary?.ebill?.status !== 'ACTIVE');\n  }\n\n  private ebillErrorEquals(error: string) {\n    const ebillSummary = this.payeeSummary?.ebill;\n    return !!(ebillSummary && ebillSummary.status === error);\n  }\n\n  private hasLatestEbill(): boolean {\n    return !!this.payeeSummary?.ebill?.latestBill;\n  }\n\n  private latestEbillPaid(): boolean {\n    return !!(this.payeeSummary?.ebill?.latestBill?.status === 'PAID');\n  }\n\n  private getLatestEbillURL(): string {\n    return this.payeeSummary?.ebill?.latestBill?.url || '';\n  }\n\n  private isEbillCapable(): boolean {\n    return !!this.payeeSummary?.ebill?.capable;\n  }\n\n  private isEbillEnabled(): boolean {\n    return !!this.payeeSummary?.ebill?.enabled;\n  }\n}\n","import { ChangeDetectorRef, Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class BillpayDiscardChangesModalService {\n  /** @internal */\n  constructor(private readonly cdRef: ChangeDetectorRef) {}\n\n  isDiscardModalOpen = false;\n  private readonly modalResolve$ = new Subject<boolean>();\n\n  openModal(): Observable<boolean> {\n    this.isDiscardModalOpen = true;\n    this.cdRef.detach();\n    this.cdRef.detectChanges();\n    return this.modalResolve$.asObservable().pipe(tap(() => this.cdRef.reattach()));\n  }\n\n  onModalResolve(resolvedWith: boolean) {\n    this.isDiscardModalOpen = false;\n    this.cdRef.detectChanges();\n    this.modalResolve$.next(resolvedWith);\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n@Injectable({ providedIn: 'root' })\nexport class BillpayNotificationRoutingService {\n  private _upcommingPaymentsSubject = new Subject<undefined>();\n  upcommingPaymentsSubject$: Observable<undefined> = this._upcommingPaymentsSubject.asObservable();\n  private _managePaymentSubject = new Subject<string>();\n  managePaymentSubject$: Observable<string> = this._managePaymentSubject.asObservable();\n  private _managePayeesSubject = new Subject<undefined>();\n  managePayeesSubject$: Observable<undefined> = this._managePayeesSubject.asObservable();\n\n  navigateToPayments() {\n    this._upcommingPaymentsSubject.next();\n  }\n\n  navigateToNewPayment(payeeId: string) {\n    this._managePaymentSubject.next(payeeId);\n  }\n\n  navigateToPayees() {\n    this._managePayeesSubject.next();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i2.BillpayEnrolmentService","i1.BillpayEnrolmentService","i2","i5","i6","i1.BillpayPaymentScheduleService","i3","i4","Utility","i1.BillpayPayeeDataService"],"mappings":"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"}