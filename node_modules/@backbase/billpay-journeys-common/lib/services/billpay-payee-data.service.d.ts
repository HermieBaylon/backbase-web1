import { BillPayPayeesService, BillPayPayverisService, BillPayEbillsService, BillPayPayeesSummaryService, BillPayPayverisResolveEbillErrorsPostResponseBody, PayeeSummary } from '@backbase/data-ang/billpay';
import { HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { PayeeSummariesByEbill } from '../model';
import * as i0 from "@angular/core";
export { PayeeSummary, Currency, BillPayPayeesSummaryGetResponseBody } from '@backbase/data-ang/billpay';
export declare const defaultDeleteParams: {
    cancelPendingPayments: boolean;
};
export declare class BillpayPayeeDataService {
    private readonly data;
    private readonly payverisData;
    private readonly ebillsData;
    private readonly payeesSummaryData;
    private readonly selectedDeletePayeeSource;
    private readonly selectedDeleteEbillsSource;
    private readonly reload;
    private buttonsDisabled;
    private currentPayeesLoadingState;
    private iterablePayeeSummaryList;
    /** @internal */
    constructor(data: BillPayPayeesService, payverisData: BillPayPayverisService, ebillsData: BillPayEbillsService, payeesSummaryData: BillPayPayeesSummaryService);
    deletePayee(id: string, electronic: boolean): Observable<HttpResponse<any>>;
    resolveErrors(id: string): Observable<BillPayPayverisResolveEbillErrorsPostResponseBody>;
    deleteEbills(id: string): Observable<HttpResponse<any>>;
    getPayees(): Observable<PayeeSummariesByEbill | undefined>;
    private createIterablePayeeSummaryList;
    reloadPayees(): void;
    disableWidgetButtons(): void;
    enableWidgetButtons(): void;
    updateSelectedDeletePayee(payee: PayeeSummary | undefined): void;
    updateSelectedDeleteEbills(payee: PayeeSummary | undefined): void;
    get selectedDeletePayee(): Observable<PayeeSummary | undefined>;
    get selectedDeleteEbills(): Observable<PayeeSummary | undefined>;
    get payeesLoadingState(): "" | "error" | "loading";
    get areButtonsDisabled(): boolean;
    get numberOfPayees(): number;
    private payeesLoaded;
    findPayeeSummaryById(payeeId: string): Promise<PayeeSummary | undefined>;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillpayPayeeDataService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BillpayPayeeDataService>;
}
