import { OnDestroy } from '@angular/core';
import { PayeeSummary } from '@backbase/data-ang/billpay';
import { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';
import { BillpayPayeeDataService } from '../../services/billpay-payee-data.service';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare abstract class BillpayPayeeSummaryItemBaseComponent implements OnDestroy {
    private readonly dataService;
    protected readonly dropdownButtonConfig: NgbDropdownConfig;
    /**
     * This method will be overriden by parent components
     */
    abstract handleGetEbills(): void;
    /**
     * Details of the payee summary.
     */
    payeeSummary: PayeeSummary | undefined;
    RECURRING_PAYMENT: import("@backbase/billpay-journeys-common").PaymentType;
    ONE_OFF_PAYMENT: import("@backbase/billpay-journeys-common").PaymentType;
    readonly ebillRetrieveErrorId: string;
    readonly noEbillsDueId: string;
    readonly ebillsAvailableId: string;
    readonly recurringPaymentScheduledIdId: string;
    readonly ebillPaymentScheduledId: string;
    readonly ebillDueOnId: string;
    readonly ebillSupportErrorId: string;
    readonly ebillUserActionErrorId: string;
    readonly ebillUnknownErrorId: string;
    readonly payeeAmountId: string;
    readonly destroy$: Subject<unknown>;
    /** @internal */
    constructor(dataService: BillpayPayeeDataService, dropdownButtonConfig: NgbDropdownConfig);
    ngOnDestroy(): void;
    handleStopEbills($event: Event): void;
    handleDeletePayee($event: Event): void;
    get payeeName(): string;
    get payeeId(): string;
    get areButtonsDisabled(): boolean;
    get areRecurringPaymentsScheduled(): boolean;
    get areEbillsInErrorState(): boolean;
    get isEbillsErrorUnknown(): boolean;
    get isEbillsErrorUpdateCredentials(): boolean;
    get isEbillsErrorNotSupported(): boolean;
    get isEbillsErrorUserAction(): boolean;
    handleResolveEbillsErrors(): void;
    private isEbillEnrolmentFlowRequired;
    get areEbillsAvailable(): boolean;
    get areEbillsDue(): boolean;
    get isLatestEbillPaid(): boolean;
    get areEbillsEnabledButNotDue(): boolean;
    get ebillLink(): string;
    get showStopEbills(): boolean;
    get payeeType(): 'manual' | 'electronic';
    private isEbillsStatusInError;
    private ebillErrorEquals;
    private hasLatestEbill;
    private latestEbillPaid;
    private getLatestEbillURL;
    private isEbillCapable;
    private isEbillEnabled;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillpayPayeeSummaryItemBaseComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BillpayPayeeSummaryItemBaseComponent, "ng-component", never, { "payeeSummary": "payeeSummary"; }, {}, never, never>;
}
