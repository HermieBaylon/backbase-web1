{"version":3,"file":"backbase-cashflow-http-ang.js","sources":["../../model/presentationAccountCategory.ts","../../model/presentationAuthorizationStatus.ts","../../model/presentationCounterpartyType.ts","../../model/presentationPayableStatus.ts","../../model/presentationReceivableStatus.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/accountingPlatforms.service.ts","../../api/accountingPlatforms.service.mocks.ts","../../api/chartOfAccounts.service.ts","../../api/chartOfAccounts.service.mocks.ts","../../api/defaultCurrency.service.ts","../../api/defaultCurrency.service.mocks.ts","../../api/forecastConfigurations.service.ts","../../api/forecastConfigurations.service.mocks.ts","../../api/forecasts.service.ts","../../api/forecasts.service.mocks.ts","../../api/payables.service.ts","../../api/payables.service.mocks.ts","../../api/receivables.service.ts","../../api/receivables.service.mocks.ts","../../api/sme.service.ts","../../api/sme.service.mocks.ts"],"sourcesContent":["/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Account category\n */\nexport type PresentationAccountCategory = 'Asset' | 'Expense' | 'Income' | 'Liability' | 'Equity' | 'Uncategorised';\n\nexport const PresentationAccountCategory = {\n    Asset: 'Asset' as PresentationAccountCategory,\n    Expense: 'Expense' as PresentationAccountCategory,\n    Income: 'Income' as PresentationAccountCategory,\n    Liability: 'Liability' as PresentationAccountCategory,\n    Equity: 'Equity' as PresentationAccountCategory,\n    Uncategorised: 'Uncategorised' as PresentationAccountCategory\n};\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Authorization status to accounting platform.\n */\nexport type PresentationAuthorizationStatus = 'PendingInitialAuth' | 'Authorized' | 'Deauthorized';\n\nexport const PresentationAuthorizationStatus = {\n    PendingInitialAuth: 'PendingInitialAuth' as PresentationAuthorizationStatus,\n    Authorized: 'Authorized' as PresentationAuthorizationStatus,\n    Deauthorized: 'Deauthorized' as PresentationAuthorizationStatus\n};\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Counterparty type\n */\nexport type PresentationCounterpartyType = 'Customer' | 'Supplier';\n\nexport const PresentationCounterpartyType = {\n    Customer: 'Customer' as PresentationCounterpartyType,\n    Supplier: 'Supplier' as PresentationCounterpartyType\n};\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Status of payable item\n */\nexport type PresentationPayableStatus = 'Draft' | 'Open' | 'PartiallyPaid' | 'Paid' | 'Unknown';\n\nexport const PresentationPayableStatus = {\n    Draft: 'Draft' as PresentationPayableStatus,\n    Open: 'Open' as PresentationPayableStatus,\n    PartiallyPaid: 'PartiallyPaid' as PresentationPayableStatus,\n    Paid: 'Paid' as PresentationPayableStatus,\n    Unknown: 'Unknown' as PresentationPayableStatus\n};\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Status of receivable item\n */\nexport type PresentationReceivableStatus = 'Draft' | 'Submitted' | 'PartiallyPaid' | 'Paid';\n\nexport const PresentationReceivableStatus = {\n    Draft: 'Draft' as PresentationReceivableStatus,\n    Submitted: 'Submitted' as PresentationReceivableStatus,\n    PartiallyPaid: 'PartiallyPaid' as PresentationReceivableStatus,\n    Paid: 'Paid' as PresentationReceivableStatus\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const CASH_FLOW_BASE_PATH = new InjectionToken<string>('CASH_FLOW_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface CashFlowConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class CashFlowConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: CashFlowConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link CashFlowConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link CashFlowConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module CashFlowConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { CashFlowConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class CashFlowApiModule {\n    public static forRoot(configurationFactory: () => CashFlowConfiguration): ModuleWithProviders<CashFlowApiModule> {\n        return {\n            ngModule: CashFlowApiModule,\n            providers: [ { provide: CashFlowConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: CashFlowApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: CashFlowConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('CashFlowApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { PresentationAccountingPlatform } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { CASH_FLOW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CashFlowConfiguration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountingPlatformsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CashFlowConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CASH_FLOW_BASE_PATH) basePath: string, @Optional() configuration: CashFlowConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Returns list of accounting platforms which SME can be connected to.\n     * Returns list of accounting platforms which SME can be connected to.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAccountingPlatforms(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<PresentationAccountingPlatform>>;\n    /**\n     * Returns list of accounting platforms which SME can be connected to.\n     * Returns list of accounting platforms which SME can be connected to.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAccountingPlatforms(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<PresentationAccountingPlatform>>>;\n    /**\n     * Returns list of accounting platforms which SME can be connected to.\n     * Returns list of accounting platforms which SME can be connected to.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAccountingPlatforms(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<PresentationAccountingPlatform>>>;\n    /**\n     * Returns list of accounting platforms which SME can be connected to.\n     * Returns list of accounting platforms which SME can be connected to.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAccountingPlatforms(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<PresentationAccountingPlatform>>(`${this.configuration.basePath}/client-api/v1/accounting-platforms`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAccountingPlatformsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/accounting-platforms`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/accounting-platforms URL pattern\n*/\nexport const AccountingPlatformsHttpServiceGetAccountingPlatformsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/accounting-platforms\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"quickbooks\",\n  \"logoUrl\" : \"https://quickbooks.intuit.com/content/dam/intuit/quickbooks/common/qb_thumb.png\",\n  \"name\" : \"QuickBooks\"\n}, {\n  \"id\" : \"xero\",\n  \"logoUrl\" : \"https://www.xero.com/etc/designs/xero-cms/clientlib/assets/img/logo/logo-xero-blue.svg\",\n  \"name\" : \"Xero\"\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const AccountingPlatformsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/accounting-platforms\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"quickbooks\",\n  \"logoUrl\" : \"https://quickbooks.intuit.com/content/dam/intuit/quickbooks/common/qb_thumb.png\",\n  \"name\" : \"QuickBooks\"\n}, {\n  \"id\" : \"xero\",\n  \"logoUrl\" : \"https://www.xero.com/etc/designs/xero-cms/clientlib/assets/img/logo/logo-xero-blue.svg\",\n  \"name\" : \"Xero\"\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationChartOfAccounts } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { CASH_FLOW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CashFlowConfiguration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartOfAccountsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CashFlowConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CASH_FLOW_BASE_PATH) basePath: string, @Optional() configuration: CashFlowConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Chart of Account retieved successfully.\n     * Chart of Account retieved successfully\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getChartOfAccounts(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationChartOfAccounts>;\n    /**\n     * Chart of Account retieved successfully.\n     * Chart of Account retieved successfully\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getChartOfAccounts(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationChartOfAccounts>>;\n    /**\n     * Chart of Account retieved successfully.\n     * Chart of Account retieved successfully\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getChartOfAccounts(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationChartOfAccounts>>;\n    /**\n     * Chart of Account retieved successfully.\n     * Chart of Account retieved successfully\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getChartOfAccounts(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationChartOfAccounts>(`${this.configuration.basePath}/client-api/v1/chart-of-accounts`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getChartOfAccountsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/chart-of-accounts`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/chart-of-accounts URL pattern\n*/\nexport const ChartOfAccountsHttpServiceGetChartOfAccountsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/chart-of-accounts\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"syncDatetime\" : \"2020-11-05T12:06:43Z\",\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n    \"name\" : \"Accounts Receivable\",\n    \"nominalCode\" : \"84\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"77b9ba20-924e-4be8-8077-87278297d915\",\n    \"name\" : \"Checking\",\n    \"nominalCode\" : \"35\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n    \"name\" : \"Depreciation\",\n    \"nominalCode\" : \"39\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n    \"name\" : \"Inventory Asset\",\n    \"nominalCode\" : \"81\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n    \"name\" : \"Original Cost\",\n    \"nominalCode\" : \"38\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n    \"name\" : \"Prepaid Expenses\",\n    \"nominalCode\" : \"3\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"497559c7-60bf-476c-8b16-09b8952a9722\",\n    \"name\" : \"Savings\",\n    \"nominalCode\" : \"36\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n    \"name\" : \"Truck\",\n    \"nominalCode\" : \"37\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n    \"name\" : \"Uncategorized Asset\",\n    \"nominalCode\" : \"32\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n    \"name\" : \"Undeposited Funds\",\n    \"nominalCode\" : \"4\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n    \"name\" : \"Opening Balance Equity\",\n    \"nominalCode\" : \"34\",\n    \"category\" : \"Equity\"\n  }, {\n    \"id\" : \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n    \"name\" : \"Retained Earnings\",\n    \"nominalCode\" : \"2\",\n    \"category\" : \"Equity\"\n  }, {\n    \"id\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n    \"name\" : \"Accounting\",\n    \"nominalCode\" : \"69\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n    \"name\" : \"Advertising\",\n    \"nominalCode\" : \"7\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n    \"name\" : \"Automobile\",\n    \"nominalCode\" : \"55\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n    \"name\" : \"Bank Charges\",\n    \"nominalCode\" : \"8\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n    \"name\" : \"Bookkeeper\",\n    \"nominalCode\" : \"70\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n    \"name\" : \"Building Repairs\",\n    \"nominalCode\" : \"73\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n    \"name\" : \"Commissions & fees\",\n    \"nominalCode\" : \"9\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n    \"name\" : \"Computer Repairs\",\n    \"nominalCode\" : \"74\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n    \"name\" : \"Cost of Goods Sold\",\n    \"nominalCode\" : \"80\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n    \"name\" : \"Cost of Labor\",\n    \"nominalCode\" : \"59\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n    \"name\" : \"Decks and Patios\",\n    \"nominalCode\" : \"64\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n    \"name\" : \"Depreciation\",\n    \"nominalCode\" : \"40\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ccfb434a-b289-441c-99a2-30e05a572057\",\n    \"name\" : \"Disposal Fees\",\n    \"nominalCode\" : \"28\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n    \"name\" : \"Dues & Subscriptions\",\n    \"nominalCode\" : \"10\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n    \"name\" : \"Equipment Rental\",\n    \"nominalCode\" : \"29\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n    \"name\" : \"Equipment Rental\",\n    \"nominalCode\" : \"62\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n    \"name\" : \"Equipment Repairs\",\n    \"nominalCode\" : \"75\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n    \"name\" : \"Fountain and Garden Lighting\",\n    \"nominalCode\" : \"65\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"7877e117-f0ac-4142-841f-84e062f77128\",\n    \"name\" : \"Fuel\",\n    \"nominalCode\" : \"56\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n    \"name\" : \"Gas and Electric\",\n    \"nominalCode\" : \"76\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n    \"name\" : \"Installation\",\n    \"nominalCode\" : \"60\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n    \"name\" : \"Insurance\",\n    \"nominalCode\" : \"11\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n    \"name\" : \"Job Expenses\",\n    \"nominalCode\" : \"58\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n    \"name\" : \"Job Materials\",\n    \"nominalCode\" : \"63\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n    \"name\" : \"Lawyer\",\n    \"nominalCode\" : \"71\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n    \"name\" : \"Legal & Professional Fees\",\n    \"nominalCode\" : \"12\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n    \"name\" : \"Maintenance and Repair\",\n    \"nominalCode\" : \"72\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n    \"name\" : \"Maintenance and Repairs\",\n    \"nominalCode\" : \"61\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n    \"name\" : \"Meals and Entertainment\",\n    \"nominalCode\" : \"13\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n    \"name\" : \"Miscellaneous\",\n    \"nominalCode\" : \"14\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1e870df7-7255-41e2-8220-e24c301af038\",\n    \"name\" : \"Office Expenses\",\n    \"nominalCode\" : \"15\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n    \"name\" : \"Penalties & Settlements\",\n    \"nominalCode\" : \"27\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n    \"name\" : \"Permits\",\n    \"nominalCode\" : \"68\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n    \"name\" : \"Plants and Soil\",\n    \"nominalCode\" : \"66\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n    \"name\" : \"Promotional\",\n    \"nominalCode\" : \"16\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n    \"name\" : \"Purchases\",\n    \"nominalCode\" : \"78\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3b353731-f571-4854-8240-0d49cc81fecc\",\n    \"name\" : \"Rent or Lease\",\n    \"nominalCode\" : \"17\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n    \"name\" : \"Repair & Maintenance (deleted)\",\n    \"nominalCode\" : \"18\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n    \"name\" : \"Sprinklers and Drip Systems\",\n    \"nominalCode\" : \"67\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n    \"name\" : \"Stationery & Printing\",\n    \"nominalCode\" : \"19\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n    \"name\" : \"Supplies\",\n    \"nominalCode\" : \"20\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n    \"name\" : \"Taxes & Licenses\",\n    \"nominalCode\" : \"21\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n    \"name\" : \"Telephone\",\n    \"nominalCode\" : \"77\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n    \"name\" : \"Travel\",\n    \"nominalCode\" : \"22\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n    \"name\" : \"Travel Meals\",\n    \"nominalCode\" : \"23\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n    \"name\" : \"Unapplied Cash Bill Payment Expense\",\n    \"nominalCode\" : \"88\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n    \"name\" : \"Uncategorized Expense\",\n    \"nominalCode\" : \"31\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n    \"name\" : \"Utilities\",\n    \"nominalCode\" : \"24\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n    \"name\" : \"Workers Compensation\",\n    \"nominalCode\" : \"57\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n    \"name\" : \"Billable Expense Income\",\n    \"nominalCode\" : \"85\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n    \"name\" : \"Decks and Patios\",\n    \"nominalCode\" : \"47\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n    \"name\" : \"Design income\",\n    \"nominalCode\" : \"82\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n    \"name\" : \"Discounts given\",\n    \"nominalCode\" : \"86\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"ef961774-568d-4746-a790-fa8e22907db5\",\n    \"name\" : \"Fees Billed\",\n    \"nominalCode\" : \"5\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n    \"name\" : \"Fountains and Garden Lighting\",\n    \"nominalCode\" : \"48\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"442e062b-8585-4f14-9763-8990c9fd6087\",\n    \"name\" : \"Installation\",\n    \"nominalCode\" : \"52\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n    \"name\" : \"Interest Earned\",\n    \"nominalCode\" : \"25\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n    \"name\" : \"Job Materials\",\n    \"nominalCode\" : \"46\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n    \"name\" : \"Labor\",\n    \"nominalCode\" : \"51\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n    \"name\" : \"Landscaping Services\",\n    \"nominalCode\" : \"45\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n    \"name\" : \"Maintenance and Repair\",\n    \"nominalCode\" : \"53\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n    \"name\" : \"Other Income\",\n    \"nominalCode\" : \"83\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n    \"name\" : \"Other Portfolio Income\",\n    \"nominalCode\" : \"26\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n    \"name\" : \"Pest Control Services\",\n    \"nominalCode\" : \"54\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n    \"name\" : \"Plants and Soil\",\n    \"nominalCode\" : \"49\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n    \"name\" : \"Refunds-Allowances\",\n    \"nominalCode\" : \"6\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n    \"name\" : \"Sales of Product Income\",\n    \"nominalCode\" : \"79\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n    \"name\" : \"Services\",\n    \"nominalCode\" : \"1\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n    \"name\" : \"Sprinklers and Drip Systems\",\n    \"nominalCode\" : \"50\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n    \"name\" : \"Unapplied Cash Payment Income\",\n    \"nominalCode\" : \"87\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n    \"name\" : \"Uncategorized Income\",\n    \"nominalCode\" : \"30\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n    \"name\" : \"Accounts Payable\",\n    \"nominalCode\" : \"33\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n    \"name\" : \"Arizona Dept. of Revenue Payable\",\n    \"nominalCode\" : \"89\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n    \"name\" : \"Board of Equalization Payable\",\n    \"nominalCode\" : \"90\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n    \"name\" : \"Loan Payable\",\n    \"nominalCode\" : \"43\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n    \"name\" : \"Mastercard\",\n    \"nominalCode\" : \"41\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n    \"name\" : \"Notes Payable\",\n    \"nominalCode\" : \"44\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n    \"name\" : \"Visa\",\n    \"nominalCode\" : \"42\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n    \"name\" : \"Unknown\",\n    \"description\" : \"Amounts that are not attributed to any specific account.\",\n    \"category\" : \"Uncategorised\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const ChartOfAccountsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/chart-of-accounts\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"syncDatetime\" : \"2020-11-05T12:06:43Z\",\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n    \"name\" : \"Accounts Receivable\",\n    \"nominalCode\" : \"84\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"77b9ba20-924e-4be8-8077-87278297d915\",\n    \"name\" : \"Checking\",\n    \"nominalCode\" : \"35\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n    \"name\" : \"Depreciation\",\n    \"nominalCode\" : \"39\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n    \"name\" : \"Inventory Asset\",\n    \"nominalCode\" : \"81\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n    \"name\" : \"Original Cost\",\n    \"nominalCode\" : \"38\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n    \"name\" : \"Prepaid Expenses\",\n    \"nominalCode\" : \"3\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"497559c7-60bf-476c-8b16-09b8952a9722\",\n    \"name\" : \"Savings\",\n    \"nominalCode\" : \"36\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n    \"name\" : \"Truck\",\n    \"nominalCode\" : \"37\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n    \"name\" : \"Uncategorized Asset\",\n    \"nominalCode\" : \"32\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n    \"name\" : \"Undeposited Funds\",\n    \"nominalCode\" : \"4\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n    \"name\" : \"Opening Balance Equity\",\n    \"nominalCode\" : \"34\",\n    \"category\" : \"Equity\"\n  }, {\n    \"id\" : \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n    \"name\" : \"Retained Earnings\",\n    \"nominalCode\" : \"2\",\n    \"category\" : \"Equity\"\n  }, {\n    \"id\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n    \"name\" : \"Accounting\",\n    \"nominalCode\" : \"69\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n    \"name\" : \"Advertising\",\n    \"nominalCode\" : \"7\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n    \"name\" : \"Automobile\",\n    \"nominalCode\" : \"55\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n    \"name\" : \"Bank Charges\",\n    \"nominalCode\" : \"8\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n    \"name\" : \"Bookkeeper\",\n    \"nominalCode\" : \"70\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n    \"name\" : \"Building Repairs\",\n    \"nominalCode\" : \"73\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n    \"name\" : \"Commissions & fees\",\n    \"nominalCode\" : \"9\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n    \"name\" : \"Computer Repairs\",\n    \"nominalCode\" : \"74\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n    \"name\" : \"Cost of Goods Sold\",\n    \"nominalCode\" : \"80\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n    \"name\" : \"Cost of Labor\",\n    \"nominalCode\" : \"59\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n    \"name\" : \"Decks and Patios\",\n    \"nominalCode\" : \"64\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n    \"name\" : \"Depreciation\",\n    \"nominalCode\" : \"40\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ccfb434a-b289-441c-99a2-30e05a572057\",\n    \"name\" : \"Disposal Fees\",\n    \"nominalCode\" : \"28\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n    \"name\" : \"Dues & Subscriptions\",\n    \"nominalCode\" : \"10\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n    \"name\" : \"Equipment Rental\",\n    \"nominalCode\" : \"29\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n    \"name\" : \"Equipment Rental\",\n    \"nominalCode\" : \"62\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n    \"name\" : \"Equipment Repairs\",\n    \"nominalCode\" : \"75\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n    \"name\" : \"Fountain and Garden Lighting\",\n    \"nominalCode\" : \"65\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"7877e117-f0ac-4142-841f-84e062f77128\",\n    \"name\" : \"Fuel\",\n    \"nominalCode\" : \"56\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n    \"name\" : \"Gas and Electric\",\n    \"nominalCode\" : \"76\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n    \"name\" : \"Installation\",\n    \"nominalCode\" : \"60\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n    \"name\" : \"Insurance\",\n    \"nominalCode\" : \"11\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n    \"name\" : \"Job Expenses\",\n    \"nominalCode\" : \"58\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n    \"name\" : \"Job Materials\",\n    \"nominalCode\" : \"63\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n    \"name\" : \"Lawyer\",\n    \"nominalCode\" : \"71\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n    \"name\" : \"Legal & Professional Fees\",\n    \"nominalCode\" : \"12\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n    \"name\" : \"Maintenance and Repair\",\n    \"nominalCode\" : \"72\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n    \"name\" : \"Maintenance and Repairs\",\n    \"nominalCode\" : \"61\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n    \"name\" : \"Meals and Entertainment\",\n    \"nominalCode\" : \"13\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n    \"name\" : \"Miscellaneous\",\n    \"nominalCode\" : \"14\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1e870df7-7255-41e2-8220-e24c301af038\",\n    \"name\" : \"Office Expenses\",\n    \"nominalCode\" : \"15\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n    \"name\" : \"Penalties & Settlements\",\n    \"nominalCode\" : \"27\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n    \"name\" : \"Permits\",\n    \"nominalCode\" : \"68\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n    \"name\" : \"Plants and Soil\",\n    \"nominalCode\" : \"66\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n    \"name\" : \"Promotional\",\n    \"nominalCode\" : \"16\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n    \"name\" : \"Purchases\",\n    \"nominalCode\" : \"78\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3b353731-f571-4854-8240-0d49cc81fecc\",\n    \"name\" : \"Rent or Lease\",\n    \"nominalCode\" : \"17\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n    \"name\" : \"Repair & Maintenance (deleted)\",\n    \"nominalCode\" : \"18\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n    \"name\" : \"Sprinklers and Drip Systems\",\n    \"nominalCode\" : \"67\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n    \"name\" : \"Stationery & Printing\",\n    \"nominalCode\" : \"19\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n    \"name\" : \"Supplies\",\n    \"nominalCode\" : \"20\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n    \"name\" : \"Taxes & Licenses\",\n    \"nominalCode\" : \"21\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n    \"name\" : \"Telephone\",\n    \"nominalCode\" : \"77\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n    \"name\" : \"Travel\",\n    \"nominalCode\" : \"22\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n    \"name\" : \"Travel Meals\",\n    \"nominalCode\" : \"23\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n    \"name\" : \"Unapplied Cash Bill Payment Expense\",\n    \"nominalCode\" : \"88\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n    \"name\" : \"Uncategorized Expense\",\n    \"nominalCode\" : \"31\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n    \"name\" : \"Utilities\",\n    \"nominalCode\" : \"24\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n    \"name\" : \"Workers Compensation\",\n    \"nominalCode\" : \"57\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n    \"name\" : \"Billable Expense Income\",\n    \"nominalCode\" : \"85\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n    \"name\" : \"Decks and Patios\",\n    \"nominalCode\" : \"47\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n    \"name\" : \"Design income\",\n    \"nominalCode\" : \"82\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n    \"name\" : \"Discounts given\",\n    \"nominalCode\" : \"86\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"ef961774-568d-4746-a790-fa8e22907db5\",\n    \"name\" : \"Fees Billed\",\n    \"nominalCode\" : \"5\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n    \"name\" : \"Fountains and Garden Lighting\",\n    \"nominalCode\" : \"48\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"442e062b-8585-4f14-9763-8990c9fd6087\",\n    \"name\" : \"Installation\",\n    \"nominalCode\" : \"52\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n    \"name\" : \"Interest Earned\",\n    \"nominalCode\" : \"25\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n    \"name\" : \"Job Materials\",\n    \"nominalCode\" : \"46\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n    \"name\" : \"Labor\",\n    \"nominalCode\" : \"51\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n    \"name\" : \"Landscaping Services\",\n    \"nominalCode\" : \"45\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n    \"name\" : \"Maintenance and Repair\",\n    \"nominalCode\" : \"53\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n    \"name\" : \"Other Income\",\n    \"nominalCode\" : \"83\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n    \"name\" : \"Other Portfolio Income\",\n    \"nominalCode\" : \"26\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n    \"name\" : \"Pest Control Services\",\n    \"nominalCode\" : \"54\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n    \"name\" : \"Plants and Soil\",\n    \"nominalCode\" : \"49\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n    \"name\" : \"Refunds-Allowances\",\n    \"nominalCode\" : \"6\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n    \"name\" : \"Sales of Product Income\",\n    \"nominalCode\" : \"79\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n    \"name\" : \"Services\",\n    \"nominalCode\" : \"1\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n    \"name\" : \"Sprinklers and Drip Systems\",\n    \"nominalCode\" : \"50\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n    \"name\" : \"Unapplied Cash Payment Income\",\n    \"nominalCode\" : \"87\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n    \"name\" : \"Uncategorized Income\",\n    \"nominalCode\" : \"30\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n    \"name\" : \"Accounts Payable\",\n    \"nominalCode\" : \"33\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n    \"name\" : \"Arizona Dept. of Revenue Payable\",\n    \"nominalCode\" : \"89\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n    \"name\" : \"Board of Equalization Payable\",\n    \"nominalCode\" : \"90\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n    \"name\" : \"Loan Payable\",\n    \"nominalCode\" : \"43\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n    \"name\" : \"Mastercard\",\n    \"nominalCode\" : \"41\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n    \"name\" : \"Notes Payable\",\n    \"nominalCode\" : \"44\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n    \"name\" : \"Visa\",\n    \"nominalCode\" : \"42\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n    \"name\" : \"Unknown\",\n    \"description\" : \"Amounts that are not attributed to any specific account.\",\n    \"category\" : \"Uncategorised\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { PresentationDefaultCurrency } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { CASH_FLOW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CashFlowConfiguration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultCurrencyHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CashFlowConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CASH_FLOW_BASE_PATH) basePath: string, @Optional() configuration: CashFlowConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Gets default currency of the cashflow forecasting.\n     * Gets default currency of the cashflow forecasting\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDefaultCurrency(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationDefaultCurrency>;\n    /**\n     * Gets default currency of the cashflow forecasting.\n     * Gets default currency of the cashflow forecasting\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDefaultCurrency(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationDefaultCurrency>>;\n    /**\n     * Gets default currency of the cashflow forecasting.\n     * Gets default currency of the cashflow forecasting\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDefaultCurrency(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationDefaultCurrency>>;\n    /**\n     * Gets default currency of the cashflow forecasting.\n     * Gets default currency of the cashflow forecasting\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDefaultCurrency(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationDefaultCurrency>(`${this.configuration.basePath}/client-api/v1/default-currency`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getDefaultCurrencyUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/default-currency`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/default-currency URL pattern\n*/\nexport const DefaultCurrencyHttpServiceGetDefaultCurrencyMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/default-currency\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"value\" : \"USD\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const DefaultCurrencyHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/default-currency\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"value\" : \"USD\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { PresentationForecastConfiguration } from '../model/models';\nimport { PresentationForecastConfigurations } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { CASH_FLOW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CashFlowConfiguration }                                     from '../configuration';\n\n\nexport interface GetForecastConfigurationByIdRequestParams {\n    /** Generated parameter by BOAT. Please specify the URI parameter in RAML */\n    [\"configurationId\"]: string;\n}\n\nexport interface PostForecastConfigurationsRequestParams {\n    /** Creates forecast configuration. */\n    [\"presentationForecastConfiguration\"]?: PresentationForecastConfiguration;\n}\n\nexport interface PutForecastConfigurationByIdRequestParams {\n    /** Generated parameter by BOAT. Please specify the URI parameter in RAML */\n    [\"configurationId\"]: string;\n    /** Updates forecast configuration by given id. */\n    [\"presentationForecastConfiguration\"]?: PresentationForecastConfiguration;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastConfigurationsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CashFlowConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CASH_FLOW_BASE_PATH) basePath: string, @Optional() configuration: CashFlowConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Gets forecast configuration by given id.\n     * Gets forecast configuration by given id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastConfigurationById(requestParameters: GetForecastConfigurationByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationForecastConfiguration>;\n    /**\n     * Gets forecast configuration by given id.\n     * Gets forecast configuration by given id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastConfigurationById(requestParameters: GetForecastConfigurationByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationForecastConfiguration>>;\n    /**\n     * Gets forecast configuration by given id.\n     * Gets forecast configuration by given id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastConfigurationById(requestParameters: GetForecastConfigurationByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationForecastConfiguration>>;\n    /**\n     * Gets forecast configuration by given id.\n     * Gets forecast configuration by given id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastConfigurationById(requestParameters: GetForecastConfigurationByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _configurationId = requestParameters[\"configurationId\"];\n        if (_configurationId === null || _configurationId === undefined) {\n            throw new Error('Required parameter configurationId was null or undefined when calling getForecastConfigurationById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationForecastConfiguration>(`${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getForecastConfigurationByIdUrl(requestParameters: GetForecastConfigurationByIdRequestParams): string {\n        const _configurationId = requestParameters[\"configurationId\"];\n        if (_configurationId === null || _configurationId === undefined) {\n            throw new Error('Required parameter configurationId was null or undefined when calling getForecastConfigurationById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`;\n    }\n\n    /**\n     * Gets all forecast configurations of current user.\n     * Gets all forecast configurations of current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastConfigurations(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationForecastConfigurations>;\n    /**\n     * Gets all forecast configurations of current user.\n     * Gets all forecast configurations of current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastConfigurations(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationForecastConfigurations>>;\n    /**\n     * Gets all forecast configurations of current user.\n     * Gets all forecast configurations of current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastConfigurations(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationForecastConfigurations>>;\n    /**\n     * Gets all forecast configurations of current user.\n     * Gets all forecast configurations of current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastConfigurations(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationForecastConfigurations>(`${this.configuration.basePath}/client-api/v1/forecast-configurations`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getForecastConfigurationsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/forecast-configurations`;\n    }\n\n    /**\n     * Creates forecast configuration.\n     * Creates forecast configuration.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postForecastConfigurations(requestParameters: PostForecastConfigurationsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationForecastConfiguration>;\n    /**\n     * Creates forecast configuration.\n     * Creates forecast configuration.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postForecastConfigurations(requestParameters: PostForecastConfigurationsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationForecastConfiguration>>;\n    /**\n     * Creates forecast configuration.\n     * Creates forecast configuration.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postForecastConfigurations(requestParameters: PostForecastConfigurationsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationForecastConfiguration>>;\n    /**\n     * Creates forecast configuration.\n     * Creates forecast configuration.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postForecastConfigurations(requestParameters: PostForecastConfigurationsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationForecastConfiguration>(`${this.configuration.basePath}/client-api/v1/forecast-configurations`,\n            _presentationForecastConfiguration,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postForecastConfigurationsUrl(requestParameters: PostForecastConfigurationsRequestParams): string {\n        const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n        return `${this.configuration.basePath}/client-api/v1/forecast-configurations`;\n    }\n\n    /**\n     * Updates forecast configuration by given id.\n     * Updates forecast configuration by given id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putForecastConfigurationById(requestParameters: PutForecastConfigurationByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationForecastConfiguration>;\n    /**\n     * Updates forecast configuration by given id.\n     * Updates forecast configuration by given id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putForecastConfigurationById(requestParameters: PutForecastConfigurationByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationForecastConfiguration>>;\n    /**\n     * Updates forecast configuration by given id.\n     * Updates forecast configuration by given id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putForecastConfigurationById(requestParameters: PutForecastConfigurationByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationForecastConfiguration>>;\n    /**\n     * Updates forecast configuration by given id.\n     * Updates forecast configuration by given id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putForecastConfigurationById(requestParameters: PutForecastConfigurationByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _configurationId = requestParameters[\"configurationId\"];\n        if (_configurationId === null || _configurationId === undefined) {\n            throw new Error('Required parameter configurationId was null or undefined when calling putForecastConfigurationById.');\n        }\n        const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<PresentationForecastConfiguration>(`${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`,\n            _presentationForecastConfiguration,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putForecastConfigurationByIdUrl(requestParameters: PutForecastConfigurationByIdRequestParams): string {\n        const _configurationId = requestParameters[\"configurationId\"];\n        if (_configurationId === null || _configurationId === undefined) {\n            throw new Error('Required parameter configurationId was null or undefined when calling putForecastConfigurationById.');\n        }\n        const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n        return `${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/forecast-configurations/{configurationId} URL pattern\n*/\nexport const ForecastConfigurationsHttpServiceGetForecastConfigurationByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n  \"currencyCode\" : \"USD\",\n  \"bankAccountIds\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\" ],\n  \"chartOfAccountIds\" : [ \"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\" ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"chartOfAccountIds\" : [ \"chartOfAccountIds\", \"chartOfAccountIds\" ],\n  \"id\" : \"id\",\n  \"currencyCode\" : \"currencyCode\",\n  \"bankAccountIds\" : [ \"bankAccountIds\", \"bankAccountIds\" ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/forecast-configurations URL pattern\n*/\nexport const ForecastConfigurationsHttpServiceGetForecastConfigurationsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/forecast-configurations\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"configurations\" : [ {\n    \"currencyCode\" : \"EUR\",\n    \"bankAccountIds\" : [ \"99bae364-1aa4-45a7-87e5-249d5b22242c\", \"4d3740af-11f3-4bd8-915e-4850184ede9f\", \"473ec899-85a7-49f0-9fca-961bfb133d9c\" ],\n    \"chartOfAccountIds\" : [ \"43032a1e-f466-40fd-8ed7-f92acbd0ecb6\", \"846bdab7-5b95-4977-a71f-3a8fdd28770b\", \"860acb60-ddcb-4a56-a773-947b1883eaf0\" ]\n  }, {\n    \"currencyCode\" : \"USD\",\n    \"bankAccountIds\" : [ \"fecfcdc6-8675-457d-b3b1-07b254bc7445\", \"02556b90-d759-4efe-ac74-4fa6286b07ab\", \"2c04b8e1-4fdf-4317-870e-d2caf5474b75\" ],\n    \"chartOfAccountIds\" : [ \"0bd55bdb-f407-4b1b-a049-995a534a6877\", \"6e37e319-c753-4f70-8842-50dec650ed67\", \"0f52a8d1-66a7-4a0c-94fb-3f7f3644c913\" ]\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/forecast-configurations URL pattern\n*/\nexport const ForecastConfigurationsHttpServicePostForecastConfigurationsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/forecast-configurations\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n  \"currencyCode\" : \"USD\",\n  \"bankAccountIds\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\" ],\n  \"chartOfAccountIds\" : [ \"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\" ]\n}\n                },\n                {\n                    status: 201,\n                    body: {\n  \"chartOfAccountIds\" : [ \"chartOfAccountIds\", \"chartOfAccountIds\" ],\n  \"id\" : \"id\",\n  \"currencyCode\" : \"currencyCode\",\n  \"bankAccountIds\" : [ \"bankAccountIds\", \"bankAccountIds\" ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/forecast-configurations/{configurationId} URL pattern\n*/\nexport const ForecastConfigurationsHttpServicePutForecastConfigurationByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n  \"currencyCode\" : \"USD\",\n  \"bankAccountIds\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\" ],\n  \"chartOfAccountIds\" : [ \"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\" ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"chartOfAccountIds\" : [ \"chartOfAccountIds\", \"chartOfAccountIds\" ],\n  \"id\" : \"id\",\n  \"currencyCode\" : \"currencyCode\",\n  \"bankAccountIds\" : [ \"bankAccountIds\", \"bankAccountIds\" ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const ForecastConfigurationsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n  \"currencyCode\" : \"USD\",\n  \"bankAccountIds\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\" ],\n  \"chartOfAccountIds\" : [ \"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\" ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"chartOfAccountIds\" : [ \"chartOfAccountIds\", \"chartOfAccountIds\" ],\n  \"id\" : \"id\",\n  \"currencyCode\" : \"currencyCode\",\n  \"bankAccountIds\" : [ \"bankAccountIds\", \"bankAccountIds\" ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/forecast-configurations\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"configurations\" : [ {\n    \"currencyCode\" : \"EUR\",\n    \"bankAccountIds\" : [ \"99bae364-1aa4-45a7-87e5-249d5b22242c\", \"4d3740af-11f3-4bd8-915e-4850184ede9f\", \"473ec899-85a7-49f0-9fca-961bfb133d9c\" ],\n    \"chartOfAccountIds\" : [ \"43032a1e-f466-40fd-8ed7-f92acbd0ecb6\", \"846bdab7-5b95-4977-a71f-3a8fdd28770b\", \"860acb60-ddcb-4a56-a773-947b1883eaf0\" ]\n  }, {\n    \"currencyCode\" : \"USD\",\n    \"bankAccountIds\" : [ \"fecfcdc6-8675-457d-b3b1-07b254bc7445\", \"02556b90-d759-4efe-ac74-4fa6286b07ab\", \"2c04b8e1-4fdf-4317-870e-d2caf5474b75\" ],\n    \"chartOfAccountIds\" : [ \"0bd55bdb-f407-4b1b-a049-995a534a6877\", \"6e37e319-c753-4f70-8842-50dec650ed67\", \"0f52a8d1-66a7-4a0c-94fb-3f7f3644c913\" ]\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/forecast-configurations\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n  \"currencyCode\" : \"USD\",\n  \"bankAccountIds\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\" ],\n  \"chartOfAccountIds\" : [ \"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\" ]\n}\n            },\n            {\n                status: 201,\n                body: {\n  \"chartOfAccountIds\" : [ \"chartOfAccountIds\", \"chartOfAccountIds\" ],\n  \"id\" : \"id\",\n  \"currencyCode\" : \"currencyCode\",\n  \"bankAccountIds\" : [ \"bankAccountIds\", \"bankAccountIds\" ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n  \"currencyCode\" : \"USD\",\n  \"bankAccountIds\" : [ \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\" ],\n  \"chartOfAccountIds\" : [ \"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\" ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"chartOfAccountIds\" : [ \"chartOfAccountIds\", \"chartOfAccountIds\" ],\n  \"id\" : \"id\",\n  \"currencyCode\" : \"currencyCode\",\n  \"bankAccountIds\" : [ \"bankAccountIds\", \"bankAccountIds\" ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationForecast } from '../model/models';\nimport { PresentationForecastReferences } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { CASH_FLOW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CashFlowConfiguration }                                     from '../configuration';\n\n\nexport interface GetForecastByIdRequestParams {\n    /** Generated parameter by BOAT. Please specify the URI parameter in RAML */\n    [\"forecastId\"]: string;\n    /** Specifies type of cadence which will be used for forecast split. */\n    [\"cadenceType\"]: 'Day' | 'Week' | 'Month';\n    /** Amount of projection cadences. */\n    [\"projectionAmount\"]?: number;\n    /** Amount of history cadences. */\n    [\"historyAmount\"]?: number;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CashFlowConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CASH_FLOW_BASE_PATH) basePath: string, @Optional() configuration: CashFlowConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Gets cash flow forecast.\n     * Gets cash flow forecast.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastById(requestParameters: GetForecastByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationForecast>;\n    /**\n     * Gets cash flow forecast.\n     * Gets cash flow forecast.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastById(requestParameters: GetForecastByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationForecast>>;\n    /**\n     * Gets cash flow forecast.\n     * Gets cash flow forecast.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastById(requestParameters: GetForecastByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationForecast>>;\n    /**\n     * Gets cash flow forecast.\n     * Gets cash flow forecast.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecastById(requestParameters: GetForecastByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _forecastId = requestParameters[\"forecastId\"];\n        if (_forecastId === null || _forecastId === undefined) {\n            throw new Error('Required parameter forecastId was null or undefined when calling getForecastById.');\n        }\n        const _cadenceType = requestParameters[\"cadenceType\"];\n        if (_cadenceType === null || _cadenceType === undefined) {\n            throw new Error('Required parameter cadenceType was null or undefined when calling getForecastById.');\n        }\n        const _projectionAmount = requestParameters[\"projectionAmount\"];\n        const _historyAmount = requestParameters[\"historyAmount\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cadenceType !== undefined && _cadenceType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cadenceType, 'cadenceType');\n        }\n        if (_projectionAmount !== undefined && _projectionAmount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_projectionAmount, 'projectionAmount');\n        }\n        if (_historyAmount !== undefined && _historyAmount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_historyAmount, 'historyAmount');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationForecast>(`${this.configuration.basePath}/client-api/v1/forecasts/${encodeURIComponent(String(_forecastId))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getForecastByIdUrl(requestParameters: GetForecastByIdRequestParams): string {\n        const _forecastId = requestParameters[\"forecastId\"];\n        if (_forecastId === null || _forecastId === undefined) {\n            throw new Error('Required parameter forecastId was null or undefined when calling getForecastById.');\n        }\n        const _cadenceType = requestParameters[\"cadenceType\"];\n        if (_cadenceType === null || _cadenceType === undefined) {\n            throw new Error('Required parameter cadenceType was null or undefined when calling getForecastById.');\n        }\n        const _projectionAmount = requestParameters[\"projectionAmount\"];\n        const _historyAmount = requestParameters[\"historyAmount\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cadenceType !== undefined && _cadenceType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cadenceType, 'cadenceType');\n        }\n        if (_projectionAmount !== undefined && _projectionAmount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_projectionAmount, 'projectionAmount');\n        }\n        if (_historyAmount !== undefined && _historyAmount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_historyAmount, 'historyAmount');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/forecasts/${encodeURIComponent(String(_forecastId))}${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Gets references of all forecasts of the current user.\n     * Gets references of all forecasts of the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecasts(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationForecastReferences>;\n    /**\n     * Gets references of all forecasts of the current user.\n     * Gets references of all forecasts of the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecasts(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationForecastReferences>>;\n    /**\n     * Gets references of all forecasts of the current user.\n     * Gets references of all forecasts of the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecasts(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationForecastReferences>>;\n    /**\n     * Gets references of all forecasts of the current user.\n     * Gets references of all forecasts of the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getForecasts(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationForecastReferences>(`${this.configuration.basePath}/client-api/v1/forecasts`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getForecastsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/forecasts`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/forecasts/{forecastId} URL pattern\n*/\nexport const ForecastsHttpServiceGetForecastByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/forecasts/{forecastId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"configurationId\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n  \"syncDatetime\" : \"2020-11-05T11:56:15Z\",\n  \"currentBalance\" : \"10575882.77283\",\n  \"currencyCode\" : \"USD\",\n  \"history\" : [ {\n    \"startDate\" : \"2020-11-03\",\n    \"endDate\" : \"2020-11-03\",\n    \"openingBalance\" : \"-20500.00000\",\n    \"closingBalance\" : \"-15500.00000\",\n    \"netChange\" : \"5000.00000\"\n  }, {\n    \"startDate\" : \"2020-11-04\",\n    \"endDate\" : \"2020-11-04\",\n    \"openingBalance\" : \"-15500.00000\",\n    \"closingBalance\" : \"0\",\n    \"netChange\" : \"15500.00000\"\n  } ],\n  \"projection\" : [ {\n    \"startDate\" : \"2020-11-05\",\n    \"endDate\" : \"2020-11-05\",\n    \"openingBalance\" : \"0\",\n    \"closingBalance\" : \"6682.33000\",\n    \"netChange\" : \"6682.33000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-1412.67000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"balanceChange\" : \"-1085.00000\"\n      }, {\n        \"accountId\" : \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n        \"balanceChange\" : \"-86.44000\"\n      }, {\n        \"accountId\" : \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n        \"balanceChange\" : \"-241.23000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"8300.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"8300.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Uncategorised\",\n      \"balanceChange\" : \"-205.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n        \"balanceChange\" : \"-205.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-06\",\n    \"endDate\" : \"2020-11-06\",\n    \"openingBalance\" : \"6682.33000\",\n    \"closingBalance\" : \"2337.33000\",\n    \"netChange\" : \"-4345.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-14840.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n        \"balanceChange\" : \"-14840.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"10495.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"10495.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-07\",\n    \"endDate\" : \"2020-11-07\",\n    \"openingBalance\" : \"2337.33000\",\n    \"closingBalance\" : \"-447.67000\",\n    \"netChange\" : \"-2785.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-17785.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n        \"balanceChange\" : \"-755.00000\"\n      }, {\n        \"accountId\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"balanceChange\" : \"-17030.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"15000.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n        \"balanceChange\" : \"15000.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-08\",\n    \"endDate\" : \"2020-11-08\",\n    \"openingBalance\" : \"-447.67000\",\n    \"closingBalance\" : \"38332.33000\",\n    \"netChange\" : \"38780.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-200.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"balanceChange\" : \"-200.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"38980.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"38980.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-09\",\n    \"endDate\" : \"2020-11-09\",\n    \"openingBalance\" : \"38332.33000\",\n    \"closingBalance\" : \"62587.33000\",\n    \"netChange\" : \"24255.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-945.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"balanceChange\" : \"-945.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"25200.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"25200.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-10\",\n    \"endDate\" : \"2020-11-10\",\n    \"openingBalance\" : \"62587.33000\",\n    \"closingBalance\" : \"76977.33000\",\n    \"netChange\" : \"14390.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-12760.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n        \"balanceChange\" : \"-12760.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"27150.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n        \"balanceChange\" : \"27150.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-11\",\n    \"endDate\" : \"2020-11-11\",\n    \"openingBalance\" : \"76977.33000\",\n    \"closingBalance\" : \"72327.33000\",\n    \"netChange\" : \"-4650.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Asset\",\n      \"balanceChange\" : \"-18900.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n        \"balanceChange\" : \"-18900.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"14250.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n        \"balanceChange\" : \"14250.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-12\",\n    \"endDate\" : \"2020-11-12\",\n    \"openingBalance\" : \"72327.33000\",\n    \"closingBalance\" : \"86627.33000\",\n    \"netChange\" : \"14300.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-4600.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n        \"balanceChange\" : \"-4600.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"18900.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"18900.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-13\",\n    \"endDate\" : \"2020-11-13\",\n    \"openingBalance\" : \"86627.33000\",\n    \"closingBalance\" : \"87837.33000\",\n    \"netChange\" : \"1210.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-5800.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n        \"balanceChange\" : \"-5800.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"7010.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n        \"balanceChange\" : \"7010.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-14\",\n    \"endDate\" : \"2020-11-14\",\n    \"openingBalance\" : \"87837.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"22100.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-900.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n        \"balanceChange\" : \"-300.00000\"\n      }, {\n        \"accountId\" : \"3b353731-f571-4854-8240-0d49cc81fecc\",\n        \"balanceChange\" : \"-600.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"23000.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"23000.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-15\",\n    \"endDate\" : \"2020-11-15\",\n    \"openingBalance\" : \"109937.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"0.00000\",\n    \"categoryBalanceChanges\" : [ ]\n  }, {\n    \"startDate\" : \"2020-11-16\",\n    \"endDate\" : \"2020-11-16\",\n    \"openingBalance\" : \"109937.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"0.00000\",\n    \"categoryBalanceChanges\" : [ ]\n  }, {\n    \"startDate\" : \"2020-11-17\",\n    \"endDate\" : \"2020-11-17\",\n    \"openingBalance\" : \"109937.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"0.00000\",\n    \"categoryBalanceChanges\" : [ ]\n  }, {\n    \"startDate\" : \"2020-11-18\",\n    \"endDate\" : \"2020-11-18\",\n    \"openingBalance\" : \"109937.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"0.00000\",\n    \"categoryBalanceChanges\" : [ ]\n  } ],\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n    \"name\" : \"Accounts Receivable (A/R)\",\n    \"nominalCode\" : \"84\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"77b9ba20-924e-4be8-8077-87278297d915\",\n    \"name\" : \"Checking\",\n    \"nominalCode\" : \"35\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n    \"name\" : \"Depreciation\",\n    \"nominalCode\" : \"39\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n    \"name\" : \"Inventory Asset\",\n    \"nominalCode\" : \"81\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n    \"name\" : \"Original Cost\",\n    \"nominalCode\" : \"38\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n    \"name\" : \"Prepaid Expenses\",\n    \"nominalCode\" : \"3\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"497559c7-60bf-476c-8b16-09b8952a9722\",\n    \"name\" : \"Savings\",\n    \"nominalCode\" : \"36\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n    \"name\" : \"Truck\",\n    \"nominalCode\" : \"37\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n    \"name\" : \"Uncategorized Asset\",\n    \"nominalCode\" : \"32\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n    \"name\" : \"Undeposited Funds\",\n    \"nominalCode\" : \"4\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n    \"name\" : \"Opening Balance Equity\",\n    \"nominalCode\" : \"34\",\n    \"category\" : \"Equity\"\n  }, {\n    \"id\" : \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n    \"name\" : \"Retained Earnings\",\n    \"nominalCode\" : \"2\",\n    \"category\" : \"Equity\"\n  }, {\n    \"id\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n    \"name\" : \"Accounting\",\n    \"nominalCode\" : \"69\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n    \"name\" : \"Advertising\",\n    \"nominalCode\" : \"7\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n    \"name\" : \"Automobile\",\n    \"nominalCode\" : \"55\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n    \"name\" : \"Bank Charges\",\n    \"nominalCode\" : \"8\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n    \"name\" : \"Bookkeeper\",\n    \"nominalCode\" : \"70\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n    \"name\" : \"Building Repairs\",\n    \"nominalCode\" : \"73\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n    \"name\" : \"Commissions & fees\",\n    \"nominalCode\" : \"9\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n    \"name\" : \"Computer Repairs\",\n    \"nominalCode\" : \"74\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n    \"name\" : \"Cost of Goods Sold\",\n    \"nominalCode\" : \"80\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n    \"name\" : \"Cost of Labor\",\n    \"nominalCode\" : \"59\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n    \"name\" : \"Decks and Patios\",\n    \"nominalCode\" : \"64\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n    \"name\" : \"Depreciation\",\n    \"nominalCode\" : \"40\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ccfb434a-b289-441c-99a2-30e05a572057\",\n    \"name\" : \"Disposal Fees\",\n    \"nominalCode\" : \"28\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n    \"name\" : \"Dues & Subscriptions\",\n    \"nominalCode\" : \"10\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n    \"name\" : \"Equipment Rental\",\n    \"nominalCode\" : \"29\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n    \"name\" : \"Equipment Rental\",\n    \"nominalCode\" : \"62\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n    \"name\" : \"Equipment Repairs\",\n    \"nominalCode\" : \"75\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n    \"name\" : \"Fountain and Garden Lighting\",\n    \"nominalCode\" : \"65\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"7877e117-f0ac-4142-841f-84e062f77128\",\n    \"name\" : \"Fuel\",\n    \"nominalCode\" : \"56\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n    \"name\" : \"Gas and Electric\",\n    \"nominalCode\" : \"76\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n    \"name\" : \"Installation\",\n    \"nominalCode\" : \"60\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n    \"name\" : \"Insurance\",\n    \"nominalCode\" : \"11\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n    \"name\" : \"Job Expenses\",\n    \"nominalCode\" : \"58\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n    \"name\" : \"Job Materials\",\n    \"nominalCode\" : \"63\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n    \"name\" : \"Lawyer\",\n    \"nominalCode\" : \"71\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n    \"name\" : \"Legal & Professional Fees\",\n    \"nominalCode\" : \"12\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n    \"name\" : \"Maintenance and Repair\",\n    \"nominalCode\" : \"72\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n    \"name\" : \"Maintenance and Repairs\",\n    \"nominalCode\" : \"61\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n    \"name\" : \"Meals and Entertainment\",\n    \"nominalCode\" : \"13\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n    \"name\" : \"Miscellaneous\",\n    \"nominalCode\" : \"14\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1e870df7-7255-41e2-8220-e24c301af038\",\n    \"name\" : \"Office Expenses\",\n    \"nominalCode\" : \"15\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n    \"name\" : \"Penalties & Settlements\",\n    \"nominalCode\" : \"27\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n    \"name\" : \"Permits\",\n    \"nominalCode\" : \"68\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n    \"name\" : \"Plants and Soil\",\n    \"nominalCode\" : \"66\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n    \"name\" : \"Promotional\",\n    \"nominalCode\" : \"16\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n    \"name\" : \"Purchases\",\n    \"nominalCode\" : \"78\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3b353731-f571-4854-8240-0d49cc81fecc\",\n    \"name\" : \"Rent or Lease\",\n    \"nominalCode\" : \"17\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n    \"name\" : \"Repair & Maintenance (deleted)\",\n    \"nominalCode\" : \"18\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n    \"name\" : \"Sprinklers and Drip Systems\",\n    \"nominalCode\" : \"67\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n    \"name\" : \"Stationery & Printing\",\n    \"nominalCode\" : \"19\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n    \"name\" : \"Supplies\",\n    \"nominalCode\" : \"20\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n    \"name\" : \"Taxes & Licenses\",\n    \"nominalCode\" : \"21\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n    \"name\" : \"Telephone\",\n    \"nominalCode\" : \"77\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n    \"name\" : \"Travel\",\n    \"nominalCode\" : \"22\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n    \"name\" : \"Travel Meals\",\n    \"nominalCode\" : \"23\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n    \"name\" : \"Unapplied Cash Bill Payment Expense\",\n    \"nominalCode\" : \"88\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n    \"name\" : \"Uncategorized Expense\",\n    \"nominalCode\" : \"31\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n    \"name\" : \"Utilities\",\n    \"nominalCode\" : \"24\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n    \"name\" : \"Workers Compensation\",\n    \"nominalCode\" : \"57\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n    \"name\" : \"Billable Expense Income\",\n    \"nominalCode\" : \"85\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n    \"name\" : \"Decks and Patios\",\n    \"nominalCode\" : \"47\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n    \"name\" : \"Design income\",\n    \"nominalCode\" : \"82\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n    \"name\" : \"Discounts given\",\n    \"nominalCode\" : \"86\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"ef961774-568d-4746-a790-fa8e22907db5\",\n    \"name\" : \"Fees Billed\",\n    \"nominalCode\" : \"5\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n    \"name\" : \"Fountains and Garden Lighting\",\n    \"nominalCode\" : \"48\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"442e062b-8585-4f14-9763-8990c9fd6087\",\n    \"name\" : \"Installation\",\n    \"nominalCode\" : \"52\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n    \"name\" : \"Interest Earned\",\n    \"nominalCode\" : \"25\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n    \"name\" : \"Job Materials\",\n    \"nominalCode\" : \"46\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n    \"name\" : \"Labor\",\n    \"nominalCode\" : \"51\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n    \"name\" : \"Landscaping Services\",\n    \"nominalCode\" : \"45\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n    \"name\" : \"Maintenance and Repair\",\n    \"nominalCode\" : \"53\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n    \"name\" : \"Other Income\",\n    \"nominalCode\" : \"83\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n    \"name\" : \"Other Portfolio Income\",\n    \"nominalCode\" : \"26\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n    \"name\" : \"Pest Control Services\",\n    \"nominalCode\" : \"54\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n    \"name\" : \"Plants and Soil\",\n    \"nominalCode\" : \"49\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n    \"name\" : \"Refunds-Allowances\",\n    \"nominalCode\" : \"6\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n    \"name\" : \"Sales of Product Income\",\n    \"nominalCode\" : \"79\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n    \"name\" : \"Services\",\n    \"nominalCode\" : \"1\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n    \"name\" : \"Sprinklers and Drip Systems\",\n    \"nominalCode\" : \"50\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n    \"name\" : \"Unapplied Cash Payment Income\",\n    \"nominalCode\" : \"87\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n    \"name\" : \"Uncategorized Income\",\n    \"nominalCode\" : \"30\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n    \"name\" : \"Accounts Payable (A/P)\",\n    \"nominalCode\" : \"33\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n    \"name\" : \"Arizona Dept. of Revenue Payable\",\n    \"nominalCode\" : \"89\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n    \"name\" : \"Board of Equalization Payable\",\n    \"nominalCode\" : \"90\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n    \"name\" : \"Loan Payable\",\n    \"nominalCode\" : \"43\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n    \"name\" : \"Mastercard\",\n    \"nominalCode\" : \"41\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n    \"name\" : \"Notes Payable\",\n    \"nominalCode\" : \"44\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n    \"name\" : \"Visa\",\n    \"nominalCode\" : \"42\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n    \"name\" : \"Unknown\",\n    \"description\" : \"Amounts that are not attributed to any specific account.\",\n    \"category\" : \"Uncategorised\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/forecasts URL pattern\n*/\nexport const ForecastsHttpServiceGetForecastsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/forecasts\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"references\" : [ {\n    \"id\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const ForecastsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/forecasts/{forecastId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"configurationId\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n  \"syncDatetime\" : \"2020-11-05T11:56:15Z\",\n  \"currentBalance\" : \"10575882.77283\",\n  \"currencyCode\" : \"USD\",\n  \"history\" : [ {\n    \"startDate\" : \"2020-11-03\",\n    \"endDate\" : \"2020-11-03\",\n    \"openingBalance\" : \"-20500.00000\",\n    \"closingBalance\" : \"-15500.00000\",\n    \"netChange\" : \"5000.00000\"\n  }, {\n    \"startDate\" : \"2020-11-04\",\n    \"endDate\" : \"2020-11-04\",\n    \"openingBalance\" : \"-15500.00000\",\n    \"closingBalance\" : \"0\",\n    \"netChange\" : \"15500.00000\"\n  } ],\n  \"projection\" : [ {\n    \"startDate\" : \"2020-11-05\",\n    \"endDate\" : \"2020-11-05\",\n    \"openingBalance\" : \"0\",\n    \"closingBalance\" : \"6682.33000\",\n    \"netChange\" : \"6682.33000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-1412.67000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"balanceChange\" : \"-1085.00000\"\n      }, {\n        \"accountId\" : \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n        \"balanceChange\" : \"-86.44000\"\n      }, {\n        \"accountId\" : \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n        \"balanceChange\" : \"-241.23000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"8300.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"8300.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Uncategorised\",\n      \"balanceChange\" : \"-205.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n        \"balanceChange\" : \"-205.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-06\",\n    \"endDate\" : \"2020-11-06\",\n    \"openingBalance\" : \"6682.33000\",\n    \"closingBalance\" : \"2337.33000\",\n    \"netChange\" : \"-4345.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-14840.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n        \"balanceChange\" : \"-14840.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"10495.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"10495.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-07\",\n    \"endDate\" : \"2020-11-07\",\n    \"openingBalance\" : \"2337.33000\",\n    \"closingBalance\" : \"-447.67000\",\n    \"netChange\" : \"-2785.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-17785.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n        \"balanceChange\" : \"-755.00000\"\n      }, {\n        \"accountId\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"balanceChange\" : \"-17030.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"15000.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n        \"balanceChange\" : \"15000.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-08\",\n    \"endDate\" : \"2020-11-08\",\n    \"openingBalance\" : \"-447.67000\",\n    \"closingBalance\" : \"38332.33000\",\n    \"netChange\" : \"38780.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-200.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"balanceChange\" : \"-200.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"38980.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"38980.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-09\",\n    \"endDate\" : \"2020-11-09\",\n    \"openingBalance\" : \"38332.33000\",\n    \"closingBalance\" : \"62587.33000\",\n    \"netChange\" : \"24255.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-945.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"balanceChange\" : \"-945.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"25200.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"25200.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-10\",\n    \"endDate\" : \"2020-11-10\",\n    \"openingBalance\" : \"62587.33000\",\n    \"closingBalance\" : \"76977.33000\",\n    \"netChange\" : \"14390.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-12760.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n        \"balanceChange\" : \"-12760.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"27150.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n        \"balanceChange\" : \"27150.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-11\",\n    \"endDate\" : \"2020-11-11\",\n    \"openingBalance\" : \"76977.33000\",\n    \"closingBalance\" : \"72327.33000\",\n    \"netChange\" : \"-4650.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Asset\",\n      \"balanceChange\" : \"-18900.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n        \"balanceChange\" : \"-18900.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"14250.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n        \"balanceChange\" : \"14250.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-12\",\n    \"endDate\" : \"2020-11-12\",\n    \"openingBalance\" : \"72327.33000\",\n    \"closingBalance\" : \"86627.33000\",\n    \"netChange\" : \"14300.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-4600.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n        \"balanceChange\" : \"-4600.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"18900.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"18900.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-13\",\n    \"endDate\" : \"2020-11-13\",\n    \"openingBalance\" : \"86627.33000\",\n    \"closingBalance\" : \"87837.33000\",\n    \"netChange\" : \"1210.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-5800.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n        \"balanceChange\" : \"-5800.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"7010.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n        \"balanceChange\" : \"7010.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-14\",\n    \"endDate\" : \"2020-11-14\",\n    \"openingBalance\" : \"87837.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"22100.00000\",\n    \"categoryBalanceChanges\" : [ {\n      \"categoryName\" : \"Expense\",\n      \"balanceChange\" : \"-900.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n        \"balanceChange\" : \"-300.00000\"\n      }, {\n        \"accountId\" : \"3b353731-f571-4854-8240-0d49cc81fecc\",\n        \"balanceChange\" : \"-600.00000\"\n      } ]\n    }, {\n      \"categoryName\" : \"Income\",\n      \"balanceChange\" : \"23000.00000\",\n      \"accountBalanceChanges\" : [ {\n        \"accountId\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"balanceChange\" : \"23000.00000\"\n      } ]\n    } ]\n  }, {\n    \"startDate\" : \"2020-11-15\",\n    \"endDate\" : \"2020-11-15\",\n    \"openingBalance\" : \"109937.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"0.00000\",\n    \"categoryBalanceChanges\" : [ ]\n  }, {\n    \"startDate\" : \"2020-11-16\",\n    \"endDate\" : \"2020-11-16\",\n    \"openingBalance\" : \"109937.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"0.00000\",\n    \"categoryBalanceChanges\" : [ ]\n  }, {\n    \"startDate\" : \"2020-11-17\",\n    \"endDate\" : \"2020-11-17\",\n    \"openingBalance\" : \"109937.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"0.00000\",\n    \"categoryBalanceChanges\" : [ ]\n  }, {\n    \"startDate\" : \"2020-11-18\",\n    \"endDate\" : \"2020-11-18\",\n    \"openingBalance\" : \"109937.33000\",\n    \"closingBalance\" : \"109937.33000\",\n    \"netChange\" : \"0.00000\",\n    \"categoryBalanceChanges\" : [ ]\n  } ],\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n    \"name\" : \"Accounts Receivable (A/R)\",\n    \"nominalCode\" : \"84\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"77b9ba20-924e-4be8-8077-87278297d915\",\n    \"name\" : \"Checking\",\n    \"nominalCode\" : \"35\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n    \"name\" : \"Depreciation\",\n    \"nominalCode\" : \"39\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n    \"name\" : \"Inventory Asset\",\n    \"nominalCode\" : \"81\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n    \"name\" : \"Original Cost\",\n    \"nominalCode\" : \"38\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n    \"name\" : \"Prepaid Expenses\",\n    \"nominalCode\" : \"3\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"497559c7-60bf-476c-8b16-09b8952a9722\",\n    \"name\" : \"Savings\",\n    \"nominalCode\" : \"36\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n    \"name\" : \"Truck\",\n    \"nominalCode\" : \"37\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n    \"name\" : \"Uncategorized Asset\",\n    \"nominalCode\" : \"32\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n    \"name\" : \"Undeposited Funds\",\n    \"nominalCode\" : \"4\",\n    \"category\" : \"Asset\"\n  }, {\n    \"id\" : \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n    \"name\" : \"Opening Balance Equity\",\n    \"nominalCode\" : \"34\",\n    \"category\" : \"Equity\"\n  }, {\n    \"id\" : \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n    \"name\" : \"Retained Earnings\",\n    \"nominalCode\" : \"2\",\n    \"category\" : \"Equity\"\n  }, {\n    \"id\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n    \"name\" : \"Accounting\",\n    \"nominalCode\" : \"69\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n    \"name\" : \"Advertising\",\n    \"nominalCode\" : \"7\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n    \"name\" : \"Automobile\",\n    \"nominalCode\" : \"55\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n    \"name\" : \"Bank Charges\",\n    \"nominalCode\" : \"8\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n    \"name\" : \"Bookkeeper\",\n    \"nominalCode\" : \"70\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n    \"name\" : \"Building Repairs\",\n    \"nominalCode\" : \"73\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n    \"name\" : \"Commissions & fees\",\n    \"nominalCode\" : \"9\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n    \"name\" : \"Computer Repairs\",\n    \"nominalCode\" : \"74\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n    \"name\" : \"Cost of Goods Sold\",\n    \"nominalCode\" : \"80\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n    \"name\" : \"Cost of Labor\",\n    \"nominalCode\" : \"59\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n    \"name\" : \"Decks and Patios\",\n    \"nominalCode\" : \"64\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n    \"name\" : \"Depreciation\",\n    \"nominalCode\" : \"40\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ccfb434a-b289-441c-99a2-30e05a572057\",\n    \"name\" : \"Disposal Fees\",\n    \"nominalCode\" : \"28\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n    \"name\" : \"Dues & Subscriptions\",\n    \"nominalCode\" : \"10\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n    \"name\" : \"Equipment Rental\",\n    \"nominalCode\" : \"29\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n    \"name\" : \"Equipment Rental\",\n    \"nominalCode\" : \"62\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n    \"name\" : \"Equipment Repairs\",\n    \"nominalCode\" : \"75\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n    \"name\" : \"Fountain and Garden Lighting\",\n    \"nominalCode\" : \"65\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"7877e117-f0ac-4142-841f-84e062f77128\",\n    \"name\" : \"Fuel\",\n    \"nominalCode\" : \"56\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n    \"name\" : \"Gas and Electric\",\n    \"nominalCode\" : \"76\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n    \"name\" : \"Installation\",\n    \"nominalCode\" : \"60\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n    \"name\" : \"Insurance\",\n    \"nominalCode\" : \"11\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n    \"name\" : \"Job Expenses\",\n    \"nominalCode\" : \"58\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n    \"name\" : \"Job Materials\",\n    \"nominalCode\" : \"63\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n    \"name\" : \"Lawyer\",\n    \"nominalCode\" : \"71\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n    \"name\" : \"Legal & Professional Fees\",\n    \"nominalCode\" : \"12\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n    \"name\" : \"Maintenance and Repair\",\n    \"nominalCode\" : \"72\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n    \"name\" : \"Maintenance and Repairs\",\n    \"nominalCode\" : \"61\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n    \"name\" : \"Meals and Entertainment\",\n    \"nominalCode\" : \"13\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n    \"name\" : \"Miscellaneous\",\n    \"nominalCode\" : \"14\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1e870df7-7255-41e2-8220-e24c301af038\",\n    \"name\" : \"Office Expenses\",\n    \"nominalCode\" : \"15\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n    \"name\" : \"Penalties & Settlements\",\n    \"nominalCode\" : \"27\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n    \"name\" : \"Permits\",\n    \"nominalCode\" : \"68\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n    \"name\" : \"Plants and Soil\",\n    \"nominalCode\" : \"66\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"8fca197a-3242-4795-8b06-48d821315ad1\",\n    \"name\" : \"Promotional\",\n    \"nominalCode\" : \"16\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n    \"name\" : \"Purchases\",\n    \"nominalCode\" : \"78\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3b353731-f571-4854-8240-0d49cc81fecc\",\n    \"name\" : \"Rent or Lease\",\n    \"nominalCode\" : \"17\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n    \"name\" : \"Repair & Maintenance (deleted)\",\n    \"nominalCode\" : \"18\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n    \"name\" : \"Sprinklers and Drip Systems\",\n    \"nominalCode\" : \"67\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n    \"name\" : \"Stationery & Printing\",\n    \"nominalCode\" : \"19\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n    \"name\" : \"Supplies\",\n    \"nominalCode\" : \"20\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n    \"name\" : \"Taxes & Licenses\",\n    \"nominalCode\" : \"21\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n    \"name\" : \"Telephone\",\n    \"nominalCode\" : \"77\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n    \"name\" : \"Travel\",\n    \"nominalCode\" : \"22\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n    \"name\" : \"Travel Meals\",\n    \"nominalCode\" : \"23\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n    \"name\" : \"Unapplied Cash Bill Payment Expense\",\n    \"nominalCode\" : \"88\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n    \"name\" : \"Uncategorized Expense\",\n    \"nominalCode\" : \"31\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n    \"name\" : \"Utilities\",\n    \"nominalCode\" : \"24\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n    \"name\" : \"Workers Compensation\",\n    \"nominalCode\" : \"57\",\n    \"category\" : \"Expense\"\n  }, {\n    \"id\" : \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n    \"name\" : \"Billable Expense Income\",\n    \"nominalCode\" : \"85\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n    \"name\" : \"Decks and Patios\",\n    \"nominalCode\" : \"47\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n    \"name\" : \"Design income\",\n    \"nominalCode\" : \"82\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n    \"name\" : \"Discounts given\",\n    \"nominalCode\" : \"86\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"ef961774-568d-4746-a790-fa8e22907db5\",\n    \"name\" : \"Fees Billed\",\n    \"nominalCode\" : \"5\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n    \"name\" : \"Fountains and Garden Lighting\",\n    \"nominalCode\" : \"48\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"442e062b-8585-4f14-9763-8990c9fd6087\",\n    \"name\" : \"Installation\",\n    \"nominalCode\" : \"52\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n    \"name\" : \"Interest Earned\",\n    \"nominalCode\" : \"25\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n    \"name\" : \"Job Materials\",\n    \"nominalCode\" : \"46\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n    \"name\" : \"Labor\",\n    \"nominalCode\" : \"51\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n    \"name\" : \"Landscaping Services\",\n    \"nominalCode\" : \"45\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n    \"name\" : \"Maintenance and Repair\",\n    \"nominalCode\" : \"53\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n    \"name\" : \"Other Income\",\n    \"nominalCode\" : \"83\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n    \"name\" : \"Other Portfolio Income\",\n    \"nominalCode\" : \"26\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n    \"name\" : \"Pest Control Services\",\n    \"nominalCode\" : \"54\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n    \"name\" : \"Plants and Soil\",\n    \"nominalCode\" : \"49\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n    \"name\" : \"Refunds-Allowances\",\n    \"nominalCode\" : \"6\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n    \"name\" : \"Sales of Product Income\",\n    \"nominalCode\" : \"79\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n    \"name\" : \"Services\",\n    \"nominalCode\" : \"1\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n    \"name\" : \"Sprinklers and Drip Systems\",\n    \"nominalCode\" : \"50\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n    \"name\" : \"Unapplied Cash Payment Income\",\n    \"nominalCode\" : \"87\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n    \"name\" : \"Uncategorized Income\",\n    \"nominalCode\" : \"30\",\n    \"category\" : \"Income\"\n  }, {\n    \"id\" : \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n    \"name\" : \"Accounts Payable (A/P)\",\n    \"nominalCode\" : \"33\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n    \"name\" : \"Arizona Dept. of Revenue Payable\",\n    \"nominalCode\" : \"89\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n    \"name\" : \"Board of Equalization Payable\",\n    \"nominalCode\" : \"90\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n    \"name\" : \"Loan Payable\",\n    \"nominalCode\" : \"43\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n    \"name\" : \"Mastercard\",\n    \"nominalCode\" : \"41\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n    \"name\" : \"Notes Payable\",\n    \"nominalCode\" : \"44\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n    \"name\" : \"Visa\",\n    \"nominalCode\" : \"42\",\n    \"category\" : \"Liability\"\n  }, {\n    \"id\" : \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n    \"name\" : \"Unknown\",\n    \"description\" : \"Amounts that are not attributed to any specific account.\",\n    \"category\" : \"Uncategorised\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/forecasts\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"references\" : [ {\n    \"id\" : \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationPayable } from '../model/models';\nimport { PresentationPayables } from '../model/models';\nimport { PutPaymentRequestExpectedDateRequest } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { CASH_FLOW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CashFlowConfiguration }                                     from '../configuration';\n\n\nexport interface GetPayableByIdRequestParams {\n    /** No description available */\n    [\"payableId\"]: string;\n}\n\nexport interface GetPayablesRequestParams {\n    /** Filters receivables by counterparty or reference number */\n    [\"query\"]?: string;\n    /** Filters receivables by statuses */\n    [\"statuses\"]?: Array<string>;\n    /** Represents comma separated field names. Each name is to be used for sorting. The order of the names is important as it determines the order in which the fields are utilized. That is, Nth field name is used if and only if a value of a (N-1) field is found more than once. The sorting may be either ascending or descending. This can be controlled by utilizing a special prefix. The prefix is a dash symbol (i.e., \\&quot;-\\&quot;). If the prefix is provided, a result list will be ordered in a descending fashion, otherwise it is going to sorted in an ascending fashion.  */\n    [\"sort\"]?: string;\n    /** Represents an offset of the first result that is to be included into a response. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** Represents a maximum number of elements that are to be included into a response. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n}\n\nexport interface PutExpectedDateByPayableIdRequestParams {\n    /** No description available */\n    [\"payableId\"]: string;\n    [\"putPaymentRequestExpectedDateRequest\"]?: PutPaymentRequestExpectedDateRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayablesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CashFlowConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CASH_FLOW_BASE_PATH) basePath: string, @Optional() configuration: CashFlowConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve specific Payable item.\n     * Retrieve specific Payable item\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayableById(requestParameters: GetPayableByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationPayable>;\n    /**\n     * Retrieve specific Payable item.\n     * Retrieve specific Payable item\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayableById(requestParameters: GetPayableByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationPayable>>;\n    /**\n     * Retrieve specific Payable item.\n     * Retrieve specific Payable item\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayableById(requestParameters: GetPayableByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationPayable>>;\n    /**\n     * Retrieve specific Payable item.\n     * Retrieve specific Payable item\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayableById(requestParameters: GetPayableByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _payableId = requestParameters[\"payableId\"];\n        if (_payableId === null || _payableId === undefined) {\n            throw new Error('Required parameter payableId was null or undefined when calling getPayableById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationPayable>(`${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPayableByIdUrl(requestParameters: GetPayableByIdRequestParams): string {\n        const _payableId = requestParameters[\"payableId\"];\n        if (_payableId === null || _payableId === undefined) {\n            throw new Error('Required parameter payableId was null or undefined when calling getPayableById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}`;\n    }\n\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayables(requestParameters: GetPayablesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationPayables>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayables(requestParameters: GetPayablesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationPayables>>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayables(requestParameters: GetPayablesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationPayables>>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayables(requestParameters: GetPayablesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _query = requestParameters[\"query\"];\n        const _statuses = requestParameters[\"statuses\"];\n        const _sort = requestParameters[\"sort\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_statuses) {\n            _statuses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'statuses');\n            })\n        }\n        if (_sort !== undefined && _sort !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_sort, 'sort');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationPayables>(`${this.configuration.basePath}/client-api/v1/payables`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPayablesUrl(requestParameters: GetPayablesRequestParams): string {\n        const _query = requestParameters[\"query\"];\n        const _statuses = requestParameters[\"statuses\"];\n        const _sort = requestParameters[\"sort\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_statuses) {\n            _statuses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'statuses');\n            })\n        }\n        if (_sort !== undefined && _sort !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_sort, 'sort');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/payables${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putExpectedDateByPayableId(requestParameters: PutExpectedDateByPayableIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationPayable>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putExpectedDateByPayableId(requestParameters: PutExpectedDateByPayableIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationPayable>>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putExpectedDateByPayableId(requestParameters: PutExpectedDateByPayableIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationPayable>>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putExpectedDateByPayableId(requestParameters: PutExpectedDateByPayableIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _payableId = requestParameters[\"payableId\"];\n        if (_payableId === null || _payableId === undefined) {\n            throw new Error('Required parameter payableId was null or undefined when calling putExpectedDateByPayableId.');\n        }\n        const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<PresentationPayable>(`${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}/expected-date`,\n            _putPaymentRequestExpectedDateRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putExpectedDateByPayableIdUrl(requestParameters: PutExpectedDateByPayableIdRequestParams): string {\n        const _payableId = requestParameters[\"payableId\"];\n        if (_payableId === null || _payableId === undefined) {\n            throw new Error('Required parameter payableId was null or undefined when calling putExpectedDateByPayableId.');\n        }\n        const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n        return `${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}/expected-date`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/payables/{payableId} URL pattern\n*/\nexport const PayablesHttpServiceGetPayableByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/payables/{payableId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"status\" : \"Open\",\n  \"id\" : \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n  \"referenceNumber\" : \"SEP00-1\",\n  \"issueDate\" : \"2020-11-05T00:00:00Z\",\n  \"dueDate\" : \"2020-12-02T00:00:00Z\",\n  \"expectedDate\" : \"2020-12-02T00:00:00Z\",\n  \"dueAmount\" : \"770.00000\",\n  \"paidAmount\" : \"0.00000\",\n  \"totalAmount\" : \"770.00000\",\n  \"currencyCode\" : \"USD\",\n  \"counterparty\" : {\n    \"id\" : \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n    \"name\" : \"Robertson & Associates\",\n    \"type\" : \"Supplier\"\n  },\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n    \"name\" : \"Accounting\",\n    \"nominalCode\" : \"69\",\n    \"category\" : \"Expense\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/payables URL pattern\n*/\nexport const PayablesHttpServiceGetPayablesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/payables\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"syncDatetime\" : \"2020-01-31T12:12:12Z\",\n  \"payables\" : [ {\n    \"id\" : \"1234-5678-9012-3457\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-02-24T12:12:12Z\",\n    \"dueAmount\" : \"2.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"2.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-bill-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3333\",\n      \"name\" : \"Richard Brautigan\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7effsfr52\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    } ],\n    \"status\" : \"Open\"\n  }, {\n    \"id\" : \"1234-5678-9012-3458\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-02-12T12:12:12Z\",\n    \"dueAmount\" : \"10.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"10.00\",\n    \"currencyCode\" : \"CAD\",\n    \"referenceNumber\" : \"125-bill-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3334\",\n      \"name\" : \"Walt Whitman\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7eff72345\",\n      \"name\" : \"Accounts Payable\",\n      \"category\" : \"Asset\"\n    }, {\n      \"id\" : \"b068a7bb-917d-4484-8dd6-71cb2a9c9873\",\n      \"name\" : \"It Consults\",\n      \"category\" : \"Expenses\"\n    } ],\n    \"status\" : \"Draft\"\n  }, {\n    \"id\" : \"1234-5678-9012-3459\",\n    \"dueDate\" : \"2019-12-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-03-13T12:12:12Z\",\n    \"dueAmount\" : \"0\",\n    \"paidAmount\" : \"155.00\",\n    \"totalAmount\" : \"155.00\",\n    \"currencyCode\" : \"EUR\",\n    \"referenceNumber\" : \"124-bill-number\",\n    \"issueDate\" : \"2019-10-10T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3335\",\n      \"name\" : \"Paul Celan\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7eff98fh6\",\n      \"name\" : \"Accounts Payable\",\n      \"category\" : \"Liability\"\n    } ],\n    \"status\" : \"Paid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3460\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-04-15T12:12:12Z\",\n    \"dueAmount\" : \"20020.00\",\n    \"paidAmount\" : \"20000.00\",\n    \"totalAmount\" : \"40020.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-bill-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3336\",\n      \"name\" : \"Sylvia Plath\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"b068a7bb-917d-4484-8dd6-71cb2ad8t528\",\n      \"name\" : \"Accounts Payable\",\n      \"category\" : \"Liability\"\n    }, {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7ef0nfh67\",\n      \"name\" : \"It Consults\",\n      \"category\" : \"Expenses\"\n    }, {\n      \"id\" : \"6hfy2e6d-bb31-463a-802f-65a7eff98fh6\",\n      \"name\" : \"Business Bank Account\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3461\",\n    \"dueDate\" : \"2020-02-28T12:12:12Z\",\n    \"expectedDate\" : \"2020-05-15T12:12:12Z\",\n    \"dueAmount\" : \"10000.00\",\n    \"paidAmount\" : \"10000.00\",\n    \"totalAmount\" : \"20000.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"125-bill-number\",\n    \"issueDate\" : \"2019-12-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3337\",\n      \"name\" : \"Jeff Beck\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7eff9ufy6\",\n      \"name\" : \"Accounts Payable\",\n      \"category\" : \"Liability\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3462\",\n    \"dueDate\" : \"2019-12-21T12:12:12Z\",\n    \"expectedDate\" : \"2020-06-17T12:12:12Z\",\n    \"dueAmount\" : \"10000.00\",\n    \"paidAmount\" : \"20000.00\",\n    \"totalAmount\" : \"30000.00\",\n    \"currencyCode\" : \"RUB\",\n    \"referenceNumber\" : \"124-bill-number\",\n    \"issueDate\" : \"2019-11-10T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3338\",\n      \"name\" : \"Boris Ryzhyi\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-78ahy3f98fh6\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3463\",\n    \"dueDate\" : \"2020-01-19T12:12:12Z\",\n    \"expectedDate\" : \"2019-11-30T12:12:12Z\",\n    \"dueAmount\" : \"0\",\n    \"paidAmount\" : \"400000.00\",\n    \"totalAmount\" : \"400000.00\",\n    \"currencyCode\" : \"CAD\",\n    \"referenceNumber\" : \"125-bill-number\",\n    \"issueDate\" : \"2019-11-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3339\",\n      \"name\" : \"Emily Dickinson\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"7hn1f542-bb31-463a-802f-78ahy3f98fh6\",\n      \"name\" : \"It Consults\",\n      \"category\" : \"Expenses\"\n    } ],\n    \"status\" : \"Paid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3464\",\n    \"dueDate\" : \"2019-12-26T12:12:12Z\",\n    \"expectedDate\" : \"2020-07-17T12:12:12Z\",\n    \"dueAmount\" : \"2000.00\",\n    \"paidAmount\" : \"8000.00\",\n    \"totalAmount\" : \"10000.00\",\n    \"currencyCode\" : \"EUR\",\n    \"referenceNumber\" : \"124-bill-number\",\n    \"issueDate\" : \"2019-10-15T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3340\",\n      \"name\" : \"Mary Jane\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"13bgf542-bb31-463a-802f-78ahy3f98fh6\",\n      \"name\" : \"It Consults\",\n      \"category\" : \"Expenses\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3465\",\n    \"dueDate\" : \"2019-11-30T12:12:12Z\",\n    \"expectedDate\" : \"2019-11-30T12:12:12Z\",\n    \"dueAmount\" : \"20020.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"20020.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-bill-number\",\n    \"issueDate\" : \"2019-10-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3341\",\n      \"name\" : \"William Yeats\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"7hn1f542-bb31-463a-802f-1gtr23f98fh6\",\n      \"name\" : \"Business Bank Account\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"Unknown\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/payables/{payableId}/expected-date URL pattern\n*/\nexport const PayablesHttpServicePutExpectedDateByPayableIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/payables/{payableId}/expected-date\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"status\" : \"Open\",\n  \"id\" : \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n  \"referenceNumber\" : \"SEP00-1\",\n  \"issueDate\" : \"2020-11-05T00:00:00Z\",\n  \"dueDate\" : \"2020-12-02T00:00:00Z\",\n  \"expectedDate\" : \"2020-12-02T00:00:00Z\",\n  \"dueAmount\" : \"770.00000\",\n  \"paidAmount\" : \"0.00000\",\n  \"totalAmount\" : \"770.00000\",\n  \"currencyCode\" : \"USD\",\n  \"counterparty\" : {\n    \"id\" : \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n    \"name\" : \"Robertson & Associates\",\n    \"type\" : \"Supplier\"\n  },\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n    \"name\" : \"Accounting\",\n    \"nominalCode\" : \"69\",\n    \"category\" : \"Expense\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const PayablesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/payables/{payableId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"status\" : \"Open\",\n  \"id\" : \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n  \"referenceNumber\" : \"SEP00-1\",\n  \"issueDate\" : \"2020-11-05T00:00:00Z\",\n  \"dueDate\" : \"2020-12-02T00:00:00Z\",\n  \"expectedDate\" : \"2020-12-02T00:00:00Z\",\n  \"dueAmount\" : \"770.00000\",\n  \"paidAmount\" : \"0.00000\",\n  \"totalAmount\" : \"770.00000\",\n  \"currencyCode\" : \"USD\",\n  \"counterparty\" : {\n    \"id\" : \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n    \"name\" : \"Robertson & Associates\",\n    \"type\" : \"Supplier\"\n  },\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n    \"name\" : \"Accounting\",\n    \"nominalCode\" : \"69\",\n    \"category\" : \"Expense\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/payables\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"syncDatetime\" : \"2020-01-31T12:12:12Z\",\n  \"payables\" : [ {\n    \"id\" : \"1234-5678-9012-3457\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-02-24T12:12:12Z\",\n    \"dueAmount\" : \"2.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"2.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-bill-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3333\",\n      \"name\" : \"Richard Brautigan\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7effsfr52\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    } ],\n    \"status\" : \"Open\"\n  }, {\n    \"id\" : \"1234-5678-9012-3458\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-02-12T12:12:12Z\",\n    \"dueAmount\" : \"10.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"10.00\",\n    \"currencyCode\" : \"CAD\",\n    \"referenceNumber\" : \"125-bill-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3334\",\n      \"name\" : \"Walt Whitman\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7eff72345\",\n      \"name\" : \"Accounts Payable\",\n      \"category\" : \"Asset\"\n    }, {\n      \"id\" : \"b068a7bb-917d-4484-8dd6-71cb2a9c9873\",\n      \"name\" : \"It Consults\",\n      \"category\" : \"Expenses\"\n    } ],\n    \"status\" : \"Draft\"\n  }, {\n    \"id\" : \"1234-5678-9012-3459\",\n    \"dueDate\" : \"2019-12-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-03-13T12:12:12Z\",\n    \"dueAmount\" : \"0\",\n    \"paidAmount\" : \"155.00\",\n    \"totalAmount\" : \"155.00\",\n    \"currencyCode\" : \"EUR\",\n    \"referenceNumber\" : \"124-bill-number\",\n    \"issueDate\" : \"2019-10-10T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3335\",\n      \"name\" : \"Paul Celan\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7eff98fh6\",\n      \"name\" : \"Accounts Payable\",\n      \"category\" : \"Liability\"\n    } ],\n    \"status\" : \"Paid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3460\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-04-15T12:12:12Z\",\n    \"dueAmount\" : \"20020.00\",\n    \"paidAmount\" : \"20000.00\",\n    \"totalAmount\" : \"40020.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-bill-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3336\",\n      \"name\" : \"Sylvia Plath\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"b068a7bb-917d-4484-8dd6-71cb2ad8t528\",\n      \"name\" : \"Accounts Payable\",\n      \"category\" : \"Liability\"\n    }, {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7ef0nfh67\",\n      \"name\" : \"It Consults\",\n      \"category\" : \"Expenses\"\n    }, {\n      \"id\" : \"6hfy2e6d-bb31-463a-802f-65a7eff98fh6\",\n      \"name\" : \"Business Bank Account\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3461\",\n    \"dueDate\" : \"2020-02-28T12:12:12Z\",\n    \"expectedDate\" : \"2020-05-15T12:12:12Z\",\n    \"dueAmount\" : \"10000.00\",\n    \"paidAmount\" : \"10000.00\",\n    \"totalAmount\" : \"20000.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"125-bill-number\",\n    \"issueDate\" : \"2019-12-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3337\",\n      \"name\" : \"Jeff Beck\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7eff9ufy6\",\n      \"name\" : \"Accounts Payable\",\n      \"category\" : \"Liability\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3462\",\n    \"dueDate\" : \"2019-12-21T12:12:12Z\",\n    \"expectedDate\" : \"2020-06-17T12:12:12Z\",\n    \"dueAmount\" : \"10000.00\",\n    \"paidAmount\" : \"20000.00\",\n    \"totalAmount\" : \"30000.00\",\n    \"currencyCode\" : \"RUB\",\n    \"referenceNumber\" : \"124-bill-number\",\n    \"issueDate\" : \"2019-11-10T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3338\",\n      \"name\" : \"Boris Ryzhyi\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-78ahy3f98fh6\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3463\",\n    \"dueDate\" : \"2020-01-19T12:12:12Z\",\n    \"expectedDate\" : \"2019-11-30T12:12:12Z\",\n    \"dueAmount\" : \"0\",\n    \"paidAmount\" : \"400000.00\",\n    \"totalAmount\" : \"400000.00\",\n    \"currencyCode\" : \"CAD\",\n    \"referenceNumber\" : \"125-bill-number\",\n    \"issueDate\" : \"2019-11-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3339\",\n      \"name\" : \"Emily Dickinson\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"7hn1f542-bb31-463a-802f-78ahy3f98fh6\",\n      \"name\" : \"It Consults\",\n      \"category\" : \"Expenses\"\n    } ],\n    \"status\" : \"Paid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3464\",\n    \"dueDate\" : \"2019-12-26T12:12:12Z\",\n    \"expectedDate\" : \"2020-07-17T12:12:12Z\",\n    \"dueAmount\" : \"2000.00\",\n    \"paidAmount\" : \"8000.00\",\n    \"totalAmount\" : \"10000.00\",\n    \"currencyCode\" : \"EUR\",\n    \"referenceNumber\" : \"124-bill-number\",\n    \"issueDate\" : \"2019-10-15T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3340\",\n      \"name\" : \"Mary Jane\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"13bgf542-bb31-463a-802f-78ahy3f98fh6\",\n      \"name\" : \"It Consults\",\n      \"category\" : \"Expenses\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3465\",\n    \"dueDate\" : \"2019-11-30T12:12:12Z\",\n    \"expectedDate\" : \"2019-11-30T12:12:12Z\",\n    \"dueAmount\" : \"20020.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"20020.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-bill-number\",\n    \"issueDate\" : \"2019-10-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3341\",\n      \"name\" : \"William Yeats\",\n      \"type\" : \"Supplier\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"7hn1f542-bb31-463a-802f-1gtr23f98fh6\",\n      \"name\" : \"Business Bank Account\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"Unknown\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/payables/{payableId}/expected-date\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"status\" : \"Open\",\n  \"id\" : \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n  \"referenceNumber\" : \"SEP00-1\",\n  \"issueDate\" : \"2020-11-05T00:00:00Z\",\n  \"dueDate\" : \"2020-12-02T00:00:00Z\",\n  \"expectedDate\" : \"2020-12-02T00:00:00Z\",\n  \"dueAmount\" : \"770.00000\",\n  \"paidAmount\" : \"0.00000\",\n  \"totalAmount\" : \"770.00000\",\n  \"currencyCode\" : \"USD\",\n  \"counterparty\" : {\n    \"id\" : \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n    \"name\" : \"Robertson & Associates\",\n    \"type\" : \"Supplier\"\n  },\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n    \"name\" : \"Accounting\",\n    \"nominalCode\" : \"69\",\n    \"category\" : \"Expense\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationReceivable } from '../model/models';\nimport { PresentationReceivables } from '../model/models';\nimport { PutPaymentRequestExpectedDateRequest } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { CASH_FLOW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CashFlowConfiguration }                                     from '../configuration';\n\n\nexport interface GetReceivableByIdRequestParams {\n    /** No description available */\n    [\"receivableId\"]: string;\n}\n\nexport interface GetReceivablesRequestParams {\n    /** Filters payables by counterparty or reference number */\n    [\"query\"]?: string;\n    /** Filters payables by statuses */\n    [\"statuses\"]?: Array<string>;\n    /** Represents comma separated field names. Each name is to be used for sorting. The order of the names is important as it determines the order in which the fields are utilized. That is, Nth field name is used if and only if a value of a (N-1) field is found more than once. The sorting may be either ascending or descending. This can be controlled by utilizing a special prefix. The prefix is a dash symbol (i.e., \\&quot;-\\&quot;). If the prefix is provided, a result list will be ordered in a descending fashion, otherwise it is going to sorted in an ascending fashion.  */\n    [\"sort\"]?: string;\n    /** Represents an offset of the first result that is to be included into a response. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** Represents a maximum number of elements that are to be included into a response. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n}\n\nexport interface PutExpectedDateByReceivableIdRequestParams {\n    /** No description available */\n    [\"receivableId\"]: string;\n    [\"putPaymentRequestExpectedDateRequest\"]?: PutPaymentRequestExpectedDateRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReceivablesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CashFlowConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CASH_FLOW_BASE_PATH) basePath: string, @Optional() configuration: CashFlowConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve specific receivable item.\n     * Retrieve specific receivable item\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getReceivableById(requestParameters: GetReceivableByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationReceivable>;\n    /**\n     * Retrieve specific receivable item.\n     * Retrieve specific receivable item\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getReceivableById(requestParameters: GetReceivableByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationReceivable>>;\n    /**\n     * Retrieve specific receivable item.\n     * Retrieve specific receivable item\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getReceivableById(requestParameters: GetReceivableByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationReceivable>>;\n    /**\n     * Retrieve specific receivable item.\n     * Retrieve specific receivable item\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getReceivableById(requestParameters: GetReceivableByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _receivableId = requestParameters[\"receivableId\"];\n        if (_receivableId === null || _receivableId === undefined) {\n            throw new Error('Required parameter receivableId was null or undefined when calling getReceivableById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationReceivable>(`${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getReceivableByIdUrl(requestParameters: GetReceivableByIdRequestParams): string {\n        const _receivableId = requestParameters[\"receivableId\"];\n        if (_receivableId === null || _receivableId === undefined) {\n            throw new Error('Required parameter receivableId was null or undefined when calling getReceivableById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}`;\n    }\n\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getReceivables(requestParameters: GetReceivablesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationReceivables>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getReceivables(requestParameters: GetReceivablesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationReceivables>>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getReceivables(requestParameters: GetReceivablesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationReceivables>>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getReceivables(requestParameters: GetReceivablesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _query = requestParameters[\"query\"];\n        const _statuses = requestParameters[\"statuses\"];\n        const _sort = requestParameters[\"sort\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_statuses) {\n            _statuses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'statuses');\n            })\n        }\n        if (_sort !== undefined && _sort !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_sort, 'sort');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationReceivables>(`${this.configuration.basePath}/client-api/v1/receivables`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getReceivablesUrl(requestParameters: GetReceivablesRequestParams): string {\n        const _query = requestParameters[\"query\"];\n        const _statuses = requestParameters[\"statuses\"];\n        const _sort = requestParameters[\"sort\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_statuses) {\n            _statuses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'statuses');\n            })\n        }\n        if (_sort !== undefined && _sort !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_sort, 'sort');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/receivables${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putExpectedDateByReceivableId(requestParameters: PutExpectedDateByReceivableIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationReceivable>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putExpectedDateByReceivableId(requestParameters: PutExpectedDateByReceivableIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationReceivable>>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putExpectedDateByReceivableId(requestParameters: PutExpectedDateByReceivableIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationReceivable>>;\n    /**\n     * No description available\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putExpectedDateByReceivableId(requestParameters: PutExpectedDateByReceivableIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _receivableId = requestParameters[\"receivableId\"];\n        if (_receivableId === null || _receivableId === undefined) {\n            throw new Error('Required parameter receivableId was null or undefined when calling putExpectedDateByReceivableId.');\n        }\n        const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<PresentationReceivable>(`${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}/expected-date`,\n            _putPaymentRequestExpectedDateRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putExpectedDateByReceivableIdUrl(requestParameters: PutExpectedDateByReceivableIdRequestParams): string {\n        const _receivableId = requestParameters[\"receivableId\"];\n        if (_receivableId === null || _receivableId === undefined) {\n            throw new Error('Required parameter receivableId was null or undefined when calling putExpectedDateByReceivableId.');\n        }\n        const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n        return `${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}/expected-date`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/receivables/{receivableId} URL pattern\n*/\nexport const ReceivablesHttpServiceGetReceivableByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/receivables/{receivableId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"status\" : \"Submitted\",\n  \"id\" : \"08849602-262b-40b4-a7be-ecd9db00d048\",\n  \"referenceNumber\" : \"1050\",\n  \"issueDate\" : \"2020-08-13T00:00:00Z\",\n  \"dueDate\" : \"2020-12-02T00:00:00Z\",\n  \"expectedDate\" : \"2020-12-02T00:00:00Z\",\n  \"dueAmount\" : \"9055.30000\",\n  \"paidAmount\" : \"0.00000\",\n  \"totalAmount\" : \"9055.30000\",\n  \"currencyCode\" : \"USD\",\n  \"counterparty\" : {\n    \"id\" : \"85c069ea-4f65-45de-9e56-a3f3592e0db7\",\n    \"name\" : \"Cool Cars\",\n    \"type\" : \"Customer\"\n  },\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n    \"name\" : \"Design income\",\n    \"nominalCode\" : \"82\",\n    \"category\" : \"Income\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/receivables URL pattern\n*/\nexport const ReceivablesHttpServiceGetReceivablesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/receivables\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"syncDatetime\" : \"2020-01-31T12:12:12Z\",\n  \"receivables\" : [ {\n    \"id\" : \"1234-5678-9012-3457\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-02-13T12:12:12Z\",\n    \"dueAmount\" : \"2.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"2.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-invoice-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3333\",\n      \"name\" : \"Richard Brautigan\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    }, {\n      \"id\" : \"b068a7bb-917d-4484-8dd6-71cb2a9c9723\",\n      \"name\" : \"Accounts Receivable\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"Draft\"\n  }, {\n    \"id\" : \"1234-5678-9012-3458\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-03-14T12:12:12Z\",\n    \"dueAmount\" : \"10.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"10.00\",\n    \"currencyCode\" : \"CAD\",\n    \"referenceNumber\" : \"125-invoice-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3334\",\n      \"name\" : \"Walt Whitman\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"2th355ar-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    }, {\n      \"id\" : \"abr256dr-917d-4484-8dd6-71cb2a9c9723\",\n      \"name\" : \"Accounts Receivable\",\n      \"category\" : \"Asset\"\n    }, {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-1hnf56at0536\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    } ],\n    \"status\" : \"Submitted\"\n  }, {\n    \"id\" : \"1234-5678-9012-3459\",\n    \"dueDate\" : \"2019-12-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-04-14T12:12:12Z\",\n    \"dueAmount\" : \"155.00\",\n    \"paidAmount\" : \"145.00\",\n    \"totalAmount\" : \"300.00\",\n    \"currencyCode\" : \"EUR\",\n    \"referenceNumber\" : \"124-invoice-number\",\n    \"issueDate\" : \"2019-10-10T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3335\",\n      \"name\" : \"Paul Celan\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"3gt6jka1-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3460\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-05-15T12:12:12Z\",\n    \"dueAmount\" : \"20020.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"20020.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-invoice-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3336\",\n      \"name\" : \"Sylvia Plath\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"bg2ya541-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    } ],\n    \"status\" : \"Submitted\"\n  }, {\n    \"id\" : \"1234-5678-9012-3461\",\n    \"dueDate\" : \"2020-02-28T12:12:12Z\",\n    \"expectedDate\" : \"2020-06-16T12:12:12Z\",\n    \"dueAmount\" : \"5000.00\",\n    \"paidAmount\" : \"5000.00\",\n    \"totalAmount\" : \"10000.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"125-invoice-number\",\n    \"issueDate\" : \"2019-12-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3337\",\n      \"name\" : \"Jeff Beck\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"aa54f12y-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Accounts Receivable\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3462\",\n    \"dueDate\" : \"2019-12-21T12:12:12Z\",\n    \"expectedDate\" : \"2020-07-17T12:12:12Z\",\n    \"dueAmount\" : \"0\",\n    \"paidAmount\" : \"10000.00\",\n    \"totalAmount\" : \"10000.00\",\n    \"currencyCode\" : \"RUB\",\n    \"referenceNumber\" : \"124-invoice-number\",\n    \"issueDate\" : \"2019-11-10T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3338\",\n      \"name\" : \"Boris Ryzhyi\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"h1t45dre-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Accounts Receivable\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"Paid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3463\",\n    \"dueDate\" : \"2020-01-19T12:12:12Z\",\n    \"expectedDate\" : \"2020-08-18T12:12:12Z\",\n    \"dueAmount\" : \"120000.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"120000.00\",\n    \"currencyCode\" : \"CAD\",\n    \"referenceNumber\" : \"125-invoice-number\",\n    \"issueDate\" : \"2019-11-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3339\",\n      \"name\" : \"Emily Dickinson\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"11bg3rp7-bb31-463a-802f-65a7ef1htr56\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    } ],\n    \"status\" : \"Submitted\"\n  }, {\n    \"id\" : \"1234-5678-9012-3464\",\n    \"dueDate\" : \"2019-12-26T12:12:12Z\",\n    \"expectedDate\" : \"2020-09-19T12:12:12Z\",\n    \"dueAmount\" : \"10000.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"10000.00\",\n    \"currencyCode\" : \"EUR\",\n    \"referenceNumber\" : \"124-invoice-number\",\n    \"issueDate\" : \"2019-10-15T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3340\",\n      \"name\" : \"Mary Jane\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"aa5gpm67-bb31-463a-802f-65a7ef1ht1gt\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    }, {\n      \"id\" : \"ba784pt1-bb31-463a-802f-65a7ef1htr56\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3465\",\n    \"dueDate\" : \"2019-11-30T12:12:12Z\",\n    \"expectedDate\" : \"2020-10-20T12:12:12Z\",\n    \"dueAmount\" : \"20020.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"20020.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-invoice-number\",\n    \"issueDate\" : \"2019-10-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3341\",\n      \"name\" : \"William Yeats\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"ee79mn61-bb31-463a-802f-65a7ef1htr56\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    } ],\n    \"status\" : \"Draft\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/receivables/{receivableId}/expected-date URL pattern\n*/\nexport const ReceivablesHttpServicePutExpectedDateByReceivableIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/receivables/{receivableId}/expected-date\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const ReceivablesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/receivables/{receivableId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"status\" : \"Submitted\",\n  \"id\" : \"08849602-262b-40b4-a7be-ecd9db00d048\",\n  \"referenceNumber\" : \"1050\",\n  \"issueDate\" : \"2020-08-13T00:00:00Z\",\n  \"dueDate\" : \"2020-12-02T00:00:00Z\",\n  \"expectedDate\" : \"2020-12-02T00:00:00Z\",\n  \"dueAmount\" : \"9055.30000\",\n  \"paidAmount\" : \"0.00000\",\n  \"totalAmount\" : \"9055.30000\",\n  \"currencyCode\" : \"USD\",\n  \"counterparty\" : {\n    \"id\" : \"85c069ea-4f65-45de-9e56-a3f3592e0db7\",\n    \"name\" : \"Cool Cars\",\n    \"type\" : \"Customer\"\n  },\n  \"chartOfAccounts\" : [ {\n    \"id\" : \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n    \"name\" : \"Design income\",\n    \"nominalCode\" : \"82\",\n    \"category\" : \"Income\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/receivables\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"syncDatetime\" : \"2020-01-31T12:12:12Z\",\n  \"receivables\" : [ {\n    \"id\" : \"1234-5678-9012-3457\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-02-13T12:12:12Z\",\n    \"dueAmount\" : \"2.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"2.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-invoice-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3333\",\n      \"name\" : \"Richard Brautigan\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    }, {\n      \"id\" : \"b068a7bb-917d-4484-8dd6-71cb2a9c9723\",\n      \"name\" : \"Accounts Receivable\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"Draft\"\n  }, {\n    \"id\" : \"1234-5678-9012-3458\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-03-14T12:12:12Z\",\n    \"dueAmount\" : \"10.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"10.00\",\n    \"currencyCode\" : \"CAD\",\n    \"referenceNumber\" : \"125-invoice-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3334\",\n      \"name\" : \"Walt Whitman\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"2th355ar-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    }, {\n      \"id\" : \"abr256dr-917d-4484-8dd6-71cb2a9c9723\",\n      \"name\" : \"Accounts Receivable\",\n      \"category\" : \"Asset\"\n    }, {\n      \"id\" : \"4a0a5e6d-bb31-463a-802f-1hnf56at0536\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    } ],\n    \"status\" : \"Submitted\"\n  }, {\n    \"id\" : \"1234-5678-9012-3459\",\n    \"dueDate\" : \"2019-12-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-04-14T12:12:12Z\",\n    \"dueAmount\" : \"155.00\",\n    \"paidAmount\" : \"145.00\",\n    \"totalAmount\" : \"300.00\",\n    \"currencyCode\" : \"EUR\",\n    \"referenceNumber\" : \"124-invoice-number\",\n    \"issueDate\" : \"2019-10-10T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3335\",\n      \"name\" : \"Paul Celan\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"3gt6jka1-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3460\",\n    \"dueDate\" : \"2020-01-31T12:12:12Z\",\n    \"expectedDate\" : \"2020-05-15T12:12:12Z\",\n    \"dueAmount\" : \"20020.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"20020.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-invoice-number\",\n    \"issueDate\" : \"2020-01-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3336\",\n      \"name\" : \"Sylvia Plath\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"bg2ya541-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    } ],\n    \"status\" : \"Submitted\"\n  }, {\n    \"id\" : \"1234-5678-9012-3461\",\n    \"dueDate\" : \"2020-02-28T12:12:12Z\",\n    \"expectedDate\" : \"2020-06-16T12:12:12Z\",\n    \"dueAmount\" : \"5000.00\",\n    \"paidAmount\" : \"5000.00\",\n    \"totalAmount\" : \"10000.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"125-invoice-number\",\n    \"issueDate\" : \"2019-12-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3337\",\n      \"name\" : \"Jeff Beck\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"aa54f12y-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Accounts Receivable\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3462\",\n    \"dueDate\" : \"2019-12-21T12:12:12Z\",\n    \"expectedDate\" : \"2020-07-17T12:12:12Z\",\n    \"dueAmount\" : \"0\",\n    \"paidAmount\" : \"10000.00\",\n    \"totalAmount\" : \"10000.00\",\n    \"currencyCode\" : \"RUB\",\n    \"referenceNumber\" : \"124-invoice-number\",\n    \"issueDate\" : \"2019-11-10T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3338\",\n      \"name\" : \"Boris Ryzhyi\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"h1t45dre-bb31-463a-802f-65a7eff70536\",\n      \"name\" : \"Accounts Receivable\",\n      \"category\" : \"Asset\"\n    } ],\n    \"status\" : \"Paid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3463\",\n    \"dueDate\" : \"2020-01-19T12:12:12Z\",\n    \"expectedDate\" : \"2020-08-18T12:12:12Z\",\n    \"dueAmount\" : \"120000.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"120000.00\",\n    \"currencyCode\" : \"CAD\",\n    \"referenceNumber\" : \"125-invoice-number\",\n    \"issueDate\" : \"2019-11-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3339\",\n      \"name\" : \"Emily Dickinson\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"11bg3rp7-bb31-463a-802f-65a7ef1htr56\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    } ],\n    \"status\" : \"Submitted\"\n  }, {\n    \"id\" : \"1234-5678-9012-3464\",\n    \"dueDate\" : \"2019-12-26T12:12:12Z\",\n    \"expectedDate\" : \"2020-09-19T12:12:12Z\",\n    \"dueAmount\" : \"10000.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"10000.00\",\n    \"currencyCode\" : \"EUR\",\n    \"referenceNumber\" : \"124-invoice-number\",\n    \"issueDate\" : \"2019-10-15T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4443-3340\",\n      \"name\" : \"Mary Jane\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"aa5gpm67-bb31-463a-802f-65a7ef1ht1gt\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    }, {\n      \"id\" : \"ba784pt1-bb31-463a-802f-65a7ef1htr56\",\n      \"name\" : \"Unknown\",\n      \"category\" : \"Uncategorised\"\n    } ],\n    \"status\" : \"PartiallyPaid\"\n  }, {\n    \"id\" : \"1234-5678-9012-3465\",\n    \"dueDate\" : \"2019-11-30T12:12:12Z\",\n    \"expectedDate\" : \"2020-10-20T12:12:12Z\",\n    \"dueAmount\" : \"20020.00\",\n    \"paidAmount\" : \"0.00\",\n    \"totalAmount\" : \"20020.00\",\n    \"currencyCode\" : \"USD\",\n    \"referenceNumber\" : \"123-invoice-number\",\n    \"issueDate\" : \"2019-10-20T12:12:12Z\",\n    \"counterparty\" : {\n      \"id\" : \"1234-4444-4444-3341\",\n      \"name\" : \"William Yeats\",\n      \"type\" : \"Customer\"\n    },\n    \"chartOfAccounts\" : [ {\n      \"id\" : \"ee79mn61-bb31-463a-802f-65a7ef1htr56\",\n      \"name\" : \"Sales\",\n      \"category\" : \"Income\"\n    } ],\n    \"status\" : \"Draft\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/receivables/{receivableId}/expected-date\",\n        method: \"PUT\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Cash Flow Forecasting\n * Connect and fetch data from accounting system. Also create, view and edit a cash flow forecast\n *\n * The version of the OpenAPI document: 1.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { PresentationAccountingAuthorization } from '../model/models';\nimport { PresentationCreateSmeRequest } from '../model/models';\nimport { PresentationSme } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { CASH_FLOW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CashFlowConfiguration }                                     from '../configuration';\n\n\nexport interface PostSmeRequestParams {\n    /** Creates SME for user */\n    [\"presentationCreateSmeRequest\"]?: PresentationCreateSmeRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmeHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CashFlowConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CASH_FLOW_BASE_PATH) basePath: string, @Optional() configuration: CashFlowConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Gets accounting authorization info of the SME.\n     * Gets accounting authorization info of the SME.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAccountingAuthorization(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationAccountingAuthorization>;\n    /**\n     * Gets accounting authorization info of the SME.\n     * Gets accounting authorization info of the SME.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAccountingAuthorization(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationAccountingAuthorization>>;\n    /**\n     * Gets accounting authorization info of the SME.\n     * Gets accounting authorization info of the SME.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAccountingAuthorization(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationAccountingAuthorization>>;\n    /**\n     * Gets accounting authorization info of the SME.\n     * Gets accounting authorization info of the SME.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAccountingAuthorization(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationAccountingAuthorization>(`${this.configuration.basePath}/client-api/v1/sme/accounting-authorization`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAccountingAuthorizationUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/sme/accounting-authorization`;\n    }\n\n    /**\n     * Gets SME for current user and service agreement.\n     * Gets SME for current user and service agreement.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSme(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationSme>;\n    /**\n     * Gets SME for current user and service agreement.\n     * Gets SME for current user and service agreement.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSme(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationSme>>;\n    /**\n     * Gets SME for current user and service agreement.\n     * Gets SME for current user and service agreement.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSme(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationSme>>;\n    /**\n     * Gets SME for current user and service agreement.\n     * Gets SME for current user and service agreement.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSme(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PresentationSme>(`${this.configuration.basePath}/client-api/v1/sme`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getSmeUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/sme`;\n    }\n\n    /**\n     * Creates SME for user.\n     * Creates SME for user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSme(requestParameters: PostSmeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationSme>;\n    /**\n     * Creates SME for user.\n     * Creates SME for user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSme(requestParameters: PostSmeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationSme>>;\n    /**\n     * Creates SME for user.\n     * Creates SME for user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSme(requestParameters: PostSmeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationSme>>;\n    /**\n     * Creates SME for user.\n     * Creates SME for user\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSme(requestParameters: PostSmeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _presentationCreateSmeRequest = requestParameters[\"presentationCreateSmeRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationSme>(`${this.configuration.basePath}/client-api/v1/sme`,\n            _presentationCreateSmeRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postSmeUrl(requestParameters: PostSmeRequestParams): string {\n        const _presentationCreateSmeRequest = requestParameters[\"presentationCreateSmeRequest\"];\n        return `${this.configuration.basePath}/client-api/v1/sme`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/sme/accounting-authorization URL pattern\n*/\nexport const SmeHttpServiceGetAccountingAuthorizationMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/sme/accounting-authorization\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"type\" : \"OAuth\",\n  \"authorizationUrl\" : \"https://authorization.url\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/sme URL pattern\n*/\nexport const SmeHttpServiceGetSmeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/sme\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"name\" : \"Test SME\",\n  \"accountingPlatformId\" : \"quickbooks\",\n  \"accountingAuthorizationStatus\" : \"Authorized\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/sme URL pattern\n*/\nexport const SmeHttpServicePostSmeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/sme\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"name\" : \"Test SME\",\n  \"accountingPlatformId\" : \"quickbooks\",\n  \"accountingAuthorizationStatus\" : \"Authorized\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"accountingPlatformId\" : \"accountingPlatformId\",\n  \"name\" : \"name\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const SmeHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/sme/accounting-authorization\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"type\" : \"OAuth\",\n  \"authorizationUrl\" : \"https://authorization.url\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/sme\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"name\" : \"Test SME\",\n  \"accountingPlatformId\" : \"quickbooks\",\n  \"accountingAuthorizationStatus\" : \"Authorized\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/sme\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"name\" : \"Test SME\",\n  \"accountingPlatformId\" : \"quickbooks\",\n  \"accountingAuthorizationStatus\" : \"Authorized\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"accountingPlatformId\" : \"accountingPlatformId\",\n  \"name\" : \"name\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":"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"}