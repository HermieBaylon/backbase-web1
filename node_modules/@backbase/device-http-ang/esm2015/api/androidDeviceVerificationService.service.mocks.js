import { createMocks } from '@backbase/foundation-ang/data-http';
export const AndroidDeviceVerificationServiceServiceChallengeMocksProvider = createMocks([{
        urlPattern: "/client-api/verification/v1/android/challenges",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "nonce": "base64 encoded long string"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const AndroidDeviceVerificationServiceServiceVerifyMocksProvider = createMocks([{
        urlPattern: "/client-api/verification/v1/android/attestations",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "success": true,
                    "attestation": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w"
                }
            },
            {
                status: 403,
                body: {
                    "success": false,
                    "attestation": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w"
                }
            },
        ]
    }]);
export const AndroidDeviceVerificationServiceServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/verification/v1/android/challenges",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "nonce": "base64 encoded long string"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/verification/v1/android/attestations",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "success": true,
                    "attestation": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w"
                }
            },
            {
                status: 403,
                body: {
                    "success": false,
                    "attestation": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,