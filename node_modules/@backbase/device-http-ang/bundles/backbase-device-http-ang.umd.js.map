{"version":3,"file":"backbase-device-http-ang.umd.js","sources":["../../model/deviceStatus.ts","../../model/platform.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/androidDeviceVerificationService.service.ts","../../api/androidDeviceVerificationService.service.mocks.ts","../../api/manageMyDevices.service.ts","../../api/manageMyDevices.service.mocks.ts","../../api/manageOtherUsersDevices.service.ts","../../api/manageOtherUsersDevices.service.mocks.ts"],"sourcesContent":["/**\n * Device Management Service client\n * DBS users manage their registered devices. Admins manage other users’ devices.\n *\n * The version of the OpenAPI document: 1.0.6\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The status of the device\n */\nexport type DeviceStatus = 'ENABLED' | 'DISABLED' | 'REMOVED';\n\nexport const DeviceStatus = {\n    ENABLED: 'ENABLED' as DeviceStatus,\n    DISABLED: 'DISABLED' as DeviceStatus,\n    REMOVED: 'REMOVED' as DeviceStatus\n};\n\n","/**\n * Device Management Service client\n * DBS users manage their registered devices. Admins manage other users’ devices.\n *\n * The version of the OpenAPI document: 1.0.6\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The platform the device is using\n */\nexport type Platform = 'ios' | 'android' | 'huawei';\n\nexport const Platform = {\n    Ios: 'ios' as Platform,\n    Android: 'android' as Platform,\n    Huawei: 'huawei' as Platform\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const DEVICE_BASE_PATH = new InjectionToken<string>('DEVICE_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface DeviceConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class DeviceConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: DeviceConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link DeviceConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link DeviceConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module DeviceConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { DeviceConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class DeviceApiModule {\n    public static forRoot(configurationFactory: () => DeviceConfiguration): ModuleWithProviders<DeviceApiModule> {\n        return {\n            ngModule: DeviceApiModule,\n            providers: [ { provide: DeviceConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: DeviceApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: DeviceConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('DeviceApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Device Management Service client\n * DBS users manage their registered devices. Admins manage other users’ devices.\n *\n * The version of the OpenAPI document: 1.0.6\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ChallengeNonceRequest } from '../model/models';\nimport { ChallengeNonceResponse } from '../model/models';\nimport { DeviceAttestationRequest } from '../model/models';\nimport { DeviceAttestationResponse } from '../model/models';\nimport { NotFoundError } from '../model/models';\n\nimport { DEVICE_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { DeviceConfiguration }                                     from '../configuration';\n\n\nexport interface ChallengeRequestParams {\n    [\"challengeNonceRequest\"]: ChallengeNonceRequest;\n}\n\nexport interface VerifyRequestParams {\n    /** JWT response that is obtained during device verification request to Google Play base 64 encoded, along with a nonce. */\n    [\"deviceAttestationRequest\"]?: DeviceAttestationRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AndroidDeviceVerificationServiceService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new DeviceConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(DEVICE_BASE_PATH) basePath: string, @Optional() configuration: DeviceConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Generate device verification challenge.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public challenge(requestParameters: ChallengeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ChallengeNonceResponse>;\n    /**\n     * Generate device verification challenge.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public challenge(requestParameters: ChallengeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ChallengeNonceResponse>>;\n    /**\n     * Generate device verification challenge.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public challenge(requestParameters: ChallengeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ChallengeNonceResponse>>;\n    /**\n     * Generate device verification challenge.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public challenge(requestParameters: ChallengeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _challengeNonceRequest = requestParameters[\"challengeNonceRequest\"];\n        if (_challengeNonceRequest === null || _challengeNonceRequest === undefined) {\n            throw new Error('Required parameter challengeNonceRequest was null or undefined when calling challenge.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ChallengeNonceResponse>(`${this.configuration.basePath}/client-api/verification/v1/android/challenges`,\n            _challengeNonceRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public challengeUrl(requestParameters: ChallengeRequestParams): string {\n        const _challengeNonceRequest = requestParameters[\"challengeNonceRequest\"];\n        if (_challengeNonceRequest === null || _challengeNonceRequest === undefined) {\n            throw new Error('Required parameter challengeNonceRequest was null or undefined when calling challenge.');\n        }\n        return `${this.configuration.basePath}/client-api/verification/v1/android/challenges`;\n    }\n\n    /**\n     * Device verification for android.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public verify(requestParameters: VerifyRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DeviceAttestationResponse>;\n    /**\n     * Device verification for android.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public verify(requestParameters: VerifyRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DeviceAttestationResponse>>;\n    /**\n     * Device verification for android.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public verify(requestParameters: VerifyRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DeviceAttestationResponse>>;\n    /**\n     * Device verification for android.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public verify(requestParameters: VerifyRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _deviceAttestationRequest = requestParameters[\"deviceAttestationRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<DeviceAttestationResponse>(`${this.configuration.basePath}/client-api/verification/v1/android/attestations`,\n            _deviceAttestationRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public verifyUrl(requestParameters: VerifyRequestParams): string {\n        const _deviceAttestationRequest = requestParameters[\"deviceAttestationRequest\"];\n        return `${this.configuration.basePath}/client-api/verification/v1/android/attestations`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/verification/v1/android/challenges URL pattern\n*/\nexport const AndroidDeviceVerificationServiceServiceChallengeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/verification/v1/android/challenges\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"nonce\" : \"base64 encoded long string\"\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/verification/v1/android/attestations URL pattern\n*/\nexport const AndroidDeviceVerificationServiceServiceVerifyMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/verification/v1/android/attestations\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"success\" : true,\n  \"attestation\" : \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"success\" : false,\n  \"attestation\" : \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n}\n                },\n    ]\n}]);\n\nexport const AndroidDeviceVerificationServiceServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/verification/v1/android/challenges\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"nonce\" : \"base64 encoded long string\"\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n    ]\n},\n    {\n        urlPattern: \"/client-api/verification/v1/android/attestations\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"success\" : true,\n  \"attestation\" : \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"success\" : false,\n  \"attestation\" : \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n}\n            },\n\n    ]\n},\n]\n);\n\n\n","/**\n * Device Management Service client\n * DBS users manage their registered devices. Admins manage other users’ devices.\n *\n * The version of the OpenAPI document: 1.0.6\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { GetDevicesResponse } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PatchDeviceRequest } from '../model/models';\nimport { PutPushTokenRequest } from '../model/models';\n\nimport { DEVICE_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { DeviceConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteMyDeviceByDeviceIdRequestParams {\n    /** The ID of the device. */\n    [\"deviceId\"]: string;\n}\n\nexport interface PatchMyDeviceByDeviceIdRequestParams {\n    /** The ID of the device. */\n    [\"deviceId\"]: string;\n    /** Update a Device request body. */\n    [\"patchDeviceRequest\"]: PatchDeviceRequest;\n}\n\nexport interface PutPushTokenRequestParams {\n    /** The ID of the device. */\n    [\"deviceId\"]: string;\n    /** Attach a push notification request body. */\n    [\"putPushTokenRequest\"]: PutPushTokenRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManageMyDevicesService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new DeviceConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(DEVICE_BASE_PATH) basePath: string, @Optional() configuration: DeviceConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete a device.\n     * Delete a device owned by the invoking user identified using its device ID. The user cannot remove a device that has a status of &#x60;REMOVED&#x60;. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMyDeviceByDeviceId(requestParameters: DeleteMyDeviceByDeviceIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a device.\n     * Delete a device owned by the invoking user identified using its device ID. The user cannot remove a device that has a status of &#x60;REMOVED&#x60;. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMyDeviceByDeviceId(requestParameters: DeleteMyDeviceByDeviceIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a device.\n     * Delete a device owned by the invoking user identified using its device ID. The user cannot remove a device that has a status of &#x60;REMOVED&#x60;. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMyDeviceByDeviceId(requestParameters: DeleteMyDeviceByDeviceIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a device.\n     * Delete a device owned by the invoking user identified using its device ID. The user cannot remove a device that has a status of &#x60;REMOVED&#x60;. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMyDeviceByDeviceId(requestParameters: DeleteMyDeviceByDeviceIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deleteMyDeviceByDeviceId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteMyDeviceByDeviceIdUrl(requestParameters: DeleteMyDeviceByDeviceIdRequestParams): string {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deleteMyDeviceByDeviceId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`;\n    }\n\n    /**\n     * Retrieve all of a user\\&#39;s devices.\n     * Retrieve all of the devices associated with the invoking DBS user. This API is protected by access control and does not return devices with a status of &#x60;REMOVED&#x60;.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMyDevices(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetDevicesResponse>;\n    /**\n     * Retrieve all of a user\\&#39;s devices.\n     * Retrieve all of the devices associated with the invoking DBS user. This API is protected by access control and does not return devices with a status of &#x60;REMOVED&#x60;.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMyDevices(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetDevicesResponse>>;\n    /**\n     * Retrieve all of a user\\&#39;s devices.\n     * Retrieve all of the devices associated with the invoking DBS user. This API is protected by access control and does not return devices with a status of &#x60;REMOVED&#x60;.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMyDevices(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetDevicesResponse>>;\n    /**\n     * Retrieve all of a user\\&#39;s devices.\n     * Retrieve all of the devices associated with the invoking DBS user. This API is protected by access control and does not return devices with a status of &#x60;REMOVED&#x60;.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMyDevices(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetDevicesResponse>(`${this.configuration.basePath}/client-api/v1/users/me/devices`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMyDevicesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/users/me/devices`;\n    }\n\n    /**\n     * Update a device.\n     * Update a device. The invoking user must be the owner of the device. Currently, only the ability to change the status field between &#x60;ENABLED&#x60; and &#x60;DISABLED&#x60;, and the ability to update the device friendly name, are supported. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patchMyDeviceByDeviceId(requestParameters: PatchMyDeviceByDeviceIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Update a device.\n     * Update a device. The invoking user must be the owner of the device. Currently, only the ability to change the status field between &#x60;ENABLED&#x60; and &#x60;DISABLED&#x60;, and the ability to update the device friendly name, are supported. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patchMyDeviceByDeviceId(requestParameters: PatchMyDeviceByDeviceIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Update a device.\n     * Update a device. The invoking user must be the owner of the device. Currently, only the ability to change the status field between &#x60;ENABLED&#x60; and &#x60;DISABLED&#x60;, and the ability to update the device friendly name, are supported. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patchMyDeviceByDeviceId(requestParameters: PatchMyDeviceByDeviceIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Update a device.\n     * Update a device. The invoking user must be the owner of the device. Currently, only the ability to change the status field between &#x60;ENABLED&#x60; and &#x60;DISABLED&#x60;, and the ability to update the device friendly name, are supported. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patchMyDeviceByDeviceId(requestParameters: PatchMyDeviceByDeviceIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling patchMyDeviceByDeviceId.');\n        }\n        const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n        if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n            throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchMyDeviceByDeviceId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`,\n            _patchDeviceRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public patchMyDeviceByDeviceIdUrl(requestParameters: PatchMyDeviceByDeviceIdRequestParams): string {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling patchMyDeviceByDeviceId.');\n        }\n        const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n        if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n            throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchMyDeviceByDeviceId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`;\n    }\n\n    /**\n     * Attach a push notification token with a platform to a device.\n     * Attach a push notification token with a platform to a device. The invoking user must be the owner of the device and the device must be &#x60;ENABLED&#x60;. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPushToken(requestParameters: PutPushTokenRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Attach a push notification token with a platform to a device.\n     * Attach a push notification token with a platform to a device. The invoking user must be the owner of the device and the device must be &#x60;ENABLED&#x60;. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPushToken(requestParameters: PutPushTokenRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Attach a push notification token with a platform to a device.\n     * Attach a push notification token with a platform to a device. The invoking user must be the owner of the device and the device must be &#x60;ENABLED&#x60;. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPushToken(requestParameters: PutPushTokenRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Attach a push notification token with a platform to a device.\n     * Attach a push notification token with a platform to a device. The invoking user must be the owner of the device and the device must be &#x60;ENABLED&#x60;. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPushToken(requestParameters: PutPushTokenRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling putPushToken.');\n        }\n        const _putPushTokenRequest = requestParameters[\"putPushTokenRequest\"];\n        if (_putPushTokenRequest === null || _putPushTokenRequest === undefined) {\n            throw new Error('Required parameter putPushTokenRequest was null or undefined when calling putPushToken.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}/push-tokens`,\n            _putPushTokenRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putPushTokenUrl(requestParameters: PutPushTokenRequestParams): string {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling putPushToken.');\n        }\n        const _putPushTokenRequest = requestParameters[\"putPushTokenRequest\"];\n        if (_putPushTokenRequest === null || _putPushTokenRequest === undefined) {\n            throw new Error('Required parameter putPushTokenRequest was null or undefined when calling putPushToken.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}/push-tokens`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/users/me/devices/{deviceId} URL pattern\n*/\nexport const ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/users/me/devices URL pattern\n*/\nexport const ManageMyDevicesServiceGetMyDevicesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/users/me/devices\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"devices\" : [ {\n    \"deviceId\" : \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n    \"idpUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"externalUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"dbsUserId\" : \"8a48e1f56e880779016e8809ab970000\",\n    \"username\" : \"Bob_Jones\",\n    \"friendlyName\" : \"Bob's Galaxy S7\",\n    \"status\" : \"ENABLED\",\n    \"vendor\" : \"Samsung\",\n    \"model\" : \"Galaxy S7\",\n    \"created\" : \"2019-09-03T07:44:57Z\",\n    \"updated\" : \"2019-10-13T15:30:22Z\"\n  }, {\n    \"deviceId\" : \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n    \"idpUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"externalUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"dbsUserId\" : \"8a48e1f56e880779016e8809ab970000\",\n    \"username\" : \"Bob_Jones\",\n    \"friendlyName\" : \"Bob's iPhone\",\n    \"status\" : \"DISABLED\",\n    \"vendor\" : \"Apple\",\n    \"model\" : \"iPhone 10\",\n    \"created\" : \"2019-09-03T08:34:11Z\",\n    \"updated\" : \"2019-10-13T15:32:58Z\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/users/me/devices/{deviceId} URL pattern\n*/\nexport const ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n        method: \"PATCH\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/users/me/devices/{deviceId}/push-tokens URL pattern\n*/\nexport const ManageMyDevicesServicePutPushTokenMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}/push-tokens\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const ManageMyDevicesServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/users/me/devices\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"devices\" : [ {\n    \"deviceId\" : \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n    \"idpUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"externalUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"dbsUserId\" : \"8a48e1f56e880779016e8809ab970000\",\n    \"username\" : \"Bob_Jones\",\n    \"friendlyName\" : \"Bob's Galaxy S7\",\n    \"status\" : \"ENABLED\",\n    \"vendor\" : \"Samsung\",\n    \"model\" : \"Galaxy S7\",\n    \"created\" : \"2019-09-03T07:44:57Z\",\n    \"updated\" : \"2019-10-13T15:30:22Z\"\n  }, {\n    \"deviceId\" : \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n    \"idpUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"externalUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"dbsUserId\" : \"8a48e1f56e880779016e8809ab970000\",\n    \"username\" : \"Bob_Jones\",\n    \"friendlyName\" : \"Bob's iPhone\",\n    \"status\" : \"DISABLED\",\n    \"vendor\" : \"Apple\",\n    \"model\" : \"iPhone 10\",\n    \"created\" : \"2019-09-03T08:34:11Z\",\n    \"updated\" : \"2019-10-13T15:32:58Z\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n        method: \"PATCH\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}/push-tokens\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Device Management Service client\n * DBS users manage their registered devices. Admins manage other users’ devices.\n *\n * The version of the OpenAPI document: 1.0.6\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { GetDevicesResponse } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PatchDeviceRequest } from '../model/models';\n\nimport { DEVICE_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { DeviceConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteUserDeviceByDeviceIdRequestParams {\n    /** The ID of the device. */\n    [\"deviceId\"]: string;\n    /** The DBS user ID. */\n    [\"dbsUserId\"]: string;\n}\n\nexport interface GetDevicesByDbsUserIdRequestParams {\n    /** The DBS user ID. */\n    [\"dbsUserId\"]: string;\n}\n\nexport interface PatchUserDeviceByDbsUserIdAndDeviceIdRequestParams {\n    /** The ID of the device. */\n    [\"deviceId\"]: string;\n    /** The DBS user ID. */\n    [\"dbsUserId\"]: string;\n    /** Update a Device request body. */\n    [\"patchDeviceRequest\"]: PatchDeviceRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManageOtherUsersDevicesService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new DeviceConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(DEVICE_BASE_PATH) basePath: string, @Optional() configuration: DeviceConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete a Device.\n     * Delete a Device. The provided user ID must be the owner of the device specified. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUserDeviceByDeviceId(requestParameters: DeleteUserDeviceByDeviceIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a Device.\n     * Delete a Device. The provided user ID must be the owner of the device specified. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUserDeviceByDeviceId(requestParameters: DeleteUserDeviceByDeviceIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a Device.\n     * Delete a Device. The provided user ID must be the owner of the device specified. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUserDeviceByDeviceId(requestParameters: DeleteUserDeviceByDeviceIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a Device.\n     * Delete a Device. The provided user ID must be the owner of the device specified. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUserDeviceByDeviceId(requestParameters: DeleteUserDeviceByDeviceIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deleteUserDeviceByDeviceId.');\n        }\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling deleteUserDeviceByDeviceId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteUserDeviceByDeviceIdUrl(requestParameters: DeleteUserDeviceByDeviceIdRequestParams): string {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deleteUserDeviceByDeviceId.');\n        }\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling deleteUserDeviceByDeviceId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`;\n    }\n\n    /**\n     * Retrieve all of the devices associated with a DBS user.\n     * Retrieve all of the devices associated with the provided DBS user. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDevicesByDbsUserId(requestParameters: GetDevicesByDbsUserIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetDevicesResponse>;\n    /**\n     * Retrieve all of the devices associated with a DBS user.\n     * Retrieve all of the devices associated with the provided DBS user. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDevicesByDbsUserId(requestParameters: GetDevicesByDbsUserIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetDevicesResponse>>;\n    /**\n     * Retrieve all of the devices associated with a DBS user.\n     * Retrieve all of the devices associated with the provided DBS user. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDevicesByDbsUserId(requestParameters: GetDevicesByDbsUserIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetDevicesResponse>>;\n    /**\n     * Retrieve all of the devices associated with a DBS user.\n     * Retrieve all of the devices associated with the provided DBS user. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDevicesByDbsUserId(requestParameters: GetDevicesByDbsUserIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling getDevicesByDbsUserId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetDevicesResponse>(`${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getDevicesByDbsUserIdUrl(requestParameters: GetDevicesByDbsUserIdRequestParams): string {\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling getDevicesByDbsUserId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices`;\n    }\n\n    /**\n     * Update a Device.\n     * Update a Device. The ability to change the status field between &#x60;ENABLED&#x60; and &#x60;DISABLED&#x60;, and the ability to update the device friendly name are supported. The provided user ID must be the owner of the device specified. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patchUserDeviceByDbsUserIdAndDeviceId(requestParameters: PatchUserDeviceByDbsUserIdAndDeviceIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Update a Device.\n     * Update a Device. The ability to change the status field between &#x60;ENABLED&#x60; and &#x60;DISABLED&#x60;, and the ability to update the device friendly name are supported. The provided user ID must be the owner of the device specified. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patchUserDeviceByDbsUserIdAndDeviceId(requestParameters: PatchUserDeviceByDbsUserIdAndDeviceIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Update a Device.\n     * Update a Device. The ability to change the status field between &#x60;ENABLED&#x60; and &#x60;DISABLED&#x60;, and the ability to update the device friendly name are supported. The provided user ID must be the owner of the device specified. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patchUserDeviceByDbsUserIdAndDeviceId(requestParameters: PatchUserDeviceByDbsUserIdAndDeviceIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Update a Device.\n     * Update a Device. The ability to change the status field between &#x60;ENABLED&#x60; and &#x60;DISABLED&#x60;, and the ability to update the device friendly name are supported. The provided user ID must be the owner of the device specified. This is an admin API and so the DBS user can be different to the invoking user. This API is protected by access control.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patchUserDeviceByDbsUserIdAndDeviceId(requestParameters: PatchUserDeviceByDbsUserIdAndDeviceIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n        if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n            throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`,\n            _patchDeviceRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public patchUserDeviceByDbsUserIdAndDeviceIdUrl(requestParameters: PatchUserDeviceByDbsUserIdAndDeviceIdRequestParams): string {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n        if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n            throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/users/{dbsUserId}/devices/{deviceId} URL pattern\n*/\nexport const ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/users/{dbsUserId}/devices URL pattern\n*/\nexport const ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"devices\" : [ {\n    \"deviceId\" : \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n    \"idpUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"externalUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"dbsUserId\" : \"8a48e1f56e880779016e8809ab970000\",\n    \"username\" : \"Bob_Jones\",\n    \"friendlyName\" : \"Bob's Galaxy S7\",\n    \"status\" : \"ENABLED\",\n    \"vendor\" : \"Samsung\",\n    \"model\" : \"Galaxy S7\",\n    \"created\" : \"2019-09-03T07:44:57Z\",\n    \"updated\" : \"2019-10-13T15:30:22Z\"\n  }, {\n    \"deviceId\" : \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n    \"idpUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"externalUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"dbsUserId\" : \"8a48e1f56e880779016e8809ab970000\",\n    \"username\" : \"Bob_Jones\",\n    \"friendlyName\" : \"Bob's iPhone\",\n    \"status\" : \"DISABLED\",\n    \"vendor\" : \"Apple\",\n    \"model\" : \"iPhone 10\",\n    \"created\" : \"2019-09-03T08:34:11Z\",\n    \"updated\" : \"2019-10-13T15:32:58Z\"\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"devices\" : [ {\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"idpUserId\" : \"idpUserId\",\n    \"deviceId\" : \"deviceId\",\n    \"pushToken\" : \"pushToken\",\n    \"platform\" : \"platform\",\n    \"dbsUserId\" : \"dbsUserId\",\n    \"externalUserId\" : \"externalUserId\",\n    \"vendor\" : \"vendor\",\n    \"model\" : \"model\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"friendlyName\" : \"friendlyName\",\n    \"username\" : \"username\"\n  }, {\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"idpUserId\" : \"idpUserId\",\n    \"deviceId\" : \"deviceId\",\n    \"pushToken\" : \"pushToken\",\n    \"platform\" : \"platform\",\n    \"dbsUserId\" : \"dbsUserId\",\n    \"externalUserId\" : \"externalUserId\",\n    \"vendor\" : \"vendor\",\n    \"model\" : \"model\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"friendlyName\" : \"friendlyName\",\n    \"username\" : \"username\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/users/{dbsUserId}/devices/{deviceId} URL pattern\n*/\nexport const ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n        method: \"PATCH\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const ManageOtherUsersDevicesServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"devices\" : [ {\n    \"deviceId\" : \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n    \"idpUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"externalUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"dbsUserId\" : \"8a48e1f56e880779016e8809ab970000\",\n    \"username\" : \"Bob_Jones\",\n    \"friendlyName\" : \"Bob's Galaxy S7\",\n    \"status\" : \"ENABLED\",\n    \"vendor\" : \"Samsung\",\n    \"model\" : \"Galaxy S7\",\n    \"created\" : \"2019-09-03T07:44:57Z\",\n    \"updated\" : \"2019-10-13T15:30:22Z\"\n  }, {\n    \"deviceId\" : \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n    \"idpUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"externalUserId\" : \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n    \"dbsUserId\" : \"8a48e1f56e880779016e8809ab970000\",\n    \"username\" : \"Bob_Jones\",\n    \"friendlyName\" : \"Bob's iPhone\",\n    \"status\" : \"DISABLED\",\n    \"vendor\" : \"Apple\",\n    \"model\" : \"iPhone 10\",\n    \"created\" : \"2019-09-03T08:34:11Z\",\n    \"updated\" : \"2019-10-13T15:32:58Z\"\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"devices\" : [ {\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"idpUserId\" : \"idpUserId\",\n    \"deviceId\" : \"deviceId\",\n    \"pushToken\" : \"pushToken\",\n    \"platform\" : \"platform\",\n    \"dbsUserId\" : \"dbsUserId\",\n    \"externalUserId\" : \"externalUserId\",\n    \"vendor\" : \"vendor\",\n    \"model\" : \"model\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"friendlyName\" : \"friendlyName\",\n    \"username\" : \"username\"\n  }, {\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"idpUserId\" : \"idpUserId\",\n    \"deviceId\" : \"deviceId\",\n    \"pushToken\" : \"pushToken\",\n    \"platform\" : \"platform\",\n    \"dbsUserId\" : \"dbsUserId\",\n    \"externalUserId\" : \"externalUserId\",\n    \"vendor\" : \"vendor\",\n    \"model\" : \"model\",\n    \"updated\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"friendlyName\" : \"friendlyName\",\n    \"username\" : \"username\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n        method: \"PATCH\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","Injectable","Inject","createMocks"],"mappings":"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"}