import { Component, Input, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Status } from '../constants';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/consent-ui";
import * as i2 from "@backbase/ui-ang/badge";
import * as i3 from "@backbase/ui-ang/icon";
import * as i4 from "@angular/common";
import * as i5 from "@backbase/ui-ang/date-pipe";
export class ConsentItemComponent {
    constructor() {
        /**
         * Component context
         */
        this.hostRef = this;
        /**
         * Consent item status enumeration
         */
        this.Status = Status;
    }
}
ConsentItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ConsentItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentItemComponent, selector: "bb-consent-item-component", inputs: { consent: "consent" }, ngImport: i0, template: "<ng-container bbConsentListItemCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"consent\"> </ng-container>\n\n<ng-template bbConsentListItemCustomizable let-hostRef let-consent=\"context\">\n  <ng-container *ngIf=\"consent\">\n    <div class=\"row\">\n      <div class=\"col-8 col-sm-8 col-md-4\">\n        <bb-third-party-provider-ui\n          [name]=\"consent.tpp.name\"\n          [url]=\"consent.tpp.website\"\n          [image]=\"consent.tpp.imageUrl\"\n          [verified]=\"consent.tpp.isTrusted\"\n          [condensed]=\"true\"\n          [expiryDate]=\"consent.expiryDate | bbDate: 'bbShort'\"\n          [expired]=\"consent?.status === hostRef.Status.EXPIRED\"\n          [showExpire]=\"true\">\n        </bb-third-party-provider-ui>\n      </div>\n      <div class=\"d-none d-md-block col-2\">\n        <span\n          data-role=\"consent-item-accounts\"\n          i18n=\"Accounts|Number of Accounts@@consent-list-component.accounts.pluralization\">\n          { consent.numberOfAccounts, plural, =1 {1 account} other {{{consent.numberOfAccounts}} accounts} }\n        </span>\n      </div>\n      <div class=\"bb-text-align-right d-none d-md-block col-3 col-lg-4\">\n        <div\n          i18n=\"Expired on|Consent is expired@@consent-list.date.expiredOn\"\n          class=\"bb-consent-item__date-header\"\n          *ngIf=\"consent?.status === hostRef.Status.EXPIRED\">\n          Expired on\n        </div>\n        <div\n          i18n=\"Expiry Date|Expiry Date of Consent@@consent-list.date.expiryDate\"\n          class=\"bb-consent-item__date-header\"\n          *ngIf=\"consent?.status !== hostRef.Status.EXPIRED\">\n          Expire date\n        </div>\n        <div>\n          {{ consent.expiryDate | bbDate: 'bbShort' }}\n        </div>\n      </div>\n      <div class=\"d-none d-sm-flex col-3 col-md-2 col-lg-1 bb-stack\">\n        <div class=\"bb-stack__item bb-stack__item--push-right\">\n          <bb-badge-ui\n            data-role=\"consent-item-badge-lg-active\"\n            *ngIf=\"consent.status === Status.ACTIVE\"\n            color=\"success\"\n            text=\"ACTIVE\"\n            i18n-text=\"Active|Active badge@@consent-list-component.badge.active\">\n          </bb-badge-ui>\n          <bb-badge-ui\n            data-role=\"consent-item-badge-lg-revoked\"\n            *ngIf=\"consent.status === Status.REVOKED\"\n            color=\"danger\"\n            text=\"REVOKED\"\n            i18n-text=\"Revoked|revoked badge@@consent-list-component.badge.revoked\">\n          </bb-badge-ui>\n          <bb-badge-ui\n            data-role=\"consent-item-badge-lg-expired\"\n            *ngIf=\"consent.status === Status.EXPIRED\"\n            color=\"secondary\"\n            text=\"EXPIRED\"\n            i18n-text=\"Expired|Expired badge@@consent-list-component.badge.expired\">\n          </bb-badge-ui>\n        </div>\n      </div>\n      <div class=\"bb-text-align-right col-2 d-sm-none bb-stack\">\n        <div class=\"bb-stack__item bb-stack__item--push-right\">\n          <bb-badge-ui\n            data-role=\"consent-item-badge-sm-active\"\n            *ngIf=\"consent.status === Status.ACTIVE\"\n            [abbr]=\"true\"\n            color=\"success\"\n            text=\"ACTIVE\"\n            i18n-text=\"Active|Active badge@@consent-list-component.badge.active\">\n          </bb-badge-ui>\n          <bb-badge-ui\n            data-role=\"consent-item-badge-sm-revoked\"\n            *ngIf=\"consent.status === Status.REVOKED\"\n            [abbr]=\"true\"\n            color=\"danger\"\n            text=\"REVOKED\"\n            i18n-text=\"Revoked|revoked badge@@consent-list-component.badge.revoked\">\n          </bb-badge-ui>\n          <bb-badge-ui\n            data-role=\"consent-item-badge-sm-expired\"\n            *ngIf=\"consent.status === Status.EXPIRED\"\n            [abbr]=\"true\"\n            color=\"secondary\"\n            text=\"EXPIRED\"\n            i18n-text=\"Expired|Expired badge@@consent-list-component.badge.expired\">\n          </bb-badge-ui>\n        </div>\n      </div>\n      <div class=\"bb-text-align-right col-2 col-sm-1 col-md-1 bb-stack\">\n        <div class=\"bb-stack__item bb-stack__item--push-right\">\n          <bb-icon-ui name=\"chevron-right\" size=\"md\" color=\"secondary\"> </bb-icon-ui>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.ӨThirdPartyProviderComponent; }), selector: "bb-third-party-provider-ui", inputs: ["name", "image", "url", "verified", "condensed", "expiryDate", "expired", "showExpire"] }, { type: i0.forwardRef(function () { return i2.BadgeComponent; }), selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i0.forwardRef(function () { return i3.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i0.forwardRef(function () { return ConsentListItemCustomizableDirective; }), selector: "[bbConsentListItemCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "bbDate": i0.forwardRef(function () { return i5.BbDatePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-consent-item-component',
                    templateUrl: './consent-item.component.html',
                }]
        }], propDecorators: { consent: [{
                type: Input
            }] } });
export class ConsentListItemCustomizableDirective extends BbTemplate {
}
ConsentListItemCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentListItemCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ConsentListItemCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: ConsentListItemCustomizableDirective, selector: "[bbConsentListItemCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentListItemCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbConsentListItemCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,