import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Category } from '../model/models';
import { CategoriesManagementConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetCategoriesRequestParams {
    ["categoryType"]?: string;
    ["level"]?: 'ALL' | 'PARENTS';
    ["parentId"]?: string;
    ["externalIds"]?: Array<string>;
    ["internalIds"]?: Array<number>;
}
export interface GetCategoryRequestParams {
    ["id"]: string;
}
export declare class CategoriesHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: CategoriesManagementConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: CategoriesManagementConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getCategories(requestParameters: GetCategoriesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<Array<Category>>;
    getCategories(requestParameters: GetCategoriesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<Array<Category>>>;
    getCategories(requestParameters: GetCategoriesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<Array<Category>>>;
    getCategoriesUrl(requestParameters: GetCategoriesRequestParams): string;
    getCategory(requestParameters: GetCategoryRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<Category>;
    getCategory(requestParameters: GetCategoryRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<Category>>;
    getCategory(requestParameters: GetCategoryRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<Category>>;
    getCategoryUrl(requestParameters: GetCategoryRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<CategoriesHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CategoriesHttpService>;
}
