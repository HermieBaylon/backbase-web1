{"version":3,"file":"backbase-categories-management-http-ang.umd.js","sources":["../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/categories.service.ts","../../api/categories.service.mocks.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const CATEGORIES_MANAGEMENT_BASE_PATH = new InjectionToken<string>('CATEGORIES_MANAGEMENT_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface CategoriesManagementConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class CategoriesManagementConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: CategoriesManagementConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link CategoriesManagementConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link CategoriesManagementConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module CategoriesManagementConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { CategoriesManagementConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class CategoriesManagementApiModule {\n    public static forRoot(configurationFactory: () => CategoriesManagementConfiguration): ModuleWithProviders<CategoriesManagementApiModule> {\n        return {\n            ngModule: CategoriesManagementApiModule,\n            providers: [ { provide: CategoriesManagementConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: CategoriesManagementApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: CategoriesManagementConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('CategoriesManagementApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Categories Management Client API\n * This API allows web and mobile widgets to list available transaction categories\n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { Category } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { CATEGORIES_MANAGEMENT_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CategoriesManagementConfiguration }                                     from '../configuration';\n\n\nexport interface GetCategoriesRequestParams {\n    /** Type the categories must belong to */\n    [\"categoryType\"]?: string;\n    /** Level to retrieve */\n    [\"level\"]?: 'ALL' | 'PARENTS';\n    /** Category ID the categories must be children of */\n    [\"parentId\"]?: string;\n    /** List of external IDs the categories must have one of */\n    [\"externalIds\"]?: Array<string>;\n    /** List of internal IDs the categories must have one of */\n    [\"internalIds\"]?: Array<number>;\n}\n\nexport interface GetCategoryRequestParams {\n    /** Category ID */\n    [\"id\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CategoriesManagementConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CATEGORIES_MANAGEMENT_BASE_PATH) basePath: string, @Optional() configuration: CategoriesManagementConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * List transaction categories\n     * Retrieves available transaction categories\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategories(requestParameters: GetCategoriesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<Category>>;\n    /**\n     * List transaction categories\n     * Retrieves available transaction categories\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategories(requestParameters: GetCategoriesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<Category>>>;\n    /**\n     * List transaction categories\n     * Retrieves available transaction categories\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategories(requestParameters: GetCategoriesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<Category>>>;\n    /**\n     * List transaction categories\n     * Retrieves available transaction categories\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategories(requestParameters: GetCategoriesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _categoryType = requestParameters[\"categoryType\"];\n        const _level = requestParameters[\"level\"];\n        const _parentId = requestParameters[\"parentId\"];\n        const _externalIds = requestParameters[\"externalIds\"];\n        const _internalIds = requestParameters[\"internalIds\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_categoryType !== undefined && _categoryType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_categoryType, 'categoryType');\n        }\n        if (_level !== undefined && _level !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_level, 'level');\n        }\n        if (_parentId !== undefined && _parentId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_parentId, 'parentId');\n        }\n        if (_externalIds) {\n            _externalIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'externalIds');\n            })\n        }\n        if (_internalIds) {\n            _internalIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'internalIds');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<Category>>(`${this.configuration.basePath}/client-api/v2/categories`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCategoriesUrl(requestParameters: GetCategoriesRequestParams): string {\n        const _categoryType = requestParameters[\"categoryType\"];\n        const _level = requestParameters[\"level\"];\n        const _parentId = requestParameters[\"parentId\"];\n        const _externalIds = requestParameters[\"externalIds\"];\n        const _internalIds = requestParameters[\"internalIds\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_categoryType !== undefined && _categoryType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_categoryType, 'categoryType');\n        }\n        if (_level !== undefined && _level !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_level, 'level');\n        }\n        if (_parentId !== undefined && _parentId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_parentId, 'parentId');\n        }\n        if (_externalIds) {\n            _externalIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'externalIds');\n            })\n        }\n        if (_internalIds) {\n            _internalIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'internalIds');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/categories${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Get category\n     * Retrieves a category by ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategory(requestParameters: GetCategoryRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Category>;\n    /**\n     * Get category\n     * Retrieves a category by ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategory(requestParameters: GetCategoryRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Category>>;\n    /**\n     * Get category\n     * Retrieves a category by ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategory(requestParameters: GetCategoryRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Category>>;\n    /**\n     * Get category\n     * Retrieves a category by ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategory(requestParameters: GetCategoryRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getCategory.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Category>(`${this.configuration.basePath}/client-api/v2/categories/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCategoryUrl(requestParameters: GetCategoryRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getCategory.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/categories/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/categories URL pattern\n*/\nexport const CategoriesHttpServiceGetCategoriesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/categories\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"categoryId\" : 1,\n  \"externalId\" : \"1\",\n  \"categoryName\" : \"Home\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 2,\n    \"externalId\" : \"2\",\n    \"categoryName\" : \"Mortgage\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 1\n  }, {\n    \"categoryId\" : 3,\n    \"externalId\" : \"3\",\n    \"categoryName\" : \"Rent\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 1\n  } ]\n}, {\n  \"categoryId\" : 4,\n  \"externalId\" : \"4\",\n  \"categoryName\" : \"Food & Drinks\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 5,\n    \"externalId\" : \"5\",\n    \"categoryName\" : \"Alcohol & Bars\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 4\n  }, {\n    \"categoryId\" : 6,\n    \"externalId\" : \"600\",\n    \"categoryName\" : \"Fast Food\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 4\n  }, {\n    \"categoryId\" : 7,\n    \"externalId\" : \"7\",\n    \"categoryName\" : \"Groceries\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 4\n  }, {\n    \"categoryId\" : 8,\n    \"externalId\" : \"8\",\n    \"categoryName\" : \"Restaurants\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 4\n  } ]\n}, {\n  \"categoryId\" : 9,\n  \"externalId\" : \"9\",\n  \"categoryName\" : \"Health & Beauty\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 10,\n    \"externalId\" : \"10\",\n    \"categoryName\" : \"Beauty\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 9\n  }, {\n    \"categoryId\" : 11,\n    \"externalId\" : \"11\",\n    \"categoryName\" : \"Health & Fitness\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 9\n  } ]\n}, {\n  \"categoryId\" : 12,\n  \"externalId\" : \"12\",\n  \"categoryName\" : \"Transportation\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 13,\n    \"externalId\" : \"13\",\n    \"categoryName\" : \"Car\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 12\n  }, {\n    \"categoryId\" : 14,\n    \"externalId\" : \"14\",\n    \"categoryName\" : \"Public Transport\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 12\n  } ]\n}, {\n  \"categoryId\" : 15,\n  \"externalId\" : \"15\",\n  \"categoryName\" : \"Shopping\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 16,\n    \"externalId\" : \"16\",\n    \"categoryName\" : \"Clothing\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 15\n  }, {\n    \"categoryId\" : 17,\n    \"externalId\" : \"17\",\n    \"categoryName\" : \"Electronics\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 15\n  } ]\n}, {\n  \"categoryId\" : 18,\n  \"externalId\" : \"18\",\n  \"categoryName\" : \"Hobbies & Entertainment\",\n  \"categoryType\" : \"Expenses\"\n}, {\n  \"categoryId\" : 19,\n  \"externalId\" : \"19\",\n  \"categoryName\" : \"Bills & Utilities\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 20,\n    \"externalId\" : \"20\",\n    \"categoryName\" : \"Internet\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 19\n  }, {\n    \"categoryId\" : 21,\n    \"externalId\" : \"21\",\n    \"categoryName\" : \"Mobile Phone\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 19\n  }, {\n    \"categoryId\" : 22,\n    \"externalId\" : \"22\",\n    \"categoryName\" : \"Utilities\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 19\n  } ]\n}, {\n  \"categoryId\" : 23,\n  \"externalId\" : \"23\",\n  \"categoryName\" : \"Income\",\n  \"categoryType\" : \"Income\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 24,\n    \"externalId\" : \"24\",\n    \"categoryName\" : \"Bonus\",\n    \"categoryType\" : \"Income\",\n    \"parentId\" : 23\n  }, {\n    \"categoryId\" : 25,\n    \"externalId\" : \"25\",\n    \"categoryName\" : \"Salary/Wages\",\n    \"categoryType\" : \"Income\",\n    \"parentId\" : 23\n  } ]\n}, {\n  \"categoryId\" : 26,\n  \"externalId\" : \"26\",\n  \"categoryName\" : \"Other Income\",\n  \"categoryType\" : \"Income\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 27,\n    \"externalId\" : \"27\",\n    \"categoryName\" : \"Interest Income\",\n    \"categoryType\" : \"Income\",\n    \"parentId\" : 26\n  }, {\n    \"categoryId\" : 28,\n    \"externalId\" : \"28\",\n    \"categoryName\" : \"Rental Income\",\n    \"categoryType\" : \"Income\",\n    \"parentId\" : 26\n  } ]\n}, {\n  \"categoryId\" : 29,\n  \"externalId\" : \"29\",\n  \"categoryName\" : \"Transfers\",\n  \"categoryType\" : \"Transfer\"\n}, {\n  \"categoryId\" : 30,\n  \"externalId\" : \"30\",\n  \"categoryName\" : \"Uncategorised\",\n  \"categoryType\" : \"General\"\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/categories/{id} URL pattern\n*/\nexport const CategoriesHttpServiceGetCategoryMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/categories/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"categoryId\" : 1,\n  \"externalId\" : \"1\",\n  \"categoryName\" : \"Home\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 2,\n    \"externalId\" : \"2\",\n    \"categoryName\" : \"Mortgage\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 1\n  }, {\n    \"categoryId\" : 3,\n    \"externalId\" : \"3\",\n    \"categoryName\" : \"Rent\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 1\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"categoryType\" : \"categoryType\",\n  \"externalId\" : \"externalId\",\n  \"iconLocation\" : \"iconLocation\",\n  \"categoryName\" : \"categoryName\",\n  \"categoryId\" : 0,\n  \"transactionId\" : \"transactionId\",\n  \"parentId\" : 6,\n  \"subCategories\" : [ {\n    \"categoryType\" : \"categoryType\",\n    \"externalId\" : \"externalId\",\n    \"iconLocation\" : \"iconLocation\",\n    \"categoryName\" : \"categoryName\",\n    \"categoryId\" : 1,\n    \"transactionId\" : \"transactionId\",\n    \"parentId\" : 5\n  }, {\n    \"categoryType\" : \"categoryType\",\n    \"externalId\" : \"externalId\",\n    \"iconLocation\" : \"iconLocation\",\n    \"categoryName\" : \"categoryName\",\n    \"categoryId\" : 1,\n    \"transactionId\" : \"transactionId\",\n    \"parentId\" : 5\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const CategoriesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/categories\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"categoryId\" : 1,\n  \"externalId\" : \"1\",\n  \"categoryName\" : \"Home\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 2,\n    \"externalId\" : \"2\",\n    \"categoryName\" : \"Mortgage\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 1\n  }, {\n    \"categoryId\" : 3,\n    \"externalId\" : \"3\",\n    \"categoryName\" : \"Rent\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 1\n  } ]\n}, {\n  \"categoryId\" : 4,\n  \"externalId\" : \"4\",\n  \"categoryName\" : \"Food & Drinks\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 5,\n    \"externalId\" : \"5\",\n    \"categoryName\" : \"Alcohol & Bars\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 4\n  }, {\n    \"categoryId\" : 6,\n    \"externalId\" : \"600\",\n    \"categoryName\" : \"Fast Food\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 4\n  }, {\n    \"categoryId\" : 7,\n    \"externalId\" : \"7\",\n    \"categoryName\" : \"Groceries\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 4\n  }, {\n    \"categoryId\" : 8,\n    \"externalId\" : \"8\",\n    \"categoryName\" : \"Restaurants\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 4\n  } ]\n}, {\n  \"categoryId\" : 9,\n  \"externalId\" : \"9\",\n  \"categoryName\" : \"Health & Beauty\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 10,\n    \"externalId\" : \"10\",\n    \"categoryName\" : \"Beauty\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 9\n  }, {\n    \"categoryId\" : 11,\n    \"externalId\" : \"11\",\n    \"categoryName\" : \"Health & Fitness\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 9\n  } ]\n}, {\n  \"categoryId\" : 12,\n  \"externalId\" : \"12\",\n  \"categoryName\" : \"Transportation\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 13,\n    \"externalId\" : \"13\",\n    \"categoryName\" : \"Car\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 12\n  }, {\n    \"categoryId\" : 14,\n    \"externalId\" : \"14\",\n    \"categoryName\" : \"Public Transport\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 12\n  } ]\n}, {\n  \"categoryId\" : 15,\n  \"externalId\" : \"15\",\n  \"categoryName\" : \"Shopping\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 16,\n    \"externalId\" : \"16\",\n    \"categoryName\" : \"Clothing\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 15\n  }, {\n    \"categoryId\" : 17,\n    \"externalId\" : \"17\",\n    \"categoryName\" : \"Electronics\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 15\n  } ]\n}, {\n  \"categoryId\" : 18,\n  \"externalId\" : \"18\",\n  \"categoryName\" : \"Hobbies & Entertainment\",\n  \"categoryType\" : \"Expenses\"\n}, {\n  \"categoryId\" : 19,\n  \"externalId\" : \"19\",\n  \"categoryName\" : \"Bills & Utilities\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 20,\n    \"externalId\" : \"20\",\n    \"categoryName\" : \"Internet\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 19\n  }, {\n    \"categoryId\" : 21,\n    \"externalId\" : \"21\",\n    \"categoryName\" : \"Mobile Phone\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 19\n  }, {\n    \"categoryId\" : 22,\n    \"externalId\" : \"22\",\n    \"categoryName\" : \"Utilities\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 19\n  } ]\n}, {\n  \"categoryId\" : 23,\n  \"externalId\" : \"23\",\n  \"categoryName\" : \"Income\",\n  \"categoryType\" : \"Income\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 24,\n    \"externalId\" : \"24\",\n    \"categoryName\" : \"Bonus\",\n    \"categoryType\" : \"Income\",\n    \"parentId\" : 23\n  }, {\n    \"categoryId\" : 25,\n    \"externalId\" : \"25\",\n    \"categoryName\" : \"Salary/Wages\",\n    \"categoryType\" : \"Income\",\n    \"parentId\" : 23\n  } ]\n}, {\n  \"categoryId\" : 26,\n  \"externalId\" : \"26\",\n  \"categoryName\" : \"Other Income\",\n  \"categoryType\" : \"Income\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 27,\n    \"externalId\" : \"27\",\n    \"categoryName\" : \"Interest Income\",\n    \"categoryType\" : \"Income\",\n    \"parentId\" : 26\n  }, {\n    \"categoryId\" : 28,\n    \"externalId\" : \"28\",\n    \"categoryName\" : \"Rental Income\",\n    \"categoryType\" : \"Income\",\n    \"parentId\" : 26\n  } ]\n}, {\n  \"categoryId\" : 29,\n  \"externalId\" : \"29\",\n  \"categoryName\" : \"Transfers\",\n  \"categoryType\" : \"Transfer\"\n}, {\n  \"categoryId\" : 30,\n  \"externalId\" : \"30\",\n  \"categoryName\" : \"Uncategorised\",\n  \"categoryType\" : \"General\"\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/categories/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"categoryId\" : 1,\n  \"externalId\" : \"1\",\n  \"categoryName\" : \"Home\",\n  \"categoryType\" : \"Expenses\",\n  \"subCategories\" : [ {\n    \"categoryId\" : 2,\n    \"externalId\" : \"2\",\n    \"categoryName\" : \"Mortgage\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 1\n  }, {\n    \"categoryId\" : 3,\n    \"externalId\" : \"3\",\n    \"categoryName\" : \"Rent\",\n    \"categoryType\" : \"Expenses\",\n    \"parentId\" : 1\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"categoryType\" : \"categoryType\",\n  \"externalId\" : \"externalId\",\n  \"iconLocation\" : \"iconLocation\",\n  \"categoryName\" : \"categoryName\",\n  \"categoryId\" : 0,\n  \"transactionId\" : \"transactionId\",\n  \"parentId\" : 6,\n  \"subCategories\" : [ {\n    \"categoryType\" : \"categoryType\",\n    \"externalId\" : \"externalId\",\n    \"iconLocation\" : \"iconLocation\",\n    \"categoryName\" : \"categoryName\",\n    \"categoryId\" : 1,\n    \"transactionId\" : \"transactionId\",\n    \"parentId\" : 5\n  }, {\n    \"categoryType\" : \"categoryType\",\n    \"externalId\" : \"externalId\",\n    \"iconLocation\" : \"iconLocation\",\n    \"categoryName\" : \"categoryName\",\n    \"categoryId\" : 1,\n    \"transactionId\" : \"transactionId\",\n    \"parentId\" : 5\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}