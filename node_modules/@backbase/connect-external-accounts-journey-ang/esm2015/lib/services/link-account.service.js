import { Injectable } from '@angular/core';
import { A2aClientHttpService as A2aClientService, } from '@backbase/data-ang/payment-order-a2a';
import { BehaviorSubject, throwError } from 'rxjs';
import { catchError, map, switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/payment-order-a2a";
export class LinkAccountService {
    constructor(paymentOrdersA2ADataHttpService) {
        this.paymentOrdersA2ADataHttpService = paymentOrdersA2ADataHttpService;
        this.isFormModalOpen = new BehaviorSubject(false);
        this.defaultAccount = {
            routingNumber: '',
            accountNickName: '',
            accountNumber: '',
        };
        this.responseError$ = new BehaviorSubject(undefined);
        this.refreshAccounts$ = new BehaviorSubject(this.defaultAccount);
        this.accounts$ = this.refreshAccounts$.pipe(switchMap(() => this.paymentOrdersA2ADataHttpService.getAll().pipe(catchError(err => {
            this.responseError$.next(err);
            return throwError(err);
        }), map(res => (res && res.accounts ? res.accounts : [])))));
    }
    postNewAccount(contactItem) {
        return this.paymentOrdersA2ADataHttpService.create({ externalAccountPostRequest: contactItem });
    }
    putNewAccountVerification(externalId, amounts) {
        return this.paymentOrdersA2ADataHttpService.verify({
            externalAccountId: externalId,
            externalAccountVerificationPutRequest: amounts,
        });
    }
    removeAccount(externalAccountId) {
        return this.paymentOrdersA2ADataHttpService._delete({ externalAccountId });
    }
    get isModalOpen() {
        return this.isFormModalOpen;
    }
    openModal(value = true) {
        this.isFormModalOpen.next(value);
    }
}
/** @nocollapse */ LinkAccountService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LinkAccountService, deps: [{ token: i1.A2aClientHttpService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ LinkAccountService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LinkAccountService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LinkAccountService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.A2aClientHttpService }]; } });
//# sourceMappingURL=link-account.service.js.map