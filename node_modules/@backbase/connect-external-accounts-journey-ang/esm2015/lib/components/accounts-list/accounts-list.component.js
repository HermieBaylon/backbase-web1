import { Component, EventEmitter, Input, Output } from '@angular/core';
import { payverisStatuses } from '../../helpers/constants';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/badge";
import * as i2 from "@backbase/ui-ang/dropdown-menu";
import * as i3 from "@backbase/ui-ang/icon";
import * as i4 from "../confirmation-dialog/confirmation-dialog.component";
import * as i5 from "@angular/common";
import * as i6 from "@backbase/ui-ang/keyboard-click-directive";
import * as i7 from "@backbase/ui-ang/button";
export class AccountsListComponent {
    constructor() {
        this.isOpen = false;
        this.isPendigAccountOpen = false;
        this.statuses = payverisStatuses;
        /**
         * Open link account modal event emitter
         */
        this.openModal = new EventEmitter();
        /**
         * Loading activate account flag
         * Default value is false
         */
        this.isLoading = false;
        /**
         * Open account details modal event emitter
         */
        this.selectExternalAccount = new EventEmitter();
        /**
         * Delete account event emitter
         */
        this.deleteAccount = new EventEmitter();
        /**
         * Make transfer event emitter
         */
        this.makeTransfer = new EventEmitter();
        this.confirmationModalOpen = false;
    }
    onClickNewAccount() {
        this.openModal.emit();
    }
    populateAccount(account) {
        this.selectExternalAccount.emit(account);
    }
    onKeydown(event, account) {
        if (event.code === 'Space' || event.key === 'Enter') {
            if (account) {
                this.populateAccount(account);
            }
            else {
                this.onClickNewAccount();
            }
        }
    }
    stopPropagation(event) {
        event.stopPropagation();
    }
    manageConfirmationModal(account) {
        this.accountInfo = account;
        this.confirmationModalOpen = true;
    }
    onDeleteAccount(id) {
        this.deleteAccount.emit(id);
    }
    onMakeTransfer(account) {
        this.makeTransfer.emit(account.externalAccountId);
    }
}
/** @nocollapse */ AccountsListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountsListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ AccountsListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountsListComponent, selector: "bb-a2a-accounts-list", inputs: { accounts: "accounts", activateForm: "activateForm", isLoading: "isLoading" }, outputs: { openModal: "openModal", selectExternalAccount: "selectExternalAccount", deleteAccount: "deleteAccount", makeTransfer: "makeTransfer" }, ngImport: i0, template: "<div class=\"card\">\n  <div class=\"card-body\">\n    <div class=\"bb-list\">\n      <div\n        tabindex=\"0\"\n        role=\"button\"\n        class=\"bb-list__item\"\n        (keydown)=\"onKeydown($event, acc)\"\n        *ngFor=\"let acc of accounts; let odd = odd\"\n        (click)=\"populateAccount(acc)\"\n      >\n        <div class=\"bb-stack\">\n          <div class=\"bb-stack__item\">\n            <div\n              class=\"bb-block--sm\"\n              [class.d-none]=\"acc.status === 'Active'\"\n              data-role=\"payord-a2a-accounts-list-status-badge\"\n            >\n              <span class=\"d-none\" aria-hidden=\"true\" i18n=\"@@payord-a2a-account-list-status-badge.label\" #label>\n                {acc.status, select, InProcess {IN PROCESS} PendingActivation {PENDING ACTIVATION} FailedVerification\n                {FAILED ACTIVATION} RejectedByExternalBank {FAILED ACTIVATION} DisabledForExcessiveReturns {DISABLED}\n                DisabledForFraud {DISABLED} }\n              </span>\n              <bb-badge-ui\n                *ngIf=\"acc.status !== 'Active'\"\n                [color]=\"$any(statuses)[acc.status]\"\n                [text]=\"label.textContent\"\n              >\n              </bb-badge-ui>\n            </div>\n            <div class=\"bb-text-bold bb-block--sm\">\n              <span data-role=\"payord-a2a-accounts-list-name\">\n                {{ acc?.accountNickName || acc?.bankName }}\n              </span>\n            </div>\n            <div class=\"bb-text-support\">\n              <span data-role=\"payord-a2a-accounts-list-account-number\">\n                {{ acc.accountNumber }}\n              </span>\n            </div>\n          </div>\n          <div class=\"bb-stack__item--push-right btn-group-toggle\">\n            <div class=\"bb-button-bar\" (click)=\"populateAccount(acc)\">\n              <bb-dropdown-menu-ui\n                class=\"bb-button-bar__button\"\n                btnColor=\"link\"\n                (click)=\"stopPropagation($event)\"\n                (keydown)=\"stopPropagation($event)\"\n                btnCircle=\"true\"\n                container=\"body\"\n                data-role=\"a2a-more-options\"\n              >\n                <ng-template bbDropdownLabel>\n                  <span class=\"sr-only\" i18n=\"@@a2a-account-list.item.actions-dropdown-button\"\n                    >Actions dropdown button</span\n                  >\n                  <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n                </ng-template>\n                <ng-template bbDropdownMenuItem>\n                  <button\n                    *ngIf=\"acc.status === 'PendingActivation'\"\n                    role=\"menuitem\"\n                    type=\"button\"\n                    class=\"d-block d-sm-none dropdown-item\"\n                    placement=\"left\"\n                    i18n=\"@@payord-a2a-accounts-list.activate.account\"\n                    data-role=\"transfer-a2a-dropdown\"\n                    (click)=\"populateAccount(acc)\"\n                    (keydown)=\"onKeydown($event, acc)\"\n                  >\n                    Activate\n                  </button>\n                  <button\n                    role=\"menuitem\"\n                    type=\"button\"\n                    class=\"dropdown-item\"\n                    placement=\"left\"\n                    i18n=\"@@payord-a2a-accounts-list.make.transfer\"\n                    data-role=\"transfer-a2a-dropdown\"\n                    [hidden]=\"acc.status !== 'Active'\"\n                    (bbKeyboardClick)=\"onMakeTransfer(acc)\"\n                  >\n                    Make transfer\n                  </button>\n                  <button\n                    role=\"menuitem\"\n                    type=\"button\"\n                    class=\"dropdown-item\"\n                    placement=\"left\"\n                    (click)=\"populateAccount(acc)\"\n                    (keydown)=\"onKeydown($event, acc)\"\n                    i18n=\"@@payord-a2a-accounts-list.see.details\"\n                    data-role=\"details-a2a-dropdown\"\n                  >\n                    See details\n                  </button>\n                  <button\n                    role=\"menuitem\"\n                    type=\"button\"\n                    class=\"dropdown-item text-danger\"\n                    placement=\"left\"\n                    (click)=\"manageConfirmationModal(acc)\"\n                    (keydown.enter)=\"manageConfirmationModal(acc)\"\n                    i18n=\"@@payord-a2a-accounts-list.remove.account\"\n                    data-role=\"remove-a2a-dropdown\"\n                  >\n                    Remove\n                  </button>\n                </ng-template>\n              </bb-dropdown-menu-ui>\n\n              <button\n                class=\"d-none d-sm-block bb-button-bar__button\"\n                bbButton\n                *ngIf=\"acc.status === 'PendingActivation'\"\n                color=\"primary\"\n                type=\"submit\"\n                data-role=\"payord-a2a-activate-account.modal-activate-btn-text\"\n              >\n                <span i18n=\"@@payord-a2a-link.accounts.list.activate-btn.span\"> Activate </span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<bb-confirmation-dialog\n  [isOpen]=\"confirmationModalOpen\"\n  [confirmButtonColor]=\"'danger'\"\n  (cancel)=\"confirmationModalOpen = false\"\n  (confirm)=\"confirmationModalOpen = false; onDeleteAccount(accountInfo?.externalAccountId)\"\n>\n  <span\n    title\n    data-role=\"payord-a2a-remove-modal-title\"\n    i18n=\"@@payord-a2a-accounts-list.confirmation-dialog.discard.title\"\n  >\n    Remove \"{{ accountInfo?.accountNickName || accountInfo?.bankName }}\" account?\n  </span>\n  <span\n    body\n    data-role=\"payord-a2a-remove-modal-message\"\n    i18n=\"@@payord-a2a-accounts-list.confirmation-dialog.discard.body\"\n  >\n    Removing this account will permanently erase the data entered.\n  </span>\n  <span confirmActionName i18n=\"@@payord-a2a-accounts-list.confirmation-dialog.discard.action.confirm\"> Remove </span>\n  <span cancelActionName i18n=\"@@payord-a2a-accounts-list.confirmation-dialog.discard.action.cancel\"> Cancel </span>\n</bb-confirmation-dialog>\n", components: [{ type: i1.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i2.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i4.ConfirmationDialogComponent, selector: "bb-confirmation-dialog", inputs: ["confirmButtonColor", "cancelButtonColor", "isOpen", "confirmActionPayload", "attachComment", "commentFieldLabel"], outputs: ["confirm", "cancel"] }], directives: [{ type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.DropdownLabelDirective, selector: "ng-template[bbDropdownLabel]" }, { type: i2.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i6.KeyboardClickDirective, selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i7.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountsListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-a2a-accounts-list',
                    templateUrl: './accounts-list.component.html',
                }]
        }], propDecorators: { openModal: [{
                type: Output
            }], accounts: [{
                type: Input
            }], activateForm: [{
                type: Input
            }], isLoading: [{
                type: Input
            }], selectExternalAccount: [{
                type: Output
            }], deleteAccount: [{
                type: Output
            }], makeTransfer: [{
                type: Output
            }] } });
//# sourceMappingURL=accounts-list.component.js.map