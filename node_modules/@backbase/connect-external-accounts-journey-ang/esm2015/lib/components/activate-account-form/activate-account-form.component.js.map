{"version":3,"file":"activate-account-form.component.js","sourceRoot":"","sources":["../../../../../../../libs/connect-external-accounts-journey/src/lib/components/activate-account-form/activate-account-form.component.ts","../../../../../../../libs/connect-external-accounts-journey/src/lib/components/activate-account-form/activate-account-form.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAmB,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC5D,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;;;;;;AAOvD,MAAM,OAAO,gCAAgC;IAJ7C;QAKE,qBAAgB,GAAG,cAAc,CAAC;QAElC;;;WAGG;QACM,cAAS,GAAG,KAAK,CAAC;QAO3B;;;WAGG;QACM,eAAU,GAAG,KAAK,CAAC;QAE5B;;WAEG;QACM,eAAU,GAAkB,EAAE,CAAC;QAExC;;WAEG;QACO,sBAAiB,GAAG,IAAI,YAAY,EAAqB,CAAC;QAEpE,kBAAa,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;KAiBnE;IAfC,YAAY,CAAC,SAAiB;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAE3C,OAAO,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC;IACxB,CAAC;IAEO,UAAU,CAAC,SAAiB;;QAClC,OAAO,MAAA,IAAI,CAAC,mBAAmB,0CAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAED,mBAAmB,CAAC,IAAY;QAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QAC5D,MAAM,KAAK,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;;iJA9CU,gCAAgC;qIAAhC,gCAAgC,wPCT7C,iwFAwEA;4FD/Da,gCAAgC;kBAJ5C,SAAS;mBAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,WAAW,EAAE,sCAAsC;iBACpD;8BAQU,SAAS;sBAAjB,KAAK;gBAKG,mBAAmB;sBAA3B,KAAK;gBAMG,UAAU;sBAAlB,KAAK;gBAKG,UAAU;sBAAlB,KAAK;gBAKI,iBAAiB;sBAA1B,MAAM","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { validateNumber } from '../../helpers/helpers';\nimport { DecimalFieldTypes } from '../../models/types';\n\n@Component({\n  selector: 'bb-activate-a2a-account',\n  templateUrl: 'activate-account-form.component.html',\n})\nexport class ActivateExternalAccountComponent {\n  numberValidation = validateNumber;\n\n  /**\n   * Submitted form flag\n   * Default value is false\n   */\n  @Input() submitted = false;\n\n  /**\n   * Activate account form\n   */\n  @Input() activateAccountForm!: FormGroup;\n\n  /**\n   * Form fields disabled flag\n   * Default value is false\n   */\n  @Input() isDisabled = false;\n\n  /**\n   * Currency list\n   */\n  @Input() currencies: Array<string> = [];\n\n  /**\n   * Set decimals fields values event emitter\n   */\n  @Output() setDecimalsValues = new EventEmitter<DecimalFieldTypes>();\n\n  currencyState = { currency: true, integer: true, decimal: false };\n\n  isFieldValid(fieldName: string): boolean | undefined {\n    const control = this.getControl(fieldName);\n\n    return control?.valid;\n  }\n\n  private getControl(fieldName: string): AbstractControl | undefined {\n    return this.activateAccountForm?.controls[fieldName];\n  }\n\n  onSetDecimalsValues(name: string) {\n    const value = this.activateAccountForm.controls[name].value;\n    const field = { name, value };\n    this.setDecimalsValues.emit(field);\n  }\n}\n","<form [formGroup]=\"activateAccountForm\" class=\"form-group\">\n  <div class=\"bb-label\" id=\"firstAmountLabel\" i18n=\"@@payord-a2a-activate-account.first.amount\">First amount</div>\n  <div class=\"row col-md-8 col-sm-8\">\n    <bb-currency-input-ui\n      [attr.data-role]=\"'first-decimal-input'\"\n      aria-labelledby=\"firstAmountLabel\"\n      [disabled]=\"currencyState\"\n      [currencies]=\"currencies\"\n      formControlName=\"firstAmount\"\n      [placeholder]=\"'00'\"\n      [required]=\"true\"\n      [isRightAligned]=\"true\"\n    ></bb-currency-input-ui>\n  </div>\n\n  <div class=\"form-group\">\n    <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('firstAmount')\">\n      <ng-container *ngIf=\"submitted && activateAccountForm?.get('firstAmount')?.errors as errors\">\n        <span\n          *ngIf=\"errors.invalidAmount\"\n          i18n=\"@@payord-a2a-link-account.modal.required.Decimals\"\n          data-role=\"payord-a2a-activate-account-first-decimals-required-message\"\n        >\n          Amount is required.\n        </span>\n        <span\n          *ngIf=\"errors.minValue && !errors.invalidAmount\"\n          i18n=\"@@payord-a2a-link-account.modal.pattern.Decimals\"\n          data-role=\"payord-a2a-activate-account-first-Decimals-pattern-message\"\n        >\n          Amount is invalid.\n        </span>\n      </ng-container>\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-label\" id=\"secondAmountLabel\" i18n=\"@@payord-a2a-activate-account.second.amount\">Second amount</div>\n\n  <div class=\"row col-md-8 col-sm-8\">\n    <bb-currency-input-ui\n      [attr.data-role]=\"'second-decimal-input'\"\n      aria-labelledby=\"secondAmountLabel\"\n      [disabled]=\"currencyState\"\n      [currencies]=\"currencies\"\n      formControlName=\"secondAmount\"\n      [required]=\"true\"\n      [placeholder]=\"'00'\"\n      [isRightAligned]=\"true\"\n    ></bb-currency-input-ui>\n  </div>\n\n  <div>\n    <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('secondAmount')\">\n      <ng-container *ngIf=\"submitted && activateAccountForm?.get('secondAmount')?.errors as errors\">\n        <span\n          *ngIf=\"errors.invalidAmount\"\n          i18n=\"@@payord-a2a-link-account.modal.required.Decimals\"\n          data-role=\"payord-a2a-activate-account-second-decimals-required-message\"\n        >\n          Amount is required.\n        </span>\n        <span\n          *ngIf=\"errors.minValue && !errors.invalidAmount\"\n          i18n=\"@@payord-a2a-link-account.modal.pattern.Decimals\"\n          data-role=\"payord-a2a-activate-account-second-Decimals-pattern-message\"\n        >\n          Amount is invalid.\n        </span>\n      </ng-container>\n    </bb-input-validation-message-ui>\n  </div>\n</form>\n"]}