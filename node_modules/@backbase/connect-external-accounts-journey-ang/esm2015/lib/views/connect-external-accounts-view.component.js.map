{"version":3,"file":"connect-external-accounts-view.component.js","sourceRoot":"","sources":["../../../../../../libs/connect-external-accounts-journey/src/lib/views/connect-external-accounts-view.component.ts","../../../../../../libs/connect-external-accounts-journey/src/lib/views/connect-external-accounts-view.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit, Optional, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DetailedExternalAccount } from '@backbase/data-ang/payment-order-a2a';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { BehaviorSubject, Observable, Subject, throwError } from 'rxjs';\nimport { catchError, takeUntil } from 'rxjs/operators';\nimport { CommunicationService } from '../communication.service';\nimport { FORM_INPUT_LENGTHS, RESPONSES } from '../helpers/constants';\nimport { amountValidator, formatAccountNumber, routingTransitNumberValidator } from '../helpers/helpers';\nimport { ModalState } from '../models/types';\nimport { ConnectExternalAccountsJourneyConfigService } from '../services/config.service';\nimport { LinkAccountService } from '../services/link-account.service';\n\ndeclare const $localize: any;\n\n@Component({\n  selector: 'bb-connect-external-accounts-view',\n  templateUrl: 'connect-external-accounts-view.component.html',\n})\nexport class ConnectExternalAccountsViewComponent implements OnDestroy, OnInit {\n  submitted = false;\n  isModalOpen = false;\n  accountForm!: FormGroup;\n  a2aAccounts$: Observable<DetailedExternalAccount[] | undefined> = this.linkAccountService.accounts$;\n  account!: DetailedExternalAccount;\n  loading$ = new BehaviorSubject<boolean>(false);\n  httpResponseError$: Observable<HttpErrorResponse | undefined> = this.linkAccountService.responseError$;\n  modalState: BehaviorSubject<ModalState | undefined> = new BehaviorSubject<ModalState | undefined>(undefined);\n  activateForm!: FormGroup;\n  activateAccountSubmitted = false;\n  isPendigAccountOpen = false;\n  isOpen = false;\n  activationFailed = false;\n  attemptsExceeded = false;\n  private readonly defaultAmount = {\n    currency: '',\n    amount: '',\n  };\n  invalidAmount = false;\n  private readonly destroy$ = new Subject<void>();\n  get currencies(): string[] {\n    return this.config.currencies;\n  }\n  formInputLengths = FORM_INPUT_LENGTHS;\n\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly formBuilder: FormBuilder,\n    private readonly linkAccountService: LinkAccountService,\n    private readonly config: ConnectExternalAccountsJourneyConfigService,\n    @Optional() private readonly communicationService: CommunicationService,\n  ) {}\n\n  ngOnInit() {\n    this.linkAccountService.isModalOpen\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(isOpen => isOpen && this.onOpenModal());\n  }\n\n  private showNotification(success: boolean, notification: { header: string | TemplateRef<any>; message: string }) {\n    this.notificationService.showNotification({\n      dismissible: true,\n      ttl: this.config.dismissMessageTime,\n      modifier: success ? 'success' : 'error',\n      ...notification,\n    });\n  }\n\n  private showSuccessNotification() {\n    this.showNotification(true, {\n      header: $localize`:@@connect-external-accounts-journey.account.notification.success:Information submitted successfully`,\n      message: '',\n    });\n  }\n\n  private noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    // eslint-disable-next-line no-null/no-null\n    return isValid ? null : { required: true };\n  }\n\n  private buildAccountForm() {\n    return this.formBuilder.group({\n      inputAccountName: ['', [Validators.required, this.noWhitespaceValidator]],\n      accountTypeSelect: ['', Validators.required],\n      inputAccountNumber: ['', [Validators.required, this.noWhitespaceValidator, Validators.pattern(/^\\d+$/)]],\n      inputRoutingNumber: ['', [Validators.required, routingTransitNumberValidator]],\n    });\n  }\n\n  private buildActivateAccountForm() {\n    return this.formBuilder.group({\n      firstAmount: [this.defaultAmount, [amountValidator]],\n      secondAmount: [this.defaultAmount, [amountValidator]],\n    });\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n  }\n\n  onOpenModal() {\n    this.isModalOpen = true;\n    this.accountForm = this.buildAccountForm();\n    this.modalState.next(ModalState.Preview);\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.loading$.next(true);\n\n    if (this.accountForm.invalid) {\n      this.loading$.next(false);\n      return;\n    }\n\n    const formValues = this.accountForm.value;\n    const accountItem = {\n      routingNumber: formValues.inputRoutingNumber,\n      accountNickName: formValues.inputAccountName.trim(),\n      accountNumber: formatAccountNumber(formValues.inputAccountNumber),\n      accountType: formValues.accountTypeSelect,\n    };\n\n    this.linkAccountService\n      .postNewAccount(accountItem)\n      .pipe(\n        takeUntil(this.destroy$),\n        catchError(err => {\n          this.showNotification(false, {\n            header: $localize`:@@connect-external-accounts-journey.account.notification.failure:Account creation failed`,\n            message: '',\n          });\n          this.loading$.next(false);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.loading$.next(false);\n        this.showSuccessNotification();\n        this.accountForm.reset();\n        this.submitted = false;\n        this.linkAccountService.refreshAccounts$.next(accountItem);\n        this.modalState.next(ModalState.Hidden);\n      });\n  }\n\n  onDiscardData() {\n    this.isModalOpen = false;\n    this.submitted = false;\n    this.accountForm.reset();\n  }\n\n  setExternalAccount(externalAccount: DetailedExternalAccount) {\n    if (externalAccount.status === 'PendingActivation') {\n      this.isPendigAccountOpen = true;\n    } else {\n      this.isOpen = true;\n    }\n    this.activateForm = this.buildActivateAccountForm();\n    this.account = externalAccount;\n  }\n\n  closeDetailsModal() {\n    this.isOpen = false;\n  }\n\n  closePendingAccountModal() {\n    this.isPendigAccountOpen = false;\n    this.activateAccountSubmitted = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onActivateAccount() {\n    const externalAccountId = this.account?.externalAccountId;\n    this.activateAccountSubmitted = true;\n    this.loading$.next(true);\n\n    if (this.activateForm?.invalid || !externalAccountId) {\n      this.loading$.next(false);\n      return;\n    }\n\n    const amounts = {\n      value1: this.activateForm.value.firstAmount.amount,\n      value2: this.activateForm.value.secondAmount.amount,\n    };\n    this.linkAccountService\n      .putNewAccountVerification(externalAccountId, amounts)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        res => {\n          this.isPendigAccountOpen = false;\n          this.loading$.next(false);\n          this.showSuccessNotification();\n          this.activateForm.reset();\n          this.activateAccountSubmitted = false;\n          this.linkAccountService.refreshAccounts$.next(res);\n        },\n        ({ error }) => {\n          const { errors } = error;\n\n          if (errors?.length) {\n            this.manageResponseError(errors[0].key);\n          } else {\n            this.activationFailed = false;\n          }\n          this.showNotification(false, {\n            header: $localize`:@@connect-external-accounts-journey.account.activation.failure.failure:Account activation failed`,\n            message: '',\n          });\n          this.loading$.next(false);\n        },\n      );\n  }\n\n  manageResponseError(key: string) {\n    switch (key) {\n      case RESPONSES.unmatchedKey:\n        this.activationFailed = true;\n        this.invalidAmount = false;\n        break;\n      case RESPONSES.exceededKey:\n        this.attemptsExceeded = true;\n        this.invalidAmount = false;\n        break;\n      case RESPONSES.invalidAmount:\n        this.activationFailed = false;\n        this.attemptsExceeded = false;\n        this.invalidAmount = true;\n    }\n  }\n\n  refreshAccountsList() {\n    this.linkAccountService.refreshAccounts$.next(this.account);\n    if (this.attemptsExceeded) {\n      this.activateForm.controls['firstAmount'].disable();\n      this.activateForm.controls['secondAmount'].disable();\n    }\n  }\n\n  deleteAccount(id: string) {\n    this.linkAccountService\n      .removeAccount(id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => {\n          this.refreshAccountsList();\n          this.showNotification(true, {\n            header: $localize`:@@connect-external-accounts-journey.account.success-message:Account removed successfully`,\n            message: '',\n          });\n        },\n        () => {\n          this.showNotification(false, {\n            header: $localize`:@@connect-external-accounts-journey.account.failure-message:Account could not be removed`,\n            message: '',\n          });\n        },\n      );\n  }\n\n  onCreatePayment(id: string) {\n    if (this.communicationService) {\n      this.communicationService.navigateToMakeTransfer(id);\n    }\n  }\n\n  initiateConnectAccount() {\n    this.onOpenModal();\n  }\n}\n","<ng-container *ngIf=\"!(httpResponseError$ | async); else errorState\">\n  <ng-container *ngIf=\"a2aAccounts$ | async as accounts; else loadingA2AList\">\n    <div *ngIf=\"accounts?.length; else emptyList\">\n      <bb-a2a-accounts-list\n        (openModal)=\"onOpenModal()\"\n        [accounts]=\"accounts\"\n        (selectExternalAccount)=\"setExternalAccount($event)\"\n        [activateForm]=\"activateForm\"\n        [isLoading]=\"loading$ | async\"\n        (submitActivateForm)=\"onActivateAccount()\"\n        (deleteAccount)=\"deleteAccount($event)\"\n        (makeTransfer)=\"onCreatePayment($event)\"\n      ></bb-a2a-accounts-list>\n    </div>\n    <ng-template #emptyList>\n      <bb-a2a-empty-list (openModal)=\"onOpenModal()\"> </bb-a2a-empty-list>\n    </ng-template>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingA2AList>\n  <div class=\"bb-state-container card\">\n    <bb-loading-indicator-ui\n      text=\"Loading data...\"\n      text-i18n=\"@@bb-connected-external-accounts-journey.connected-external-accounts-view.loading-placeholder\"\n    ></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"bb-state-container card\">\n    <bb-empty-state-ui\n      title=\"Page couldn't load\"\n      subtitle=\"Try to reload the page or contact the system administrator.\"\n      iconSize=\"xxl\"\n      iconModifier=\"error\"\n      i18n-title=\"@@connect-external-accounts-journey.error.state.title\"\n      i18n-subtitle=\"@@connect-external-accounts-journey.error.state.message\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n\n<bb-a2a-link-account-form\n  [modalOpen]=\"isModalOpen\"\n  (isAccountModalOpen)=\"closeModal()\"\n  [accountForm]=\"accountForm\"\n  [submitted]=\"submitted\"\n  (submitForm)=\"onSubmit()\"\n  (discardData)=\"onDiscardData()\"\n  [isLoading]=\"loading$ | async\"\n  (buildForm)=\"onOpenModal()\"\n  [formInputLengths]=\"formInputLengths\"\n  [modalState]=\"modalState\"\n></bb-a2a-link-account-form>\n\n<bb-a2a-account-details\n  [isOpen]=\"isOpen\"\n  (closeModal)=\"closeDetailsModal()\"\n  [externalAccount]=\"account\"\n></bb-a2a-account-details>\n\n<bb-pending-activation-account-details\n  [isOpen]=\"isPendigAccountOpen\"\n  (closeModal)=\"closePendingAccountModal()\"\n  [externalAccount]=\"account\"\n  [activateAccountForm]=\"activateForm\"\n  [loading]=\"loading$ | async\"\n  [submitted]=\"activateAccountSubmitted\"\n  [activationFailed]=\"activationFailed\"\n  [attemptsExceeded]=\"attemptsExceeded\"\n  [invalidAmount]=\"invalidAmount\"\n  (submitForm)=\"onActivateAccount()\"\n  (refreshList)=\"refreshAccountsList()\"\n  (setAccountStatus)=\"activationFailed = false\"\n  (setAttemptsExceeded)=\"attemptsExceeded = false\"\n  (setInvalidAmount)=\"invalidAmount = false\"\n  [currencies]=\"currencies\"\n></bb-pending-activation-account-details>\n"]}