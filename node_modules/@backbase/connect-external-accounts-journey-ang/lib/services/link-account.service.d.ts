import { HttpErrorResponse } from '@angular/common/http';
import { A2aClientHttpService as A2aClientService, DetailedExternalAccount, ExternalAccountGetPostPutResponse, ExternalAccountPostRequest } from '@backbase/data-ang/payment-order-a2a';
import { BehaviorSubject, Observable } from 'rxjs';
import * as i0 from "@angular/core";
interface ExternalAccountVerificationPutRequestExtend {
    value1: string | number;
    value2: string | number;
}
export declare class LinkAccountService {
    private readonly paymentOrdersA2ADataHttpService;
    private isFormModalOpen;
    private readonly defaultAccount;
    readonly responseError$: BehaviorSubject<HttpErrorResponse | undefined>;
    readonly refreshAccounts$: BehaviorSubject<Partial<DetailedExternalAccount | ExternalAccountGetPostPutResponse>>;
    readonly accounts$: Observable<DetailedExternalAccount[] | undefined>;
    constructor(paymentOrdersA2ADataHttpService: A2aClientService);
    postNewAccount(contactItem: ExternalAccountPostRequest): Observable<ExternalAccountGetPostPutResponse>;
    putNewAccountVerification(externalId: string, amounts: ExternalAccountVerificationPutRequestExtend): Observable<ExternalAccountGetPostPutResponse>;
    removeAccount(externalAccountId: string): Observable<any>;
    get isModalOpen(): Observable<boolean>;
    openModal(value?: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LinkAccountService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<LinkAccountService>;
}
export {};
