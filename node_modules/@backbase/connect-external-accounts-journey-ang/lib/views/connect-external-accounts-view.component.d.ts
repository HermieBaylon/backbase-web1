import { HttpErrorResponse } from '@angular/common/http';
import { OnDestroy, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { DetailedExternalAccount } from '@backbase/data-ang/payment-order-a2a';
import { NotificationService } from '@backbase/ui-ang/notification';
import { BehaviorSubject, Observable } from 'rxjs';
import { CommunicationService } from '../communication.service';
import { ModalState } from '../models/types';
import { ConnectExternalAccountsJourneyConfigService } from '../services/config.service';
import { LinkAccountService } from '../services/link-account.service';
import * as i0 from "@angular/core";
export declare class ConnectExternalAccountsViewComponent implements OnDestroy, OnInit {
    private readonly notificationService;
    private readonly formBuilder;
    private readonly linkAccountService;
    private readonly config;
    private readonly communicationService;
    submitted: boolean;
    isModalOpen: boolean;
    accountForm: FormGroup;
    a2aAccounts$: Observable<DetailedExternalAccount[] | undefined>;
    account: DetailedExternalAccount;
    loading$: BehaviorSubject<boolean>;
    httpResponseError$: Observable<HttpErrorResponse | undefined>;
    modalState: BehaviorSubject<ModalState | undefined>;
    activateForm: FormGroup;
    activateAccountSubmitted: boolean;
    isPendigAccountOpen: boolean;
    isOpen: boolean;
    activationFailed: boolean;
    attemptsExceeded: boolean;
    private readonly defaultAmount;
    invalidAmount: boolean;
    private readonly destroy$;
    get currencies(): string[];
    formInputLengths: {
        name: number;
        number: number;
        routingNumber: number;
    };
    constructor(notificationService: NotificationService, formBuilder: FormBuilder, linkAccountService: LinkAccountService, config: ConnectExternalAccountsJourneyConfigService, communicationService: CommunicationService);
    ngOnInit(): void;
    private showNotification;
    private showSuccessNotification;
    private noWhitespaceValidator;
    private buildAccountForm;
    private buildActivateAccountForm;
    closeModal(): void;
    onOpenModal(): void;
    onSubmit(): void;
    onDiscardData(): void;
    setExternalAccount(externalAccount: DetailedExternalAccount): void;
    closeDetailsModal(): void;
    closePendingAccountModal(): void;
    ngOnDestroy(): void;
    onActivateAccount(): void;
    manageResponseError(key: string): void;
    refreshAccountsList(): void;
    deleteAccount(id: string): void;
    onCreatePayment(id: string): void;
    initiateConnectAccount(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConnectExternalAccountsViewComponent, [null, null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ConnectExternalAccountsViewComponent, "bb-connect-external-accounts-view", never, {}, {}, never, never>;
}
