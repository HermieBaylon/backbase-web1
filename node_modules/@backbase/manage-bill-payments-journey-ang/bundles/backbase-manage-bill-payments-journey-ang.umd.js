(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/router'), require('@backbase/foundation-ang/core'), require('@backbase/billpay-journeys-common'), require('@angular/localize/init'), require('@backbase/data-ang/billpay'), require('rxjs'), require('rxjs/operators'), require('@backbase/ui-ang/header'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/badge'), require('@backbase/ui-ang/amount'), require('@backbase/ui-ang/date-pipe'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/notification'), require('@backbase/ui-ang/alert'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/modal')) :
    typeof define === 'function' && define.amd ? define('@backbase/manage-bill-payments-journey-ang', ['exports', '@angular/core', '@angular/common', '@angular/router', '@backbase/foundation-ang/core', '@backbase/billpay-journeys-common', '@angular/localize/init', '@backbase/data-ang/billpay', 'rxjs', 'rxjs/operators', '@backbase/ui-ang/header', '@backbase/ui-ang/icon', '@backbase/ui-ang/badge', '@backbase/ui-ang/amount', '@backbase/ui-ang/date-pipe', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/notification', '@backbase/ui-ang/alert', '@backbase/ui-ang/button', '@backbase/ui-ang/modal'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["manage-bill-payments-journey-ang"] = {}), global.ng.core, global.ng.common, global.ng.router, global.i1$6, global.i1, global.ng.localize.init, global.i1$2, global.rxjs, global.rxjs.operators, global.i2, global.i1$4, global.i1$3, global.i3, global.i4, global.i5, global.i6, global.i5$1, global.i6$1, global.i8, global.i1$5));
})(this, (function (exports, i0, i7, i1$1, i1$6, i1, init, i1$2, rxjs, operators, i2, i1$4, i1$3, i3, i4, i5, i6, i5$1, i6$1, i8, i1$5) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace$6 = /*#__PURE__*/_interopNamespace(i1$6);
    var i1__namespace$4 = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$2);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$4);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$3);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i5__namespace$1 = /*#__PURE__*/_interopNamespace(i5$1);
    var i6__namespace$1 = /*#__PURE__*/_interopNamespace(i6$1);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i1__namespace$5 = /*#__PURE__*/_interopNamespace(i1$5);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var ManageBillPaymentsJourneyConfigurationToken = new i0.InjectionToken('ManageBillPaymentsJourneyJourneyConfiguration injection token');
    exports.PaymentsFilterStatus = void 0;
    (function (PaymentsFilterStatus) {
        PaymentsFilterStatus["PENDING"] = "PENDING";
        PaymentsFilterStatus["HISTORICAL"] = "HISTORICAL";
        PaymentsFilterStatus["ALL"] = "ALL";
    })(exports.PaymentsFilterStatus || (exports.PaymentsFilterStatus = {}));
    var configDefaults = {
        notificationDismissTime: 5000,
        pageSize: 0,
        pageFilter: exports.PaymentsFilterStatus.PENDING,
        accountNumberMasked: false,
        pageTitle: $localize(templateObject_1 || (templateObject_1 = __makeTemplateObject([":@@manage-bill-payments.page-title:Pending payments"], [":@@manage-bill-payments.page-title:Pending payments"]))),
    };
    var ManageBillPaymentsJourneyConfigService = /** @class */ (function () {
        function ManageBillPaymentsJourneyConfigService(config) {
            config = config || {};
            this._config = Object.assign(Object.assign({}, configDefaults), config);
        }
        Object.defineProperty(ManageBillPaymentsJourneyConfigService.prototype, "defaults", {
            get: function () {
                return configDefaults;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ManageBillPaymentsJourneyConfigService.prototype, "notificationDismissTime", {
            get: function () {
                return this._config.notificationDismissTime;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ManageBillPaymentsJourneyConfigService.prototype, "pageSize", {
            get: function () {
                return this._config.pageSize;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ManageBillPaymentsJourneyConfigService.prototype, "pageFilter", {
            get: function () {
                return this._config.pageFilter;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ManageBillPaymentsJourneyConfigService.prototype, "accountNumberMasked", {
            get: function () {
                return this._config.accountNumberMasked;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ManageBillPaymentsJourneyConfigService.prototype, "pageTitle", {
            get: function () {
                return this._config.pageTitle;
            },
            enumerable: false,
            configurable: true
        });
        return ManageBillPaymentsJourneyConfigService;
    }());
    ManageBillPaymentsJourneyConfigService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsJourneyConfigService, deps: [{ token: ManageBillPaymentsJourneyConfigurationToken, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ManageBillPaymentsJourneyConfigService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsJourneyConfigService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsJourneyConfigService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [ManageBillPaymentsJourneyConfigurationToken]
                        }] }];
        } });
    var templateObject_1;

    var CommunicationService = /** @class */ (function () {
        function CommunicationService() {
        }
        return CommunicationService;
    }());

    var ManageBillPaymentsNavigationService = /** @class */ (function () {
        function ManageBillPaymentsNavigationService(router, route, communicationService) {
            this.router = router;
            this.route = route;
            this.communicationService = communicationService;
        }
        ManageBillPaymentsNavigationService.prototype.navigateToPayment = function (id, isRecurring) {
            if (isRecurring === void 0) { isRecurring = false; }
            var paymentType = isRecurring ? i1.RECURRING_PAYMENT : i1.ONE_OFF_PAYMENT;
            this.router.navigate([id], { queryParams: { type: paymentType }, relativeTo: this.route });
        };
        ManageBillPaymentsNavigationService.prototype.navigateToPaymentsList = function (filter) {
            if (this.communicationService) {
                filter === exports.PaymentsFilterStatus.HISTORICAL
                    ? this.communicationService.navigateToPaymentsHistory()
                    : this.communicationService.navigateToPaymentsList();
            }
            else {
                this.router.navigate(['./']);
            }
        };
        ManageBillPaymentsNavigationService.prototype.navigateToEditRecurringPayment = function (id) {
            var _a;
            (_a = this.communicationService) === null || _a === void 0 ? void 0 : _a.navigateToEditRecurringPayment(id);
        };
        ManageBillPaymentsNavigationService.prototype.navigateToEditOneOffPayment = function (id) {
            var _a;
            (_a = this.communicationService) === null || _a === void 0 ? void 0 : _a.navigateToEditOneOffPayment(id);
        };
        return ManageBillPaymentsNavigationService;
    }());
    ManageBillPaymentsNavigationService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsNavigationService, deps: [{ token: i1__namespace.Router }, { token: i1__namespace.ActivatedRoute }, { token: CommunicationService, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ManageBillPaymentsNavigationService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsNavigationService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsNavigationService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i1__namespace.Router }, { type: i1__namespace.ActivatedRoute }, { type: CommunicationService, decorators: [{
                            type: i0.Optional
                        }] }];
        } });

    exports.PaymentStatus = void 0;
    (function (PaymentStatus) {
        PaymentStatus["PENDING"] = "PENDING";
        PaymentStatus["INPROCESS"] = "INPROCESS";
        PaymentStatus["PROCESSED"] = "PROCESSED";
        PaymentStatus["FAILED"] = "FAILED";
        PaymentStatus["CANCELED"] = "CANCELED";
        PaymentStatus["UNAPPROVED"] = "UNAPPROVED";
    })(exports.PaymentStatus || (exports.PaymentStatus = {}));
    var PaymentsFilterStatus;
    (function (PaymentsFilterStatus) {
        PaymentsFilterStatus["PENDING"] = "PENDING";
        PaymentsFilterStatus["HISTORICAL"] = "HISTORICAL";
        PaymentsFilterStatus["ALL"] = "ALL";
    })(PaymentsFilterStatus || (PaymentsFilterStatus = {}));

    var ManageBillPaymentsDataService = /** @class */ (function () {
        /** @internal */
        function ManageBillPaymentsDataService(paymentsData, payeesData) {
            this.paymentsData = paymentsData;
            this.payeesData = payeesData;
        }
        ManageBillPaymentsDataService.prototype.getPayments = function (pageSize, paymentFilter) {
            var getDirection = function (status) { return status === PaymentsFilterStatus.PENDING ? i1.Direction.ASC : i1.Direction.DESC; };
            return this.paymentsData.getBillPayPayments(Object.assign({ status: paymentFilter, direction: getDirection(paymentFilter) }, (pageSize && { size: pageSize })));
        };
        ManageBillPaymentsDataService.prototype.getPayment = function (id, paymentType) {
            if (paymentType === void 0) { paymentType = i1.ONE_OFF_PAYMENT; }
            return paymentType === i1.ONE_OFF_PAYMENT
                ? this.paymentsData.getPaymentById({ id: id })
                : this.paymentsData.getRecurringPaymentById({ id: id });
        };
        ManageBillPaymentsDataService.prototype.getPayee = function (id) {
            return this.payeesData.getPayeeById({ id: id });
        };
        ManageBillPaymentsDataService.prototype.deletePayment = function (id, paymentType) {
            if (paymentType === void 0) { paymentType = i1.ONE_OFF_PAYMENT; }
            return paymentType === i1.ONE_OFF_PAYMENT
                ? this.paymentsData.deletePaymentById({ id: id })
                : this.paymentsData.deleteRecurringPaymentById({ id: id });
        };
        return ManageBillPaymentsDataService;
    }());
    ManageBillPaymentsDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsDataService, deps: [{ token: i1__namespace$1.BillPayPaymentsService }, { token: i1__namespace$1.BillPayPayeesService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ManageBillPaymentsDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsDataService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsDataService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$1.BillPayPaymentsService }, { type: i1__namespace$1.BillPayPayeesService }]; } });

    var BillpayPaymentStatusBadgeComponent = /** @class */ (function () {
        function BillpayPaymentStatusBadgeComponent() {
            this.paymentStatus = exports.PaymentStatus;
        }
        return BillpayPaymentStatusBadgeComponent;
    }());
    BillpayPaymentStatusBadgeComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentStatusBadgeComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPaymentStatusBadgeComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentStatusBadgeComponent, selector: "bb-billpay-payment-status-badge", inputs: { status: "status" }, ngImport: i0__namespace, template: "<ng-container [ngSwitch]=\"status\">\n  <bb-badge-ui\n    *ngSwitchCase=\"paymentStatus.INPROCESS\"\n    text=\"In progress\"\n    i18n-text=\"In process badge@@billpay-payment-badge.inprocess\"\n  ></bb-badge-ui>\n  <bb-badge-ui\n    *ngSwitchCase=\"paymentStatus.PENDING\"\n    color=\"warning\"\n    text=\"Pending\"\n    i18n-text=\"Pending badge@@billpay-payment-badge.pending\"\n  ></bb-badge-ui>\n  <bb-badge-ui\n    *ngSwitchCase=\"paymentStatus.FAILED\"\n    color=\"danger\"\n    text=\"Failed\"\n    i18n-text=\"Failed badge@@billpay-payment-badge.failed\"\n  ></bb-badge-ui>\n  <bb-badge-ui\n    *ngSwitchCase=\"paymentStatus.CANCELED\"\n    color=\"danger\"\n    text=\"Canceled\"\n    i18n-text=\"Canceled badge@@billpay-payment-badge.canceled\"\n  ></bb-badge-ui>\n  <bb-badge-ui\n    *ngSwitchCase=\"paymentStatus.UNAPPROVED\"\n    color=\"danger\"\n    text=\"Unapproved\"\n    i18n-text=\"Unapproved badge@@billpay-payment-badge.unapproved\"\n  ></bb-badge-ui>\n  <bb-badge-ui\n    *ngSwitchCase=\"paymentStatus.PROCESSED\"\n    color=\"success\"\n    text=\"Processed\"\n    i18n-text=\"Processed badge@@billpay-payment-badge.processed\"\n  ></bb-badge-ui>\n</ng-container>\n", components: [{ type: i1__namespace$2.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i7__namespace.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i7__namespace.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentStatusBadgeComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payment-status-badge',
                        templateUrl: './billpay-payment-status-badge.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { status: [{
                    type: i0.Input
                }] } });

    var BillpayPaymentCardComponent = /** @class */ (function () {
        function BillpayPaymentCardComponent() {
            /**
             * Defines whether this is a negative number to be prepended with a `-` character. Defaults to false.
             */
            this.isNegativeAmount = false;
        }
        BillpayPaymentCardComponent.prototype.getFormattedAmount = function (amount) {
            return "" + (this.isNegativeAmount ? '-' : '') + amount;
        };
        return BillpayPaymentCardComponent;
    }());
    BillpayPaymentCardComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentCardComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPaymentCardComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentCardComponent, selector: "bb-billpay-payment-card", inputs: { payment: "payment", isNegativeAmount: "isNegativeAmount" }, ngImport: i0__namespace, template: "<div class=\"bb-stack\">\n  <div class=\"bb-stack__item bb-stack__item--fill\" *ngIf=\"payment\" data-role=\"payment-item\">\n    <div class=\"bb-stack bb-stack--wrap\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <div data-role=\"payment-item-title\" class=\"bb-text-bold\">\n          {{ payment.payeeNickName || payment.payeeName }}\n        </div>\n        <div class=\"bb-stack bb-stack--align-top\" *ngIf=\"payment.recurring\">\n          <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n            <bb-icon-ui\n              data-role=\"payment-item-recurring-icon\"\n              size=\"sm\"\n              name=\"repeat\"\n              color=\"secondary\"\n            ></bb-icon-ui>\n          </div>\n          <div\n            class=\"bb-stack__item bb-subtitle bb-text-support\"\n            data-role=\"payment-item-recurring-label\"\n            i18n=\"Recurring payments frequency@@billpay-payment-card.recurring.frequency\"\n          >\n            Recurring { payment.frequency, select, WEEKLY {weekly} EVERY_2_WEEKS {every 2 weeks} EVERY_4_WEEKS {every\n            4 weeks} TWICE_A_MONTH {twice a month} MONTHLY {monthly} EVERY_2_MONTHS {every 2 months} EVERY_3_MONTHS\n            {every 3 months} EVERY_4_MONTHS {every 4 months} EVERY_6_MONTHS {every 6 months} ANNUALLY {annually} }\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n      <bb-billpay-payment-status-badge\n        class=\"bb-stack__item bb-text-align-right bb-text-align-left--sm-down\"\n        [status]=\"payment.status\"\n        data-role=\"payment-item-badge\"\n      ></bb-billpay-payment-status-badge>\n    </div>\n  </div>\n\n  <div class=\"col-4 col-md-3 col-lg-2 bb-stack__item bb-text-align-right\" data-role=\"payment-item-amount\">\n    <bb-amount-ui\n      class=\"bb-text-bold\"\n      data-role=\"amount\"\n      [amount]=\"payment && getFormattedAmount(payment.amount.amount)\"\n    >\n    </bb-amount-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: BillpayPaymentStatusBadgeComponent, selector: "bb-billpay-payment-status-badge", inputs: ["status"] }, { type: i3__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i7__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentCardComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payment-card',
                        templateUrl: './billpay-payment-card.component.html',
                    }]
            }], propDecorators: { payment: [{
                    type: i0.Input
                }], isNegativeAmount: [{
                    type: i0.Input
                }] } });

    var DateLabel;
    (function (DateLabel) {
        DateLabel["yesterday"] = "yesterday";
        DateLabel["today"] = "today";
        DateLabel["tomorrow"] = "tomorrow";
    })(DateLabel || (DateLabel = {}));
    var BillpayPaymentsGroupComponent = /** @class */ (function () {
        /** @internal */
        function BillpayPaymentsGroupComponent(router) {
            this.router = router;
        }
        BillpayPaymentsGroupComponent.prototype.getDateLabel = function (date) {
            var day = 1000 * 60 * 60 * 24;
            var today = new Date().setHours(0, 0, 0, 0);
            var targetDay = new Date(date).setHours(0, 0, 0, 0);
            var daysDiff = Math.round((targetDay - today) / day);
            switch (daysDiff) {
                case -1:
                    return DateLabel.yesterday;
                case 0:
                    return DateLabel.today;
                case 1:
                    return DateLabel.tomorrow;
                default:
                    return;
            }
        };
        BillpayPaymentsGroupComponent.prototype.navigateToPayment = function (id, isRecurring) {
            this.router.navigateToPayment(id, isRecurring);
        };
        return BillpayPaymentsGroupComponent;
    }());
    BillpayPaymentsGroupComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentsGroupComponent, deps: [{ token: ManageBillPaymentsNavigationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPaymentsGroupComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentsGroupComponent, selector: "bb-billpay-payments-group", inputs: { paymentsGroup: "paymentsGroup" }, ngImport: i0__namespace, template: "<section>\n  <div role=\"heading\" aria-level=\"2\" attr.id=\"payments-group-heading-{{paymentsGroup?.payments[0]?.id}}\" data-role=\"date-label\" class=\"bb-text-support bb-subheader bb-block bb-block--lg\">\n    <ng-container\n      *ngIf=\"getDateLabel(paymentsGroup?.date) as date; else formattedDate\"\n      i18n=\"Date label for payments group@@billpay-payments.payments-group.date-label\"\n    >\n      { date, select, yesterday {Yesterday} today {Today} tomorrow {Tomorrow} }\n    </ng-container>\n    <ng-template #formattedDate>{{ paymentsGroup?.date | bbDate: 'MMMM d' }}</ng-template>\n  </div>\n  <ul class=\"bb-list\" attr.aria-labelledby=\"payments-group-heading-{{paymentsGroup?.payments[0]?.id}}\">\n    <li\n      class=\"bb-list__item bb-list__item--no-separator\"\n      *ngFor=\"let payment of paymentsGroup?.payments\"\n    >\n      <bb-billpay-payment-card\n        tabindex=\"0\"\n        role=\"button\"\n        [payment]=\"payment\"\n        isNegativeAmount=\"true\"\n        (click)=\"navigateToPayment(payment.id, payment.recurring)\"\n        (keydown.enter)=\"navigateToPayment(payment.id, payment.recurring)\"\n      ></bb-billpay-payment-card>\n    </li>\n  </ul>\n</section>", components: [{ type: BillpayPaymentCardComponent, selector: "bb-billpay-payment-card", inputs: ["payment", "isNegativeAmount"] }], directives: [{ type: i7__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "bbDate": i4__namespace.BbDatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentsGroupComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payments-group',
                        templateUrl: './billpay-payments-group.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ManageBillPaymentsNavigationService }]; }, propDecorators: { paymentsGroup: [{
                    type: i0.Input
                }] } });

    var BillPayPaymentsListViewComponent = /** @class */ (function () {
        /** @internal */
        function BillPayPaymentsListViewComponent(dataService, config) {
            this.dataService = dataService;
            this.config = config;
            this.hasLoadingError = false;
            /**
             * Array of payments details. Groups by date.
             */
            this.paymentsByDate = [];
        }
        BillPayPaymentsListViewComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.payments$ = this.dataService.getPayments(this.config.pageSize, this.config.pageFilter).pipe(operators.map(function (_a) {
                var payments = _a.payments;
                return payments;
            }), operators.tap(function (paymentsData) {
                _this.paymentsByDate = _this.groupPaymentsByDate(paymentsData);
            }), operators.catchError(function () {
                _this.hasLoadingError = true;
                return rxjs.of([]);
            }));
        };
        BillPayPaymentsListViewComponent.prototype.groupPaymentsByDate = function (payments) {
            var _this = this;
            var reducer = function (groups, payment) {
                var lastGroup = groups[groups.length - 1];
                var paymentDate = payment.paymentDate;
                if (lastGroup && _this.isSameDay(lastGroup.date, paymentDate)) {
                    lastGroup.payments.push(payment);
                }
                else {
                    groups.push({
                        date: paymentDate,
                        payments: [payment],
                    });
                }
                return groups;
            };
            return payments.reduce(reducer, []);
        };
        BillPayPaymentsListViewComponent.prototype.isSameDay = function (date1, date2) {
            var day1 = new Date(date1).setHours(0, 0, 0, 0);
            var day2 = new Date(date2).setHours(0, 0, 0, 0);
            return day1 === day2;
        };
        return BillPayPaymentsListViewComponent;
    }());
    BillPayPaymentsListViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillPayPaymentsListViewComponent, deps: [{ token: ManageBillPaymentsDataService }, { token: ManageBillPaymentsJourneyConfigService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillPayPaymentsListViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillPayPaymentsListViewComponent, selector: "bb-billpay-list-view", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n    <bb-header-ui\n    headingType=\"h1\"\n    [heading]=\"config.pageTitle\"\n    i18n-heading=\"@@billpay-payments-journey.payments-list-view\"\n    ></bb-header-ui>\n</div>\n\n<ng-container *ngIf=\"(payments$ | async) as payments; else loadingState\">\n  <ng-container *ngIf=\"!hasLoadingError; else errorState\">\n    <ng-container *ngIf=\"payments.length; else emptyState\">\n      <section>\n        <ul class=\"card card-lg bb-list\">\n          <li class=\"card-section\" *ngFor=\"let paymentsGroup of paymentsByDate\">\n            <bb-billpay-payments-group [paymentsGroup]=\"paymentsGroup\"></bb-billpay-payments-group>\n          </li>\n        </ul>\n      </section>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconModifier=\"error-outline\"\n          title=\"Payments list is not loading\"\n          i18n-title=\"Payments list is not loading title@@billpay-payments.error-state.title\"\n          subtitle=\"Try to reload the page or contact support\"\n          i18n-subtitle=\"Payments list is not loading subtitle@@billpay-payments.error-state.subtitle\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #emptyState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-empty-state-ui\n          data-role=\"empty-state\"\n          iconSize=\"xxl\"\n          iconModifier=\"payments\"\n          title=\"No bill payments\"\n          i18n-title=\"No payments state title@@billpay-payments.empty-state.title\"\n          subtitle=\"You don't have any bill payments to display\"\n          i18n-subtitle=\"No payments state subtitle@@billpay-payments.empty-state.subtitle\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i2__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: BillpayPaymentsGroupComponent, selector: "bb-billpay-payments-group", inputs: ["paymentsGroup"] }, { type: i5__namespace.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i6__namespace.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i7__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i7__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillPayPaymentsListViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-list-view',
                        templateUrl: './billpay-payments-list-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ManageBillPaymentsDataService }, { type: ManageBillPaymentsJourneyConfigService }]; } });

    var BillpayPaymentDetailsComponent = /** @class */ (function () {
        /** @internal */
        function BillpayPaymentDetailsComponent(paymentParserService) {
            this.paymentParserService = paymentParserService;
            /**
             * Whether the account number should be masked. Defaults to true.
             */
            this.accountNumberMasked = true;
            this.paymentCancelling = new i0.EventEmitter();
            this.paymentEditing = new i0.EventEmitter();
            this.paymentStatus = exports.PaymentStatus;
        }
        BillpayPaymentDetailsComponent.prototype.parseToReview = function (payment, payee) {
            return this.paymentParserService.paymentAndPayeeResponsesToReview(payment, payee);
        };
        BillpayPaymentDetailsComponent.prototype.cancelPayment = function () {
            this.paymentCancelling.emit();
        };
        BillpayPaymentDetailsComponent.prototype.editPayment = function (payment) {
            this.paymentEditing.next({
                id: payment.id,
                recurring: payment.recurring,
            });
        };
        return BillpayPaymentDetailsComponent;
    }());
    BillpayPaymentDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentDetailsComponent, deps: [{ token: i1__namespace$4.BillpayPaymentParserService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPaymentDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentDetailsComponent, selector: "bb-billpay-payment-details", inputs: { payment: "payment", payee: "payee", accountNumberMasked: "accountNumberMasked" }, outputs: { paymentCancelling: "paymentCancelling", paymentEditing: "paymentEditing" }, ngImport: i0__namespace, template: "<div class=\"card card-lg\">\n  <div class=\"card-section\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-header-ui\n        data-role=\"payee-name\"\n        headingType=\"h2\"\n        heading=\"{{\n          (payment?.payeeNickName && payment?.payeeNickName + ' (' + payment?.payeeName + ')') || payment?.payeeName\n        }}\"\n      >\n      </bb-header-ui>\n    </div>\n    <div class=\"bb-block bb-block--xl\">\n      <div class=\"bb-stack\">\n        <bb-amount-ui\n          class=\"bb-stack__item bb-text-bold\"\n          data-role=\"payment-amount\"\n          [amount]=\"-payment?.amount?.amount\"\n        >\n        </bb-amount-ui>\n        <div class=\"bb-stack__item\">\n          <bb-billpay-payment-status-badge\n            [status]=\"payment?.status\"\n            data-role=\"payment-status\"\n          ></bb-billpay-payment-status-badge>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"bb-block {{\n        payment?.recurring || payment?.paymentAccount?.accountNickName ? 'bb-block--sm' : 'bb-block--lg'\n      }}\"\n    >\n      <div class=\"bb-stack\">\n        <bb-icon-ui\n          class=\"bb-stack__item bb-stack__item--spacing-sm\"\n          name=\"calendar-today\"\n          color=\"muted\"\n        ></bb-icon-ui>\n        <span class=\"bb-stack__item\" data-role=\"payment-date\">{{ payment?.paymentDate | bbDate: 'fullDate' }}</span>\n      </div>\n    </div>\n    <div\n      class=\"bb-block {{ payment?.recurring ? 'bb-block--sm' : 'bb-block--lg' }}\"\n      *ngIf=\"payment?.paymentAccount?.accountNickName\"\n    >\n      <div class=\"bb-stack\">\n        <bb-icon-ui\n          class=\"bb-stack__item bb-stack__item--spacing-sm\"\n          name=\"savings-accounts\"\n          color=\"muted\"\n        ></bb-icon-ui>\n        <span class=\"bb-stack__item\" data-role=\"payment-account-nickname\">{{\n          payment?.paymentAccount?.accountNickName\n        }}</span>\n      </div>\n    </div>\n\n    <div\n      class=\"{{\n        payment?.status === paymentStatus.INPROCESS || payment?.status === paymentStatus.PENDING\n          ? 'bb-block bb-block--lg'\n          : ''\n      }}\"\n      *ngIf=\"payment && payment?.recurring && payment?.frequency\"\n    >\n      <div class=\"bb-stack\" *ngIf=\"payment?.frequency\">\n        <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-sm\" name=\"repeat\" color=\"muted\"></bb-icon-ui>\n        <span\n          class=\"bb-stack__item\"\n          data-role=\"payment-recurring-label\"\n          i18n=\"recurring monthly label@@billpay-payment-details.recurring-frequency\"\n          >Recurring { payment?.frequency, select, WEEKLY {weekly} EVERY_2_WEEKS {every 2 weeks} EVERY_4_WEEKS {every 4\n          weeks} TWICE_A_MONTH {twice a month} MONTHLY {monthly} EVERY_2_MONTHS {every 2 months} EVERY_3_MONTHS {every\n          3 months} EVERY_4_MONTHS {every 4 months} EVERY_6_MONTHS {every 6 months} ANNUALLY {annually} }\n        </span>\n      </div>\n    </div>\n    <div *ngIf=\"payment?.status === paymentStatus.INPROCESS\">\n      <bb-alert-ui\n        modifier=\"info\"\n        title=\"Payment in progress, it cannot be edited or canceled\"\n        i18n-title=\"alert title|Payment in process alert@@billpay-payment-details.in-progress-alert\"\n        data-role=\"alert-message\"\n      >\n      </bb-alert-ui>\n    </div>\n\n    <div *ngIf=\"payment && payment.status === paymentStatus.PENDING\" data-role=\"payment-buttons\" class=\"bb-stack\">\n      <button\n        bbButton\n        data-role=\"edit-payment-button\"\n        i18n=\"Label for button|Edit payment button@@billpay-payment-details.edit.button\"\n        color=\"secondary\"\n        (click)=\"editPayment(payment)\"\n        class=\"bb-stack__item\"\n      >\n        Edit payment\n      </button>\n      <button\n        bbButton\n        data-role=\"cancel-payment-button\"\n        i18n=\"Label for button|Cancel payment button@@billpay-payment-details.cancel.button\"\n        color=\"danger\"\n        (click)=\"cancelPayment()\"\n        class=\"bb-stack__item\"\n      >\n        Cancel payment\n      </button>\n    </div>\n  </div>\n\n  <div class=\"card-section\" *ngIf=\"payment && payee\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-header-ui\n        headingType=\"h2\"\n        heading=\"Full details\"\n        i18n-heading=\"Full details caption@@billpay-payment-details.full-details\"\n      >\n      </bb-header-ui>\n    </div>\n    <bb-billpay-payment-review-card\n      [paymentReview]=\"parseToReview(payment, payee)\"\n      [accountNumberMask]=\"accountNumberMasked\"\n    >\n    </bb-billpay-payment-review-card>\n  </div>\n</div>\n", components: [{ type: i2__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i3__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: BillpayPaymentStatusBadgeComponent, selector: "bb-billpay-payment-status-badge", inputs: ["status"] }, { type: i1__namespace$3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i6__namespace$1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i1__namespace$4.BillpayPaymentReviewCardComponent, selector: "bb-billpay-payment-review-card", inputs: ["paymentReview", "accountNumberMask", "frequencyLabel"] }], directives: [{ type: i7__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i8__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "bbDate": i4__namespace.BbDatePipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payment-details',
                        templateUrl: './billpay-payment-details.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$4.BillpayPaymentParserService }]; }, propDecorators: { payment: [{
                    type: i0.Input
                }], payee: [{
                    type: i0.Input
                }], accountNumberMasked: [{
                    type: i0.Input
                }], paymentCancelling: [{
                    type: i0.Output
                }], paymentEditing: [{
                    type: i0.Output
                }] } });

    var BillpayPaymentsDeleteModalComponent = /** @class */ (function () {
        function BillpayPaymentsDeleteModalComponent() {
            this.resolve = new i0.EventEmitter();
        }
        BillpayPaymentsDeleteModalComponent.prototype.resolveModal = function (resolvedWith) {
            this.resolve.emit(resolvedWith);
        };
        return BillpayPaymentsDeleteModalComponent;
    }());
    BillpayPaymentsDeleteModalComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentsDeleteModalComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPaymentsDeleteModalComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentsDeleteModalComponent, selector: "bb-billpay-payments-delete-modal", outputs: { resolve: "resolve" }, ngImport: i0__namespace, template: "<bb-modal-ui [isOpen]=\"true\" (cancel)=\"resolveModal(false)\" data-role=\"delete-payment-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        data-role=\"delete-payment-modal-header\"\n        headingType=\"h2\"\n        heading=\"Cancel payment?\"\n        i18n-heading=\"Discard changes modal header@@billpay-payments.details.payments-delete-modal.header\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span\n        i18n=\"Discard changes modal body@@billpay-payments.details.payments-delete-modal.body\"\n        data-role=\"delete-payment-modal-body\"\n        >Are you sure you want to cancel this payment? This action can not be undone.</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"d-flex flex-wrap flex-row-reverse w-100\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"col-sm-auto col-xs-12\"\n          i18n=\"Cancel payment confirmation button@@billpay-payments.details.payments-delete-modal.confirm-button\"\n          (click)=\"resolveModal(true)\"\n          data-role=\"confirm-cancelling-button\"\n        >\n          Cancel payment\n        </button>\n        <button\n          bbButton\n          color=\"secondary\"\n          class=\"mt-2 mt-sm-0 mr-sm-3 col-sm-auto col-xs-12\"\n          i18n=\"Keep current payment button@@billpay-payments.details.payments-delete-modal.cancel-button\"\n          (click)=\"resolveModal(false)\"\n          data-role=\"keep-payment-button\"\n        >\n          Keep payment\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$5.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$5.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$5.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$5.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$5.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1__namespace$5.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$5.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i8__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPaymentsDeleteModalComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payments-delete-modal',
                        templateUrl: './billpay-payments-delete-modal.component.html',
                    }]
            }], propDecorators: { resolve: [{
                    type: i0.Output
                }] } });

    var BillPayPaymentDetailsViewComponent = /** @class */ (function () {
        function BillPayPaymentDetailsViewComponent(config, dataService, route, routerService, notificationService) {
            var _this = this;
            this.config = config;
            this.dataService = dataService;
            this.route = route;
            this.routerService = routerService;
            this.notificationService = notificationService;
            this.notificationHeaderTemplate = '';
            this.notificationMessageTemplate = '';
            this.hasLoadingError = false;
            this.isDeleteModalOpened = false;
            this.id$ = this.route.paramMap.pipe(operators.map(function (params) { return params.get('id') || ''; }));
            this.paymentType$ = this.route.queryParamMap.pipe(operators.map(function (params) { return params.get('type') || i1.ONE_OFF_PAYMENT; }));
            this.destroy$ = new rxjs.Subject();
            this.payment$ = rxjs.combineLatest([this.id$, this.paymentType$]).pipe(operators.takeUntil(this.destroy$), operators.switchMap(function (_a) {
                var _b = __read(_a, 2), id = _b[0], paymentType = _b[1];
                return _this.dataService.getPayment(id, paymentType);
            }), operators.map(function (_a) {
                var payment = _a.payment;
                return payment;
            }), operators.shareReplay(1), operators.catchError(function () {
                _this.hasLoadingError = true;
                return rxjs.of(undefined);
            }));
            this.payee$ = this.payment$.pipe(operators.switchMap(function (payment) { return payment && !payment.payeeElectronic && payment.payeeID
                ? _this.dataService.getPayee(payment.payeeID)
                : rxjs.throwError("Payee can't be retrieved"); }), operators.map(function (_a) {
                var payee = _a.payee;
                return payee;
            }), operators.catchError(function () {
                return rxjs.of({});
            }));
        }
        BillPayPaymentDetailsViewComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        BillPayPaymentDetailsViewComponent.prototype.onPaymentDeleteFlowStarted = function () {
            this.isDeleteModalOpened = true;
        };
        BillPayPaymentDetailsViewComponent.prototype.onEditPayment = function (payment) {
            if (payment.recurring) {
                this.routerService.navigateToEditRecurringPayment(payment.id);
            }
            else {
                this.routerService.navigateToEditOneOffPayment(payment.id);
            }
        };
        BillPayPaymentDetailsViewComponent.prototype.onModalResolve = function (resolvedWith) {
            var _this = this;
            var deletePayment$ = this.deletePayment().pipe(operators.tap(function () {
                _this.routerService.navigateToPaymentsList(_this.config.pageFilter);
                _this.notificationService.showNotification({
                    header: _this.notificationHeaderTemplate,
                    message: _this.notificationMessageTemplate,
                    modifier: 'success',
                    ttl: _this.dismissTimeout,
                });
            }));
            (resolvedWith ? deletePayment$ : rxjs.of()).subscribe({
                complete: function () { return (_this.isDeleteModalOpened = false); },
            });
        };
        BillPayPaymentDetailsViewComponent.prototype.deletePayment = function () {
            var _this = this;
            return rxjs.combineLatest([this.id$, this.paymentType$]).pipe(operators.takeUntil(this.destroy$), operators.switchMap(function (_a) {
                var _b = __read(_a, 2), id = _b[0], paymentType = _b[1];
                return _this.dataService.deletePayment(id, paymentType);
            }));
        };
        Object.defineProperty(BillPayPaymentDetailsViewComponent.prototype, "dismissTimeout", {
            get: function () {
                if (this.config.notificationDismissTime === undefined) {
                    throw new Error('Dismiss timeout value not found');
                }
                return this.config.notificationDismissTime;
            },
            enumerable: false,
            configurable: true
        });
        return BillPayPaymentDetailsViewComponent;
    }());
    BillPayPaymentDetailsViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillPayPaymentDetailsViewComponent, deps: [{ token: ManageBillPaymentsJourneyConfigService }, { token: ManageBillPaymentsDataService }, { token: i1__namespace.ActivatedRoute }, { token: ManageBillPaymentsNavigationService }, { token: i5__namespace$1.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillPayPaymentDetailsViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillPayPaymentDetailsViewComponent, selector: "bb-billpay-payment-details-view", viewQueries: [{ propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }, { propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }], ngImport: i0__namespace, template: "<div>\n  <div class=\"bb-block bb-block--lg\">\n    <bb-header-ui\n      headingType=\"h1\"\n      [heading]=\"config.pageTitle\"\n      i18n-heading=\"@@billpay-payments-journey.payment-details-view.title\"\n    ></bb-header-ui>\n  </div>\n  <ng-container *ngIf=\"!hasLoadingError; else errorState\">\n    <ng-container *ngIf=\"{ payment: payment$ | async, payee: payee$ | async } as data; else loadingState\">\n      <section>\n        <bb-billpay-payment-details\n          *ngIf=\"data.payment && data.payee\"\n          [payment]=\"data?.payment\"\n          [payee]=\"data?.payee\"\n          [accountNumberMasked]=\"config.accountNumberMasked\"\n          (paymentCancelling)=\"onPaymentDeleteFlowStarted()\"\n          (paymentEditing)=\"onEditPayment($event)\"\n        ></bb-billpay-payment-details>\n      </section>\n\n      <ng-template #notificationMessage>\n        <span\n          data-role=\"notification-message\"\n          i18n=\"Payee notification message|Payee has created successfully notification@@billpay-payments.details.notification.message\"\n          >Payment to\n          {{ (data.payment?.payeeNickName && data.payment?.payeeNickName + ' (' + data.payment?.payeeName + ')') || data.payment?.payeeName }} has\n          been canceled successfully</span\n        >\n      </ng-template>\n\n    </ng-container>\n  </ng-container>\n</div>\n\n<bb-billpay-payments-delete-modal\n*ngIf=\"isDeleteModalOpened\"\n(resolve)=\"onModalResolve($event)\"\n></bb-billpay-payments-delete-modal>\n\n\n<ng-template #notificationHeader>\n  <span\n    class=\"text-dark\"\n    i18n=\"Payee notification header|Payee created success notification header@@billpay-payments.details.notification.header\"\n  >Payment canceled</span\n></ng-template>\n\n<ng-template #errorState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconModifier=\"error-outline\"\n          title=\"Payment is not loading\"\n          i18n-title=\"Payment list is not loading title@@billpay-payments.details.error-state.title\"\n          subtitle=\"Try to reload the page or contact support\"\n          i18n-subtitle=\"Payment is not loading subtitle@@billpay-payments.details.error-state.subtitle\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #loadingState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i2__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: BillpayPaymentDetailsComponent, selector: "bb-billpay-payment-details", inputs: ["payment", "payee", "accountNumberMasked"], outputs: ["paymentCancelling", "paymentEditing"] }, { type: BillpayPaymentsDeleteModalComponent, selector: "bb-billpay-payments-delete-modal", outputs: ["resolve"] }, { type: i6__namespace.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i5__namespace.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i7__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i7__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillPayPaymentDetailsViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payment-details-view',
                        templateUrl: './billpay-payment-details-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ManageBillPaymentsJourneyConfigService }, { type: ManageBillPaymentsDataService }, { type: i1__namespace.ActivatedRoute }, { type: ManageBillPaymentsNavigationService }, { type: i5__namespace$1.NotificationService }]; }, propDecorators: { notificationHeaderTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationHeader']
                }], notificationMessageTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationMessage']
                }] } });

    var BillPayEnrolmentViewComponent = /** @class */ (function () {
        function BillPayEnrolmentViewComponent(config) {
            this.config = config;
        }
        return BillPayEnrolmentViewComponent;
    }());
    BillPayEnrolmentViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillPayEnrolmentViewComponent, deps: [{ token: ManageBillPaymentsJourneyConfigService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillPayEnrolmentViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillPayEnrolmentViewComponent, selector: "bb-billpay-enrolment-view", ngImport: i0__namespace, template: "\n    <div>\n      <div class=\"bb-block bb-block--lg\">\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Pending Payments\"\n          i18n-heading=\"@@billpay-payments-journey.payments-list-view\"\n        ></bb-header-ui>\n      </div>\n      <bb-billpay-enrolment [notificationDismissTime]=\"config?.notificationDismissTime\"></bb-billpay-enrolment>\n    </div>\n  ", isInline: true, components: [{ type: i2__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$4.BillpayEnrolmentComponent, selector: "bb-billpay-enrolment", inputs: ["notificationDismissTime"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillPayEnrolmentViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-enrolment-view',
                        template: "\n    <div>\n      <div class=\"bb-block bb-block--lg\">\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Pending Payments\"\n          i18n-heading=\"@@billpay-payments-journey.payments-list-view\"\n        ></bb-header-ui>\n      </div>\n      <bb-billpay-enrolment [notificationDismissTime]=\"config?.notificationDismissTime\"></bb-billpay-enrolment>\n    </div>\n  ",
                    }]
            }], ctorParameters: function () { return [{ type: ManageBillPaymentsJourneyConfigService }]; } });

    var ManageBillPaymentsJourneyComponent = /** @class */ (function () {
        function ManageBillPaymentsJourneyComponent() {
        }
        return ManageBillPaymentsJourneyComponent;
    }());
    ManageBillPaymentsJourneyComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsJourneyComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManageBillPaymentsJourneyComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManageBillPaymentsJourneyComponent, selector: "bb-manage-bill-payments-journey", providers: [
            ManageBillPaymentsJourneyConfigService,
            ManageBillPaymentsDataService,
            ManageBillPaymentsNavigationService,
        ], ngImport: i0__namespace, template: "<router-outlet></router-outlet>", isInline: true, directives: [{ type: i1__namespace.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsJourneyComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-manage-bill-payments-journey',
                        template: "<router-outlet></router-outlet>",
                        providers: [
                            ManageBillPaymentsJourneyConfigService,
                            ManageBillPaymentsDataService,
                            ManageBillPaymentsNavigationService,
                        ],
                    }]
            }] });

    var uiModules = [i1$4.IconModule, i6$1.AlertModule, i1$3.BadgeModule, i4.BbDatePipeModule];
    var services = [ManageBillPaymentsNavigationService, ManageBillPaymentsDataService];
    var components = [
        ManageBillPaymentsJourneyComponent,
        BillPayPaymentsListViewComponent,
        BillPayPaymentDetailsViewComponent,
        BillPayEnrolmentViewComponent,
        BillpayPaymentDetailsComponent,
        BillpayPaymentStatusBadgeComponent,
        BillpayPaymentsDeleteModalComponent,
        BillpayPaymentsGroupComponent,
        BillpayPaymentCardComponent,
    ];
    var defaultRoute = {
        path: '',
        component: ManageBillPaymentsJourneyComponent,
        children: [
            { path: 'enrolment', component: BillPayEnrolmentViewComponent },
            {
                path: '',
                canActivate: [i1.BillpayEnrolmentGuard],
                children: [
                    { path: '', component: BillPayPaymentsListViewComponent, pathMatch: 'full' },
                    { path: ':id', component: BillPayPaymentDetailsViewComponent },
                ],
            },
        ],
    };
    var ManageBillPaymentsJourneyModule = /** @class */ (function () {
        function ManageBillPaymentsJourneyModule() {
        }
        ManageBillPaymentsJourneyModule.forRoot = function (data) {
            if (data === void 0) { data = { route: defaultRoute }; }
            return {
                ngModule: ManageBillPaymentsJourneyModule,
                providers: [i1$1.provideRoutes([data.route])],
            };
        };
        return ManageBillPaymentsJourneyModule;
    }());
    ManageBillPaymentsJourneyModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsJourneyModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ManageBillPaymentsJourneyModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsJourneyModule, declarations: [ManageBillPaymentsJourneyComponent,
            BillPayPaymentsListViewComponent,
            BillPayPaymentDetailsViewComponent,
            BillPayEnrolmentViewComponent,
            BillpayPaymentDetailsComponent,
            BillpayPaymentStatusBadgeComponent,
            BillpayPaymentsDeleteModalComponent,
            BillpayPaymentsGroupComponent,
            BillpayPaymentCardComponent], imports: [i7.CommonModule,
            i1$1.RouterModule,
            i1.BillpayJourneysCommonModule, i1__namespace$6.BackbaseCoreModule, i1$4.IconModule, i6$1.AlertModule, i1$3.BadgeModule, i4.BbDatePipeModule] });
    ManageBillPaymentsJourneyModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsJourneyModule, providers: __spreadArray([], __read(services)), imports: [__spreadArray([
                i7.CommonModule,
                i1$1.RouterModule,
                i1.BillpayJourneysCommonModule,
                i1$6.BackbaseCoreModule.withConfig({
                    classMap: { ManageBillPaymentsJourneyComponent: ManageBillPaymentsJourneyComponent },
                })
            ], __read(uiModules))] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageBillPaymentsJourneyModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: __spreadArray([], __read(components)),
                        imports: __spreadArray([
                            i7.CommonModule,
                            i1$1.RouterModule,
                            i1.BillpayJourneysCommonModule,
                            i1$6.BackbaseCoreModule.withConfig({
                                classMap: { ManageBillPaymentsJourneyComponent: ManageBillPaymentsJourneyComponent },
                            })
                        ], __read(uiModules)),
                        providers: __spreadArray([], __read(services)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BillPayEnrolmentViewComponent = BillPayEnrolmentViewComponent;
    exports.BillPayPaymentDetailsViewComponent = BillPayPaymentDetailsViewComponent;
    exports.BillPayPaymentsListViewComponent = BillPayPaymentsListViewComponent;
    exports.ManageBillPaymentsCommunicationService = CommunicationService;
    exports.ManageBillPaymentsDataService = ManageBillPaymentsDataService;
    exports.ManageBillPaymentsJourneyComponent = ManageBillPaymentsJourneyComponent;
    exports.ManageBillPaymentsJourneyConfigService = ManageBillPaymentsJourneyConfigService;
    exports.ManageBillPaymentsJourneyConfigurationToken = ManageBillPaymentsJourneyConfigurationToken;
    exports.ManageBillPaymentsJourneyModule = ManageBillPaymentsJourneyModule;
    exports.ManageBillPaymentsNavigationService = ManageBillPaymentsNavigationService;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-manage-bill-payments-journey-ang.umd.js.map
