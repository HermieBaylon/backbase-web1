import { Injectable, Optional, Inject, InjectionToken } from '@angular/core';
import '@angular/localize/init';
import * as i0 from "@angular/core";
export const ManageBillPaymentsJourneyConfigurationToken = new InjectionToken('ManageBillPaymentsJourneyJourneyConfiguration injection token');
export var PaymentsFilterStatus;
(function (PaymentsFilterStatus) {
    PaymentsFilterStatus["PENDING"] = "PENDING";
    PaymentsFilterStatus["HISTORICAL"] = "HISTORICAL";
    PaymentsFilterStatus["ALL"] = "ALL";
})(PaymentsFilterStatus || (PaymentsFilterStatus = {}));
const configDefaults = {
    notificationDismissTime: 5000,
    pageSize: 0,
    pageFilter: PaymentsFilterStatus.PENDING,
    accountNumberMasked: false,
    pageTitle: $localize `:@@manage-bill-payments.page-title:Pending payments`,
};
export class ManageBillPaymentsJourneyConfigService {
    constructor(config) {
        config = config || {};
        this._config = Object.assign(Object.assign({}, configDefaults), config);
    }
    get defaults() {
        return configDefaults;
    }
    get notificationDismissTime() {
        return this._config.notificationDismissTime;
    }
    get pageSize() {
        return this._config.pageSize;
    }
    get pageFilter() {
        return this._config.pageFilter;
    }
    get accountNumberMasked() {
        return this._config.accountNumberMasked;
    }
    get pageTitle() {
        return this._config.pageTitle;
    }
}
ManageBillPaymentsJourneyConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ManageBillPaymentsJourneyConfigService, deps: [{ token: ManageBillPaymentsJourneyConfigurationToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
ManageBillPaymentsJourneyConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ManageBillPaymentsJourneyConfigService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ManageBillPaymentsJourneyConfigService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [ManageBillPaymentsJourneyConfigurationToken]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLWJpbGwtcGF5bWVudHMtam91cm5leS1jb25maWcuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLWJpbGwtcGF5bWVudHMtam91cm5leS9zcmMvc2VydmljZXMvbWFuYWdlLWJpbGwtcGF5bWVudHMtam91cm5leS1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sd0JBQXdCLENBQUM7O0FBRWhDLE1BQU0sQ0FBQyxNQUFNLDJDQUEyQyxHQUFHLElBQUksY0FBYyxDQUMzRSwrREFBK0QsQ0FDaEUsQ0FBQztBQVVGLE1BQU0sQ0FBTixJQUFZLG9CQUlYO0FBSkQsV0FBWSxvQkFBb0I7SUFDOUIsMkNBQW1CLENBQUE7SUFDbkIsaURBQXlCLENBQUE7SUFDekIsbUNBQVcsQ0FBQTtBQUNiLENBQUMsRUFKVyxvQkFBb0IsS0FBcEIsb0JBQW9CLFFBSS9CO0FBRUQsTUFBTSxjQUFjLEdBQTJDO0lBQzdELHVCQUF1QixFQUFFLElBQUk7SUFDN0IsUUFBUSxFQUFFLENBQUM7SUFDWCxVQUFVLEVBQUUsb0JBQW9CLENBQUMsT0FBTztJQUN4QyxtQkFBbUIsRUFBRSxLQUFLO0lBQzFCLFNBQVMsRUFBRSxTQUFTLENBQUEscURBQXFEO0NBQzFFLENBQUM7QUFHRixNQUFNLE9BQU8sc0NBQXNDO0lBR2pELFlBQ21FLE1BQThDO1FBRS9HLE1BQU0sR0FBRyxNQUFNLElBQUksRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxPQUFPLG1DQUFRLGNBQWMsR0FBSyxNQUFNLENBQUUsQ0FBQztJQUNsRCxDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQUksdUJBQXVCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQztJQUM5QyxDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUMvQixDQUFDO0lBRUQsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQztJQUNqQyxDQUFDO0lBRUQsSUFBSSxtQkFBbUI7UUFDckIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDO0lBQzFDLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO0lBQ2hDLENBQUM7O29JQWhDVSxzQ0FBc0Msa0JBSTNCLDJDQUEyQzt3SUFKdEQsc0NBQXNDOzRGQUF0QyxzQ0FBc0M7a0JBRGxELFVBQVU7OzBCQUtOLFFBQVE7OzBCQUFJLE1BQU07MkJBQUMsMkNBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgT3B0aW9uYWwsIEluamVjdCwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAnQGFuZ3VsYXIvbG9jYWxpemUvaW5pdCc7XG5cbmV4cG9ydCBjb25zdCBNYW5hZ2VCaWxsUGF5bWVudHNKb3VybmV5Q29uZmlndXJhdGlvblRva2VuID0gbmV3IEluamVjdGlvblRva2VuPE1hbmFnZUJpbGxQYXltZW50c0pvdXJuZXlDb25maWd1cmF0aW9uPihcbiAgJ01hbmFnZUJpbGxQYXltZW50c0pvdXJuZXlKb3VybmV5Q29uZmlndXJhdGlvbiBpbmplY3Rpb24gdG9rZW4nLFxuKTtcblxuZXhwb3J0IGludGVyZmFjZSBNYW5hZ2VCaWxsUGF5bWVudHNKb3VybmV5Q29uZmlndXJhdGlvbiB7XG4gIG5vdGlmaWNhdGlvbkRpc21pc3NUaW1lOiBudW1iZXI7XG4gIHBhZ2VTaXplOiBudW1iZXI7XG4gIHBhZ2VGaWx0ZXI6IFBheW1lbnRzRmlsdGVyU3RhdHVzO1xuICBhY2NvdW50TnVtYmVyTWFza2VkOiBib29sZWFuO1xuICBwYWdlVGl0bGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGVudW0gUGF5bWVudHNGaWx0ZXJTdGF0dXMge1xuICBQRU5ESU5HID0gJ1BFTkRJTkcnLFxuICBISVNUT1JJQ0FMID0gJ0hJU1RPUklDQUwnLFxuICBBTEwgPSAnQUxMJyxcbn1cblxuY29uc3QgY29uZmlnRGVmYXVsdHM6IE1hbmFnZUJpbGxQYXltZW50c0pvdXJuZXlDb25maWd1cmF0aW9uID0ge1xuICBub3RpZmljYXRpb25EaXNtaXNzVGltZTogNTAwMCxcbiAgcGFnZVNpemU6IDAsXG4gIHBhZ2VGaWx0ZXI6IFBheW1lbnRzRmlsdGVyU3RhdHVzLlBFTkRJTkcsXG4gIGFjY291bnROdW1iZXJNYXNrZWQ6IGZhbHNlLFxuICBwYWdlVGl0bGU6ICRsb2NhbGl6ZWA6QEBtYW5hZ2UtYmlsbC1wYXltZW50cy5wYWdlLXRpdGxlOlBlbmRpbmcgcGF5bWVudHNgLFxufTtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE1hbmFnZUJpbGxQYXltZW50c0pvdXJuZXlDb25maWdTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBfY29uZmlnOiBNYW5hZ2VCaWxsUGF5bWVudHNKb3VybmV5Q29uZmlndXJhdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBAT3B0aW9uYWwoKSBASW5qZWN0KE1hbmFnZUJpbGxQYXltZW50c0pvdXJuZXlDb25maWd1cmF0aW9uVG9rZW4pIGNvbmZpZzogTWFuYWdlQmlsbFBheW1lbnRzSm91cm5leUNvbmZpZ3VyYXRpb24sXG4gICkge1xuICAgIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICB0aGlzLl9jb25maWcgPSB7IC4uLmNvbmZpZ0RlZmF1bHRzLCAuLi5jb25maWcgfTtcbiAgfVxuXG4gIGdldCBkZWZhdWx0cygpOiBNYW5hZ2VCaWxsUGF5bWVudHNKb3VybmV5Q29uZmlndXJhdGlvbiB7XG4gICAgcmV0dXJuIGNvbmZpZ0RlZmF1bHRzO1xuICB9XG5cbiAgZ2V0IG5vdGlmaWNhdGlvbkRpc21pc3NUaW1lKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5ub3RpZmljYXRpb25EaXNtaXNzVGltZTtcbiAgfVxuXG4gIGdldCBwYWdlU2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9jb25maWcucGFnZVNpemU7XG4gIH1cblxuICBnZXQgcGFnZUZpbHRlcigpOiBQYXltZW50c0ZpbHRlclN0YXR1cyB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5wYWdlRmlsdGVyO1xuICB9XG5cbiAgZ2V0IGFjY291bnROdW1iZXJNYXNrZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5hY2NvdW50TnVtYmVyTWFza2VkO1xuICB9XG5cbiAgZ2V0IHBhZ2VUaXRsZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9jb25maWcucGFnZVRpdGxlO1xuICB9XG59XG4iXX0=