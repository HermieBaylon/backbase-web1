import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "../billpay-payment-status-badge/billpay-payment-status-badge.component";
import * as i3 from "@backbase/ui-ang/amount";
import * as i4 from "@angular/common";
export class BillpayPaymentCardComponent {
    constructor() {
        /**
         * Defines whether this is a negative number to be prepended with a `-` character. Defaults to false.
         */
        this.isNegativeAmount = false;
    }
    getFormattedAmount(amount) {
        return `${this.isNegativeAmount ? '-' : ''}${amount}`;
    }
}
BillpayPaymentCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentCardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BillpayPaymentCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentCardComponent, selector: "bb-billpay-payment-card", inputs: { payment: "payment", isNegativeAmount: "isNegativeAmount" }, ngImport: i0, template: "<div class=\"bb-stack\">\n  <div class=\"bb-stack__item bb-stack__item--fill\" *ngIf=\"payment\" data-role=\"payment-item\">\n    <div class=\"bb-stack bb-stack--wrap\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <div data-role=\"payment-item-title\" class=\"bb-text-bold\">\n          {{ payment.payeeNickName || payment.payeeName }}\n        </div>\n        <div class=\"bb-stack bb-stack--align-top\" *ngIf=\"payment.recurring\">\n          <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n            <bb-icon-ui\n              data-role=\"payment-item-recurring-icon\"\n              size=\"sm\"\n              name=\"repeat\"\n              color=\"secondary\"\n            ></bb-icon-ui>\n          </div>\n          <div\n            class=\"bb-stack__item bb-subtitle bb-text-support\"\n            data-role=\"payment-item-recurring-label\"\n            i18n=\"Recurring payments frequency@@billpay-payment-card.recurring.frequency\"\n          >\n            Recurring { payment.frequency, select, WEEKLY {weekly} EVERY_2_WEEKS {every 2 weeks} EVERY_4_WEEKS {every\n            4 weeks} TWICE_A_MONTH {twice a month} MONTHLY {monthly} EVERY_2_MONTHS {every 2 months} EVERY_3_MONTHS\n            {every 3 months} EVERY_4_MONTHS {every 4 months} EVERY_6_MONTHS {every 6 months} ANNUALLY {annually} }\n          </div>\n        </div>\n      </div>\n      <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n      <bb-billpay-payment-status-badge\n        class=\"bb-stack__item bb-text-align-right bb-text-align-left--sm-down\"\n        [status]=\"payment.status\"\n        data-role=\"payment-item-badge\"\n      ></bb-billpay-payment-status-badge>\n    </div>\n  </div>\n\n  <div class=\"col-4 col-md-3 col-lg-2 bb-stack__item bb-text-align-right\" data-role=\"payment-item-amount\">\n    <bb-amount-ui\n      class=\"bb-text-bold\"\n      data-role=\"amount\"\n      [amount]=\"payment && getFormattedAmount(payment.amount.amount)\"\n    >\n    </bb-amount-ui>\n  </div>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2.BillpayPaymentStatusBadgeComponent, selector: "bb-billpay-payment-status-badge", inputs: ["status"] }, { type: i3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentCardComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-payment-card',
                    templateUrl: './billpay-payment-card.component.html',
                }]
        }], propDecorators: { payment: [{
                type: Input
            }], isNegativeAmount: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbHBheS1wYXltZW50LWNhcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9tYW5hZ2UtYmlsbC1wYXltZW50cy1qb3VybmV5L3NyYy9jb21wb25lbnRzL2JpbGxwYXktcGF5bWVudC1jYXJkL2JpbGxwYXktcGF5bWVudC1jYXJkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLWJpbGwtcGF5bWVudHMtam91cm5leS9zcmMvY29tcG9uZW50cy9iaWxscGF5LXBheW1lbnQtY2FyZC9iaWxscGF5LXBheW1lbnQtY2FyZC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBT2pELE1BQU0sT0FBTywyQkFBMkI7SUFKeEM7UUFTRTs7V0FFRztRQUNNLHFCQUFnQixHQUFHLEtBQUssQ0FBQztLQUtuQztJQUhDLGtCQUFrQixDQUFDLE1BQWM7UUFDL0IsT0FBTyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsTUFBTSxFQUFFLENBQUM7SUFDeEQsQ0FBQzs7eUhBWlUsMkJBQTJCOzZHQUEzQiwyQkFBMkIscUlDUHhDLHkvREE2Q0E7NEZEdENhLDJCQUEyQjtrQkFKdkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxXQUFXLEVBQUUsdUNBQXVDO2lCQUNyRDs4QkFLVSxPQUFPO3NCQUFmLEtBQUs7Z0JBSUcsZ0JBQWdCO3NCQUF4QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGF5bWVudCB9IGZyb20gJ0BiYWNrYmFzZS9kYXRhLWFuZy9iaWxscGF5JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItYmlsbHBheS1wYXltZW50LWNhcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vYmlsbHBheS1wYXltZW50LWNhcmQuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBCaWxscGF5UGF5bWVudENhcmRDb21wb25lbnQge1xuICAvKipcbiAgICogRGV0YWlscyBvZiB0aGUgcGF5bWVudC5cbiAgICovXG4gIEBJbnB1dCgpIHBheW1lbnQ/OiBQYXltZW50O1xuICAvKipcbiAgICogRGVmaW5lcyB3aGV0aGVyIHRoaXMgaXMgYSBuZWdhdGl2ZSBudW1iZXIgdG8gYmUgcHJlcGVuZGVkIHdpdGggYSBgLWAgY2hhcmFjdGVyLiBEZWZhdWx0cyB0byBmYWxzZS5cbiAgICovXG4gIEBJbnB1dCgpIGlzTmVnYXRpdmVBbW91bnQgPSBmYWxzZTtcblxuICBnZXRGb3JtYXR0ZWRBbW91bnQoYW1vdW50OiBzdHJpbmcpIHtcbiAgICByZXR1cm4gYCR7dGhpcy5pc05lZ2F0aXZlQW1vdW50ID8gJy0nIDogJyd9JHthbW91bnR9YDtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImJiLXN0YWNrXCI+XG4gIDxkaXYgY2xhc3M9XCJiYi1zdGFja19faXRlbSBiYi1zdGFja19faXRlbS0tZmlsbFwiICpuZ0lmPVwicGF5bWVudFwiIGRhdGEtcm9sZT1cInBheW1lbnQtaXRlbVwiPlxuICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFjayBiYi1zdGFjay0td3JhcFwiPlxuICAgICAgPGRpdiBjbGFzcz1cImJiLXN0YWNrX19pdGVtIGJiLXN0YWNrX19pdGVtLS1maWxsXCI+XG4gICAgICAgIDxkaXYgZGF0YS1yb2xlPVwicGF5bWVudC1pdGVtLXRpdGxlXCIgY2xhc3M9XCJiYi10ZXh0LWJvbGRcIj5cbiAgICAgICAgICB7eyBwYXltZW50LnBheWVlTmlja05hbWUgfHwgcGF5bWVudC5wYXllZU5hbWUgfX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFjayBiYi1zdGFjay0tYWxpZ24tdG9wXCIgKm5nSWY9XCJwYXltZW50LnJlY3VycmluZ1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFja19faXRlbSBiYi1zdGFja19faXRlbS0tc3BhY2luZy1zbVwiPlxuICAgICAgICAgICAgPGJiLWljb24tdWlcbiAgICAgICAgICAgICAgZGF0YS1yb2xlPVwicGF5bWVudC1pdGVtLXJlY3VycmluZy1pY29uXCJcbiAgICAgICAgICAgICAgc2l6ZT1cInNtXCJcbiAgICAgICAgICAgICAgbmFtZT1cInJlcGVhdFwiXG4gICAgICAgICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgICAgICAgID48L2JiLWljb24tdWk+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJiYi1zdGFja19faXRlbSBiYi1zdWJ0aXRsZSBiYi10ZXh0LXN1cHBvcnRcIlxuICAgICAgICAgICAgZGF0YS1yb2xlPVwicGF5bWVudC1pdGVtLXJlY3VycmluZy1sYWJlbFwiXG4gICAgICAgICAgICBpMThuPVwiUmVjdXJyaW5nIHBheW1lbnRzIGZyZXF1ZW5jeUBAYmlsbHBheS1wYXltZW50LWNhcmQucmVjdXJyaW5nLmZyZXF1ZW5jeVwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgUmVjdXJyaW5nIHsgcGF5bWVudC5mcmVxdWVuY3ksIHNlbGVjdCwgV0VFS0xZIHt3ZWVrbHl9IEVWRVJZXzJfV0VFS1Mge2V2ZXJ5IDIgd2Vla3N9IEVWRVJZXzRfV0VFS1Mge2V2ZXJ5XG4gICAgICAgICAgICA0IHdlZWtzfSBUV0lDRV9BX01PTlRIIHt0d2ljZSBhIG1vbnRofSBNT05USExZIHttb250aGx5fSBFVkVSWV8yX01PTlRIUyB7ZXZlcnkgMiBtb250aHN9IEVWRVJZXzNfTU9OVEhTXG4gICAgICAgICAgICB7ZXZlcnkgMyBtb250aHN9IEVWRVJZXzRfTU9OVEhTIHtldmVyeSA0IG1vbnRoc30gRVZFUllfNl9NT05USFMge2V2ZXJ5IDYgbW9udGhzfSBBTk5VQUxMWSB7YW5udWFsbHl9IH1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFja19fYnJlYWsgYmItc3RhY2tfX2JyZWFrLS1zbS1kb3duXCI+PC9kaXY+XG4gICAgICA8YmItYmlsbHBheS1wYXltZW50LXN0YXR1cy1iYWRnZVxuICAgICAgICBjbGFzcz1cImJiLXN0YWNrX19pdGVtIGJiLXRleHQtYWxpZ24tcmlnaHQgYmItdGV4dC1hbGlnbi1sZWZ0LS1zbS1kb3duXCJcbiAgICAgICAgW3N0YXR1c109XCJwYXltZW50LnN0YXR1c1wiXG4gICAgICAgIGRhdGEtcm9sZT1cInBheW1lbnQtaXRlbS1iYWRnZVwiXG4gICAgICA+PC9iYi1iaWxscGF5LXBheW1lbnQtc3RhdHVzLWJhZGdlPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cblxuICA8ZGl2IGNsYXNzPVwiY29sLTQgY29sLW1kLTMgY29sLWxnLTIgYmItc3RhY2tfX2l0ZW0gYmItdGV4dC1hbGlnbi1yaWdodFwiIGRhdGEtcm9sZT1cInBheW1lbnQtaXRlbS1hbW91bnRcIj5cbiAgICA8YmItYW1vdW50LXVpXG4gICAgICBjbGFzcz1cImJiLXRleHQtYm9sZFwiXG4gICAgICBkYXRhLXJvbGU9XCJhbW91bnRcIlxuICAgICAgW2Ftb3VudF09XCJwYXltZW50ICYmIGdldEZvcm1hdHRlZEFtb3VudChwYXltZW50LmFtb3VudC5hbW91bnQpXCJcbiAgICA+XG4gICAgPC9iYi1hbW91bnQtdWk+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=