import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { PaymentStatus } from '../../model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/billpay-journeys-common";
import * as i2 from "@backbase/ui-ang/header";
import * as i3 from "@backbase/ui-ang/amount";
import * as i4 from "../billpay-payment-status-badge/billpay-payment-status-badge.component";
import * as i5 from "@backbase/ui-ang/icon";
import * as i6 from "@backbase/ui-ang/alert";
import * as i7 from "@angular/common";
import * as i8 from "@backbase/ui-ang/button";
import * as i9 from "@backbase/ui-ang/date-pipe";
export class BillpayPaymentDetailsComponent {
    /** @internal */
    constructor(paymentParserService) {
        this.paymentParserService = paymentParserService;
        /**
         * Whether the account number should be masked. Defaults to true.
         */
        this.accountNumberMasked = true;
        this.paymentCancelling = new EventEmitter();
        this.paymentEditing = new EventEmitter();
        this.paymentStatus = PaymentStatus;
    }
    parseToReview(payment, payee) {
        return this.paymentParserService.paymentAndPayeeResponsesToReview(payment, payee);
    }
    cancelPayment() {
        this.paymentCancelling.emit();
    }
    editPayment(payment) {
        this.paymentEditing.next({
            id: payment.id,
            recurring: payment.recurring,
        });
    }
}
BillpayPaymentDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentDetailsComponent, deps: [{ token: i1.BillpayPaymentParserService }], target: i0.ɵɵFactoryTarget.Component });
BillpayPaymentDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentDetailsComponent, selector: "bb-billpay-payment-details", inputs: { payment: "payment", payee: "payee", accountNumberMasked: "accountNumberMasked" }, outputs: { paymentCancelling: "paymentCancelling", paymentEditing: "paymentEditing" }, ngImport: i0, template: "<div class=\"card card-lg\">\n  <div class=\"card-section\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-header-ui\n        data-role=\"payee-name\"\n        headingType=\"h2\"\n        heading=\"{{\n          (payment?.payeeNickName && payment?.payeeNickName + ' (' + payment?.payeeName + ')') || payment?.payeeName\n        }}\"\n      >\n      </bb-header-ui>\n    </div>\n    <div class=\"bb-block bb-block--xl\">\n      <div class=\"bb-stack\">\n        <bb-amount-ui\n          class=\"bb-stack__item bb-text-bold\"\n          data-role=\"payment-amount\"\n          [amount]=\"-payment?.amount?.amount\"\n        >\n        </bb-amount-ui>\n        <div class=\"bb-stack__item\">\n          <bb-billpay-payment-status-badge\n            [status]=\"payment?.status\"\n            data-role=\"payment-status\"\n          ></bb-billpay-payment-status-badge>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"bb-block {{\n        payment?.recurring || payment?.paymentAccount?.accountNickName ? 'bb-block--sm' : 'bb-block--lg'\n      }}\"\n    >\n      <div class=\"bb-stack\">\n        <bb-icon-ui\n          class=\"bb-stack__item bb-stack__item--spacing-sm\"\n          name=\"calendar-today\"\n          color=\"muted\"\n        ></bb-icon-ui>\n        <span class=\"bb-stack__item\" data-role=\"payment-date\">{{ payment?.paymentDate | bbDate: 'fullDate' }}</span>\n      </div>\n    </div>\n    <div\n      class=\"bb-block {{ payment?.recurring ? 'bb-block--sm' : 'bb-block--lg' }}\"\n      *ngIf=\"payment?.paymentAccount?.accountNickName\"\n    >\n      <div class=\"bb-stack\">\n        <bb-icon-ui\n          class=\"bb-stack__item bb-stack__item--spacing-sm\"\n          name=\"savings-accounts\"\n          color=\"muted\"\n        ></bb-icon-ui>\n        <span class=\"bb-stack__item\" data-role=\"payment-account-nickname\">{{\n          payment?.paymentAccount?.accountNickName\n        }}</span>\n      </div>\n    </div>\n\n    <div\n      class=\"{{\n        payment?.status === paymentStatus.INPROCESS || payment?.status === paymentStatus.PENDING\n          ? 'bb-block bb-block--lg'\n          : ''\n      }}\"\n      *ngIf=\"payment && payment?.recurring && payment?.frequency\"\n    >\n      <div class=\"bb-stack\" *ngIf=\"payment?.frequency\">\n        <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-sm\" name=\"repeat\" color=\"muted\"></bb-icon-ui>\n        <span\n          class=\"bb-stack__item\"\n          data-role=\"payment-recurring-label\"\n          i18n=\"recurring monthly label@@billpay-payment-details.recurring-frequency\"\n          >Recurring { payment?.frequency, select, WEEKLY {weekly} EVERY_2_WEEKS {every 2 weeks} EVERY_4_WEEKS {every 4\n          weeks} TWICE_A_MONTH {twice a month} MONTHLY {monthly} EVERY_2_MONTHS {every 2 months} EVERY_3_MONTHS {every\n          3 months} EVERY_4_MONTHS {every 4 months} EVERY_6_MONTHS {every 6 months} ANNUALLY {annually} }\n        </span>\n      </div>\n    </div>\n    <div *ngIf=\"payment?.status === paymentStatus.INPROCESS\">\n      <bb-alert-ui\n        modifier=\"info\"\n        title=\"Payment in progress, it cannot be edited or canceled\"\n        i18n-title=\"alert title|Payment in process alert@@billpay-payment-details.in-progress-alert\"\n        data-role=\"alert-message\"\n      >\n      </bb-alert-ui>\n    </div>\n\n    <div *ngIf=\"payment && payment.status === paymentStatus.PENDING\" data-role=\"payment-buttons\" class=\"bb-stack\">\n      <button\n        bbButton\n        data-role=\"edit-payment-button\"\n        i18n=\"Label for button|Edit payment button@@billpay-payment-details.edit.button\"\n        color=\"secondary\"\n        (click)=\"editPayment(payment)\"\n        class=\"bb-stack__item\"\n      >\n        Edit payment\n      </button>\n      <button\n        bbButton\n        data-role=\"cancel-payment-button\"\n        i18n=\"Label for button|Cancel payment button@@billpay-payment-details.cancel.button\"\n        color=\"danger\"\n        (click)=\"cancelPayment()\"\n        class=\"bb-stack__item\"\n      >\n        Cancel payment\n      </button>\n    </div>\n  </div>\n\n  <div class=\"card-section\" *ngIf=\"payment && payee\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-header-ui\n        headingType=\"h2\"\n        heading=\"Full details\"\n        i18n-heading=\"Full details caption@@billpay-payment-details.full-details\"\n      >\n      </bb-header-ui>\n    </div>\n    <bb-billpay-payment-review-card\n      [paymentReview]=\"parseToReview(payment, payee)\"\n      [accountNumberMask]=\"accountNumberMasked\"\n    >\n    </bb-billpay-payment-review-card>\n  </div>\n</div>\n", components: [{ type: i2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i4.BillpayPaymentStatusBadgeComponent, selector: "bb-billpay-payment-status-badge", inputs: ["status"] }, { type: i5.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i6.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i1.BillpayPaymentReviewCardComponent, selector: "bb-billpay-payment-review-card", inputs: ["paymentReview", "accountNumberMask", "frequencyLabel"] }], directives: [{ type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i8.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "bbDate": i9.BbDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-payment-details',
                    templateUrl: './billpay-payment-details.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.BillpayPaymentParserService }]; }, propDecorators: { payment: [{
                type: Input
            }], payee: [{
                type: Input
            }], accountNumberMasked: [{
                type: Input
            }], paymentCancelling: [{
                type: Output
            }], paymentEditing: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,