import { EventEmitter } from '@angular/core';
import { Payment, Payee } from '@backbase/data-ang/billpay';
import { BillpayPaymentParserService, PaymentReview } from '@backbase/billpay-journeys-common';
import { PaymentStatus, PaymentEditEvent } from '../../model';
import * as i0 from "@angular/core";
export declare class BillpayPaymentDetailsComponent {
    private readonly paymentParserService;
    /**
     * Details of the payment.
     */
    payment?: Payment;
    /**
     * Details of the payee that is the subject of the payment.
     */
    payee?: Payee;
    /**
     * Whether the account number should be masked. Defaults to true.
     */
    accountNumberMasked: boolean;
    paymentCancelling: EventEmitter<void>;
    paymentEditing: EventEmitter<PaymentEditEvent>;
    readonly paymentStatus: typeof PaymentStatus;
    /** @internal */
    constructor(paymentParserService: BillpayPaymentParserService);
    parseToReview(payment: Payment, payee: Payee): PaymentReview;
    cancelPayment(): void;
    editPayment(payment: Payment): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillpayPaymentDetailsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BillpayPaymentDetailsComponent, "bb-billpay-payment-details", never, { "payment": "payment"; "payee": "payee"; "accountNumberMasked": "accountNumberMasked"; }, { "paymentCancelling": "paymentCancelling"; "paymentEditing": "paymentEditing"; }, never, never>;
}
