import { createMocks } from '@backbase/foundation-ang/data-http';
export const PaymentTemplatesHttpServiceDeletePaymentTemplateIdByPaymentTemplateIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/payment-templates/{paymentTemplateId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const PaymentTemplatesHttpServiceGetPaymentTemplatesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/payment-templates",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Textile supplier invoice",
                        "createdAt": "2020-04-12T14:33:13.452Z",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "details": {
                            "paymentType": "SEPA_CREDIT_TRANSFER",
                            "originatorAccount": {
                                "arrangementId": "729190df-a421-4937-94fd-5e1a3da132cc",
                                "externalArrangementId": "729190421493794513132",
                                "identification": {
                                    "identification": "NL53RABO0309349755",
                                    "schemeName": "IBAN"
                                },
                                "name": "Smith Bonus Savings"
                            },
                            "instructionPriority": "NORM",
                            "transferTransactionInformation": {
                                "counterparty": {
                                    "name": "Backbase",
                                    "postalAddress": {
                                        "addressLine1": "Jacob Bontiusplaats 9, 1018LL, Amsterdam",
                                        "country": "NL"
                                    }
                                },
                                "counterpartyAccount": {
                                    "identification": {
                                        "identification": "FR708933019952AUNHQNQ0KZ",
                                        "schemeName": "IBAN"
                                    },
                                    "arrangementId": "fe9d66ae-b927-4ac7-8799-c5a38a596ff2",
                                    "externalArrangementId": "9669274787995385962"
                                },
                                "instructedAmount": {
                                    "amount": "5000.55",
                                    "currencyCode": "EUR"
                                },
                                "remittanceInformation": "Salary"
                            }
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const PaymentTemplatesHttpServicePostPaymentTemplatesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/payment-templates",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "template": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Salary for John",
                        "createdAt": "2020-04-12T14:33:13.452Z",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "details": {
                            "paymentType": "SEPA_CREDIT_TRANSFER",
                            "originatorAccount": {
                                "arrangementId": "729190df-a421-4937-94fd-5e1a3da132cc",
                                "externalArrangementId": "729190421493794513132",
                                "identification": {
                                    "identification": "NL53RABO0309349755",
                                    "schemeName": "IBAN"
                                }
                            },
                            "instructionPriority": "NORM",
                            "transferTransactionInformation": {
                                "counterparty": {
                                    "name": "John Smith",
                                    "postalAddress": {
                                        "addressLine1": "Schippersstraat 15, 1011AZ, Amsterdam",
                                        "country": "NL"
                                    }
                                },
                                "counterpartyAccount": {
                                    "identification": {
                                        "identification": "FR708933019952AUNHQNQ0KZ",
                                        "schemeName": "IBAN"
                                    },
                                    "arrangementId": "fe9d66ae-b927-4ac7-8799-c5a38a596ff2",
                                    "externalArrangementId": "9669274787995385962"
                                },
                                "instructedAmount": {
                                    "amount": "5000.55",
                                    "currencyCode": "EUR"
                                },
                                "remittanceInformation": "Salary"
                            }
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const PaymentTemplatesHttpServicePutPaymentTemplateByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/payment-templates/{paymentTemplateId}",
        method: "PUT",
        responses: [
            {
                status: 202,
                body: {
                    "template": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Salary for John",
                        "createdAt": "2020-04-12T14:33:13.452Z",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "details": {
                            "paymentType": "SEPA_CREDIT_TRANSFER",
                            "originatorAccount": {
                                "arrangementId": "729190df-a421-4937-94fd-5e1a3da132cc",
                                "externalArrangementId": "729190421493794513132",
                                "identification": {
                                    "identification": "NL53RABO0309349755",
                                    "schemeName": "IBAN"
                                }
                            },
                            "instructionPriority": "NORM",
                            "transferTransactionInformation": {
                                "counterparty": {
                                    "name": "John Smith",
                                    "postalAddress": {
                                        "addressLine1": "Schippersstraat 15, 1011AZ, Amsterdam",
                                        "country": "NL"
                                    }
                                },
                                "counterpartyAccount": {
                                    "identification": {
                                        "identification": "FR708933019952AUNHQNQ0KZ",
                                        "schemeName": "IBAN"
                                    },
                                    "arrangementId": "fe9d66ae-b927-4ac7-8799-c5a38a596ff2",
                                    "externalArrangementId": "9669274787995385962"
                                },
                                "instructedAmount": {
                                    "amount": "5000.55",
                                    "currencyCode": "EUR"
                                },
                                "remittanceInformation": "Salary"
                            }
                        }
                    }
                }
            },
            {
                status: 202,
                body: {
                    "template": {
                        "createdAt": "2000-01-23T04:56:07.000+00:00",
                        "additions": {
                            "key": "additions"
                        },
                        "serviceAgreementId": "serviceAgreementId",
                        "name": "name",
                        "details": {
                            "transferTransactionInformation": {
                                "correspondentBank": {
                                    "bankBranchCode": "bankBranchCode",
                                    "postalAddress": {
                                        "country": "country",
                                        "streetName": "streetName",
                                        "town": "town",
                                        "countrySubDivision": "countrySubDivision",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "addressLine1": "addressLine1",
                                        "addressLine2": "addressLine2",
                                        "postCode": "postCode"
                                    },
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "name": "name",
                                    "bic": "bic"
                                },
                                "counterpartyBank": {
                                    "bankBranchCode": "bankBranchCode",
                                    "postalAddress": {
                                        "country": "country",
                                        "streetName": "streetName",
                                        "town": "town",
                                        "countrySubDivision": "countrySubDivision",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "addressLine1": "addressLine1",
                                        "addressLine2": "addressLine2",
                                        "postCode": "postCode"
                                    },
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "name": "name",
                                    "bic": "bic"
                                },
                                "targetCurrency": "targetCurrency",
                                "additions": {
                                    "key": "additions"
                                },
                                "purposeOfPayment": {
                                    "code": "code",
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "freeText": "freeText",
                                    "description": "description"
                                },
                                "counterpartyAccount": {
                                    "accountType": "accountType",
                                    "selectedContact": {
                                        "accountId": "accountId",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "contactId": "contactId"
                                    }
                                },
                                "intermediaryBank": {
                                    "bankBranchCode": "bankBranchCode",
                                    "postalAddress": {
                                        "country": "country",
                                        "streetName": "streetName",
                                        "town": "town",
                                        "countrySubDivision": "countrySubDivision",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "addressLine1": "addressLine1",
                                        "addressLine2": "addressLine2",
                                        "postCode": "postCode"
                                    },
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "name": "name",
                                    "bic": "bic"
                                },
                                "mandateIdentifier": "mandateIdentifier",
                                "remittanceInformation": "remittanceInformation",
                                "messageToBank": "messageToBank",
                                "counterparty": {
                                    "postalAddress": {
                                        "country": "country",
                                        "streetName": "streetName",
                                        "town": "town",
                                        "countrySubDivision": "countrySubDivision",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "addressLine1": "addressLine1",
                                        "addressLine2": "addressLine2",
                                        "postCode": "postCode"
                                    },
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "name": "name",
                                    "recipientId": "recipientId"
                                },
                                "instructedAmount": {
                                    "amount": "amount",
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "currencyCode": "currencyCode"
                                },
                                "endToEndIdentification": "endToEndIdentification"
                            },
                            "additions": {
                                "key": "additions"
                            },
                            "originatorAccount": {
                                "arrangementId": "arrangementId",
                                "identification": {
                                    "identification": "identification",
                                    "additions": {
                                        "key": "additions"
                                    }
                                },
                                "additions": {
                                    "key": "additions"
                                },
                                "name": "name",
                                "externalArrangementId": "externalArrangementId"
                            },
                            "entryClass": "entryClass",
                            "paymentType": "paymentType"
                        },
                        "id": "id",
                        "actions": [null, null]
                    },
                    "additions": {
                        "key": "additions"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const PaymentTemplatesHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/payment-templates/{paymentTemplateId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/payment-templates",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Textile supplier invoice",
                        "createdAt": "2020-04-12T14:33:13.452Z",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "details": {
                            "paymentType": "SEPA_CREDIT_TRANSFER",
                            "originatorAccount": {
                                "arrangementId": "729190df-a421-4937-94fd-5e1a3da132cc",
                                "externalArrangementId": "729190421493794513132",
                                "identification": {
                                    "identification": "NL53RABO0309349755",
                                    "schemeName": "IBAN"
                                },
                                "name": "Smith Bonus Savings"
                            },
                            "instructionPriority": "NORM",
                            "transferTransactionInformation": {
                                "counterparty": {
                                    "name": "Backbase",
                                    "postalAddress": {
                                        "addressLine1": "Jacob Bontiusplaats 9, 1018LL, Amsterdam",
                                        "country": "NL"
                                    }
                                },
                                "counterpartyAccount": {
                                    "identification": {
                                        "identification": "FR708933019952AUNHQNQ0KZ",
                                        "schemeName": "IBAN"
                                    },
                                    "arrangementId": "fe9d66ae-b927-4ac7-8799-c5a38a596ff2",
                                    "externalArrangementId": "9669274787995385962"
                                },
                                "instructedAmount": {
                                    "amount": "5000.55",
                                    "currencyCode": "EUR"
                                },
                                "remittanceInformation": "Salary"
                            }
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/payment-templates",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "template": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Salary for John",
                        "createdAt": "2020-04-12T14:33:13.452Z",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "details": {
                            "paymentType": "SEPA_CREDIT_TRANSFER",
                            "originatorAccount": {
                                "arrangementId": "729190df-a421-4937-94fd-5e1a3da132cc",
                                "externalArrangementId": "729190421493794513132",
                                "identification": {
                                    "identification": "NL53RABO0309349755",
                                    "schemeName": "IBAN"
                                }
                            },
                            "instructionPriority": "NORM",
                            "transferTransactionInformation": {
                                "counterparty": {
                                    "name": "John Smith",
                                    "postalAddress": {
                                        "addressLine1": "Schippersstraat 15, 1011AZ, Amsterdam",
                                        "country": "NL"
                                    }
                                },
                                "counterpartyAccount": {
                                    "identification": {
                                        "identification": "FR708933019952AUNHQNQ0KZ",
                                        "schemeName": "IBAN"
                                    },
                                    "arrangementId": "fe9d66ae-b927-4ac7-8799-c5a38a596ff2",
                                    "externalArrangementId": "9669274787995385962"
                                },
                                "instructedAmount": {
                                    "amount": "5000.55",
                                    "currencyCode": "EUR"
                                },
                                "remittanceInformation": "Salary"
                            }
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/payment-templates/{paymentTemplateId}",
        method: "PUT",
        responses: [
            {
                status: 202,
                body: {
                    "template": {
                        "id": "7d341c28-6714-11e7-907b-a6006ad3dba0",
                        "name": "Salary for John",
                        "createdAt": "2020-04-12T14:33:13.452Z",
                        "serviceAgreementId": "d6fdc581-1306-412a-9e40-86d851190acf",
                        "details": {
                            "paymentType": "SEPA_CREDIT_TRANSFER",
                            "originatorAccount": {
                                "arrangementId": "729190df-a421-4937-94fd-5e1a3da132cc",
                                "externalArrangementId": "729190421493794513132",
                                "identification": {
                                    "identification": "NL53RABO0309349755",
                                    "schemeName": "IBAN"
                                }
                            },
                            "instructionPriority": "NORM",
                            "transferTransactionInformation": {
                                "counterparty": {
                                    "name": "John Smith",
                                    "postalAddress": {
                                        "addressLine1": "Schippersstraat 15, 1011AZ, Amsterdam",
                                        "country": "NL"
                                    }
                                },
                                "counterpartyAccount": {
                                    "identification": {
                                        "identification": "FR708933019952AUNHQNQ0KZ",
                                        "schemeName": "IBAN"
                                    },
                                    "arrangementId": "fe9d66ae-b927-4ac7-8799-c5a38a596ff2",
                                    "externalArrangementId": "9669274787995385962"
                                },
                                "instructedAmount": {
                                    "amount": "5000.55",
                                    "currencyCode": "EUR"
                                },
                                "remittanceInformation": "Salary"
                            }
                        }
                    }
                }
            },
            {
                status: 202,
                body: {
                    "template": {
                        "createdAt": "2000-01-23T04:56:07.000+00:00",
                        "additions": {
                            "key": "additions"
                        },
                        "serviceAgreementId": "serviceAgreementId",
                        "name": "name",
                        "details": {
                            "transferTransactionInformation": {
                                "correspondentBank": {
                                    "bankBranchCode": "bankBranchCode",
                                    "postalAddress": {
                                        "country": "country",
                                        "streetName": "streetName",
                                        "town": "town",
                                        "countrySubDivision": "countrySubDivision",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "addressLine1": "addressLine1",
                                        "addressLine2": "addressLine2",
                                        "postCode": "postCode"
                                    },
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "name": "name",
                                    "bic": "bic"
                                },
                                "counterpartyBank": {
                                    "bankBranchCode": "bankBranchCode",
                                    "postalAddress": {
                                        "country": "country",
                                        "streetName": "streetName",
                                        "town": "town",
                                        "countrySubDivision": "countrySubDivision",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "addressLine1": "addressLine1",
                                        "addressLine2": "addressLine2",
                                        "postCode": "postCode"
                                    },
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "name": "name",
                                    "bic": "bic"
                                },
                                "targetCurrency": "targetCurrency",
                                "additions": {
                                    "key": "additions"
                                },
                                "purposeOfPayment": {
                                    "code": "code",
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "freeText": "freeText",
                                    "description": "description"
                                },
                                "counterpartyAccount": {
                                    "accountType": "accountType",
                                    "selectedContact": {
                                        "accountId": "accountId",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "contactId": "contactId"
                                    }
                                },
                                "intermediaryBank": {
                                    "bankBranchCode": "bankBranchCode",
                                    "postalAddress": {
                                        "country": "country",
                                        "streetName": "streetName",
                                        "town": "town",
                                        "countrySubDivision": "countrySubDivision",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "addressLine1": "addressLine1",
                                        "addressLine2": "addressLine2",
                                        "postCode": "postCode"
                                    },
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "name": "name",
                                    "bic": "bic"
                                },
                                "mandateIdentifier": "mandateIdentifier",
                                "remittanceInformation": "remittanceInformation",
                                "messageToBank": "messageToBank",
                                "counterparty": {
                                    "postalAddress": {
                                        "country": "country",
                                        "streetName": "streetName",
                                        "town": "town",
                                        "countrySubDivision": "countrySubDivision",
                                        "additions": {
                                            "key": "additions"
                                        },
                                        "addressLine1": "addressLine1",
                                        "addressLine2": "addressLine2",
                                        "postCode": "postCode"
                                    },
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "name": "name",
                                    "recipientId": "recipientId"
                                },
                                "instructedAmount": {
                                    "amount": "amount",
                                    "additions": {
                                        "key": "additions"
                                    },
                                    "currencyCode": "currencyCode"
                                },
                                "endToEndIdentification": "endToEndIdentification"
                            },
                            "additions": {
                                "key": "additions"
                            },
                            "originatorAccount": {
                                "arrangementId": "arrangementId",
                                "identification": {
                                    "identification": "identification",
                                    "additions": {
                                        "key": "additions"
                                    }
                                },
                                "additions": {
                                    "key": "additions"
                                },
                                "name": "name",
                                "externalArrangementId": "externalArrangementId"
                            },
                            "entryClass": "entryClass",
                            "paymentType": "paymentType"
                        },
                        "id": "id",
                        "actions": [null, null]
                    },
                    "additions": {
                        "key": "additions"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,