{"version":3,"file":"backbase-payment-template-http-ang.js","sources":["../../model/action.ts","../../model/chargeBearer.ts","../../model/instructionPriority.ts","../../model/involvedPartyRole.ts","../../model/schemeNames.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/paymentTemplates.service.ts","../../api/paymentTemplates.service.mocks.ts"],"sourcesContent":["/**\n * Payment order templates client\n * Manage payment order templates.\n *\n * The version of the OpenAPI document: 2.5.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The actions that can be performed by the user (with the current context).\n */\nexport type Action = 'CREATE' | 'VIEW';\n\nexport const Action = {\n    CREATE: 'CREATE' as Action,\n    VIEW: 'VIEW' as Action\n};\n\n","/**\n * Payment order templates client\n * Manage payment order templates.\n *\n * The version of the OpenAPI document: 2.5.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Indicated who pays the fees for an international transfer. Possible values: OUR(originator), BEN(beneficiary or SHA(shared).\n */\nexport type ChargeBearer = 'OUR' | 'BEN' | 'SHA';\n\nexport const ChargeBearer = {\n    OUR: 'OUR' as ChargeBearer,\n    BEN: 'BEN' as ChargeBearer,\n    SHA: 'SHA' as ChargeBearer\n};\n\n","/**\n * Payment order templates client\n * Manage payment order templates.\n *\n * The version of the OpenAPI document: 2.5.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Specify the priority of execution of the payment order.\n */\nexport type InstructionPriority = 'NORM' | 'HIGH';\n\nexport const InstructionPriority = {\n    NORM: 'NORM' as InstructionPriority,\n    HIGH: 'HIGH' as InstructionPriority\n};\n\n","/**\n * Payment order templates client\n * Manage payment order templates.\n *\n * The version of the OpenAPI document: 2.5.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * These are the possible values the role of an involved party can  have.\n */\nexport type InvolvedPartyRole = 'CREDITOR' | 'DEBTOR';\n\nexport const InvolvedPartyRole = {\n    CREDITOR: 'CREDITOR' as InvolvedPartyRole,\n    DEBTOR: 'DEBTOR' as InvolvedPartyRole\n};\n\n","/**\n * Payment order templates client\n * Manage payment order templates.\n *\n * The version of the OpenAPI document: 2.5.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * This describes the type of the account identifier. ID will mean it refers to an account known within DBS.\n */\nexport type SchemeNames = 'IBAN' | 'BBAN' | 'ID' | 'EXTERNAL_ID' | 'EMAIL' | 'MOBILE';\n\nexport const SchemeNames = {\n    IBAN: 'IBAN' as SchemeNames,\n    BBAN: 'BBAN' as SchemeNames,\n    ID: 'ID' as SchemeNames,\n    EXTERNALID: 'EXTERNAL_ID' as SchemeNames,\n    EMAIL: 'EMAIL' as SchemeNames,\n    MOBILE: 'MOBILE' as SchemeNames\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const PAYMENT_TEMPLATE_BASE_PATH = new InjectionToken<string>('PAYMENT_TEMPLATE_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface PaymentTemplateConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class PaymentTemplateConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: PaymentTemplateConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link PaymentTemplateConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link PaymentTemplateConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module PaymentTemplateConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { PaymentTemplateConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class PaymentTemplateApiModule {\n    public static forRoot(configurationFactory: () => PaymentTemplateConfiguration): ModuleWithProviders<PaymentTemplateApiModule> {\n        return {\n            ngModule: PaymentTemplateApiModule,\n            providers: [ { provide: PaymentTemplateConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: PaymentTemplateApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: PaymentTemplateConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('PaymentTemplateApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Payment order templates client\n * Manage payment order templates.\n *\n * The version of the OpenAPI document: 2.5.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PaymentTemplate } from '../model/models';\nimport { PaymentTemplatesPostRequest } from '../model/models';\nimport { PaymentTemplatesPostResponse } from '../model/models';\nimport { PaymentTemplatesPutRequest } from '../model/models';\nimport { PaymentTemplatesPutResponse } from '../model/models';\n\nimport { PAYMENT_TEMPLATE_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PaymentTemplateConfiguration }                                     from '../configuration';\n\n\nexport interface DeletePaymentTemplateIdByPaymentTemplateIdRequestParams {\n    /** Payment template id */\n    [\"paymentTemplateId\"]: string;\n}\n\nexport interface GetPaymentTemplatesRequestParams {\n    /** Minimum length is 3. The search term used to make partial search on properties: name. */\n    [\"query\"]?: string;\n    /** Intended action for retrieving templates. */\n    [\"intendedAction\"]?: 'CREATE' | 'VIEW';\n    /** Field used for searching payment template by comma-separated payment types. */\n    [\"paymentType\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Limit the number of elements on the response. */\n    [\"size\"]?: number;\n}\n\nexport interface PostPaymentTemplatesRequestParams {\n    /** Creates a payment template */\n    [\"paymentTemplatesPostRequest\"]: PaymentTemplatesPostRequest;\n}\n\nexport interface PutPaymentTemplateByIdRequestParams {\n    /** Payment template id */\n    [\"paymentTemplateId\"]: string;\n    /** Update an existing draft payment with new information. */\n    [\"paymentTemplatesPutRequest\"]: PaymentTemplatesPutRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentTemplatesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PaymentTemplateConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(PAYMENT_TEMPLATE_BASE_PATH) basePath: string, @Optional() configuration: PaymentTemplateConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete a single payment template.\n     * Delete a single payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePaymentTemplateIdByPaymentTemplateId(requestParameters: DeletePaymentTemplateIdByPaymentTemplateIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a single payment template.\n     * Delete a single payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePaymentTemplateIdByPaymentTemplateId(requestParameters: DeletePaymentTemplateIdByPaymentTemplateIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a single payment template.\n     * Delete a single payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePaymentTemplateIdByPaymentTemplateId(requestParameters: DeletePaymentTemplateIdByPaymentTemplateIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a single payment template.\n     * Delete a single payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePaymentTemplateIdByPaymentTemplateId(requestParameters: DeletePaymentTemplateIdByPaymentTemplateIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n        if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n            throw new Error('Required parameter paymentTemplateId was null or undefined when calling deletePaymentTemplateIdByPaymentTemplateId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deletePaymentTemplateIdByPaymentTemplateIdUrl(requestParameters: DeletePaymentTemplateIdByPaymentTemplateIdRequestParams): string {\n        const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n        if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n            throw new Error('Required parameter paymentTemplateId was null or undefined when calling deletePaymentTemplateIdByPaymentTemplateId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`;\n    }\n\n    /**\n     * Retrieve a list of applicable payment templates.\n     * Retrieve a list of applicable payment templates\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentTemplates(requestParameters: GetPaymentTemplatesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<PaymentTemplate>>;\n    /**\n     * Retrieve a list of applicable payment templates.\n     * Retrieve a list of applicable payment templates\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentTemplates(requestParameters: GetPaymentTemplatesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<PaymentTemplate>>>;\n    /**\n     * Retrieve a list of applicable payment templates.\n     * Retrieve a list of applicable payment templates\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentTemplates(requestParameters: GetPaymentTemplatesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<PaymentTemplate>>>;\n    /**\n     * Retrieve a list of applicable payment templates.\n     * Retrieve a list of applicable payment templates\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentTemplates(requestParameters: GetPaymentTemplatesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _query = requestParameters[\"query\"];\n        const _intendedAction = requestParameters[\"intendedAction\"];\n        const _paymentType = requestParameters[\"paymentType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_intendedAction !== undefined && _intendedAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_intendedAction, 'intendedAction');\n        }\n        if (_paymentType !== undefined && _paymentType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_paymentType, 'paymentType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<PaymentTemplate>>(`${this.configuration.basePath}/client-api/v2/payment-templates`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPaymentTemplatesUrl(requestParameters: GetPaymentTemplatesRequestParams): string {\n        const _query = requestParameters[\"query\"];\n        const _intendedAction = requestParameters[\"intendedAction\"];\n        const _paymentType = requestParameters[\"paymentType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_intendedAction !== undefined && _intendedAction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_intendedAction, 'intendedAction');\n        }\n        if (_paymentType !== undefined && _paymentType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_paymentType, 'paymentType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/payment-templates${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Creates a payment template.\n     * Creates a payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postPaymentTemplates(requestParameters: PostPaymentTemplatesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PaymentTemplatesPostResponse>;\n    /**\n     * Creates a payment template.\n     * Creates a payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postPaymentTemplates(requestParameters: PostPaymentTemplatesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PaymentTemplatesPostResponse>>;\n    /**\n     * Creates a payment template.\n     * Creates a payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postPaymentTemplates(requestParameters: PostPaymentTemplatesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PaymentTemplatesPostResponse>>;\n    /**\n     * Creates a payment template.\n     * Creates a payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postPaymentTemplates(requestParameters: PostPaymentTemplatesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _paymentTemplatesPostRequest = requestParameters[\"paymentTemplatesPostRequest\"];\n        if (_paymentTemplatesPostRequest === null || _paymentTemplatesPostRequest === undefined) {\n            throw new Error('Required parameter paymentTemplatesPostRequest was null or undefined when calling postPaymentTemplates.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PaymentTemplatesPostResponse>(`${this.configuration.basePath}/client-api/v2/payment-templates`,\n            _paymentTemplatesPostRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postPaymentTemplatesUrl(requestParameters: PostPaymentTemplatesRequestParams): string {\n        const _paymentTemplatesPostRequest = requestParameters[\"paymentTemplatesPostRequest\"];\n        if (_paymentTemplatesPostRequest === null || _paymentTemplatesPostRequest === undefined) {\n            throw new Error('Required parameter paymentTemplatesPostRequest was null or undefined when calling postPaymentTemplates.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-templates`;\n    }\n\n    /**\n     * Update a single payment template.\n     * Update a single payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPaymentTemplateById(requestParameters: PutPaymentTemplateByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PaymentTemplatesPutResponse>;\n    /**\n     * Update a single payment template.\n     * Update a single payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPaymentTemplateById(requestParameters: PutPaymentTemplateByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PaymentTemplatesPutResponse>>;\n    /**\n     * Update a single payment template.\n     * Update a single payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPaymentTemplateById(requestParameters: PutPaymentTemplateByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PaymentTemplatesPutResponse>>;\n    /**\n     * Update a single payment template.\n     * Update a single payment template\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPaymentTemplateById(requestParameters: PutPaymentTemplateByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n        if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n            throw new Error('Required parameter paymentTemplateId was null or undefined when calling putPaymentTemplateById.');\n        }\n        const _paymentTemplatesPutRequest = requestParameters[\"paymentTemplatesPutRequest\"];\n        if (_paymentTemplatesPutRequest === null || _paymentTemplatesPutRequest === undefined) {\n            throw new Error('Required parameter paymentTemplatesPutRequest was null or undefined when calling putPaymentTemplateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<PaymentTemplatesPutResponse>(`${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`,\n            _paymentTemplatesPutRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putPaymentTemplateByIdUrl(requestParameters: PutPaymentTemplateByIdRequestParams): string {\n        const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n        if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n            throw new Error('Required parameter paymentTemplateId was null or undefined when calling putPaymentTemplateById.');\n        }\n        const _paymentTemplatesPutRequest = requestParameters[\"paymentTemplatesPutRequest\"];\n        if (_paymentTemplatesPutRequest === null || _paymentTemplatesPutRequest === undefined) {\n            throw new Error('Required parameter paymentTemplatesPutRequest was null or undefined when calling putPaymentTemplateById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/payment-templates/{paymentTemplateId} URL pattern\n*/\nexport const PaymentTemplatesHttpServiceDeletePaymentTemplateIdByPaymentTemplateIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/payment-templates URL pattern\n*/\nexport const PaymentTemplatesHttpServiceGetPaymentTemplatesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-templates\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n  \"name\" : \"Textile supplier invoice\",\n  \"createdAt\" : \"2020-04-12T14:33:13.452Z\",\n  \"serviceAgreementId\" : \"d6fdc581-1306-412a-9e40-86d851190acf\",\n  \"details\" : {\n    \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n    \"originatorAccount\" : {\n      \"arrangementId\" : \"729190df-a421-4937-94fd-5e1a3da132cc\",\n      \"externalArrangementId\" : \"729190421493794513132\",\n      \"identification\" : {\n        \"identification\" : \"NL53RABO0309349755\",\n        \"schemeName\" : \"IBAN\"\n      },\n      \"name\" : \"Smith Bonus Savings\"\n    },\n    \"instructionPriority\" : \"NORM\",\n    \"transferTransactionInformation\" : {\n      \"counterparty\" : {\n        \"name\" : \"Backbase\",\n        \"postalAddress\" : {\n          \"addressLine1\" : \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n          \"country\" : \"NL\"\n        }\n      },\n      \"counterpartyAccount\" : {\n        \"identification\" : {\n          \"identification\" : \"FR708933019952AUNHQNQ0KZ\",\n          \"schemeName\" : \"IBAN\"\n        },\n        \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n        \"externalArrangementId\" : \"9669274787995385962\"\n      },\n      \"instructedAmount\" : {\n        \"amount\" : \"5000.55\",\n        \"currencyCode\" : \"EUR\"\n      },\n      \"remittanceInformation\" : \"Salary\"\n    }\n  }\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/payment-templates URL pattern\n*/\nexport const PaymentTemplatesHttpServicePostPaymentTemplatesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-templates\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"template\" : {\n    \"id\" : \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n    \"name\" : \"Salary for John\",\n    \"createdAt\" : \"2020-04-12T14:33:13.452Z\",\n    \"serviceAgreementId\" : \"d6fdc581-1306-412a-9e40-86d851190acf\",\n    \"details\" : {\n      \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n      \"originatorAccount\" : {\n        \"arrangementId\" : \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\" : \"729190421493794513132\",\n        \"identification\" : {\n          \"identification\" : \"NL53RABO0309349755\",\n          \"schemeName\" : \"IBAN\"\n        }\n      },\n      \"instructionPriority\" : \"NORM\",\n      \"transferTransactionInformation\" : {\n        \"counterparty\" : {\n          \"name\" : \"John Smith\",\n          \"postalAddress\" : {\n            \"addressLine1\" : \"Schippersstraat 15, 1011AZ, Amsterdam\",\n            \"country\" : \"NL\"\n          }\n        },\n        \"counterpartyAccount\" : {\n          \"identification\" : {\n            \"identification\" : \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\" : \"IBAN\"\n          },\n          \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\" : \"9669274787995385962\"\n        },\n        \"instructedAmount\" : {\n          \"amount\" : \"5000.55\",\n          \"currencyCode\" : \"EUR\"\n        },\n        \"remittanceInformation\" : \"Salary\"\n      }\n    }\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/payment-templates/{paymentTemplateId} URL pattern\n*/\nexport const PaymentTemplatesHttpServicePutPaymentTemplateByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"template\" : {\n    \"id\" : \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n    \"name\" : \"Salary for John\",\n    \"createdAt\" : \"2020-04-12T14:33:13.452Z\",\n    \"serviceAgreementId\" : \"d6fdc581-1306-412a-9e40-86d851190acf\",\n    \"details\" : {\n      \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n      \"originatorAccount\" : {\n        \"arrangementId\" : \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\" : \"729190421493794513132\",\n        \"identification\" : {\n          \"identification\" : \"NL53RABO0309349755\",\n          \"schemeName\" : \"IBAN\"\n        }\n      },\n      \"instructionPriority\" : \"NORM\",\n      \"transferTransactionInformation\" : {\n        \"counterparty\" : {\n          \"name\" : \"John Smith\",\n          \"postalAddress\" : {\n            \"addressLine1\" : \"Schippersstraat 15, 1011AZ, Amsterdam\",\n            \"country\" : \"NL\"\n          }\n        },\n        \"counterpartyAccount\" : {\n          \"identification\" : {\n            \"identification\" : \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\" : \"IBAN\"\n          },\n          \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\" : \"9669274787995385962\"\n        },\n        \"instructedAmount\" : {\n          \"amount\" : \"5000.55\",\n          \"currencyCode\" : \"EUR\"\n        },\n        \"remittanceInformation\" : \"Salary\"\n      }\n    }\n  }\n}\n                },\n                {\n                    status: 202,\n                    body: {\n  \"template\" : {\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"serviceAgreementId\" : \"serviceAgreementId\",\n    \"name\" : \"name\",\n    \"details\" : {\n      \"transferTransactionInformation\" : {\n        \"correspondentBank\" : {\n          \"bankBranchCode\" : \"bankBranchCode\",\n          \"postalAddress\" : {\n            \"country\" : \"country\",\n            \"streetName\" : \"streetName\",\n            \"town\" : \"town\",\n            \"countrySubDivision\" : \"countrySubDivision\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"addressLine1\" : \"addressLine1\",\n            \"addressLine2\" : \"addressLine2\",\n            \"postCode\" : \"postCode\"\n          },\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"name\" : \"name\",\n          \"bic\" : \"bic\"\n        },\n        \"counterpartyBank\" : {\n          \"bankBranchCode\" : \"bankBranchCode\",\n          \"postalAddress\" : {\n            \"country\" : \"country\",\n            \"streetName\" : \"streetName\",\n            \"town\" : \"town\",\n            \"countrySubDivision\" : \"countrySubDivision\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"addressLine1\" : \"addressLine1\",\n            \"addressLine2\" : \"addressLine2\",\n            \"postCode\" : \"postCode\"\n          },\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"name\" : \"name\",\n          \"bic\" : \"bic\"\n        },\n        \"targetCurrency\" : \"targetCurrency\",\n        \"additions\" : {\n          \"key\" : \"additions\"\n        },\n        \"purposeOfPayment\" : {\n          \"code\" : \"code\",\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"freeText\" : \"freeText\",\n          \"description\" : \"description\"\n        },\n        \"counterpartyAccount\" : {\n          \"accountType\" : \"accountType\",\n          \"selectedContact\" : {\n            \"accountId\" : \"accountId\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"contactId\" : \"contactId\"\n          }\n        },\n        \"intermediaryBank\" : {\n          \"bankBranchCode\" : \"bankBranchCode\",\n          \"postalAddress\" : {\n            \"country\" : \"country\",\n            \"streetName\" : \"streetName\",\n            \"town\" : \"town\",\n            \"countrySubDivision\" : \"countrySubDivision\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"addressLine1\" : \"addressLine1\",\n            \"addressLine2\" : \"addressLine2\",\n            \"postCode\" : \"postCode\"\n          },\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"name\" : \"name\",\n          \"bic\" : \"bic\"\n        },\n        \"mandateIdentifier\" : \"mandateIdentifier\",\n        \"remittanceInformation\" : \"remittanceInformation\",\n        \"messageToBank\" : \"messageToBank\",\n        \"counterparty\" : {\n          \"postalAddress\" : {\n            \"country\" : \"country\",\n            \"streetName\" : \"streetName\",\n            \"town\" : \"town\",\n            \"countrySubDivision\" : \"countrySubDivision\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"addressLine1\" : \"addressLine1\",\n            \"addressLine2\" : \"addressLine2\",\n            \"postCode\" : \"postCode\"\n          },\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"name\" : \"name\",\n          \"recipientId\" : \"recipientId\"\n        },\n        \"instructedAmount\" : {\n          \"amount\" : \"amount\",\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"currencyCode\" : \"currencyCode\"\n        },\n        \"endToEndIdentification\" : \"endToEndIdentification\"\n      },\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"originatorAccount\" : {\n        \"arrangementId\" : \"arrangementId\",\n        \"identification\" : {\n          \"identification\" : \"identification\",\n          \"additions\" : {\n            \"key\" : \"additions\"\n          }\n        },\n        \"additions\" : {\n          \"key\" : \"additions\"\n        },\n        \"name\" : \"name\",\n        \"externalArrangementId\" : \"externalArrangementId\"\n      },\n      \"entryClass\" : \"entryClass\",\n      \"paymentType\" : \"paymentType\"\n    },\n    \"id\" : \"id\",\n    \"actions\" : [ null, null ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const PaymentTemplatesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/payment-templates\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n  \"name\" : \"Textile supplier invoice\",\n  \"createdAt\" : \"2020-04-12T14:33:13.452Z\",\n  \"serviceAgreementId\" : \"d6fdc581-1306-412a-9e40-86d851190acf\",\n  \"details\" : {\n    \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n    \"originatorAccount\" : {\n      \"arrangementId\" : \"729190df-a421-4937-94fd-5e1a3da132cc\",\n      \"externalArrangementId\" : \"729190421493794513132\",\n      \"identification\" : {\n        \"identification\" : \"NL53RABO0309349755\",\n        \"schemeName\" : \"IBAN\"\n      },\n      \"name\" : \"Smith Bonus Savings\"\n    },\n    \"instructionPriority\" : \"NORM\",\n    \"transferTransactionInformation\" : {\n      \"counterparty\" : {\n        \"name\" : \"Backbase\",\n        \"postalAddress\" : {\n          \"addressLine1\" : \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n          \"country\" : \"NL\"\n        }\n      },\n      \"counterpartyAccount\" : {\n        \"identification\" : {\n          \"identification\" : \"FR708933019952AUNHQNQ0KZ\",\n          \"schemeName\" : \"IBAN\"\n        },\n        \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n        \"externalArrangementId\" : \"9669274787995385962\"\n      },\n      \"instructedAmount\" : {\n        \"amount\" : \"5000.55\",\n        \"currencyCode\" : \"EUR\"\n      },\n      \"remittanceInformation\" : \"Salary\"\n    }\n  }\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/payment-templates\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"template\" : {\n    \"id\" : \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n    \"name\" : \"Salary for John\",\n    \"createdAt\" : \"2020-04-12T14:33:13.452Z\",\n    \"serviceAgreementId\" : \"d6fdc581-1306-412a-9e40-86d851190acf\",\n    \"details\" : {\n      \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n      \"originatorAccount\" : {\n        \"arrangementId\" : \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\" : \"729190421493794513132\",\n        \"identification\" : {\n          \"identification\" : \"NL53RABO0309349755\",\n          \"schemeName\" : \"IBAN\"\n        }\n      },\n      \"instructionPriority\" : \"NORM\",\n      \"transferTransactionInformation\" : {\n        \"counterparty\" : {\n          \"name\" : \"John Smith\",\n          \"postalAddress\" : {\n            \"addressLine1\" : \"Schippersstraat 15, 1011AZ, Amsterdam\",\n            \"country\" : \"NL\"\n          }\n        },\n        \"counterpartyAccount\" : {\n          \"identification\" : {\n            \"identification\" : \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\" : \"IBAN\"\n          },\n          \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\" : \"9669274787995385962\"\n        },\n        \"instructedAmount\" : {\n          \"amount\" : \"5000.55\",\n          \"currencyCode\" : \"EUR\"\n        },\n        \"remittanceInformation\" : \"Salary\"\n      }\n    }\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"template\" : {\n    \"id\" : \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n    \"name\" : \"Salary for John\",\n    \"createdAt\" : \"2020-04-12T14:33:13.452Z\",\n    \"serviceAgreementId\" : \"d6fdc581-1306-412a-9e40-86d851190acf\",\n    \"details\" : {\n      \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n      \"originatorAccount\" : {\n        \"arrangementId\" : \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\" : \"729190421493794513132\",\n        \"identification\" : {\n          \"identification\" : \"NL53RABO0309349755\",\n          \"schemeName\" : \"IBAN\"\n        }\n      },\n      \"instructionPriority\" : \"NORM\",\n      \"transferTransactionInformation\" : {\n        \"counterparty\" : {\n          \"name\" : \"John Smith\",\n          \"postalAddress\" : {\n            \"addressLine1\" : \"Schippersstraat 15, 1011AZ, Amsterdam\",\n            \"country\" : \"NL\"\n          }\n        },\n        \"counterpartyAccount\" : {\n          \"identification\" : {\n            \"identification\" : \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\" : \"IBAN\"\n          },\n          \"arrangementId\" : \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\" : \"9669274787995385962\"\n        },\n        \"instructedAmount\" : {\n          \"amount\" : \"5000.55\",\n          \"currencyCode\" : \"EUR\"\n        },\n        \"remittanceInformation\" : \"Salary\"\n      }\n    }\n  }\n}\n            },\n            {\n                status: 202,\n                body: {\n  \"template\" : {\n    \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"serviceAgreementId\" : \"serviceAgreementId\",\n    \"name\" : \"name\",\n    \"details\" : {\n      \"transferTransactionInformation\" : {\n        \"correspondentBank\" : {\n          \"bankBranchCode\" : \"bankBranchCode\",\n          \"postalAddress\" : {\n            \"country\" : \"country\",\n            \"streetName\" : \"streetName\",\n            \"town\" : \"town\",\n            \"countrySubDivision\" : \"countrySubDivision\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"addressLine1\" : \"addressLine1\",\n            \"addressLine2\" : \"addressLine2\",\n            \"postCode\" : \"postCode\"\n          },\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"name\" : \"name\",\n          \"bic\" : \"bic\"\n        },\n        \"counterpartyBank\" : {\n          \"bankBranchCode\" : \"bankBranchCode\",\n          \"postalAddress\" : {\n            \"country\" : \"country\",\n            \"streetName\" : \"streetName\",\n            \"town\" : \"town\",\n            \"countrySubDivision\" : \"countrySubDivision\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"addressLine1\" : \"addressLine1\",\n            \"addressLine2\" : \"addressLine2\",\n            \"postCode\" : \"postCode\"\n          },\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"name\" : \"name\",\n          \"bic\" : \"bic\"\n        },\n        \"targetCurrency\" : \"targetCurrency\",\n        \"additions\" : {\n          \"key\" : \"additions\"\n        },\n        \"purposeOfPayment\" : {\n          \"code\" : \"code\",\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"freeText\" : \"freeText\",\n          \"description\" : \"description\"\n        },\n        \"counterpartyAccount\" : {\n          \"accountType\" : \"accountType\",\n          \"selectedContact\" : {\n            \"accountId\" : \"accountId\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"contactId\" : \"contactId\"\n          }\n        },\n        \"intermediaryBank\" : {\n          \"bankBranchCode\" : \"bankBranchCode\",\n          \"postalAddress\" : {\n            \"country\" : \"country\",\n            \"streetName\" : \"streetName\",\n            \"town\" : \"town\",\n            \"countrySubDivision\" : \"countrySubDivision\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"addressLine1\" : \"addressLine1\",\n            \"addressLine2\" : \"addressLine2\",\n            \"postCode\" : \"postCode\"\n          },\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"name\" : \"name\",\n          \"bic\" : \"bic\"\n        },\n        \"mandateIdentifier\" : \"mandateIdentifier\",\n        \"remittanceInformation\" : \"remittanceInformation\",\n        \"messageToBank\" : \"messageToBank\",\n        \"counterparty\" : {\n          \"postalAddress\" : {\n            \"country\" : \"country\",\n            \"streetName\" : \"streetName\",\n            \"town\" : \"town\",\n            \"countrySubDivision\" : \"countrySubDivision\",\n            \"additions\" : {\n              \"key\" : \"additions\"\n            },\n            \"addressLine1\" : \"addressLine1\",\n            \"addressLine2\" : \"addressLine2\",\n            \"postCode\" : \"postCode\"\n          },\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"name\" : \"name\",\n          \"recipientId\" : \"recipientId\"\n        },\n        \"instructedAmount\" : {\n          \"amount\" : \"amount\",\n          \"additions\" : {\n            \"key\" : \"additions\"\n          },\n          \"currencyCode\" : \"currencyCode\"\n        },\n        \"endToEndIdentification\" : \"endToEndIdentification\"\n      },\n      \"additions\" : {\n        \"key\" : \"additions\"\n      },\n      \"originatorAccount\" : {\n        \"arrangementId\" : \"arrangementId\",\n        \"identification\" : {\n          \"identification\" : \"identification\",\n          \"additions\" : {\n            \"key\" : \"additions\"\n          }\n        },\n        \"additions\" : {\n          \"key\" : \"additions\"\n        },\n        \"name\" : \"name\",\n        \"externalArrangementId\" : \"externalArrangementId\"\n      },\n      \"entryClass\" : \"entryClass\",\n      \"paymentType\" : \"paymentType\"\n    },\n    \"id\" : \"id\",\n    \"actions\" : [ null, null ]\n  },\n  \"additions\" : {\n    \"key\" : \"additions\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":"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"}