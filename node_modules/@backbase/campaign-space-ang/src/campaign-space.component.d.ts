import { ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { SafeResourceUrl } from '@angular/platform-browser';
import { CampaignService } from './services/campaign.service';
import { TargetAttribute, WidgetStyles } from './types';
import { SelectedCampaignResource } from '@backbase/data-ang/engagement';
import * as i0 from "@angular/core";
export declare class CampaignSpaceComponent implements OnInit, OnDestroy {
    private campaignService;
    private readonly renderer;
    private cdr;
    private readonly basePath;
    /**
     * Component name
     */
    name: string;
    /**
     * Campaign banner dimensions
     */
    dimensions: string;
    /**
     * Page name
     */
    pageName: string;
    /**
     * Is banner responsive
     */
    responsive: boolean;
    /**
     * Banner title
     */
    title: string;
    campaign?: SelectedCampaignResource;
    creativeSrc?: SafeResourceUrl;
    targetUrl?: string;
    targetMode?: TargetAttribute;
    designMode: boolean;
    content?: string;
    widgetStyles?: WidgetStyles;
    placeholderTitle: string;
    private readonly iframeContext;
    private destroy$;
    iframeRef: ElementRef<HTMLIFrameElement>;
    constructor(campaignService: CampaignService, renderer: Renderer2, cdr: ChangeDetectorRef, basePath: string);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private initDesignMode;
    private initLiveMode;
    private setTargetUrl;
    iframeLoad(): void;
    private getWidgetStyles;
    private getPlaceholderTitle;
    private toPx;
    private getDimensions;
    static ɵfac: i0.ɵɵFactoryDeclaration<CampaignSpaceComponent, [null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CampaignSpaceComponent, "bb-campaign-space-ang", never, { "name": "name"; "dimensions": "dimensions"; "pageName": "pageName"; "responsive": "responsive"; "title": "title"; }, {}, never, never>;
}
