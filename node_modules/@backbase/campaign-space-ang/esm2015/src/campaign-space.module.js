import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { CampaignSpaceComponent } from './campaign-space.component';
import { WebSdkApiModule } from '@backbase/foundation-ang/web-sdk';
import { HttpClientModule } from '@angular/common/http';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
export class CampaignSpaceModule {
}
CampaignSpaceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CampaignSpaceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CampaignSpaceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CampaignSpaceModule, declarations: [CampaignSpaceComponent], imports: [CommonModule,
        WebSdkApiModule,
        HttpClientModule, i1.BackbaseCoreModule], exports: [CampaignSpaceComponent] });
CampaignSpaceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CampaignSpaceModule, imports: [[
            CommonModule,
            WebSdkApiModule,
            HttpClientModule,
            BackbaseCoreModule.withConfig({
                classMap: { CampaignSpaceComponent: CampaignSpaceComponent },
            }),
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CampaignSpaceModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        WebSdkApiModule,
                        HttpClientModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { CampaignSpaceComponent: CampaignSpaceComponent },
                        }),
                    ],
                    exports: [CampaignSpaceComponent],
                    declarations: [CampaignSpaceComponent],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FtcGFpZ24tc3BhY2UubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9jYW1wYWlnbi1zcGFjZS1hbmcvc3JjL2NhbXBhaWduLXNwYWNlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7OztBQWN4RCxNQUFNLE9BQU8sbUJBQW1COztpSEFBbkIsbUJBQW1CO2tIQUFuQixtQkFBbUIsaUJBRmYsc0JBQXNCLGFBUm5DLFlBQVk7UUFDWixlQUFlO1FBQ2YsZ0JBQWdCLG9DQUtSLHNCQUFzQjtrSEFHckIsbUJBQW1CLFlBWHJCO1lBQ1AsWUFBWTtZQUNaLGVBQWU7WUFDZixnQkFBZ0I7WUFDaEIsa0JBQWtCLENBQUMsVUFBVSxDQUFDO2dCQUM1QixRQUFRLEVBQUUsRUFBRSxzQkFBc0IsRUFBRSxzQkFBc0IsRUFBRTthQUM3RCxDQUFDO1NBQ0g7NEZBSVUsbUJBQW1CO2tCQVovQixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGVBQWU7d0JBQ2YsZ0JBQWdCO3dCQUNoQixrQkFBa0IsQ0FBQyxVQUFVLENBQUM7NEJBQzVCLFFBQVEsRUFBRSxFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFO3lCQUM3RCxDQUFDO3FCQUNIO29CQUNELE9BQU8sRUFBRSxDQUFDLHNCQUFzQixDQUFDO29CQUNqQyxZQUFZLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztpQkFDdkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEJhY2tiYXNlQ29yZU1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlJztcbmltcG9ydCB7IENhbXBhaWduU3BhY2VDb21wb25lbnQgfSBmcm9tICcuL2NhbXBhaWduLXNwYWNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBXZWJTZGtBcGlNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvd2ViLXNkayc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFdlYlNka0FwaU1vZHVsZSxcbiAgICBIdHRwQ2xpZW50TW9kdWxlLFxuICAgIEJhY2tiYXNlQ29yZU1vZHVsZS53aXRoQ29uZmlnKHtcbiAgICAgIGNsYXNzTWFwOiB7IENhbXBhaWduU3BhY2VDb21wb25lbnQ6IENhbXBhaWduU3BhY2VDb21wb25lbnQgfSxcbiAgICB9KSxcbiAgXSxcbiAgZXhwb3J0czogW0NhbXBhaWduU3BhY2VDb21wb25lbnRdLFxuICBkZWNsYXJhdGlvbnM6IFtDYW1wYWlnblNwYWNlQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgQ2FtcGFpZ25TcGFjZU1vZHVsZSB7fVxuIl19