{"version":3,"file":"limit-access.service.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-common-ang/src/lib/services/limit-access.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AACrD,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAClD,OAAO,EAAE,sBAAsB,EAAE,MAAM,4BAA4B,CAAC;;;AAGpE,MAAM,OAAO,kBAAkB;IAC7B,YAA6B,sBAA8C;QAA9C,2BAAsB,GAAtB,sBAAsB,CAAwB;IAAG,CAAC;IAE/E;;OAEG;IACH,WAAW,CAAC,WAAqB,EAAE,iBAA2B;QAC5D,IAAI,WAAW,EAAE;YACf,OAAO,aAAa,CAAC;gBACnB,IAAI,CAAC,sBAAsB,CAAC,wBAAwB;gBACpD,IAAI,CAAC,sBAAsB,CAAC,kBAAkB;aAC/C,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,uBAAuB,EAAE,iBAAiB,CAAC,EAAE,EAAE;gBACnD,OAAO;oBACL,YAAY,EAAE,iBAAiB;oBAC/B,WAAW,EAAE,iBAAiB,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE;iBAC9D,CAAC;YACJ,CAAC,CAAC,EACF,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;SACH;aAAM;YACL,OAAO,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC;SAClD;IACH,CAAC;;mIAvBU,kBAAkB;uIAAlB,kBAAkB;4FAAlB,kBAAkB;kBAD9B,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { UserPermissionsService } from './user-permissions.service';\n\n@Injectable()\nexport class LimitAccessService {\n  constructor(private readonly userPermissionsService: UserPermissionsService) {}\n\n  /**\n   * Current user limit access based on CXP property and user permission\n   */\n  limitAccess(enableLimit?: boolean, enableShadowLimit?: boolean): Observable<any> {\n    if (enableLimit) {\n      return combineLatest([\n        this.userPermissionsService.shadowLimitsPermissions$,\n        this.userPermissionsService.limitsPermissions$,\n      ]).pipe(\n        map(([shadowLimitsPermissions, limitsPermissions]) => {\n          return {\n            regularLimit: limitsPermissions,\n            shadowLimit: enableShadowLimit ? shadowLimitsPermissions : {},\n          };\n        }),\n        shareReplay(1),\n      );\n    } else {\n      return of({ regularLimit: {}, shadowLimit: {} });\n    }\n  }\n}\n"]}