{"version":3,"file":"business-function-group.service.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-common-ang/src/lib/business-function-grouping/business-function-group.service.ts"],"names":[],"mappings":"AACA,OAAO,EACL,6BAA6B,EAE7B,oCAAoC,GACrC,MAAM,8CAA8C,CAAC;AAQtD,MAAM,OAAO,4BAA4B;IACvC,YACmB,2BAA6D,EAC7D,6BAAuC;QADvC,gCAA2B,GAA3B,2BAA2B,CAAkC;QAC7D,kCAA6B,GAA7B,6BAA6B,CAAU;IACvD,CAAC;IAEJ,eAAe,CAAC,oBAAwC;QACtD,MAAM,wBAAwB,GAE1B,oBAAoB,CAAC,MAAM,CAAC,CAAC,IAA2C,EAAE,IAAsB,EAAE,EAAE;YACtG,MAAM,eAAe,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;YAE/D,uCACK,IAAI,KACP,CAAC,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,IAC3D;QACJ,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO,MAAM,CAAC,OAAO,CAAC,wBAAwB,CAAC;aAC5C,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,iBAAiB,CAA+B,EAAE,EAAE,CAAC,CAAC;YACrE,QAAQ;YACR,iBAAiB;SAClB,CAAC,CAAC;aACF,IAAI,CACH,CAAC,CAAwB,EAAE,CAAwB,EAAE,EAAE,CACrD,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;YACtD,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CACzD,CAAC;IACN,CAAC;IAED,2BAA2B,CAAC,IAA0B;QACpD,MAAM,gBAAgB,GACpB,oCAAoC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CACpD,6BAA6B,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CACjE,IAAI,OAAO,CAAC;QACf,OAAO,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;IAClE,CAAC;IAED,gCAAgC,CAAC,iBAA6C;QAC5E,OAAO,iBAAiB;aACrB,GAAG,CACF,CAAC,EAA4B,EAAgC,EAAE,CAAC,iCAC3D,EAAE,KACL,QAAQ,EAAE,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,IAC9C,CACH;aACA,IAAI,CACH,CAAC,CAA+B,EAAE,CAA+B,EAAE,EAAE,CACnE,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;YACtD,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CACzD,CAAC;IACN,CAAC;CACF","sourcesContent":["import { FunctionsGetResponseBody } from '@backbase/data-ang/accesscontrol';\nimport {\n  defaultBusinessFunctionGroups,\n  BusinessFunctionToGroupConverter,\n  defaultOrderedBusinessFunctionGroups,\n} from '../helpers/business-function-group.constants';\nimport {\n  BusinessFunction,\n  BusinessFunctionGroup,\n  BusinessFunctionBase,\n  BusinessFunctionWithGroupKey,\n} from '../model/types';\n\nexport class BusinessFunctionGroupService {\n  constructor(\n    private readonly customBusinessFunctionGroup: BusinessFunctionToGroupConverter,\n    private readonly orderedBusinessFunctionGroups: string[],\n  ) {}\n\n  convertToGroups(allBusinessFunctions: BusinessFunction[]): BusinessFunctionGroup[] {\n    const businessFunctionsByGroup: {\n      [key: string]: BusinessFunction[];\n    } = allBusinessFunctions.reduce((memo: { [key: string]: BusinessFunction[] }, item: BusinessFunction) => {\n      const customGroupType = this.getGroupForBusinessFunction(item);\n\n      return {\n        ...memo,\n        [customGroupType]: [...(memo[customGroupType] || []), item],\n      };\n    }, {});\n\n    return Object.entries(businessFunctionsByGroup)\n      .map(([groupKey, businessFunctions]: [string, BusinessFunction[]]) => ({\n        groupKey,\n        businessFunctions,\n      }))\n      .sort(\n        (a: BusinessFunctionGroup, b: BusinessFunctionGroup) =>\n          this.orderedBusinessFunctionGroups.indexOf(a.groupKey) -\n          this.orderedBusinessFunctionGroups.indexOf(b.groupKey),\n      );\n  }\n\n  getGroupForBusinessFunction(item: BusinessFunctionBase): string {\n    const defaultGroupType =\n      defaultOrderedBusinessFunctionGroups.find(groupType =>\n        defaultBusinessFunctionGroups[groupType].includes(item.resource),\n      ) || 'other';\n    return this.customBusinessFunctionGroup(item, defaultGroupType);\n  }\n\n  attachGroupKeyToBusinessFunction(businessFunctions: FunctionsGetResponseBody[]): BusinessFunctionWithGroupKey[] {\n    return businessFunctions\n      .map(\n        (bf: FunctionsGetResponseBody): BusinessFunctionWithGroupKey => ({\n          ...bf,\n          groupKey: this.getGroupForBusinessFunction(bf),\n        }),\n      )\n      .sort(\n        (a: BusinessFunctionWithGroupKey, b: BusinessFunctionWithGroupKey) =>\n          this.orderedBusinessFunctionGroups.indexOf(a.groupKey) -\n          this.orderedBusinessFunctionGroups.indexOf(b.groupKey),\n      );\n  }\n}\n"]}