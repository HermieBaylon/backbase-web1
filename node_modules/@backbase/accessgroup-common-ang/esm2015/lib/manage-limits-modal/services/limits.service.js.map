{"version":3,"file":"limits.service.js","sourceRoot":"","sources":["../../../../../../../libs/accessgroup-common-ang/src/lib/manage-limits-modal/services/limits.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  LimitsHttpService,\n  CreateLimitRequestBody,\n  LimitsPostResponseBody,\n  UpdateLimitRequestBody,\n  LimitByUuidPutResponseBody,\n  LimitConsumption,\n  LimitsRetrievalPostResponseBody,\n  BaseLimitsRetrievalPostRequestBody,\n  LimitKey,\n} from '@backbase/data-ang/limits';\nimport { prepareLimitObj } from '../../helpers/limits-helpers';\nimport { CustomLimitData } from '../models/limits-bound-types.model';\n\n@Injectable()\nexport class LimitsService {\n  constructor(private readonly limitsService: LimitsHttpService) {}\n\n  getLimitsPeriods$: Observable<any> = this.limitsService.getSupportedPeriods();\n\n  getLimitsConsumptionsRecord(\n    currentLimitsConsumptionsRetrievalPostRequestBody: BaseLimitsRetrievalPostRequestBody,\n  ): Observable<LimitConsumption[]> {\n    return this.limitsService.postCurrentLimitsConsumptionsRetrieval({\n      currentLimitsConsumptionsRetrievalPostRequestBody,\n    });\n  }\n\n  getLimitsRetrievalRecord(\n    limitsRetrievalPostRequestBody: BaseLimitsRetrievalPostRequestBody,\n  ): Observable<LimitsRetrievalPostResponseBody[]> {\n    return this.limitsService.postLimitsRetrieval({\n      limitsRetrievalPostRequestBody,\n    });\n  }\n\n  createNewLimit(createLimitRequestBody: CreateLimitRequestBody): Observable<LimitsPostResponseBody> {\n    return this.limitsService.postLimits({\n      createLimitRequestBody,\n    });\n  }\n\n  updateLimit(uuid: string, updateLimitRequestBody: UpdateLimitRequestBody): Observable<LimitByUuidPutResponseBody> {\n    return this.limitsService.putLimitByUuid({\n      uuid,\n      updateLimitRequestBody,\n    });\n  }\n\n  /**\n   * Return grouped object by type of response\n   * @param data: any - object for grouping\n   * @param groupByEref: string - type of gentry point\n   * @param dataType: string - type of grouped data\n   */\n  groupedFunc(data: any, groupByEref: string, dataType: string) {\n    switch (dataType) {\n      case 'consumption':\n        return data.reduce(\n          (h: any, obj: any) =>\n            Object.assign(h, {\n              [this.getUniqueKeyConsumption(groupByEref, obj)]: (\n                h[this.getUniqueKeyConsumption(groupByEref, obj)] || []\n              ).concat(obj),\n            }),\n          {},\n        );\n      case 'lookUp':\n        return data.reduce(\n          (h: any, obj: any) =>\n            Object.assign(h, {\n              [this.getUniqueKeyLookUpKey(groupByEref, obj)]: (\n                h[this.getUniqueKeyLookUpKey(groupByEref, obj)] || []\n              ).concat(obj),\n            }),\n          {},\n        );\n      default:\n        return data.reduce(\n          (h: any, obj: any) =>\n            Object.assign(h, {\n              [this.getUniqueKeyRetrival(groupByEref, obj)]: (\n                h[this.getUniqueKeyRetrival(groupByEref, obj)] || []\n              ).concat(obj),\n            }),\n          {},\n        );\n    }\n  }\n\n  /**\n   * Return unique key for grouping consumption limit response\n   * @param type: string - type of entry point\n   * @param obj: any - response object for consumption limit\n   */\n  getUniqueKeyConsumption(type: string, obj: any) {\n    switch (type) {\n      case 'user':\n        return obj.limit['user-BBID'];\n      case 'perm':\n        let unitPermKey = '';\n        if (obj.limit.entities) {\n          for (let i = 0; i < obj.limit.entities.length; i++) {\n            if (obj.limit.entities[i].etype === 'PRV' || obj.limit.entities[i].etype === 'FUN') {\n              unitPermKey = unitPermKey + obj.limit.entities[i].eref;\n            }\n          }\n        }\n        return unitPermKey;\n      case 'func':\n        let unitFuncKey = '';\n        if (obj.limit.entities) {\n          for (let i = 0; i < obj.limit.entities.length; i++) {\n            if (\n              obj.limit.entities[i].etype === 'PRV' ||\n              obj.limit.entities[i].etype === 'FUN' ||\n              obj.limit.entities[i].etype === 'FAG'\n            ) {\n              unitFuncKey = unitFuncKey + obj.limit.entities[i].eref;\n            }\n          }\n        }\n        return unitFuncKey;\n      default:\n        return obj.limit.entities[0].eref;\n    }\n  }\n\n  /**\n   * Return unique key for grouping lookUp key from request\n   * @param type: string - type of entry point\n   * @param obj: any - lookUp key from request\n   */\n  getUniqueKeyLookUpKey(type: string, obj: any) {\n    switch (type) {\n      case 'user':\n        return obj['user-BBID'];\n      case 'perm':\n        let unitPermKey = '';\n        for (let i = 0; i < obj.lookupKeys.length; i++) {\n          if (obj.lookupKeys[i].etype === 'PRV' || obj.lookupKeys[i].etype === 'FUN') {\n            unitPermKey = unitPermKey + obj.lookupKeys[i].eref;\n          }\n        }\n        return unitPermKey;\n      case 'func':\n        let unitFuncKey = '';\n        for (let i = 0; i < obj.lookupKeys.length; i++) {\n          if (\n            obj.lookupKeys[i].etype === 'PRV' ||\n            obj.lookupKeys[i].etype === 'FUN' ||\n            obj.lookupKeys[i].etype === 'FAG'\n          ) {\n            unitFuncKey = unitFuncKey + obj.lookupKeys[i].eref;\n          }\n        }\n        return unitFuncKey;\n      default:\n        return obj.lookupKeys[0].eref;\n    }\n  }\n\n  /**\n   * Return unique key for grouping retrival limit response\n   * @param type: string - type of entry point\n   * @param obj: any - response object for retrival limit\n   */\n  getUniqueKeyRetrival(type: string, obj: any) {\n    switch (type) {\n      case 'user':\n        return obj['user-BBID'];\n      case 'perm':\n        let unitPermKey = '';\n        for (let i = 0; i < obj.entities.length; i++) {\n          if (obj.entities[i].etype === 'PRV' || obj.entities[i].etype === 'FUN') {\n            unitPermKey = unitPermKey + obj.entities[i].eref;\n          }\n        }\n        return unitPermKey;\n      case 'func':\n        let unitFuncKey = '';\n        for (let i = 0; i < obj.entities.length; i++) {\n          if (obj.entities[i].etype === 'PRV' || obj.entities[i].etype === 'FUN' || obj.entities[i].etype === 'FAG') {\n            unitFuncKey = unitFuncKey + obj.entities[i].eref;\n          }\n        }\n        return unitFuncKey;\n      default:\n        return obj.entities[0].eref;\n    }\n  }\n\n  /**\n   * Return stream of limitsData\n   * @param limitsRetrievalOptions\n   * @param groupByEref\n   * @param itemsPerRequest - number of items per request (by default 100)\n   */\n  getLimitsData(limitsRetrievalOptions: LimitKey[], groupByEref = '', itemsPerRequest = 100): Observable<any> {\n    if (limitsRetrievalOptions.length > itemsPerRequest) {\n      const limitsRetrievalOptionsArray = this.chunk(limitsRetrievalOptions, itemsPerRequest || 0);\n\n      return forkJoin(\n        limitsRetrievalOptionsArray.map(limitsRetrievalOption =>\n          this._getLimitsData(limitsRetrievalOption, groupByEref),\n        ),\n      ).pipe(\n        map(limitsDataChunks => {\n          const limitsData = {};\n          limitsDataChunks.map(limitsDataChunk => Object.assign(limitsData, limitsDataChunk));\n          return limitsData;\n        }),\n      );\n    }\n\n    return this._getLimitsData(limitsRetrievalOptions, groupByEref);\n  }\n\n  private _getLimitsData(\n    limitsRetrievalOptions: LimitKey[],\n    groupByEref = '',\n  ): Observable<{\n    [key: string]: CustomLimitData;\n  }> {\n    return combineLatest([\n      this.getLimitsPeriods$,\n      this.getLimitsRetrievalRecord({ limitsRetrievalOptions: limitsRetrievalOptions }),\n      this.getLimitsConsumptionsRecord({ limitsRetrievalOptions: limitsRetrievalOptions }),\n    ]).pipe(\n      map(([periods, limitRetrievalsData, limitConsumptionsData]: any) => {\n        const limitData: any = {};\n        const groupedLimit = this.groupedFunc(limitConsumptionsData, groupByEref, 'consumption');\n\n        const groupedRetrivalLimit = this.groupedFunc(limitRetrievalsData, groupByEref, '');\n\n        const groupedLookUpKey = this.groupedFunc(limitsRetrievalOptions, groupByEref, 'lookUp');\n\n        for (const key in groupedLookUpKey) {\n          if (groupedLookUpKey.hasOwnProperty(key)) {\n            limitData[key] = prepareLimitObj(groupedLimit[key], periods, groupedRetrivalLimit[key]);\n          }\n        }\n        return limitData;\n      }),\n    );\n  }\n\n  /**\n   * Util function to divide array into array of arrays of given size\n   * @param arr - original array\n   * @param len - small arrays length\n   */\n  private chunk(arr: any[], len: number): any[] {\n    const chunks = [];\n    const n = arr.length;\n    let i = 0;\n\n    while (i < n) {\n      chunks.push(arr.slice(i, (i += len)));\n    }\n\n    return chunks;\n  }\n}\n"]}