{"version":3,"file":"edit-limit.component.js","sourceRoot":"","sources":["../../../../../../../libs/accessgroup-common-ang/src/lib/manage-limits-modal/edit-limit/edit-limit.component.ts","../../../../../../../libs/accessgroup-common-ang/src/lib/manage-limits-modal/edit-limit/edit-limit.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { Subject } from 'rxjs';\nimport { debounceTime, take, takeUntil } from 'rxjs/operators';\n\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { LimitBound } from '../models/limits-bound-types.model';\nimport { AMOUNT_DELIMETER_REG_EXP } from '../../constants/amount-delimeter-remover';\n\n@Component({\n  selector: 'bb-edit-limit',\n  templateUrl: 'edit-limit.component.html',\n})\nexport class EditLimitComponent implements OnDestroy {\n  /**\n   * Flag for show/hide regular limit column.\n   */\n  @Input() showRegularLimit = false;\n  /**\n   * Flag for show/hide shadow limit column.\n   */\n  @Input() showShadowLimit = false;\n  /**\n   * Limits bounds data.\n   */\n  @Input() set limitBounds(limitBounds: LimitBound[]) {\n    const regular = this.fb.array([]);\n    const shadow = this.fb.array([]);\n    limitBounds.forEach((limitBound: LimitBound) => {\n      // this transformation need to resolve HAD-1594 issue\n      //\n      // Need to cover both types\n      // because API describe number amount, but server return string\n      let regularAmount = limitBound.regular.amount ?? '';\n      let shadowAmount = limitBound.shadow.amount ?? '';\n      if (typeof regularAmount === 'string') {\n        regularAmount = regularAmount.split('.')[0];\n      } else {\n        regularAmount = Math.trunc(regularAmount);\n      }\n      if (typeof shadowAmount === 'string') {\n        shadowAmount = shadowAmount.split('.')[0];\n      } else {\n        shadowAmount = Math.trunc(shadowAmount);\n      }\n\n      regular.push(\n        new FormControl(\n          {\n            amount: regularAmount,\n            currency: ' ',\n          },\n          {\n            updateOn: 'change',\n          },\n        ),\n      );\n      shadow.push(\n        new FormControl(\n          {\n            amount: shadowAmount,\n            currency: ' ',\n          },\n          {\n            updateOn: 'change',\n          },\n        ),\n      );\n    });\n\n    this.limitForm.addControl('regular', regular);\n    this.limitForm.addControl('shadow', shadow);\n\n    this.limitBoundList = limitBounds;\n    this.onChanges();\n  }\n  /**\n   * Limit currency value\n   */\n  @Input() currency?: string;\n  /**\n   * Flag to show/hide loading state for submit btn\n   */\n  @Input() showLoadingSubmitBtn?: string;\n  /**\n   * List of BE error\n   */\n  @Input() errors?: any[];\n  /**\n   * Flag for displaying view template for regular limits\n   */\n  @Input() disableRegular?: boolean;\n  /**\n   * Flag for displaying view template for shadow limits\n   */\n  @Input() disableShadow?: boolean;\n  /**\n   * Propagate event when submit button was clicked.\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() submit: EventEmitter<any> = new EventEmitter<any>();\n  /**\n   * Close modal window event.\n   * Propagate event when modal window should be closed.\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() close: EventEmitter<any> = new EventEmitter<void>();\n\n  /**\n   * Reactive form for edit limits\n   */\n  readonly limitForm: FormGroup = this.fb.group({});\n  /**\n   * Bound list with full information\n   */\n  limitBoundList: LimitBound[] = [];\n  /**\n   * Flag which show when regular limits was edited\n   */\n  isRegularChanged = false;\n  /**\n   * Flag which show when shadow limits was edited\n   */\n  isShadowChanged = false;\n  /**\n   * Flag which show when form has zero value\n   */\n  showZeroLimitAlert = false;\n  /**\n   * Flag which show when user dismiss Zero info block.\n   */\n  zeroLimitAlertDismissed = false;\n\n  private readonly destroy$ = new Subject();\n\n  constructor(private fb: FormBuilder, private readonly hostEl: ElementRef, private readonly _ref: ChangeDetectorRef) {}\n\n  /**\n   * Disabled submit button getter\n   */\n  get isDisabled(): boolean {\n    return Boolean(\n      this.showLoadingSubmitBtn || this.limitForm.invalid || !(this.isRegularChanged || this.isShadowChanged),\n    );\n  }\n\n  /**\n   * Submit limit form\n   */\n  submitForm(): void {\n    if (!this.validateForm()) {\n      this.submit.emit({\n        isRegularChanged: this.isRegularChanged,\n        isShadowChanged: this.isShadowChanged,\n        limitValue: this.limitForm.value,\n      });\n    }\n  }\n\n  /**\n   * Track when form is changed\n   */\n  onChanges(): void {\n    (this.limitForm.get('regular') as FormGroup).valueChanges.pipe(take(1), takeUntil(this.destroy$)).subscribe(() => {\n      this.isRegularChanged = true;\n    });\n\n    (this.limitForm.get('shadow') as FormGroup).valueChanges.pipe(take(1), takeUntil(this.destroy$)).subscribe(() => {\n      this.isShadowChanged = true;\n    });\n\n    // FE form validation\n    // made in component, because custom validator/asyncValidator doesn't work properly\n    this.limitForm.valueChanges.pipe(debounceTime(500), takeUntil(this.destroy$)).subscribe(() => this.validateForm());\n  }\n\n  /**\n   * Function for form validation\n   */\n  validateForm(): boolean {\n    const formGroupValue: { regular: any[]; shadow: any[] } = this.limitForm.value;\n    let hasRegularError = false;\n    let hasShadowError = false;\n\n    if (formGroupValue) {\n      this.limitForm.setErrors(null);\n\n      if (this.showRegularLimit && !this.disableRegular) {\n        const controlsRegular = (<FormArray>this.limitForm.get('regular')).controls;\n        hasRegularError = this.checkBounds(formGroupValue.regular, controlsRegular);\n      }\n      if (this.showShadowLimit && !this.disableShadow) {\n        const controlsShadow = (<FormArray>this.limitForm.get('shadow')).controls;\n        hasShadowError = this.checkBounds(formGroupValue.shadow, controlsShadow);\n      }\n\n      // TODO check if validation working without it after updating to Angular 9\n      this._ref.markForCheck();\n    }\n\n    return hasRegularError || hasShadowError;\n  }\n\n  /**\n   * Function for validation one type of the limit\n   * @param boundList\n   * @param controls\n   */\n  checkBounds(boundList: any, controls: any): boolean {\n    // clear all previous errors\n    controls.forEach((item: any) => {\n      item.setErrors(null);\n    });\n\n    for (let i = 0; i < boundList.length; i++) {\n      for (let j = i + 1; j < boundList.length; j++) {\n        const firstAmount =\n          boundList[i]?.amount && parseInt(boundList[i].amount.toString().replace(AMOUNT_DELIMETER_REG_EXP, ''), 10);\n        const secondAmount =\n          boundList[j]?.amount && parseInt(boundList[j].amount.toString().replace(AMOUNT_DELIMETER_REG_EXP, ''), 10);\n        if (firstAmount && secondAmount && firstAmount > secondAmount) {\n          controls[i].setErrors({ biggerThan: this.limitBoundList[j].period });\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Track when control has zero amount and Zero info message should be shown\n   */\n  shouldZeroAlertBeShown(): boolean {\n    if (this.zeroLimitAlertDismissed) {\n      return false;\n    }\n    if (this.showZeroLimitAlert) {\n      return true;\n    }\n    const value = this.limitForm.value;\n    const isZero =\n      value.regular.find((item: any) => item?.amount === '0') || value.shadow.find((item: any) => item?.amount === '0');\n    if (isZero) {\n      this.showZeroLimitAlert = Boolean(isZero);\n      this.scrollToZeroInfo();\n    }\n    return isZero;\n  }\n\n  /**\n   * Scroll to zero limit info block\n   */\n  scrollToZeroInfo(): void {\n    const zeroInfoElement = <HTMLElement>this.hostEl.nativeElement.querySelector('#zeroLimitInfo');\n    if (zeroInfoElement) {\n      setTimeout(() => {\n        zeroInfoElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n}\n\n@Directive({\n  selector: '[bbEditLimitCustomizable]',\n})\nexport class EditLimitCustomizableDirective extends BbTemplate<EditLimitComponent, void> {}\n","<ng-container bbEditLimitCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbEditLimitCustomizable let-hostRef>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <bb-alert-ui\n        *ngFor=\"let error of hostRef.errors\"\n        [title]=\"error.message\"\n        modifier=\"error\"\n        data-role=\"edit-limit-error-alert\"></bb-alert-ui>\n\n      <div id=\"zeroLimitInfo\">\n        <bb-alert-ui\n          *ngIf=\"hostRef.shouldZeroAlertBeShown()\"\n          title=\"'Zero limits' means no transaction can be performed\"\n          i18n-title=\"Info message about zero limit amount@@limits.edit.zero-limit-info.title\"\n          modifier=\"info\"\n          [dismissible]=\"true\"\n          (close)=\"hostRef.zeroLimitAlertDismissed = true\"\n          data-role=\"edit-limit-zero-info-alert\"></bb-alert-ui>\n      </div>\n      <div class=\"bb-block bb-block--md\"></div>\n      <div class=\"row bb-subheader bb-subheader--regular bb-text-semi-bold bb-block bb-block--md\">\n        <div class=\"bb-stack\" data-role=\"edit-limit-column-name-header\"\n             [ngClass]=\"hostRef.showRegularLimit && hostRef.showShadowLimit ? 'col-5' : 'col-8'\">\n          <span\n            class=\"bb-stack__item bb-stack__item--spacing-xs\"\n            i18n=\"Limits bound header title@@limits.edit.header.period\"\n          >Period</span\n          >\n          <bb-icon-ui\n            [bbTooltip]=\"limitsTitleTooltip\"\n            placement=\"bottom\"\n            triggers=\"hover\"\n            name=\"info\"\n            size=\"sm\"></bb-icon-ui>\n        </div>\n        <div\n          class=\"col\"\n          *ngIf=\"hostRef.showRegularLimit\"\n          i18n=\"Limits bound header title@@limits.edit.header.limits\"\n          data-role=\"edit-limit-column-regular-limit-header\">\n          Limit\n        </div>\n        <div\n          class=\"col\"\n          *ngIf=\"hostRef.showShadowLimit\"\n          i18n=\"Limits bound header title@@limits.edit.header.shadow-limits\"\n          data-role=\"edit-limit-column-shadow-limit-header\">\n          Shadow limit\n        </div>\n      </div>\n      <hr />\n\n      <div class=\"bb-list bb-list--density-sm bb-block bb-block--lg\">\n        <div\n          class=\"bb-list__item\"\n          *ngFor=\"let bound of hostRef.limitBoundList; let i = index\"\n          data-role=\"edit-limit-bound-item\">\n          <div class=\"d-flex bb-block bb-block--sm\"></div>\n          <div class=\"row align-items-center\">\n            <div\n              class=\"bb-subtitle bb-block bb-block--sm\"\n              [ngClass]=\"hostRef.showRegularLimit && hostRef.showShadowLimit ? 'col-5' : 'col-8'\"\n              i18n=\"Limits bound frequency name@@limits.edit.limits-bound.name\"\n              data-role=\"edit-limit-bound-item-name\">\n              { bound.period, select, transactional-limits-bound {Per transaction} daily {Daily} weekly {Weekly} monthly\n              {Monthly} quarterly {Quarterly} yearly {Yearly} other { {{ bound.period }} } }\n            </div>\n            <div\n              class=\"col\"\n              *ngIf=\"hostRef.showRegularLimit\"\n              [ngSwitch]=\"hostRef.disableRegular\"\n              data-role=\"edit-limit-bound-item-regular\">\n              <div class=\"bb-subtitle\" *ngSwitchCase=\"true\">\n                <bb-amount-ui\n                  *ngIf=\"hostRef.limitForm.get('regular').controls[i].value.amount; else noAmount\"\n                  [currency]=\"hostRef.currency\"\n                  [amount]=\"hostRef.limitForm.get('regular').controls[i].value.amount\"\n                  [mapCurrency]=\"true\"\n                  data-role=\"edit-limit-bound-item-regular-limit-disabled\"></bb-amount-ui>\n              </div>\n              <div *ngSwitchDefault>\n                <span\n                  [attr.id]=\"i + '-regular-limit-label'\"\n                  class=\"sr-only\"\n                  i18n=\"Regular limit currency input label@@limits.edit.limits-bound.currency-input.regular\"\n                  data-role=\"edit-limit-bound-item-regular-limit-aria-label\">\n                  { bound.period, select, transactional-limits-bound {Per transaction limit} daily {Daily limit} weekly\n                  {Weekly limit} monthly {Monthly limit} quarterly {Quarterly limit} yearly {Yearly limit} other {\n                  {{ bound.period }} limit } }\n                </span>\n                <bb-currency-input-ui\n                  [formControl]=\"hostRef.limitForm.get('regular').controls[i]\"\n                  placeholder=\"\"\n                  [integer]=\"true\"\n                  [allowNegativeValue]=\"false\"\n                  integerLabel=\" \"\n                  [integerLabelSrOnly]=\"true\"\n                  resultType=\"string\"\n                  [disabled]=\"hostRef.disableRegular\"\n                  [aria-labelledby]=\"i + '-regular-limit-label'\"\n                  [aria-describedby]=\"i + '-regular-limit-error'\"\n                  data-role=\"edit-limit-bound-item-regular-limit\"></bb-currency-input-ui>\n              </div>\n            </div>\n            <div\n              class=\"col\"\n              *ngIf=\"hostRef.showShadowLimit\"\n              [ngSwitch]=\"hostRef.disableShadow\"\n              data-role=\"edit-limit-bound-item-shadow\">\n              <div class=\"bb-subtitle\" *ngSwitchCase=\"true\">\n                <bb-amount-ui\n                  *ngIf=\"hostRef.limitForm.get('shadow').controls[i].value.amount; else noAmount\"\n                  [currency]=\"hostRef.currency\"\n                  [amount]=\"hostRef.limitForm.get('shadow').controls[i].value.amount\"\n                  [mapCurrency]=\"true\"\n                  data-role=\"edit-limit-bound-item-shadow-limit-disabled\"></bb-amount-ui>\n              </div>\n              <div *ngSwitchDefault>\n                <span\n                  [attr.id]=\"i + '-shadow-limit-label'\"\n                  class=\"sr-only\"\n                  i18n=\"Shadow limit currency input label@@limits.edit.limits-bound.currency-input.shadow\"\n                  data-role=\"edit-limit-bound-item-shadow-limit-aria-label\">\n                  { bound.period, select, transactional-limits-bound {Per transaction shadow limit} daily {Daily shadow\n                  limit} weekly {Weekly shadow limit} monthly {Monthly shadow limit} quarterly {Quarterly shadow limit}\n                  yearly {Yearly shadow limit} other { {{ bound.period }} shadow limit } }\n                </span>\n                <bb-currency-input-ui\n                  [formControl]=\"hostRef.limitForm.get('shadow').controls[i]\"\n                  placeholder=\"\"\n                  [integer]=\"true\"\n                  [allowNegativeValue]=\"false\"\n                  integerLabel=\" \"\n                  [integerLabelSrOnly]=\"true\"\n                  resultType=\"string\"\n                  [disabled]=\"hostRef.disableShadow\"\n                  [aria-labelledby]=\"i + '-shadow-limit-label'\"\n                  [aria-describedby]=\"i + '-shadow-limit-error'\"\n                  data-role=\"edit-limit-bound-item-shadow-limit\"></bb-currency-input-ui>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div\n              class=\"bb-subtitle\"\n              [ngClass]=\"hostRef.showRegularLimit && hostRef.showShadowLimit ? 'col-5' : 'col-8'\"></div>\n            <div class=\"col\" *ngIf=\"hostRef.showRegularLimit\">\n              <div\n                class=\"bb-subheader bb-subheader--regular bb-text-support break-word\"\n                *ngIf=\"bound.regularConsumption\"\n                [hidden]=\"hostRef.limitForm.get('regular').controls[i].invalid\">\n                <bb-amount-ui\n                  [currency]=\"hostRef.currency\"\n                  [amount]=\"bound.regularConsumption\"\n                  [mapCurrency]=\"true\"\n                  data-role=\"edit-limit-bound-item-regular-consumed\"></bb-amount-ui>\n                <span i18n=\"Consumed amount for limit@@limits.edit.limits-bound.consumed\"> consumed</span>\n              </div>\n\n              <bb-input-validation-message-ui\n                [showErrors]=\"hostRef.limitForm.get('regular').controls[i].invalid\"\n                [messageId]=\"i + '-regular-limit-error'\">\n                <span\n                  *ngIf=\"hostRef.limitForm.get('regular').controls[i].invalid\"\n                  i18n=\"Validation error for regular limit@@limits.edit.limits-bound.regular.error.validation\"\n                  data-role=\"edit-limit-bound-item-regular-error-msg\">\n                  { hostRef.limitForm.get('regular').controls[i].errors.biggerThan, select, daily {Can't be higher than\n                  Daily limit} weekly {Can't be higher than Weekly limit} monthly {Can't be higher than Monthly limit}\n                  quarterly {Can't be higher than Quarterly limit} yearly {Can't be higher than Yearly limit} other {\n                  Can't be higher than {{ hostRef.limitForm.get('regular').controls[i].errors.biggerThan }} limit} }\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n            <div class=\"col\" *ngIf=\"hostRef.showShadowLimit\">\n              <div\n                class=\"bb-subheader bb-subheader--regular bb-text-support break-word\"\n                *ngIf=\"bound.shadowConsumption\"\n                [hidden]=\"hostRef.limitForm.get('shadow').controls[i].invalid\">\n                <bb-amount-ui\n                  [currency]=\"hostRef.currency\"\n                  [amount]=\"bound.shadowConsumption\"\n                  [mapCurrency]=\"true\"\n                  data-role=\"edit-limit-bound-item-shadow-consumed\"></bb-amount-ui>\n                <span i18n=\"Consumed amount for limit@@limits.edit.limits-bound.consumed\"> consumed</span>\n              </div>\n\n              <bb-input-validation-message-ui\n                [showErrors]=\"hostRef.limitForm.get('shadow').controls[i].invalid\"\n                [messageId]=\"i + '-shadow-limit-error'\">\n                <span\n                  *ngIf=\"hostRef.limitForm.get('shadow').controls[i].invalid\"\n                  i18n=\"Validation error for shadow limit@@limits.edit.limits-bound.shadow.error.validation\"\n                  data-role=\"edit-limit-bound-item-shadow-error-msg\">\n                  { hostRef.limitForm.get('shadow').controls[i].errors.biggerThan, select, daily {Can't be higher than\n                  Daily shadow limit} weekly {Can't be higher than Weekly shadow limit} monthly {Can't be higher than\n                  Monthly shadow limit} quarterly {Can't be higher than Quarterly shadow limit} yearly {Can't be higher\n                  than Yearly shadow limit} other { Can't be higher than\n                  {{ hostRef.limitForm.get('shadow').controls[i].errors.biggerThan }} shadow limit} }\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <bb-load-button-ui\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          [isLoading]=\"hostRef.showLoadingSubmitBtn\"\n          (bbKeyboardClick)=\"!hostRef.isDisabled && hostRef.submitForm()\"\n          [disabled]=\"hostRef.isDisabled\"\n          data-role=\"edit-limit-submit\">\n          <span i18n=\"Save button@@limits.edit.action-button.save\">Save</span>\n        </bb-load-button-ui>\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (bbKeyboardClick)=\"hostRef.close.emit()\"\n          i18n=\"Cancel button@@limits.edit.action-button.cancel\"\n          data-role=\"edit-limit-cancel\">\n          Cancel\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n\n  <ng-template #noAmount>\n    <bb-icon-ui\n      data-role=\"edit-limit-bound-no-amount\"\n      class=\"bb-text-support\"\n      name=\"remove\"\n      color=\"support\"></bb-icon-ui>\n  </ng-template>\n\n  <ng-template #limitsTitleTooltip>\n    <span i18n=\"Limits modal header title tooltip @@limits.edit.period.tooltip\">\n      When setting limits, ‘per transaction’ should be your smallest value, with ‘yearly’ the largest.\n    </span>\n  </ng-template>\n</ng-template>\n"]}