import { Component, Directive, EventEmitter, Input, Output, TemplateRef, ViewChild, } from '@angular/core';
import { FormControl } from '@angular/forms';
import { combineLatest, of, Subject } from 'rxjs';
import { catchError, map, takeUntil } from 'rxjs/operators';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { NotificationService } from '@backbase/ui-ang/notification';
import { CurrencyService } from '../services/currency.service';
import { LimitTypes } from '../models/limit-types';
import { LegalEntitiesHttpService, ServiceAgreementHttpService, } from '@backbase/data-ang/accesscontrol';
import * as i0 from "@angular/core";
import * as i1 from "../services/currency.service";
import * as i2 from "@backbase/ui-ang/notification";
import * as i3 from "@backbase/data-ang/accesscontrol";
import * as i4 from "@backbase/ui-ang/header";
import * as i5 from "@backbase/ui-ang/icon";
import * as i6 from "@backbase/ui-ang/ellipsis";
import * as i7 from "@backbase/ui-ang/dropdown-single-select";
import * as i8 from "@backbase/ui-ang/loading-indicator";
import * as i9 from "@angular/common";
import * as i10 from "@angular/forms";
export class ManageLimitsModalHeaderComponent {
    constructor(currencyListService, notificationService, serviceAgreementHttpService, legalEntitiesService) {
        this.currencyListService = currencyListService;
        this.notificationService = notificationService;
        this.serviceAgreementHttpService = serviceAgreementHttpService;
        this.legalEntitiesService = legalEntitiesService;
        /**
         * Currency drop down form control
         */
        this.currencyControl = new FormControl();
        /**
         * Close modal window event.
         * Propagate event when modal window should be closed.
         */
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.close = new EventEmitter();
        /**
         * Limit types enumeration
         */
        this.LimitTypes = LimitTypes;
        /**
         * Limit types stream
         */
        this.limitType$$ = of(true);
        /**
         * Service agreement name stream
         */
        this.saName$$ = of(undefined);
        /**
         * Legal entity name stream
         */
        this.leName$$ = of(undefined);
        /**
         * Show notification stream
         */
        this.showNotification$ = new Subject();
        /**
         * Unsubscribe stream
         */
        this.destroy$ = new Subject();
        /**
         * Currency Info stream
         */
        this.currencyInfo$ = this.currencyListService
            .currencyInfo()
            .pipe(map((currencyInfo) => {
            if (!this.currency) {
                // show error message if no default currency
                if (currencyInfo && currencyInfo.defaultCurrency) {
                    this.currencyControl.setValue(currencyInfo.defaultCurrency);
                }
                else {
                    this.closeModal();
                }
            }
            return currencyInfo;
        }), 
        // show error message if currency is not set already
        catchError(() => {
            if (!this.currency) {
                this.closeModal();
            }
            return of(false);
        }));
    }
    ngOnInit() {
        this.saName$$ = this.serviceAgreementId ? this.serviceAgreementHttpService
            .getServiceAgreementItem({ serviceAgreementId: this.serviceAgreementId })
            .pipe(map(sa => sa.name), catchError(() => of(undefined))) : of(this.subTitleSAName);
        this.leName$$ = this.legalEntityId ? this.legalEntitiesService
            .getLegalEntityById({ legalEntityId: this.legalEntityId })
            .pipe(map(le => le.name), catchError(() => of(undefined))) : of(this.subTitleLEName);
        this.limitType$$ = combineLatest([this.saName$$, this.leName$$])
            .pipe(map(([saName, leName]) => {
            if (leName && !saName && !this.subTitleUserName && !this.subTitleJRName) {
                return LimitTypes.LE_BF_PRIVILEGE;
            }
            else if (leName && this.subTitleUserName && !saName && !this.subTitleJRName) {
                return LimitTypes.LE_USER;
            }
            else if (this.subTitleUserName && this.subTitleJRName && !leName && !saName) {
                return LimitTypes.USER_JR_BF_PRIVILEGE;
            }
            else if (saName && !leName && !this.subTitleUserName && !this.subTitleJRName) {
                return LimitTypes.SA;
            }
            else if (saName && this.subTitleUserName && !this.subTitleJRName && !leName) {
                return LimitTypes.SA_USER;
            }
            else if (saName && leName && !this.subTitleJRName && !this.subTitleUserName) {
                return LimitTypes.SA_LE;
            }
            else if (saName && this.subTitleJRName && !leName && !this.subTitleUserName) {
                return LimitTypes.SA_JR_BF_PRIVILEGE;
            }
            else {
                return true;
            }
        }));
        this.showNotification$.pipe(takeUntil(this.destroy$)).subscribe(() => {
            this.notificationService.showNotification({
                modifier: 'error',
                header: this.currencyErrorNotificationHeader,
                message: this.currencyErrorNotificationMessage,
                dismissible: true,
                ttl: this.notificationDismissTime,
            });
        });
    }
    /**
     * Show error notification and close modal
     */
    closeModal() {
        this.showNotification$.next();
        this.close.emit();
    }
    ngOnDestroy() {
        this.destroy$.next();
    }
}
/** @nocollapse */ ManageLimitsModalHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageLimitsModalHeaderComponent, deps: [{ token: i1.CurrencyService }, { token: i2.NotificationService }, { token: i3.ServiceAgreementHttpService }, { token: i3.LegalEntitiesHttpService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ManageLimitsModalHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ManageLimitsModalHeaderComponent, selector: "bb-manage-limits-modal-header", inputs: { currency: "currency", currencyControl: "currencyControl", defaultTitle: "defaultTitle", title: "title", serviceAgreementId: "serviceAgreementId", legalEntityId: "legalEntityId", subTitleUserName: "subTitleUserName", subTitleJRName: "subTitleJRName", subTitleLEName: "subTitleLEName", subTitleSAName: "subTitleSAName", notificationDismissTime: "notificationDismissTime" }, outputs: { close: "close" }, viewQueries: [{ propertyName: "currencyErrorNotificationHeader", first: true, predicate: ["currencyErrorNotificationHeader"], descendants: true, read: TemplateRef, static: true }, { propertyName: "currencyErrorNotificationMessage", first: true, predicate: ["currencyErrorNotificationMessage"], descendants: true, read: TemplateRef, static: true }], ngImport: i0, template: "<ng-container\n  bbManageLimitsModalHeaderCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    currencyInfo: currencyInfo$ | async,\n    saName: saName$$ | async,\n    leName: leName$$ | async,\n    limitType: limitType$$ | async\n  }\"></ng-container>\n\n<ng-template\n  bbManageLimitsModalHeaderCustomizable\n  let-hostRef\n  let-currencyInfo=\"context.currencyInfo\"\n  let-saName=\"context.saName\"\n  let-leName=\"context.leName\"\n  let-limitType=\"context.limitType\">\n  <div *ngIf=\"(hostRef.currency || currencyInfo) && limitType; else loading\">\n    <div class=\"bb-block bb-block--lg\">\n      <bb-header-ui\n        headingType=\"h2\"\n        [heading]=\"hostRef.title || hostRef.defaultTitle\"\n        data-role=\"manage-limits-header-title\"></bb-header-ui>\n    </div>\n\n    <div class=\"bb-stack\" data-role=\"manage-limits-header-subtitle\">\n      <ng-container class=\"bb-list__item\" [ngSwitch]=\"limitType\">\n        <!-- LE + BF + PRIVILEGE -->\n        <div *ngSwitchCase=\"LimitTypes.LE_BF_PRIVILEGE\"\n             [class.col-6] = \"leName.length > 20\"\n             class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\"\n             data-role=\"le-name-card\">\n          <div class=\"bb-stack\">\n            <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"domain\" size=\"sm\"></bb-icon-ui>\n            <bb-ellipsis-ui\n              data-role=\"le-name-title\"\n              class=\"bb-subtitle\"\n              [lineClamp]=\"1\"\n              text=\"{{ leName }}\"\n            ></bb-ellipsis-ui>\n          </div>\n        </div>\n        <!-- LE + USER -->\n        <ng-container *ngSwitchCase=\"LimitTypes.LE_USER\">\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"le-name-card\"\n               [class.col-4] = \"leName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"domain\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"le-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ leName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n          <bb-icon-ui color=\"muted\" name=\"navigate-next\" size=\"sm\" class=\"bb-stack__item bb-stack__item--spacing-xs\"></bb-icon-ui>\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"user-name-card\"\n               [class.col-4] = \"hostRef.subTitleUserName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"user\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"user-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ hostRef.subTitleUserName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n        </ng-container>\n        <!-- USER + JR + BF + PRIVILEGE -->\n        <ng-container *ngSwitchCase=\"LimitTypes.USER_JR_BF_PRIVILEGE\">\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"user-name-card\"\n               [class.col-4] = \"hostRef.subTitleUserName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"user\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"user-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ hostRef.subTitleUserName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n          <bb-icon-ui color=\"muted\" name=\"navigate-next\" size=\"sm\" class=\"bb-stack__item bb-stack__item--spacing-xs\"></bb-icon-ui>\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"jr-name-card\"\n               [class.col-4] = \"hostRef.subTitleJRName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"assignment-ind\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"jr-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ hostRef.subTitleJRName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n        </ng-container>\n        <!-- SA -->\n        <div *ngSwitchCase=\"LimitTypes.SA\"\n             class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\"\n             [class.col-6] = \"saName.length > 20\"\n             data-role=\"sa-name-card\">\n          <div class=\"bb-stack\">\n            <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"dns\" size=\"sm\"></bb-icon-ui>\n            <bb-ellipsis-ui\n              data-role=\"sa-name-title\"\n              class=\"bb-subtitle\"\n              [lineClamp]=\"1\"\n              text=\"{{ saName }}\"\n            ></bb-ellipsis-ui>\n          </div>\n        </div>\n        <!-- SA + USER -->\n        <ng-container *ngSwitchCase=\"LimitTypes.SA_USER\">\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"sa-name-card\"\n               [class.col-4] = \"saName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"dns\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"sa-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ saName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n          <bb-icon-ui color=\"muted\" name=\"navigate-next\" size=\"sm\" class=\"bb-stack__item bb-stack__item--spacing-xs\"></bb-icon-ui>\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"user-name-card\"\n               [class.col-4] = \"hostRef.subTitleUserName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"user\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"user-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ hostRef.subTitleUserName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n        </ng-container>\n        <!-- SA + LE -->\n        <ng-container *ngSwitchCase=\"LimitTypes.SA_LE\">\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"sa-name-card\"\n               [class.col-4] = \"saName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"dns\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"sa-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ saName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n          <bb-icon-ui color=\"muted\" name=\"navigate-next\" size=\"sm\" class=\"bb-stack__item bb-stack__item--spacing-xs\"></bb-icon-ui>\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"le-name-card\"\n               [class.col-4] = \"leName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"domain\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"le-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ leName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n        </ng-container>\n        <!-- SA + JR + BF + PRIVILEGE -->\n        <ng-container *ngSwitchCase=\"LimitTypes.SA_JR_BF_PRIVILEGE\">\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"sa-name-card\"\n               [class.col-4] = \"saName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"dns\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"sa-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ saName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n          <bb-icon-ui color=\"muted\" name=\"navigate-next\" size=\"sm\" class=\"bb-stack__item bb-stack__item--spacing-xs\"></bb-icon-ui>\n          <div class=\"bb-limit-header-card bb-stack__item bb-stack__item--spacing-xs\" data-role=\"jr-name-card\"\n               [class.col-4] = \"hostRef.subTitleJRName.length > 20\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui class=\"bb-stack__item bb-stack__item--spacing-xs\" name=\"assignment-ind\" size=\"sm\"></bb-icon-ui>\n              <bb-ellipsis-ui\n                data-role=\"jr-name-title\"\n                class=\"bb-subtitle\"\n                [lineClamp]=\"1\"\n                text=\"{{ hostRef.subTitleJRName }}\"\n              ></bb-ellipsis-ui>\n            </div>\n          </div>\n        </ng-container>\n      </ng-container>\n\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n          <bb-dropdown-single-select-ui\n            *ngIf=\"!hostRef.currency\"\n            aria-label=\"Currency\"\n            i18n-aria-label=\"Currency dropdown label@@manage-limits-modal.header.dropdown.label\"\n            data-role=\"manage-limits-header-currency-dropdown\"\n            [formControl]=\"hostRef.currencyControl\"\n            [options]=\"currencyInfo?.allowedCurrencyList\"\n            iconName=\"caret-down\"></bb-dropdown-single-select-ui>\n\n        <div\n          class=\"bb-stack bb-stack--density-sm\"\n          data-role=\"manage-limits-header-currency-container\"\n          *ngIf=\"hostRef.currency\">\n          <span\n            class=\"bb-stack__item\"\n            i18n=\"Currency dropdown label@@manage-limits-modal.header.currency-dropdown.label\"\n            >Currency:</span\n          >\n          <span class=\"bb-stack__item bb-text-bold\" data-role=\"manage-limits-header-currency\">{{ hostRef.currency }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #loading>\n    <div class=\"bb-state-container bb-block bb-block--lg\" data-role=\"manage-limits-header-loading-state\">\n      <bb-loading-indicator-ui\n        loaderSize=\"md\"\n        text=\"Loading...\"\n        i18n-text=\"Loading text@@manage-limits-modal.loading.text\"></bb-loading-indicator-ui>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #currencyErrorNotificationHeader>\n  <h5 i18n=\"Error notification header message@@manage-limits-modal.header.notification.error-header\">Unknown Error</h5>\n</ng-template>\n\n<ng-template #currencyErrorNotificationMessage>\n  <p i18n=\"Error notification message@@manage-limits-modal.header.notification.error-message\">\n    Try to reload the page or contact the system administrator.\n  </p>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i4.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i5.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i6.EllipsisComponent; }), selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }, { type: i0.forwardRef(function () { return i7.DropdownSingleSelectComponent; }), selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i0.forwardRef(function () { return i8.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i0.forwardRef(function () { return ManageLimitsModalHeaderCustomizableDirective; }), selector: "[bbManageLimitsModalHeaderCustomizable]" }, { type: i0.forwardRef(function () { return i9.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i9.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0.forwardRef(function () { return i9.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0.forwardRef(function () { return i10.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i10.FormControlDirective; }), selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }], pipes: { "async": i0.forwardRef(function () { return i9.AsyncPipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageLimitsModalHeaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-manage-limits-modal-header',
                    templateUrl: 'manage-limits-modal-header.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrencyService }, { type: i2.NotificationService }, { type: i3.ServiceAgreementHttpService }, { type: i3.LegalEntitiesHttpService }]; }, propDecorators: { currency: [{
                type: Input
            }], currencyControl: [{
                type: Input
            }], defaultTitle: [{
                type: Input
            }], title: [{
                type: Input
            }], serviceAgreementId: [{
                type: Input
            }], legalEntityId: [{
                type: Input
            }], subTitleUserName: [{
                type: Input
            }], subTitleJRName: [{
                type: Input
            }], subTitleLEName: [{
                type: Input
            }], subTitleSAName: [{
                type: Input
            }], notificationDismissTime: [{
                type: Input
            }], close: [{
                type: Output
            }], currencyErrorNotificationHeader: [{
                type: ViewChild,
                args: ['currencyErrorNotificationHeader', { read: TemplateRef, static: true }]
            }], currencyErrorNotificationMessage: [{
                type: ViewChild,
                args: ['currencyErrorNotificationMessage', { read: TemplateRef, static: true }]
            }] } });
export class ManageLimitsModalHeaderCustomizableDirective extends BbTemplate {
}
/** @nocollapse */ ManageLimitsModalHeaderCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageLimitsModalHeaderCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ ManageLimitsModalHeaderCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ManageLimitsModalHeaderCustomizableDirective, selector: "[bbManageLimitsModalHeaderCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ManageLimitsModalHeaderCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbManageLimitsModalHeaderCustomizable]',
                }]
        }] });
//# sourceMappingURL=manage-limits-modal-header.component.js.map