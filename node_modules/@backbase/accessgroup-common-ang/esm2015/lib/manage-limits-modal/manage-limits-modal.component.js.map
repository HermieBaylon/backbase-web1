{"version":3,"file":"manage-limits-modal.component.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-common-ang/src/lib/manage-limits-modal/manage-limits-modal.component.ts","../../../../../../libs/accessgroup-common-ang/src/lib/manage-limits-modal/manage-limits-modal.component.html"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,SAAS,EACT,YAAY,EACZ,KAAK,EAGL,MAAM,EAEN,SAAS,GACV,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,eAAe,EAAc,MAAM,MAAM,CAAC;AAC1E,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;AAEvF,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAG3D,OAAO,EAAE,mBAAmB,EAAE,MAAM,+BAA+B,CAAC;AACpE,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAC;AACjF,OAAO,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAC1D,OAAO,EAAc,sBAAsB,EAAE,2BAA2B,EAAE,MAAM,mCAAmC,CAAC;;;;;;;;;AAGpH,MAAM,uBAAuB,GAAG,SAAS,CAAC;AAM1C,MAAM,OAAO,0BAA0B;IA8KrC,YACmB,mBAAwC,EACxC,aAA4B;QAD5B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,kBAAa,GAAb,aAAa,CAAe;QA/K/C;;WAEG;QAEH,6BAAwB,GAA8B,EAAE,CAAC;QACzD;;WAEG;QAEH,sCAAiC,GAA8B,EAAE,CAAC;QAClE;;WAEG;QAEH,sCAAiC,GAA8B,EAAE,CAAC;QAClE;;WAEG;QAEH,qCAAgC,GAA8B,EAAE,CAAC;QACjE;;WAEG;QAEH,qCAAgC,GAA8B,EAAE,CAAC;QACjE;;WAEG;QAEH,0BAAqB,GAA8B,EAAE,CAAC;QACtD;;WAEG;QAEH,mCAA8B,GAA8B,EAAE,CAAC;QAC/D;;WAEG;QAEH,mCAA8B,GAA8B,EAAE,CAAC;QAC/D;;WAEG;QAEH,kCAA6B,GAA8B,EAAE,CAAC;QAC9D;;WAEG;QAEH,kCAA6B,GAA8B,EAAE,CAAC;QAC9D;;WAEG;QAEH,sCAAiC,GAA8B,EAAE,CAAC;QAClE;;WAEG;QAEH,4CAAuC,GAA8B,EAAE,CAAC;QASxE;;WAEG;QACM,qBAAgB,GAAG,KAAK,CAAC;QAClC;;WAEG;QACM,oBAAe,GAAG,KAAK,CAAC;QA6CjC;;;WAGG;QACM,4BAAuB,GAAG,IAAI,CAAC;QACxC;;;WAGG;QACH,4DAA4D;QAClD,UAAK,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAE9C,yBAAoB,GAAG,IAAI,OAAO,EAAW,CAAC;QAC/D;;WAEG;QACM,mBAAc,GAAwB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAErF,oBAAe,GAAG,IAAI,OAAO,EAAO,CAAC;QACtD;;WAEG;QACM,cAAS,GAAoB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAEvE,0BAAqB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAC7E;;WAEG;QACM,oBAAe,GAAwB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAEvF,yBAAoB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAC5E;;WAEG;QACM,mBAAc,GAAwB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAEtG;;WAEG;QACM,oBAAe,GAAgB,IAAI,WAAW,EAAE,CAAC;QAE1D;;WAEG;QACc,sBAAiB,GAAG,IAAI,OAAO,EAG5C,CAAC;QACL;;WAEG;QACc,aAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;IAKvC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;YACvF,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;gBACxC,QAAQ;gBACR,MAAM;gBACN,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,IAAI;gBACjB,GAAG,EAAE,IAAI,CAAC,uBAAuB;aAClC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,KAAU;QACrB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAE5B,IAAI,WAAW,CAAC;QAChB,MAAM,eAAe,GAAU,EAAE,CAAC;QAClC,MAAM,QAAQ,GAAG,EAAE,CAAC;QAEpB,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,IAAI,KAAK,CAAC,gBAAgB,EAAE;YACxF,WAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAC3E,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClC,QAAQ,CAAC,IAAI,CACX,WAAW,CAAC,IAAI;gBACd,CAAC,CAAC,IAAI,CAAC,aAAa;qBACf,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,oCAAoC,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;qBACjG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,iBAAG,OAAO,EAAE,IAAI,IAAK,GAAG,EAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,iBAAG,OAAO,EAAE,IAAI,IAAK,GAAG,EAAG,CAAC,CAAC,CAC1G,CAAC;SACH;QAED,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,IAAI,KAAK,CAAC,eAAe,EAAE;YACrF,WAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAC1E,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClC,QAAQ,CAAC,IAAI,CACX,WAAW,CAAC,IAAI;gBACd,CAAC,CAAC,IAAI,CAAC,aAAa;qBACf,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,oCAAoC,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;qBAChG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,iBAAG,OAAO,EAAE,IAAI,IAAK,GAAG,EAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,iBAAG,OAAO,EAAE,IAAI,IAAK,GAAG,EAAG,CAAC,CAAC,CAC1G,CAAC;SACH;QAED,QAAQ,CAAC,QAAQ,CAAC;aACf,IAAI,CACH,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACrD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;aACA,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED;;;;OAIG;IACH,yBAAyB,CAAC,QAAa,EAAE,QAAe;QACtD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE5D,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,KAAK,uBAAuB,CAAC,CAAC,MAAM,EAAE;gBAC1F,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,CAAC;aAC7C;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;aACtD;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;aAAM,IAAI,MAAM,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,EAAE;YAC5C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;SAC5D;aAAM;YACL,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,KAAa,EAAE,EAAE;gBAC5C,IAAI,IAAI,CAAC,cAAc,KAAK,uBAAuB,EAAE;oBACnD,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACL,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC3D;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;aAC5C;SACF;QAED,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED;;;OAGG;IACH,gBAAgB,CAAC,MAAa;QAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,OAAO;SACR;QAED,MAAM,QAAQ,GAAU,EAAE,CAAC;QAC3B,MAAM,CAAC,OAAO,CAAC,CAAC,SAAc,EAAE,EAAE;YAChC,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;YAC9B,IAAI,KAAK,EAAE;gBACT,IAAI,KAAK,CAAC,YAAY,EAAE;oBACtB,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;iBAC9D;qBAAM,IAAI,KAAK,CAAC,OAAO,EAAE;oBACxB,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;iBAC3C;aACF;iBAAM,IAAI,SAAS,CAAC,OAAO,EAAE;gBAC5B,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;aAC/C;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACH,iBAAiB,CAAC,YAAiB;QACjC,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAI,YAAY,IAAI,YAAY,CAAC,WAAW,EAAE;YAC5C,QAAQ,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;SAC5C;aAAM,IAAI,YAAY,CAAC,OAAO,EAAE;YAC/B,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC;SAClD;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;;;OAIG;IACK,qBAAqB,CAAC,OAAY,EAAE,OAAgB;QAC1D,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;SAC5C;IACH,CAAC;IAED;;;OAGG;IACK,0BAA0B,CAAC,OAAY;QAC7C,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,gBAAgB,CACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,IAAI,CAAC,6BAA6B,EACtF,OAAO,CACR,CAAC;SACH;aAAM;YACL,IAAI,CAAC,gBAAgB,CACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC,IAAI,CAAC,8BAA8B,EACxF,OAAO,CACR,CAAC;SACH;IACH,CAAC;IAED;;;OAGG;IACK,4BAA4B,CAAC,OAAY;QAC/C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACnB,IAAI,CAAC,gBAAgB,CACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC,CAAC,IAAI,CAAC,iCAAiC,CAC/F,CAAC;YACF,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,gBAAgB,CACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC,CAAC,IAAI,CAAC,gCAAgC,CAC7F,CAAC;YACF,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtC;IACH,CAAC;IAED;;;OAGG;IACK,4BAA4B,CAAC,QAAe;QAClD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;YAC/C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,uCAAuC,EAAE,SAAS,CAAC,CAAC;SAChF;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iCAAiC,EAAE,SAAS,CAAC,CAAC;SAC1E;IACH,CAAC;IAED;;;OAGG;IACK,4BAA4B,CAAC,OAAY;QAC/C,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,uCAAuC,EAAE,SAAS,CAAC,CAAC;YAC/E,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iCAAiC,EAAE,SAAS,CAAC,CAAC;YACzE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvC;IACH,CAAC;IAED;;;;OAIG;IACK,gBAAgB,CAAC,UAAqC,EAAE,OAAY,SAAS;QACnF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YAC1B,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,UAAU;SACnB,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACK,8BAA8B,CAAC,UAAe,EAAE,QAAiB;QACvE,MAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QAElD,MAAM,WAAW,GAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YACvC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;YAClC,MAAM,EAAE,QAAQ;YAChB,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK;SACtD,CAAC;QACF,WAAW,CAAC,sBAAsB,CAAC,GAAG;YACpC,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC7C,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SAC7C;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAsB,EAAE,KAAa,EAAE,EAAE;;YACjE,MAAM,MAAM,GAAG,MAAA,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,0CAAE,MAAM,CAAC,OAAO,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;YAC1F,QAAQ,UAAU,CAAC,MAAM,EAAE;gBACzB,KAAK,2BAA2B;oBAC9B,WAAW,CAAC,2BAA2B,CAAC,GAAG;wBACzC,MAAM;qBACP,CAAC;oBACF,MAAM;gBACR,KAAK,OAAO,CAAC;gBACb,KAAK,QAAQ,CAAC;gBACd,KAAK,SAAS,CAAC;gBACf,KAAK,WAAW,CAAC;gBACjB,KAAK,QAAQ;oBACX,WAAW,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;oBAChE,MAAM;gBACR;oBACE,WAAW,CAAC,sBAAsB,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC;wBACrD,MAAM,EAAE,UAAU,CAAC,MAAM;wBACzB,MAAM;qBACP,CAAC,CAAC;oBACH,MAAM;aACT;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACrB,CAAC;IAEO,oCAAoC,CAAC,UAAe,EAAE,QAAiB;QAC7E,MAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,MAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QAClD,WAAW,CAAC,sBAAsB,CAAC,GAAG;YACpC,aAAa,EAAE,EAAE;SAClB,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAsB,EAAE,KAAa,EAAE,EAAE;;YACjE,MAAM,MAAM,GAAG,MAAA,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,0CAAE,MAAM,CAAC;YACpD,QAAQ,UAAU,CAAC,MAAM,EAAE;gBACzB,KAAK,2BAA2B;oBAC9B,WAAW,CAAC,2BAA2B,CAAC,GAAG;wBACzC,MAAM;qBACP,CAAC;oBACF,MAAM;gBACR,KAAK,OAAO,CAAC;gBACb,KAAK,QAAQ,CAAC;gBACd,KAAK,SAAS,CAAC;gBACf,KAAK,WAAW,CAAC;gBACjB,KAAK,QAAQ;oBACX,WAAW,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;oBAChE,MAAM;gBACR;oBACE,WAAW,CAAC,sBAAsB,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC;wBACrD,MAAM,EAAE,UAAU,CAAC,MAAM;wBACzB,MAAM;qBACP,CAAC,CAAC;oBACH,MAAM;aACT;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;IACrD,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,MAAe;QAC1B,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;2IAhfU,0BAA0B;+HAA1B,0BAA0B,onEC/BvC,24LAiJA,wxCDoYa,sCAAsC;4FAtftC,0BAA0B;kBAJtC,SAAS;mBAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,WAAW,EAAE,oCAAoC;iBAClD;sIAMC,wBAAwB;sBADvB,SAAS;uBAAC,kBAAkB;gBAM7B,iCAAiC;sBADhC,SAAS;uBAAC,2BAA2B;gBAMtC,iCAAiC;sBADhC,SAAS;uBAAC,2BAA2B;gBAMtC,gCAAgC;sBAD/B,SAAS;uBAAC,0BAA0B;gBAMrC,gCAAgC;sBAD/B,SAAS;uBAAC,0BAA0B;gBAMrC,qBAAqB;sBADpB,SAAS;uBAAC,eAAe;gBAM1B,8BAA8B;sBAD7B,SAAS;uBAAC,wBAAwB;gBAMnC,8BAA8B;sBAD7B,SAAS;uBAAC,wBAAwB;gBAMnC,6BAA6B;sBAD5B,SAAS;uBAAC,uBAAuB;gBAMlC,6BAA6B;sBAD5B,SAAS;uBAAC,uBAAuB;gBAMlC,iCAAiC;sBADhC,SAAS;uBAAC,mCAAmC;gBAM9C,uCAAuC;sBADtC,SAAS;uBAAC,yCAAyC;gBAK3C,IAAI;sBAAZ,KAAK;gBAIG,WAAW;sBAAnB,KAAK;gBAIG,gBAAgB;sBAAxB,KAAK;gBAIG,eAAe;sBAAvB,KAAK;gBAIG,QAAQ;sBAAhB,KAAK;gBAIG,QAAQ;sBAAhB,KAAK;gBAIG,QAAQ;sBAAhB,KAAK;gBAIG,OAAO;sBAAf,KAAK;gBAIG,WAAW;sBAAnB,KAAK;gBAIG,kBAAkB;sBAA1B,KAAK;gBAIG,aAAa;sBAArB,KAAK;gBAIG,sBAAsB;sBAA9B,KAAK;gBAIG,oBAAoB;sBAA5B,KAAK;gBAIG,oBAAoB;sBAA5B,KAAK;gBAIG,oBAAoB;sBAA5B,KAAK;gBAKG,uBAAuB;sBAA/B,KAAK;gBAMI,KAAK;sBAAd,MAAM;;AAmXT,MAAM,OAAO,sCAAuC,SAAQ,UAQ3D;;uJARY,sCAAsC;2IAAtC,sCAAsC;4FAAtC,sCAAsC;kBAHlD,SAAS;mBAAC;oBACT,QAAQ,EAAE,mCAAmC;iBAC9C","sourcesContent":["import {\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { forkJoin, Subject, of, BehaviorSubject, Observable } from 'rxjs';\nimport { finalize, takeUntil, catchError, distinctUntilChanged } from 'rxjs/operators';\n\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { LimitKey } from '@backbase/data-ang/limits';\n\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { AMOUNT_DELIMETER_REG_EXP } from '../constants/amount-delimeter-remover';\nimport { LimitsService } from './services/limits.service';\nimport { LimitBound, PERIODIC_LIMITS_BOUNDS, TRANSACTIONAL_LIMITS_BOUNDS } from './models/limits-bound-types.model';\n\nexport type ManageLimitsModalView = 'view' | 'edit';\nconst PENDING_APPROVAL_STATUS = 'PENDING';\n\n@Component({\n  selector: 'bb-manage-limits-modal',\n  templateUrl: 'manage-limits-modal.component.html',\n})\nexport class ManageLimitsModalComponent implements OnInit, OnDestroy {\n  /**\n   * Success both limits template reference\n   */\n  @ViewChild('successBothLimit')\n  successBothLimitTemplate: TemplateRef<any> | string = '';\n  /**\n   * Success Regular limits create template reference\n   */\n  @ViewChild('successRegularLimitCreate')\n  successRegularLimitCreateTemplate: TemplateRef<any> | string = '';\n  /**\n   * Success Regular limits update template reference\n   */\n  @ViewChild('successRegularLimitUpdate')\n  successRegularLimitUpdateTemplate: TemplateRef<any> | string = '';\n  /**\n   * Success Shadow limits create template reference\n   */\n  @ViewChild('successShadowLimitCreate')\n  successShadowLimitCreateTemplate: TemplateRef<any> | string = '';\n  /**\n   * Success shadow limit update template reference\n   */\n  @ViewChild('successShadowLimitUpdate')\n  successShadowLimitUpdateTemplate: TemplateRef<any> | string = '';\n  /**\n   * Fail both limits template reference\n   */\n  @ViewChild('failBothLimit')\n  failBothLimitTemplate: TemplateRef<any> | string = '';\n  /**\n   * Fail regular limit create template reference\n   */\n  @ViewChild('failRegularLimitCreate')\n  failRegularLimitCreateTemplate: TemplateRef<any> | string = '';\n  /**\n   * Fail regular limit update template reference\n   */\n  @ViewChild('failRegularLimitUpdate')\n  failRegularLimitUpdateTemplate: TemplateRef<any> | string = '';\n  /**\n   * Fail shadow limit create template reference\n   */\n  @ViewChild('failShadowLimitCreate')\n  failShadowLimitCreateTemplate: TemplateRef<any> | string = '';\n  /**\n   * Fail shadow limit update template reference\n   */\n  @ViewChild('failShadowLimitUpdate')\n  failShadowLimitUpdateTemplate: TemplateRef<any> | string = '';\n  /**\n   * Limits pending notification template reference\n   */\n  @ViewChild('limitsPendingNotificationTemplate')\n  limitsPendingNotificationTemplate: TemplateRef<any> | string = '';\n  /**\n   * Shadow Limits pending notification template reference\n   */\n  @ViewChild('shadowLimitsPendingNotificationTemplate')\n  shadowLimitsPendingNotificationTemplate: TemplateRef<any> | string = '';\n  /**\n   * Define which view template should be shown\n   */\n  @Input() view!: ManageLimitsModalView;\n  /**\n   * Limits data which passed to view containers.\n   */\n  @Input() limitBounds!: LimitBound[];\n  /**\n   * Flag for show/hide regular limit column.\n   */\n  @Input() showRegularLimit = false;\n  /**\n   * Flag for show/hide shadow limit column.\n   */\n  @Input() showShadowLimit = false;\n  /**\n   * Limit currency value\n   */\n  @Input() currency: string | undefined;\n  /**\n   * Limit key value\n   */\n  @Input() limitKey!: LimitKey;\n  /**\n   * Limit id's\n   */\n  @Input() limitIds?: { regular?: string; shadow?: string };\n  /**\n   * Pending flag\n   */\n  @Input() pending?: boolean;\n  /**\n   * Header title\n   */\n  @Input() headerTitle?: string;\n  /**\n   * Service agreement id\n   */\n  @Input() serviceAgreementId?: string;\n  /**\n   * Legal entity id\n   */\n  @Input() legalEntityId?: string;\n  /**\n   * User name for header subtitle\n   */\n  @Input() headerSubTitleUserName?: string;\n  /**\n   * Job role name for header subtitle\n   */\n  @Input() headerSubTitleJRName?: string;\n  /**\n   * Legal entity name for header subtitle\n   */\n  @Input() headerSubTitleLEName?: string;\n  /**\n   * Service agreement name for header subtitle\n   */\n  @Input() headerSubTitleSAName?: string;\n  /**\n   * Notification dismiss time in milliseconds (defaults to 3000)\n   * @default 3000\n   */\n  @Input() notificationDismissTime = 3000;\n  /**\n   * Close modal window event.\n   * Propagate event when modal window should be closed.\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() close: EventEmitter<void> = new EventEmitter<void>();\n\n  private readonly pendingSubmitSubject = new Subject<boolean>();\n  /**\n   * Stream of pending submit flag value\n   */\n  readonly pendingSubmit$: Observable<boolean> = this.pendingSubmitSubject.pipe(distinctUntilChanged());\n\n  private readonly errorsBESubject = new Subject<any>();\n  /**\n   * Stream of BE errors\n   */\n  readonly errorsBE$: Observable<any> = this.errorsBESubject.pipe(distinctUntilChanged());\n\n  private readonly disableRegularSubject = new BehaviorSubject<boolean>(false);\n  /**\n   * Stream of Disable regular limits flag\n   */\n  readonly disableRegular$: Observable<boolean> = this.disableRegularSubject.pipe(distinctUntilChanged());\n\n  private readonly disableShadowSubject = new BehaviorSubject<boolean>(false);\n  /**\n   * Stream of Disable shadow limits flag\n   */\n  readonly disableShadow$: Observable<boolean> = this.disableShadowSubject.pipe(distinctUntilChanged());\n\n  /**\n   * Currency form control\n   */\n  readonly currencyControl: FormControl = new FormControl();\n\n  /**\n   * Show notification stream\n   */\n  private readonly showNotification$ = new Subject<{\n    header: TemplateRef<any> | string;\n    modifier: 'success' | 'error';\n  }>();\n  /**\n   * Unsubscribe stream\n   */\n  private readonly destroy$ = new Subject();\n\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly limitsService: LimitsService,\n  ) {}\n\n  ngOnInit(): void {\n    this.showNotification$.pipe(takeUntil(this.destroy$)).subscribe(({ header, modifier }) => {\n      this.notificationService.showNotification({\n        modifier,\n        header,\n        message: '',\n        dismissible: true,\n        ttl: this.notificationDismissTime,\n      });\n    });\n  }\n\n  /**\n   * Function for calling create/update limits API calls\n   * @param event - any\n   */\n  submitLimits(event: any): void {\n    this.pendingSubmitSubject.next(true);\n    this.errorsBESubject.next();\n\n    let requestData;\n    const requestDataList: any[] = [];\n    const requests = [];\n\n    if (this.showRegularLimit && !this.disableRegularSubject.value && event.isRegularChanged) {\n      requestData = this.generateManageLimitRequestData(event.limitValue, false);\n      requestDataList.push(requestData);\n      requests.push(\n        requestData.uuid\n          ? this.limitsService\n              .updateLimit(requestData.uuid, this.generateManageLimitRequestUpdateData(event.limitValue, false))\n              .pipe(catchError(err => of({ isError: true, ...err })))\n          : this.limitsService.createNewLimit(requestData).pipe(catchError(err => of({ isError: true, ...err }))),\n      );\n    }\n\n    if (this.showShadowLimit && !this.disableShadowSubject.value && event.isShadowChanged) {\n      requestData = this.generateManageLimitRequestData(event.limitValue, true);\n      requestDataList.push(requestData);\n      requests.push(\n        requestData.uuid\n          ? this.limitsService\n              .updateLimit(requestData.uuid, this.generateManageLimitRequestUpdateData(event.limitValue, true))\n              .pipe(catchError(err => of({ isError: true, ...err })))\n          : this.limitsService.createNewLimit(requestData).pipe(catchError(err => of({ isError: true, ...err }))),\n      );\n    }\n\n    forkJoin(requests)\n      .pipe(\n        finalize(() => this.pendingSubmitSubject.next(false)),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(resp => this.parseSubmitLimitsResponse(resp, requestDataList));\n  }\n\n  /**\n   * Parse response of manage limits API\n   * @param response - any\n   * @param requests - any[]\n   */\n  parseSubmitLimitsResponse(response: any, requests: any[]): void {\n    const errors = response.filter((item: any) => item.isError);\n\n    if (!errors.length) {\n      if (response.filter((item: any) => item.approvalStatus === PENDING_APPROVAL_STATUS).length) {\n        this.showAllIsPendingNotification(requests);\n      } else {\n        this.showNotification(this.successBothLimitTemplate);\n      }\n      this.close.emit();\n    } else if (errors.length === response.length) {\n      this.showNotification(this.failBothLimitTemplate, 'error');\n    } else {\n      response.forEach((item: any, index: number) => {\n        if (item.approvalStatus === PENDING_APPROVAL_STATUS) {\n          this.showPendingLimitNotification(requests[index]);\n        } else {\n          this.showLimitNotification(requests[index], item.isError);\n        }\n      });\n      if (!this.currency) {\n        this.currency = this.currencyControl.value;\n      }\n    }\n\n    this.generateBEErrors(errors);\n  }\n\n  /**\n   * Generate list of BE errors\n   * @param errors - any[]\n   */\n  generateBEErrors(errors: any[]): void {\n    if (!errors.length) {\n      return;\n    }\n\n    const errorsBE: any[] = [];\n    errors.forEach((errorItem: any) => {\n      const error = errorItem.error;\n      if (error) {\n        if (error.errorDetails) {\n          errorsBE.push(...this.parseErrorDetails(error.errorDetails));\n        } else if (error.message) {\n          errorsBE.push({ message: error.message });\n        }\n      } else if (errorItem.message) {\n        errorsBE.push({ message: errorItem.message });\n      }\n    });\n    this.errorsBESubject.next(errorsBE);\n  }\n\n  /**\n   * Parse errorDetails object and return array of error\n   * @param errorDetails - any\n   * @return any[]\n   */\n  parseErrorDetails(errorDetails: any): any[] {\n    const errorsBE = [];\n    if (errorDetails && errorDetails.errorFields) {\n      errorsBE.push(...errorDetails.errorFields);\n    } else if (errorDetails.message) {\n      errorsBE.push({ message: errorDetails.message });\n    }\n    return errorsBE;\n  }\n\n  /**\n   * Show appropriate notification after create/update limits\n   * @param request - any\n   * @param isError - boolean\n   */\n  private showLimitNotification(request: any, isError: boolean) {\n    if (isError) {\n      this.showErrorLimitNotification(request);\n    } else {\n      this.showSuccessLimitNotification(request);\n    }\n  }\n\n  /**\n   * Show error notification for limit request\n   * @param request - any\n   */\n  private showErrorLimitNotification(request: any) {\n    if (request.shadow) {\n      this.showNotification(\n        request.uuid ? this.failShadowLimitUpdateTemplate : this.failShadowLimitCreateTemplate,\n        'error',\n      );\n    } else {\n      this.showNotification(\n        request.uuid ? this.failRegularLimitUpdateTemplate : this.failRegularLimitCreateTemplate,\n        'error',\n      );\n    }\n  }\n\n  /**\n   * Show success notification for limit request\n   * @param request - any\n   */\n  private showSuccessLimitNotification(request: any) {\n    if (!request.shadow) {\n      this.showNotification(\n        request.uuid ? this.successRegularLimitUpdateTemplate : this.successRegularLimitCreateTemplate,\n      );\n      this.disableRegularSubject.next(true);\n    } else {\n      this.showNotification(\n        request.uuid ? this.successShadowLimitUpdateTemplate : this.successShadowLimitCreateTemplate,\n      );\n      this.disableShadowSubject.next(true);\n    }\n  }\n\n  /**\n   * Show success pending notification for limit requests\n   * @param requests - any[]\n   */\n  private showAllIsPendingNotification(requests: any[]) {\n    if (requests.length === 1 && requests[0].shadow) {\n      this.showNotification(this.shadowLimitsPendingNotificationTemplate, 'success');\n    } else {\n      this.showNotification(this.limitsPendingNotificationTemplate, 'success');\n    }\n  }\n\n  /**\n   * Show pending notification which happened with another failed request\n   * @param request - any\n   */\n  private showPendingLimitNotification(request: any) {\n    if (request.shadow) {\n      this.showNotification(this.shadowLimitsPendingNotificationTemplate, 'success');\n      this.disableShadowSubject.next(true);\n    } else {\n      this.showNotification(this.limitsPendingNotificationTemplate, 'success');\n      this.disableRegularSubject.next(true);\n    }\n  }\n\n  /**\n   * Show notification\n   * @param messageRef - TemplateRef<any> | string\n   * @param type - any\n   */\n  private showNotification(messageRef: TemplateRef<any> | string, type: any = 'success') {\n    this.showNotification$.next({\n      modifier: type,\n      header: messageRef,\n    });\n  }\n\n  /**\n   * Mapper for converting limits form value into request body for manage limits API\n   * @param limitValue - any\n   * @param isShadow - boolean\n   */\n  private generateManageLimitRequestData(limitValue: any, isShadow: boolean) {\n    const limitType = isShadow ? 'shadow' : 'regular';\n\n    const requestData: any = {\n      'user-BBID': this.limitKey['user-BBID'],\n      entities: this.limitKey.lookupKeys,\n      shadow: isShadow,\n      currency: this.currency || this.currencyControl.value,\n    };\n    requestData[PERIODIC_LIMITS_BOUNDS] = {\n      customPeriods: [],\n    };\n\n    if (this.limitIds && this.limitIds[limitType]) {\n      requestData.uuid = this.limitIds[limitType];\n    }\n\n    this.limitBounds.forEach((limitBound: LimitBound, index: number) => {\n      const amount = limitValue[limitType][index]?.amount.replace(AMOUNT_DELIMETER_REG_EXP, '');\n      switch (limitBound.period) {\n        case TRANSACTIONAL_LIMITS_BOUNDS:\n          requestData[TRANSACTIONAL_LIMITS_BOUNDS] = {\n            amount,\n          };\n          break;\n        case 'daily':\n        case 'weekly':\n        case 'monthly':\n        case 'quarterly':\n        case 'yearly':\n          requestData[PERIODIC_LIMITS_BOUNDS][limitBound.period] = amount;\n          break;\n        default:\n          requestData[PERIODIC_LIMITS_BOUNDS].customPeriods.push({\n            period: limitBound.period,\n            amount,\n          });\n          break;\n      }\n    });\n\n    return requestData;\n  }\n\n  private generateManageLimitRequestUpdateData(limitValue: any, isShadow: boolean) {\n    const requestData: any = {};\n    const limitType = isShadow ? 'shadow' : 'regular';\n    requestData[PERIODIC_LIMITS_BOUNDS] = {\n      customPeriods: [],\n    };\n    this.limitBounds.forEach((limitBound: LimitBound, index: number) => {\n      const amount = limitValue[limitType][index]?.amount;\n      switch (limitBound.period) {\n        case TRANSACTIONAL_LIMITS_BOUNDS:\n          requestData[TRANSACTIONAL_LIMITS_BOUNDS] = {\n            amount,\n          };\n          break;\n        case 'daily':\n        case 'weekly':\n        case 'monthly':\n        case 'quarterly':\n        case 'yearly':\n          requestData[PERIODIC_LIMITS_BOUNDS][limitBound.period] = amount;\n          break;\n        default:\n          requestData[PERIODIC_LIMITS_BOUNDS].customPeriods.push({\n            period: limitBound.period,\n            amount,\n          });\n          break;\n      }\n    });\n\n    return requestData;\n  }\n\n  /**\n   * Limit currency getter\n   */\n  get getCurrency(): any {\n    return this.currency || this.currencyControl.value;\n  }\n\n  /**\n   * OpenChange modal window event handler.\n   * @param isOpen - boolean\n   */\n  onOpenChange(isOpen: boolean): void {\n    if (!isOpen) {\n      this.close.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n}\n\n@Directive({\n  selector: '[bbManageLimitsModalCustomizable]',\n})\nexport class ManageLimitsModalCustomizableDirective extends BbTemplate<\n  ManageLimitsModalComponent,\n  {\n    pendingSubmit: boolean | null;\n    errorsBE: any[] | null;\n    disableRegular: boolean | null;\n    disableShadow: boolean | null;\n  }\n> {}\n","<ng-container\n  bbManageLimitsModalCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    pendingSubmit: pendingSubmit$ | async,\n    errorsBE: errorsBE$ | async,\n    disableRegular: disableRegular$ | async,\n    disableShadow: disableShadow$ | async\n  }\"></ng-container>\n\n<ng-template\n  bbManageLimitsModalCustomizable\n  let-hostRef\n  let-pendingSubmit=\"context.pendingSubmit\"\n  let-errorsBE=\"context.errorsBE\"\n  let-disableRegular=\"context.disableRegular\"\n  let-disableShadow=\"context.disableShadow\">\n  <bb-modal-ui\n    data-role=\"bb-manage-limits-modal-container\"\n    [isOpen]=\"true\"\n    [modalOptions]=\"{\n      backdrop: 'static',\n      centered: true,\n      keyboard: true,\n      size: 'md'\n    }\"\n    (isOpenChange)=\"hostRef.onOpenChange($event)\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-manage-limits-modal-header\n          class=\"bb-stack__item bb-stack__item--fill\"\n          [currency]=\"hostRef.currency\"\n          [currencyControl]=\"hostRef.currencyControl\"\n          [title]=\"hostRef.headerTitle\"\n          [serviceAgreementId]=\"hostRef.serviceAgreementId\"\n          [legalEntityId]=\"hostRef.legalEntityId\"\n          [subTitleUserName]=\"hostRef.headerSubTitleUserName\"\n          [subTitleJRName]=\"hostRef.headerSubTitleJRName\"\n          [subTitleLEName]=\"hostRef.headerSubTitleLEName\"\n          [subTitleSAName]=\"hostRef.headerSubTitleSAName\"\n          [notificationDismissTime]=\"hostRef._notificationDismissTime\"\n          (close)=\"hostRef.onOpenChange(false)\"\n          defaultTitle=\"Limits\"\n          i18n-defaultTitle=\"Limits modal header title@@manage-limits-modal.header.title\"\n          data-role=\"manage-limits-modal-header\"></bb-manage-limits-modal-header>\n      </ng-template>\n    </bb-modal-header-ui>\n\n    <!-- NOTE: View and Edit template should define it's own header, footer, and body templates here -->\n    <ng-container *ngIf=\"hostRef.getCurrency\" [ngSwitch]=\"hostRef.view\">\n      <ng-container *ngSwitchCase=\"'view'\">\n        <bb-manage-limits-modal-view-body\n          [limitBounds]=\"hostRef.limitBounds\"\n          [showRegularLimit]=\"hostRef.showRegularLimit\"\n          [showShadowLimit]=\"hostRef.showShadowLimit\"\n          [pending]=\"hostRef.pending\"\n          [currency]=\"hostRef.currency\"\n          (cancel)=\"hostRef.onOpenChange(false)\"\n          data-role=\"bb-manage-limits-modal-view\"></bb-manage-limits-modal-view-body>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'edit'\">\n        <bb-edit-limit\n          [limitBounds]=\"hostRef.limitBounds\"\n          [showRegularLimit]=\"hostRef.showRegularLimit\"\n          [showShadowLimit]=\"hostRef.showShadowLimit\"\n          [disableRegular]=\"disableRegular\"\n          [disableShadow]=\"disableShadow\"\n          [currency]=\"hostRef.getCurrency\"\n          [showLoadingSubmitBtn]=\"pendingSubmit\"\n          [errors]=\"errorsBE\"\n          (submit)=\"hostRef.submitLimits($event)\"\n          (close)=\"hostRef.onOpenChange(false)\"\n          data-role=\"bb-manage-limits-modal-edit\"></bb-edit-limit>\n      </ng-container>\n    </ng-container>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template #successBothLimit>\n  <span i18n=\"Both limits is successfully saved@@manage-limits-modal.notification.save.success\">\n    Limits successfully saved\n  </span>\n</ng-template>\n<ng-template #successRegularLimitCreate>\n  <span i18n=\"Regular limits is successfully added@@manage-limits-modal.notification.create.success.regular\">\n    Regular limits successfully added\n  </span>\n</ng-template>\n<ng-template #successRegularLimitUpdate>\n  <span i18n=\"Regular limits is successfully updated@@manage-limits-modal.notification.update.success.regular\">\n    Regular limits successfully updated\n  </span>\n</ng-template>\n<ng-template #successShadowLimitCreate>\n  <span i18n=\"Shadow limits is successfully added@@manage-limits-modal.notification.create.success.shadow\">\n    Shadow limits successfully added\n  </span>\n</ng-template>\n<ng-template #successShadowLimitUpdate>\n  <span i18n=\"Shadow limits is successfully updated@@manage-limits-modal.notification.update.success.shadow\">\n    Shadow limits successfully updated\n  </span>\n</ng-template>\n<ng-template #failBothLimit>\n  <span i18n=\"Both limits are failed to saved@@manage-limits-modal.notification.save.error\">\n    Limits failed to save\n  </span>\n</ng-template>\n<ng-template #failRegularLimitCreate>\n  <span i18n=\"Regular limits are failed to create@@manage-limits-modal.notification.create.error.regular\">\n    Regular limits failed to add\n  </span>\n</ng-template>\n<ng-template #failRegularLimitUpdate>\n  <span i18n=\"Regular limits are failed to update@@manage-limits-modal.notification.update.error.regular\">\n    Regular limits failed to update\n  </span>\n</ng-template>\n<ng-template #failShadowLimitCreate>\n  <span i18n=\"Shadow limits are failed to create@@manage-limits-modal.notification.create.error.shadow\">\n    Shadow limits failed to add\n  </span>\n</ng-template>\n<ng-template #failShadowLimitUpdate>\n  <span i18n=\"Shadow limits are failed to update@@manage-limits-modal.notification.update.error.shadow\">\n    Shadow limits failed to update\n  </span>\n</ng-template>\n<ng-template #limitsPendingNotificationTemplate>\n  <span\n    i18n=\"\n      Success notification when limits changed but changes are in pending\n      state@@manage-limits-modal.notification.pending.limit\">\n    The limits are in pending state, and will be active once they are approved\n  </span>\n</ng-template>\n\n<ng-template #shadowLimitsPendingNotificationTemplate>\n  <span\n    i18n=\"\n      Success notification when shadow limits changed but changes are in pending\n      state@@manage-limits-modal.notification.pending.shadow-limit\">\n    The shadow limits are in pending state, and will be active once they are approved\n  </span>\n</ng-template>\n"]}