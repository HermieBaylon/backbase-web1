{"version":3,"file":"manage-limits-modal-view-body.component.js","sourceRoot":"","sources":["../../../../../../../libs/accessgroup-common-ang/src/lib/manage-limits-modal/manage-limits-modal-view-body/manage-limits-modal-view-body.component.ts","../../../../../../../libs/accessgroup-common-ang/src/lib/manage-limits-modal/manage-limits-modal-view-body/manage-limits-modal-view-body.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAClF,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;;;;;;;;;;AAO3D,MAAM,OAAO,kCAAkC;IAJ/C;QAKE;;;WAGG;QACO,WAAM,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAChE;;WAEG;QACM,qBAAgB,GAAG,KAAK,CAAC;QAClC;;WAEG;QACM,oBAAe,GAAG,KAAK,CAAC;QACjC;;WAEG;QACM,YAAO,GAAG,KAAK,CAAC;KAgB1B;IANC;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;;mJAhCU,kCAAkC;uIAAlC,kCAAkC,mQCR/C,+jGA8EA,i4BDhCa,8CAA8C;4FAtC9C,kCAAkC;kBAJ9C,SAAS;mBAAC;oBACT,QAAQ,EAAE,kCAAkC;oBAC5C,WAAW,EAAE,8CAA8C;iBAC5D;8BAMW,MAAM;sBAAf,MAAM;gBAIE,gBAAgB;sBAAxB,KAAK;gBAIG,eAAe;sBAAvB,KAAK;gBAIG,OAAO;sBAAf,KAAK;gBAIG,QAAQ;sBAAhB,KAAK;gBAIG,WAAW;sBAAnB,KAAK;;AAaR,MAAM,OAAO,8CAA+C,SAAQ,UAGnE;;+JAHY,8CAA8C;mJAA9C,8CAA8C;4FAA9C,8CAA8C;kBAH1D,SAAS;mBAAC;oBACT,QAAQ,EAAE,2CAA2C;iBACtD","sourcesContent":["import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { LimitBound } from '../models/limits-bound-types.model';\n\n@Component({\n  selector: 'bb-manage-limits-modal-view-body',\n  templateUrl: 'manage-limits-modal-view-body.component.html',\n})\nexport class ManageLimitsModalViewBodyComponent {\n  /**\n   * Close modal window event.\n   * Propagate event when modal window should be closed.\n   */\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n  /**\n   * Flag for show/hide regular limit column.\n   */\n  @Input() showRegularLimit = false;\n  /**\n   * Flag for show/hide shadow limit column.\n   */\n  @Input() showShadowLimit = false;\n  /**\n   * Flag for show pending state alert.\n   */\n  @Input() pending = false;\n  /**\n   * Limit currency value\n   */\n  @Input() currency: string | undefined;\n  /**\n   * Limits bounds data.\n   */\n  @Input() limitBounds!: LimitBound[];\n\n  /**\n   * Emits cancel: EventEmitter event.\n   */\n  close() {\n    this.cancel.emit();\n  }\n}\n\n@Directive({\n  selector: '[bbManageLimitsModalViewBodyCustomizable]',\n})\nexport class ManageLimitsModalViewBodyCustomizableDirective extends BbTemplate<\n  ManageLimitsModalViewBodyComponent,\n  void\n> {}\n","<ng-container bbManageLimitsModalViewBodyCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbManageLimitsModalViewBodyCustomizable let-hostRef>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <bb-alert-ui\n        *ngIf=\"hostRef.pending\"\n        title=\"This limit has pending approval and cannot be modified\"\n        modifier=\"warning\"\n        data-role=\"limit-pending-alert\"\n        i18n-title=\"This limit has pending approval and cannot be modified@@limit.pending.alert.text\">\n      </bb-alert-ui>\n      <div class=\"row bb-block bb-block--md\">\n        <div class=\"bb-stack col-5\" [ngClass]=\"{ 'col-8': !hostRef.showRegularLimit || !hostRef.showShadowLimit }\">\n          <span\n            class=\"bb-subheader bb-subheader--regular bb-text-semi-bold bb-stack__item bb-stack__item--spacing-xs\"\n            i18n=\"Limits bound title@@limits.view.header.period.text\"\n            data-role=\"limit-view-header-period\"\n            >Period</span\n          >\n          <bb-icon-ui\n            [bbTooltip]=\"limitsTitleTooltip\"\n            placement=\"bottom\"\n            triggers=\"hover\"\n            name=\"info\"\n            size=\"sm\"></bb-icon-ui>\n        </div>\n\n        <div class=\"col\" *ngIf=\"hostRef.showRegularLimit\" data-role=\"limit-view-header-limits\">\n          <span\n            class=\"bb-subheader bb-subheader--regular bb-text-semi-bold\"\n            i18n=\"Limits bound title@@limits.view.header.limits.text\">\n            Limit\n          </span>\n        </div>\n\n        <div class=\"col\" *ngIf=\"hostRef.showShadowLimit\" data-role=\"limit-view-header-shadow-limits\">\n          <span\n            class=\"bb-subheader bb-subheader--regular bb-text-semi-bold\"\n            i18n=\"Limits bound title@@limits.view.header.shadow-limits.text\">\n            Shadow limit\n          </span>\n        </div>\n      </div>\n      <hr />\n\n      <ng-container *ngFor=\"let bound of hostRef.limitBounds\">\n        <bb-limit-bound-item\n          [limitBound]=\"bound\"\n          [currency]=\"hostRef.currency\"\n          [showShadowLimit]=\"hostRef.showShadowLimit\"\n          [showRegularLimit]=\"hostRef.showRegularLimit\"\n          data-role=\"limit-limits-bound\"></bb-limit-bound-item>\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          i18n=\"Limits bound title@@limits.view.cancel.button.text\"\n          (bbKeyboardClick)=\"hostRef.close()\"\n          data-role=\"limit-view-cancel-button\">\n          Cancel\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n\n  <ng-template #limitsTitleTooltip>\n    <span i18n=\"Limits modal header title tooltip @@limits.view.period.tooltip\">\n      When setting limits, ‘per transaction’ should be your smallest value, with ‘yearly’ the largest.\n    </span>\n  </ng-template>\n</ng-template>\n"]}