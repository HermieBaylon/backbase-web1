{"version":3,"file":"function-group-heleprs.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-common-ang/src/lib/helpers/function-group-heleprs.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAG7D;;GAEG;AACH,MAAM,UAAU,wBAAwB;IACtC,OAAO,cAAc,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC;AAC1D,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,sBAAsB,CAAC,cAA+B;IACpE,OAAO,OAAO,CAAC,wBAAwB,EAAE,IAAI,sBAAsB,CAAC,cAAc,CAAC,CAAC,CAAC;AACvF,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,sBAAsB,CAAC,cAA+B;IACpE,MAAM,mBAAmB,GAAG,wBAAwB,EAAE,CAAC;IAEvD,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,mBAAmB,KAAK,EAAE,CAAC,CAAC;AACrE,CAAC","sourcesContent":["import { EDIT_JOB_ROLE_ID } from '../constants/storage-keys';\nimport { FunctionGroup } from '../model/types';\n\n/**\n * Return ACCESS_GROUP_EDIT_JOB_ROLE_ID from session storage or null if such doesn't exist\n */\nexport function getPrevSelectedJobRoleId(): string | null {\n  return sessionStorage.getItem(EDIT_JOB_ROLE_ID) || null;\n}\n\n/**\n * Check if ACCESS_GROUP_EDIT_JOB_ROLE_ID has value in session storage and within provided function\n * groups exist at exactly one with same ID\n * @param functionGroups - function groups (list of job roles)\n */\nexport function hasPrevSelectedJobRole(functionGroups: FunctionGroup[]): boolean {\n  return Boolean(getPrevSelectedJobRoleId() && getPrevSelectedJobRole(functionGroups));\n}\n\n/**\n * Find and return function group within provided function groups that match their ID with ACCESS_GROUP_EDIT_JOB_ROLE_ID session storage value or return undefined\n * @param functionGroups - function groups (list of job roles)\n */\nexport function getPrevSelectedJobRole(functionGroups: FunctionGroup[]): FunctionGroup | undefined {\n  const prevFunctionGroupId = getPrevSelectedJobRoleId();\n\n  return functionGroups.find(({ id }) => prevFunctionGroupId === id);\n}\n"]}