{"version":3,"file":"limits-helpers.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-common-ang/src/lib/helpers/limits-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { BoundedLimitItem, LimitConsumption, SupportedPeriodsGetResponseBody } from '@backbase/data-ang/limits';\nimport {\n  BOUNDTS_TYPE,\n  TRANSACTIONAL_LIMITS_BOUNDS,\n  PERIODIC_LIMITS_BOUNDS,\n  LimitBound,\n  CustomLimitData,\n} from '../manage-limits-modal/models/limits-bound-types.model';\n\n/**\n * Parse response from consumption API into separate regular/shadow limits and regular/shadow consumption\n */\nconst getLimitsAndConsumptionItem = (limitData: LimitConsumption[]) => {\n  let regularLimit, regularConsumptions, shadowLimit, shadowConsumptions;\n  limitData.forEach((limit: LimitConsumption) => {\n    if (limit.limit && !limit.limit.shadow) {\n      regularLimit = limit.limit;\n      regularConsumptions = limit.consumptions;\n    } else if (limit.limit && limit.limit.shadow) {\n      shadowLimit = limit.limit;\n      shadowConsumptions = limit.consumptions;\n    }\n  });\n\n  return { regularLimit, regularConsumptions, shadowLimit, shadowConsumptions };\n};\n\n/**\n * Get transactional limit amount\n */\nconst getTransactionalLimit = (limitItem: BoundedLimitItem | undefined) => {\n  const limit = limitItem && limitItem[TRANSACTIONAL_LIMITS_BOUNDS];\n  return { amount: limit && limit.amount };\n};\n\n/**\n * Get periodical limit amount\n */\nconst getPeriodicalLimit = (limitItem: BoundedLimitItem | undefined, key: string, isCustom: boolean) => {\n  const periodicLimits: any = limitItem && limitItem[PERIODIC_LIMITS_BOUNDS];\n  let limitAmount;\n  if (periodicLimits) {\n    if (isCustom) {\n      const customLimit =\n        periodicLimits.customPeriods && periodicLimits.customPeriods.find((item: any) => item.period === key);\n      limitAmount = customLimit && customLimit.amount;\n    } else {\n      limitAmount = periodicLimits[key];\n    }\n  }\n\n  return { amount: limitAmount };\n};\n\n/**\n * Get consumption amount by periodic key\n */\nconst getConsumptionAmount = (consumptions: any, key: string, isCustom: boolean) => {\n  let consumptionAmount;\n  if (consumptions) {\n    if (isCustom) {\n      const customLimit =\n        consumptions.customPeriods && consumptions.customPeriods.find((item: any) => item.period === key);\n      consumptionAmount = customLimit && customLimit.amount;\n    } else {\n      consumptionAmount = consumptions[key];\n    }\n  }\n\n  return consumptionAmount;\n};\n\n/**\n * Get if limit included any shadow limit amount\n */\nexport const getIfLimitHasShadow = (limits: Array<any>) => {\n  for (let i = 0; i < limits.length; i++) {\n    if (limits[i].shadow && limits[i].shadow.amount) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Get limit is unlimited\n */\nexport const getLimitUnlimited = (limits: Array<any>) => {\n  for (let i = 0; i < limits.length; i++) {\n    if ((limits[i].shadow && limits[i].shadow.amount) || (limits[i].regular && limits[i].regular.amount)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Map period keys into limit bound keys\n */\nconst getLimitsPeriodsKey = (key: string): { key: string; isCustom: boolean } => {\n  return BOUNDTS_TYPE[key] ? { key: BOUNDTS_TYPE[key], isCustom: false } : { key, isCustom: true };\n};\n\n/**\n * Get limit currency\n */\nconst getLimitCurrency = (limitData: LimitConsumption[]): string | undefined => {\n  if (limitData && limitData.length) {\n    const limitItem = limitData[0];\n    return limitItem.limit && limitItem.limit.currency;\n  }\n  return undefined;\n};\n\n/**\n * Get regular/shadow limit ids\n */\nconst getLimitsIds = (\n  limitData: LimitConsumption[],\n): {\n  regular?: string;\n  shadow?: string;\n} => {\n  let regular, shadow;\n  limitData.forEach((limit: LimitConsumption) => {\n    if (limit.limit && !limit.limit.shadow) {\n      regular = limit.limit.uuid;\n    } else if (limit.limit && limit.limit.shadow) {\n      shadow = limit.limit.uuid;\n    }\n  });\n  return { regular, shadow };\n};\n\n/**\n * Mapper for converting periods list and limit data into object with array of LimitBound\n */\nexport const periodLimitsConsumptionMapper = (\n  periods: SupportedPeriodsGetResponseBody[],\n  limitConsumptionsData: LimitConsumption[],\n) => {\n  const limitBounds: LimitBound[] = [];\n  const { regularLimit, regularConsumptions, shadowLimit, shadowConsumptions } =\n    getLimitsAndConsumptionItem(limitConsumptionsData);\n\n  limitBounds.push({\n    period: TRANSACTIONAL_LIMITS_BOUNDS,\n    custom: false,\n    regular: getTransactionalLimit(regularLimit),\n    shadow: getTransactionalLimit(shadowLimit),\n  });\n\n  periods.forEach(period => {\n    const { key, isCustom } = getLimitsPeriodsKey(period.name);\n    const regularLimitItem = getPeriodicalLimit(regularLimit, key, isCustom);\n    const shadowLimitItem = getPeriodicalLimit(shadowLimit, key, isCustom);\n\n    const regularConsumptionItem = getConsumptionAmount(regularConsumptions, key, isCustom);\n    const shadowConsumptionItem = getConsumptionAmount(shadowConsumptions, key, isCustom);\n\n    limitBounds.push({\n      period: key,\n      custom: isCustom,\n      regular: regularLimitItem,\n      shadow: shadowLimitItem,\n      regularConsumption: regularConsumptionItem,\n      shadowConsumption: shadowConsumptionItem,\n    });\n  });\n\n  return {\n    uuid: getLimitsIds(limitConsumptionsData),\n    currency: getLimitCurrency(limitConsumptionsData),\n    limitBounds,\n  };\n};\n\nexport const lookUpObject = (entity: string, id: string) => {\n  return {\n    lookupKeys: [\n      {\n        eref: id,\n        etype: entity,\n      },\n    ],\n  };\n};\n\nexport const checkPermission = (permission: any) => {\n  return (\n    permission.regularLimit.edit ||\n    permission.regularLimit.view ||\n    permission.regularLimit.create ||\n    permission.shadowLimit.edit ||\n    permission.shadowLimit.view ||\n    permission.shadowLimit.create\n  );\n};\n\nexport const prepareLimitObj = (groupedLimit: any, periods: any, groupedRetrivalLimit: any): CustomLimitData => {\n  let limit: CustomLimitData;\n  if (groupedLimit) {\n    limit = {\n      ...periodLimitsConsumptionMapper(periods, groupedLimit),\n      created: true,\n    };\n    limit.isHasShadow = getIfLimitHasShadow(limit.limitBounds);\n    limit.isUnlimited = getLimitUnlimited(limit.limitBounds);\n  } else {\n    limit = {\n      ...periodLimitsConsumptionMapper(periods, []),\n      created: false,\n    };\n  }\n  if (groupedRetrivalLimit) {\n    groupedRetrivalLimit.forEach((item: any) => {\n      if (item.approvalId) {\n        limit.pending = true;\n      }\n    });\n  }\n  return limit;\n};\n"]}