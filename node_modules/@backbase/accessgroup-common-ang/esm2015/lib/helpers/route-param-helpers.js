import { combineLatest, of } from 'rxjs';
import { map, pluck } from 'rxjs/operators';
export const getRouteParams = (route, param, router) => {
    var _a;
    const url = router ? router.routerState.snapshot.url + '/' : undefined;
    const strRegEx = `(?:;${param}=).+?(?=\\/)`;
    const regEx = new RegExp(strRegEx, 'g');
    if (url && ((_a = url.match(regEx)) === null || _a === void 0 ? void 0 : _a.length)) {
        // @ts-ignore
        return of(url.match(regEx)[0].replace(';' + param + '=', ''));
    }
    const paramValue = route.paramMap.pipe(pluck('params', param));
    if (!route.parent) {
        return paramValue;
    }
    return combineLatest([paramValue, getRouteParams(route.parent, param)]).pipe(map(params => params[0] || params[1]));
};
//# sourceMappingURL=route-param-helpers.js.map