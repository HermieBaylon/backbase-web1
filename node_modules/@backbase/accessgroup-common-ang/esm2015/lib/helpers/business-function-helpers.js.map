{"version":3,"file":"business-function-helpers.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-common-ang/src/lib/helpers/business-function-helpers.ts"],"names":[],"mappings":";AAGA,MAAM,4BAA4B,GAAG,CACnC,UAAsB,EACtB,gBAA0C,EAC1C,GAAW,EACgB,EAAE;IAC7B,MAAM,SAAS,GAAG,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAwB,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC;IACtG,MAAM,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,iBAAiB,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC;IAChH,MAAM,cAAc,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC;IAEnE,OAAO;QACL,UAAU,EAAE,CAAC,CAAC,SAAS;QACvB,QAAQ;QACR,cAAc;KACf,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AAE/F,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAC1C,aAAwC,EACxC,oBAAgD,EAChD,iBAAiB,GAAG,KAAK,EACL,EAAE;IACtB,IAAI,aAAa,IAAI,aAAa,CAAC,WAAW,EAAE;QAC9C,MAAM,EAAE,WAAW,EAAE,GAAG,aAAa,CAAC;QACtC,MAAM,oBAAoB,GAAgD,oBAAoB,CAAC,MAAM,CACnG,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,iCACX,IAAI,KACP,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,IACvB,EACF,EAAE,CACH,CAAC;QAEF,IAAI,iBAAiB,EAAE;YACrB,OAAO,WAAW;iBACf,MAAM,CAAC,CAAC,UAAsB,EAAE,EAAE;gBACjC,IAAI,UAAU,CAAC,UAAU,KAAK,MAAM;oBAAE,UAAU,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,uBAAuB;gBAC7F,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAErE,OAAO,OAAO,CAAC,gBAAgB,CAAC,CAAC;YACnC,CAAC,CAAC;iBACD,GAAG,CAAC,CAAC,UAAsB,EAAE,EAAE,CAAC,gBAAgB,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC,CAAC;SACxF;QAED,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,UAAsB,EAAE,EAAE,CAAC,gBAAgB,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC,CAAC;KACxG;IAED,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,SAAS,gBAAgB,CAAC,UAAsB,EAAE,oBAAiE;IACjH,IAAI,UAAU,CAAC,UAAU,KAAK,MAAM;QAAE,UAAU,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,uBAAuB;IAE7F,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACrE,6DAA6D;IAC7D,MAAM,EAAE,UAAU,KAAc,gBAAgB,EAAzB,IAAI,UAAK,gBAAgB,EAA1C,cAAuB,CAAmB,CAAC;IACjD,MAAM,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC5C,CAAC,IAAI,CAAC,EAAE,4BAA4B,CAAC,UAAU,EAAE,gBAAgB,EAAE,IAAI,CAAC;KACzE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,iCAAM,IAAI,GAAK,IAAI,EAAG,CAAC,CAAC;IAEnD,uCACK,IAAI,KACP,UAAU,EAAE,aAAa,IACzB;AACJ,CAAC","sourcesContent":["import { FunctionsGetResponseBody, Permission, PresentationPrivilege } from '@backbase/data-ang/accesscontrol';\nimport { BusinessFunction, BusinessFunctionPrivilege, FunctionGroup } from '../model/types';\n\nconst getBusinessFunctionPrivilege = (\n  permission: Permission,\n  businessFunction: FunctionsGetResponseBody,\n  key: string,\n): BusinessFunctionPrivilege => {\n  const privilege = businessFunction.privileges.find((e: PresentationPrivilege) => e.privilege === key);\n  const assigned = !!permission.assignedPrivileges.find(assignedPrivilege => assignedPrivilege.privilege === key);\n  const supportsLimits = privilege ? privilege.supportsLimit : false;\n\n  return {\n    applicable: !!privilege,\n    assigned,\n    supportsLimits,\n  };\n};\n\nexport const PRIVILEGES = ['execute', 'view', 'create', 'edit', 'delete', 'approve', 'cancel'];\n\nexport const getExtendedBusinessFunctions = (\n  functionGroup: FunctionGroup | undefined,\n  allBusinessFunctions: FunctionsGetResponseBody[],\n  filterHookEnabled = false,\n): BusinessFunction[] => {\n  if (functionGroup && functionGroup.permissions) {\n    const { permissions } = functionGroup;\n    const businessFunctionById: { [key: string]: FunctionsGetResponseBody } = allBusinessFunctions.reduce(\n      (memo, item) => ({\n        ...memo,\n        [item.functionId]: item,\n      }),\n      {},\n    );\n\n    if (filterHookEnabled) {\n      return permissions\n        .filter((permission: Permission) => {\n          if (permission.functionId === '1004') permission.functionId = '1045'; // TODO fix me in mocks\n          const businessFunction = businessFunctionById[permission.functionId];\n\n          return Boolean(businessFunction);\n        })\n        .map((permission: Permission) => permissionMapper(permission, businessFunctionById));\n    }\n\n    return permissions.map((permission: Permission) => permissionMapper(permission, businessFunctionById));\n  }\n\n  return [];\n};\n\nfunction permissionMapper(permission: Permission, businessFunctionById: { [key: string]: FunctionsGetResponseBody }) {\n  if (permission.functionId === '1004') permission.functionId = '1045'; // TODO fix me in mocks\n\n  const businessFunction = businessFunctionById[permission.functionId];\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { privileges, ...rest } = businessFunction;\n  const privilegesObj = PRIVILEGES.map(priv => ({\n    [priv]: getBusinessFunctionPrivilege(permission, businessFunction, priv),\n  })).reduce((memo, item) => ({ ...memo, ...item }));\n\n  return {\n    ...rest,\n    privileges: privilegesObj,\n  };\n}\n"]}