import { Injectable } from '@angular/core';
import { NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';
import * as i0 from "@angular/core";
export class TimePickerStringAdapter extends NgbTimeAdapter {
    fromModel(value) {
        if (value) {
            const [hour, minute, second] = value.split(':').map(str => parseInt(str, 10));
            return { hour, minute, second };
        }
        return null;
    }
    toModel(time) {
        if (!time) {
            return null;
        }
        return `${String(time.hour).padStart(2, '0')}:${String(time.minute).padStart(2, '0')}:${String(time.second).padStart(2, '0')}`;
    }
}
/** @nocollapse */ TimePickerStringAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimePickerStringAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ TimePickerStringAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimePickerStringAdapter });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimePickerStringAdapter, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=input-time-picker.service.js.map