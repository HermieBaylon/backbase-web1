{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-common-ang/src/lib/model/types.ts"],"names":[],"mappings":"AAmEA,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,SAAS,EAAE,UAAU;IACrB,aAAa,EAAE,aAAa;IAC5B,eAAe,EAAE,gBAAgB;CAClC,CAAC;AAkCF,MAAM,CAAN,IAAY,oBAGX;AAHD,WAAY,oBAAoB;IAC9B,qDAA6B,CAAA;IAC7B,6CAAqB,CAAA;AACvB,CAAC,EAHW,oBAAoB,KAApB,oBAAoB,QAG/B;AAED,MAAM,CAAN,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC7B,+DAAK,CAAA;IACL,+DAAK,CAAA;AACP,CAAC,EAHW,mBAAmB,KAAnB,mBAAmB,QAG9B","sourcesContent":["import {\n  FunctionsGetResponseBody,\n  ServiceAgreementParticipantsGetResponseBody as ServiceAgreementParticipant,\n  ServiceAgreementItem as ServiceAgreement,\n} from '@backbase/data-ang/accesscontrol';\n\nexport { ProductSummaryItem as AccountItem } from '@backbase/data-ang/arrangements';\nimport { ContactsGetResponseBodyItem as Contact } from '@backbase/data-ang/contact-manager';\n\nexport {\n  GetDataGroupItem as DataGroup,\n  ServiceAgreementParticipantsGetResponseBody as ServiceAgreementParticipant,\n} from '@backbase/data-ang/accesscontrol';\nexport { ContactGetResponseBody as Payee } from '@backbase/data-ang/contact-manager';\nexport type Payees = Contact[];\n\nexport {\n  FunctionGroupItem as FunctionGroup,\n  ServiceAgreementItem as ServiceAgreement,\n  FunctionsGetResponseBody,\n} from '@backbase/data-ang/accesscontrol';\n\nexport type Modify<T, R> = Pick<T, Exclude<keyof T, keyof R>> & R;\n\nexport interface BusinessFunctionPrivilege {\n  applicable: boolean;\n  assigned: boolean;\n  supportsLimits: boolean;\n}\n\nexport interface BusinessFunctionPrivileges {\n  [key: string]: BusinessFunctionPrivilege;\n}\n\nexport interface BusinessFunctionBase {\n  functionId: string;\n  functionCode: string;\n  resource: string;\n  name: string;\n}\n\nexport interface BusinessFunction extends BusinessFunctionBase {\n  privileges: BusinessFunctionPrivileges;\n}\n\nexport interface BusinessFunctionGroup {\n  groupKey: string;\n  businessFunctions: BusinessFunction[];\n}\n\nexport interface BusinessFunctionWithGroupKey extends FunctionsGetResponseBody {\n  groupKey: string;\n}\n\nexport interface ServiceAgreementWithParticipants {\n  serviceAgreement: ServiceAgreement;\n  participants: ServiceAgreementParticipant[];\n}\n\nexport type PaginationType = 'load-more' | 'pagination';\n\nexport interface PaginationProperties {\n  paginationType: PaginationType;\n  pageSize: number;\n  maxNavPages: number;\n}\n\nexport const WidgetProperties = {\n  PAGE_SIZE: 'pageSize',\n  MAV_NAV_PAGES: 'maxNavPages',\n  PAGINATION_TYPE: 'paginationType',\n};\n\nexport interface DataGroupParams {\n  searchTerm: string;\n  from: number;\n  size: number;\n  paginationType: PaginationType;\n  serviceAgreement: ServiceAgreementWithParticipants;\n  items: string[];\n}\n\nexport interface PaginatedItems<T> {\n  items: T[];\n  totalItems: number;\n}\n\nexport interface PaginatedItemsWithPaginationParams<T> extends PaginatedItems<T> {\n  from: number;\n  paginationType: PaginationType;\n}\n\nexport interface GetContactsReqParams {\n  cursor?: string;\n  from?: number;\n  size?: number;\n  query?: string;\n  targetSaId?: string;\n}\n\nexport interface PayeesData {\n  totalCount: number;\n  payees: Contact[] | null;\n}\n\nexport enum AccessDataGroupTypes {\n  ARRANGEMENTS = 'ARRANGEMENTS',\n  CONTACTS = 'CONTACTS',\n}\n\nexport enum ApprovalLevelStatus {\n  EMPTY,\n  ERROR,\n}\n"]}