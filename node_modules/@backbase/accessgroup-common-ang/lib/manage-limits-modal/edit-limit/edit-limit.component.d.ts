import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { LimitBound } from '../models/limits-bound-types.model';
import * as i0 from "@angular/core";
export declare class EditLimitComponent implements OnDestroy {
    private fb;
    private readonly hostEl;
    private readonly _ref;
    /**
     * Flag for show/hide regular limit column.
     */
    showRegularLimit: boolean;
    /**
     * Flag for show/hide shadow limit column.
     */
    showShadowLimit: boolean;
    /**
     * Limits bounds data.
     */
    set limitBounds(limitBounds: LimitBound[]);
    /**
     * Limit currency value
     */
    currency?: string;
    /**
     * Flag to show/hide loading state for submit btn
     */
    showLoadingSubmitBtn?: string;
    /**
     * List of BE error
     */
    errors?: any[];
    /**
     * Flag for displaying view template for regular limits
     */
    disableRegular?: boolean;
    /**
     * Flag for displaying view template for shadow limits
     */
    disableShadow?: boolean;
    /**
     * Propagate event when submit button was clicked.
     */
    submit: EventEmitter<any>;
    /**
     * Close modal window event.
     * Propagate event when modal window should be closed.
     */
    close: EventEmitter<any>;
    /**
     * Reactive form for edit limits
     */
    readonly limitForm: FormGroup;
    /**
     * Bound list with full information
     */
    limitBoundList: LimitBound[];
    /**
     * Flag which show when regular limits was edited
     */
    isRegularChanged: boolean;
    /**
     * Flag which show when shadow limits was edited
     */
    isShadowChanged: boolean;
    /**
     * Flag which show when form has zero value
     */
    showZeroLimitAlert: boolean;
    /**
     * Flag which show when user dismiss Zero info block.
     */
    zeroLimitAlertDismissed: boolean;
    private readonly destroy$;
    constructor(fb: FormBuilder, hostEl: ElementRef, _ref: ChangeDetectorRef);
    /**
     * Disabled submit button getter
     */
    get isDisabled(): boolean;
    /**
     * Submit limit form
     */
    submitForm(): void;
    /**
     * Track when form is changed
     */
    onChanges(): void;
    /**
     * Function for form validation
     */
    validateForm(): boolean;
    /**
     * Function for validation one type of the limit
     * @param boundList
     * @param controls
     */
    checkBounds(boundList: any, controls: any): boolean;
    /**
     * Track when control has zero amount and Zero info message should be shown
     */
    shouldZeroAlertBeShown(): boolean;
    /**
     * Scroll to zero limit info block
     */
    scrollToZeroInfo(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<EditLimitComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<EditLimitComponent, "bb-edit-limit", never, { "showRegularLimit": "showRegularLimit"; "showShadowLimit": "showShadowLimit"; "limitBounds": "limitBounds"; "currency": "currency"; "showLoadingSubmitBtn": "showLoadingSubmitBtn"; "errors": "errors"; "disableRegular": "disableRegular"; "disableShadow": "disableShadow"; }, { "submit": "submit"; "close": "close"; }, never, never>;
}
export declare class EditLimitCustomizableDirective extends BbTemplate<EditLimitComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<EditLimitCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<EditLimitCustomizableDirective, "[bbEditLimitCustomizable]", never, {}, {}, never>;
}
