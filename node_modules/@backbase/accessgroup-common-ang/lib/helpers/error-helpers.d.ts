import { HttpErrorResponse } from '@angular/common/http';
import { AbstractControl } from '@angular/forms';
export declare enum FormAction {
    CREATE = 0,
    EDIT = 1,
    LIST = 2,
    ADD = 3,
    REMOVE = 4
}
export interface WidgetError {
    kind: string;
    error: HttpErrorResponse;
    action: FormAction;
    keys: {
        message: string;
        key: string;
    }[];
}
export declare const parseError: (widgetName: string, error: HttpErrorResponse, action?: FormAction) => WidgetError;
export declare const hasError: (control: AbstractControl | undefined | null, type: string) => boolean;
export declare const isFieldValid: (control: AbstractControl | undefined | null) => boolean;
/**
 * Get original error msg for no typed error
 */
export declare const errorMsg: (error: WidgetError | undefined | null) => string;
