import { AfterViewInit, ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';
import { AbstractControl, ValidationErrors, Validator } from '@angular/forms';
import { InputBaseComponent } from '@backbase/ui-ang/base-classes';
import { DomAttributesService } from './dom-attributes.service';
import * as i0 from "@angular/core";
/**
 * @name AccessGroupInputTimePickerComponent
 *
 * @a11y Current component provide option to pass needed accessibility
 * attributes. You need to take care of properties that are required in your case :
 *  - role
 *  - aria-activedescendant
 *  - aria-describedby
 *  - aria-expanded
 *  - aria-invalid
 *  - aria-label
 *  - aria-labelledby
 *  - aria-owns
 *
 * @description
 * Component that displays a timepicker.
 */
export declare class AccessGroupInputTimePickerComponent extends InputBaseComponent implements Validator, AfterViewInit {
    protected readonly cd: ChangeDetectorRef;
    private readonly domAttrService;
    private readonly elem;
    private readonly renderer2;
    /**
     * The number of hours to add/subtract when clicking hour spinners.
     */
    hourStep: number;
    /**
     * Whether to display 12H or 24H mode.
     */
    clock: '12h' | '24h';
    /**
     * The number of minutes to add/subtract when clicking minute spinners.
     */
    minuteStep: number;
    /**
     * If true, the timepicker is readonly and can't be changed.
     */
    readonly: boolean;
    /**
     * If true, it is possible to select seconds.
     */
    seconds: boolean;
    /**
     * The number of seconds to add/subtract when clicking second spinners.
     */
    secondStep: number;
    /**
     * If set, validate according to min time
     */
    min: string | undefined;
    /**
     * If set , validate according to max time
     */
    max: string | undefined;
    /**
     * The autocomplete value of enclosed input control.
     */
    autocomplete: 'string' | undefined;
    cssClass: string;
    inputEl: ElementRef | undefined;
    get meridian(): boolean;
    getKeywordBySize(size: number | string): string;
    getSizeByKeyword(keyword: any): number | undefined;
    validate(control: AbstractControl): ValidationErrors | null;
    constructor(cd: ChangeDetectorRef, domAttrService: DomAttributesService, elem: ElementRef, renderer2: Renderer2);
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AccessGroupInputTimePickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AccessGroupInputTimePickerComponent, "bb-input-timepicker-ui, bb-accessgroup-input-timepicker-ui", never, { "hourStep": "hourStep"; "clock": "clock"; "minuteStep": "minuteStep"; "readonly": "readonly"; "seconds": "seconds"; "secondStep": "secondStep"; "min": "min"; "max": "max"; "autocomplete": "autocomplete"; }, {}, never, never>;
}
