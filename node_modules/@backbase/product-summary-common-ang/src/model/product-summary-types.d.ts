import { BaseProduct, DebitCardItem, MaskableAttribute, AccountArrangementItem as SpecAccountArrangementItem, ProductSummaryItem as SpecProductSummaryItem } from '@backbase/data-ang/arrangements';
import { FinancialInstitution } from '@backbase/data-ang/financial-institution-manager';
export interface AdditionalProperties {
    additions?: {
        [key: string]: string;
    };
}
export interface TotalBalance extends AdditionalProperties {
    aggregatedBalance: string;
    currency: string;
}
export interface ProductState extends AdditionalProperties {
    externalStateId?: string;
    state?: string;
}
/**
 * External product info
 */
export interface ExternalProductInfo {
    financialInstitution?: FinancialInstitution;
    financialInstitutionId?: number;
}
/**
 * Product summary product interface
 * Includes external product info
 */
export interface Product extends ExternalProductInfo, BaseProduct {
    kind?: string;
    IBAN?: string;
    BBAN?: string;
    number?: string;
    currency?: string;
    PANSuffix?: string;
    bookedBalance?: string;
    availableBalance?: string;
    creditLimit?: string;
    currentInvestmentValue?: string;
    principalAmount?: number;
    accruedInterest?: number;
    urgentTransferAllowed?: boolean;
    BIC?: string;
    bankBranchCode?: string;
    accountInterestRate?: number;
    valueDateBalance?: number;
    accountHolderStreetName?: string;
    town?: string;
    postCode?: string;
    countrySubDivision?: string;
    creditAccount?: boolean;
    debitAccount?: boolean;
    accountHolderCountry?: any;
    creditLimitUsage?: number;
    creditLimitInterestRate?: number;
    creditLimitExpiryDate?: string;
    debitCardsItems?: Array<DebitCardItem>;
    accountHolderName?: string;
    startDate?: string;
    minimumRequiredBalance?: number;
    accountHolderAddressLine1?: string;
    accountHolderAddressLine2?: string;
    productKindUri?: string;
    paymentsPastDue?: number;
    amountInArrear?: number;
    primaryBalance?: number;
    secondaryBalance?: number;
    tertiaryBalance?: number;
    alias?: string;
    favorite?: boolean;
    institutionId?: string;
    accountNumber?: string;
}
/**
 * Product summary item type
 * Includes external product info
 */
export declare type ProductSummaryItem = SpecProductSummaryItem & ExternalProductInfo;
/**
 * Arrangements item type
 * Includes external product info
 */
export declare type AccountArrangementItem = SpecAccountArrangementItem & ExternalProductInfo;
/**
 * Arrangement type
 */
export declare type Arrangement = ProductSummaryItem | AccountArrangementItem | Product;
export interface ProductDetailsAvailability {
    accountName?: boolean;
    accountHolder?: boolean;
    arrears?: boolean;
    balance?: boolean;
    branch?: boolean;
    cards?: boolean;
    codes?: boolean;
    creditLimit?: boolean;
    creditUsage?: boolean;
    currency?: boolean;
    debitCards?: boolean;
    interest?: boolean;
    lastPayment?: boolean;
    lastStatement?: boolean;
    maturity?: boolean;
    numbers?: boolean;
    payment?: boolean;
    penalty?: boolean;
    principalAmount?: boolean;
    rates?: boolean;
    recurrence?: boolean;
    renewal?: boolean;
    requirements?: boolean;
    statement?: boolean;
    settlement?: boolean;
    term?: boolean;
    updateDate?: boolean;
    validity?: boolean;
}
export interface ProductKind extends AdditionalProperties {
    products: Array<Product>;
}
export interface ProductKinds extends AdditionalProperties {
    total?: TotalBalance;
    productKinds: Array<ProductKind>;
}
export interface UnmaskedProductEventPayload {
    attributeName: MaskableAttribute;
    attributeValue?: string;
    product: AccountArrangementItem;
}
export interface ProductMaskableAttribute {
    attributeName: MaskableAttribute;
    masked?: boolean;
    maskedValue?: string;
    unmaskedValue?: string;
}
