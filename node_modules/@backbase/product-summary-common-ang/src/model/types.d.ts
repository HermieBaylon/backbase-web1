import { PageParams } from '@backbase/foundation-ang/data-http';
import { ProductSummaryItem, AccountBalanceHistoryItem, OrderByField, SortDirection } from '@backbase/data-ang/arrangements';
import { AlertType } from '@backbase/ui-ang/alert';
import { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';
import { ProductDetailsAvailability, AccountArrangementItem } from './product-summary-types';
export declare enum HttpResponseType {
    BODY = "body",
    RESPONSE = "response",
    EVENT = "event"
}
export interface Customizable {
    [key: string]: any;
}
export interface BalanceHistoryPaginated {
    count: number;
    items: Array<AccountBalanceHistoryItem>;
    params: any;
}
export interface WidgetProperties {
    businessFunction: string;
    privilege: string;
    resourceName: string;
    size: number;
}
export interface ListParams {
    pagination: PageParams;
    paginationType: string;
}
export interface BalanceHistorySeriesParams extends Customizable {
    dateFrom?: string;
    dateTo?: string;
    timePeriod?: string;
    format?: string;
    paginationType?: string;
}
export interface BalanceHistoryPaginationParams extends Customizable {
    dateFrom?: string;
    dateTo?: string;
    timePeriod?: string;
    format?: string;
    from: number;
    size?: number;
    paginationType?: string;
}
export interface GetBalanceHistoryRequestSeriesObjectType extends Customizable {
    arrangementIds: string;
    params: BalanceHistorySeriesParams;
}
export interface GetBalanceHistoryRequestPaginatedObjectType extends Customizable {
    arrangementId: string;
    params: BalanceHistoryPaginationParams;
}
export interface BalanceHistoryItem extends Customizable {
    dateFrom: string;
    dateTo: string;
    valuePtc: string;
    value: {
        currency?: string;
        balance?: string | number;
    };
}
export interface BalanceHistoryData extends Customizable {
    name: any;
    value: string | number | undefined;
}
export interface BalanceHistoryDataSeries extends Customizable {
    name: string;
    series: BalanceHistoryData[];
}
export declare enum BalanceHistoryExportFormat {
    JSON = "application/json",
    CSV = "text/csv"
}
export interface BalanceHistoryExportData<T = any> {
    name: string;
    content: T;
}
export interface Series {
    name: Date;
    value: number;
}
export interface DataSetExtraColors {
    positive: string;
    negative: string;
}
export interface DataSetExtra {
    colors?: DataSetExtraColors;
}
export interface DataSet {
    name: string;
    extra?: DataSetExtra;
    series: Array<Series>;
}
export interface Accounts {
    count: number;
    items: ProductSummaryItem[];
    params: any;
}
export declare enum PaginationType {
    LOAD_MORE = "load-more",
    PAGINATION = "pagination"
}
export declare enum ProductKindNames {
    CURRENT_ACCOUNT = "Current Account",
    SAVINGS_ACCOUNT = "Savings Account",
    TERM_DEPOSIT = "Term Deposit",
    LOAN = "Loan",
    CREDIT_CARD = "Credit Card",
    DEBIT_CARD = "Debit Card",
    INVESTMENT_ACCOUNT = "Investment Account"
}
/**
 * Default values of "kindUri" per product kind
 */
export declare enum ProductKindUri {
    CREDIT_CARD = "credit-card",
    CURRENT_ACCOUNT = "current-account",
    DEBIT_CARD = "debit-card",
    INVESTMENT_ACCOUNT = "investment-account",
    LOAN = "loan",
    POCKET = "pocket",
    POCKET_PARENT = "pocket-parent",
    SAVINGS_ACCOUNT = "savings-account",
    TERM_DEPOSIT = "term-deposit"
}
export interface GetProductsummaryRequest extends Customizable {
    businessFunction: string;
    resourceName: string;
    privilege: string;
    withLatestBalances?: boolean;
    debitAccount?: boolean;
    creditAccount?: boolean;
    externalTransferAllowed?: boolean;
    productKindName?: string;
    legalEntityIds?: string[];
    favorite?: boolean;
    favoriteFirst?: boolean;
    searchTerm?: string;
    from?: number;
    cursor?: string;
    size?: number;
    orderBy?: Array<OrderByField>;
    direction?: SortDirection;
    paginationType?: PaginationType | string;
}
export interface SwitchViewButtonClass {
    cards: string | undefined;
    table: string | undefined;
}
export interface AccountState {
    stateName: string;
    severity: AlertType;
}
/**
 * An object representing details content
 */
export interface ProductSummaryDetailsCustomizableContext {
    /**
     * The product type
     */
    product: AccountArrangementItem | undefined;
    /**
     * The product card number format
     */
    productNumberFormat: PaymentCardNumberFormat | undefined;
    /**
     * The product details info availability
     */
    infoAvailability: ProductDetailsAvailability;
}
/**
 * Available navigation types from account
 */
export declare enum AccountNavigationType {
    PAYMENTS = "PAYMENTS",
    TRANSACTIONS = "TRANSACTIONS",
    BALANCE_HISTORY = "BALANCE_HISTORY",
    STATEMENTS = "STATEMENTS"
}
/**
 * Privileges applicable to product summary business functions
 */
export declare enum ProductSummaryPrivilege {
    VIEW = "view",
    EDIT = "edit"
}
/**
 * Displaying level of account aliases
 */
export declare enum AccountAliasDisplayingLevel {
    ACCOUNT = "ACCOUNT",
    USER = "USER"
}
/**
 * Duplicates validation settings from the `user-preferences` schema of fe-presentation-spec
 * TODO: remove these constants, when min/max length settings will be part of the generated client API
 */
export declare const UserPreferencesValidationSettings: {
    ALIAS_MAX_LENGTH: number;
};
