import { PipeTransform } from '@angular/core';
import { AccountNumberType, AccountsDisplayingFormatService } from '@backbase/ui-ang/account-number-pipe';
import { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';
import { ProductSummaryItem } from '@backbase/data-ang/arrangements';
import { Product } from '../../model/product-summary-types';
import * as i0 from "@angular/core";
/**
 * Provides numbers format per product or number type
 * a format includes masking and formatting configuration
 *
 * TODO: remove this pipe when all necessary ui-ang components support using `bbAccountNumber` pipe
 */
export declare class ProductNumberFormatPipe implements PipeTransform {
    private readonly accountsDisplayingFormatService;
    /**
     * @name ProductNumberFormatPipe#constructor
     * @param accountsDisplayingFormatService - AccountsDisplayingFormatService
     *
     * @internal
     */
    constructor(accountsDisplayingFormatService: AccountsDisplayingFormatService);
    /**
     * @name ProductNumberFormatPipe#transform
     * @param product - product that should be formatted or specific product number type
     *
     * @description
     * Formats account numbers
     */
    transform(product: ProductSummaryItem | Product | AccountNumberType): PaymentCardNumberFormat;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductNumberFormatPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<ProductNumberFormatPipe, "bbProductNumberFormat">;
}
