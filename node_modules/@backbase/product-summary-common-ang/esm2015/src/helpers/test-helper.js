import { By } from '@angular/platform-browser';
import { isDefined } from './helpers';
export class TestHelper {
    constructor(fixture) {
        this._fixture = fixture;
    }
    getElement(locator) {
        return this._fixture.debugElement.query(By.css(locator));
    }
    getElements(locator) {
        return this._fixture.debugElement.queryAll(By.css(locator));
    }
    getText(locator) {
        const element = this.getElement(locator);
        if (element) {
            return element.nativeElement.textContent.trim();
        }
        return undefined;
    }
    isElementPresent(locator) {
        return isDefined(this.getElement(locator));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC1oZWxwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3Byb2R1Y3Qtc3VtbWFyeS1jb21tb24tYW5nL3NyYy9oZWxwZXJzL3Rlc3QtaGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxFQUFFLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXRDLE1BQU0sT0FBTyxVQUFVO0lBR3JCLFlBQVksT0FBNEI7UUFDdEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUM7SUFDMUIsQ0FBQztJQUVELFVBQVUsQ0FBQyxPQUFlO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQWU7UUFDekIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRCxPQUFPLENBQUMsT0FBZTtRQUNyQixNQUFNLE9BQU8sR0FBd0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM5RCxJQUFJLE9BQU8sRUFBRTtZQUNYLE9BQU8sT0FBTyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDakQ7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQsZ0JBQWdCLENBQUMsT0FBZTtRQUM5QixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDN0MsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGVidWdFbGVtZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21wb25lbnRGaXh0dXJlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS90ZXN0aW5nJztcbmltcG9ydCB7IEJ5IH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBpc0RlZmluZWQgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5leHBvcnQgY2xhc3MgVGVzdEhlbHBlcjxUPiB7XG4gIHByaXZhdGUgX2ZpeHR1cmU6IENvbXBvbmVudEZpeHR1cmU8VD47XG5cbiAgY29uc3RydWN0b3IoZml4dHVyZTogQ29tcG9uZW50Rml4dHVyZTxUPikge1xuICAgIHRoaXMuX2ZpeHR1cmUgPSBmaXh0dXJlO1xuICB9XG5cbiAgZ2V0RWxlbWVudChsb2NhdG9yOiBzdHJpbmcpOiBEZWJ1Z0VsZW1lbnQgfCBudWxsIHtcbiAgICByZXR1cm4gdGhpcy5fZml4dHVyZS5kZWJ1Z0VsZW1lbnQucXVlcnkoQnkuY3NzKGxvY2F0b3IpKTtcbiAgfVxuXG4gIGdldEVsZW1lbnRzKGxvY2F0b3I6IHN0cmluZyk6IERlYnVnRWxlbWVudFtdIHwgbnVsbCB7XG4gICAgcmV0dXJuIHRoaXMuX2ZpeHR1cmUuZGVidWdFbGVtZW50LnF1ZXJ5QWxsKEJ5LmNzcyhsb2NhdG9yKSk7XG4gIH1cblxuICBnZXRUZXh0KGxvY2F0b3I6IHN0cmluZyk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3QgZWxlbWVudDogRGVidWdFbGVtZW50IHwgbnVsbCA9IHRoaXMuZ2V0RWxlbWVudChsb2NhdG9yKTtcbiAgICBpZiAoZWxlbWVudCkge1xuICAgICAgcmV0dXJuIGVsZW1lbnQubmF0aXZlRWxlbWVudC50ZXh0Q29udGVudC50cmltKCk7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBpc0VsZW1lbnRQcmVzZW50KGxvY2F0b3I6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBpc0RlZmluZWQodGhpcy5nZXRFbGVtZW50KGxvY2F0b3IpKTtcbiAgfVxufVxuIl19