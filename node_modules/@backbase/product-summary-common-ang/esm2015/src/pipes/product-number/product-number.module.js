import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { AccountNumberPipeModule } from '@backbase/ui-ang/account-number-pipe';
import { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';
import { ProductNumberValuePipe } from './product-number-value.pipe';
import { ProductNumberTypePipe } from './product-number-type.pipe';
import { ProductNumberFormatPipe } from './product-number-format.pipe';
import * as i0 from "@angular/core";
const sharedPipes = [AccountNumberPipeModule, PaymentCardNumberModule];
const pipes = [ProductNumberValuePipe, ProductNumberTypePipe, ProductNumberFormatPipe];
export class ProductNumberPipeModule {
}
ProductNumberPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductNumberPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ProductNumberPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductNumberPipeModule, declarations: [ProductNumberValuePipe, ProductNumberTypePipe, ProductNumberFormatPipe], imports: [CommonModule, AccountNumberPipeModule, PaymentCardNumberModule], exports: [AccountNumberPipeModule, PaymentCardNumberModule, ProductNumberValuePipe, ProductNumberTypePipe, ProductNumberFormatPipe] });
ProductNumberPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductNumberPipeModule, imports: [[CommonModule, ...sharedPipes], AccountNumberPipeModule, PaymentCardNumberModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductNumberPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...sharedPipes],
                    declarations: [...pipes],
                    exports: [...sharedPipes, ...pipes],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1udW1iZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9wcm9kdWN0LXN1bW1hcnktY29tbW9uLWFuZy9zcmMvcGlwZXMvcHJvZHVjdC1udW1iZXIvcHJvZHVjdC1udW1iZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ25FLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQUV2RSxNQUFNLFdBQVcsR0FBRyxDQUFDLHVCQUF1QixFQUFFLHVCQUF1QixDQUFDLENBQUM7QUFDdkUsTUFBTSxLQUFLLEdBQUcsQ0FBQyxzQkFBc0IsRUFBRSxxQkFBcUIsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO0FBT3ZGLE1BQU0sT0FBTyx1QkFBdUI7O3FIQUF2Qix1QkFBdUI7c0hBQXZCLHVCQUF1QixpQkFQckIsc0JBQXNCLEVBQUUscUJBQXFCLEVBQUUsdUJBQXVCLGFBR3pFLFlBQVksRUFKSCx1QkFBdUIsRUFBRSx1QkFBdUIsYUFBaEQsdUJBQXVCLEVBQUUsdUJBQXVCLEVBQ3RELHNCQUFzQixFQUFFLHFCQUFxQixFQUFFLHVCQUF1QjtzSEFPeEUsdUJBQXVCLFlBSnpCLENBQUMsWUFBWSxFQUFFLEdBQUcsV0FBVyxDQUFDLEVBSnBCLHVCQUF1QixFQUFFLHVCQUF1Qjs0RkFReEQsdUJBQXVCO2tCQUxuQyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxHQUFHLFdBQVcsQ0FBQztvQkFDdkMsWUFBWSxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUM7b0JBQ3hCLE9BQU8sRUFBRSxDQUFDLEdBQUcsV0FBVyxFQUFFLEdBQUcsS0FBSyxDQUFDO2lCQUNwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQWNjb3VudE51bWJlclBpcGVNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2FjY291bnQtbnVtYmVyLXBpcGUnO1xuaW1wb3J0IHsgUGF5bWVudENhcmROdW1iZXJNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL3BheW1lbnQtY2FyZC1udW1iZXItcGlwZSc7XG5pbXBvcnQgeyBQcm9kdWN0TnVtYmVyVmFsdWVQaXBlIH0gZnJvbSAnLi9wcm9kdWN0LW51bWJlci12YWx1ZS5waXBlJztcbmltcG9ydCB7IFByb2R1Y3ROdW1iZXJUeXBlUGlwZSB9IGZyb20gJy4vcHJvZHVjdC1udW1iZXItdHlwZS5waXBlJztcbmltcG9ydCB7IFByb2R1Y3ROdW1iZXJGb3JtYXRQaXBlIH0gZnJvbSAnLi9wcm9kdWN0LW51bWJlci1mb3JtYXQucGlwZSc7XG5cbmNvbnN0IHNoYXJlZFBpcGVzID0gW0FjY291bnROdW1iZXJQaXBlTW9kdWxlLCBQYXltZW50Q2FyZE51bWJlck1vZHVsZV07XG5jb25zdCBwaXBlcyA9IFtQcm9kdWN0TnVtYmVyVmFsdWVQaXBlLCBQcm9kdWN0TnVtYmVyVHlwZVBpcGUsIFByb2R1Y3ROdW1iZXJGb3JtYXRQaXBlXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgLi4uc2hhcmVkUGlwZXNdLFxuICBkZWNsYXJhdGlvbnM6IFsuLi5waXBlc10sXG4gIGV4cG9ydHM6IFsuLi5zaGFyZWRQaXBlcywgLi4ucGlwZXNdLFxufSlcbmV4cG9ydCBjbGFzcyBQcm9kdWN0TnVtYmVyUGlwZU1vZHVsZSB7fVxuIl19