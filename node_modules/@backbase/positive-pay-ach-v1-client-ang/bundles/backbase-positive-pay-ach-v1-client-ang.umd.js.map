{"version":3,"file":"backbase-positive-pay-ach-v1-client-ang.umd.js","sources":["../../model/exceptionsFilterOrderByEnum.ts","../../model/ruleTypeEnum.ts","../../model/rulesFilterOrderByEnum.ts","../../model/sortDirectionEnum.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/exceptions.service.ts","../../api/exceptions.service.mocks.ts","../../api/rules.service.ts","../../api/rules.service.mocks.ts"],"sourcesContent":["/**\n * Positive Pay ACH Rules Client\n * Operations to manage ACH rules in Positive Pay system.\n *\n * The version of the OpenAPI document: 1.26.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Order by field: transactionDate. Default value is transactionDate. \n */\nexport type ExceptionsFilterOrderByEnum = 'transactionDate';\n\nexport const ExceptionsFilterOrderByEnum = {\n    TransactionDate: 'transactionDate' as ExceptionsFilterOrderByEnum\n};\n\n","/**\n * Positive Pay ACH Rules Client\n * Operations to manage ACH rules in Positive Pay system.\n *\n * The version of the OpenAPI document: 1.26.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of rule - blocker or filter\n */\nexport type RuleTypeEnum = 'BLOCKER' | 'FILTER';\n\nexport const RuleTypeEnum = {\n    BLOCKER: 'BLOCKER' as RuleTypeEnum,\n    FILTER: 'FILTER' as RuleTypeEnum\n};\n\n","/**\n * Positive Pay ACH Rules Client\n * Operations to manage ACH rules in Positive Pay system.\n *\n * The version of the OpenAPI document: 1.26.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Order by field: registrationDate, ruleType, startDate. Default value is registrationDate. \n */\nexport type RulesFilterOrderByEnum = 'registrationDate' | 'ruleType' | 'startDate';\n\nexport const RulesFilterOrderByEnum = {\n    RegistrationDate: 'registrationDate' as RulesFilterOrderByEnum,\n    RuleType: 'ruleType' as RulesFilterOrderByEnum,\n    StartDate: 'startDate' as RulesFilterOrderByEnum\n};\n\n","/**\n * Positive Pay ACH Rules Client\n * Operations to manage ACH rules in Positive Pay system.\n *\n * The version of the OpenAPI document: 1.26.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Direction in which the results are ordered. Default value is DESC.\n */\nexport type SortDirectionEnum = 'ASC' | 'DESC';\n\nexport const SortDirectionEnum = {\n    ASC: 'ASC' as SortDirectionEnum,\n    DESC: 'DESC' as SortDirectionEnum\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const POSITIVE_PAY_ACH_BASE_PATH = new InjectionToken<string>('POSITIVE_PAY_ACH_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface PositivePayAchConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class PositivePayAchConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: PositivePayAchConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link PositivePayAchConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link PositivePayAchConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module PositivePayAchConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { PositivePayAchConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class PositivePayAchApiModule {\n    public static forRoot(configurationFactory: () => PositivePayAchConfiguration): ModuleWithProviders<PositivePayAchApiModule> {\n        return {\n            ngModule: PositivePayAchApiModule,\n            providers: [ { provide: PositivePayAchConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: PositivePayAchApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: PositivePayAchConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('PositivePayAchApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Positive Pay ACH Rules Client\n * Operations to manage ACH rules in Positive Pay system.\n *\n * The version of the OpenAPI document: 1.26.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ExceptionDetailsResponse } from '../model/models';\nimport { ExceptionsFilterRequest } from '../model/models';\nimport { ExceptionsFilterResponse } from '../model/models';\nimport { ModelError } from '../model/models';\n\nimport { POSITIVE_PAY_ACH_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PositivePayAchConfiguration }                                     from '../configuration';\n\n\nexport interface FilterExceptionsRequestParams {\n    [\"body\"]: ExceptionsFilterRequest;\n}\n\nexport interface GetExceptionDetailsRequestParams {\n    /** Exception internal ID. */\n    [\"id\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExceptionsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PositivePayAchConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(POSITIVE_PAY_ACH_BASE_PATH) basePath: string, @Optional() configuration: PositivePayAchConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Returns list of filtered ACH exceptions which have been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterExceptions(requestParameters: FilterExceptionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExceptionsFilterResponse>;\n    /**\n     * Returns list of filtered ACH exceptions which have been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterExceptions(requestParameters: FilterExceptionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExceptionsFilterResponse>>;\n    /**\n     * Returns list of filtered ACH exceptions which have been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterExceptions(requestParameters: FilterExceptionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExceptionsFilterResponse>>;\n    /**\n     * Returns list of filtered ACH exceptions which have been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterExceptions(requestParameters: FilterExceptionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling filterExceptions.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ExceptionsFilterResponse>(`${this.configuration.basePath}/client-api/v1/exceptions`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public filterExceptionsUrl(requestParameters: FilterExceptionsRequestParams): string {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling filterExceptions.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/exceptions`;\n    }\n\n    /**\n     * Retrieve ACH exception details which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExceptionDetails(requestParameters: GetExceptionDetailsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExceptionDetailsResponse>;\n    /**\n     * Retrieve ACH exception details which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExceptionDetails(requestParameters: GetExceptionDetailsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExceptionDetailsResponse>>;\n    /**\n     * Retrieve ACH exception details which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExceptionDetails(requestParameters: GetExceptionDetailsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExceptionDetailsResponse>>;\n    /**\n     * Retrieve ACH exception details which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExceptionDetails(requestParameters: GetExceptionDetailsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getExceptionDetails.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ExceptionDetailsResponse>(`${this.configuration.basePath}/client-api/v1/exceptions/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getExceptionDetailsUrl(requestParameters: GetExceptionDetailsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getExceptionDetails.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/exceptions/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/exceptions URL pattern\n*/\nexport const ExceptionsHttpServiceFilterExceptionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/exceptions\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"exceptions\" : [ {\n    \"id\" : \"df6bf97c-19cc-4056-9524-42cef5ce71b8\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"5123456789\",\n    \"originatorName\" : \"First Originator\",\n    \"standardEntryClass\" : \"CIE\",\n    \"amount\" : {\n      \"amount\" : \"100.00\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T06:30:00.000-05:00\",\n    \"errors\" : [ \"Invalid Standard Entry Class\", \"Originator is blocked\" ]\n  }, {\n    \"id\" : \"8632554d-1d19-4876-b35a-4cef21934bc6\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"paymentType\" : \"ACH Credit\",\n    \"originatorId\" : \"4123456789\",\n    \"originatorName\" : \"Second Originator\",\n    \"standardEntryClass\" : \"CCD\",\n    \"amount\" : {\n      \"amount\" : \"999.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T05:30:00.000-05:00\",\n    \"errors\" : [ \"Invalid Standard Entry Class\", \"Originator is blocked\" ]\n  }, {\n    \"id\" : \"6c5bd090-4430-4c8a-ae3f-d50399b95bd8\",\n    \"arrangementId\" : \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"5120056789\",\n    \"standardEntryClass\" : \"CCD\",\n    \"amount\" : {\n      \"amount\" : \"2657.53\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T04:30:00.000-05:00\",\n    \"errors\" : [ \"Invalid payment type\" ]\n  }, {\n    \"id\" : \"1453f0e5-cb1c-4706-b774-620ad7695163\",\n    \"arrangementId\" : \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"2123456789\",\n    \"originatorName\" : \"Originator First\",\n    \"standardEntryClass\" : \"CIE\",\n    \"amount\" : {\n      \"amount\" : \"10000.00\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T03:30:00.000-05:00\",\n    \"errors\" : [ \"Maximum amount exceeded\" ]\n  }, {\n    \"id\" : \"20d499a0-e60e-47ce-bbb4-cae2abce4dea\",\n    \"arrangementId\" : \"2d94d333-471d-4cd7-84d2-24e822d5ca68\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"1123456789\",\n    \"originatorName\" : \"Originator First\",\n    \"standardEntryClass\" : \"CCD\",\n    \"amount\" : {\n      \"amount\" : \"899.00\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T02:30:00.000-05:00\",\n    \"errors\" : [ \"Maximum amount exceeded\" ]\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/exceptions/{id} URL pattern\n*/\nexport const ExceptionsHttpServiceGetExceptionDetailsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/exceptions/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"df6bf97c-19cc-4056-9524-42cef5ce71b8\",\n  \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n  \"paymentType\" : \"ACH Debit\",\n  \"originatorId\" : \"5123456789\",\n  \"originatorName\" : \"First Originator\",\n  \"standardEntryClass\" : \"CIE\",\n  \"amount\" : {\n    \"amount\" : \"100.00\",\n    \"currencyCode\" : \"USD\"\n  },\n  \"transactionDate\" : \"2020-12-31T06:30:00.000-05:00\",\n  \"errors\" : [ \"Invalid Standard Entry Class\", \"Originator is blocked\" ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const ExceptionsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/exceptions\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"exceptions\" : [ {\n    \"id\" : \"df6bf97c-19cc-4056-9524-42cef5ce71b8\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"5123456789\",\n    \"originatorName\" : \"First Originator\",\n    \"standardEntryClass\" : \"CIE\",\n    \"amount\" : {\n      \"amount\" : \"100.00\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T06:30:00.000-05:00\",\n    \"errors\" : [ \"Invalid Standard Entry Class\", \"Originator is blocked\" ]\n  }, {\n    \"id\" : \"8632554d-1d19-4876-b35a-4cef21934bc6\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"paymentType\" : \"ACH Credit\",\n    \"originatorId\" : \"4123456789\",\n    \"originatorName\" : \"Second Originator\",\n    \"standardEntryClass\" : \"CCD\",\n    \"amount\" : {\n      \"amount\" : \"999.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T05:30:00.000-05:00\",\n    \"errors\" : [ \"Invalid Standard Entry Class\", \"Originator is blocked\" ]\n  }, {\n    \"id\" : \"6c5bd090-4430-4c8a-ae3f-d50399b95bd8\",\n    \"arrangementId\" : \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"5120056789\",\n    \"standardEntryClass\" : \"CCD\",\n    \"amount\" : {\n      \"amount\" : \"2657.53\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T04:30:00.000-05:00\",\n    \"errors\" : [ \"Invalid payment type\" ]\n  }, {\n    \"id\" : \"1453f0e5-cb1c-4706-b774-620ad7695163\",\n    \"arrangementId\" : \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"2123456789\",\n    \"originatorName\" : \"Originator First\",\n    \"standardEntryClass\" : \"CIE\",\n    \"amount\" : {\n      \"amount\" : \"10000.00\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T03:30:00.000-05:00\",\n    \"errors\" : [ \"Maximum amount exceeded\" ]\n  }, {\n    \"id\" : \"20d499a0-e60e-47ce-bbb4-cae2abce4dea\",\n    \"arrangementId\" : \"2d94d333-471d-4cd7-84d2-24e822d5ca68\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"1123456789\",\n    \"originatorName\" : \"Originator First\",\n    \"standardEntryClass\" : \"CCD\",\n    \"amount\" : {\n      \"amount\" : \"899.00\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"transactionDate\" : \"2020-12-31T02:30:00.000-05:00\",\n    \"errors\" : [ \"Maximum amount exceeded\" ]\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/exceptions/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"df6bf97c-19cc-4056-9524-42cef5ce71b8\",\n  \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n  \"paymentType\" : \"ACH Debit\",\n  \"originatorId\" : \"5123456789\",\n  \"originatorName\" : \"First Originator\",\n  \"standardEntryClass\" : \"CIE\",\n  \"amount\" : {\n    \"amount\" : \"100.00\",\n    \"currencyCode\" : \"USD\"\n  },\n  \"transactionDate\" : \"2020-12-31T06:30:00.000-05:00\",\n  \"errors\" : [ \"Invalid Standard Entry Class\", \"Originator is blocked\" ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Positive Pay ACH Rules Client\n * Operations to manage ACH rules in Positive Pay system.\n *\n * The version of the OpenAPI document: 1.26.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BlockerRuleSubmitRequest } from '../model/models';\nimport { BlockerRuleSubmitResponse } from '../model/models';\nimport { FilterRuleSubmitRequest } from '../model/models';\nimport { FilterRuleSubmitResponse } from '../model/models';\nimport { ModelError } from '../model/models';\nimport { RuleDetailsResponse } from '../model/models';\nimport { RulesFilterRequest } from '../model/models';\nimport { RulesFilterResponse } from '../model/models';\n\nimport { POSITIVE_PAY_ACH_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PositivePayAchConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteRuleRequestParams {\n    /** Rule internal ID. */\n    [\"id\"]: string;\n}\n\nexport interface FilterRulesRequestParams {\n    [\"body\"]: RulesFilterRequest;\n}\n\nexport interface GetRuleDetailsRequestParams {\n    /** Rule internal ID. */\n    [\"id\"]: string;\n}\n\nexport interface SubmitBlockerRuleRequestParams {\n    [\"body\"]: BlockerRuleSubmitRequest;\n}\n\nexport interface SubmitFilterRuleRequestParams {\n    [\"body\"]: FilterRuleSubmitRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RulesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PositivePayAchConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(POSITIVE_PAY_ACH_BASE_PATH) basePath: string, @Optional() configuration: PositivePayAchConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete ACH rule which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRule(requestParameters: DeleteRuleRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete ACH rule which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRule(requestParameters: DeleteRuleRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete ACH rule which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRule(requestParameters: DeleteRuleRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete ACH rule which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRule(requestParameters: DeleteRuleRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteRule.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v1/rules/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteRuleUrl(requestParameters: DeleteRuleRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteRule.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rules/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Returns list of filtered rules (blockers and filters) which have been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterRules(requestParameters: FilterRulesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<RulesFilterResponse>;\n    /**\n     * Returns list of filtered rules (blockers and filters) which have been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterRules(requestParameters: FilterRulesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<RulesFilterResponse>>;\n    /**\n     * Returns list of filtered rules (blockers and filters) which have been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterRules(requestParameters: FilterRulesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<RulesFilterResponse>>;\n    /**\n     * Returns list of filtered rules (blockers and filters) which have been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public filterRules(requestParameters: FilterRulesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling filterRules.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<RulesFilterResponse>(`${this.configuration.basePath}/client-api/v1/rules`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public filterRulesUrl(requestParameters: FilterRulesRequestParams): string {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling filterRules.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rules`;\n    }\n\n    /**\n     * Retrieve ACH rule details which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRuleDetails(requestParameters: GetRuleDetailsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<RuleDetailsResponse>;\n    /**\n     * Retrieve ACH rule details which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRuleDetails(requestParameters: GetRuleDetailsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<RuleDetailsResponse>>;\n    /**\n     * Retrieve ACH rule details which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRuleDetails(requestParameters: GetRuleDetailsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<RuleDetailsResponse>>;\n    /**\n     * Retrieve ACH rule details which has been submitted to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRuleDetails(requestParameters: GetRuleDetailsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getRuleDetails.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<RuleDetailsResponse>(`${this.configuration.basePath}/client-api/v1/rules/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getRuleDetailsUrl(requestParameters: GetRuleDetailsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getRuleDetails.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rules/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Submit ACH blocker rule to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitBlockerRule(requestParameters: SubmitBlockerRuleRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BlockerRuleSubmitResponse>;\n    /**\n     * Submit ACH blocker rule to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitBlockerRule(requestParameters: SubmitBlockerRuleRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BlockerRuleSubmitResponse>>;\n    /**\n     * Submit ACH blocker rule to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitBlockerRule(requestParameters: SubmitBlockerRuleRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BlockerRuleSubmitResponse>>;\n    /**\n     * Submit ACH blocker rule to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitBlockerRule(requestParameters: SubmitBlockerRuleRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling submitBlockerRule.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<BlockerRuleSubmitResponse>(`${this.configuration.basePath}/client-api/v1/rules/blockers`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public submitBlockerRuleUrl(requestParameters: SubmitBlockerRuleRequestParams): string {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling submitBlockerRule.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rules/blockers`;\n    }\n\n    /**\n     * Submit ACH filter rule to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitFilterRule(requestParameters: SubmitFilterRuleRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<FilterRuleSubmitResponse>;\n    /**\n     * Submit ACH filter rule to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitFilterRule(requestParameters: SubmitFilterRuleRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<FilterRuleSubmitResponse>>;\n    /**\n     * Submit ACH filter rule to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitFilterRule(requestParameters: SubmitFilterRuleRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<FilterRuleSubmitResponse>>;\n    /**\n     * Submit ACH filter rule to Positive Pay system.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public submitFilterRule(requestParameters: SubmitFilterRuleRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling submitFilterRule.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FilterRuleSubmitResponse>(`${this.configuration.basePath}/client-api/v1/rules/filters`,\n            _body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public submitFilterRuleUrl(requestParameters: SubmitFilterRuleRequestParams): string {\n        const _body = requestParameters[\"body\"];\n        if (_body === null || _body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling submitFilterRule.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rules/filters`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/rules/{id} URL pattern\n*/\nexport const RulesHttpServiceDeleteRuleMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rules/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rules URL pattern\n*/\nexport const RulesHttpServiceFilterRulesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rules\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"rules\" : [ {\n    \"id\" : \"5\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n    \"ruleType\" : \"BLOCKER\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"5123456789\",\n    \"originatorName\" : \"First Originator\",\n    \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n    \"startDate\" : \"2021-12-01\",\n    \"endDate\" : \"2021-12-31\",\n    \"registrationDate\" : \"2020-12-31T06:30:00.000-05:00\"\n  }, {\n    \"id\" : \"4\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"ruleType\" : \"FILTER\",\n    \"paymentType\" : \"ACH Credit\",\n    \"originatorId\" : \"4123456789\",\n    \"originatorName\" : \"Second Originator\",\n    \"standardEntryClass\" : [ \"CCD\" ],\n    \"startDate\" : \"2021-12-01\",\n    \"endDate\" : \"2021-12-31\",\n    \"frequency\" : \"Weekly\",\n    \"maximumAmount\" : {\n      \"amount\" : \"999.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"registrationDate\" : \"2020-12-31T05:30:00.000-05:00\"\n  }, {\n    \"id\" : \"3\",\n    \"arrangementId\" : \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\",\n    \"ruleType\" : \"BLOCKER\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"*\",\n    \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n    \"startDate\" : \"2021-12-01\",\n    \"endDate\" : \"2021-12-31\",\n    \"registrationDate\" : \"2020-12-31T04:30:00.000-05:00\"\n  }, {\n    \"id\" : \"2\",\n    \"arrangementId\" : \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\",\n    \"ruleType\" : \"BLOCKER\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"2123456789\",\n    \"originatorName\" : \"Originator First\",\n    \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n    \"startDate\" : \"2022-01-01\",\n    \"endDate\" : \"2022-01-31\",\n    \"registrationDate\" : \"2020-12-31T03:30:00.000-05:00\"\n  }, {\n    \"id\" : \"1\",\n    \"arrangementId\" : \"2d94d333-471d-4cd7-84d2-24e822d5ca68\",\n    \"ruleType\" : \"BLOCKER\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"1123456789\",\n    \"originatorName\" : \"Originator First\",\n    \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n    \"startDate\" : \"2021-12-01\",\n    \"endDate\" : \"2021-12-31\",\n    \"registrationDate\" : \"2020-12-31T02:30:00.000-05:00\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rules/{id} URL pattern\n*/\nexport const RulesHttpServiceGetRuleDetailsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rules/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\",\n  \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4691\",\n  \"ruleType\" : \"FILTER\",\n  \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n  \"originatorId\" : \"1123456789\",\n  \"originatorName\" : \"Originator First\",\n  \"startDate\" : \"2021-12-01\",\n  \"endDate\" : \"2021-12-31\",\n  \"frequency\" : \"Once\",\n  \"maximumAmount\" : {\n    \"amount\" : \"999.99\",\n    \"currencyCode\" : \"USD\"\n  },\n  \"paymentType\" : \"ACH Debit\",\n  \"additions\" : {\n    \"key\" : \"value\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rules/blockers URL pattern\n*/\nexport const RulesHttpServiceSubmitBlockerRuleMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rules/blockers\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rules/filters URL pattern\n*/\nexport const RulesHttpServiceSubmitFilterRuleMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rules/filters\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const RulesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/rules/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rules\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"rules\" : [ {\n    \"id\" : \"5\",\n    \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4692\",\n    \"ruleType\" : \"BLOCKER\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"5123456789\",\n    \"originatorName\" : \"First Originator\",\n    \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n    \"startDate\" : \"2021-12-01\",\n    \"endDate\" : \"2021-12-31\",\n    \"registrationDate\" : \"2020-12-31T06:30:00.000-05:00\"\n  }, {\n    \"id\" : \"4\",\n    \"arrangementId\" : \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\",\n    \"ruleType\" : \"FILTER\",\n    \"paymentType\" : \"ACH Credit\",\n    \"originatorId\" : \"4123456789\",\n    \"originatorName\" : \"Second Originator\",\n    \"standardEntryClass\" : [ \"CCD\" ],\n    \"startDate\" : \"2021-12-01\",\n    \"endDate\" : \"2021-12-31\",\n    \"frequency\" : \"Weekly\",\n    \"maximumAmount\" : {\n      \"amount\" : \"999.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"registrationDate\" : \"2020-12-31T05:30:00.000-05:00\"\n  }, {\n    \"id\" : \"3\",\n    \"arrangementId\" : \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\",\n    \"ruleType\" : \"BLOCKER\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"*\",\n    \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n    \"startDate\" : \"2021-12-01\",\n    \"endDate\" : \"2021-12-31\",\n    \"registrationDate\" : \"2020-12-31T04:30:00.000-05:00\"\n  }, {\n    \"id\" : \"2\",\n    \"arrangementId\" : \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\",\n    \"ruleType\" : \"BLOCKER\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"2123456789\",\n    \"originatorName\" : \"Originator First\",\n    \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n    \"startDate\" : \"2022-01-01\",\n    \"endDate\" : \"2022-01-31\",\n    \"registrationDate\" : \"2020-12-31T03:30:00.000-05:00\"\n  }, {\n    \"id\" : \"1\",\n    \"arrangementId\" : \"2d94d333-471d-4cd7-84d2-24e822d5ca68\",\n    \"ruleType\" : \"BLOCKER\",\n    \"paymentType\" : \"ACH Debit\",\n    \"originatorId\" : \"1123456789\",\n    \"originatorName\" : \"Originator First\",\n    \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n    \"startDate\" : \"2021-12-01\",\n    \"endDate\" : \"2021-12-31\",\n    \"registrationDate\" : \"2020-12-31T02:30:00.000-05:00\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rules/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\",\n  \"arrangementId\" : \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4691\",\n  \"ruleType\" : \"FILTER\",\n  \"standardEntryClass\" : [ \"CCD\", \"CIE\" ],\n  \"originatorId\" : \"1123456789\",\n  \"originatorName\" : \"Originator First\",\n  \"startDate\" : \"2021-12-01\",\n  \"endDate\" : \"2021-12-31\",\n  \"frequency\" : \"Once\",\n  \"maximumAmount\" : {\n    \"amount\" : \"999.99\",\n    \"currencyCode\" : \"USD\"\n  },\n  \"paymentType\" : \"ACH Debit\",\n  \"additions\" : {\n    \"key\" : \"value\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rules/blockers\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rules/filters\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"849d66ae-c942-2ba7-8739-c5a38a596f32\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","Injectable","Inject","createMocks"],"mappings":"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"}