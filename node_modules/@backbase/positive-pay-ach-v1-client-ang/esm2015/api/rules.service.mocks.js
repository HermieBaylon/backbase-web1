import { createMocks } from '@backbase/foundation-ang/data-http';
export const RulesHttpServiceDeleteRuleMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/rules/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const RulesHttpServiceFilterRulesMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/rules",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "rules": [{
                            "id": "5",
                            "arrangementId": "1cdb2224-8926-4b4d-a99f-1c9dfbbb4692",
                            "ruleType": "BLOCKER",
                            "paymentType": "ACH Debit",
                            "originatorId": "5123456789",
                            "originatorName": "First Originator",
                            "standardEntryClass": ["CCD", "CIE"],
                            "startDate": "2021-12-01",
                            "endDate": "2021-12-31",
                            "registrationDate": "2020-12-31T06:30:00.000-05:00"
                        }, {
                            "id": "4",
                            "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4600",
                            "ruleType": "FILTER",
                            "paymentType": "ACH Credit",
                            "originatorId": "4123456789",
                            "originatorName": "Second Originator",
                            "standardEntryClass": ["CCD"],
                            "startDate": "2021-12-01",
                            "endDate": "2021-12-31",
                            "frequency": "Weekly",
                            "maximumAmount": {
                                "amount": "999.99",
                                "currencyCode": "USD"
                            },
                            "registrationDate": "2020-12-31T05:30:00.000-05:00"
                        }, {
                            "id": "3",
                            "arrangementId": "4cdb2224-8926-4b4d-a99f-1c9dfbbb4697",
                            "ruleType": "BLOCKER",
                            "paymentType": "ACH Debit",
                            "originatorId": "*",
                            "standardEntryClass": ["CCD", "CIE"],
                            "startDate": "2021-12-01",
                            "endDate": "2021-12-31",
                            "registrationDate": "2020-12-31T04:30:00.000-05:00"
                        }, {
                            "id": "2",
                            "arrangementId": "5cdb2224-8926-4b4d-a99f-1c9dfbbb4696",
                            "ruleType": "BLOCKER",
                            "paymentType": "ACH Debit",
                            "originatorId": "2123456789",
                            "originatorName": "Originator First",
                            "standardEntryClass": ["CCD", "CIE"],
                            "startDate": "2022-01-01",
                            "endDate": "2022-01-31",
                            "registrationDate": "2020-12-31T03:30:00.000-05:00"
                        }, {
                            "id": "1",
                            "arrangementId": "2d94d333-471d-4cd7-84d2-24e822d5ca68",
                            "ruleType": "BLOCKER",
                            "paymentType": "ACH Debit",
                            "originatorId": "1123456789",
                            "originatorName": "Originator First",
                            "standardEntryClass": ["CCD", "CIE"],
                            "startDate": "2021-12-01",
                            "endDate": "2021-12-31",
                            "registrationDate": "2020-12-31T02:30:00.000-05:00"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const RulesHttpServiceGetRuleDetailsMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/rules/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "849d66ae-c942-2ba7-8739-c5a38a596f32",
                    "arrangementId": "1cdb2224-8926-4b4d-a99f-1c9dfbbb4691",
                    "ruleType": "FILTER",
                    "standardEntryClass": ["CCD", "CIE"],
                    "originatorId": "1123456789",
                    "originatorName": "Originator First",
                    "startDate": "2021-12-01",
                    "endDate": "2021-12-31",
                    "frequency": "Once",
                    "maximumAmount": {
                        "amount": "999.99",
                        "currencyCode": "USD"
                    },
                    "paymentType": "ACH Debit",
                    "additions": {
                        "key": "value"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const RulesHttpServiceSubmitBlockerRuleMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/rules/blockers",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "849d66ae-c942-2ba7-8739-c5a38a596f32"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const RulesHttpServiceSubmitFilterRuleMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/rules/filters",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "849d66ae-c942-2ba7-8739-c5a38a596f32"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const RulesHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/rules/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/rules",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "rules": [{
                            "id": "5",
                            "arrangementId": "1cdb2224-8926-4b4d-a99f-1c9dfbbb4692",
                            "ruleType": "BLOCKER",
                            "paymentType": "ACH Debit",
                            "originatorId": "5123456789",
                            "originatorName": "First Originator",
                            "standardEntryClass": ["CCD", "CIE"],
                            "startDate": "2021-12-01",
                            "endDate": "2021-12-31",
                            "registrationDate": "2020-12-31T06:30:00.000-05:00"
                        }, {
                            "id": "4",
                            "arrangementId": "3cdb2224-8926-4b4d-a99f-1c9dfbbb4600",
                            "ruleType": "FILTER",
                            "paymentType": "ACH Credit",
                            "originatorId": "4123456789",
                            "originatorName": "Second Originator",
                            "standardEntryClass": ["CCD"],
                            "startDate": "2021-12-01",
                            "endDate": "2021-12-31",
                            "frequency": "Weekly",
                            "maximumAmount": {
                                "amount": "999.99",
                                "currencyCode": "USD"
                            },
                            "registrationDate": "2020-12-31T05:30:00.000-05:00"
                        }, {
                            "id": "3",
                            "arrangementId": "4cdb2224-8926-4b4d-a99f-1c9dfbbb4697",
                            "ruleType": "BLOCKER",
                            "paymentType": "ACH Debit",
                            "originatorId": "*",
                            "standardEntryClass": ["CCD", "CIE"],
                            "startDate": "2021-12-01",
                            "endDate": "2021-12-31",
                            "registrationDate": "2020-12-31T04:30:00.000-05:00"
                        }, {
                            "id": "2",
                            "arrangementId": "5cdb2224-8926-4b4d-a99f-1c9dfbbb4696",
                            "ruleType": "BLOCKER",
                            "paymentType": "ACH Debit",
                            "originatorId": "2123456789",
                            "originatorName": "Originator First",
                            "standardEntryClass": ["CCD", "CIE"],
                            "startDate": "2022-01-01",
                            "endDate": "2022-01-31",
                            "registrationDate": "2020-12-31T03:30:00.000-05:00"
                        }, {
                            "id": "1",
                            "arrangementId": "2d94d333-471d-4cd7-84d2-24e822d5ca68",
                            "ruleType": "BLOCKER",
                            "paymentType": "ACH Debit",
                            "originatorId": "1123456789",
                            "originatorName": "Originator First",
                            "standardEntryClass": ["CCD", "CIE"],
                            "startDate": "2021-12-01",
                            "endDate": "2021-12-31",
                            "registrationDate": "2020-12-31T02:30:00.000-05:00"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/rules/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "849d66ae-c942-2ba7-8739-c5a38a596f32",
                    "arrangementId": "1cdb2224-8926-4b4d-a99f-1c9dfbbb4691",
                    "ruleType": "FILTER",
                    "standardEntryClass": ["CCD", "CIE"],
                    "originatorId": "1123456789",
                    "originatorName": "Originator First",
                    "startDate": "2021-12-01",
                    "endDate": "2021-12-31",
                    "frequency": "Once",
                    "maximumAmount": {
                        "amount": "999.99",
                        "currencyCode": "USD"
                    },
                    "paymentType": "ACH Debit",
                    "additions": {
                        "key": "value"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/rules/blockers",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "849d66ae-c942-2ba7-8739-c5a38a596f32"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/rules/filters",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "849d66ae-c942-2ba7-8739-c5a38a596f32"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVsZXMuc2VydmljZS5tb2Nrcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FwaS9ydWxlcy5zZXJ2aWNlLm1vY2tzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQU1qRSxNQUFNLENBQUMsTUFBTSx1Q0FBdUMsR0FBYSxXQUFXLENBQUMsQ0FBQztRQUN0RSxVQUFVLEVBQUUsMkJBQTJCO1FBQ3ZDLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLFNBQVMsRUFBRTtZQUNIO2dCQUNBLE1BQU0sRUFBRSxHQUFHO2dCQUNYLElBQUksRUFBRSxFQUFFO2FBQ1A7WUFDRDtnQkFDSSxNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUU7b0JBQ3hCLFNBQVMsRUFBRyxhQUFhO29CQUN6QixLQUFLLEVBQUcsZUFBZTtvQkFDdkIsUUFBUSxFQUFHLENBQUU7NEJBQ1gsU0FBUyxFQUFHLGtEQUFrRDs0QkFDOUQsS0FBSyxFQUFHLHFCQUFxQjs0QkFDN0IsU0FBUyxFQUFHO2dDQUNWLEtBQUssRUFBRyxJQUFJO2dDQUNaLEtBQUssRUFBRyxHQUFHOzZCQUNaO3lCQUNGLENBQUU7aUJBQ0o7YUFDZ0I7WUFDRDtnQkFDSSxNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUU7b0JBQ3hCLFNBQVMsRUFBRyxzQ0FBc0M7b0JBQ2xELEtBQUssRUFBRyxlQUFlO29CQUN2QixRQUFRLEVBQUcsQ0FBRTs0QkFDWCxTQUFTLEVBQUcsb0RBQW9EOzRCQUNoRSxLQUFLLEVBQUcsa0JBQWtCOzRCQUMxQixTQUFTLEVBQUc7Z0NBQ1YsYUFBYSxFQUFHLFNBQVM7NkJBQzFCO3lCQUNGLENBQUU7aUJBQ0o7YUFDZ0I7WUFDRDtnQkFDSSxNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUU7b0JBQ3hCLFNBQVMsRUFBRyxzQ0FBc0M7b0JBQ2xELEtBQUssRUFBRyxlQUFlO29CQUN2QixR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bEQsS0FBSyxFQUFHLGVBQWU7b0JBQ3ZCLFFBQVEsRUFBRyxDQUFFOzRCQUNYLFNBQVMsRUFBRyxvREFBb0Q7NEJBQ2hFLEtBQUssRUFBRyxrQkFBa0I7NEJBQzFCLFNBQVMsRUFBRztnQ0FDVixhQUFhLEVBQUcsU0FBUzs2QkFDMUI7eUJBQ0YsQ0FBRTtpQkFDSjthQUNZO1lBRUQ7Z0JBQ0ksTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsSUFBSSxFQUFFO29CQUNwQixTQUFTLEVBQUcsc0NBQXNDO29CQUNsRCxLQUFLLEVBQUcsZUFBZTtvQkFDdkIsUUFBUSxFQUFHLENBQUU7NEJBQ1gsU0FBUyxFQUFHLHNFQUFzRTs0QkFDbEYsS0FBSyxFQUFHLGtCQUFrQjs0QkFDMUIsU0FBUyxFQUFHO2dDQUNWLE9BQU8sRUFBRyxXQUFXOzZCQUN0Qjt5QkFDRixDQUFFO2lCQUNKO2FBQ1k7WUFFRDtnQkFDSSxNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUU7b0JBQ3BCLFNBQVMsRUFBRyxzQkFBc0I7aUJBQ25DO2FBQ1k7U0FDUjtLQUNKO0NBQ0EsQ0FDQSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTW9ja3MgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvZGF0YS1odHRwJztcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuKiBNb2NrcyBwcm92aWRlciBmb3IgL2NsaWVudC1hcGkvdjEvcnVsZXMve2lkfSBVUkwgcGF0dGVyblxuKi9cbmV4cG9ydCBjb25zdCBSdWxlc0h0dHBTZXJ2aWNlRGVsZXRlUnVsZU1vY2tzUHJvdmlkZXI6IFByb3ZpZGVyID0gY3JlYXRlTW9ja3MoW3tcbiAgICAgICAgdXJsUGF0dGVybjogXCIvY2xpZW50LWFwaS92MS9ydWxlcy97aWR9XCIsXG4gICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgICAgcmVzcG9uc2VzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogMjA0LFxuICAgICAgICAgICAgICAgIGJvZHk6IFwiXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkJhZCBSZXF1ZXN0XCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJWYWx1ZSBFeGNlZWRlZC4gTXVzdCBiZSBiZXR3ZWVuIHttaW59IGFuZCB7bWF4fS5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnNob2VzaXplXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcIm1heFwiIDogXCI1MFwiLFxuICAgICAgXCJtaW5cIiA6IFwiMVwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDEsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkFjY2VzcyB0byByZXF1ZXN0ZWQgcmVzb3VyY2UgZGVuaWVkLlwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiUmVzb3VyY2UgYWNjZXNzIGRlbmllZCBkdWUgdG8gaW52YWxpZCBjcmVkZW50aWFscy5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnRva2VuXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcImFjY2Vzc1Rva2VuXCIgOiBcImV4cGlyZWRcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogNDAzLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJBY2Nlc3MgdG8gcmVxdWVzdGVkIHJlc291cmNlIGRlbmllZC5cIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlJlc291cmNlIGFjY2VzcyBkZW5pZWQgZHVlIHRvIGFuIGluc3VmZmljaWVudCB1c2VyIHF1b3RhIG9mIHtxdW90YX0uXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS5xdW90YVwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJxdW90YVwiIDogXCJzb21lUXVvdGFcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogNDA0LFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJSZXNvdXJjZSBub3QgZm91bmQuXCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJVbmFibGUgdG8gZmluZCB0aGUgcmVzb3VyY2UgcmVxdWVzdGVkIHJlc291cmNlOiB7cmVzb3VyY2V9LlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkucmVzb3VyY2VcIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwicmVzb3VyY2VcIiA6IFwiYVJlc291cmNlXCJcbiAgICB9XG4gIH0gXVxufVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiRGVzY3JpcHRpb24gb2YgZXJyb3JcIlxufVxuICAgICAgICAgICAgICAgIH0sXG4gICAgXVxufV0pO1xuLyoqXG4qIE1vY2tzIHByb3ZpZGVyIGZvciAvY2xpZW50LWFwaS92MS9ydWxlcyBVUkwgcGF0dGVyblxuKi9cbmV4cG9ydCBjb25zdCBSdWxlc0h0dHBTZXJ2aWNlRmlsdGVyUnVsZXNNb2Nrc1Byb3ZpZGVyOiBQcm92aWRlciA9IGNyZWF0ZU1vY2tzKFt7XG4gICAgICAgIHVybFBhdHRlcm46IFwiL2NsaWVudC1hcGkvdjEvcnVsZXNcIixcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgcmVzcG9uc2VzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgYm9keToge1xuICBcInJ1bGVzXCIgOiBbIHtcbiAgICBcImlkXCIgOiBcIjVcIixcbiAgICBcImFycmFuZ2VtZW50SWRcIiA6IFwiMWNkYjIyMjQtODkyNi00YjRkLWE5OWYtMWM5ZGZiYmI0NjkyXCIsXG4gICAgXCJydWxlVHlwZVwiIDogXCJCTE9DS0VSXCIsXG4gICAgXCJwYXltZW50VHlwZVwiIDogXCJBQ0ggRGViaXRcIixcbiAgICBcIm9yaWdpbmF0b3JJZFwiIDogXCI1MTIzNDU2Nzg5XCIsXG4gICAgXCJvcmlnaW5hdG9yTmFtZVwiIDogXCJGaXJzdCBPcmlnaW5hdG9yXCIsXG4gICAgXCJzdGFuZGFyZEVudHJ5Q2xhc3NcIiA6IFsgXCJDQ0RcIiwgXCJDSUVcIiBdLFxuICAgIFwic3RhcnREYXRlXCIgOiBcIjIwMjEtMTItMDFcIixcbiAgICBcImVuZERhdGVcIiA6IFwiMjAyMS0xMi0zMVwiLFxuICAgIFwicmVnaXN0cmF0aW9uRGF0ZVwiIDogXCIyMDIwLTEyLTMxVDA2OjMwOjAwLjAwMC0wNTowMFwiXG4gIH0sIHtcbiAgICBcImlkXCIgOiBcIjRcIixcbiAgICBcImFycmFuZ2VtZW50SWRcIiA6IFwiM2NkYjIyMjQtODkyNi00YjRkLWE5OWYtMWM5ZGZiYmI0NjAwXCIsXG4gICAgXCJydWxlVHlwZVwiIDogXCJGSUxURVJcIixcbiAgICBcInBheW1lbnRUeXBlXCIgOiBcIkFDSCBDcmVkaXRcIixcbiAgICBcIm9yaWdpbmF0b3JJZFwiIDogXCI0MTIzNDU2Nzg5XCIsXG4gICAgXCJvcmlnaW5hdG9yTmFtZVwiIDogXCJTZWNvbmQgT3JpZ2luYXRvclwiLFxuICAgIFwic3RhbmRhcmRFbnRyeUNsYXNzXCIgOiBbIFwiQ0NEXCIgXSxcbiAgICBcInN0YXJ0RGF0ZVwiIDogXCIyMDIxLTEyLTAxXCIsXG4gICAgXCJlbmREYXRlXCIgOiBcIjIwMjEtMTItMzFcIixcbiAgICBcImZyZXF1ZW5jeVwiIDogXCJXZWVrbHlcIixcbiAgICBcIm1heGltdW1BbW91bnRcIiA6IHtcbiAgICAgIFwiYW1vdW50XCIgOiBcIjk5OS45OVwiLFxuICAgICAgXCJjdXJyZW5jeUNvZGVcIiA6IFwiVVNEXCJcbiAgICB9LFxuICAgIFwicmVnaXN0cmF0aW9uRGF0ZVwiIDogXCIyMDIwLTEyLTMxVDA1OjMwOjAwLjAwMC0wNTowMFwiXG4gIH0sIHtcbiAgICBcImlkXCIgOiBcIjNcIixcbiAgICBcImFycmFuZ2VtZW50SWRcIiA6IFwiNGNkYjIyMjQtODkyNi00YjRkLWE5OWYtMWM5ZGZiYmI0Njk3XCIsXG4gICAgXCJydWxlVHlwZVwiIDogXCJCTE9DS0VSXCIsXG4gICAgXCJwYXltZW50VHlwZVwiIDogXCJBQ0ggRGViaXRcIixcbiAgICBcIm9yaWdpbmF0b3JJZFwiIDogXCIqXCIsXG4gICAgXCJzdGFuZGFyZEVudHJ5Q2xhc3NcIiA6IFsgXCJDQ0RcIiwgXCJDSUVcIiBdLFxuICAgIFwic3RhcnREYXRlXCIgOiBcIjIwMjEtMTItMDFcIixcbiAgICBcImVuZERhdGVcIiA6IFwiMjAyMS0xMi0zMVwiLFxuICAgIFwicmVnaXN0cmF0aW9uRGF0ZVwiIDogXCIyMDIwLTEyLTMxVDA0OjMwOjAwLjAwMC0wNTowMFwiXG4gIH0sIHtcbiAgICBcImlkXCIgOiBcIjJcIixcbiAgICBcImFycmFuZ2VtZW50SWRcIiA6IFwiNWNkYjIyMjQtODkyNi00YjRkLWE5OWYtMWM5ZGZiYmI0Njk2XCIsXG4gICAgXCJydWxlVHlwZVwiIDogXCJCTE9DS0VSXCIsXG4gICAgXCJwYXltZW50VHlwZVwiIDogXCJBQ0ggRGViaXRcIixcbiAgICBcIm9yaWdpbmF0b3JJZFwiIDogXCIyMTIzNDU2Nzg5XCIsXG4gICAgXCJvcmlnaW5hdG9yTmFtZVwiIDogXCJPcmlnaW5hdG9yIEZpcnN0XCIsXG4gICAgXCJzdGFuZGFyZEVudHJ5Q2xhc3NcIiA6IFsgXCJDQ0RcIiwgXCJDSUVcIiBdLFxuICAgIFwic3RhcnREYXRlXCIgOiBcIjIwMjItMDEtMDFcIixcbiAgICBcImVuZERhdGVcIiA6IFwiMjAyMi0wMS0zMVwiLFxuICAgIFwicmVnaXN0cmF0aW9uRGF0ZVwiIDogXCIyMDIwLTEyLTMxVDAzOjMwOjAwLjAwMC0wNTowMFwiXG4gIH0sIHtcbiAgICBcImlkXCIgOiBcIjFcIixcbiAgICBcImFycmFuZ2VtZW50SWRcIiA6IFwiMmQ5NGQzMzMtNDcxZC00Y2Q3LTg0ZDItMjRlODIyZDVjYTY4XCIsXG4gICAgXCJydWxlVHlwZVwiIDogXCJCTE9DS0VSXCIsXG4gICAgXCJwYXltZW50VHlwZVwiIDogXCJBQ0ggRGViaXRcIixcbiAgICBcIm9yaWdpbmF0b3JJZFwiIDogXCIxMTIzNDU2Nzg5XCIsXG4gICAgXCJvcmlnaW5hdG9yTmFtZVwiIDogXCJPcmlnaW5hdG9yIEZpcnN0XCIsXG4gICAgXCJzdGFuZGFyZEVudHJ5Q2xhc3NcIiA6IFsgXCJDQ0RcIiwgXCJDSUVcIiBdLFxuICAgIFwic3RhcnREYXRlXCIgOiBcIjIwMjEtMTItMDFcIixcbiAgICBcImVuZERhdGVcIiA6IFwiMjAyMS0xMi0zMVwiLFxuICAgIFwicmVnaXN0cmF0aW9uRGF0ZVwiIDogXCIyMDIwLTEyLTMxVDAyOjMwOjAwLjAwMC0wNTowMFwiXG4gIH0gXVxufVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMCxcbiAgICAgICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQmFkIFJlcXVlc3RcIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlZhbHVlIEV4Y2VlZGVkLiBNdXN0IGJlIGJldHdlZW4ge21pbn0gYW5kIHttYXh9LlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkuc2hvZXNpemVcIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwibWF4XCIgOiBcIjUwXCIsXG4gICAgICBcIm1pblwiIDogXCIxXCJcbiAgICB9XG4gIH0gXVxufVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMSxcbiAgICAgICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQWNjZXNzIHRvIHJlcXVlc3RlZCByZXNvdXJjZSBkZW5pZWQuXCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJSZXNvdXJjZSBhY2Nlc3MgZGVuaWVkIGR1ZSB0byBpbnZhbGlkIGNyZWRlbnRpYWxzLlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkudG9rZW5cIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwiYWNjZXNzVG9rZW5cIiA6IFwiZXhwaXJlZFwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDMsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkFjY2VzcyB0byByZXF1ZXN0ZWQgcmVzb3VyY2UgZGVuaWVkLlwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiUmVzb3VyY2UgYWNjZXNzIGRlbmllZCBkdWUgdG8gYW4gaW5zdWZmaWNpZW50IHVzZXIgcXVvdGEgb2Yge3F1b3RhfS5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnF1b3RhXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcInF1b3RhXCIgOiBcInNvbWVRdW90YVwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkRlc2NyaXB0aW9uIG9mIGVycm9yXCJcbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgIF1cbn1dKTtcbi8qKlxuKiBNb2NrcyBwcm92aWRlciBmb3IgL2NsaWVudC1hcGkvdjEvcnVsZXMve2lkfSBVUkwgcGF0dGVyblxuKi9cbmV4cG9ydCBjb25zdCBSdWxlc0h0dHBTZXJ2aWNlR2V0UnVsZURldGFpbHNNb2Nrc1Byb3ZpZGVyOiBQcm92aWRlciA9IGNyZWF0ZU1vY2tzKFt7XG4gICAgICAgIHVybFBhdHRlcm46IFwiL2NsaWVudC1hcGkvdjEvcnVsZXMve2lkfVwiLFxuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgIHJlc3BvbnNlczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJpZFwiIDogXCI4NDlkNjZhZS1jOTQyLTJiYTctODczOS1jNWEzOGE1OTZmMzJcIixcbiAgXCJhcnJhbmdlbWVudElkXCIgOiBcIjFjZGIyMjI0LTg5MjYtNGI0ZC1hOTlmLTFjOWRmYmJiNDY5MVwiLFxuICBcInJ1bGVUeXBlXCIgOiBcIkZJTFRFUlwiLFxuICBcInN0YW5kYXJkRW50cnlDbGFzc1wiIDogWyBcIkNDRFwiLCBcIkNJRVwiIF0sXG4gIFwib3JpZ2luYXRvcklkXCIgOiBcIjExMjM0NTY3ODlcIixcbiAgXCJvcmlnaW5hdG9yTmFtZVwiIDogXCJPcmlnaW5hdG9yIEZpcnN0XCIsXG4gIFwic3RhcnREYXRlXCIgOiBcIjIwMjEtMTItMDFcIixcbiAgXCJlbmREYXRlXCIgOiBcIjIwMjEtMTItMzFcIixcbiAgXCJmcmVxdWVuY3lcIiA6IFwiT25jZVwiLFxuICBcIm1heGltdW1BbW91bnRcIiA6IHtcbiAgICBcImFtb3VudFwiIDogXCI5OTkuOTlcIixcbiAgICBcImN1cnJlbmN5Q29kZVwiIDogXCJVU0RcIlxuICB9LFxuICBcInBheW1lbnRUeXBlXCIgOiBcIkFDSCBEZWJpdFwiLFxuICBcImFkZGl0aW9uc1wiIDoge1xuICAgIFwia2V5XCIgOiBcInZhbHVlXCJcbiAgfVxufVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMCxcbiAgICAgICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQmFkIFJlcXVlc3RcIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlZhbHVlIEV4Y2VlZGVkLiBNdXN0IGJlIGJldHdlZW4ge21pbn0gYW5kIHttYXh9LlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkuc2hvZXNpemVcIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwibWF4XCIgOiBcIjUwXCIsXG4gICAgICBcIm1pblwiIDogXCIxXCJcbiAgICB9XG4gIH0gXVxufVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMSxcbiAgICAgICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQWNjZXNzIHRvIHJlcXVlc3RlZCByZXNvdXJjZSBkZW5pZWQuXCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJSZXNvdXJjZSBhY2Nlc3MgZGVuaWVkIGR1ZSB0byBpbnZhbGlkIGNyZWRlbnRpYWxzLlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkudG9rZW5cIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwiYWNjZXNzVG9rZW5cIiA6IFwiZXhwaXJlZFwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDMsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkFjY2VzcyB0byByZXF1ZXN0ZWQgcmVzb3VyY2UgZGVuaWVkLlwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiUmVzb3VyY2UgYWNjZXNzIGRlbmllZCBkdWUgdG8gYW4gaW5zdWZmaWNpZW50IHVzZXIgcXVvdGEgb2Yge3F1b3RhfS5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnF1b3RhXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcInF1b3RhXCIgOiBcInNvbWVRdW90YVwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDQsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIlJlc291cmNlIG5vdCBmb3VuZC5cIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlVuYWJsZSB0byBmaW5kIHRoZSByZXNvdXJjZSByZXF1ZXN0ZWQgcmVzb3VyY2U6IHtyZXNvdXJjZX0uXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS5yZXNvdXJjZVwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJyZXNvdXJjZVwiIDogXCJhUmVzb3VyY2VcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogNTAwLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJEZXNjcmlwdGlvbiBvZiBlcnJvclwiXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICBdXG59XSk7XG4vKipcbiogTW9ja3MgcHJvdmlkZXIgZm9yIC9jbGllbnQtYXBpL3YxL3J1bGVzL2Jsb2NrZXJzIFVSTCBwYXR0ZXJuXG4qL1xuZXhwb3J0IGNvbnN0IFJ1bGVzSHR0cFNlcnZpY2VTdWJtaXRCbG9ja2VyUnVsZU1vY2tzUHJvdmlkZXI6IFByb3ZpZGVyID0gY3JlYXRlTW9ja3MoW3tcbiAgICAgICAgdXJsUGF0dGVybjogXCIvY2xpZW50LWFwaS92MS9ydWxlcy9ibG9ja2Vyc1wiLFxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICByZXNwb25zZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogMjAxLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwiaWRcIiA6IFwiODQ5ZDY2YWUtYzk0Mi0yYmE3LTg3MzktYzVhMzhhNTk2ZjMyXCJcbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkJhZCBSZXF1ZXN0XCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJWYWx1ZSBFeGNlZWRlZC4gTXVzdCBiZSBiZXR3ZWVuIHttaW59IGFuZCB7bWF4fS5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnNob2VzaXplXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcIm1heFwiIDogXCI1MFwiLFxuICAgICAgXCJtaW5cIiA6IFwiMVwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDEsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkFjY2VzcyB0byByZXF1ZXN0ZWQgcmVzb3VyY2UgZGVuaWVkLlwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiUmVzb3VyY2UgYWNjZXNzIGRlbmllZCBkdWUgdG8gaW52YWxpZCBjcmVkZW50aWFscy5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnRva2VuXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcImFjY2Vzc1Rva2VuXCIgOiBcImV4cGlyZWRcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogNDAzLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJBY2Nlc3MgdG8gcmVxdWVzdGVkIHJlc291cmNlIGRlbmllZC5cIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlJlc291cmNlIGFjY2VzcyBkZW5pZWQgZHVlIHRvIGFuIGluc3VmZmljaWVudCB1c2VyIHF1b3RhIG9mIHtxdW90YX0uXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS5xdW90YVwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJxdW90YVwiIDogXCJzb21lUXVvdGFcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogNTAwLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJEZXNjcmlwdGlvbiBvZiBlcnJvclwiXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICBdXG59XSk7XG4vKipcbiogTW9ja3MgcHJvdmlkZXIgZm9yIC9jbGllbnQtYXBpL3YxL3J1bGVzL2ZpbHRlcnMgVVJMIHBhdHRlcm5cbiovXG5leHBvcnQgY29uc3QgUnVsZXNIdHRwU2VydmljZVN1Ym1pdEZpbHRlclJ1bGVNb2Nrc1Byb3ZpZGVyOiBQcm92aWRlciA9IGNyZWF0ZU1vY2tzKFt7XG4gICAgICAgIHVybFBhdHRlcm46IFwiL2NsaWVudC1hcGkvdjEvcnVsZXMvZmlsdGVyc1wiLFxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICByZXNwb25zZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogMjAxLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwiaWRcIiA6IFwiODQ5ZDY2YWUtYzk0Mi0yYmE3LTg3MzktYzVhMzhhNTk2ZjMyXCJcbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkJhZCBSZXF1ZXN0XCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJWYWx1ZSBFeGNlZWRlZC4gTXVzdCBiZSBiZXR3ZWVuIHttaW59IGFuZCB7bWF4fS5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnNob2VzaXplXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcIm1heFwiIDogXCI1MFwiLFxuICAgICAgXCJtaW5cIiA6IFwiMVwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDEsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkFjY2VzcyB0byByZXF1ZXN0ZWQgcmVzb3VyY2UgZGVuaWVkLlwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiUmVzb3VyY2UgYWNjZXNzIGRlbmllZCBkdWUgdG8gaW52YWxpZCBjcmVkZW50aWFscy5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnRva2VuXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcImFjY2Vzc1Rva2VuXCIgOiBcImV4cGlyZWRcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogNDAzLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJBY2Nlc3MgdG8gcmVxdWVzdGVkIHJlc291cmNlIGRlbmllZC5cIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlJlc291cmNlIGFjY2VzcyBkZW5pZWQgZHVlIHRvIGFuIGluc3VmZmljaWVudCB1c2VyIHF1b3RhIG9mIHtxdW90YX0uXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS5xdW90YVwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJxdW90YVwiIDogXCJzb21lUXVvdGFcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogNTAwLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJEZXNjcmlwdGlvbiBvZiBlcnJvclwiXG59XG4gICAgICAgICAgICAgICAgfSxcbiAgICBdXG59XSk7XG5cbmV4cG9ydCBjb25zdCBSdWxlc0h0dHBTZXJ2aWNlTW9ja3NQcm92aWRlcjogUHJvdmlkZXIgPSBjcmVhdGVNb2NrcyhcbiAgICBbXG4gICAge1xuICAgICAgICB1cmxQYXR0ZXJuOiBcIi9jbGllbnQtYXBpL3YxL3J1bGVzL3tpZH1cIixcbiAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgICByZXNwb25zZXM6IFtcblxuICAgICAgICB7XG4gICAgICAgICAgc3RhdHVzOiAyMDQsXG4gICAgICAgICAgYm9keTogXCJcIlxuICAgICAgICB9LFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQmFkIFJlcXVlc3RcIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlZhbHVlIEV4Y2VlZGVkLiBNdXN0IGJlIGJldHdlZW4ge21pbn0gYW5kIHttYXh9LlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkuc2hvZXNpemVcIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwibWF4XCIgOiBcIjUwXCIsXG4gICAgICBcIm1pblwiIDogXCIxXCJcbiAgICB9XG4gIH0gXVxufVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogNDAxLFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkFjY2VzcyB0byByZXF1ZXN0ZWQgcmVzb3VyY2UgZGVuaWVkLlwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiUmVzb3VyY2UgYWNjZXNzIGRlbmllZCBkdWUgdG8gaW52YWxpZCBjcmVkZW50aWFscy5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnRva2VuXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcImFjY2Vzc1Rva2VuXCIgOiBcImV4cGlyZWRcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA0MDMsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQWNjZXNzIHRvIHJlcXVlc3RlZCByZXNvdXJjZSBkZW5pZWQuXCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJSZXNvdXJjZSBhY2Nlc3MgZGVuaWVkIGR1ZSB0byBhbiBpbnN1ZmZpY2llbnQgdXNlciBxdW90YSBvZiB7cXVvdGF9LlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkucXVvdGFcIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwicXVvdGFcIiA6IFwic29tZVF1b3RhXCJcbiAgICB9XG4gIH0gXVxufVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogNDA0LFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIlJlc291cmNlIG5vdCBmb3VuZC5cIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlVuYWJsZSB0byBmaW5kIHRoZSByZXNvdXJjZSByZXF1ZXN0ZWQgcmVzb3VyY2U6IHtyZXNvdXJjZX0uXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS5yZXNvdXJjZVwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJyZXNvdXJjZVwiIDogXCJhUmVzb3VyY2VcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiRGVzY3JpcHRpb24gb2YgZXJyb3JcIlxufVxuICAgICAgICAgICAgfSxcbiAgICBdXG59LFxuICAgIHtcbiAgICAgICAgdXJsUGF0dGVybjogXCIvY2xpZW50LWFwaS92MS9ydWxlc1wiLFxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICByZXNwb25zZXM6IFtcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJydWxlc1wiIDogWyB7XG4gICAgXCJpZFwiIDogXCI1XCIsXG4gICAgXCJhcnJhbmdlbWVudElkXCIgOiBcIjFjZGIyMjI0LTg5MjYtNGI0ZC1hOTlmLTFjOWRmYmJiNDY5MlwiLFxuICAgIFwicnVsZVR5cGVcIiA6IFwiQkxPQ0tFUlwiLFxuICAgIFwicGF5bWVudFR5cGVcIiA6IFwiQUNIIERlYml0XCIsXG4gICAgXCJvcmlnaW5hdG9ySWRcIiA6IFwiNTEyMzQ1Njc4OVwiLFxuICAgIFwib3JpZ2luYXRvck5hbWVcIiA6IFwiRmlyc3QgT3JpZ2luYXRvclwiLFxuICAgIFwic3RhbmRhcmRFbnRyeUNsYXNzXCIgOiBbIFwiQ0NEXCIsIFwiQ0lFXCIgXSxcbiAgICBcInN0YXJ0RGF0ZVwiIDogXCIyMDIxLTEyLTAxXCIsXG4gICAgXCJlbmREYXRlXCIgOiBcIjIwMjEtMTItMzFcIixcbiAgICBcInJlZ2lzdHJhdGlvbkRhdGVcIiA6IFwiMjAyMC0xMi0zMVQwNjozMDowMC4wMDAtMDU6MDBcIlxuICB9LCB7XG4gICAgXCJpZFwiIDogXCI0XCIsXG4gICAgXCJhcnJhbmdlbWVudElkXCIgOiBcIjNjZGIyMjI0LTg5MjYtNGI0ZC1hOTlmLTFjOWRmYmJiNDYwMFwiLFxuICAgIFwicnVsZVR5cGVcIiA6IFwiRklMVEVSXCIsXG4gICAgXCJwYXltZW50VHlwZVwiIDogXCJBQ0ggQ3JlZGl0XCIsXG4gICAgXCJvcmlnaW5hdG9ySWRcIiA6IFwiNDEyMzQ1Njc4OVwiLFxuICAgIFwib3JpZ2luYXRvck5hbWVcIiA6IFwiU2Vjb25kIE9yaWdpbmF0b3JcIixcbiAgICBcInN0YW5kYXJkRW50cnlDbGFzc1wiIDogWyBcIkNDRFwiIF0sXG4gICAgXCJzdGFydERhdGVcIiA6IFwiMjAyMS0xMi0wMVwiLFxuICAgIFwiZW5kRGF0ZVwiIDogXCIyMDIxLTEyLTMxXCIsXG4gICAgXCJmcmVxdWVuY3lcIiA6IFwiV2Vla2x5XCIsXG4gICAgXCJtYXhpbXVtQW1vdW50XCIgOiB7XG4gICAgICBcImFtb3VudFwiIDogXCI5OTkuOTlcIixcbiAgICAgIFwiY3VycmVuY3lDb2RlXCIgOiBcIlVTRFwiXG4gICAgfSxcbiAgICBcInJlZ2lzdHJhdGlvbkRhdGVcIiA6IFwiMjAyMC0xMi0zMVQwNTozMDowMC4wMDAtMDU6MDBcIlxuICB9LCB7XG4gICAgXCJpZFwiIDogXCIzXCIsXG4gICAgXCJhcnJhbmdlbWVudElkXCIgOiBcIjRjZGIyMjI0LTg5MjYtNGI0ZC1hOTlmLTFjOWRmYmJiNDY5N1wiLFxuICAgIFwicnVsZVR5cGVcIiA6IFwiQkxPQ0tFUlwiLFxuICAgIFwicGF5bWVudFR5cGVcIiA6IFwiQUNIIERlYml0XCIsXG4gICAgXCJvcmlnaW5hdG9ySWRcIiA6IFwiKlwiLFxuICAgIFwic3RhbmRhcmRFbnRyeUNsYXNzXCIgOiBbIFwiQ0NEXCIsIFwiQ0lFXCIgXSxcbiAgICBcInN0YXJ0RGF0ZVwiIDogXCIyMDIxLTEyLTAxXCIsXG4gICAgXCJlbmREYXRlXCIgOiBcIjIwMjEtMTItMzFcIixcbiAgICBcInJlZ2lzdHJhdGlvbkRhdGVcIiA6IFwiMjAyMC0xMi0zMVQwNDozMDowMC4wMDAtMDU6MDBcIlxuICB9LCB7XG4gICAgXCJpZFwiIDogXCIyXCIsXG4gICAgXCJhcnJhbmdlbWVudElkXCIgOiBcIjVjZGIyMjI0LTg5MjYtNGI0ZC1hOTlmLTFjOWRmYmJiNDY5NlwiLFxuICAgIFwicnVsZVR5cGVcIiA6IFwiQkxPQ0tFUlwiLFxuICAgIFwicGF5bWVudFR5cGVcIiA6IFwiQUNIIERlYml0XCIsXG4gICAgXCJvcmlnaW5hdG9ySWRcIiA6IFwiMjEyMzQ1Njc4OVwiLFxuICAgIFwib3JpZ2luYXRvck5hbWVcIiA6IFwiT3JpZ2luYXRvciBGaXJzdFwiLFxuICAgIFwic3RhbmRhcmRFbnRyeUNsYXNzXCIgOiBbIFwiQ0NEXCIsIFwiQ0lFXCIgXSxcbiAgICBcInN0YXJ0RGF0ZVwiIDogXCIyMDIyLTAxLTAxXCIsXG4gICAgXCJlbmREYXRlXCIgOiBcIjIwMjItMDEtMzFcIixcbiAgICBcInJlZ2lzdHJhdGlvbkRhdGVcIiA6IFwiMjAyMC0xMi0zMVQwMzozMDowMC4wMDAtMDU6MDBcIlxuICB9LCB7XG4gICAgXCJpZFwiIDogXCIxXCIsXG4gICAgXCJhcnJhbmdlbWVudElkXCIgOiBcIjJkOTRkMzMzLTQ3MWQtNGNkNy04NGQyLTI0ZTgyMmQ1Y2E2OFwiLFxuICAgIFwicnVsZVR5cGVcIiA6IFwiQkxPQ0tFUlwiLFxuICAgIFwicGF5bWVudFR5cGVcIiA6IFwiQUNIIERlYml0XCIsXG4gICAgXCJvcmlnaW5hdG9ySWRcIiA6IFwiMTEyMzQ1Njc4OVwiLFxuICAgIFwib3JpZ2luYXRvck5hbWVcIiA6IFwiT3JpZ2luYXRvciBGaXJzdFwiLFxuICAgIFwic3RhbmRhcmRFbnRyeUNsYXNzXCIgOiBbIFwiQ0NEXCIsIFwiQ0lFXCIgXSxcbiAgICBcInN0YXJ0RGF0ZVwiIDogXCIyMDIxLTEyLTAxXCIsXG4gICAgXCJlbmREYXRlXCIgOiBcIjIwMjEtMTItMzFcIixcbiAgICBcInJlZ2lzdHJhdGlvbkRhdGVcIiA6IFwiMjAyMC0xMi0zMVQwMjozMDowMC4wMDAtMDU6MDBcIlxuICB9IF1cbn1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMCxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJCYWQgUmVxdWVzdFwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiVmFsdWUgRXhjZWVkZWQuIE11c3QgYmUgYmV0d2VlbiB7bWlufSBhbmQge21heH0uXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS5zaG9lc2l6ZVwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJtYXhcIiA6IFwiNTBcIixcbiAgICAgIFwibWluXCIgOiBcIjFcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA0MDEsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQWNjZXNzIHRvIHJlcXVlc3RlZCByZXNvdXJjZSBkZW5pZWQuXCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJSZXNvdXJjZSBhY2Nlc3MgZGVuaWVkIGR1ZSB0byBpbnZhbGlkIGNyZWRlbnRpYWxzLlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkudG9rZW5cIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwiYWNjZXNzVG9rZW5cIiA6IFwiZXhwaXJlZFwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMyxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJBY2Nlc3MgdG8gcmVxdWVzdGVkIHJlc291cmNlIGRlbmllZC5cIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlJlc291cmNlIGFjY2VzcyBkZW5pZWQgZHVlIHRvIGFuIGluc3VmZmljaWVudCB1c2VyIHF1b3RhIG9mIHtxdW90YX0uXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS5xdW90YVwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJxdW90YVwiIDogXCJzb21lUXVvdGFcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiRGVzY3JpcHRpb24gb2YgZXJyb3JcIlxufVxuICAgICAgICAgICAgfSxcbiAgICBdXG59LFxuICAgIHtcbiAgICAgICAgdXJsUGF0dGVybjogXCIvY2xpZW50LWFwaS92MS9ydWxlcy97aWR9XCIsXG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgcmVzcG9uc2VzOiBbXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwiaWRcIiA6IFwiODQ5ZDY2YWUtYzk0Mi0yYmE3LTg3MzktYzVhMzhhNTk2ZjMyXCIsXG4gIFwiYXJyYW5nZW1lbnRJZFwiIDogXCIxY2RiMjIyNC04OTI2LTRiNGQtYTk5Zi0xYzlkZmJiYjQ2OTFcIixcbiAgXCJydWxlVHlwZVwiIDogXCJGSUxURVJcIixcbiAgXCJzdGFuZGFyZEVudHJ5Q2xhc3NcIiA6IFsgXCJDQ0RcIiwgXCJDSUVcIiBdLFxuICBcIm9yaWdpbmF0b3JJZFwiIDogXCIxMTIzNDU2Nzg5XCIsXG4gIFwib3JpZ2luYXRvck5hbWVcIiA6IFwiT3JpZ2luYXRvciBGaXJzdFwiLFxuICBcInN0YXJ0RGF0ZVwiIDogXCIyMDIxLTEyLTAxXCIsXG4gIFwiZW5kRGF0ZVwiIDogXCIyMDIxLTEyLTMxXCIsXG4gIFwiZnJlcXVlbmN5XCIgOiBcIk9uY2VcIixcbiAgXCJtYXhpbXVtQW1vdW50XCIgOiB7XG4gICAgXCJhbW91bnRcIiA6IFwiOTk5Ljk5XCIsXG4gICAgXCJjdXJyZW5jeUNvZGVcIiA6IFwiVVNEXCJcbiAgfSxcbiAgXCJwYXltZW50VHlwZVwiIDogXCJBQ0ggRGViaXRcIixcbiAgXCJhZGRpdGlvbnNcIiA6IHtcbiAgICBcImtleVwiIDogXCJ2YWx1ZVwiXG4gIH1cbn1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMCxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJCYWQgUmVxdWVzdFwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiVmFsdWUgRXhjZWVkZWQuIE11c3QgYmUgYmV0d2VlbiB7bWlufSBhbmQge21heH0uXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS5zaG9lc2l6ZVwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJtYXhcIiA6IFwiNTBcIixcbiAgICAgIFwibWluXCIgOiBcIjFcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA0MDEsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQWNjZXNzIHRvIHJlcXVlc3RlZCByZXNvdXJjZSBkZW5pZWQuXCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJSZXNvdXJjZSBhY2Nlc3MgZGVuaWVkIGR1ZSB0byBpbnZhbGlkIGNyZWRlbnRpYWxzLlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkudG9rZW5cIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwiYWNjZXNzVG9rZW5cIiA6IFwiZXhwaXJlZFwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMyxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJBY2Nlc3MgdG8gcmVxdWVzdGVkIHJlc291cmNlIGRlbmllZC5cIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlJlc291cmNlIGFjY2VzcyBkZW5pZWQgZHVlIHRvIGFuIGluc3VmZmljaWVudCB1c2VyIHF1b3RhIG9mIHtxdW90YX0uXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS5xdW90YVwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJxdW90YVwiIDogXCJzb21lUXVvdGFcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA0MDQsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiUmVzb3VyY2Ugbm90IGZvdW5kLlwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiVW5hYmxlIHRvIGZpbmQgdGhlIHJlc291cmNlIHJlcXVlc3RlZCByZXNvdXJjZToge3Jlc291cmNlfS5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnJlc291cmNlXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcInJlc291cmNlXCIgOiBcImFSZXNvdXJjZVwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJEZXNjcmlwdGlvbiBvZiBlcnJvclwiXG59XG4gICAgICAgICAgICB9LFxuICAgIF1cbn0sXG4gICAge1xuICAgICAgICB1cmxQYXR0ZXJuOiBcIi9jbGllbnQtYXBpL3YxL3J1bGVzL2Jsb2NrZXJzXCIsXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIHJlc3BvbnNlczogW1xuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiAyMDEsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcImlkXCIgOiBcIjg0OWQ2NmFlLWM5NDItMmJhNy04NzM5LWM1YTM4YTU5NmYzMlwiXG59XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQmFkIFJlcXVlc3RcIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlZhbHVlIEV4Y2VlZGVkLiBNdXN0IGJlIGJldHdlZW4ge21pbn0gYW5kIHttYXh9LlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkuc2hvZXNpemVcIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwibWF4XCIgOiBcIjUwXCIsXG4gICAgICBcIm1pblwiIDogXCIxXCJcbiAgICB9XG4gIH0gXVxufVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogNDAxLFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkFjY2VzcyB0byByZXF1ZXN0ZWQgcmVzb3VyY2UgZGVuaWVkLlwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiUmVzb3VyY2UgYWNjZXNzIGRlbmllZCBkdWUgdG8gaW52YWxpZCBjcmVkZW50aWFscy5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnRva2VuXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcImFjY2Vzc1Rva2VuXCIgOiBcImV4cGlyZWRcIlxuICAgIH1cbiAgfSBdXG59XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA0MDMsXG4gICAgICAgICAgICAgICAgYm9keToge1xuICBcIm1lc3NhZ2VcIiA6IFwiQWNjZXNzIHRvIHJlcXVlc3RlZCByZXNvdXJjZSBkZW5pZWQuXCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJSZXNvdXJjZSBhY2Nlc3MgZGVuaWVkIGR1ZSB0byBhbiBpbnN1ZmZpY2llbnQgdXNlciBxdW90YSBvZiB7cXVvdGF9LlwiLFxuICAgIFwia2V5XCIgOiBcImNvbW1vbi5hcGkucXVvdGFcIixcbiAgICBcImNvbnRleHRcIiA6IHtcbiAgICAgIFwicXVvdGFcIiA6IFwic29tZVF1b3RhXCJcbiAgICB9XG4gIH0gXVxufVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogNTAwLFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkRlc2NyaXB0aW9uIG9mIGVycm9yXCJcbn1cbiAgICAgICAgICAgIH0sXG4gICAgXVxufSxcbiAgICB7XG4gICAgICAgIHVybFBhdHRlcm46IFwiL2NsaWVudC1hcGkvdjEvcnVsZXMvZmlsdGVyc1wiLFxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICByZXNwb25zZXM6IFtcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogMjAxLFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJpZFwiIDogXCI4NDlkNjZhZS1jOTQyLTJiYTctODczOS1jNWEzOGE1OTZmMzJcIlxufVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogNDAwLFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkJhZCBSZXF1ZXN0XCIsXG4gIFwia2V5XCIgOiBcIkdFTkVSQUxfRVJST1JcIixcbiAgXCJlcnJvcnNcIiA6IFsge1xuICAgIFwibWVzc2FnZVwiIDogXCJWYWx1ZSBFeGNlZWRlZC4gTXVzdCBiZSBiZXR3ZWVuIHttaW59IGFuZCB7bWF4fS5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnNob2VzaXplXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcIm1heFwiIDogXCI1MFwiLFxuICAgICAgXCJtaW5cIiA6IFwiMVwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDQwMSxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJBY2Nlc3MgdG8gcmVxdWVzdGVkIHJlc291cmNlIGRlbmllZC5cIixcbiAgXCJrZXlcIiA6IFwiR0VORVJBTF9FUlJPUlwiLFxuICBcImVycm9yc1wiIDogWyB7XG4gICAgXCJtZXNzYWdlXCIgOiBcIlJlc291cmNlIGFjY2VzcyBkZW5pZWQgZHVlIHRvIGludmFsaWQgY3JlZGVudGlhbHMuXCIsXG4gICAgXCJrZXlcIiA6IFwiY29tbW9uLmFwaS50b2tlblwiLFxuICAgIFwiY29udGV4dFwiIDoge1xuICAgICAgXCJhY2Nlc3NUb2tlblwiIDogXCJleHBpcmVkXCJcbiAgICB9XG4gIH0gXVxufVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogNDAzLFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgXCJtZXNzYWdlXCIgOiBcIkFjY2VzcyB0byByZXF1ZXN0ZWQgcmVzb3VyY2UgZGVuaWVkLlwiLFxuICBcImtleVwiIDogXCJHRU5FUkFMX0VSUk9SXCIsXG4gIFwiZXJyb3JzXCIgOiBbIHtcbiAgICBcIm1lc3NhZ2VcIiA6IFwiUmVzb3VyY2UgYWNjZXNzIGRlbmllZCBkdWUgdG8gYW4gaW5zdWZmaWNpZW50IHVzZXIgcXVvdGEgb2Yge3F1b3RhfS5cIixcbiAgICBcImtleVwiIDogXCJjb21tb24uYXBpLnF1b3RhXCIsXG4gICAgXCJjb250ZXh0XCIgOiB7XG4gICAgICBcInF1b3RhXCIgOiBcInNvbWVRdW90YVwiXG4gICAgfVxuICB9IF1cbn1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgICAgICBib2R5OiB7XG4gIFwibWVzc2FnZVwiIDogXCJEZXNjcmlwdGlvbiBvZiBlcnJvclwiXG59XG4gICAgICAgICAgICB9LFxuICAgIF1cbn0sXG5dXG4pO1xuXG5cbiJdfQ==