{"version":3,"file":"config.actions.js","sourceRoot":"","sources":["../../../../../libs/loans-payment-config-ang/src/lib/config.actions.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  FormFieldHooksParams,\n  Frequencies,\n  InternalAccountFormItem,\n  internalTransferScheduleFreqOnInitHook,\n} from '@backbase/payment-orders-ang';\nimport { Subscription } from 'rxjs';\nimport { pairwise, startWith, tap } from 'rxjs/operators';\nimport { AbstractControl } from '@angular/forms';\nimport { Loan, AccountRole } from '@backbase/loans-collection-ui-ang';\nimport { changeFields } from './loans-payment-config';\n\nconst subscriptions: Subscription[] = [];\nlet isEditMode: boolean | undefined = false;\nlet amountOptionsSubscription: Subscription | undefined;\nlet frequencySelectSubscription: Subscription | undefined;\n\nconst getAccountForm = (group: AbstractControl, name: string) => group?.parent?.get(name);\nlet selectedLoan: Loan | undefined;\nexport const scheduleFrequencyForAmountOption = [\n  { label: 'Once', value: Frequencies.ONCE },\n  { label: 'Daily', value: Frequencies.DAILY },\n  { label: 'Weekly', value: Frequencies.WEEKLY },\n  { label: 'Biweekly', value: Frequencies.BIWEEKLY },\n  { label: 'Monthly', value: Frequencies.MONTHLY },\n  { label: 'Quarterly', value: Frequencies.QUARTERLY },\n  { label: 'Annually', value: Frequencies.YEARLY },\n];\n\nexport const setLoan = (loan: Loan | undefined) => {\n  selectedLoan = loan;\n  if (loan) {\n    changeFields(loan);\n  }\n};\n\nexport const frequencySelectInitHook = (params: FormFieldHooksParams): void => {\n  internalTransferScheduleFreqOnInitHook(params);\n\n  frequencySelectSubscription = params.control.valueChanges.subscribe(() => {\n    params.component.toggleDependants();\n  });\n};\n\nexport const frequencySelectDestroyHook = (): void => {\n  frequencySelectSubscription?.unsubscribe();\n};\n\nexport const amountCurrencyGroupInitHook = (params: FormFieldHooksParams) => {\n  amountInputCounterPartyInitHook(params);\n\n  const remittanceInfoControl = params.group;\n  const amountGroup = remittanceInfoControl?.get('amountGroup');\n  const scheduleFrequency = remittanceInfoControl.get('scheduleFrequency');\n\n  amountOptionsSubscription = remittanceInfoControl\n    ?.get('amountOptions')\n    ?.valueChanges.pipe(startWith(remittanceInfoControl.value), pairwise())\n    .subscribe(([prev, next]: [number, number]) => {\n      if (prev !== next) {\n        if (next === 1) {\n          amountGroup?.patchValue({\n            currency: selectedLoan?.currencyCode,\n            amount: cutAmount(selectedLoan?.inArrearsAmount),\n          });\n          scheduleFrequency?.patchValue(scheduleFrequencyForAmountOption);\n        }\n        if (next === 0) {\n          scheduleFrequency?.patchValue(scheduleFrequencyForAmountOption);\n        }\n      }\n    });\n};\n\nexport const amountCurrencyGroupDestroyHook = () => {\n  amountOptionsSubscription?.unsubscribe();\n};\n\nexport const internalAmountOptionsInitHook = (params: FormFieldHooksParams): void => {\n  isEditMode = params.component.stateService.paymentStateSubject.value === 'EDIT';\n};\n\nexport const amountInputInitHook = (form: FormFieldHooksParams): void => {\n  const initiatorControl = getAccountForm(form.group, 'initiator');\n  initiatorControl?.valueChanges.subscribe((data: { currency: string }) => {\n    form.component.options.currencies = [data.currency];\n  });\n};\n\nexport const amountInputCounterPartyInitHook = ({ component, group }: FormFieldHooksParams): void => {\n  const amountGroup = group?.get('amountGroup');\n\n  if (selectedLoan?.inArrearsAmount && !amountGroup?.value.amount) {\n    amountGroup?.patchValue({\n      currency: selectedLoan?.currencyCode,\n      amount: cutAmount(selectedLoan.inArrearsAmount),\n    });\n  }\n\n  const counterpartyControl = getAccountForm(group, 'counterparty');\n  counterpartyControl?.valueChanges.subscribe((data: { currency: string }) => {\n    component.options.currencies = [data.currency];\n  });\n};\n\nexport const counterPartyPaymentInitHook = ({ component, group }: FormFieldHooksParams): void => {\n  component.options.mapItems = (accounts: InternalAccountFormItem[]): InternalAccountFormItem[] =>\n    !!selectedLoan?.id\n      ? accounts.filter((account: InternalAccountFormItem) => {\n          if (account.id === selectedLoan?.id) {\n            component.selectItem(account);\n\n            if (account.defaultRecord) {\n              const defaultRecord = account.defaultRecord as any;\n              defaultRecord.nextRepaymentAmount = selectedLoan?.nextRepaymentAmount;\n              defaultRecord.inArrearsAmount = cutAmount(selectedLoan.inArrearsAmount);\n            }\n          }\n          return account.id === selectedLoan?.id;\n        })\n      : accounts;\n\n  const remittanceInfoControl = getAccountForm(group, 'remittanceInfo');\n\n  const changesSubscription = group.valueChanges.subscribe((value) => {\n    if (value.productKindName === 'Loan') {\n      group.patchValue({ role: AccountRole.DEBTOR }, { onlySelf: true, emitEvent: false });\n    } else {\n      group.patchValue({ role: AccountRole.CREDITOR }, { onlySelf: true, emitEvent: false });\n    }\n\n    const amountOptions = remittanceInfoControl?.get('amountOptions');\n\n    if (amountOptions?.value !== 0 && amountOptions?.value !== 1 && !isEditMode) {\n      if (\n        (!selectedLoan?.inArrearsAmount || selectedLoan?.inArrearsAmount === '0') &&\n        !!selectedLoan?.nextRepaymentAmount\n      ) {\n        amountOptions?.setValue(0);\n      }\n\n      if (\n        !!selectedLoan?.inArrearsAmount &&\n        selectedLoan?.inArrearsAmount !== '0' &&\n        !!selectedLoan?.nextRepaymentAmount\n      ) {\n        amountOptions?.setValue(1);\n      }\n    }\n  });\n\n  subscriptions.push(changesSubscription);\n};\n\nexport const initiatorAdvanceInitHook = ({ component }: FormFieldHooksParams): void => {\n  const selectedId = selectedLoan?.id;\n  component.options.mapItems = (accounts: InternalAccountFormItem[]): InternalAccountFormItem[] =>\n    !!selectedId\n      ? accounts.filter((account: InternalAccountFormItem) => {\n          if (account.id === selectedId) {\n            component.selectItem(account);\n          }\n\n          return account.id === selectedId;\n        })\n      : accounts;\n};\n\nexport const counterpartyInitAdvanceHook = (params: FormFieldHooksParams): void => {\n  params.component.options.mapItems = (accounts: InternalAccountFormItem[]): InternalAccountFormItem[] => {\n    const currency = selectedLoan?.currencyCode;\n\n    return !!currency ? accounts.filter((account: InternalAccountFormItem) => account.currency === currency) : accounts;\n  };\n\n  selectAccountDefaultSettlement(params);\n};\n\nexport const initiatorInitHook = ({ component }: FormFieldHooksParams): void => {\n  component.options.mapItems = (accounts: InternalAccountFormItem[]): InternalAccountFormItem[] =>\n    !!selectedLoan?.id\n      ? accounts.filter((account: InternalAccountFormItem) => {\n          if (\n            account.id === selectedLoan?.defaultSettlementAccountId &&\n            account.currency === selectedLoan?.currencyCode\n          ) {\n            component.selectItem(account);\n          }\n          return account.currency === selectedLoan?.currencyCode;\n        })\n      : accounts;\n};\n\nconst selectAccountDefaultSettlement = ({ component }: FormFieldHooksParams): void => {\n  const defaultSettlementId = selectedLoan?.defaultSettlementAccountId;\n  if (defaultSettlementId) {\n    const subscription = component.options.items$\n      .pipe(\n        tap((accounts: InternalAccountFormItem[]): void => {\n          const account = accounts.find(\n            (internalAccount: InternalAccountFormItem) => internalAccount.id === defaultSettlementId,\n          );\n          component.selectItem(account);\n        }),\n      )\n      .subscribe();\n    subscriptions.push(subscription);\n  }\n};\n\nexport const destroyHook = (): void => {\n  subscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n};\n\nconst cutAmount = (val?: string) => (val ? val.split('.')[0] + '.' + val.split('.')[1].slice(0, 2) : '');\n"]}