{"version":3,"file":"loans-payment-config.js","sourceRoot":"","sources":["../../../../../libs/loans-payment-config-ang/src/lib/loans-payment-config.ts"],"names":[],"mappings":"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","sourcesContent":["import { ValidatorFn, Validators } from '@angular/forms';\nimport {\n  AccountBalances,\n  CounterPartyFields,\n  DependantItem,\n  endDateAfterStartDateValidator,\n  InitiatorFields,\n  internalTransScheduleStartDateOnInitHook,\n  maxValueTwoHundredValidator,\n  minValueTwoValidator,\n  pastDateValidator,\n  PaymentBaseFields,\n  PaymentComponents,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n  ProductKinds,\n  RemittanceInfoFields,\n  scheduleEndDateOnInitHook,\n  scheduleEndTypeToggleDependants,\n  ScheduleFields,\n  scheduleFrequencyToggleDependants,\n  scheduleStartDateOnDestroyHook,\n  Frequencies,\n  ScheduleEndType,\n} from '@backbase/payment-orders-ang';\nimport {\n  amountCurrencyGroupDestroyHook,\n  amountCurrencyGroupInitHook,\n  amountInputCounterPartyInitHook,\n  counterPartyPaymentInitHook,\n  frequencySelectDestroyHook,\n  frequencySelectInitHook,\n  initiatorInitHook,\n  internalAmountOptionsInitHook,\n  scheduleFrequencyForAmountOption,\n} from './config.actions';\nimport { Loan } from '@backbase/loans-collection-ui-ang';\n\nconst initiatorPayment: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: 'From',\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        showCurrencySymbol: false,\n        productKinds: [\n          {\n            productKind: ProductKinds.savingsAccount,\n            balance: { apiField: AccountBalances.available, label: 'Available Balance' },\n          },\n          {\n            productKind: ProductKinds.currentAccount,\n            balance: { apiField: AccountBalances.current, label: 'Current Balance' },\n          },\n        ],\n        connectedAccounts: false,\n        connectedAccountsSubHeader: 'Connected Accounts',\n      },\n      hooks: {\n        onInit: initiatorInitHook,\n      },\n    },\n  ],\n};\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: CounterPartyFields.counterPartyAccountGroup,\n      options: {\n        label: 'To',\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        productKinds: [{ productKind: ProductKinds.loanAccount, balance: { label: 'Current Balance' } }],\n        connectedAccountsSubHeader: 'Connected Accounts',\n        connectedAccounts: false,\n        showCurrencySymbol: false,\n        preselect: true,\n        dependants: [\n          {\n            parent: PaymentBaseFields.remittanceInfo,\n            items: [RemittanceInfoFields.amountOptions],\n          },\n        ],\n        activateDependantsOn: (): DependantItem[] => {\n          return [\n            {\n              parent: PaymentBaseFields.remittanceInfo,\n              items: [RemittanceInfoFields.amountOptions],\n            },\n          ];\n        },\n        validationMessages: [\n          {\n            name: 'required',\n            message: 'Please select an account from the list to transfer to',\n          },\n        ],\n      },\n      hooks: {\n        onInit: counterPartyPaymentInitHook,\n      },\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['col-12', 'pb-0', 'pt-2', 'bb-fieldset__heading'],\n        heading: 'Payment details ',\n        headingType: 'h2',\n        headingClasses: ['mb-0'],\n        separatorLine: true,\n      },\n    },\n    {\n      type: PaymentComponents.internalAmountOptions,\n      name: RemittanceInfoFields.amountOptions,\n      hidden: true,\n      options: {\n        cssClasses: ['col-12', 'pb-0'],\n        isConditionalMandatory: true,\n        noBalanceText: 'You don’t have any amount due on this credit card account.',\n        amountInputClassName: 'bb-amount-input__field--large',\n        autoDecimal: true,\n        showCurrencySymbol: false,\n        mapCurrency: false,\n        amountOptions: {\n          cssClasses: ['pl-2'],\n          loan: [\n            {\n              label: 'Additional payment',\n              description: 'This is on top of your existing schedule',\n              amountApiField: 'nextRepaymentAmount',\n              scheduleFrequency: [{ label: 'Once', value: Frequencies.ONCE }],\n            },\n            {\n              label: 'Different amount',\n              description: 'Choose what you wish to repay',\n              scheduleFrequency: scheduleFrequencyForAmountOption,\n            },\n          ],\n        },\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: 'Please select an amount to transfer',\n          },\n          {\n            name: 'required',\n            message: 'Please add amount of this transfer',\n          },\n        ],\n        currencies: ['USD'],\n        dependants: [\n          RemittanceInfoFields.amountCurrencyGroup,\n          RemittanceInfoFields.purposeOfPayment,\n          ScheduleFields.frequency,\n        ],\n        activateDependantsOn: (value): string[] => {\n          return value === 1 || value === '0'\n            ? [\n                RemittanceInfoFields.amountCurrencyGroup,\n                RemittanceInfoFields.purposeOfPayment,\n                ScheduleFields.frequency,\n              ]\n            : [ScheduleFields.frequency];\n        },\n      },\n      hooks: {\n        onInit: internalAmountOptionsInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      hidden: true,\n      options: {\n        label: 'Amount',\n        cssClasses: [\n          'bb-amount-input__field--medium',\n          'bb-block',\n          'bb-block--lg',\n          'col-md-7',\n          'bb-loans-remittance-info__section',\n        ],\n        autoDecimal: true,\n        keepValueOnHidden: true,\n        currencies: ['USD'],\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: 'Please add amount of this transfer',\n          },\n        ],\n      },\n      hooks: {\n        onInit: amountCurrencyGroupInitHook,\n        onDestroy: amountCurrencyGroupDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: RemittanceInfoFields.purposeOfPayment,\n      hidden: true,\n      options: {\n        label: 'Payment towards (optional)',\n        options: [\n          { label: '', value: '' },\n          { label: 'Interest only', value: 'Interest only' },\n          { label: 'Principal only', value: 'Principal only' },\n          { label: 'Principal and interest', value: 'Principal and interest' },\n        ],\n        preselect: true,\n        cssClasses: ['d-block', 'col-md-6', 'align-top', 'bb-loans-remittance-info__section'],\n      },\n    },\n  ],\n};\n\nconst schedule: PaymentFormGroup = {\n  name: PaymentBaseFields.schedule,\n  fields: [\n    {\n      type: PaymentComponents.scheduleHeader,\n      name: PaymentComponents.scheduleHeader,\n      options: {\n        cssClasses: ['pb-0', 'bb-schedule-header__relative-text'],\n        label: 'Schedule',\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: ScheduleFields.frequency,\n      options: {\n        label: 'Frequency',\n        validators: [Validators.required],\n        options: scheduleFrequencyForAmountOption,\n        defaultValue: Frequencies.ONCE,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        dependants: [ScheduleFields.endType],\n        activateDependantsOn: scheduleFrequencyToggleDependants,\n      },\n      hooks: {\n        onInit: frequencySelectInitHook,\n        onDestroy: frequencySelectDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.startDate,\n      options: {\n        label: 'Execution date',\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, pastDateValidator],\n        defaultValue: new Date().toISOString(),\n        validationMessages: [{ name: 'pastDate', message: 'Start date cannot be in the past' }],\n        description: 'You selected a date after the due date, this transfer will incur a late fee',\n      },\n      hooks: {\n        onInit: internalTransScheduleStartDateOnInitHook,\n        onDestroy: scheduleStartDateOnDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.radio,\n      name: ScheduleFields.endType,\n      options: {\n        label: 'End',\n        preselect: true,\n        isConditionalMandatory: true,\n        cssClasses: ['d-inline-block', 'col-md-2', 'align-top', 'bb-schedule__end-type'],\n        defaultValue: ScheduleEndType.NEVER,\n        options: [\n          { label: 'Never', value: ScheduleEndType.NEVER },\n          { label: 'On date', value: ScheduleEndType.ON },\n          { label: 'After', value: ScheduleEndType.AFTER },\n        ],\n        dependants: [ScheduleFields.endDate, ScheduleFields.repeat],\n        activateDependantsOn: scheduleEndTypeToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.endDate,\n      options: {\n        cssClasses: ['d-inline-block', 'col-md-10', 'align-top', 'bb-schedule__end-date'],\n        validators: [endDateAfterStartDateValidator as ValidatorFn],\n        validationMessages: [\n          { name: 'required', message: 'End date is required' },\n          { name: 'lessThanStartDate', message: 'End date cannot be before start date' },\n        ],\n        isConditionalMandatory: true,\n      },\n      hooks: {\n        onInit: scheduleEndDateOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.number,\n      name: ScheduleFields.repeat,\n      options: {\n        isConditionalMandatory: true,\n        description: 'occurrences',\n        min: 2,\n        max: 200,\n        defaultValue: 2,\n        validators: [minValueTwoValidator, maxValueTwoHundredValidator],\n        validationMessages: [\n          { name: 'required', message: 'Value is required' },\n          { name: 'min', message: 'Value is below the minimum allowed occurrences (2)' },\n          { name: 'max', message: 'Value exceeds maximum allowed occurrences (200)' },\n        ],\n        cssClasses: ['d-inline-block', 'col-md-9', 'align-top', 'px-0', 'bb-schedule__repeat'],\n      },\n    },\n  ],\n};\n\nconst remittanceInfoZeroOptions: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['col-12', 'pb-0', 'pt-2', 'bb-fieldset__heading'],\n        heading: 'Payment details ',\n        headingType: 'h2',\n        headingClasses: ['mb-0'],\n        separatorLine: true,\n      },\n    },\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: 'Amount',\n        cssClasses: ['bb-amount-input__field--medium', 'bb-block', 'bb-block--lg', 'col-md-7'],\n        autoDecimal: true,\n        keepValueOnHidden: true,\n        currencies: ['USD'],\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: 'Please add amount of this transfer',\n          },\n        ],\n      },\n      hooks: {\n        onInit: amountInputCounterPartyInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: RemittanceInfoFields.purposeOfPayment,\n      options: {\n        label: 'Payment towards (optional)',\n        options: [\n          { label: '', value: '' },\n          { label: 'Interest only', value: 'Interest only' },\n          { label: 'Principal only', value: 'Principal only' },\n          { label: 'Principal and interest', value: 'Principal and interest' },\n        ],\n        preselect: true,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n      },\n    },\n  ],\n};\n\n/**\n * This is the copy of the INTERNAL_TRANSFER as it fits in the best way for the loans configs\n */\n\nexport const LOANS_PAYMENT: PaymentTypeConfig = {\n  fields: [initiatorPayment, counterParty, remittanceInfo, schedule],\n  name: 'Loans Payment',\n  paymentType: 'LOAN_PAYMENT',\n  businessFunction: 'Loans Payment',\n  options: {\n    disabledCombinations: [{ from: ProductKinds.loanAccount, to: ProductKinds.loanAccount }],\n  },\n};\n\nexport function changeFields(loan: Loan | undefined) {\n  if (!loan?.nextRepaymentAmount || loan?.nextRepaymentAmount === '0') {\n    LOANS_PAYMENT.fields[2] = remittanceInfoZeroOptions;\n  } else {\n    LOANS_PAYMENT.fields[2] = remittanceInfo;\n  }\n}\n"]}