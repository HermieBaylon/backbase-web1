{"version":3,"file":"loans-advance-config.js","sourceRoot":"","sources":["../../../../../libs/loans-payment-config-ang/src/lib/loans-advance-config.ts"],"names":[],"mappings":"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","sourcesContent":["import { Validators } from '@angular/forms';\nimport {\n  PaymentFormGroup,\n  PaymentBaseFields,\n  PaymentComponents,\n  InitiatorFields,\n  ProductKinds,\n  CounterPartyFields,\n  AccountBalances,\n  RemittanceInfoFields,\n  ScheduleFields,\n  internalTransScheduleStartDateOnInitHook,\n  scheduleStartDateOnDestroyHook,\n  scheduleFrequencyToggleDependants,\n  PaymentTypeConfig,\n  pastDateValidator,\n  Frequencies,\n} from '@backbase/payment-orders-ang';\nimport {\n  counterpartyInitAdvanceHook,\n  amountInputInitHook,\n  destroyHook,\n  initiatorAdvanceInitHook,\n} from './config.actions';\n\nconst initiatorAdvance: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  title: 'Draw Amount',\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: 'From',\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        productKinds: [{ productKind: ProductKinds.loanAccount, balance: { label: 'Current Balance' } }],\n        connectedAccounts: false,\n        connectedAccountsSubHeader: 'Connected Accounts',\n        showCurrencySymbol: false,\n      },\n      hooks: {\n        onInit: initiatorAdvanceInitHook,\n      },\n    },\n  ],\n};\n\nconst counterPartyAdvance: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: CounterPartyFields.counterPartyAccountGroup,\n      options: {\n        label: 'To',\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        productKinds: [\n          {\n            productKind: ProductKinds.savingsAccount,\n            balance: { apiField: AccountBalances.available, label: 'Available Balance' },\n          },\n          {\n            productKind: ProductKinds.currentAccount,\n            balance: { apiField: AccountBalances.current, label: 'Current Balance' },\n          },\n        ],\n        connectedAccountsSubHeader: 'Connected Accounts',\n        connectedAccounts: false,\n        validationMessages: [\n          {\n            name: 'required',\n            message: 'Please select an account from the list to transfer to',\n          },\n        ],\n        showCurrencySymbol: false,\n      },\n      hooks: {\n        onInit: counterpartyInitAdvanceHook,\n      },\n    },\n  ],\n};\n\nconst remittanceInfoAdvance: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: 'Amount',\n        cssClasses: ['bb-amount-input__field--medium', 'bb-block', 'bb-block--lg', 'col-md-7'],\n        autoDecimal: true,\n        keepValueOnHidden: true,\n        currencies: ['EUR'],\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: 'Please add amount of this transfer',\n          },\n        ],\n      },\n      hooks: {\n        onInit: amountInputInitHook,\n      },\n    },\n  ],\n};\n\nconst scheduleAdvance: PaymentFormGroup = {\n  name: PaymentBaseFields.schedule,\n  fields: [\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.startDate,\n      options: {\n        label: 'Execution date',\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, pastDateValidator],\n        defaultValue: new Date().toISOString(),\n        validationMessages: [{ name: 'pastDate', message: 'Start date cannot be in the past' }],\n        description: 'You selected a date after the due date, this transfer will incur a late fee',\n      },\n      hooks: {\n        onInit: internalTransScheduleStartDateOnInitHook,\n        onDestroy: scheduleStartDateOnDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: ScheduleFields.frequency,\n      hidden: true,\n      options: {\n        label: 'Frequency',\n        validators: [Validators.required],\n        options: [{ label: 'Once', value: Frequencies.ONCE }],\n        defaultValue: Frequencies.ONCE,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        dependants: [ScheduleFields.endType],\n        activateDependantsOn: scheduleFrequencyToggleDependants,\n      },\n    },\n  ],\n};\n\nexport const LOANS_ADVANCE: PaymentTypeConfig = {\n  fields: [initiatorAdvance, counterPartyAdvance, remittanceInfoAdvance, scheduleAdvance],\n  name: 'Loans Advance',\n  paymentType: 'LOAN_ADVANCE',\n  businessFunction: 'Loans Advance',\n  options: {\n    disabledCombinations: [\n      { from: ProductKinds.loanAccount, to: ProductKinds.loanAccount },\n      { from: ProductKinds.creditCard, to: ProductKinds.creditCard },\n    ],\n  },\n  hooks: {\n    onDestroy: destroyHook,\n  },\n};\n"]}