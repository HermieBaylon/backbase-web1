{"version":3,"file":"backbase-loans-payment-config-ang.js","sources":["../../../../libs/loans-payment-config-ang/src/lib/config.actions.ts","../../../../libs/loans-payment-config-ang/src/lib/loans-payment-config.ts","../../../../libs/loans-payment-config-ang/src/lib/loans-advance-config.ts","../../../../libs/loans-payment-config-ang/src/lib/new-loans-options.ts","../../../../libs/loans-payment-config-ang/src/backbase-loans-payment-config-ang.ts"],"sourcesContent":["import {\n  FormFieldHooksParams,\n  Frequencies,\n  InternalAccountFormItem,\n  internalTransferScheduleFreqOnInitHook,\n} from '@backbase/payment-orders-ang';\nimport { Subscription } from 'rxjs';\nimport { pairwise, startWith, tap } from 'rxjs/operators';\nimport { AbstractControl } from '@angular/forms';\nimport { Loan, AccountRole } from '@backbase/loans-collection-ui-ang';\nimport { changeFields } from './loans-payment-config';\n\nconst subscriptions: Subscription[] = [];\nlet isEditMode: boolean | undefined = false;\nlet amountOptionsSubscription: Subscription | undefined;\nlet frequencySelectSubscription: Subscription | undefined;\n\nconst getAccountForm = (group: AbstractControl, name: string) => group?.parent?.get(name);\nlet selectedLoan: Loan | undefined;\nexport const scheduleFrequencyForAmountOption = [\n  { label: 'Once', value: Frequencies.ONCE },\n  { label: 'Daily', value: Frequencies.DAILY },\n  { label: 'Weekly', value: Frequencies.WEEKLY },\n  { label: 'Biweekly', value: Frequencies.BIWEEKLY },\n  { label: 'Monthly', value: Frequencies.MONTHLY },\n  { label: 'Quarterly', value: Frequencies.QUARTERLY },\n  { label: 'Annually', value: Frequencies.YEARLY },\n];\n\nexport const setLoan = (loan: Loan | undefined) => {\n  selectedLoan = loan;\n  if (loan) {\n    changeFields(loan);\n  }\n};\n\nexport const frequencySelectInitHook = (params: FormFieldHooksParams): void => {\n  internalTransferScheduleFreqOnInitHook(params);\n\n  frequencySelectSubscription = params.control.valueChanges.subscribe(() => {\n    params.component.toggleDependants();\n  });\n};\n\nexport const frequencySelectDestroyHook = (): void => {\n  frequencySelectSubscription?.unsubscribe();\n};\n\nexport const amountCurrencyGroupInitHook = (params: FormFieldHooksParams) => {\n  amountInputCounterPartyInitHook(params);\n\n  const remittanceInfoControl = params.group;\n  const amountGroup = remittanceInfoControl?.get('amountGroup');\n  const scheduleFrequency = remittanceInfoControl.get('scheduleFrequency');\n\n  amountOptionsSubscription = remittanceInfoControl\n    ?.get('amountOptions')\n    ?.valueChanges.pipe(startWith(remittanceInfoControl.value), pairwise())\n    .subscribe(([prev, next]: [number, number]) => {\n      if (prev !== next) {\n        if (next === 1) {\n          amountGroup?.patchValue({\n            currency: selectedLoan?.currencyCode,\n            amount: cutAmount(selectedLoan?.inArrearsAmount),\n          });\n          scheduleFrequency?.patchValue(scheduleFrequencyForAmountOption);\n        }\n        if (next === 0) {\n          scheduleFrequency?.patchValue(scheduleFrequencyForAmountOption);\n        }\n      }\n    });\n};\n\nexport const amountCurrencyGroupDestroyHook = () => {\n  amountOptionsSubscription?.unsubscribe();\n};\n\nexport const internalAmountOptionsInitHook = (params: FormFieldHooksParams): void => {\n  isEditMode = params.component.stateService.paymentStateSubject.value === 'EDIT';\n};\n\nexport const amountInputInitHook = (form: FormFieldHooksParams): void => {\n  const initiatorControl = getAccountForm(form.group, 'initiator');\n  initiatorControl?.valueChanges.subscribe((data: { currency: string }) => {\n    form.component.options.currencies = [data.currency];\n  });\n};\n\nexport const amountInputCounterPartyInitHook = ({ component, group }: FormFieldHooksParams): void => {\n  const amountGroup = group?.get('amountGroup');\n\n  if (selectedLoan?.inArrearsAmount && !amountGroup?.value.amount) {\n    amountGroup?.patchValue({\n      currency: selectedLoan?.currencyCode,\n      amount: cutAmount(selectedLoan.inArrearsAmount),\n    });\n  }\n\n  const counterpartyControl = getAccountForm(group, 'counterparty');\n  counterpartyControl?.valueChanges.subscribe((data: { currency: string }) => {\n    component.options.currencies = [data.currency];\n  });\n};\n\nexport const counterPartyPaymentInitHook = ({ component, group }: FormFieldHooksParams): void => {\n  component.options.mapItems = (accounts: InternalAccountFormItem[]): InternalAccountFormItem[] =>\n    !!selectedLoan?.id\n      ? accounts.filter((account: InternalAccountFormItem) => {\n          if (account.id === selectedLoan?.id) {\n            component.selectItem(account);\n\n            if (account.defaultRecord) {\n              const defaultRecord = account.defaultRecord as any;\n              defaultRecord.nextRepaymentAmount = selectedLoan?.nextRepaymentAmount;\n              defaultRecord.inArrearsAmount = cutAmount(selectedLoan.inArrearsAmount);\n            }\n          }\n          return account.id === selectedLoan?.id;\n        })\n      : accounts;\n\n  const remittanceInfoControl = getAccountForm(group, 'remittanceInfo');\n\n  const changesSubscription = group.valueChanges.subscribe((value) => {\n    if (value.productKindName === 'Loan') {\n      group.patchValue({ role: AccountRole.DEBTOR }, { onlySelf: true, emitEvent: false });\n    } else {\n      group.patchValue({ role: AccountRole.CREDITOR }, { onlySelf: true, emitEvent: false });\n    }\n\n    const amountOptions = remittanceInfoControl?.get('amountOptions');\n\n    if (amountOptions?.value !== 0 && amountOptions?.value !== 1 && !isEditMode) {\n      if (\n        (!selectedLoan?.inArrearsAmount || selectedLoan?.inArrearsAmount === '0') &&\n        !!selectedLoan?.nextRepaymentAmount\n      ) {\n        amountOptions?.setValue(0);\n      }\n\n      if (\n        !!selectedLoan?.inArrearsAmount &&\n        selectedLoan?.inArrearsAmount !== '0' &&\n        !!selectedLoan?.nextRepaymentAmount\n      ) {\n        amountOptions?.setValue(1);\n      }\n    }\n  });\n\n  subscriptions.push(changesSubscription);\n};\n\nexport const initiatorAdvanceInitHook = ({ component }: FormFieldHooksParams): void => {\n  const selectedId = selectedLoan?.id;\n  component.options.mapItems = (accounts: InternalAccountFormItem[]): InternalAccountFormItem[] =>\n    !!selectedId\n      ? accounts.filter((account: InternalAccountFormItem) => {\n          if (account.id === selectedId) {\n            component.selectItem(account);\n          }\n\n          return account.id === selectedId;\n        })\n      : accounts;\n};\n\nexport const counterpartyInitAdvanceHook = (params: FormFieldHooksParams): void => {\n  params.component.options.mapItems = (accounts: InternalAccountFormItem[]): InternalAccountFormItem[] => {\n    const currency = selectedLoan?.currencyCode;\n\n    return !!currency ? accounts.filter((account: InternalAccountFormItem) => account.currency === currency) : accounts;\n  };\n\n  selectAccountDefaultSettlement(params);\n};\n\nexport const initiatorInitHook = ({ component }: FormFieldHooksParams): void => {\n  component.options.mapItems = (accounts: InternalAccountFormItem[]): InternalAccountFormItem[] =>\n    !!selectedLoan?.id\n      ? accounts.filter((account: InternalAccountFormItem) => {\n          if (\n            account.id === selectedLoan?.defaultSettlementAccountId &&\n            account.currency === selectedLoan?.currencyCode\n          ) {\n            component.selectItem(account);\n          }\n          return account.currency === selectedLoan?.currencyCode;\n        })\n      : accounts;\n};\n\nconst selectAccountDefaultSettlement = ({ component }: FormFieldHooksParams): void => {\n  const defaultSettlementId = selectedLoan?.defaultSettlementAccountId;\n  if (defaultSettlementId) {\n    const subscription = component.options.items$\n      .pipe(\n        tap((accounts: InternalAccountFormItem[]): void => {\n          const account = accounts.find(\n            (internalAccount: InternalAccountFormItem) => internalAccount.id === defaultSettlementId,\n          );\n          component.selectItem(account);\n        }),\n      )\n      .subscribe();\n    subscriptions.push(subscription);\n  }\n};\n\nexport const destroyHook = (): void => {\n  subscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n};\n\nconst cutAmount = (val?: string) => (val ? val.split('.')[0] + '.' + val.split('.')[1].slice(0, 2) : '');\n","import { ValidatorFn, Validators } from '@angular/forms';\nimport {\n  AccountBalances,\n  CounterPartyFields,\n  DependantItem,\n  endDateAfterStartDateValidator,\n  InitiatorFields,\n  internalTransScheduleStartDateOnInitHook,\n  maxValueTwoHundredValidator,\n  minValueTwoValidator,\n  pastDateValidator,\n  PaymentBaseFields,\n  PaymentComponents,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n  ProductKinds,\n  RemittanceInfoFields,\n  scheduleEndDateOnInitHook,\n  scheduleEndTypeToggleDependants,\n  ScheduleFields,\n  scheduleFrequencyToggleDependants,\n  scheduleStartDateOnDestroyHook,\n  Frequencies,\n  ScheduleEndType,\n} from '@backbase/payment-orders-ang';\nimport {\n  amountCurrencyGroupDestroyHook,\n  amountCurrencyGroupInitHook,\n  amountInputCounterPartyInitHook,\n  counterPartyPaymentInitHook,\n  frequencySelectDestroyHook,\n  frequencySelectInitHook,\n  initiatorInitHook,\n  internalAmountOptionsInitHook,\n  scheduleFrequencyForAmountOption,\n} from './config.actions';\nimport { Loan } from '@backbase/loans-collection-ui-ang';\n\nconst initiatorPayment: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: 'From',\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        showCurrencySymbol: false,\n        productKinds: [\n          {\n            productKind: ProductKinds.savingsAccount,\n            balance: { apiField: AccountBalances.available, label: 'Available Balance' },\n          },\n          {\n            productKind: ProductKinds.currentAccount,\n            balance: { apiField: AccountBalances.current, label: 'Current Balance' },\n          },\n        ],\n        connectedAccounts: false,\n        connectedAccountsSubHeader: 'Connected Accounts',\n      },\n      hooks: {\n        onInit: initiatorInitHook,\n      },\n    },\n  ],\n};\n\nconst counterParty: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: CounterPartyFields.counterPartyAccountGroup,\n      options: {\n        label: 'To',\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        productKinds: [{ productKind: ProductKinds.loanAccount, balance: { label: 'Current Balance' } }],\n        connectedAccountsSubHeader: 'Connected Accounts',\n        connectedAccounts: false,\n        showCurrencySymbol: false,\n        preselect: true,\n        dependants: [\n          {\n            parent: PaymentBaseFields.remittanceInfo,\n            items: [RemittanceInfoFields.amountOptions],\n          },\n        ],\n        activateDependantsOn: (): DependantItem[] => {\n          return [\n            {\n              parent: PaymentBaseFields.remittanceInfo,\n              items: [RemittanceInfoFields.amountOptions],\n            },\n          ];\n        },\n        validationMessages: [\n          {\n            name: 'required',\n            message: 'Please select an account from the list to transfer to',\n          },\n        ],\n      },\n      hooks: {\n        onInit: counterPartyPaymentInitHook,\n      },\n    },\n  ],\n};\n\nconst remittanceInfo: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['col-12', 'pb-0', 'pt-2', 'bb-fieldset__heading'],\n        heading: 'Payment details ',\n        headingType: 'h2',\n        headingClasses: ['mb-0'],\n        separatorLine: true,\n      },\n    },\n    {\n      type: PaymentComponents.internalAmountOptions,\n      name: RemittanceInfoFields.amountOptions,\n      hidden: true,\n      options: {\n        cssClasses: ['col-12', 'pb-0'],\n        isConditionalMandatory: true,\n        noBalanceText: 'You don’t have any amount due on this credit card account.',\n        amountInputClassName: 'bb-amount-input__field--large',\n        autoDecimal: true,\n        showCurrencySymbol: false,\n        mapCurrency: false,\n        amountOptions: {\n          cssClasses: ['pl-2'],\n          loan: [\n            {\n              label: 'Additional payment',\n              description: 'This is on top of your existing schedule',\n              amountApiField: 'nextRepaymentAmount',\n              scheduleFrequency: [{ label: 'Once', value: Frequencies.ONCE }],\n            },\n            {\n              label: 'Different amount',\n              description: 'Choose what you wish to repay',\n              scheduleFrequency: scheduleFrequencyForAmountOption,\n            },\n          ],\n        },\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: 'Please select an amount to transfer',\n          },\n          {\n            name: 'required',\n            message: 'Please add amount of this transfer',\n          },\n        ],\n        currencies: ['USD'],\n        dependants: [\n          RemittanceInfoFields.amountCurrencyGroup,\n          RemittanceInfoFields.purposeOfPayment,\n          ScheduleFields.frequency,\n        ],\n        activateDependantsOn: (value): string[] => {\n          return value === 1 || value === '0'\n            ? [\n                RemittanceInfoFields.amountCurrencyGroup,\n                RemittanceInfoFields.purposeOfPayment,\n                ScheduleFields.frequency,\n              ]\n            : [ScheduleFields.frequency];\n        },\n      },\n      hooks: {\n        onInit: internalAmountOptionsInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      hidden: true,\n      options: {\n        label: 'Amount',\n        cssClasses: [\n          'bb-amount-input__field--medium',\n          'bb-block',\n          'bb-block--lg',\n          'col-md-7',\n          'bb-loans-remittance-info__section',\n        ],\n        autoDecimal: true,\n        keepValueOnHidden: true,\n        currencies: ['USD'],\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: 'Please add amount of this transfer',\n          },\n        ],\n      },\n      hooks: {\n        onInit: amountCurrencyGroupInitHook,\n        onDestroy: amountCurrencyGroupDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: RemittanceInfoFields.purposeOfPayment,\n      hidden: true,\n      options: {\n        label: 'Payment towards (optional)',\n        options: [\n          { label: '', value: '' },\n          { label: 'Interest only', value: 'Interest only' },\n          { label: 'Principal only', value: 'Principal only' },\n          { label: 'Principal and interest', value: 'Principal and interest' },\n        ],\n        preselect: true,\n        cssClasses: ['d-block', 'col-md-6', 'align-top', 'bb-loans-remittance-info__section'],\n      },\n    },\n  ],\n};\n\nconst schedule: PaymentFormGroup = {\n  name: PaymentBaseFields.schedule,\n  fields: [\n    {\n      type: PaymentComponents.scheduleHeader,\n      name: PaymentComponents.scheduleHeader,\n      options: {\n        cssClasses: ['pb-0', 'bb-schedule-header__relative-text'],\n        label: 'Schedule',\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: ScheduleFields.frequency,\n      options: {\n        label: 'Frequency',\n        validators: [Validators.required],\n        options: scheduleFrequencyForAmountOption,\n        defaultValue: Frequencies.ONCE,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        dependants: [ScheduleFields.endType],\n        activateDependantsOn: scheduleFrequencyToggleDependants,\n      },\n      hooks: {\n        onInit: frequencySelectInitHook,\n        onDestroy: frequencySelectDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.startDate,\n      options: {\n        label: 'Execution date',\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, pastDateValidator],\n        defaultValue: new Date().toISOString(),\n        validationMessages: [{ name: 'pastDate', message: 'Start date cannot be in the past' }],\n        description: 'You selected a date after the due date, this transfer will incur a late fee',\n      },\n      hooks: {\n        onInit: internalTransScheduleStartDateOnInitHook,\n        onDestroy: scheduleStartDateOnDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.radio,\n      name: ScheduleFields.endType,\n      options: {\n        label: 'End',\n        preselect: true,\n        isConditionalMandatory: true,\n        cssClasses: ['d-inline-block', 'col-md-2', 'align-top', 'bb-schedule__end-type'],\n        defaultValue: ScheduleEndType.NEVER,\n        options: [\n          { label: 'Never', value: ScheduleEndType.NEVER },\n          { label: 'On date', value: ScheduleEndType.ON },\n          { label: 'After', value: ScheduleEndType.AFTER },\n        ],\n        dependants: [ScheduleFields.endDate, ScheduleFields.repeat],\n        activateDependantsOn: scheduleEndTypeToggleDependants,\n      },\n    },\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.endDate,\n      options: {\n        cssClasses: ['d-inline-block', 'col-md-10', 'align-top', 'bb-schedule__end-date'],\n        validators: [endDateAfterStartDateValidator as ValidatorFn],\n        validationMessages: [\n          { name: 'required', message: 'End date is required' },\n          { name: 'lessThanStartDate', message: 'End date cannot be before start date' },\n        ],\n        isConditionalMandatory: true,\n      },\n      hooks: {\n        onInit: scheduleEndDateOnInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.number,\n      name: ScheduleFields.repeat,\n      options: {\n        isConditionalMandatory: true,\n        description: 'occurrences',\n        min: 2,\n        max: 200,\n        defaultValue: 2,\n        validators: [minValueTwoValidator, maxValueTwoHundredValidator],\n        validationMessages: [\n          { name: 'required', message: 'Value is required' },\n          { name: 'min', message: 'Value is below the minimum allowed occurrences (2)' },\n          { name: 'max', message: 'Value exceeds maximum allowed occurrences (200)' },\n        ],\n        cssClasses: ['d-inline-block', 'col-md-9', 'align-top', 'px-0', 'bb-schedule__repeat'],\n      },\n    },\n  ],\n};\n\nconst remittanceInfoZeroOptions: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.header,\n      name: PaymentComponents.header,\n      options: {\n        cssClasses: ['col-12', 'pb-0', 'pt-2', 'bb-fieldset__heading'],\n        heading: 'Payment details ',\n        headingType: 'h2',\n        headingClasses: ['mb-0'],\n        separatorLine: true,\n      },\n    },\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: 'Amount',\n        cssClasses: ['bb-amount-input__field--medium', 'bb-block', 'bb-block--lg', 'col-md-7'],\n        autoDecimal: true,\n        keepValueOnHidden: true,\n        currencies: ['USD'],\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: 'Please add amount of this transfer',\n          },\n        ],\n      },\n      hooks: {\n        onInit: amountInputCounterPartyInitHook,\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: RemittanceInfoFields.purposeOfPayment,\n      options: {\n        label: 'Payment towards (optional)',\n        options: [\n          { label: '', value: '' },\n          { label: 'Interest only', value: 'Interest only' },\n          { label: 'Principal only', value: 'Principal only' },\n          { label: 'Principal and interest', value: 'Principal and interest' },\n        ],\n        preselect: true,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n      },\n    },\n  ],\n};\n\n/**\n * This is the copy of the INTERNAL_TRANSFER as it fits in the best way for the loans configs\n */\n\nexport const LOANS_PAYMENT: PaymentTypeConfig = {\n  fields: [initiatorPayment, counterParty, remittanceInfo, schedule],\n  name: 'Loans Payment',\n  paymentType: 'LOAN_PAYMENT',\n  businessFunction: 'Loans Payment',\n  options: {\n    disabledCombinations: [{ from: ProductKinds.loanAccount, to: ProductKinds.loanAccount }],\n  },\n};\n\nexport function changeFields(loan: Loan | undefined) {\n  if (!loan?.nextRepaymentAmount || loan?.nextRepaymentAmount === '0') {\n    LOANS_PAYMENT.fields[2] = remittanceInfoZeroOptions;\n  } else {\n    LOANS_PAYMENT.fields[2] = remittanceInfo;\n  }\n}\n","import { Validators } from '@angular/forms';\nimport {\n  PaymentFormGroup,\n  PaymentBaseFields,\n  PaymentComponents,\n  InitiatorFields,\n  ProductKinds,\n  CounterPartyFields,\n  AccountBalances,\n  RemittanceInfoFields,\n  ScheduleFields,\n  internalTransScheduleStartDateOnInitHook,\n  scheduleStartDateOnDestroyHook,\n  scheduleFrequencyToggleDependants,\n  PaymentTypeConfig,\n  pastDateValidator,\n  Frequencies,\n} from '@backbase/payment-orders-ang';\nimport {\n  counterpartyInitAdvanceHook,\n  amountInputInitHook,\n  destroyHook,\n  initiatorAdvanceInitHook,\n} from './config.actions';\n\nconst initiatorAdvance: PaymentFormGroup = {\n  name: PaymentBaseFields.initiator,\n  title: 'Draw Amount',\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: InitiatorFields.initiatorAccountGroup,\n      options: {\n        label: 'From',\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        productKinds: [{ productKind: ProductKinds.loanAccount, balance: { label: 'Current Balance' } }],\n        connectedAccounts: false,\n        connectedAccountsSubHeader: 'Connected Accounts',\n        showCurrencySymbol: false,\n      },\n      hooks: {\n        onInit: initiatorAdvanceInitHook,\n      },\n    },\n  ],\n};\n\nconst counterPartyAdvance: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      type: PaymentComponents.internalAccountSelector,\n      name: CounterPartyFields.counterPartyAccountGroup,\n      options: {\n        label: 'To',\n        placeholder: 'Select an account',\n        cssClasses: ['col-12', 'bb-block', 'bb-block--lg'],\n        productKinds: [\n          {\n            productKind: ProductKinds.savingsAccount,\n            balance: { apiField: AccountBalances.available, label: 'Available Balance' },\n          },\n          {\n            productKind: ProductKinds.currentAccount,\n            balance: { apiField: AccountBalances.current, label: 'Current Balance' },\n          },\n        ],\n        connectedAccountsSubHeader: 'Connected Accounts',\n        connectedAccounts: false,\n        validationMessages: [\n          {\n            name: 'required',\n            message: 'Please select an account from the list to transfer to',\n          },\n        ],\n        showCurrencySymbol: false,\n      },\n      hooks: {\n        onInit: counterpartyInitAdvanceHook,\n      },\n    },\n  ],\n};\n\nconst remittanceInfoAdvance: PaymentFormGroup = {\n  name: PaymentBaseFields.remittanceInfo,\n  fields: [\n    {\n      type: PaymentComponents.amount,\n      name: RemittanceInfoFields.amountCurrencyGroup,\n      options: {\n        label: 'Amount',\n        cssClasses: ['bb-amount-input__field--medium', 'bb-block', 'bb-block--lg', 'col-md-7'],\n        autoDecimal: true,\n        keepValueOnHidden: true,\n        currencies: ['EUR'],\n        validationMessages: [\n          {\n            name: 'invalidAmount',\n            message: 'Please add amount of this transfer',\n          },\n        ],\n      },\n      hooks: {\n        onInit: amountInputInitHook,\n      },\n    },\n  ],\n};\n\nconst scheduleAdvance: PaymentFormGroup = {\n  name: PaymentBaseFields.schedule,\n  fields: [\n    {\n      type: PaymentComponents.date,\n      name: ScheduleFields.startDate,\n      options: {\n        label: 'Execution date',\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        validators: [Validators.required, pastDateValidator],\n        defaultValue: new Date().toISOString(),\n        validationMessages: [{ name: 'pastDate', message: 'Start date cannot be in the past' }],\n        description: 'You selected a date after the due date, this transfer will incur a late fee',\n      },\n      hooks: {\n        onInit: internalTransScheduleStartDateOnInitHook,\n        onDestroy: scheduleStartDateOnDestroyHook,\n      },\n    },\n    {\n      type: PaymentComponents.select,\n      name: ScheduleFields.frequency,\n      hidden: true,\n      options: {\n        label: 'Frequency',\n        validators: [Validators.required],\n        options: [{ label: 'Once', value: Frequencies.ONCE }],\n        defaultValue: Frequencies.ONCE,\n        cssClasses: ['d-block', 'col-md-6', 'align-top'],\n        dependants: [ScheduleFields.endType],\n        activateDependantsOn: scheduleFrequencyToggleDependants,\n      },\n    },\n  ],\n};\n\nexport const LOANS_ADVANCE: PaymentTypeConfig = {\n  fields: [initiatorAdvance, counterPartyAdvance, remittanceInfoAdvance, scheduleAdvance],\n  name: 'Loans Advance',\n  paymentType: 'LOAN_ADVANCE',\n  businessFunction: 'Loans Advance',\n  options: {\n    disabledCombinations: [\n      { from: ProductKinds.loanAccount, to: ProductKinds.loanAccount },\n      { from: ProductKinds.creditCard, to: ProductKinds.creditCard },\n    ],\n  },\n  hooks: {\n    onDestroy: destroyHook,\n  },\n};\n","import { PaymentMode } from '@backbase/payment-orders-ang';\n\nexport const newLoansOptions = {\n  defaultScheme: 'BBAN',\n  enableApprovals: true,\n  enablePaymentTemplateSelector: false,\n  enableSavePaymentAsTemplate: false,\n  defaultCountry: 'US',\n  paymentMode: PaymentMode.CREATE_PAYMENT,\n  isErrorTitleDisplayed: true,\n  checkClosedPaymentsAccess: false,\n  isModalView: true,\n  successEventName: '',\n  isEditPaymentModal: false,\n  isOneOffToRecurrentAllowed: false,\n  isRecurrentToOneOffAllowed: false,\n  pageSize: 1000,\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;AAYA,MAAM,aAAa,GAAmB,EAAE,CAAC;AACzC,IAAI,UAAU,GAAwB,KAAK,CAAC;AAC5C,IAAI,yBAAmD,CAAC;AACxD,IAAI,2BAAqD,CAAC;AAE1D,MAAM,cAAc,GAAG,CAAC,KAAsB,EAAE,IAAY,KAAK,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAA,EAAA,GAAA,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC,IAAI,CAAC,CAAA,EAAA,CAAC;AAC1F,IAAI,YAA8B,CAAC;AAC5B,MAAM,gCAAgC,GAAG;IAC9C,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,IAAI,EAAE;IAC1C,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE;IAC5C,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,MAAM,EAAE;IAC9C,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,QAAQ,EAAE;IAClD,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,OAAO,EAAE;IAChD,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,CAAC,SAAS,EAAE;IACpD,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,MAAM,EAAE;CACjD,CAAC;AAEW,MAAA,OAAO,GAAG,CAAC,IAAsB,KAAI;IAChD,YAAY,GAAG,IAAI,CAAC;AACpB,IAAA,IAAI,IAAI,EAAE;QACR,YAAY,CAAC,IAAI,CAAC,CAAC;AACpB,KAAA;AACH,EAAE;AAEK,MAAM,uBAAuB,GAAG,CAAC,MAA4B,KAAU;IAC5E,sCAAsC,CAAC,MAAM,CAAC,CAAC;IAE/C,2BAA2B,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;AACvE,QAAA,MAAM,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;AACtC,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEK,MAAM,0BAA0B,GAAG,MAAW;AACnD,IAAA,2BAA2B,aAA3B,2BAA2B,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA3B,2BAA2B,CAAE,WAAW,EAAE,CAAC;AAC7C,CAAC,CAAC;AAEK,MAAM,2BAA2B,GAAG,CAAC,MAA4B,KAAI;;IAC1E,+BAA+B,CAAC,MAAM,CAAC,CAAC;AAExC,IAAA,MAAM,qBAAqB,GAAG,MAAM,CAAC,KAAK,CAAC;AAC3C,IAAA,MAAM,WAAW,GAAG,qBAAqB,KAAA,IAAA,IAArB,qBAAqB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArB,qBAAqB,CAAE,GAAG,CAAC,aAAa,CAAC,CAAC;IAC9D,MAAM,iBAAiB,GAAG,qBAAqB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAEzE,IAAA,yBAAyB,GAAG,CAAA,EAAA,GAAA,qBAAqB,KAArB,IAAA,IAAA,qBAAqB,uBAArB,qBAAqB,CAC7C,GAAG,CAAC,eAAe,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CACpB,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,CACrE,CAAA,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAmB,KAAI;QAC5C,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,gBAAA,WAAW,aAAX,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAX,WAAW,CAAE,UAAU,CAAC;AACtB,oBAAA,QAAQ,EAAE,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,YAAY;oBACpC,MAAM,EAAE,SAAS,CAAC,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,eAAe,CAAC;AACjD,iBAAA,CAAC,CAAC;gBACH,iBAAiB,KAAA,IAAA,IAAjB,iBAAiB,KAAjB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,iBAAiB,CAAE,UAAU,CAAC,gCAAgC,CAAC,CAAC;AACjE,aAAA;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,iBAAiB,KAAA,IAAA,IAAjB,iBAAiB,KAAjB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,iBAAiB,CAAE,UAAU,CAAC,gCAAgC,CAAC,CAAC;AACjE,aAAA;AACF,SAAA;AACH,KAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEK,MAAM,8BAA8B,GAAG,MAAK;AACjD,IAAA,yBAAyB,aAAzB,yBAAyB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAzB,yBAAyB,CAAE,WAAW,EAAE,CAAC;AAC3C,CAAC,CAAC;AAEK,MAAM,6BAA6B,GAAG,CAAC,MAA4B,KAAU;AAClF,IAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,mBAAmB,CAAC,KAAK,KAAK,MAAM,CAAC;AAClF,CAAC,CAAC;AAEK,MAAM,mBAAmB,GAAG,CAAC,IAA0B,KAAU;IACtE,MAAM,gBAAgB,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACjE,IAAA,gBAAgB,KAAhB,IAAA,IAAA,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAE,YAAY,CAAC,SAAS,CAAC,CAAC,IAA0B,KAAI;AACtE,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACtD,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEK,MAAM,+BAA+B,GAAG,CAAC,EAAE,SAAS,EAAE,KAAK,EAAwB,KAAU;AAClG,IAAA,MAAM,WAAW,GAAG,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,GAAG,CAAC,aAAa,CAAC,CAAC;IAE9C,IAAI,CAAA,YAAY,KAAZ,IAAA,IAAA,YAAY,uBAAZ,YAAY,CAAE,eAAe,KAAI,EAAC,WAAW,KAAA,IAAA,IAAX,WAAW,KAAX,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAW,CAAE,KAAK,CAAC,MAAM,CAAA,EAAE;AAC/D,QAAA,WAAW,aAAX,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAX,WAAW,CAAE,UAAU,CAAC;AACtB,YAAA,QAAQ,EAAE,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,YAAY;AACpC,YAAA,MAAM,EAAE,SAAS,CAAC,YAAY,CAAC,eAAe,CAAC;AAChD,SAAA,CAAC,CAAC;AACJ,KAAA;IAED,MAAM,mBAAmB,GAAG,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;AAClE,IAAA,mBAAmB,KAAnB,IAAA,IAAA,mBAAmB,KAAnB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,mBAAmB,CAAE,YAAY,CAAC,SAAS,CAAC,CAAC,IAA0B,KAAI;QACzE,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACjD,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEK,MAAM,2BAA2B,GAAG,CAAC,EAAE,SAAS,EAAE,KAAK,EAAwB,KAAU;IAC9F,SAAS,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,QAAmC,KAC/D,CAAC,EAAC,YAAY,KAAZ,IAAA,IAAA,YAAY,uBAAZ,YAAY,CAAE,EAAE,CAAA;UACd,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAgC,KAAI;AACnD,YAAA,IAAI,OAAO,CAAC,EAAE,MAAK,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,EAAE,CAAA,EAAE;AACnC,gBAAA,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAE9B,IAAI,OAAO,CAAC,aAAa,EAAE;AACzB,oBAAA,MAAM,aAAa,GAAG,OAAO,CAAC,aAAoB,CAAC;oBACnD,aAAa,CAAC,mBAAmB,GAAG,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,mBAAmB,CAAC;oBACtE,aAAa,CAAC,eAAe,GAAG,SAAS,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;AACzE,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,OAAO,CAAC,EAAE,MAAK,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,EAAE,CAAA,CAAC;AACzC,SAAC,CAAC;UACF,QAAQ,CAAC;IAEf,MAAM,qBAAqB,GAAG,cAAc,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IAEtE,MAAM,mBAAmB,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;AACjE,QAAA,IAAI,KAAK,CAAC,eAAe,KAAK,MAAM,EAAE;YACpC,KAAK,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACtF,SAAA;AAAM,aAAA;YACL,KAAK,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACxF,SAAA;AAED,QAAA,MAAM,aAAa,GAAG,qBAAqB,KAAA,IAAA,IAArB,qBAAqB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArB,qBAAqB,CAAE,GAAG,CAAC,eAAe,CAAC,CAAC;QAElE,IAAI,CAAA,aAAa,KAAA,IAAA,IAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,KAAK,MAAK,CAAC,IAAI,CAAA,aAAa,KAAb,IAAA,IAAA,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,KAAK,MAAK,CAAC,IAAI,CAAC,UAAU,EAAE;YAC3E,IACE,CAAC,EAAC,YAAY,aAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,eAAe,CAAA,IAAI,CAAA,YAAY,aAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,eAAe,MAAK,GAAG;gBACxE,CAAC,EAAC,YAAY,KAAZ,IAAA,IAAA,YAAY,uBAAZ,YAAY,CAAE,mBAAmB,CAAA,EACnC;gBACA,aAAa,KAAA,IAAA,IAAb,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5B,aAAA;YAED,IACE,CAAC,EAAC,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,eAAe,CAAA;gBAC/B,CAAA,YAAY,aAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,eAAe,MAAK,GAAG;gBACrC,CAAC,EAAC,YAAY,KAAZ,IAAA,IAAA,YAAY,uBAAZ,YAAY,CAAE,mBAAmB,CAAA,EACnC;gBACA,aAAa,KAAA,IAAA,IAAb,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5B,aAAA;AACF,SAAA;AACH,KAAC,CAAC,CAAC;AAEH,IAAA,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEK,MAAM,wBAAwB,GAAG,CAAC,EAAE,SAAS,EAAwB,KAAU;IACpF,MAAM,UAAU,GAAG,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,EAAE,CAAC;AACpC,IAAA,SAAS,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,QAAmC,KAC/D,CAAC,CAAC,UAAU;UACR,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAgC,KAAI;AACnD,YAAA,IAAI,OAAO,CAAC,EAAE,KAAK,UAAU,EAAE;AAC7B,gBAAA,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC/B,aAAA;AAED,YAAA,OAAO,OAAO,CAAC,EAAE,KAAK,UAAU,CAAC;AACnC,SAAC,CAAC;UACF,QAAQ,CAAC;AACjB,CAAC,CAAC;AAEK,MAAM,2BAA2B,GAAG,CAAC,MAA4B,KAAU;IAChF,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,QAAmC,KAA+B;QACrG,MAAM,QAAQ,GAAG,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,YAAY,CAAC;QAE5C,OAAO,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAgC,KAAK,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,GAAG,QAAQ,CAAC;AACtH,KAAC,CAAC;IAEF,8BAA8B,CAAC,MAAM,CAAC,CAAC;AACzC,CAAC,CAAC;AAEK,MAAM,iBAAiB,GAAG,CAAC,EAAE,SAAS,EAAwB,KAAU;IAC7E,SAAS,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,QAAmC,KAC/D,CAAC,EAAC,YAAY,KAAZ,IAAA,IAAA,YAAY,uBAAZ,YAAY,CAAE,EAAE,CAAA;UACd,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAgC,KAAI;YACnD,IACE,OAAO,CAAC,EAAE,MAAK,YAAY,KAAZ,IAAA,IAAA,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,0BAA0B,CAAA;gBACvD,OAAO,CAAC,QAAQ,MAAK,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,YAAY,CAAA,EAC/C;AACA,gBAAA,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC/B,aAAA;AACD,YAAA,OAAO,OAAO,CAAC,QAAQ,MAAK,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,YAAY,CAAA,CAAC;AACzD,SAAC,CAAC;UACF,QAAQ,CAAC;AACjB,CAAC,CAAC;AAEF,MAAM,8BAA8B,GAAG,CAAC,EAAE,SAAS,EAAwB,KAAU;IACnF,MAAM,mBAAmB,GAAG,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,0BAA0B,CAAC;AACrE,IAAA,IAAI,mBAAmB,EAAE;AACvB,QAAA,MAAM,YAAY,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM;AAC1C,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,QAAmC,KAAU;AAChD,YAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAC3B,CAAC,eAAwC,KAAK,eAAe,CAAC,EAAE,KAAK,mBAAmB,CACzF,CAAC;AACF,YAAA,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAChC,SAAC,CAAC,CACH;AACA,aAAA,SAAS,EAAE,CAAC;AACf,QAAA,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAClC,KAAA;AACH,CAAC,CAAC;AAEK,MAAM,WAAW,GAAG,MAAW;AACpC,IAAA,aAAa,CAAC,OAAO,CAAC,CAAC,YAA0B,KAAK,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;AACpF,EAAE;AAEF,MAAM,SAAS,GAAG,CAAC,GAAY,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;;AChLxG,MAAM,gBAAgB,GAAqB;IACzC,IAAI,EAAE,iBAAiB,CAAC,SAAS;AACjC,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,uBAAuB;YAC/C,IAAI,EAAE,eAAe,CAAC,qBAAqB;AAC3C,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,MAAM;AACb,gBAAA,WAAW,EAAE,mBAAmB;AAChC,gBAAA,UAAU,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,cAAc,CAAC;AAClD,gBAAA,kBAAkB,EAAE,KAAK;AACzB,gBAAA,YAAY,EAAE;AACZ,oBAAA;wBACE,WAAW,EAAE,YAAY,CAAC,cAAc;wBACxC,OAAO,EAAE,EAAE,QAAQ,EAAE,eAAe,CAAC,SAAS,EAAE,KAAK,EAAE,mBAAmB,EAAE;AAC7E,qBAAA;AACD,oBAAA;wBACE,WAAW,EAAE,YAAY,CAAC,cAAc;wBACxC,OAAO,EAAE,EAAE,QAAQ,EAAE,eAAe,CAAC,OAAO,EAAE,KAAK,EAAE,iBAAiB,EAAE;AACzE,qBAAA;AACF,iBAAA;AACD,gBAAA,iBAAiB,EAAE,KAAK;AACxB,gBAAA,0BAA0B,EAAE,oBAAoB;AACjD,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,iBAAiB;AAC1B,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEF,MAAM,YAAY,GAAqB;IACrC,IAAI,EAAE,iBAAiB,CAAC,YAAY;AACpC,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,uBAAuB;YAC/C,IAAI,EAAE,kBAAkB,CAAC,wBAAwB;AACjD,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,IAAI;AACX,gBAAA,WAAW,EAAE,mBAAmB;AAChC,gBAAA,UAAU,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,cAAc,CAAC;AAClD,gBAAA,YAAY,EAAE,CAAC,EAAE,WAAW,EAAE,YAAY,CAAC,WAAW,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAAE,CAAC;AAChG,gBAAA,0BAA0B,EAAE,oBAAoB;AAChD,gBAAA,iBAAiB,EAAE,KAAK;AACxB,gBAAA,kBAAkB,EAAE,KAAK;AACzB,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,UAAU,EAAE;AACV,oBAAA;wBACE,MAAM,EAAE,iBAAiB,CAAC,cAAc;AACxC,wBAAA,KAAK,EAAE,CAAC,oBAAoB,CAAC,aAAa,CAAC;AAC5C,qBAAA;AACF,iBAAA;gBACD,oBAAoB,EAAE,MAAsB;oBAC1C,OAAO;AACL,wBAAA;4BACE,MAAM,EAAE,iBAAiB,CAAC,cAAc;AACxC,4BAAA,KAAK,EAAE,CAAC,oBAAoB,CAAC,aAAa,CAAC;AAC5C,yBAAA;qBACF,CAAC;iBACH;AACD,gBAAA,kBAAkB,EAAE;AAClB,oBAAA;AACE,wBAAA,IAAI,EAAE,UAAU;AAChB,wBAAA,OAAO,EAAE,uDAAuD;AACjE,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,2BAA2B;AACpC,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEF,MAAM,cAAc,GAAqB;IACvC,IAAI,EAAE,iBAAiB,CAAC,cAAc;AACtC,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,iBAAiB,CAAC,MAAM;AAC9B,YAAA,OAAO,EAAE;gBACP,UAAU,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,sBAAsB,CAAC;AAC9D,gBAAA,OAAO,EAAE,kBAAkB;AAC3B,gBAAA,WAAW,EAAE,IAAI;gBACjB,cAAc,EAAE,CAAC,MAAM,CAAC;AACxB,gBAAA,aAAa,EAAE,IAAI;AACpB,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,qBAAqB;YAC7C,IAAI,EAAE,oBAAoB,CAAC,aAAa;AACxC,YAAA,MAAM,EAAE,IAAI;AACZ,YAAA,OAAO,EAAE;AACP,gBAAA,UAAU,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;AAC9B,gBAAA,sBAAsB,EAAE,IAAI;AAC5B,gBAAA,aAAa,EAAE,4DAA4D;AAC3E,gBAAA,oBAAoB,EAAE,+BAA+B;AACrD,gBAAA,WAAW,EAAE,IAAI;AACjB,gBAAA,kBAAkB,EAAE,KAAK;AACzB,gBAAA,WAAW,EAAE,KAAK;AAClB,gBAAA,aAAa,EAAE;oBACb,UAAU,EAAE,CAAC,MAAM,CAAC;AACpB,oBAAA,IAAI,EAAE;AACJ,wBAAA;AACE,4BAAA,KAAK,EAAE,oBAAoB;AAC3B,4BAAA,WAAW,EAAE,0CAA0C;AACvD,4BAAA,cAAc,EAAE,qBAAqB;AACrC,4BAAA,iBAAiB,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC;AAChE,yBAAA;AACD,wBAAA;AACE,4BAAA,KAAK,EAAE,kBAAkB;AACzB,4BAAA,WAAW,EAAE,+BAA+B;AAC5C,4BAAA,iBAAiB,EAAE,gCAAgC;AACpD,yBAAA;AACF,qBAAA;AACF,iBAAA;AACD,gBAAA,kBAAkB,EAAE;AAClB,oBAAA;AACE,wBAAA,IAAI,EAAE,eAAe;AACrB,wBAAA,OAAO,EAAE,qCAAqC;AAC/C,qBAAA;AACD,oBAAA;AACE,wBAAA,IAAI,EAAE,UAAU;AAChB,wBAAA,OAAO,EAAE,oCAAoC;AAC9C,qBAAA;AACF,iBAAA;gBACD,UAAU,EAAE,CAAC,KAAK,CAAC;AACnB,gBAAA,UAAU,EAAE;AACV,oBAAA,oBAAoB,CAAC,mBAAmB;AACxC,oBAAA,oBAAoB,CAAC,gBAAgB;AACrC,oBAAA,cAAc,CAAC,SAAS;AACzB,iBAAA;AACD,gBAAA,oBAAoB,EAAE,CAAC,KAAK,KAAc;AACxC,oBAAA,OAAO,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,GAAG;AACjC,0BAAE;AACE,4BAAA,oBAAoB,CAAC,mBAAmB;AACxC,4BAAA,oBAAoB,CAAC,gBAAgB;AACrC,4BAAA,cAAc,CAAC,SAAS;AACzB,yBAAA;AACH,0BAAE,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;iBAChC;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,6BAA6B;AACtC,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,oBAAoB,CAAC,mBAAmB;AAC9C,YAAA,MAAM,EAAE,IAAI;AACZ,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,QAAQ;AACf,gBAAA,UAAU,EAAE;oBACV,gCAAgC;oBAChC,UAAU;oBACV,cAAc;oBACd,UAAU;oBACV,mCAAmC;AACpC,iBAAA;AACD,gBAAA,WAAW,EAAE,IAAI;AACjB,gBAAA,iBAAiB,EAAE,IAAI;gBACvB,UAAU,EAAE,CAAC,KAAK,CAAC;AACnB,gBAAA,kBAAkB,EAAE;AAClB,oBAAA;AACE,wBAAA,IAAI,EAAE,eAAe;AACrB,wBAAA,OAAO,EAAE,oCAAoC;AAC9C,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,2BAA2B;AACnC,gBAAA,SAAS,EAAE,8BAA8B;AAC1C,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,oBAAoB,CAAC,gBAAgB;AAC3C,YAAA,MAAM,EAAE,IAAI;AACZ,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,4BAA4B;AACnC,gBAAA,OAAO,EAAE;AACP,oBAAA,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;AACxB,oBAAA,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,eAAe,EAAE;AAClD,oBAAA,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE;AACpD,oBAAA,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAE;AACrE,iBAAA;AACD,gBAAA,SAAS,EAAE,IAAI;gBACf,UAAU,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,mCAAmC,CAAC;AACtF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEF,MAAM,QAAQ,GAAqB;IACjC,IAAI,EAAE,iBAAiB,CAAC,QAAQ;AAChC,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,cAAc;YACtC,IAAI,EAAE,iBAAiB,CAAC,cAAc;AACtC,YAAA,OAAO,EAAE;AACP,gBAAA,UAAU,EAAE,CAAC,MAAM,EAAE,mCAAmC,CAAC;AACzD,gBAAA,KAAK,EAAE,UAAU;AAClB,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,cAAc,CAAC,SAAS;AAC9B,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,WAAW;AAClB,gBAAA,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;AACjC,gBAAA,OAAO,EAAE,gCAAgC;gBACzC,YAAY,EAAE,WAAW,CAAC,IAAI;AAC9B,gBAAA,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,WAAW,CAAC;AACvD,gBAAA,UAAU,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC;AACpC,gBAAA,oBAAoB,EAAE,iCAAiC;AACxD,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,uBAAuB;AAC/B,gBAAA,SAAS,EAAE,0BAA0B;AACtC,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,IAAI;YAC5B,IAAI,EAAE,cAAc,CAAC,SAAS;AAC9B,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,gBAAgB;AACvB,gBAAA,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,WAAW,CAAC;AACvD,gBAAA,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,iBAAiB,CAAC;AACpD,gBAAA,YAAY,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACtC,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,kCAAkC,EAAE,CAAC;AACvF,gBAAA,WAAW,EAAE,6EAA6E;AAC3F,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,wCAAwC;AAChD,gBAAA,SAAS,EAAE,8BAA8B;AAC1C,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,KAAK;YAC7B,IAAI,EAAE,cAAc,CAAC,OAAO;AAC5B,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,sBAAsB,EAAE,IAAI;gBAC5B,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,WAAW,EAAE,uBAAuB,CAAC;gBAChF,YAAY,EAAE,eAAe,CAAC,KAAK;AACnC,gBAAA,OAAO,EAAE;oBACP,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,eAAe,CAAC,KAAK,EAAE;oBAChD,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,EAAE;oBAC/C,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,eAAe,CAAC,KAAK,EAAE;AACjD,iBAAA;gBACD,UAAU,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,cAAc,CAAC,MAAM,CAAC;AAC3D,gBAAA,oBAAoB,EAAE,+BAA+B;AACtD,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,IAAI;YAC5B,IAAI,EAAE,cAAc,CAAC,OAAO;AAC5B,YAAA,OAAO,EAAE;gBACP,UAAU,EAAE,CAAC,gBAAgB,EAAE,WAAW,EAAE,WAAW,EAAE,uBAAuB,CAAC;gBACjF,UAAU,EAAE,CAAC,8BAA6C,CAAC;AAC3D,gBAAA,kBAAkB,EAAE;AAClB,oBAAA,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;AACrD,oBAAA,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,sCAAsC,EAAE;AAC/E,iBAAA;AACD,gBAAA,sBAAsB,EAAE,IAAI;AAC7B,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,yBAAyB;AAClC,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,cAAc,CAAC,MAAM;AAC3B,YAAA,OAAO,EAAE;AACP,gBAAA,sBAAsB,EAAE,IAAI;AAC5B,gBAAA,WAAW,EAAE,aAAa;AAC1B,gBAAA,GAAG,EAAE,CAAC;AACN,gBAAA,GAAG,EAAE,GAAG;AACR,gBAAA,YAAY,EAAE,CAAC;AACf,gBAAA,UAAU,EAAE,CAAC,oBAAoB,EAAE,2BAA2B,CAAC;AAC/D,gBAAA,kBAAkB,EAAE;AAClB,oBAAA,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAE;AAClD,oBAAA,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,oDAAoD,EAAE;AAC9E,oBAAA,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,iDAAiD,EAAE;AAC5E,iBAAA;gBACD,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,qBAAqB,CAAC;AACvF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEF,MAAM,yBAAyB,GAAqB;IAClD,IAAI,EAAE,iBAAiB,CAAC,cAAc;AACtC,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,iBAAiB,CAAC,MAAM;AAC9B,YAAA,OAAO,EAAE;gBACP,UAAU,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,sBAAsB,CAAC;AAC9D,gBAAA,OAAO,EAAE,kBAAkB;AAC3B,gBAAA,WAAW,EAAE,IAAI;gBACjB,cAAc,EAAE,CAAC,MAAM,CAAC;AACxB,gBAAA,aAAa,EAAE,IAAI;AACpB,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,oBAAoB,CAAC,mBAAmB;AAC9C,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,QAAQ;gBACf,UAAU,EAAE,CAAC,gCAAgC,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,CAAC;AACtF,gBAAA,WAAW,EAAE,IAAI;AACjB,gBAAA,iBAAiB,EAAE,IAAI;gBACvB,UAAU,EAAE,CAAC,KAAK,CAAC;AACnB,gBAAA,kBAAkB,EAAE;AAClB,oBAAA;AACE,wBAAA,IAAI,EAAE,eAAe;AACrB,wBAAA,OAAO,EAAE,oCAAoC;AAC9C,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,+BAA+B;AACxC,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,oBAAoB,CAAC,gBAAgB;AAC3C,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,4BAA4B;AACnC,gBAAA,OAAO,EAAE;AACP,oBAAA,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;AACxB,oBAAA,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,eAAe,EAAE;AAClD,oBAAA,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE;AACpD,oBAAA,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAE;AACrE,iBAAA;AACD,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,UAAU,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC;AACjD,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEF;;AAEG;AAEU,MAAA,aAAa,GAAsB;IAC9C,MAAM,EAAE,CAAC,gBAAgB,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,CAAC;AAClE,IAAA,IAAI,EAAE,eAAe;AACrB,IAAA,WAAW,EAAE,cAAc;AAC3B,IAAA,gBAAgB,EAAE,eAAe;AACjC,IAAA,OAAO,EAAE;AACP,QAAA,oBAAoB,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,WAAW,EAAE,EAAE,EAAE,YAAY,CAAC,WAAW,EAAE,CAAC;AACzF,KAAA;EACD;AAEI,SAAU,YAAY,CAAC,IAAsB,EAAA;IACjD,IAAI,EAAC,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,mBAAmB,CAAA,IAAI,CAAA,IAAI,aAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,mBAAmB,MAAK,GAAG,EAAE;AACnE,QAAA,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,yBAAyB,CAAC;AACrD,KAAA;AAAM,SAAA;AACL,QAAA,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;AAC1C,KAAA;AACH;;ACzXA,MAAM,gBAAgB,GAAqB;IACzC,IAAI,EAAE,iBAAiB,CAAC,SAAS;AACjC,IAAA,KAAK,EAAE,aAAa;AACpB,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,uBAAuB;YAC/C,IAAI,EAAE,eAAe,CAAC,qBAAqB;AAC3C,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,MAAM;AACb,gBAAA,WAAW,EAAE,mBAAmB;AAChC,gBAAA,UAAU,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,cAAc,CAAC;AAClD,gBAAA,YAAY,EAAE,CAAC,EAAE,WAAW,EAAE,YAAY,CAAC,WAAW,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAAE,CAAC;AAChG,gBAAA,iBAAiB,EAAE,KAAK;AACxB,gBAAA,0BAA0B,EAAE,oBAAoB;AAChD,gBAAA,kBAAkB,EAAE,KAAK;AAC1B,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,wBAAwB;AACjC,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEF,MAAM,mBAAmB,GAAqB;IAC5C,IAAI,EAAE,iBAAiB,CAAC,YAAY;AACpC,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,uBAAuB;YAC/C,IAAI,EAAE,kBAAkB,CAAC,wBAAwB;AACjD,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,IAAI;AACX,gBAAA,WAAW,EAAE,mBAAmB;AAChC,gBAAA,UAAU,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,cAAc,CAAC;AAClD,gBAAA,YAAY,EAAE;AACZ,oBAAA;wBACE,WAAW,EAAE,YAAY,CAAC,cAAc;wBACxC,OAAO,EAAE,EAAE,QAAQ,EAAE,eAAe,CAAC,SAAS,EAAE,KAAK,EAAE,mBAAmB,EAAE;AAC7E,qBAAA;AACD,oBAAA;wBACE,WAAW,EAAE,YAAY,CAAC,cAAc;wBACxC,OAAO,EAAE,EAAE,QAAQ,EAAE,eAAe,CAAC,OAAO,EAAE,KAAK,EAAE,iBAAiB,EAAE;AACzE,qBAAA;AACF,iBAAA;AACD,gBAAA,0BAA0B,EAAE,oBAAoB;AAChD,gBAAA,iBAAiB,EAAE,KAAK;AACxB,gBAAA,kBAAkB,EAAE;AAClB,oBAAA;AACE,wBAAA,IAAI,EAAE,UAAU;AAChB,wBAAA,OAAO,EAAE,uDAAuD;AACjE,qBAAA;AACF,iBAAA;AACD,gBAAA,kBAAkB,EAAE,KAAK;AAC1B,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,2BAA2B;AACpC,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEF,MAAM,qBAAqB,GAAqB;IAC9C,IAAI,EAAE,iBAAiB,CAAC,cAAc;AACtC,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,oBAAoB,CAAC,mBAAmB;AAC9C,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,QAAQ;gBACf,UAAU,EAAE,CAAC,gCAAgC,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,CAAC;AACtF,gBAAA,WAAW,EAAE,IAAI;AACjB,gBAAA,iBAAiB,EAAE,IAAI;gBACvB,UAAU,EAAE,CAAC,KAAK,CAAC;AACnB,gBAAA,kBAAkB,EAAE;AAClB,oBAAA;AACE,wBAAA,IAAI,EAAE,eAAe;AACrB,wBAAA,OAAO,EAAE,oCAAoC;AAC9C,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,mBAAmB;AAC5B,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEF,MAAM,eAAe,GAAqB;IACxC,IAAI,EAAE,iBAAiB,CAAC,QAAQ;AAChC,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,IAAI;YAC5B,IAAI,EAAE,cAAc,CAAC,SAAS;AAC9B,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,gBAAgB;AACvB,gBAAA,UAAU,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC;AAChD,gBAAA,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,iBAAiB,CAAC;AACpD,gBAAA,YAAY,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACtC,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,kCAAkC,EAAE,CAAC;AACvF,gBAAA,WAAW,EAAE,6EAA6E;AAC3F,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,wCAAwC;AAChD,gBAAA,SAAS,EAAE,8BAA8B;AAC1C,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,MAAM;YAC9B,IAAI,EAAE,cAAc,CAAC,SAAS;AAC9B,YAAA,MAAM,EAAE,IAAI;AACZ,YAAA,OAAO,EAAE;AACP,gBAAA,KAAK,EAAE,WAAW;AAClB,gBAAA,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;AACjC,gBAAA,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC;gBACrD,YAAY,EAAE,WAAW,CAAC,IAAI;AAC9B,gBAAA,UAAU,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC;AAChD,gBAAA,UAAU,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC;AACpC,gBAAA,oBAAoB,EAAE,iCAAiC;AACxD,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEW,MAAA,aAAa,GAAsB;IAC9C,MAAM,EAAE,CAAC,gBAAgB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,eAAe,CAAC;AACvF,IAAA,IAAI,EAAE,eAAe;AACrB,IAAA,WAAW,EAAE,cAAc;AAC3B,IAAA,gBAAgB,EAAE,eAAe;AACjC,IAAA,OAAO,EAAE;AACP,QAAA,oBAAoB,EAAE;YACpB,EAAE,IAAI,EAAE,YAAY,CAAC,WAAW,EAAE,EAAE,EAAE,YAAY,CAAC,WAAW,EAAE;YAChE,EAAE,IAAI,EAAE,YAAY,CAAC,UAAU,EAAE,EAAE,EAAE,YAAY,CAAC,UAAU,EAAE;AAC/D,SAAA;AACF,KAAA;AACD,IAAA,KAAK,EAAE;AACL,QAAA,SAAS,EAAE,WAAW;AACvB,KAAA;;;AC9JU,MAAA,eAAe,GAAG;AAC7B,IAAA,aAAa,EAAE,MAAM;AACrB,IAAA,eAAe,EAAE,IAAI;AACrB,IAAA,6BAA6B,EAAE,KAAK;AACpC,IAAA,2BAA2B,EAAE,KAAK;AAClC,IAAA,cAAc,EAAE,IAAI;IACpB,WAAW,EAAE,WAAW,CAAC,cAAc;AACvC,IAAA,qBAAqB,EAAE,IAAI;AAC3B,IAAA,yBAAyB,EAAE,KAAK;AAChC,IAAA,WAAW,EAAE,IAAI;AACjB,IAAA,gBAAgB,EAAE,EAAE;AACpB,IAAA,kBAAkB,EAAE,KAAK;AACzB,IAAA,0BAA0B,EAAE,KAAK;AACjC,IAAA,0BAA0B,EAAE,KAAK;AACjC,IAAA,QAAQ,EAAE,IAAI;;;AChBhB;;AAEG;;;;"}