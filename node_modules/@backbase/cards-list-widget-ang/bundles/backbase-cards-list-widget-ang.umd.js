(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@backbase/cards-common-ang'), require('@angular/common'), require('@angular/core'), require('@backbase/foundation-ang/core'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/load-button'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/payment-card'), require('@backbase/ui-ang/notification'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@backbase/cards-list-widget-ang', ['exports', '@backbase/cards-common-ang', '@angular/common', '@angular/core', '@backbase/foundation-ang/core', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/icon', '@backbase/ui-ang/load-button', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/payment-card', '@backbase/ui-ang/notification', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["cards-list-widget-ang"] = {}), global.i1, global.ng.common, global.ng.core, global.i1$2, global.i2$1, global.icon, global.i1$1, global.i4, global.i3$1, global.i2, global.rxjs, global.rxjs.operators));
})(this, (function (exports, i1, i3, i0, i1$2, i2$1, icon, i1$1, i4, i3$1, i2, rxjs, operators) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1$1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var PaymentCardControlsComponent = /** @class */ (function (_super) {
        __extends(PaymentCardControlsComponent, _super);
        function PaymentCardControlsComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return PaymentCardControlsComponent;
    }(i1.PaymentCardControlsBase));
    PaymentCardControlsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentCardControlsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentCardControlsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardControlsComponent, selector: "bb-payment-card-controls,bb-cards-list-payment-card-controls", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container bbCardsListPaymentCardControlsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsListPaymentCardControlsCustomizable let-hostRef>\n  <ng-container *ngIf=\"hostRef.paymentCard.status === 'ACTIVE'\">\n    <span class=\"bb-payment-card-controls\">\n      <bb-load-button-ui\n        color=\"secondary\"\n        [isLoading]=\"hostRef.isLockLoading\"\n        (click)=\"!hostRef.isLockLoading && hostRef.onLock()\"\n        i18n=\"Lock button|Control card by locking@@card.control.lock\"\n        *ngIf=\"!hostRef.isLocked\"\n      >Lock</bb-load-button-ui>\n      <bb-load-button-ui\n        color=\"primary\"\n        [isLoading]=\"hostRef.isLockLoading\"\n        (click)=\"!hostRef.isLockLoading && hostRef.onUnlock()\"\n        i18n=\"Unlock button|Control card by unlocking@@card.control.unlock\"\n        *ngIf=\"hostRef.isLocked\"\n      >Unlock</bb-load-button-ui>\n    </span>\n\n    <bb-payment-card-initiate-replacement\n      [paymentCard]=\"hostRef.paymentCard\"\n      [isInitiateReplacementLoading]=\"hostRef.isInitiateReplacementLoading\"\n      (initiateReplacement)=\"hostRef.onInitiateReplacement($event)\"\n    ></bb-payment-card-initiate-replacement>\n  </ng-container>\n\n  <ng-container *ngIf=\"hostRef.paymentCard.status === 'INACTIVE'\">\n    <bb-payment-card-initiate-activation\n      [paymentCard]=\"hostRef.paymentCard\"\n      [isInitiateActivationLoading]=\"hostRef.isInitiateActivationLoading\"\n      (initiateActivation)=\"hostRef.onInitiateActivation($event)\"\n    ></bb-payment-card-initiate-activation>\n  </ng-container>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.LoadButtonComponent; }), selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace$1.PaymentCardInitiateReplacementComponent; }), selector: "bb-payment-card-initiate-replacement", inputs: ["paymentCard", "isInitiateReplacementLoading"], outputs: ["initiateReplacement"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace$1.PaymentCardInitiateActivationComponent; }), selector: "bb-payment-card-initiate-activation", inputs: ["paymentCard", "isInitiateActivationLoading"], outputs: ["initiateActivation"] }], directives: [{ type: i0__namespace.forwardRef(function () { return CardsListPaymentCardControlsCustomizableDirective; }), selector: "[bbCardsListPaymentCardControlsCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentCardControlsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-card-controls,bb-cards-list-payment-card-controls',
                        templateUrl: './payment-card-controls.component.html',
                    }]
            }] });
    var CardsListPaymentCardControlsCustomizableDirective = /** @class */ (function (_super) {
        __extends(CardsListPaymentCardControlsCustomizableDirective, _super);
        function CardsListPaymentCardControlsCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return CardsListPaymentCardControlsCustomizableDirective;
    }(i1$2.BbTemplate));
    CardsListPaymentCardControlsCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListPaymentCardControlsCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    CardsListPaymentCardControlsCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsListPaymentCardControlsCustomizableDirective, selector: "[bbCardsListPaymentCardControlsCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListPaymentCardControlsCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbCardsListPaymentCardControlsCustomizable]',
                    }]
            }] });

    var PaymentCardComponent = /** @class */ (function (_super) {
        __extends(PaymentCardComponent, _super);
        function PaymentCardComponent(cardsService, cd, notificationService) {
            var _this = _super.call(this, cardsService, cd, notificationService) || this;
            _this.cardsService = cardsService;
            _this.cd = cd;
            _this.notificationService = notificationService;
            _this.hostRef = _this;
            return _this;
        }
        PaymentCardComponent.prototype.ngOnInit = function () {
            var _a, _b, _c, _d;
            /* eslint-disable max-len */
            var cardListLocalizations = {
                activationErrorHeader: $localize(templateObject_1 || (templateObject_1 = __makeTemplateObject([":Error@@card.list.activation.notification.errorHeader:Error"], [":Error@@card.list.activation.notification.errorHeader:Error"]))),
                activationErrorMessage: $localize(templateObject_2 || (templateObject_2 = __makeTemplateObject([":Failed to Activate Card. Unable to proceed, please try again.@@card.list.activation.notification.errorBody:Failed to Activate Card. Unable to proceed, please try again."], [":Failed to Activate Card. Unable to proceed, please try again.@@card.list.activation.notification.errorBody:Failed to Activate Card. Unable to proceed, please try again."]))),
                activationSuccessHeader: $localize(templateObject_3 || (templateObject_3 = __makeTemplateObject([":Card Activated@@card.list.activation.notification.successHeader:Card Activated."], [":Card Activated@@card.list.activation.notification.successHeader:Card Activated."]))),
                lockErrorHeader: $localize(templateObject_4 || (templateObject_4 = __makeTemplateObject([":Error@@card.list.lock.notification.errorHeader:Error"], [":Error@@card.list.lock.notification.errorHeader:Error"]))),
                lockErrorMessage: $localize(templateObject_5 || (templateObject_5 = __makeTemplateObject([":Card number cannot be locked, try again later|Lock Error Message@@card.list.lock.notification.errorMessage:Card number ending with ", ":Card Number: cannot be locked! Try again later."], [":Card number cannot be locked, try again later|Lock Error Message@@card.list.lock.notification.errorMessage:Card number ending with ", ":Card Number: cannot be locked! Try again later."])), (_a = this.paymentCard) === null || _a === void 0 ? void 0 : _a.number),
                lockSuccessHeader: $localize(templateObject_6 || (templateObject_6 = __makeTemplateObject([":Card locked@@card.list.lock.notification.successHeader:Card locked"], [":Card locked@@card.list.lock.notification.successHeader:Card locked"]))),
                lockSuccessMessage: $localize(templateObject_7 || (templateObject_7 = __makeTemplateObject([":Card number locked|Successful lock message@@card.list.lock.notification.successMessage:Card number ending with ", ":Card Number: has been locked."], [":Card number locked|Successful lock message@@card.list.lock.notification.successMessage:Card number ending with ", ":Card Number: has been locked."])), (_b = this.paymentCard) === null || _b === void 0 ? void 0 : _b.number),
                replacementErrorHeader: $localize(templateObject_8 || (templateObject_8 = __makeTemplateObject([":Error@@card.list.replacement.notification.errorHeader:Error"], [":Error@@card.list.replacement.notification.errorHeader:Error"]))),
                replacementErrorMessage: $localize(templateObject_9 || (templateObject_9 = __makeTemplateObject([":Can't request card replacement. Try again@@card.list.replacement.notification.errorBody:Unable to request a card replacement. Try again later."], [":Can't request card replacement. Try again@@card.list.replacement.notification.errorBody:Unable to request a card replacement. Try again later."]))),
                replacementSuccessHeader: $localize(templateObject_10 || (templateObject_10 = __makeTemplateObject([":New card ordered header@@card.list.replacement.notification.successHeader:New card ordered"], [":New card ordered header@@card.list.replacement.notification.successHeader:New card ordered"]))),
                replacementSuccessMessage: $localize(templateObject_11 || (templateObject_11 = __makeTemplateObject([":New card ordered@@card.list.replacement.notification.successBody:A new card has been ordered."], [":New card ordered@@card.list.replacement.notification.successBody:A new card has been ordered."]))),
                requestNewPinSuccessMessage: $localize(templateObject_12 || (templateObject_12 = __makeTemplateObject([":New PIN requested@@card.list.pin.notification.requestNewPinSuccessMessage:New PIN requested"], [":New PIN requested@@card.list.pin.notification.requestNewPinSuccessMessage:New PIN requested"]))),
                requestPinErrorMessage: $localize(templateObject_13 || (templateObject_13 = __makeTemplateObject([":Can't request PIN. Try again@@card.list.requestPin.notification.errorBody:Can't request PIN.  Please try again later."], [":Can't request PIN. Try again@@card.list.requestPin.notification.errorBody:Can't request PIN.  Please try again later."]))),
                resetPinSuccessMessage: $localize(templateObject_14 || (templateObject_14 = __makeTemplateObject([":PIN successfully reset@@card.list.pin.notification.resetPinSuccessMessage:PIN successfully reset"], [":PIN successfully reset@@card.list.pin.notification.resetPinSuccessMessage:PIN successfully reset"]))),
                resetPinErrorMessage: $localize(templateObject_15 || (templateObject_15 = __makeTemplateObject([":Unable to change PIN, try again@@card.list.resetPin.notification.errorBody:Unable to change PIN.  Please try again later."], [":Unable to change PIN, try again@@card.list.resetPin.notification.errorBody:Unable to change PIN.  Please try again later."]))),
                resetInvalidPinMessage: $localize(templateObject_16 || (templateObject_16 = __makeTemplateObject([":Unable to change PIN, validations not meet@@card.list.pin.notification.resetInvalidPinMessage:Unable to change PIN. New PIN and confirm don't match"], [":Unable to change PIN, validations not meet@@card.list.pin.notification.resetInvalidPinMessage:Unable to change PIN. New PIN and confirm don't match"]))),
                unlockErrorHeader: $localize(templateObject_17 || (templateObject_17 = __makeTemplateObject([":Error@@card.list.unlock.notification.errorHeader:Error"], [":Error@@card.list.unlock.notification.errorHeader:Error"]))),
                unlockErrorMessage: $localize(templateObject_18 || (templateObject_18 = __makeTemplateObject([":Card number cannot be unlocked, try again later|Unlock Error Message@@card.list.unlock.notification.errorMessage:Card number ending with ", ":Card Number: cannot be unlocked! Try again later."], [":Card number cannot be unlocked, try again later|Unlock Error Message@@card.list.unlock.notification.errorMessage:Card number ending with ", ":Card Number: cannot be unlocked! Try again later."])), (_c = this.paymentCard) === null || _c === void 0 ? void 0 : _c.number),
                unlockSuccessHeader: $localize(templateObject_19 || (templateObject_19 = __makeTemplateObject([":Card unlocked@@card.list.unlock.notification.successHeader:Card unlocked"], [":Card unlocked@@card.list.unlock.notification.successHeader:Card unlocked"]))),
                unlockSuccessMessage: $localize(templateObject_20 || (templateObject_20 = __makeTemplateObject([":Card number unlocked|Successful unlock Error Message@@card.list.unlock.notification.successMessage:Card number ending with ", ":Card Number: has been unlocked."], [":Card number unlocked|Successful unlock Error Message@@card.list.unlock.notification.successMessage:Card number ending with ", ":Card Number: has been unlocked."])), (_d = this.paymentCard) === null || _d === void 0 ? void 0 : _d.number),
                updateLimitErrorHeader: $localize(templateObject_21 || (templateObject_21 = __makeTemplateObject([":Update Limit Error Header@@card.list.limit.notification.errorHeader:"], [":Update Limit Error Header@@card.list.limit.notification.errorHeader:"]))),
                updateLimitErrorMessage: $localize(templateObject_22 || (templateObject_22 = __makeTemplateObject([":Unable to change card limit@@card.list.limit.notification.errorBody:Unable to change card limit"], [":Unable to change card limit@@card.list.limit.notification.errorBody:Unable to change card limit"]))),
                updateLimitSuccessHeader: $localize(templateObject_23 || (templateObject_23 = __makeTemplateObject([":Limit changed header@@card.list.limit.notification.successHeader:Limit changed"], [":Limit changed header@@card.list.limit.notification.successHeader:Limit changed"]))),
                updateLimitSuccessMessage: $localize(templateObject_24 || (templateObject_24 = __makeTemplateObject([":Card limit changed successfully@@card.list.limit.notification.changeLimitSuccessMessage:Card limit changed successfully"], [":Card limit changed successfully@@card.list.limit.notification.changeLimitSuccessMessage:Card limit changed successfully"]))),
            };
            this.localizations = Object.assign({}, cardListLocalizations);
        };
        /**
         * Translate the payment card status/lock status/replacement status into a displayable
         * PaymentCardDisplayState.
         */
        PaymentCardComponent.prototype.getDisplayState = function () {
            if (this.paymentCard && this.paymentCard.status === i1.PaymentCardStatus.Inactive) {
                return 'INACTIVE';
            }
            if (this.paymentCard && this.paymentCard.status === i1.PaymentCardStatus.Canceled) {
                return 'CANCELLED';
            }
            if (this.paymentCard && this.paymentCard.status === i1.PaymentCardStatus.Expired) {
                return 'EXPIRED';
            }
            if (this.paymentCard && this.paymentCard.lockStatus === i1.PaymentCardLockStatus.Locked) {
                return 'LOCKED';
            }
            return undefined;
        };
        return PaymentCardComponent;
    }(i1.PaymentCardContainerBase));
    PaymentCardComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentCardComponent, deps: [{ token: i1__namespace$1.CardsService }, { token: i0__namespace.ChangeDetectorRef }, { token: i2__namespace.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentCardComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardComponent, selector: "bb-payment-card", usesInheritance: true, ngImport: i0__namespace, template: "<ng-container bbCardsListPaymentCardCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsListPaymentCardCustomizable let-hostRef>\n  <div class=\"bb-payment-card-component\">\n    <bb-payment-card-state-wrapper-ui\n      [state]=\"hostRef.getDisplayState()\"\n      (click)=\"hostRef.onOpenDetails()\"\n      style=\"cursor: pointer;\"\n    >\n    <bb-payment-card-ui bbAccessibilityKeyboard [paymentCard]=\"hostRef.paymentCard\"></bb-payment-card-ui>\n    </bb-payment-card-state-wrapper-ui>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace$1.PaymentCardStateWrapperComponent; }), selector: "bb-payment-card-state-wrapper,bb-payment-card-state-wrapper-ui", inputs: ["state"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace$1.PaymentCardComponent; }), selector: "bb-payment-card-ui", inputs: ["paymentCard", "paymentCardNumberFormat"] }], directives: [{ type: i0__namespace.forwardRef(function () { return CardsListPaymentCardCustomizableDirective; }), selector: "[bbCardsListPaymentCardCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i1__namespace$1.AccessibilityKeyboardDirective; }), selector: "[bbAccessibilityKeyboard]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentCardComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-card',
                        templateUrl: './payment-card.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.CardsService }, { type: i0__namespace.ChangeDetectorRef }, { type: i2__namespace.NotificationService }]; } });
    var CardsListPaymentCardCustomizableDirective = /** @class */ (function (_super) {
        __extends(CardsListPaymentCardCustomizableDirective, _super);
        function CardsListPaymentCardCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return CardsListPaymentCardCustomizableDirective;
    }(i1$2.BbTemplate));
    CardsListPaymentCardCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListPaymentCardCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    CardsListPaymentCardCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsListPaymentCardCustomizableDirective, selector: "[bbCardsListPaymentCardCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListPaymentCardCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbCardsListPaymentCardCustomizable]',
                    }]
            }] });
    var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14, templateObject_15, templateObject_16, templateObject_17, templateObject_18, templateObject_19, templateObject_20, templateObject_21, templateObject_22, templateObject_23, templateObject_24;

    var PaymentCardGroupComponent = /** @class */ (function () {
        function PaymentCardGroupComponent() {
            /**
             * Event emitter for selecting a card.
             */
            this.selectCard = new i0.EventEmitter();
        }
        PaymentCardGroupComponent.prototype.ngOnInit = function () {
            if (typeof this.paymentCards === 'undefined') {
                throw new Error("\"paymentCards\" input is required in \"" + this.constructor.name + "\"");
            }
        };
        PaymentCardGroupComponent.prototype.onSelectCard = function (paymentCard) {
            this.selectCard.emit(paymentCard);
        };
        return PaymentCardGroupComponent;
    }());
    PaymentCardGroupComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentCardGroupComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentCardGroupComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardGroupComponent, selector: "bb-payment-card-group", inputs: { heading: "heading", paymentCards: "paymentCards", notificationTtl: "notificationTtl", updateAllLimits: "updateAllLimits" }, outputs: { selectCard: "selectCard" }, ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--sm\">\n  <div class=\"bb-payment-card-group-header bb-block bb-block--lg\" *ngIf=\"heading\">\n    <h2 role=\"heading\" aria-level=\"2\" tabindex=\"0\"> \n      {{heading}}\n      <ng-container i18n=\"Card group heading|Heading for group of cards@@cards.group.heading\">\n        cards\n      </ng-container>\n    </h2>\n  </div>\n  <div class=\"bb-stack bb-stack--wrap bb-stack--density-lg\">\n    <div class=\"bb-stack__item bb-block--lg\" *ngFor=\"let paymentCard of paymentCards\">\n      <bb-payment-card\n        [paymentCard]=\"paymentCard\"\n        [notificationTtl]=\"notificationTtl\"\n        [updateAllLimits]=\"updateAllLimits\"\n        (selectCard)=\"onSelectCard($event)\"\n      ></bb-payment-card>\n    </div>\n  </div>\n</div>", components: [{ type: PaymentCardComponent, selector: "bb-payment-card" }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentCardGroupComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-card-group',
                        templateUrl: './payment-card-group.component.html',
                    }]
            }], propDecorators: { heading: [{
                    type: i0.Input
                }], paymentCards: [{
                    type: i0.Input
                }], notificationTtl: [{
                    type: i0.Input
                }], updateAllLimits: [{
                    type: i0.Input
                }], selectCard: [{
                    type: i0.Output
                }] } });

    var groupByPaymentCardType = function (paymentCards, paymentCardType) { return ({
        type: paymentCardType,
        paymentCards: paymentCards.filter(function (paymentCard) { return paymentCard.type === paymentCardType; }),
    }); };
    var groupByPaymentCardTypes = function (paymentCards, paymentCardTypes) { return paymentCardTypes.reduce(function (acc, paymentCardType) {
        var paymentCardGroup = groupByPaymentCardType(paymentCards, paymentCardType);
        return paymentCardGroup.paymentCards.length ? __spreadArray(__spreadArray([], __read(acc)), [paymentCardGroup]) : acc;
    }, []); };
    var PaymentCardsContainerComponent = /** @class */ (function () {
        function PaymentCardsContainerComponent() {
            /**
             * Specifies how the payment cards are grouped, specified as an array of types.  Defaults to the
             * empty array, which means all cards are shown in one group.
             */
            this.groupByPaymentCardTypes = [];
            /**
             * Event emitter for selecting a card.
             */
            this.selectCard = new i0.EventEmitter();
            /**
             * Payment cards, grouped by the `groupByPaymentCardTypes` configuration.
             */
            this.paymentCardGroups = [];
            this.hostRef = this;
        }
        Object.defineProperty(PaymentCardsContainerComponent.prototype, "hasItems", {
            get: function () {
                return typeof this.paymentCards !== 'undefined' && this.paymentCards.length > 0;
            },
            enumerable: false,
            configurable: true
        });
        PaymentCardsContainerComponent.prototype.ngOnChanges = function (changes) {
            var paymentCards = changes.paymentCards ? changes.paymentCards.currentValue : this.paymentCards;
            var paymentCardTypes = changes.groupByPaymentCardTypes
                ? changes.groupByPaymentCardTypes.currentValue
                : this.groupByPaymentCardTypes;
            // Populate `paymentCardGroups` field.
            this.paymentCardGroups = groupByPaymentCardTypes(paymentCards, paymentCardTypes);
        };
        PaymentCardsContainerComponent.prototype.onSelectCard = function (paymentCard) {
            this.selectCard.emit(paymentCard);
        };
        return PaymentCardsContainerComponent;
    }());
    PaymentCardsContainerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentCardsContainerComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentCardsContainerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardsContainerComponent, selector: "bb-payment-cards-container", inputs: { paymentCards: "paymentCards", groupByPaymentCardTypes: "groupByPaymentCardTypes", notificationTtl: "notificationTtl", updateAllLimits: "updateAllLimits" }, outputs: { selectCard: "selectCard" }, usesOnChanges: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"hasItems; else emptyState\">\n  <ng-container bbCardsListPaymentCardsContainerCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-container>\n\n<ng-template bbCardsListPaymentCardsContainerCustomizable let-hostRef>\n  <ng-container *ngIf=\"hostRef.paymentCardGroups.length\">\n    <ng-container *ngFor=\"let paymentCardGroup of hostRef.paymentCardGroups\">\n      <bb-payment-card-group\n        *ngIf=\"paymentCardGroup.paymentCards.length\"\n        class=\"bb-block bb-block--sm\"\n        [heading]=\"paymentCardGroup.type\"\n        [paymentCards]=\"paymentCardGroup.paymentCards\"\n        [notificationTtl]=\"hostRef.notificationTtl\"\n        [updateAllLimits]=\"hostRef.updateAllLimits\"\n        (selectCard)=\"hostRef.onSelectCard($event)\"\n      ></bb-payment-card-group>\n    </ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"!hostRef.paymentCardGroups.length\">\n    <bb-payment-card-group\n      [paymentCards]=\"hostRef.paymentCards\"\n      [notificationTtl]=\"hostRef.notificationTtl\"\n      (selectCard)=\"hostRef.onSelectCard($event)\"\n    ></bb-payment-card-group>\n  </ng-container>\n</ng-template>\n\n<ng-template bbCardsListPaymentCardsEmptyStateContainerCustomizable let-hostRef>\n  <div class=\"card bb-state-container\">\n    <bb-empty-state-ui\n      i18n-title=\"No cards found@@cards.state.noResultsFound.title\"\n      title=\"No Cards Found\"\n      i18n-subtitle=\"No cards to be displayed@@cards.state.noResultsFound.subtitle\"\n      subtitle=\"You don't have any cards to be displayed.\"\n      iconSize=\"xxl\"\n      iconModifier=\"credit-card\"\n    ></bb-empty-state-ui>\n  </div>\n</ng-template>\n\n<ng-template #emptyState>\n  <ng-container \n    bbCardsListPaymentCardsEmptyStateContainerCustomizable \n    [bbHostRef]=\"hostRef\"\n  ></ng-container>\n</ng-template>\n\n", components: [{ type: i0__namespace.forwardRef(function () { return PaymentCardGroupComponent; }), selector: "bb-payment-card-group", inputs: ["heading", "paymentCards", "notificationTtl", "updateAllLimits"], outputs: ["selectCard"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return CardsListPaymentCardsContainerCustomizableDirective; }), selector: "[bbCardsListPaymentCardsContainerCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0__namespace.forwardRef(function () { return CardsListPaymentCardsEmptyStateContainerCustomizableDirective; }), selector: "[bbCardsListPaymentCardsEmptyStateContainerCustomizable]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentCardsContainerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-cards-container',
                        templateUrl: './payment-cards-container.component.html',
                    }]
            }], propDecorators: { paymentCards: [{
                    type: i0.Input
                }], groupByPaymentCardTypes: [{
                    type: i0.Input
                }], notificationTtl: [{
                    type: i0.Input
                }], updateAllLimits: [{
                    type: i0.Input
                }], selectCard: [{
                    type: i0.Output
                }] } });
    var CardsListPaymentCardsContainerCustomizableDirective = /** @class */ (function (_super) {
        __extends(CardsListPaymentCardsContainerCustomizableDirective, _super);
        function CardsListPaymentCardsContainerCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return CardsListPaymentCardsContainerCustomizableDirective;
    }(i1$2.BbTemplate));
    CardsListPaymentCardsContainerCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListPaymentCardsContainerCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    CardsListPaymentCardsContainerCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsListPaymentCardsContainerCustomizableDirective, selector: "[bbCardsListPaymentCardsContainerCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListPaymentCardsContainerCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbCardsListPaymentCardsContainerCustomizable]',
                    }]
            }] });
    var CardsListPaymentCardsEmptyStateContainerCustomizableDirective = /** @class */ (function (_super) {
        __extends(CardsListPaymentCardsEmptyStateContainerCustomizableDirective, _super);
        function CardsListPaymentCardsEmptyStateContainerCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return CardsListPaymentCardsEmptyStateContainerCustomizableDirective;
    }(i1$2.BbTemplate));
    CardsListPaymentCardsEmptyStateContainerCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListPaymentCardsEmptyStateContainerCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    CardsListPaymentCardsEmptyStateContainerCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsListPaymentCardsEmptyStateContainerCustomizableDirective, selector: "[bbCardsListPaymentCardsEmptyStateContainerCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListPaymentCardsEmptyStateContainerCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbCardsListPaymentCardsEmptyStateContainerCustomizable]',
                    }]
            }] });

    /**
     * Enumeration of possible widget preferences
     */
    var WidgetProperties = {
        GroupByPaymentCardTypes: 'groupByPaymentCardTypes',
    };

    var WidgetPropertiesService = /** @class */ (function (_super) {
        __extends(WidgetPropertiesService, _super);
        function WidgetPropertiesService(itemModel) {
            var _this = _super.call(this, itemModel) || this;
            _this.itemModel = itemModel;
            return _this;
        }
        Object.defineProperty(WidgetPropertiesService.prototype, "groupByPaymentCardTypes", {
            get: function () {
                return this.itemModel
                    ? this.itemModel
                        .property(WidgetProperties.GroupByPaymentCardTypes)
                        .pipe(operators.map(function (propertyValue) { return (propertyValue || '').split(',').filter(function (value) { return value.length > 0; }); }))
                    : rxjs.of(i1.DEFAULT_PAYMENT_CARD_TYPE_GROUP);
            },
            enumerable: false,
            configurable: true
        });
        return WidgetPropertiesService;
    }(i1.BaseWidgetPropertiesService));
    WidgetPropertiesService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: WidgetPropertiesService, deps: [{ token: i1__namespace$2.ItemModel, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    WidgetPropertiesService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: WidgetPropertiesService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: WidgetPropertiesService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i1__namespace$2.ItemModel, decorators: [{
                            type: i0.Optional
                        }] }];
        } });

    var CardsListWidgetComponent = /** @class */ (function () {
        function CardsListWidgetComponent(cardsService, widgetPropertiesService) {
            var _this = this;
            this.cardsService = cardsService;
            this.widgetPropertiesService = widgetPropertiesService;
            this.notificationTtlSubject = new rxjs.BehaviorSubject(undefined);
            this.updateAllLimitsSubject = new rxjs.BehaviorSubject(undefined);
            this.groupByPaymentCardTypesSubject = new rxjs.BehaviorSubject(undefined);
            /**
             * Event emitter for selecting a card.
             */
            this.selectedCard = new i0.EventEmitter();
            this.handleError = function (errors) {
                _this.errors = errors;
                return rxjs.of([]);
            };
        }
        Object.defineProperty(CardsListWidgetComponent.prototype, "notificationTtlValue", {
            /**
             * Notification timeout timer value configuration
             */
            // eslint-disable-next-line
            set: function (value) {
                this.notificationTtlSubject.next(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardsListWidgetComponent.prototype, "updateAllLimitsValue", {
            /**
             * Enable to send multiple limits to the API when updating values
             */
            set: function (value) {
                this.updateAllLimitsSubject.next(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardsListWidgetComponent.prototype, "groupByPaymentCardTypesValue", {
            /**
             * Types of cards configuration value
             */
            // eslint-disable-next-line
            set: function (value) {
                var newArray = value === null || value === void 0 ? void 0 : value.split(',').filter(function (val) { return val.length > 0; });
                this.groupByPaymentCardTypesSubject.next(newArray);
            },
            enumerable: false,
            configurable: true
        });
        CardsListWidgetComponent.prototype.ngOnInit = function () {
            this.cardsService.setParameters(this.groupByPaymentCardTypes);
            this.paymentCards = this.cardsService.getCards().pipe(operators.catchError(this.handleError));
        };
        Object.defineProperty(CardsListWidgetComponent.prototype, "groupByPaymentCardTypes", {
            get: function () {
                return i1.filterInputParameters(this.groupByPaymentCardTypesSubject, this.widgetPropertiesService.groupByPaymentCardTypes);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardsListWidgetComponent.prototype, "notificationTtl", {
            get: function () {
                return i1.filterInputParameters(this.notificationTtlSubject, this.widgetPropertiesService.notificationTtl);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardsListWidgetComponent.prototype, "updateAllLimits", {
            get: function () {
                return i1.filterInputParameters(this.updateAllLimitsSubject, this.widgetPropertiesService.updateAllLimits);
            },
            enumerable: false,
            configurable: true
        });
        CardsListWidgetComponent.prototype.onSelectCard = function (paymentCard) {
            this.selectedCard.emit(paymentCard.id);
        };
        return CardsListWidgetComponent;
    }());
    CardsListWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListWidgetComponent, deps: [{ token: i1__namespace$1.CardsService }, { token: WidgetPropertiesService, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    CardsListWidgetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CardsListWidgetComponent, selector: "bb-cards-list-widget", inputs: { notificationTtlValue: ["notificationTtl", "notificationTtlValue"], updateAllLimitsValue: ["updateAllLimits", "updateAllLimitsValue"], groupByPaymentCardTypesValue: ["groupByPaymentCardTypes", "groupByPaymentCardTypesValue"] }, outputs: { selectedCard: "selectedCard" }, providers: [i1.CardsService, WidgetPropertiesService], ngImport: i0__namespace, template: "<ng-container *ngIf=\"!errors; else errorState\">\n  <ng-container *ngIf=\"paymentCards | async as paymentCards; else loadingState\">\n    <bb-payment-cards-container\n      class=\"bb-block\"\n      [paymentCards]=\"paymentCards\"\n      [groupByPaymentCardTypes]=\"(groupByPaymentCardTypes | async) || undefined\"\n      [notificationTtl]=\"(notificationTtl | async) || undefined\"\n      [updateAllLimits]=\"(updateAllLimits | async) || undefined\"\n      (selectCard)=\"onSelectCard($event)\"\n    ></bb-payment-cards-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingState>\n  <div class=\"card bb-state-container\">\n    <bb-loading-indicator-ui \n      loaderSize=\"lg\" \n      text=\"Loading cards..\"\n      i18n-text=\"Loading state indicator text@@cards.list.loadingIndicator.text\"\n    ></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <bb-payment-card-multiple-error-state [errors]=\"errors\"></bb-payment-card-multiple-error-state>\n</ng-template>", components: [{ type: PaymentCardsContainerComponent, selector: "bb-payment-cards-container", inputs: ["paymentCards", "groupByPaymentCardTypes", "notificationTtl", "updateAllLimits"], outputs: ["selectCard"] }, { type: i4__namespace.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i1__namespace$1.PaymentCardMultipleErrorStateComponent, selector: "bb-payment-card-multiple-error-state", inputs: ["errors"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i3__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListWidgetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-cards-list-widget',
                        templateUrl: './cards-list-widget.component.html',
                        providers: [i1.CardsService, WidgetPropertiesService],
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace$1.CardsService }, { type: WidgetPropertiesService, decorators: [{
                            type: i0.Optional
                        }] }];
        }, propDecorators: { notificationTtlValue: [{
                    type: i0.Input,
                    args: ['notificationTtl']
                }], updateAllLimitsValue: [{
                    type: i0.Input,
                    args: ['updateAllLimits']
                }], groupByPaymentCardTypesValue: [{
                    type: i0.Input,
                    args: ['groupByPaymentCardTypes']
                }], selectedCard: [{
                    type: i0.Output
                }] } });

    var modules = [
        i3$1.PaymentCardModule,
        i4.LoadingIndicatorModule,
        i1$1.LoadButtonModule,
        icon.IconModule,
        i2$1.EmptyStateModule,
        i1.CardsCommonModule,
    ];
    var components = [
        CardsListWidgetComponent,
        PaymentCardComponent,
        PaymentCardControlsComponent,
        PaymentCardGroupComponent,
        PaymentCardsContainerComponent,
    ];
    var customizables = [
        CardsListPaymentCardCustomizableDirective,
        CardsListPaymentCardControlsCustomizableDirective,
        CardsListPaymentCardsContainerCustomizableDirective,
        CardsListPaymentCardsEmptyStateContainerCustomizableDirective,
    ];
    var CardsListWidgetModule = /** @class */ (function () {
        function CardsListWidgetModule() {
        }
        return CardsListWidgetModule;
    }());
    CardsListWidgetModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListWidgetModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CardsListWidgetModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListWidgetModule, declarations: [CardsListWidgetComponent,
            PaymentCardComponent,
            PaymentCardControlsComponent,
            PaymentCardGroupComponent,
            PaymentCardsContainerComponent, CardsListPaymentCardCustomizableDirective,
            CardsListPaymentCardControlsCustomizableDirective,
            CardsListPaymentCardsContainerCustomizableDirective,
            CardsListPaymentCardsEmptyStateContainerCustomizableDirective], imports: [i3.CommonModule, i1__namespace$2.BackbaseCoreModule, i3$1.PaymentCardModule,
            i4.LoadingIndicatorModule,
            i1$1.LoadButtonModule,
            icon.IconModule,
            i2$1.EmptyStateModule,
            i1.CardsCommonModule], exports: [i3$1.PaymentCardModule,
            i4.LoadingIndicatorModule,
            i1$1.LoadButtonModule,
            icon.IconModule,
            i2$1.EmptyStateModule,
            i1.CardsCommonModule, CardsListWidgetComponent,
            PaymentCardComponent,
            PaymentCardControlsComponent,
            PaymentCardGroupComponent,
            PaymentCardsContainerComponent, CardsListPaymentCardCustomizableDirective,
            CardsListPaymentCardControlsCustomizableDirective,
            CardsListPaymentCardsContainerCustomizableDirective,
            CardsListPaymentCardsEmptyStateContainerCustomizableDirective] });
    CardsListWidgetModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListWidgetModule, providers: [], imports: [__spreadArray([
                i3.CommonModule,
                i1$2.BackbaseCoreModule.withConfig({
                    classMap: { CardsListWidgetComponent: CardsListWidgetComponent },
                })
            ], __read(modules)), i3$1.PaymentCardModule,
            i4.LoadingIndicatorModule,
            i1$1.LoadButtonModule,
            icon.IconModule,
            i2$1.EmptyStateModule,
            i1.CardsCommonModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CardsListWidgetModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([
                            i3.CommonModule,
                            i1$2.BackbaseCoreModule.withConfig({
                                classMap: { CardsListWidgetComponent: CardsListWidgetComponent },
                            })
                        ], __read(modules)),
                        providers: [],
                        declarations: __spreadArray(__spreadArray([], __read(components)), __read(customizables)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(modules)), __read(components)), __read(customizables)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    Object.defineProperty(exports, 'CardsBackendError', {
        enumerable: true,
        get: function () { return i1.CardsBackendError; }
    });
    Object.defineProperty(exports, 'LimitChannelMappingConfigToken', {
        enumerable: true,
        get: function () { return i1.LimitChannelMappingConfigToken; }
    });
    Object.defineProperty(exports, 'PaymentCardLockStatus', {
        enumerable: true,
        get: function () { return i1.PaymentCardLockStatus; }
    });
    Object.defineProperty(exports, 'PaymentCardReplacementReason', {
        enumerable: true,
        get: function () { return i1.PaymentCardReplacementReason; }
    });
    Object.defineProperty(exports, 'PaymentCardReplacementStatus', {
        enumerable: true,
        get: function () { return i1.PaymentCardReplacementStatus; }
    });
    Object.defineProperty(exports, 'PaymentCardStatus', {
        enumerable: true,
        get: function () { return i1.PaymentCardStatus; }
    });
    Object.defineProperty(exports, 'ReplacementReasonMappingConfigToken', {
        enumerable: true,
        get: function () { return i1.ReplacementReasonMappingConfigToken; }
    });
    Object.defineProperty(exports, 'ReplacementStatusMappingConfigToken', {
        enumerable: true,
        get: function () { return i1.ReplacementStatusMappingConfigToken; }
    });
    Object.defineProperty(exports, 'StatusMappingConfigToken', {
        enumerable: true,
        get: function () { return i1.StatusMappingConfigToken; }
    });
    exports.CardsListPaymentCardControlsCustomizableDirective = CardsListPaymentCardControlsCustomizableDirective;
    exports.CardsListPaymentCardCustomizableDirective = CardsListPaymentCardCustomizableDirective;
    exports.CardsListPaymentCardsContainerCustomizableDirective = CardsListPaymentCardsContainerCustomizableDirective;
    exports.CardsListPaymentCardsEmptyStateContainerCustomizableDirective = CardsListPaymentCardsEmptyStateContainerCustomizableDirective;
    exports.CardsListWidgetComponent = CardsListWidgetComponent;
    exports.CardsListWidgetModule = CardsListWidgetModule;
    exports.PaymentCardComponent = PaymentCardComponent;
    exports.PaymentCardControlsComponent = PaymentCardControlsComponent;
    exports.PaymentCardGroupComponent = PaymentCardGroupComponent;
    exports.PaymentCardsContainerComponent = PaymentCardsContainerComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-cards-list-widget-ang.umd.js.map
