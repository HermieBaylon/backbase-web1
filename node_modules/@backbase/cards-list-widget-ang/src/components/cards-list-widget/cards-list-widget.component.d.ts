import { EventEmitter, OnInit } from '@angular/core';
import { CardsBackendError, CardsService, PaymentCard } from '@backbase/cards-common-ang';
import { Observable } from 'rxjs';
import { WidgetPropertiesService } from '../../services/widget-properties.service';
import * as i0 from "@angular/core";
export declare class CardsListWidgetComponent implements OnInit {
    private readonly cardsService;
    private readonly widgetPropertiesService;
    private readonly notificationTtlSubject;
    private readonly updateAllLimitsSubject;
    private readonly groupByPaymentCardTypesSubject;
    /**
     * Notification timeout timer value configuration
     */
    set notificationTtlValue(value: number | undefined);
    /**
     * Enable to send multiple limits to the API when updating values
     */
    set updateAllLimitsValue(value: boolean | undefined);
    /**
     * Types of cards configuration value
     */
    set groupByPaymentCardTypesValue(value: string | undefined);
    /**
     * Event emitter for selecting a card.
     */
    readonly selectedCard: EventEmitter<string>;
    /**
     * Observable of payment cards.
     */
    paymentCards: Observable<Array<PaymentCard>> | undefined;
    /**
     * Error message in case something unexpected occurs.
     */
    errors: CardsBackendError[] | undefined;
    constructor(cardsService: CardsService, widgetPropertiesService: WidgetPropertiesService);
    private readonly handleError;
    ngOnInit(): void;
    get groupByPaymentCardTypes(): Observable<string[]>;
    get notificationTtl(): Observable<number>;
    get updateAllLimits(): Observable<boolean>;
    onSelectCard(paymentCard: PaymentCard): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CardsListWidgetComponent, [null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CardsListWidgetComponent, "bb-cards-list-widget", never, { "notificationTtlValue": "notificationTtl"; "updateAllLimitsValue": "updateAllLimits"; "groupByPaymentCardTypesValue": "groupByPaymentCardTypes"; }, { "selectedCard": "selectedCard"; }, never, never>;
}
