import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../bb-payment-card/payment-card.component";
import * as i2 from "@angular/common";
export class PaymentCardGroupComponent {
    constructor() {
        /**
         * Event emitter for selecting a card.
         */
        this.selectCard = new EventEmitter();
    }
    ngOnInit() {
        if (typeof this.paymentCards === 'undefined') {
            throw new Error(`"paymentCards" input is required in "${this.constructor.name}"`);
        }
    }
    onSelectCard(paymentCard) {
        this.selectCard.emit(paymentCard);
    }
}
PaymentCardGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PaymentCardGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardGroupComponent, selector: "bb-payment-card-group", inputs: { heading: "heading", paymentCards: "paymentCards", notificationTtl: "notificationTtl", updateAllLimits: "updateAllLimits" }, outputs: { selectCard: "selectCard" }, ngImport: i0, template: "<div class=\"bb-block bb-block--sm\">\n  <div class=\"bb-payment-card-group-header bb-block bb-block--lg\" *ngIf=\"heading\">\n    <h2 role=\"heading\" aria-level=\"2\" tabindex=\"0\"> \n      {{heading}}\n      <ng-container i18n=\"Card group heading|Heading for group of cards@@cards.group.heading\">\n        cards\n      </ng-container>\n    </h2>\n  </div>\n  <div class=\"bb-stack bb-stack--wrap bb-stack--density-lg\">\n    <div class=\"bb-stack__item bb-block--lg\" *ngFor=\"let paymentCard of paymentCards\">\n      <bb-payment-card\n        [paymentCard]=\"paymentCard\"\n        [notificationTtl]=\"notificationTtl\"\n        [updateAllLimits]=\"updateAllLimits\"\n        (selectCard)=\"onSelectCard($event)\"\n      ></bb-payment-card>\n    </div>\n  </div>\n</div>", components: [{ type: i1.PaymentCardComponent, selector: "bb-payment-card" }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardGroupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payment-card-group',
                    templateUrl: './payment-card-group.component.html',
                }]
        }], propDecorators: { heading: [{
                type: Input
            }], paymentCards: [{
                type: Input
            }], notificationTtl: [{
                type: Input
            }], updateAllLimits: [{
                type: Input
            }], selectCard: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1jYXJkLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY2FyZHMtbGlzdC13aWRnZXQtYW5nL3NyYy9jb21wb25lbnRzL2JiLXBheW1lbnQtY2FyZC1ncm91cC9wYXltZW50LWNhcmQtZ3JvdXAuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jYXJkcy1saXN0LXdpZGdldC1hbmcvc3JjL2NvbXBvbmVudHMvYmItcGF5bWVudC1jYXJkLWdyb3VwL3BheW1lbnQtY2FyZC1ncm91cC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBTy9FLE1BQU0sT0FBTyx5QkFBeUI7SUFKdEM7UUFxQkU7O1dBRUc7UUFDZ0IsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFlLENBQUM7S0FXakU7SUFUQyxRQUFRO1FBQ04sSUFBSSxPQUFPLElBQUksQ0FBQyxZQUFZLEtBQUssV0FBVyxFQUFFO1lBQzVDLE1BQU0sSUFBSSxLQUFLLENBQUMsd0NBQXdDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztTQUNuRjtJQUNILENBQUM7SUFFRCxZQUFZLENBQUMsV0FBd0I7UUFDbkMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDcEMsQ0FBQzs7dUhBOUJVLHlCQUF5QjsyR0FBekIseUJBQXlCLDBPQ1B0Qyw0d0JBbUJNOzRGRFpPLHlCQUF5QjtrQkFKckMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxXQUFXLEVBQUUscUNBQXFDO2lCQUNuRDs4QkFLVSxPQUFPO3NCQUFmLEtBQUs7Z0JBSUcsWUFBWTtzQkFBcEIsS0FBSztnQkFJRyxlQUFlO3NCQUF2QixLQUFLO2dCQUlHLGVBQWU7c0JBQXZCLEtBQUs7Z0JBSWEsVUFBVTtzQkFBNUIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBheW1lbnRDYXJkIH0gZnJvbSAnQGJhY2tiYXNlL2NhcmRzLWNvbW1vbi1hbmcnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1wYXltZW50LWNhcmQtZ3JvdXAnLFxuICB0ZW1wbGF0ZVVybDogJy4vcGF5bWVudC1jYXJkLWdyb3VwLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgUGF5bWVudENhcmRHcm91cENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBUaXRsZSB0byBiZSBkaXNwbGF5ZWQgb3ZlciBwYXltZW50IGNhcmRzLlxuICAgKi9cbiAgQElucHV0KCkgaGVhZGluZzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogQXJyYXkgb2YgcGF5bWVudCBjYXJkcyB0byBiZSBkaXNwbGF5ZWQuXG4gICAqL1xuICBASW5wdXQoKSBwYXltZW50Q2FyZHM6IEFycmF5PFBheW1lbnRDYXJkPiB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFNwZWNpZmllcyB0aGUgdGltZSB0aGF0IGEgbm90aWZpY2F0aW9uIHdvdWxkIGJlIGRpc3BsYXllZFxuICAgKi9cbiAgQElucHV0KCkgbm90aWZpY2F0aW9uVHRsOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBFbmFibGUgdG8gc2VuZCBtdWx0aXBsZSBsaW1pdHMgdG8gdGhlIEFQSSB3aGVuIHVwZGF0aW5nIHZhbHVlc1xuICAgKi9cbiAgQElucHV0KCkgdXBkYXRlQWxsTGltaXRzOiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogRXZlbnQgZW1pdHRlciBmb3Igc2VsZWN0aW5nIGEgY2FyZC5cbiAgICovXG4gIEBPdXRwdXQoKSByZWFkb25seSBzZWxlY3RDYXJkID0gbmV3IEV2ZW50RW1pdHRlcjxQYXltZW50Q2FyZD4oKTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMucGF5bWVudENhcmRzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBcInBheW1lbnRDYXJkc1wiIGlucHV0IGlzIHJlcXVpcmVkIGluIFwiJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9XCJgKTtcbiAgICB9XG4gIH1cblxuICBvblNlbGVjdENhcmQocGF5bWVudENhcmQ6IFBheW1lbnRDYXJkKSB7XG4gICAgdGhpcy5zZWxlY3RDYXJkLmVtaXQocGF5bWVudENhcmQpO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLXNtXCI+XG4gIDxkaXYgY2xhc3M9XCJiYi1wYXltZW50LWNhcmQtZ3JvdXAtaGVhZGVyIGJiLWJsb2NrIGJiLWJsb2NrLS1sZ1wiICpuZ0lmPVwiaGVhZGluZ1wiPlxuICAgIDxoMiByb2xlPVwiaGVhZGluZ1wiIGFyaWEtbGV2ZWw9XCIyXCIgdGFiaW5kZXg9XCIwXCI+IFxuICAgICAge3toZWFkaW5nfX1cbiAgICAgIDxuZy1jb250YWluZXIgaTE4bj1cIkNhcmQgZ3JvdXAgaGVhZGluZ3xIZWFkaW5nIGZvciBncm91cCBvZiBjYXJkc0BAY2FyZHMuZ3JvdXAuaGVhZGluZ1wiPlxuICAgICAgICBjYXJkc1xuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9oMj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJiYi1zdGFjayBiYi1zdGFjay0td3JhcCBiYi1zdGFjay0tZGVuc2l0eS1sZ1wiPlxuICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFja19faXRlbSBiYi1ibG9jay0tbGdcIiAqbmdGb3I9XCJsZXQgcGF5bWVudENhcmQgb2YgcGF5bWVudENhcmRzXCI+XG4gICAgICA8YmItcGF5bWVudC1jYXJkXG4gICAgICAgIFtwYXltZW50Q2FyZF09XCJwYXltZW50Q2FyZFwiXG4gICAgICAgIFtub3RpZmljYXRpb25UdGxdPVwibm90aWZpY2F0aW9uVHRsXCJcbiAgICAgICAgW3VwZGF0ZUFsbExpbWl0c109XCJ1cGRhdGVBbGxMaW1pdHNcIlxuICAgICAgICAoc2VsZWN0Q2FyZCk9XCJvblNlbGVjdENhcmQoJGV2ZW50KVwiXG4gICAgICA+PC9iYi1wYXltZW50LWNhcmQ+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+Il19