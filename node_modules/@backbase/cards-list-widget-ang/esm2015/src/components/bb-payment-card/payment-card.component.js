import { Component, Directive } from '@angular/core';
import { PaymentCardContainerBase, PaymentCardLockStatus, PaymentCardStatus, } from '@backbase/cards-common-ang';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/cards-common-ang";
import * as i2 from "@backbase/ui-ang/notification";
import * as i3 from "@backbase/ui-ang/payment-card";
export class PaymentCardComponent extends PaymentCardContainerBase {
    constructor(cardsService, cd, notificationService) {
        super(cardsService, cd, notificationService);
        this.cardsService = cardsService;
        this.cd = cd;
        this.notificationService = notificationService;
        this.hostRef = this;
    }
    ngOnInit() {
        var _a, _b, _c, _d;
        /* eslint-disable max-len */
        const cardListLocalizations = {
            activationErrorHeader: $localize `:Error@@card.list.activation.notification.errorHeader:Error`,
            activationErrorMessage: $localize `:Failed to Activate Card. Unable to proceed, please try again.@@card.list.activation.notification.errorBody:Failed to Activate Card. Unable to proceed, please try again.`,
            activationSuccessHeader: $localize `:Card Activated@@card.list.activation.notification.successHeader:Card Activated.`,
            lockErrorHeader: $localize `:Error@@card.list.lock.notification.errorHeader:Error`,
            lockErrorMessage: $localize `:Card number cannot be locked, try again later|Lock Error Message@@card.list.lock.notification.errorMessage:Card number ending with ${(_a = this.paymentCard) === null || _a === void 0 ? void 0 : _a.number}:Card Number: cannot be locked! Try again later.`,
            lockSuccessHeader: $localize `:Card locked@@card.list.lock.notification.successHeader:Card locked`,
            lockSuccessMessage: $localize `:Card number locked|Successful lock message@@card.list.lock.notification.successMessage:Card number ending with ${(_b = this.paymentCard) === null || _b === void 0 ? void 0 : _b.number}:Card Number: has been locked.`,
            replacementErrorHeader: $localize `:Error@@card.list.replacement.notification.errorHeader:Error`,
            replacementErrorMessage: $localize `:Can't request card replacement. Try again@@card.list.replacement.notification.errorBody:Unable to request a card replacement. Try again later.`,
            replacementSuccessHeader: $localize `:New card ordered header@@card.list.replacement.notification.successHeader:New card ordered`,
            replacementSuccessMessage: $localize `:New card ordered@@card.list.replacement.notification.successBody:A new card has been ordered.`,
            requestNewPinSuccessMessage: $localize `:New PIN requested@@card.list.pin.notification.requestNewPinSuccessMessage:New PIN requested`,
            requestPinErrorMessage: $localize `:Can't request PIN. Try again@@card.list.requestPin.notification.errorBody:Can't request PIN.  Please try again later.`,
            resetPinSuccessMessage: $localize `:PIN successfully reset@@card.list.pin.notification.resetPinSuccessMessage:PIN successfully reset`,
            resetPinErrorMessage: $localize `:Unable to change PIN, try again@@card.list.resetPin.notification.errorBody:Unable to change PIN.  Please try again later.`,
            resetInvalidPinMessage: $localize `:Unable to change PIN, validations not meet@@card.list.pin.notification.resetInvalidPinMessage:Unable to change PIN. New PIN and confirm don't match`,
            unlockErrorHeader: $localize `:Error@@card.list.unlock.notification.errorHeader:Error`,
            unlockErrorMessage: $localize `:Card number cannot be unlocked, try again later|Unlock Error Message@@card.list.unlock.notification.errorMessage:Card number ending with ${(_c = this.paymentCard) === null || _c === void 0 ? void 0 : _c.number}:Card Number: cannot be unlocked! Try again later.`,
            unlockSuccessHeader: $localize `:Card unlocked@@card.list.unlock.notification.successHeader:Card unlocked`,
            unlockSuccessMessage: $localize `:Card number unlocked|Successful unlock Error Message@@card.list.unlock.notification.successMessage:Card number ending with ${(_d = this.paymentCard) === null || _d === void 0 ? void 0 : _d.number}:Card Number: has been unlocked.`,
            updateLimitErrorHeader: $localize `:Update Limit Error Header@@card.list.limit.notification.errorHeader:`,
            updateLimitErrorMessage: $localize `:Unable to change card limit@@card.list.limit.notification.errorBody:Unable to change card limit`,
            updateLimitSuccessHeader: $localize `:Limit changed header@@card.list.limit.notification.successHeader:Limit changed`,
            updateLimitSuccessMessage: $localize `:Card limit changed successfully@@card.list.limit.notification.changeLimitSuccessMessage:Card limit changed successfully`,
        };
        this.localizations = Object.assign({}, cardListLocalizations);
    }
    /**
     * Translate the payment card status/lock status/replacement status into a displayable
     * PaymentCardDisplayState.
     */
    getDisplayState() {
        if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Inactive) {
            return 'INACTIVE';
        }
        if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Canceled) {
            return 'CANCELLED';
        }
        if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Expired) {
            return 'EXPIRED';
        }
        if (this.paymentCard && this.paymentCard.lockStatus === PaymentCardLockStatus.Locked) {
            return 'LOCKED';
        }
        return undefined;
    }
}
PaymentCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardComponent, deps: [{ token: i1.CardsService }, { token: i0.ChangeDetectorRef }, { token: i2.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
PaymentCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardComponent, selector: "bb-payment-card", usesInheritance: true, ngImport: i0, template: "<ng-container bbCardsListPaymentCardCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardsListPaymentCardCustomizable let-hostRef>\n  <div class=\"bb-payment-card-component\">\n    <bb-payment-card-state-wrapper-ui\n      [state]=\"hostRef.getDisplayState()\"\n      (click)=\"hostRef.onOpenDetails()\"\n      style=\"cursor: pointer;\"\n    >\n    <bb-payment-card-ui bbAccessibilityKeyboard [paymentCard]=\"hostRef.paymentCard\"></bb-payment-card-ui>\n    </bb-payment-card-state-wrapper-ui>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.PaymentCardStateWrapperComponent; }), selector: "bb-payment-card-state-wrapper,bb-payment-card-state-wrapper-ui", inputs: ["state"] }, { type: i0.forwardRef(function () { return i3.PaymentCardComponent; }), selector: "bb-payment-card-ui", inputs: ["paymentCard", "paymentCardNumberFormat"] }], directives: [{ type: i0.forwardRef(function () { return CardsListPaymentCardCustomizableDirective; }), selector: "[bbCardsListPaymentCardCustomizable]" }, { type: i0.forwardRef(function () { return i1.AccessibilityKeyboardDirective; }), selector: "[bbAccessibilityKeyboard]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payment-card',
                    templateUrl: './payment-card.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.CardsService }, { type: i0.ChangeDetectorRef }, { type: i2.NotificationService }]; } });
export class CardsListPaymentCardCustomizableDirective extends BbTemplate {
}
CardsListPaymentCardCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsListPaymentCardCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CardsListPaymentCardCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardsListPaymentCardCustomizableDirective, selector: "[bbCardsListPaymentCardCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsListPaymentCardCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbCardsListPaymentCardCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,