import { AccountStatementDataService } from '@backbase/account-statement-common-ang';
import { Actions } from '@ngrx/effects';
import { Store } from '@ngrx/store';
import { AccountStatementStoreState } from '../account-statement.reducer';
import * as i0 from "@angular/core";
export declare class AccountStatementEffects {
    private readonly actions$;
    private readonly dataService;
    private readonly store;
    accountStatementsBusiness$: import("rxjs").Observable<(import("@backbase/account-statement-store-ang").LoadAccountStatementsBusinessSuccessPayload & import("@ngrx/store/src/models").TypedAction<"[AS Account Statements] Load Account Statements for Business Success">) | ({
        error: Error;
    } & import("@ngrx/store/src/models").TypedAction<"[AS Account Statements] Load Account Statements Failure">)> & import("@ngrx/effects").CreateEffectMetadata;
    constructor(actions$: Actions, dataService: AccountStatementDataService, store: Store<AccountStatementStoreState>);
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountStatementEffects, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AccountStatementEffects>;
}
