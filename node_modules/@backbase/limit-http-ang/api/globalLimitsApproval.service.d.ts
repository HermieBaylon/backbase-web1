import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { GlobalLimitsApprovalDetailsResponse } from '../model/models';
import { GlobalLimitsApprovalStatusChangeResponse } from '../model/models';
import { LimitApprovalRequest } from '../model/models';
import { LimitConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetGlobalLimitsApprovalDetailsRequestParams {
    ["approvalId"]: string;
}
export interface PostGlobalLimitsApprovalStatusRequestParams {
    ["approvalId"]: string;
    ["limitApprovalRequest"]?: LimitApprovalRequest;
}
export declare class GlobalLimitsApprovalHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: LimitConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: LimitConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getGlobalLimitsApprovalDetails(requestParameters: GetGlobalLimitsApprovalDetailsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<GlobalLimitsApprovalDetailsResponse>;
    getGlobalLimitsApprovalDetails(requestParameters: GetGlobalLimitsApprovalDetailsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<GlobalLimitsApprovalDetailsResponse>>;
    getGlobalLimitsApprovalDetails(requestParameters: GetGlobalLimitsApprovalDetailsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<GlobalLimitsApprovalDetailsResponse>>;
    getGlobalLimitsApprovalDetailsUrl(requestParameters: GetGlobalLimitsApprovalDetailsRequestParams): string;
    postGlobalLimitsApprovalStatus(requestParameters: PostGlobalLimitsApprovalStatusRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<GlobalLimitsApprovalStatusChangeResponse>;
    postGlobalLimitsApprovalStatus(requestParameters: PostGlobalLimitsApprovalStatusRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<GlobalLimitsApprovalStatusChangeResponse>>;
    postGlobalLimitsApprovalStatus(requestParameters: PostGlobalLimitsApprovalStatusRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<GlobalLimitsApprovalStatusChangeResponse>>;
    postGlobalLimitsApprovalStatusUrl(requestParameters: PostGlobalLimitsApprovalStatusRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<GlobalLimitsApprovalHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<GlobalLimitsApprovalHttpService>;
}
