import { createMocks } from '@backbase/foundation-ang/data-http';
export const LimitsHttpServiceGetApprovalsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/{approvalId}/approvals",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "alias": "Personal Service Agreement Limit",
                    "uuid": "1234-5678-9101-1121",
                    "user-BBID": "uuid-user-id",
                    "userName": "Full Username",
                    "entities": [{
                            "etype": "SA",
                            "eref": "550e8400-e29b-41d4-a716-446655440000",
                            "name": "Service agreement #1"
                        }],
                    "currency": "EUR",
                    "approval-currency": "EUR",
                    "periodic-limits-bounds": {
                        "daily": "100.0",
                        "weekly": "120.0",
                        "monthly": "300.0",
                        "quarterly": "600.0"
                    },
                    "approval-periodic-limits-bounds": {
                        "daily": "200.0",
                        "weekly": "300.0",
                        "monthly": "500.0",
                        "quarterly": "1000.0"
                    },
                    "shadow": true,
                    "approvalStatus": "PENDING"
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServiceGetBreachableOperationByPaymentRefMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/{paymentRef}/breachreport",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "payment": {
                            "refNo": "4563-3474-34553-24556",
                            "user-BBID": "550e8400-e29b-41d4-a716-446655440000",
                            "amount": "599.99",
                            "effectiveDate": "2017-01-31T12:12:12.000Z",
                            "currency": "EUR",
                            "paymentType": "Domestic Payments",
                            "state": "NEW"
                        },
                        "matchedLimits": 1,
                        "consumption": [{
                                "limitId": "4563-3474-34553-24556",
                                "limitCcy": "EUR",
                                "consumedAmount": "599.99",
                                "consumedOn": "2017-01-31T12:12:12.000Z",
                                "state": "CONSUMED"
                            }],
                        "checkTime": "2017-01-31T12:12:12.000Z",
                        "breachReport": [{
                                "alias": "Personal Service Agreement Limit",
                                "user-BBID": "oleksii",
                                "limitedEntity": [{
                                        "ref": "1234567-12312-123123",
                                        "type": "Service Agreement",
                                        "description": "Kuhic, Gislason and Kemmer. SERVICE AGREEMENT"
                                    }],
                                "shadow": false,
                                "currency": "EUR",
                                "breachInfo": [{
                                        "breachType": "THRESHOLD",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "daily",
                                            "startTime": "2017-01-31T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "250.0",
                                        "currentThreshold": "499.9"
                                    }, {
                                        "breachType": "CONSUMPTION",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "monthly",
                                            "startTime": "2017-01-01T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "9950.0",
                                        "currentThreshold": "10000.0"
                                    }]
                            }, {
                                "alias": "Personal Limit",
                                "user-BBID": "oleksii",
                                "shadow": false,
                                "currency": "EUR",
                                "breachInfo": [{
                                        "breachType": "CONSUMPTION",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "daily",
                                            "startTime": "2017-01-31T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "500.0",
                                        "currentThreshold": "1000.0"
                                    }]
                            }, {
                                "alias": "Common Job Profile Limit",
                                "limitedEntity": [{
                                        "ref": "1234567-12312-123123",
                                        "type": "Function Access Group",
                                        "description": "Payments approvers"
                                    }, {
                                        "ref": "1234567-12312-123123",
                                        "type": "Function",
                                        "description": "Domestic payments"
                                    }, {
                                        "ref": "Approve",
                                        "type": "Privilege",
                                        "description": "Approve"
                                    }, {
                                        "ref": "1234567-12312-123123",
                                        "type": "Service Agreement",
                                        "description": "Kuhic, Gislason and Kemmer. SERVICE AGREEMENT"
                                    }],
                                "shadow": false,
                                "currency": "EUR",
                                "breachInfo": [{
                                        "breachType": "THRESHOLD",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "daily",
                                            "startTime": "2017-01-31T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "250.0",
                                        "currentThreshold": "499.9"
                                    }]
                            }, {
                                "alias": "",
                                "limitedEntity": [{
                                        "ref": "1234567-12312-123123",
                                        "type": "Legal Entity",
                                        "description": "Kuhic, Gislason and Kemmer"
                                    }],
                                "shadow": false,
                                "currency": "EUR",
                                "breachInfo": [{
                                        "breachType": "CONSUMPTION",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "quarterly",
                                            "startTime": "2017-01-01T00:00:00.000Z",
                                            "endTime": "2017-03-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "99950.0",
                                        "currentThreshold": "100000.0"
                                    }, {
                                        "breachType": "THRESHOLD",
                                        "breachedLimitType": "TRANSACTIONAL",
                                        "currentThreshold": "499.9"
                                    }]
                            }],
                        "globalBreachReport": [{
                                "alias": "Service Agreement Limit",
                                "currency": "EUR",
                                "limitedEntity": [{
                                        "type": "Service Agreement"
                                    }],
                                "breachInfo": [{
                                        "breachType": "THRESHOLD",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "daily",
                                            "startTime": "2017-01-31T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "250.0",
                                        "currentThreshold": "499.9"
                                    }, {
                                        "breachType": "CONSUMPTION",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "monthly",
                                            "startTime": "2017-01-01T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "9950.0",
                                        "currentThreshold": "10000.0"
                                    }]
                            }]
                    }]
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServiceGetCurrencyMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/currency",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "defaultCurrency": "EUR",
                    "allowedCurrencyList": ["EUR", "USD", "AED"]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServiceGetGlobalLimitsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/global",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "limits": [{
                            "alias": "User Limit",
                            "uuid": "dfab7e60-064e-4af5-b54d-96d28fef0573",
                            "entities": [{
                                    "type": "USER"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "100.0",
                                "weekly": "120.0",
                                "monthly": "300.0",
                                "quarterly": "600.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "100"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "100.0"
                            }
                        }, {
                            "alias": "Service Agreement Limit",
                            "uuid": "a93cf136-ef7a-48eb-bde8-7f50e42540c8",
                            "entities": [{
                                    "type": "SA"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "1000.0",
                                "weekly": "1200.0",
                                "monthly": "3000.0",
                                "quarterly": "6000.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "1000"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "1000.0"
                            }
                        }, {
                            "alias": "Legal Entity Limit",
                            "uuid": "a93cf136-ef7a-48eb-bde8-7f50e42540c8",
                            "entities": [{
                                    "type": "LE"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "1000.0",
                                "weekly": "1200.0",
                                "monthly": "3000.0",
                                "quarterly": "6000.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "1000"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "1000.0"
                            }
                        }],
                    "currency": "EUR"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServiceGetSupportedPeriodsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/periods",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "name": "DAILY"
                    }, {
                        "name": "WEEKLY"
                    }, {
                        "name": "MONTHLY"
                    }, {
                        "name": "QUARTERLY"
                    }, {
                        "name": "YEARLY"
                    }]
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServicePostCurrentLimitsConsumptionsRetrievalMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/consumptions",
        method: "POST",
        responses: [
            {
                status: 200,
                body: [{
                        "limit": {
                            "alias": "",
                            "uuid": "1234-5678-9101-1121",
                            "user-BBID": "uuid-user-id",
                            "entities": [{
                                    "etype": "LE",
                                    "eref": "550e8400-e29b-41d4-a716-446655440000"
                                }],
                            "currency": "EUR",
                            "periodic-limits-bounds": {
                                "daily": "100.0",
                                "weekly": "120.0",
                                "monthly": "300.0",
                                "quarterly": "600.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "100"
                                    }]
                            },
                            "shadow": true
                        },
                        "consumptions": {
                            "daily": "0.0",
                            "weekly": "50.0",
                            "monthly": "60.0",
                            "quarterly": "160.0",
                            "customPeriods": [{
                                    "period": "biweekly",
                                    "amount": "50"
                                }]
                        },
                        "checkTime": "2017-01-31T12:12:12.000Z"
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServicePostLimitsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "uuid": "1234-1234-1312-5434"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServicePostLimitsRetrievalMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/retrieval",
        method: "POST",
        responses: [
            {
                status: 200,
                body: [{
                        "alias": "Personal Service Agreement Limit",
                        "uuid": "1234-5678-9101-1121",
                        "user-BBID": "uuid-user-id",
                        "entities": [{
                                "etype": "SA",
                                "eref": "550e8400-e29b-41d4-a716-446655440000"
                            }],
                        "approvalId": "710d559b-a922-424d-a21c-7e63b6351661",
                        "currency": "EUR",
                        "periodic-limits-bounds": {
                            "daily": "100.0",
                            "weekly": "120.0",
                            "monthly": "300.0",
                            "quarterly": "600.0",
                            "customPeriods": [{
                                    "period": "biweekly",
                                    "amount": "100"
                                }]
                        },
                        "shadow": true
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServicePostPeriodicLimitSoftCheckMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/periodic/soft-check",
        method: "POST",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServicePostTransactionalLimitSoftCheckMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/transactional/soft-check",
        method: "POST",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServicePutApprovalsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/{approvalId}/approvals",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "alias": "Personal Service Agreement Limit",
                    "uuid": "1234-5678-9101-1121",
                    "user-BBID": "uuid-user-id",
                    "entities": [{
                            "etype": "SA",
                            "eref": "550e8400-e29b-41d4-a716-446655440000"
                        }],
                    "currency": "EUR",
                    "periodic-limits-bounds": {
                        "daily": "100.0",
                        "weekly": "120.0",
                        "monthly": "300.0",
                        "quarterly": "600.0",
                        "customPeriods": [{
                                "period": "biweekly",
                                "amount": "100"
                            }]
                    },
                    "shadow": true,
                    "approvalStatus": "APPROVED"
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServicePutGlobalLimitsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/global",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "limits": [{
                            "alias": "User Limit",
                            "uuid": "dfab7e60-064e-4af5-b54d-96d28fef0573",
                            "entities": [{
                                    "type": "USER"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "100.0",
                                "weekly": "120.0",
                                "monthly": "300.0",
                                "quarterly": "600.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "100"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "100.0"
                            }
                        }, {
                            "alias": "Service Agreement Limit",
                            "uuid": "a93cf136-ef7a-48eb-bde8-7f50e42540c8",
                            "entities": [{
                                    "type": "SA"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "1000.0",
                                "weekly": "1200.0",
                                "monthly": "3000.0",
                                "quarterly": "6000.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "1000"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "1000.0"
                            }
                        }],
                    "currency": "EUR",
                    "approvalId": "911c07d1-7f0c-4437-b27b-ae0d2bcf9e5c"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServicePutLimitByUuidMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/limits/{uuid}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "alias": "Personal Service Agreement Limit",
                    "uuid": "1234-5678-9101-1121",
                    "user-BBID": "uuid-user-id",
                    "entities": [{
                            "etype": "SA",
                            "eref": "550e8400-e29b-41d4-a716-446655440000"
                        }],
                    "approvalId": "d1d0e7d0-30a4-472b-a8c0-3908b9e3847a",
                    "approvalStatus": "PENDING",
                    "currency": "EUR",
                    "periodic-limits-bounds": {
                        "daily": "100.0",
                        "weekly": "120.0",
                        "monthly": "300.0",
                        "quarterly": "600.0",
                        "customPeriods": [{
                                "period": "biweekly",
                                "amount": "100"
                            }]
                    },
                    "shadow": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const LimitsHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/limits/{approvalId}/approvals",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "alias": "Personal Service Agreement Limit",
                    "uuid": "1234-5678-9101-1121",
                    "user-BBID": "uuid-user-id",
                    "userName": "Full Username",
                    "entities": [{
                            "etype": "SA",
                            "eref": "550e8400-e29b-41d4-a716-446655440000",
                            "name": "Service agreement #1"
                        }],
                    "currency": "EUR",
                    "approval-currency": "EUR",
                    "periodic-limits-bounds": {
                        "daily": "100.0",
                        "weekly": "120.0",
                        "monthly": "300.0",
                        "quarterly": "600.0"
                    },
                    "approval-periodic-limits-bounds": {
                        "daily": "200.0",
                        "weekly": "300.0",
                        "monthly": "500.0",
                        "quarterly": "1000.0"
                    },
                    "shadow": true,
                    "approvalStatus": "PENDING"
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/{paymentRef}/breachreport",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "payment": {
                            "refNo": "4563-3474-34553-24556",
                            "user-BBID": "550e8400-e29b-41d4-a716-446655440000",
                            "amount": "599.99",
                            "effectiveDate": "2017-01-31T12:12:12.000Z",
                            "currency": "EUR",
                            "paymentType": "Domestic Payments",
                            "state": "NEW"
                        },
                        "matchedLimits": 1,
                        "consumption": [{
                                "limitId": "4563-3474-34553-24556",
                                "limitCcy": "EUR",
                                "consumedAmount": "599.99",
                                "consumedOn": "2017-01-31T12:12:12.000Z",
                                "state": "CONSUMED"
                            }],
                        "checkTime": "2017-01-31T12:12:12.000Z",
                        "breachReport": [{
                                "alias": "Personal Service Agreement Limit",
                                "user-BBID": "oleksii",
                                "limitedEntity": [{
                                        "ref": "1234567-12312-123123",
                                        "type": "Service Agreement",
                                        "description": "Kuhic, Gislason and Kemmer. SERVICE AGREEMENT"
                                    }],
                                "shadow": false,
                                "currency": "EUR",
                                "breachInfo": [{
                                        "breachType": "THRESHOLD",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "daily",
                                            "startTime": "2017-01-31T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "250.0",
                                        "currentThreshold": "499.9"
                                    }, {
                                        "breachType": "CONSUMPTION",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "monthly",
                                            "startTime": "2017-01-01T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "9950.0",
                                        "currentThreshold": "10000.0"
                                    }]
                            }, {
                                "alias": "Personal Limit",
                                "user-BBID": "oleksii",
                                "shadow": false,
                                "currency": "EUR",
                                "breachInfo": [{
                                        "breachType": "CONSUMPTION",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "daily",
                                            "startTime": "2017-01-31T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "500.0",
                                        "currentThreshold": "1000.0"
                                    }]
                            }, {
                                "alias": "Common Job Profile Limit",
                                "limitedEntity": [{
                                        "ref": "1234567-12312-123123",
                                        "type": "Function Access Group",
                                        "description": "Payments approvers"
                                    }, {
                                        "ref": "1234567-12312-123123",
                                        "type": "Function",
                                        "description": "Domestic payments"
                                    }, {
                                        "ref": "Approve",
                                        "type": "Privilege",
                                        "description": "Approve"
                                    }, {
                                        "ref": "1234567-12312-123123",
                                        "type": "Service Agreement",
                                        "description": "Kuhic, Gislason and Kemmer. SERVICE AGREEMENT"
                                    }],
                                "shadow": false,
                                "currency": "EUR",
                                "breachInfo": [{
                                        "breachType": "THRESHOLD",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "daily",
                                            "startTime": "2017-01-31T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "250.0",
                                        "currentThreshold": "499.9"
                                    }]
                            }, {
                                "alias": "",
                                "limitedEntity": [{
                                        "ref": "1234567-12312-123123",
                                        "type": "Legal Entity",
                                        "description": "Kuhic, Gislason and Kemmer"
                                    }],
                                "shadow": false,
                                "currency": "EUR",
                                "breachInfo": [{
                                        "breachType": "CONSUMPTION",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "quarterly",
                                            "startTime": "2017-01-01T00:00:00.000Z",
                                            "endTime": "2017-03-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "99950.0",
                                        "currentThreshold": "100000.0"
                                    }, {
                                        "breachType": "THRESHOLD",
                                        "breachedLimitType": "TRANSACTIONAL",
                                        "currentThreshold": "499.9"
                                    }]
                            }],
                        "globalBreachReport": [{
                                "alias": "Service Agreement Limit",
                                "currency": "EUR",
                                "limitedEntity": [{
                                        "type": "Service Agreement"
                                    }],
                                "breachInfo": [{
                                        "breachType": "THRESHOLD",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "daily",
                                            "startTime": "2017-01-31T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "250.0",
                                        "currentThreshold": "499.9"
                                    }, {
                                        "breachType": "CONSUMPTION",
                                        "breachedLimitType": "PERIODIC",
                                        "timeframe": {
                                            "period": "monthly",
                                            "startTime": "2017-01-01T00:00:00.000Z",
                                            "endTime": "2017-01-31T23:59:59.000Z"
                                        },
                                        "currentConsumption": "9950.0",
                                        "currentThreshold": "10000.0"
                                    }]
                            }]
                    }]
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/currency",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "defaultCurrency": "EUR",
                    "allowedCurrencyList": ["EUR", "USD", "AED"]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/global",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "limits": [{
                            "alias": "User Limit",
                            "uuid": "dfab7e60-064e-4af5-b54d-96d28fef0573",
                            "entities": [{
                                    "type": "USER"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "100.0",
                                "weekly": "120.0",
                                "monthly": "300.0",
                                "quarterly": "600.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "100"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "100.0"
                            }
                        }, {
                            "alias": "Service Agreement Limit",
                            "uuid": "a93cf136-ef7a-48eb-bde8-7f50e42540c8",
                            "entities": [{
                                    "type": "SA"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "1000.0",
                                "weekly": "1200.0",
                                "monthly": "3000.0",
                                "quarterly": "6000.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "1000"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "1000.0"
                            }
                        }, {
                            "alias": "Legal Entity Limit",
                            "uuid": "a93cf136-ef7a-48eb-bde8-7f50e42540c8",
                            "entities": [{
                                    "type": "LE"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "1000.0",
                                "weekly": "1200.0",
                                "monthly": "3000.0",
                                "quarterly": "6000.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "1000"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "1000.0"
                            }
                        }],
                    "currency": "EUR"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/periods",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "name": "DAILY"
                    }, {
                        "name": "WEEKLY"
                    }, {
                        "name": "MONTHLY"
                    }, {
                        "name": "QUARTERLY"
                    }, {
                        "name": "YEARLY"
                    }]
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/consumptions",
        method: "POST",
        responses: [
            {
                status: 200,
                body: [{
                        "limit": {
                            "alias": "",
                            "uuid": "1234-5678-9101-1121",
                            "user-BBID": "uuid-user-id",
                            "entities": [{
                                    "etype": "LE",
                                    "eref": "550e8400-e29b-41d4-a716-446655440000"
                                }],
                            "currency": "EUR",
                            "periodic-limits-bounds": {
                                "daily": "100.0",
                                "weekly": "120.0",
                                "monthly": "300.0",
                                "quarterly": "600.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "100"
                                    }]
                            },
                            "shadow": true
                        },
                        "consumptions": {
                            "daily": "0.0",
                            "weekly": "50.0",
                            "monthly": "60.0",
                            "quarterly": "160.0",
                            "customPeriods": [{
                                    "period": "biweekly",
                                    "amount": "50"
                                }]
                        },
                        "checkTime": "2017-01-31T12:12:12.000Z"
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "uuid": "1234-1234-1312-5434"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 409,
                body: {
                    "message": "Conflict error",
                    "errors": [{
                            "message": "The request could not be completed due to a conflict with the current state of the resource.",
                            "key": "transactions.api.billingstatus.transaction",
                            "context": {
                                "billingStatus": "BILLED"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/retrieval",
        method: "POST",
        responses: [
            {
                status: 200,
                body: [{
                        "alias": "Personal Service Agreement Limit",
                        "uuid": "1234-5678-9101-1121",
                        "user-BBID": "uuid-user-id",
                        "entities": [{
                                "etype": "SA",
                                "eref": "550e8400-e29b-41d4-a716-446655440000"
                            }],
                        "approvalId": "710d559b-a922-424d-a21c-7e63b6351661",
                        "currency": "EUR",
                        "periodic-limits-bounds": {
                            "daily": "100.0",
                            "weekly": "120.0",
                            "monthly": "300.0",
                            "quarterly": "600.0",
                            "customPeriods": [{
                                    "period": "biweekly",
                                    "amount": "100"
                                }]
                        },
                        "shadow": true
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/periodic/soft-check",
        method: "POST",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/transactional/soft-check",
        method: "POST",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/{approvalId}/approvals",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "alias": "Personal Service Agreement Limit",
                    "uuid": "1234-5678-9101-1121",
                    "user-BBID": "uuid-user-id",
                    "entities": [{
                            "etype": "SA",
                            "eref": "550e8400-e29b-41d4-a716-446655440000"
                        }],
                    "currency": "EUR",
                    "periodic-limits-bounds": {
                        "daily": "100.0",
                        "weekly": "120.0",
                        "monthly": "300.0",
                        "quarterly": "600.0",
                        "customPeriods": [{
                                "period": "biweekly",
                                "amount": "100"
                            }]
                    },
                    "shadow": true,
                    "approvalStatus": "APPROVED"
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/global",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "limits": [{
                            "alias": "User Limit",
                            "uuid": "dfab7e60-064e-4af5-b54d-96d28fef0573",
                            "entities": [{
                                    "type": "USER"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "100.0",
                                "weekly": "120.0",
                                "monthly": "300.0",
                                "quarterly": "600.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "100"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "100.0"
                            }
                        }, {
                            "alias": "Service Agreement Limit",
                            "uuid": "a93cf136-ef7a-48eb-bde8-7f50e42540c8",
                            "entities": [{
                                    "type": "SA"
                                }],
                            "periodic-limits-bounds": {
                                "daily": "1000.0",
                                "weekly": "1200.0",
                                "monthly": "3000.0",
                                "quarterly": "6000.0",
                                "customPeriods": [{
                                        "period": "biweekly",
                                        "amount": "1000"
                                    }]
                            },
                            "transactional-limits-bound": {
                                "amount": "1000.0"
                            }
                        }],
                    "currency": "EUR",
                    "approvalId": "911c07d1-7f0c-4437-b27b-ae0d2bcf9e5c"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/limits/{uuid}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "alias": "Personal Service Agreement Limit",
                    "uuid": "1234-5678-9101-1121",
                    "user-BBID": "uuid-user-id",
                    "entities": [{
                            "etype": "SA",
                            "eref": "550e8400-e29b-41d4-a716-446655440000"
                        }],
                    "approvalId": "d1d0e7d0-30a4-472b-a8c0-3908b9e3847a",
                    "approvalStatus": "PENDING",
                    "currency": "EUR",
                    "periodic-limits-bounds": {
                        "daily": "100.0",
                        "weekly": "120.0",
                        "monthly": "300.0",
                        "quarterly": "600.0",
                        "customPeriods": [{
                                "period": "biweekly",
                                "amount": "100"
                            }]
                    },
                    "shadow": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 422,
                body: {
                    "message": "Unprocessable Entity",
                    "errors": [{
                            "message": "Array size is over {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "100"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,