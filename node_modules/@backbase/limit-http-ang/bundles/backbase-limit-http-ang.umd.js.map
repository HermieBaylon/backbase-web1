{"version":3,"file":"backbase-limit-http-ang.umd.js","sources":["../../model/approvalStatus.ts","../../model/breachType.ts","../../model/breachedLimitType.ts","../../model/consumption.ts","../../model/paymentState.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/globalLimitsApproval.service.ts","../../api/globalLimitsApproval.service.mocks.ts","../../api/limits.service.ts","../../api/limits.service.mocks.ts"],"sourcesContent":["/**\n * Limits\n * # Limits client API Documentation \n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Approval status of created limit. If `EFFECTIVE` then limit does not need to be approved and is immediately effective.\n */\nexport type ApprovalStatus = 'EFFECTIVE' | 'PENDING' | 'APPROVED' | 'REJECTED' | 'CANCELLED';\n\nexport const ApprovalStatus = {\n    EFFECTIVE: 'EFFECTIVE' as ApprovalStatus,\n    PENDING: 'PENDING' as ApprovalStatus,\n    APPROVED: 'APPROVED' as ApprovalStatus,\n    REJECTED: 'REJECTED' as ApprovalStatus,\n    CANCELLED: 'CANCELLED' as ApprovalStatus\n};\n\n","/**\n * Limits\n * # Limits client API Documentation \n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Breach type\n */\nexport type BreachType = 'THRESHOLD' | 'CONSUMPTION';\n\nexport const BreachType = {\n    THRESHOLD: 'THRESHOLD' as BreachType,\n    CONSUMPTION: 'CONSUMPTION' as BreachType\n};\n\n","/**\n * Limits\n * # Limits client API Documentation \n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Breached limit type\n */\nexport type BreachedLimitType = 'PERIODIC' | 'TRANSACTIONAL';\n\nexport const BreachedLimitType = {\n    PERIODIC: 'PERIODIC' as BreachedLimitType,\n    TRANSACTIONAL: 'TRANSACTIONAL' as BreachedLimitType\n};\n\n","/**\n * Limits\n * # Limits client API Documentation \n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface Consumption { \n    /**\n     * Identifier of consumed limit\n     */\n    [\"limitId\"]?: string;\n    /**\n     * Currency of a consumed limit\n     */\n    [\"limitCcy\"]?: string;\n    [\"consumedAmount\"]?: number;\n    /**\n     * Consumption time\n     */\n    [\"consumedOn\"]?: string;\n    /**\n     * Type of consumption. Can be either actual consumption (positive amount), or rollback (negative amount)\n     */\n    [\"state\"]?: Consumption.StateEnum;\n}\nexport namespace Consumption {\n    export type StateEnum = 'CONSUMED' | 'ROLLED_BACK';\n    export const StateEnum = {\n        CONSUMED: 'CONSUMED' as StateEnum,\n        ROLLEDBACK: 'ROLLED_BACK' as StateEnum\n    };\n}\n\n\n","/**\n * Limits\n * # Limits client API Documentation \n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport type PaymentState = 'APPROVED' | 'NEW' | 'PARTIALLY_APPROVED';\n\nexport const PaymentState = {\n    APPROVED: 'APPROVED' as PaymentState,\n    NEW: 'NEW' as PaymentState,\n    PARTIALLYAPPROVED: 'PARTIALLY_APPROVED' as PaymentState\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const LIMIT_BASE_PATH = new InjectionToken<string>('LIMIT_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface LimitConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class LimitConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: LimitConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link LimitConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link LimitConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module LimitConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { LimitConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class LimitApiModule {\n    public static forRoot(configurationFactory: () => LimitConfiguration): ModuleWithProviders<LimitApiModule> {\n        return {\n            ngModule: LimitApiModule,\n            providers: [ { provide: LimitConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: LimitApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: LimitConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('LimitApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Limits\n * # Limits client API Documentation \n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { GlobalLimitsApprovalDetailsResponse } from '../model/models';\nimport { GlobalLimitsApprovalStatusChangeResponse } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { LimitApprovalRequest } from '../model/models';\nimport { NotFoundError } from '../model/models';\n\nimport { LIMIT_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { LimitConfiguration }                                     from '../configuration';\n\n\nexport interface GetGlobalLimitsApprovalDetailsRequestParams {\n    /** Identifier of requested approval */\n    [\"approvalId\"]: string;\n}\n\nexport interface PostGlobalLimitsApprovalStatusRequestParams {\n    /** Identifier of requested approval */\n    [\"approvalId\"]: string;\n    [\"limitApprovalRequest\"]?: LimitApprovalRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalLimitsApprovalHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new LimitConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(LIMIT_BASE_PATH) basePath: string, @Optional() configuration: LimitConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Get details of pending approval by approval id. All global limits listed in the details. Each limit has a list of bound changes. The bound change has effective and pending amount. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGlobalLimitsApprovalDetails(requestParameters: GetGlobalLimitsApprovalDetailsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GlobalLimitsApprovalDetailsResponse>;\n    /**\n     * Get details of pending approval by approval id. All global limits listed in the details. Each limit has a list of bound changes. The bound change has effective and pending amount. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGlobalLimitsApprovalDetails(requestParameters: GetGlobalLimitsApprovalDetailsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GlobalLimitsApprovalDetailsResponse>>;\n    /**\n     * Get details of pending approval by approval id. All global limits listed in the details. Each limit has a list of bound changes. The bound change has effective and pending amount. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGlobalLimitsApprovalDetails(requestParameters: GetGlobalLimitsApprovalDetailsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GlobalLimitsApprovalDetailsResponse>>;\n    /**\n     * Get details of pending approval by approval id. All global limits listed in the details. Each limit has a list of bound changes. The bound change has effective and pending amount. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGlobalLimitsApprovalDetails(requestParameters: GetGlobalLimitsApprovalDetailsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getGlobalLimitsApprovalDetails.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GlobalLimitsApprovalDetailsResponse>(`${this.configuration.basePath}/client-api/v2/limits/global/approvals/${encodeURIComponent(String(_approvalId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getGlobalLimitsApprovalDetailsUrl(requestParameters: GetGlobalLimitsApprovalDetailsRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getGlobalLimitsApprovalDetails.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/limits/global/approvals/${encodeURIComponent(String(_approvalId))}`;\n    }\n\n    /**\n     * Change state of pending global limits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postGlobalLimitsApprovalStatus(requestParameters: PostGlobalLimitsApprovalStatusRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GlobalLimitsApprovalStatusChangeResponse>;\n    /**\n     * Change state of pending global limits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postGlobalLimitsApprovalStatus(requestParameters: PostGlobalLimitsApprovalStatusRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GlobalLimitsApprovalStatusChangeResponse>>;\n    /**\n     * Change state of pending global limits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postGlobalLimitsApprovalStatus(requestParameters: PostGlobalLimitsApprovalStatusRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GlobalLimitsApprovalStatusChangeResponse>>;\n    /**\n     * Change state of pending global limits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postGlobalLimitsApprovalStatus(requestParameters: PostGlobalLimitsApprovalStatusRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling postGlobalLimitsApprovalStatus.');\n        }\n        const _limitApprovalRequest = requestParameters[\"limitApprovalRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<GlobalLimitsApprovalStatusChangeResponse>(`${this.configuration.basePath}/client-api/v2/limits/global/approvals/${encodeURIComponent(String(_approvalId))}/status`,\n            _limitApprovalRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postGlobalLimitsApprovalStatusUrl(requestParameters: PostGlobalLimitsApprovalStatusRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling postGlobalLimitsApprovalStatus.');\n        }\n        const _limitApprovalRequest = requestParameters[\"limitApprovalRequest\"];\n        return `${this.configuration.basePath}/client-api/v2/limits/global/approvals/${encodeURIComponent(String(_approvalId))}/status`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/limits/global/approvals/{approvalId} URL pattern\n*/\nexport const GlobalLimitsApprovalHttpServiceGetGlobalLimitsApprovalDetailsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/global/approvals/{approvalId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalId\" : \"bc1c03f2-6483-46ca-a7ec-192a2d963a8d\",\n  \"currency\" : \"EUR\",\n  \"limits\" : [ {\n    \"alias\" : \"Personal\",\n    \"uuid\" : \"e211eded-572f-48b1-8940-ae7a301838cb\",\n    \"entities\" : [ {\n      \"type\" : \"USER\"\n    } ],\n    \"bounds\" : [ {\n      \"type\" : \"daily\",\n      \"effectiveAmount\" : \"200.00\",\n      \"pendingAmount\" : \"300.00\"\n    }, {\n      \"type\" : \"weekly\",\n      \"effectiveAmount\" : \"1000.00\",\n      \"pendingAmount\" : \"\"\n    }, {\n      \"type\" : \"transactional\",\n      \"effectiveAmount\" : \"\",\n      \"pendingAmount\" : \"300.00\"\n    } ]\n  }, {\n    \"alias\" : \"Service Agreement\",\n    \"uuid\" : \"ac825135-96ac-4883-8f46-aa5bd9497745\",\n    \"entities\" : [ {\n      \"type\" : \"SA\"\n    } ],\n    \"bounds\" : [ {\n      \"type\" : \"daily\",\n      \"effectiveAmount\" : \"400.00\",\n      \"pendingAmount\" : \"\"\n    }, {\n      \"type\" : \"weekly\",\n      \"effectiveAmount\" : \"800.00\",\n      \"pendingAmount\" : \"600\"\n    }, {\n      \"type\" : \"transactional\",\n      \"effectiveAmount\" : \"300.00\",\n      \"pendingAmount\" : \"300.00\"\n    } ]\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/global/approvals/{approvalId}/status URL pattern\n*/\nexport const GlobalLimitsApprovalHttpServicePostGlobalLimitsApprovalStatusMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/global/approvals/{approvalId}/status\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalId\" : \"bc1c03f2-6483-46ca-a7ec-192a2d963a8d\",\n  \"approvalStatus\" : \"APPROVED\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const GlobalLimitsApprovalHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/limits/global/approvals/{approvalId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvalId\" : \"bc1c03f2-6483-46ca-a7ec-192a2d963a8d\",\n  \"currency\" : \"EUR\",\n  \"limits\" : [ {\n    \"alias\" : \"Personal\",\n    \"uuid\" : \"e211eded-572f-48b1-8940-ae7a301838cb\",\n    \"entities\" : [ {\n      \"type\" : \"USER\"\n    } ],\n    \"bounds\" : [ {\n      \"type\" : \"daily\",\n      \"effectiveAmount\" : \"200.00\",\n      \"pendingAmount\" : \"300.00\"\n    }, {\n      \"type\" : \"weekly\",\n      \"effectiveAmount\" : \"1000.00\",\n      \"pendingAmount\" : \"\"\n    }, {\n      \"type\" : \"transactional\",\n      \"effectiveAmount\" : \"\",\n      \"pendingAmount\" : \"300.00\"\n    } ]\n  }, {\n    \"alias\" : \"Service Agreement\",\n    \"uuid\" : \"ac825135-96ac-4883-8f46-aa5bd9497745\",\n    \"entities\" : [ {\n      \"type\" : \"SA\"\n    } ],\n    \"bounds\" : [ {\n      \"type\" : \"daily\",\n      \"effectiveAmount\" : \"400.00\",\n      \"pendingAmount\" : \"\"\n    }, {\n      \"type\" : \"weekly\",\n      \"effectiveAmount\" : \"800.00\",\n      \"pendingAmount\" : \"600\"\n    }, {\n      \"type\" : \"transactional\",\n      \"effectiveAmount\" : \"300.00\",\n      \"pendingAmount\" : \"300.00\"\n    } ]\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/global/approvals/{approvalId}/status\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvalId\" : \"bc1c03f2-6483-46ca-a7ec-192a2d963a8d\",\n  \"approvalStatus\" : \"APPROVED\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Limits\n * # Limits client API Documentation \n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { BaseLimitsRetrievalPostRequestBody } from '../model/models';\nimport { BreachableOperationResponse } from '../model/models';\nimport { ConflictError } from '../model/models';\nimport { CreateLimitRequestBody } from '../model/models';\nimport { CurrencyGetResponseBody } from '../model/models';\nimport { CurrentLimitsConsumptionsRetrievalPostRequestBody } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { LimitApprovalDetailsResponse } from '../model/models';\nimport { LimitApprovalRequest } from '../model/models';\nimport { LimitApprovalResponse } from '../model/models';\nimport { LimitByUuidPutResponseBody } from '../model/models';\nimport { LimitConsumption } from '../model/models';\nimport { LimitsPostResponseBody } from '../model/models';\nimport { LimitsRetrievalPostRequestBody } from '../model/models';\nimport { LimitsRetrievalPostResponseBody } from '../model/models';\nimport { ListGlobalLimitsResponseBody } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PeriodicLimitData } from '../model/models';\nimport { PeriodicLimitSoftCheckPostRequestBody } from '../model/models';\nimport { SupportedPeriodsGetResponseBody } from '../model/models';\nimport { TransactionalLimitData } from '../model/models';\nimport { TransactionalLimitSoftCheckPostRequestBody } from '../model/models';\nimport { UnprocessableEntityError } from '../model/models';\nimport { UpdateLimitRequestBody } from '../model/models';\nimport { UpsertGlobalLimitsRequestBody } from '../model/models';\nimport { UpsertGlobalLimitsResponseBody } from '../model/models';\n\nimport { LIMIT_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { LimitConfiguration }                                     from '../configuration';\n\n\nexport interface GetApprovalsRequestParams {\n    /** Approval identifier */\n    [\"approvalId\"]: string;\n}\n\nexport interface GetBreachableOperationByPaymentRefRequestParams {\n    /** Payment reference */\n    [\"paymentRef\"]: string;\n}\n\nexport interface PostCurrentLimitsConsumptionsRetrievalRequestParams {\n    [\"currentLimitsConsumptionsRetrievalPostRequestBody\"]?: CurrentLimitsConsumptionsRetrievalPostRequestBody;\n}\n\nexport interface PostLimitsRequestParams {\n    [\"createLimitRequestBody\"]?: CreateLimitRequestBody;\n}\n\nexport interface PostLimitsRetrievalRequestParams {\n    [\"limitsRetrievalPostRequestBody\"]?: LimitsRetrievalPostRequestBody;\n}\n\nexport interface PostPeriodicLimitSoftCheckRequestParams {\n    [\"periodicLimitSoftCheckPostRequestBody\"]?: PeriodicLimitSoftCheckPostRequestBody;\n}\n\nexport interface PostTransactionalLimitSoftCheckRequestParams {\n    [\"transactionalLimitSoftCheckPostRequestBody\"]?: TransactionalLimitSoftCheckPostRequestBody;\n}\n\nexport interface PutApprovalsRequestParams {\n    /** Approval identifier */\n    [\"approvalId\"]: string;\n    [\"limitApprovalRequest\"]?: LimitApprovalRequest;\n}\n\nexport interface PutGlobalLimitsRequestParams {\n    [\"upsertGlobalLimitsRequestBody\"]?: UpsertGlobalLimitsRequestBody;\n}\n\nexport interface PutLimitByUuidRequestParams {\n    /** Identifier of limit to be updated */\n    [\"uuid\"]: string;\n    [\"updateLimitRequestBody\"]?: UpdateLimitRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LimitsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new LimitConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(LIMIT_BASE_PATH) basePath: string, @Optional() configuration: LimitConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Returns changes in limit pending approval.\n     * Returns changes in limit data (thresholds and currency) pending approval. If the limit already has effective thresholds in place, this API returns them too, so that it’s possible to compare values before and after the change. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LimitApprovalDetailsResponse>;\n    /**\n     * Returns changes in limit pending approval.\n     * Returns changes in limit data (thresholds and currency) pending approval. If the limit already has effective thresholds in place, this API returns them too, so that it’s possible to compare values before and after the change. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LimitApprovalDetailsResponse>>;\n    /**\n     * Returns changes in limit pending approval.\n     * Returns changes in limit data (thresholds and currency) pending approval. If the limit already has effective thresholds in place, this API returns them too, so that it’s possible to compare values before and after the change. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LimitApprovalDetailsResponse>>;\n    /**\n     * Returns changes in limit pending approval.\n     * Returns changes in limit data (thresholds and currency) pending approval. If the limit already has effective thresholds in place, this API returns them too, so that it’s possible to compare values before and after the change. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovals(requestParameters: GetApprovalsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovals.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LimitApprovalDetailsResponse>(`${this.configuration.basePath}/client-api/v2/limits/${encodeURIComponent(String(_approvalId))}/approvals`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getApprovalsUrl(requestParameters: GetApprovalsRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovals.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/limits/${encodeURIComponent(String(_approvalId))}/approvals`;\n    }\n\n    /**\n     * Get breach reports by payment reference.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBreachableOperationByPaymentRef(requestParameters: GetBreachableOperationByPaymentRefRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<BreachableOperationResponse>>;\n    /**\n     * Get breach reports by payment reference.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBreachableOperationByPaymentRef(requestParameters: GetBreachableOperationByPaymentRefRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<BreachableOperationResponse>>>;\n    /**\n     * Get breach reports by payment reference.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBreachableOperationByPaymentRef(requestParameters: GetBreachableOperationByPaymentRefRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<BreachableOperationResponse>>>;\n    /**\n     * Get breach reports by payment reference.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBreachableOperationByPaymentRef(requestParameters: GetBreachableOperationByPaymentRefRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _paymentRef = requestParameters[\"paymentRef\"];\n        if (_paymentRef === null || _paymentRef === undefined) {\n            throw new Error('Required parameter paymentRef was null or undefined when calling getBreachableOperationByPaymentRef.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<BreachableOperationResponse>>(`${this.configuration.basePath}/client-api/v2/limits/${encodeURIComponent(String(_paymentRef))}/breachreport`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getBreachableOperationByPaymentRefUrl(requestParameters: GetBreachableOperationByPaymentRefRequestParams): string {\n        const _paymentRef = requestParameters[\"paymentRef\"];\n        if (_paymentRef === null || _paymentRef === undefined) {\n            throw new Error('Required parameter paymentRef was null or undefined when calling getBreachableOperationByPaymentRef.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/limits/${encodeURIComponent(String(_paymentRef))}/breachreport`;\n    }\n\n    /**\n     * Get supported currencies list.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCurrency(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CurrencyGetResponseBody>;\n    /**\n     * Get supported currencies list.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCurrency(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CurrencyGetResponseBody>>;\n    /**\n     * Get supported currencies list.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCurrency(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CurrencyGetResponseBody>>;\n    /**\n     * Get supported currencies list.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCurrency(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CurrencyGetResponseBody>(`${this.configuration.basePath}/client-api/v2/limits/currency`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCurrencyUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/limits/currency`;\n    }\n\n    /**\n     * Get all global limits for the default currency.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGlobalLimits(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ListGlobalLimitsResponseBody>;\n    /**\n     * Get all global limits for the default currency.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGlobalLimits(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ListGlobalLimitsResponseBody>>;\n    /**\n     * Get all global limits for the default currency.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGlobalLimits(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ListGlobalLimitsResponseBody>>;\n    /**\n     * Get all global limits for the default currency.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGlobalLimits(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ListGlobalLimitsResponseBody>(`${this.configuration.basePath}/client-api/v2/limits/global`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getGlobalLimitsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/limits/global`;\n    }\n\n    /**\n     * List of configured periods for setting up periodic limits.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSupportedPeriods(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<SupportedPeriodsGetResponseBody>>;\n    /**\n     * List of configured periods for setting up periodic limits.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSupportedPeriods(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<SupportedPeriodsGetResponseBody>>>;\n    /**\n     * List of configured periods for setting up periodic limits.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSupportedPeriods(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<SupportedPeriodsGetResponseBody>>>;\n    /**\n     * List of configured periods for setting up periodic limits.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSupportedPeriods(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<SupportedPeriodsGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/limits/periods`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getSupportedPeriodsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/limits/periods`;\n    }\n\n    /**\n     * Get Limit consumptions for each period.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postCurrentLimitsConsumptionsRetrieval(requestParameters: PostCurrentLimitsConsumptionsRetrievalRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LimitConsumption>>;\n    /**\n     * Get Limit consumptions for each period.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postCurrentLimitsConsumptionsRetrieval(requestParameters: PostCurrentLimitsConsumptionsRetrievalRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LimitConsumption>>>;\n    /**\n     * Get Limit consumptions for each period.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postCurrentLimitsConsumptionsRetrieval(requestParameters: PostCurrentLimitsConsumptionsRetrievalRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LimitConsumption>>>;\n    /**\n     * Get Limit consumptions for each period.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postCurrentLimitsConsumptionsRetrieval(requestParameters: PostCurrentLimitsConsumptionsRetrievalRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _currentLimitsConsumptionsRetrievalPostRequestBody = requestParameters[\"currentLimitsConsumptionsRetrievalPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Array<LimitConsumption>>(`${this.configuration.basePath}/client-api/v2/limits/consumptions`,\n            _currentLimitsConsumptionsRetrievalPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postCurrentLimitsConsumptionsRetrievalUrl(requestParameters: PostCurrentLimitsConsumptionsRetrievalRequestParams): string {\n        const _currentLimitsConsumptionsRetrievalPostRequestBody = requestParameters[\"currentLimitsConsumptionsRetrievalPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/limits/consumptions`;\n    }\n\n    /**\n     * Create a new limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLimits(requestParameters: PostLimitsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LimitsPostResponseBody>;\n    /**\n     * Create a new limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLimits(requestParameters: PostLimitsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LimitsPostResponseBody>>;\n    /**\n     * Create a new limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLimits(requestParameters: PostLimitsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LimitsPostResponseBody>>;\n    /**\n     * Create a new limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLimits(requestParameters: PostLimitsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _createLimitRequestBody = requestParameters[\"createLimitRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<LimitsPostResponseBody>(`${this.configuration.basePath}/client-api/v2/limits`,\n            _createLimitRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postLimitsUrl(requestParameters: PostLimitsRequestParams): string {\n        const _createLimitRequestBody = requestParameters[\"createLimitRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/limits`;\n    }\n\n    /**\n     * Get Limit constraints for a given context(s).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLimitsRetrieval(requestParameters: PostLimitsRetrievalRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<LimitsRetrievalPostResponseBody>>;\n    /**\n     * Get Limit constraints for a given context(s).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLimitsRetrieval(requestParameters: PostLimitsRetrievalRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<LimitsRetrievalPostResponseBody>>>;\n    /**\n     * Get Limit constraints for a given context(s).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLimitsRetrieval(requestParameters: PostLimitsRetrievalRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<LimitsRetrievalPostResponseBody>>>;\n    /**\n     * Get Limit constraints for a given context(s).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postLimitsRetrieval(requestParameters: PostLimitsRetrievalRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _limitsRetrievalPostRequestBody = requestParameters[\"limitsRetrievalPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Array<LimitsRetrievalPostResponseBody>>(`${this.configuration.basePath}/client-api/v2/limits/retrieval`,\n            _limitsRetrievalPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postLimitsRetrievalUrl(requestParameters: PostLimitsRetrievalRequestParams): string {\n        const _limitsRetrievalPostRequestBody = requestParameters[\"limitsRetrievalPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/limits/retrieval`;\n    }\n\n    /**\n     * Periodic limit soft check request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postPeriodicLimitSoftCheck(requestParameters: PostPeriodicLimitSoftCheckRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Periodic limit soft check request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postPeriodicLimitSoftCheck(requestParameters: PostPeriodicLimitSoftCheckRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Periodic limit soft check request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postPeriodicLimitSoftCheck(requestParameters: PostPeriodicLimitSoftCheckRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Periodic limit soft check request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postPeriodicLimitSoftCheck(requestParameters: PostPeriodicLimitSoftCheckRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _periodicLimitSoftCheckPostRequestBody = requestParameters[\"periodicLimitSoftCheckPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/limits/periodic/soft-check`,\n            _periodicLimitSoftCheckPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postPeriodicLimitSoftCheckUrl(requestParameters: PostPeriodicLimitSoftCheckRequestParams): string {\n        const _periodicLimitSoftCheckPostRequestBody = requestParameters[\"periodicLimitSoftCheckPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/limits/periodic/soft-check`;\n    }\n\n    /**\n     * Transactional limit soft check request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postTransactionalLimitSoftCheck(requestParameters: PostTransactionalLimitSoftCheckRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Transactional limit soft check request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postTransactionalLimitSoftCheck(requestParameters: PostTransactionalLimitSoftCheckRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Transactional limit soft check request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postTransactionalLimitSoftCheck(requestParameters: PostTransactionalLimitSoftCheckRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Transactional limit soft check request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     * @deprecated This endpoint is deprecated\n     */\n    public postTransactionalLimitSoftCheck(requestParameters: PostTransactionalLimitSoftCheckRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _transactionalLimitSoftCheckPostRequestBody = requestParameters[\"transactionalLimitSoftCheckPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/limits/transactional/soft-check`,\n            _transactionalLimitSoftCheckPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postTransactionalLimitSoftCheckUrl(requestParameters: PostTransactionalLimitSoftCheckRequestParams): string {\n        const _transactionalLimitSoftCheckPostRequestBody = requestParameters[\"transactionalLimitSoftCheckPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/limits/transactional/soft-check`;\n    }\n\n    /**\n     * Approves or rejects a limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovals(requestParameters: PutApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LimitApprovalResponse>;\n    /**\n     * Approves or rejects a limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovals(requestParameters: PutApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LimitApprovalResponse>>;\n    /**\n     * Approves or rejects a limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovals(requestParameters: PutApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LimitApprovalResponse>>;\n    /**\n     * Approves or rejects a limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovals(requestParameters: PutApprovalsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling putApprovals.');\n        }\n        const _limitApprovalRequest = requestParameters[\"limitApprovalRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LimitApprovalResponse>(`${this.configuration.basePath}/client-api/v2/limits/${encodeURIComponent(String(_approvalId))}/approvals`,\n            _limitApprovalRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putApprovalsUrl(requestParameters: PutApprovalsRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling putApprovals.');\n        }\n        const _limitApprovalRequest = requestParameters[\"limitApprovalRequest\"];\n        return `${this.configuration.basePath}/client-api/v2/limits/${encodeURIComponent(String(_approvalId))}/approvals`;\n    }\n\n    /**\n     * Create or update global limits.\n     * Create or update (upsert) global limits. The client creates or updates all global limits via a single call. The client should send all the details of all changed limits. Limits that are missing from the payload remain unchanged. Both transactional and periodic bounds in limits are optional. The service removes bounds that are missing in a payload. The response contains the current state of all the global limits.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putGlobalLimits(requestParameters: PutGlobalLimitsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<UpsertGlobalLimitsResponseBody>;\n    /**\n     * Create or update global limits.\n     * Create or update (upsert) global limits. The client creates or updates all global limits via a single call. The client should send all the details of all changed limits. Limits that are missing from the payload remain unchanged. Both transactional and periodic bounds in limits are optional. The service removes bounds that are missing in a payload. The response contains the current state of all the global limits.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putGlobalLimits(requestParameters: PutGlobalLimitsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<UpsertGlobalLimitsResponseBody>>;\n    /**\n     * Create or update global limits.\n     * Create or update (upsert) global limits. The client creates or updates all global limits via a single call. The client should send all the details of all changed limits. Limits that are missing from the payload remain unchanged. Both transactional and periodic bounds in limits are optional. The service removes bounds that are missing in a payload. The response contains the current state of all the global limits.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putGlobalLimits(requestParameters: PutGlobalLimitsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<UpsertGlobalLimitsResponseBody>>;\n    /**\n     * Create or update global limits.\n     * Create or update (upsert) global limits. The client creates or updates all global limits via a single call. The client should send all the details of all changed limits. Limits that are missing from the payload remain unchanged. Both transactional and periodic bounds in limits are optional. The service removes bounds that are missing in a payload. The response contains the current state of all the global limits.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putGlobalLimits(requestParameters: PutGlobalLimitsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _upsertGlobalLimitsRequestBody = requestParameters[\"upsertGlobalLimitsRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<UpsertGlobalLimitsResponseBody>(`${this.configuration.basePath}/client-api/v2/limits/global`,\n            _upsertGlobalLimitsRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putGlobalLimitsUrl(requestParameters: PutGlobalLimitsRequestParams): string {\n        const _upsertGlobalLimitsRequestBody = requestParameters[\"upsertGlobalLimitsRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/limits/global`;\n    }\n\n    /**\n     * Update a specific limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putLimitByUuid(requestParameters: PutLimitByUuidRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LimitByUuidPutResponseBody>;\n    /**\n     * Update a specific limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putLimitByUuid(requestParameters: PutLimitByUuidRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LimitByUuidPutResponseBody>>;\n    /**\n     * Update a specific limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putLimitByUuid(requestParameters: PutLimitByUuidRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LimitByUuidPutResponseBody>>;\n    /**\n     * Update a specific limit.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putLimitByUuid(requestParameters: PutLimitByUuidRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _uuid = requestParameters[\"uuid\"];\n        if (_uuid === null || _uuid === undefined) {\n            throw new Error('Required parameter uuid was null or undefined when calling putLimitByUuid.');\n        }\n        const _updateLimitRequestBody = requestParameters[\"updateLimitRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LimitByUuidPutResponseBody>(`${this.configuration.basePath}/client-api/v2/limits/${encodeURIComponent(String(_uuid))}`,\n            _updateLimitRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putLimitByUuidUrl(requestParameters: PutLimitByUuidRequestParams): string {\n        const _uuid = requestParameters[\"uuid\"];\n        if (_uuid === null || _uuid === undefined) {\n            throw new Error('Required parameter uuid was null or undefined when calling putLimitByUuid.');\n        }\n        const _updateLimitRequestBody = requestParameters[\"updateLimitRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/limits/${encodeURIComponent(String(_uuid))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/limits/{approvalId}/approvals URL pattern\n*/\nexport const LimitsHttpServiceGetApprovalsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/{approvalId}/approvals\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"alias\" : \"Personal Service Agreement Limit\",\n  \"uuid\" : \"1234-5678-9101-1121\",\n  \"user-BBID\" : \"uuid-user-id\",\n  \"userName\" : \"Full Username\",\n  \"entities\" : [ {\n    \"etype\" : \"SA\",\n    \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\",\n    \"name\" : \"Service agreement #1\"\n  } ],\n  \"currency\" : \"EUR\",\n  \"approval-currency\" : \"EUR\",\n  \"periodic-limits-bounds\" : {\n    \"daily\" : \"100.0\",\n    \"weekly\" : \"120.0\",\n    \"monthly\" : \"300.0\",\n    \"quarterly\" : \"600.0\"\n  },\n  \"approval-periodic-limits-bounds\" : {\n    \"daily\" : \"200.0\",\n    \"weekly\" : \"300.0\",\n    \"monthly\" : \"500.0\",\n    \"quarterly\" : \"1000.0\"\n  },\n  \"shadow\" : true,\n  \"approvalStatus\" : \"PENDING\"\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/{paymentRef}/breachreport URL pattern\n*/\nexport const LimitsHttpServiceGetBreachableOperationByPaymentRefMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/{paymentRef}/breachreport\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"payment\" : {\n    \"refNo\" : \"4563-3474-34553-24556\",\n    \"user-BBID\" : \"550e8400-e29b-41d4-a716-446655440000\",\n    \"amount\" : \"599.99\",\n    \"effectiveDate\" : \"2017-01-31T12:12:12.000Z\",\n    \"currency\" : \"EUR\",\n    \"paymentType\" : \"Domestic Payments\",\n    \"state\" : \"NEW\"\n  },\n  \"matchedLimits\" : 1,\n  \"consumption\" : [ {\n    \"limitId\" : \"4563-3474-34553-24556\",\n    \"limitCcy\" : \"EUR\",\n    \"consumedAmount\" : \"599.99\",\n    \"consumedOn\" : \"2017-01-31T12:12:12.000Z\",\n    \"state\" : \"CONSUMED\"\n  } ],\n  \"checkTime\" : \"2017-01-31T12:12:12.000Z\",\n  \"breachReport\" : [ {\n    \"alias\" : \"Personal Service Agreement Limit\",\n    \"user-BBID\" : \"oleksii\",\n    \"limitedEntity\" : [ {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Service Agreement\",\n      \"description\" : \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n    } ],\n    \"shadow\" : false,\n    \"currency\" : \"EUR\",\n    \"breachInfo\" : [ {\n      \"breachType\" : \"THRESHOLD\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"daily\",\n        \"startTime\" : \"2017-01-31T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"250.0\",\n      \"currentThreshold\" : \"499.9\"\n    }, {\n      \"breachType\" : \"CONSUMPTION\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"monthly\",\n        \"startTime\" : \"2017-01-01T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"9950.0\",\n      \"currentThreshold\" : \"10000.0\"\n    } ]\n  }, {\n    \"alias\" : \"Personal Limit\",\n    \"user-BBID\" : \"oleksii\",\n    \"shadow\" : false,\n    \"currency\" : \"EUR\",\n    \"breachInfo\" : [ {\n      \"breachType\" : \"CONSUMPTION\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"daily\",\n        \"startTime\" : \"2017-01-31T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"500.0\",\n      \"currentThreshold\" : \"1000.0\"\n    } ]\n  }, {\n    \"alias\" : \"Common Job Profile Limit\",\n    \"limitedEntity\" : [ {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Function Access Group\",\n      \"description\" : \"Payments approvers\"\n    }, {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Function\",\n      \"description\" : \"Domestic payments\"\n    }, {\n      \"ref\" : \"Approve\",\n      \"type\" : \"Privilege\",\n      \"description\" : \"Approve\"\n    }, {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Service Agreement\",\n      \"description\" : \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n    } ],\n    \"shadow\" : false,\n    \"currency\" : \"EUR\",\n    \"breachInfo\" : [ {\n      \"breachType\" : \"THRESHOLD\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"daily\",\n        \"startTime\" : \"2017-01-31T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"250.0\",\n      \"currentThreshold\" : \"499.9\"\n    } ]\n  }, {\n    \"alias\" : \"\",\n    \"limitedEntity\" : [ {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Legal Entity\",\n      \"description\" : \"Kuhic, Gislason and Kemmer\"\n    } ],\n    \"shadow\" : false,\n    \"currency\" : \"EUR\",\n    \"breachInfo\" : [ {\n      \"breachType\" : \"CONSUMPTION\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"quarterly\",\n        \"startTime\" : \"2017-01-01T00:00:00.000Z\",\n        \"endTime\" : \"2017-03-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"99950.0\",\n      \"currentThreshold\" : \"100000.0\"\n    }, {\n      \"breachType\" : \"THRESHOLD\",\n      \"breachedLimitType\" : \"TRANSACTIONAL\",\n      \"currentThreshold\" : \"499.9\"\n    } ]\n  } ],\n  \"globalBreachReport\" : [ {\n    \"alias\" : \"Service Agreement Limit\",\n    \"currency\" : \"EUR\",\n    \"limitedEntity\" : [ {\n      \"type\" : \"Service Agreement\"\n    } ],\n    \"breachInfo\" : [ {\n      \"breachType\" : \"THRESHOLD\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"daily\",\n        \"startTime\" : \"2017-01-31T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"250.0\",\n      \"currentThreshold\" : \"499.9\"\n    }, {\n      \"breachType\" : \"CONSUMPTION\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"monthly\",\n        \"startTime\" : \"2017-01-01T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"9950.0\",\n      \"currentThreshold\" : \"10000.0\"\n    } ]\n  } ]\n} ]\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/currency URL pattern\n*/\nexport const LimitsHttpServiceGetCurrencyMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/currency\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"defaultCurrency\" : \"EUR\",\n  \"allowedCurrencyList\" : [ \"EUR\", \"USD\", \"AED\" ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/global URL pattern\n*/\nexport const LimitsHttpServiceGetGlobalLimitsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/global\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"limits\" : [ {\n    \"alias\" : \"User Limit\",\n    \"uuid\" : \"dfab7e60-064e-4af5-b54d-96d28fef0573\",\n    \"entities\" : [ {\n      \"type\" : \"USER\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"100.0\",\n      \"weekly\" : \"120.0\",\n      \"monthly\" : \"300.0\",\n      \"quarterly\" : \"600.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"100\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"100.0\"\n    }\n  }, {\n    \"alias\" : \"Service Agreement Limit\",\n    \"uuid\" : \"a93cf136-ef7a-48eb-bde8-7f50e42540c8\",\n    \"entities\" : [ {\n      \"type\" : \"SA\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"1000.0\",\n      \"weekly\" : \"1200.0\",\n      \"monthly\" : \"3000.0\",\n      \"quarterly\" : \"6000.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"1000\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"1000.0\"\n    }\n  }, {\n    \"alias\" : \"Legal Entity Limit\",\n    \"uuid\" : \"a93cf136-ef7a-48eb-bde8-7f50e42540c8\",\n    \"entities\" : [ {\n      \"type\" : \"LE\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"1000.0\",\n      \"weekly\" : \"1200.0\",\n      \"monthly\" : \"3000.0\",\n      \"quarterly\" : \"6000.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"1000\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"1000.0\"\n    }\n  } ],\n  \"currency\" : \"EUR\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/periods URL pattern\n*/\nexport const LimitsHttpServiceGetSupportedPeriodsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/periods\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"name\" : \"DAILY\"\n}, {\n  \"name\" : \"WEEKLY\"\n}, {\n  \"name\" : \"MONTHLY\"\n}, {\n  \"name\" : \"QUARTERLY\"\n}, {\n  \"name\" : \"YEARLY\"\n} ]\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/consumptions URL pattern\n*/\nexport const LimitsHttpServicePostCurrentLimitsConsumptionsRetrievalMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/consumptions\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"limit\" : {\n    \"alias\" : \"\",\n    \"uuid\" : \"1234-5678-9101-1121\",\n    \"user-BBID\" : \"uuid-user-id\",\n    \"entities\" : [ {\n      \"etype\" : \"LE\",\n      \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\"\n    } ],\n    \"currency\" : \"EUR\",\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"100.0\",\n      \"weekly\" : \"120.0\",\n      \"monthly\" : \"300.0\",\n      \"quarterly\" : \"600.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"100\"\n      } ]\n    },\n    \"shadow\" : true\n  },\n  \"consumptions\" : {\n    \"daily\" : \"0.0\",\n    \"weekly\" : \"50.0\",\n    \"monthly\" : \"60.0\",\n    \"quarterly\" : \"160.0\",\n    \"customPeriods\" : [ {\n      \"period\" : \"biweekly\",\n      \"amount\" : \"50\"\n    } ]\n  },\n  \"checkTime\" : \"2017-01-31T12:12:12.000Z\"\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 422,\n                    body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits URL pattern\n*/\nexport const LimitsHttpServicePostLimitsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"uuid\" : \"1234-1234-1312-5434\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 409,\n                    body: {\n  \"message\" : \"Conflict error\",\n  \"errors\" : [ {\n    \"message\" : \"The request could not be completed due to a conflict with the current state of the resource.\",\n    \"key\" : \"transactions.api.billingstatus.transaction\",\n    \"context\" : {\n      \"billingStatus\" : \"BILLED\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 422,\n                    body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/retrieval URL pattern\n*/\nexport const LimitsHttpServicePostLimitsRetrievalMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/retrieval\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"alias\" : \"Personal Service Agreement Limit\",\n  \"uuid\" : \"1234-5678-9101-1121\",\n  \"user-BBID\" : \"uuid-user-id\",\n  \"entities\" : [ {\n    \"etype\" : \"SA\",\n    \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\"\n  } ],\n  \"approvalId\" : \"710d559b-a922-424d-a21c-7e63b6351661\",\n  \"currency\" : \"EUR\",\n  \"periodic-limits-bounds\" : {\n    \"daily\" : \"100.0\",\n    \"weekly\" : \"120.0\",\n    \"monthly\" : \"300.0\",\n    \"quarterly\" : \"600.0\",\n    \"customPeriods\" : [ {\n      \"period\" : \"biweekly\",\n      \"amount\" : \"100\"\n    } ]\n  },\n  \"shadow\" : true\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 422,\n                    body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/periodic/soft-check URL pattern\n*/\nexport const LimitsHttpServicePostPeriodicLimitSoftCheckMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/periodic/soft-check\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 422,\n                    body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/transactional/soft-check URL pattern\n*/\nexport const LimitsHttpServicePostTransactionalLimitSoftCheckMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/transactional/soft-check\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 422,\n                    body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/{approvalId}/approvals URL pattern\n*/\nexport const LimitsHttpServicePutApprovalsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/{approvalId}/approvals\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"alias\" : \"Personal Service Agreement Limit\",\n  \"uuid\" : \"1234-5678-9101-1121\",\n  \"user-BBID\" : \"uuid-user-id\",\n  \"entities\" : [ {\n    \"etype\" : \"SA\",\n    \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\"\n  } ],\n  \"currency\" : \"EUR\",\n  \"periodic-limits-bounds\" : {\n    \"daily\" : \"100.0\",\n    \"weekly\" : \"120.0\",\n    \"monthly\" : \"300.0\",\n    \"quarterly\" : \"600.0\",\n    \"customPeriods\" : [ {\n      \"period\" : \"biweekly\",\n      \"amount\" : \"100\"\n    } ]\n  },\n  \"shadow\" : true,\n  \"approvalStatus\" : \"APPROVED\"\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/global URL pattern\n*/\nexport const LimitsHttpServicePutGlobalLimitsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/global\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"limits\" : [ {\n    \"alias\" : \"User Limit\",\n    \"uuid\" : \"dfab7e60-064e-4af5-b54d-96d28fef0573\",\n    \"entities\" : [ {\n      \"type\" : \"USER\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"100.0\",\n      \"weekly\" : \"120.0\",\n      \"monthly\" : \"300.0\",\n      \"quarterly\" : \"600.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"100\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"100.0\"\n    }\n  }, {\n    \"alias\" : \"Service Agreement Limit\",\n    \"uuid\" : \"a93cf136-ef7a-48eb-bde8-7f50e42540c8\",\n    \"entities\" : [ {\n      \"type\" : \"SA\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"1000.0\",\n      \"weekly\" : \"1200.0\",\n      \"monthly\" : \"3000.0\",\n      \"quarterly\" : \"6000.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"1000\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"1000.0\"\n    }\n  } ],\n  \"currency\" : \"EUR\",\n  \"approvalId\" : \"911c07d1-7f0c-4437-b27b-ae0d2bcf9e5c\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/limits/{uuid} URL pattern\n*/\nexport const LimitsHttpServicePutLimitByUuidMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/limits/{uuid}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"alias\" : \"Personal Service Agreement Limit\",\n  \"uuid\" : \"1234-5678-9101-1121\",\n  \"user-BBID\" : \"uuid-user-id\",\n  \"entities\" : [ {\n    \"etype\" : \"SA\",\n    \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\"\n  } ],\n  \"approvalId\" : \"d1d0e7d0-30a4-472b-a8c0-3908b9e3847a\",\n  \"approvalStatus\" : \"PENDING\",\n  \"currency\" : \"EUR\",\n  \"periodic-limits-bounds\" : {\n    \"daily\" : \"100.0\",\n    \"weekly\" : \"120.0\",\n    \"monthly\" : \"300.0\",\n    \"quarterly\" : \"600.0\",\n    \"customPeriods\" : [ {\n      \"period\" : \"biweekly\",\n      \"amount\" : \"100\"\n    } ]\n  },\n  \"shadow\" : true\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 422,\n                    body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const LimitsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/limits/{approvalId}/approvals\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"alias\" : \"Personal Service Agreement Limit\",\n  \"uuid\" : \"1234-5678-9101-1121\",\n  \"user-BBID\" : \"uuid-user-id\",\n  \"userName\" : \"Full Username\",\n  \"entities\" : [ {\n    \"etype\" : \"SA\",\n    \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\",\n    \"name\" : \"Service agreement #1\"\n  } ],\n  \"currency\" : \"EUR\",\n  \"approval-currency\" : \"EUR\",\n  \"periodic-limits-bounds\" : {\n    \"daily\" : \"100.0\",\n    \"weekly\" : \"120.0\",\n    \"monthly\" : \"300.0\",\n    \"quarterly\" : \"600.0\"\n  },\n  \"approval-periodic-limits-bounds\" : {\n    \"daily\" : \"200.0\",\n    \"weekly\" : \"300.0\",\n    \"monthly\" : \"500.0\",\n    \"quarterly\" : \"1000.0\"\n  },\n  \"shadow\" : true,\n  \"approvalStatus\" : \"PENDING\"\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/{paymentRef}/breachreport\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"payment\" : {\n    \"refNo\" : \"4563-3474-34553-24556\",\n    \"user-BBID\" : \"550e8400-e29b-41d4-a716-446655440000\",\n    \"amount\" : \"599.99\",\n    \"effectiveDate\" : \"2017-01-31T12:12:12.000Z\",\n    \"currency\" : \"EUR\",\n    \"paymentType\" : \"Domestic Payments\",\n    \"state\" : \"NEW\"\n  },\n  \"matchedLimits\" : 1,\n  \"consumption\" : [ {\n    \"limitId\" : \"4563-3474-34553-24556\",\n    \"limitCcy\" : \"EUR\",\n    \"consumedAmount\" : \"599.99\",\n    \"consumedOn\" : \"2017-01-31T12:12:12.000Z\",\n    \"state\" : \"CONSUMED\"\n  } ],\n  \"checkTime\" : \"2017-01-31T12:12:12.000Z\",\n  \"breachReport\" : [ {\n    \"alias\" : \"Personal Service Agreement Limit\",\n    \"user-BBID\" : \"oleksii\",\n    \"limitedEntity\" : [ {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Service Agreement\",\n      \"description\" : \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n    } ],\n    \"shadow\" : false,\n    \"currency\" : \"EUR\",\n    \"breachInfo\" : [ {\n      \"breachType\" : \"THRESHOLD\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"daily\",\n        \"startTime\" : \"2017-01-31T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"250.0\",\n      \"currentThreshold\" : \"499.9\"\n    }, {\n      \"breachType\" : \"CONSUMPTION\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"monthly\",\n        \"startTime\" : \"2017-01-01T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"9950.0\",\n      \"currentThreshold\" : \"10000.0\"\n    } ]\n  }, {\n    \"alias\" : \"Personal Limit\",\n    \"user-BBID\" : \"oleksii\",\n    \"shadow\" : false,\n    \"currency\" : \"EUR\",\n    \"breachInfo\" : [ {\n      \"breachType\" : \"CONSUMPTION\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"daily\",\n        \"startTime\" : \"2017-01-31T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"500.0\",\n      \"currentThreshold\" : \"1000.0\"\n    } ]\n  }, {\n    \"alias\" : \"Common Job Profile Limit\",\n    \"limitedEntity\" : [ {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Function Access Group\",\n      \"description\" : \"Payments approvers\"\n    }, {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Function\",\n      \"description\" : \"Domestic payments\"\n    }, {\n      \"ref\" : \"Approve\",\n      \"type\" : \"Privilege\",\n      \"description\" : \"Approve\"\n    }, {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Service Agreement\",\n      \"description\" : \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n    } ],\n    \"shadow\" : false,\n    \"currency\" : \"EUR\",\n    \"breachInfo\" : [ {\n      \"breachType\" : \"THRESHOLD\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"daily\",\n        \"startTime\" : \"2017-01-31T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"250.0\",\n      \"currentThreshold\" : \"499.9\"\n    } ]\n  }, {\n    \"alias\" : \"\",\n    \"limitedEntity\" : [ {\n      \"ref\" : \"1234567-12312-123123\",\n      \"type\" : \"Legal Entity\",\n      \"description\" : \"Kuhic, Gislason and Kemmer\"\n    } ],\n    \"shadow\" : false,\n    \"currency\" : \"EUR\",\n    \"breachInfo\" : [ {\n      \"breachType\" : \"CONSUMPTION\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"quarterly\",\n        \"startTime\" : \"2017-01-01T00:00:00.000Z\",\n        \"endTime\" : \"2017-03-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"99950.0\",\n      \"currentThreshold\" : \"100000.0\"\n    }, {\n      \"breachType\" : \"THRESHOLD\",\n      \"breachedLimitType\" : \"TRANSACTIONAL\",\n      \"currentThreshold\" : \"499.9\"\n    } ]\n  } ],\n  \"globalBreachReport\" : [ {\n    \"alias\" : \"Service Agreement Limit\",\n    \"currency\" : \"EUR\",\n    \"limitedEntity\" : [ {\n      \"type\" : \"Service Agreement\"\n    } ],\n    \"breachInfo\" : [ {\n      \"breachType\" : \"THRESHOLD\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"daily\",\n        \"startTime\" : \"2017-01-31T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"250.0\",\n      \"currentThreshold\" : \"499.9\"\n    }, {\n      \"breachType\" : \"CONSUMPTION\",\n      \"breachedLimitType\" : \"PERIODIC\",\n      \"timeframe\" : {\n        \"period\" : \"monthly\",\n        \"startTime\" : \"2017-01-01T00:00:00.000Z\",\n        \"endTime\" : \"2017-01-31T23:59:59.000Z\"\n      },\n      \"currentConsumption\" : \"9950.0\",\n      \"currentThreshold\" : \"10000.0\"\n    } ]\n  } ]\n} ]\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/currency\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"defaultCurrency\" : \"EUR\",\n  \"allowedCurrencyList\" : [ \"EUR\", \"USD\", \"AED\" ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/global\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"limits\" : [ {\n    \"alias\" : \"User Limit\",\n    \"uuid\" : \"dfab7e60-064e-4af5-b54d-96d28fef0573\",\n    \"entities\" : [ {\n      \"type\" : \"USER\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"100.0\",\n      \"weekly\" : \"120.0\",\n      \"monthly\" : \"300.0\",\n      \"quarterly\" : \"600.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"100\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"100.0\"\n    }\n  }, {\n    \"alias\" : \"Service Agreement Limit\",\n    \"uuid\" : \"a93cf136-ef7a-48eb-bde8-7f50e42540c8\",\n    \"entities\" : [ {\n      \"type\" : \"SA\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"1000.0\",\n      \"weekly\" : \"1200.0\",\n      \"monthly\" : \"3000.0\",\n      \"quarterly\" : \"6000.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"1000\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"1000.0\"\n    }\n  }, {\n    \"alias\" : \"Legal Entity Limit\",\n    \"uuid\" : \"a93cf136-ef7a-48eb-bde8-7f50e42540c8\",\n    \"entities\" : [ {\n      \"type\" : \"LE\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"1000.0\",\n      \"weekly\" : \"1200.0\",\n      \"monthly\" : \"3000.0\",\n      \"quarterly\" : \"6000.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"1000\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"1000.0\"\n    }\n  } ],\n  \"currency\" : \"EUR\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/periods\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"name\" : \"DAILY\"\n}, {\n  \"name\" : \"WEEKLY\"\n}, {\n  \"name\" : \"MONTHLY\"\n}, {\n  \"name\" : \"QUARTERLY\"\n}, {\n  \"name\" : \"YEARLY\"\n} ]\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/consumptions\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"limit\" : {\n    \"alias\" : \"\",\n    \"uuid\" : \"1234-5678-9101-1121\",\n    \"user-BBID\" : \"uuid-user-id\",\n    \"entities\" : [ {\n      \"etype\" : \"LE\",\n      \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\"\n    } ],\n    \"currency\" : \"EUR\",\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"100.0\",\n      \"weekly\" : \"120.0\",\n      \"monthly\" : \"300.0\",\n      \"quarterly\" : \"600.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"100\"\n      } ]\n    },\n    \"shadow\" : true\n  },\n  \"consumptions\" : {\n    \"daily\" : \"0.0\",\n    \"weekly\" : \"50.0\",\n    \"monthly\" : \"60.0\",\n    \"quarterly\" : \"160.0\",\n    \"customPeriods\" : [ {\n      \"period\" : \"biweekly\",\n      \"amount\" : \"50\"\n    } ]\n  },\n  \"checkTime\" : \"2017-01-31T12:12:12.000Z\"\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 422,\n                body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"uuid\" : \"1234-1234-1312-5434\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 409,\n                body: {\n  \"message\" : \"Conflict error\",\n  \"errors\" : [ {\n    \"message\" : \"The request could not be completed due to a conflict with the current state of the resource.\",\n    \"key\" : \"transactions.api.billingstatus.transaction\",\n    \"context\" : {\n      \"billingStatus\" : \"BILLED\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 422,\n                body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/retrieval\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"alias\" : \"Personal Service Agreement Limit\",\n  \"uuid\" : \"1234-5678-9101-1121\",\n  \"user-BBID\" : \"uuid-user-id\",\n  \"entities\" : [ {\n    \"etype\" : \"SA\",\n    \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\"\n  } ],\n  \"approvalId\" : \"710d559b-a922-424d-a21c-7e63b6351661\",\n  \"currency\" : \"EUR\",\n  \"periodic-limits-bounds\" : {\n    \"daily\" : \"100.0\",\n    \"weekly\" : \"120.0\",\n    \"monthly\" : \"300.0\",\n    \"quarterly\" : \"600.0\",\n    \"customPeriods\" : [ {\n      \"period\" : \"biweekly\",\n      \"amount\" : \"100\"\n    } ]\n  },\n  \"shadow\" : true\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 422,\n                body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/periodic/soft-check\",\n        method: \"POST\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 422,\n                body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/transactional/soft-check\",\n        method: \"POST\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 422,\n                body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/{approvalId}/approvals\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"alias\" : \"Personal Service Agreement Limit\",\n  \"uuid\" : \"1234-5678-9101-1121\",\n  \"user-BBID\" : \"uuid-user-id\",\n  \"entities\" : [ {\n    \"etype\" : \"SA\",\n    \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\"\n  } ],\n  \"currency\" : \"EUR\",\n  \"periodic-limits-bounds\" : {\n    \"daily\" : \"100.0\",\n    \"weekly\" : \"120.0\",\n    \"monthly\" : \"300.0\",\n    \"quarterly\" : \"600.0\",\n    \"customPeriods\" : [ {\n      \"period\" : \"biweekly\",\n      \"amount\" : \"100\"\n    } ]\n  },\n  \"shadow\" : true,\n  \"approvalStatus\" : \"APPROVED\"\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/global\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"limits\" : [ {\n    \"alias\" : \"User Limit\",\n    \"uuid\" : \"dfab7e60-064e-4af5-b54d-96d28fef0573\",\n    \"entities\" : [ {\n      \"type\" : \"USER\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"100.0\",\n      \"weekly\" : \"120.0\",\n      \"monthly\" : \"300.0\",\n      \"quarterly\" : \"600.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"100\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"100.0\"\n    }\n  }, {\n    \"alias\" : \"Service Agreement Limit\",\n    \"uuid\" : \"a93cf136-ef7a-48eb-bde8-7f50e42540c8\",\n    \"entities\" : [ {\n      \"type\" : \"SA\"\n    } ],\n    \"periodic-limits-bounds\" : {\n      \"daily\" : \"1000.0\",\n      \"weekly\" : \"1200.0\",\n      \"monthly\" : \"3000.0\",\n      \"quarterly\" : \"6000.0\",\n      \"customPeriods\" : [ {\n        \"period\" : \"biweekly\",\n        \"amount\" : \"1000\"\n      } ]\n    },\n    \"transactional-limits-bound\" : {\n      \"amount\" : \"1000.0\"\n    }\n  } ],\n  \"currency\" : \"EUR\",\n  \"approvalId\" : \"911c07d1-7f0c-4437-b27b-ae0d2bcf9e5c\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/limits/{uuid}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"alias\" : \"Personal Service Agreement Limit\",\n  \"uuid\" : \"1234-5678-9101-1121\",\n  \"user-BBID\" : \"uuid-user-id\",\n  \"entities\" : [ {\n    \"etype\" : \"SA\",\n    \"eref\" : \"550e8400-e29b-41d4-a716-446655440000\"\n  } ],\n  \"approvalId\" : \"d1d0e7d0-30a4-472b-a8c0-3908b9e3847a\",\n  \"approvalStatus\" : \"PENDING\",\n  \"currency\" : \"EUR\",\n  \"periodic-limits-bounds\" : {\n    \"daily\" : \"100.0\",\n    \"weekly\" : \"120.0\",\n    \"monthly\" : \"300.0\",\n    \"quarterly\" : \"600.0\",\n    \"customPeriods\" : [ {\n      \"period\" : \"biweekly\",\n      \"amount\" : \"100\"\n    } ]\n  },\n  \"shadow\" : true\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 422,\n                body: {\n  \"message\" : \"Unprocessable Entity\",\n  \"errors\" : [ {\n    \"message\" : \"Array size is over {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"100\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["Consumption","InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","Injectable","Inject","createMocks"],"mappings":"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"}