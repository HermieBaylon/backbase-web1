{"version":3,"file":"backbase-notifications-badge-widget-ang.js","sources":["../../../../libs/notifications-badge-widget-ang/src/lib/services/widget-properties.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/services/notifications-polling.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/services/notifications-pagination.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/services/notifications-data.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/services/notifications-router.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/models/notification-severity.ts","../../../../libs/notifications-badge-widget-ang/src/lib/models/severity-level-icon-map.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/humanized-date/humanized-date.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/humanized-date/humanized-date.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list-item/notifications-list-item.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list-item/notifications-list-item.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details-item/notification-details-item.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details-item/notification-details-item.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list/notifications-list.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list/notifications-list.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-badge-widget.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-badge-widget.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/humanized-date/humanized-date.module.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list-item/notifications-list-item.module.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details.module.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list/notifications-list.module.ts","../../../../libs/notifications-badge-widget-ang/src/lib/notifications-badge-widget.module.ts","../../../../libs/notifications-badge-widget-ang/src/backbase-notifications-badge-widget-ang.ts"],"sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport {\n  getPropertyValue,\n  modelItemToBoolean,\n  secondsToMilliseconds,\n  BaseWidgetPropertiesService,\n  shareReplayOnce,\n} from '@backbase/notifications-common-ang';\nimport { ItemModel } from '@backbase/foundation-ang/core';\n\nexport interface WidgetProperties {\n  displayRelativeTime: boolean;\n  allowedRoutes: string[];\n  displaySettingsButton: boolean;\n  notificationsMessageLineAmount: number;\n  displayShowMoreButtonInBadge: boolean;\n  pageSize: number;\n  origins: string[];\n  severityLevels: string[];\n  unreadCountUpdateInterval: number;\n}\n\nexport const DefaultWidgetProperties: WidgetProperties = {\n  displayRelativeTime: false,\n  allowedRoutes: [],\n  displaySettingsButton: true,\n  notificationsMessageLineAmount: 2,\n  displayShowMoreButtonInBadge: false,\n  pageSize: 5,\n  origins: [],\n  severityLevels: [],\n  unreadCountUpdateInterval: 15,\n};\n\n@Injectable()\nexport class WidgetPropertiesService extends BaseWidgetPropertiesService {\n  constructor(@Optional() protected readonly itemModel?: ItemModel) {\n    super(itemModel);\n  }\n\n  private readonly displayRelativeTime$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly displaySettingsButton$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly notificationsMessageLineAmount$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly displayShowMoreButtonInBadge$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly pageSize$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly unreadCountUpdateInterval$$ = new BehaviorSubject<number | undefined>(undefined);\n\n  readonly displayRelativeTime$ = getPropertyValue(this.displayRelativeTime$$, this.displayRelativeTime);\n  readonly displaySettingsButton$ = getPropertyValue(this.displaySettingsButton$$, this.displaySettingsButton);\n  readonly notificationsMessageLineAmount$ = getPropertyValue(\n    this.notificationsMessageLineAmount$$,\n    this.notificationsMessageLineAmount,\n  );\n  readonly displayShowMoreButtonInBadge$ = getPropertyValue(\n    this.displayShowMoreButtonInBadge$$,\n    this.displayShowMoreButtonInBadge,\n  );\n  readonly pageSize$ = getPropertyValue(this.pageSize$$, this.pageSize);\n  readonly unreadCountUpdateInterval$ = getPropertyValue(\n    this.unreadCountUpdateInterval$$,\n    this.unreadCountUpdateInterval,\n  );\n\n  private get displayRelativeTime(): Observable<boolean> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.displayRelativeTime);\n    }\n\n    return this.itemModel\n      .property('displayRelativeTime', DefaultWidgetProperties.displayRelativeTime)\n      .pipe(map(modelItemToBoolean), first());\n  }\n\n  private get displaySettingsButton(): Observable<boolean> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.displaySettingsButton);\n    }\n\n    return this.itemModel\n      .property('displaySettingsButton', DefaultWidgetProperties.displaySettingsButton)\n      .pipe(map(modelItemToBoolean), first());\n  }\n\n  private get notificationsMessageLineAmount(): Observable<number> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.notificationsMessageLineAmount);\n    }\n\n    return this.itemModel\n      .property('notificationsMessageLineAmount', DefaultWidgetProperties.notificationsMessageLineAmount)\n      .pipe(map(Number), first());\n  }\n\n  private get displayShowMoreButtonInBadge(): Observable<boolean> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.displayShowMoreButtonInBadge);\n    }\n\n    return this.itemModel\n      .property('displayShowMoreButtonInBadge', DefaultWidgetProperties.displayShowMoreButtonInBadge)\n      .pipe(map(modelItemToBoolean), first());\n  }\n\n  private get pageSize(): Observable<number> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.pageSize);\n    }\n\n    return this.itemModel.property('pageSize', DefaultWidgetProperties.pageSize).pipe(map(Number), shareReplayOnce());\n  }\n\n  private get unreadCountUpdateInterval(): Observable<number> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.unreadCountUpdateInterval * 1000);\n    }\n\n    return this.itemModel.property('unreadCountUpdateInterval', DefaultWidgetProperties.unreadCountUpdateInterval).pipe(\n      map(Number),\n      map(n => n * 1000),\n      shareReplayOnce(),\n    );\n  }\n\n  setDisplayRelativeTime(value: string | boolean): void {\n    this.displayRelativeTime$$.next(modelItemToBoolean(value));\n  }\n\n  setDisplaySettingsButton(value: string | boolean): void {\n    this.displaySettingsButton$$.next(modelItemToBoolean(value));\n  }\n\n  setNotificationsMessageLineAmount(value: string | number): void {\n    this.notificationsMessageLineAmount$$.next(Number(value));\n  }\n\n  setDisplayShowMoreButtonInBadge(value: string | boolean): void {\n    this.displayShowMoreButtonInBadge$$.next(modelItemToBoolean(value));\n  }\n\n  setPageSize(value: string | number): void {\n    this.pageSize$$.next(Number(value));\n  }\n\n  setUnreadCountUpdateInterval(value: string | number): void {\n    const updateInterval = Number(value);\n    if (!isNaN(updateInterval) && updateInterval > 0) {\n      this.unreadCountUpdateInterval$$.next(secondsToMilliseconds(updateInterval));\n    }\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { NotificationsHttpService } from '@backbase/data-ang/notifications';\nimport { asyncScheduler, BehaviorSubject, combineLatest, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { catchError, delay, filter, first, map, observeOn, pairwise, switchMap, tap } from 'rxjs/operators';\nimport { enterZone, leaveZone, shareReplayOnce } from '@backbase/notifications-common-ang';\nimport { WidgetPropertiesService } from './widget-properties.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class NotificationsPollingService {\n  private readonly forceUpdateCountersSubject = new Subject();\n\n  private readonly requestsInterval$ = this.properties.unreadCountUpdateInterval$;\n\n  private readonly repeat$ = new ReplaySubject(1);\n  private readonly load$ = merge(\n    of(''),\n    this.forceUpdateCountersSubject,\n    merge(this.forceUpdateCountersSubject, this.repeat$).pipe(\n      switchMap(() => this.requestsInterval$),\n      switchMap(interval => of('').pipe(delay(interval, leaveZone(this.ngZone, asyncScheduler)))),\n      observeOn(enterZone(this.ngZone, asyncScheduler)),\n    ),\n  );\n\n  private readonly updateCountersErrorSubject$$ = new BehaviorSubject<HttpErrorResponse | undefined>(undefined);\n\n  /**\n   * Stream with update counters request errors\n   */\n  readonly updateCountersError$ = this.updateCountersErrorSubject$$.asObservable();\n\n  /**\n   * Stream with unread notifications count\n   */\n  readonly unreadNotificationsCount$ = this.load$.pipe(\n    switchMap(() => this.requestCount()),\n    tap(() => this.repeat$.next()),\n    filter(count => typeof count !== 'undefined'),\n    shareReplayOnce(),\n  );\n\n  /**\n   * Stream with flag of new available notifications\n   */\n  readonly newNotificationsAvailable$: Observable<boolean> = this.unreadNotificationsCount$.pipe(\n    pairwise(),\n    map(([prev, cur]) => {\n      if (prev === null || prev === undefined) {\n        return false;\n      }\n      if (cur === null || cur === undefined) {\n        return false;\n      }\n\n      return cur - prev > 0;\n    }),\n    filter<boolean>(Boolean),\n  );\n\n  private requestCount() {\n    const origins$ = this.properties.origins$;\n\n    const severityLevels$ = this.properties.severityLevels$;\n\n    return combineLatest([origins$, severityLevels$]).pipe(\n      first(),\n      switchMap(([origins, levels]) =>\n        this.notificationHttpService.getUnreadCount({\n          ...(origins.length && { origins }),\n          ...(levels.length && { levels }),\n        }),\n      ),\n      map(body => {\n        this.updateCountersErrorSubject$$.next(undefined);\n\n        return body?.unread;\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.updateCountersErrorSubject$$.next(error);\n\n        return of(undefined);\n      }),\n    );\n  }\n\n  constructor(\n    private readonly notificationHttpService: NotificationsHttpService,\n    private readonly properties: WidgetPropertiesService,\n    private readonly ngZone: NgZone,\n  ) {}\n\n  /**\n   * Method to trigger force update on unread notifications counter\n   */\n  forceUpdateCounters() {\n    this.forceUpdateCountersSubject.next();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  catchError,\n  distinctUntilChanged,\n  finalize,\n  map,\n  scan,\n  share,\n  switchMap,\n  tap,\n  withLatestFrom,\n  startWith,\n  filter,\n} from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject, zip } from 'rxjs';\n\nimport { NotificationsHttpService } from '@backbase/data-ang/notifications';\nimport { toISOExtendedFormat, NotificationItem } from '@backbase/notifications-common-ang';\nimport { WidgetPropertiesService } from './widget-properties.service';\n\ninterface RequestOptionsForNotificationsPage {\n  from: number;\n  createdOn?: string;\n  append: boolean;\n}\n\n@Injectable()\nexport class NotificationsPaginationService {\n  constructor(\n    private readonly notificationHttpService: NotificationsHttpService,\n    private readonly properties: WidgetPropertiesService,\n  ) {}\n\n  /**\n   * Stream with page size\n   */\n  readonly sizeProperty$ = this.properties.pageSize$;\n\n  private readonly pageSubject = new Subject<RequestOptionsForNotificationsPage>();\n  private readonly page$: Observable<RequestOptionsForNotificationsPage> = this.pageSubject.asObservable();\n  /**\n   * Stream with current page number (work with loadPage method)\n   */\n  readonly pageFrom$ = this.page$.pipe(map(p => p.from));\n\n  private readonly isLoadingSubject = new BehaviorSubject(false);\n\n  /**\n   * Stream with loading flag\n   */\n  readonly isLoading$ = this.isLoadingSubject.asObservable();\n\n  // eslint-disable-next-line\n  private readonly totalCountSubject = new Subject<number>();\n\n  /**\n   * Stream with total count of notifications\n   */\n  readonly totalCount$ = this.totalCountSubject.asObservable();\n\n  private readonly origins$ = this.properties.origins$;\n  private readonly severityLevels$ = this.properties.severityLevels$;\n\n  private readonly notificationsRequest$ = combineLatest([\n    this.page$,\n    this.sizeProperty$,\n    this.origins$,\n    this.severityLevels$,\n  ]).pipe(\n    switchMap(([page, size, origins, levels]) => {\n      this.isLoadingSubject.next(true);\n\n      return this.notificationHttpService\n        .getNotifications(\n          {\n            toDate:\n              page.createdOn && new Date(toISOExtendedFormat(page.createdOn)).toISOString().replace(/\\.\\d+Z/, 'Z'),\n            from: page.from,\n            size,\n            ...(origins.length && { origins }),\n            ...(levels.length && { levels }),\n          },\n          'response',\n        )\n        .pipe(\n          tap(res => {\n            this.totalCountSubject.next(Number(res.headers.get('x-total-count') || '0'));\n          }),\n          map(({ body, headers }) => ({ data: body || [], headers, error: undefined })),\n          catchError(error => of({ data: [] as NotificationItem[], headers: undefined, error })),\n          finalize(() => {\n            this.isLoadingSubject.next(false);\n          }),\n        );\n    }),\n    share(),\n  );\n\n  private readonly notificationsPage$ = this.notificationsRequest$.pipe(map(({ data }) => data));\n\n  private readonly markAllNotificationsAsRead = new BehaviorSubject(false);\n\n  /**\n   * Stream of notifications\n   */\n  readonly notifications$: Observable<NotificationItem[]> = combineLatest([\n    zip(this.page$, this.notificationsPage$).pipe(\n      // reset accumulator for every first page in Append mode or for every page in regular mode\n      scan(\n        (\n          allNotifications: NotificationItem[],\n          [page, notifications]: [RequestOptionsForNotificationsPage, NotificationItem[]],\n        ) => (!page.append || page.from === 0 ? [] : allNotifications).concat(notifications),\n        [],\n      ),\n    ),\n    this.markAllNotificationsAsRead.pipe(startWith(true), filter(Boolean)),\n  ]).pipe(\n    withLatestFrom(this.markAllNotificationsAsRead),\n    // eslint-disable-next-line arrow-body-style\n    map(([[notifications], allAsRead]) => {\n      return allAsRead ? notifications.map(item => (!item.read && { ...item, read: true }) || item) : notifications;\n    }),\n  );\n\n  /**\n   * Stream of errors\n   */\n  readonly error$ = this.notificationsRequest$.pipe(\n    map(({ error }) => error),\n    distinctUntilChanged(),\n  );\n\n  private loadPageData(page: number, append = false, createdOn?: string) {\n    this.pageSubject.next({ from: page, append, createdOn: createdOn });\n  }\n\n  /**\n   * Method to load notifications of specified page\n   *\n   * @param page Page number\n   */\n  loadPage(page: number) {\n    this.loadPageData(page);\n  }\n\n  /**\n   * Method to load next page of notifications\n   *\n   * @param page Page number\n   * @param createdOn Created on notification date\n   */\n  loadMore(page: number, createdOn?: string) {\n    this.loadPageData(page, true, createdOn);\n  }\n\n  /**\n   * Mark all notifications as read\n   *\n   * @param read Is read flag\n   */\n  markAllAsRead(read: boolean) {\n    this.markAllNotificationsAsRead.next(read);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NotificationsHttpService } from '@backbase/data-ang/notifications';\nimport { Observable, BehaviorSubject, EMPTY } from 'rxjs';\nimport { tap, catchError, finalize } from 'rxjs/operators';\n\nimport { NotificationsPollingService } from './notifications-polling.service';\n\n@Injectable()\nexport class NotificationsDataService {\n  constructor(\n    private readonly notificationHttpService: NotificationsHttpService,\n    private readonly notificationsPollingService: NotificationsPollingService,\n  ) {}\n\n  private readonly markAllNotificationAsReadErrorSubject = new BehaviorSubject(false);\n\n  /**\n   * Mark all notification as read error subject\n   */\n  readonly markAllNotificationAsReadError = this.markAllNotificationAsReadErrorSubject\n    .asObservable()\n    .pipe(finalize(() => this.markAllNotificationAsReadErrorSubject.next(false)));\n\n  /**\n   *\n   * Method to mark a notification as read by its id\n   *\n   * @param notificationId Notification\n   * @returns  Mark as read stream\n   */\n  markNotificationAsRead(notificationId: string): Observable<unknown> {\n    return this.notificationHttpService\n      .putMarkAsRead({ id: notificationId, markAsReadPutRequestBody: { read: true } })\n      .pipe(\n        tap(() => {\n          this.notificationsPollingService.forceUpdateCounters();\n        }),\n      );\n  }\n\n  /**\n   * Mark all notifications as read\n   *\n   * @returns Mark all notifications as read stream\n   */\n  markAllNotificationAsRead(): Observable<unknown> {\n    return this.notificationHttpService.putRead(undefined).pipe(\n      catchError(() => {\n        this.markAllNotificationAsReadErrorSubject.next(true);\n\n        return EMPTY;\n      }),\n      tap(() => {\n        this.markAllNotificationAsReadErrorSubject.next(false);\n        this.notificationsPollingService.forceUpdateCounters();\n      }),\n    );\n  }\n\n  /**\n   * @param id Delete notification by id\n   * @returns Notification delete stream\n   */\n  deleteNotification(id: string): Observable<unknown> {\n    return this.notificationHttpService.deleteNotification({ id });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { NotificationRouting } from '@backbase/notifications-common-ang';\n\n@Injectable()\nexport class NotificationsRouterService {\n  private readonly notificationsSettingsOpenedSubject = new Subject<void>();\n  /**\n   * Settings opened navigation subject\n   */\n  readonly settingsOpenedNavigation$: Observable<void> = this.notificationsSettingsOpenedSubject.asObservable();\n\n  private readonly notificationRoutingSubject = new Subject<NotificationRouting>();\n  /**\n   * Notification routing subject\n   */\n  readonly notificationRouting$: Observable<NotificationRouting> = this.notificationRoutingSubject.asObservable();\n\n  /**\n   * Emit notification settings navigation\n   */\n  emitSettingsOpenedNavigation() {\n    this.notificationsSettingsOpenedSubject.next();\n  }\n\n  /**\n   * Emit notification routing\n   *\n   * @param routing Routing subject\n   */\n  emitNotificationRouting(routing: NotificationRouting) {\n    this.notificationRoutingSubject.next(routing);\n  }\n}\n","export enum NotificationSeverity {\n  Alert = 'ALERT',\n  Warning = 'WARNING',\n  Info = 'INFO',\n  Success = 'SUCCESS',\n}\n","import { NotificationSeverity } from './notification-severity';\n\nexport interface SeverityLevelIconMap {\n  [key: string]: {\n    icon: string;\n    color: string;\n  };\n}\n\nexport const severityLevelIconMap: Readonly<SeverityLevelIconMap> = {\n  [NotificationSeverity.Success]: {\n    icon: 'success',\n    color: 'success',\n  },\n  [NotificationSeverity.Info]: {\n    icon: 'info',\n    color: 'primary',\n  },\n  [NotificationSeverity.Alert]: {\n    icon: 'info',\n    color: 'danger',\n  },\n  [NotificationSeverity.Warning]: {\n    icon: 'warning',\n    color: 'warning',\n  },\n};\n","import { Component, Directive, Input } from '@angular/core';\nimport { toISOExtendedFormat } from '@backbase/notifications-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nconst DEFAULT_FORMAT_FOR_DATE_IN_PAST = 'MM/dd/yy';\n\n@Component({\n  selector: 'bb-humanized-date',\n  templateUrl: './humanized-date.component.html',\n})\nexport class HumanizedDateComponent {\n  private readonly today: Date;\n  private readonly yesterday: Date;\n  private _date: Date | undefined;\n  private _minutesFromNow: number | undefined;\n  private _isWithinHour = false;\n  private _isToday = false;\n  private _isYesterday = false;\n\n  /**\n   *  Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n  /**\n   * Flag that defines if we should display relative time for today.\n   */\n  @Input() displayRelativeTime = false;\n  /**\n   * Notification date.\n   */\n  @Input() set date(value: Date | string | undefined) {\n    const date = this.parseDate(value);\n\n    if (date) {\n      this._date = date;\n      this.setDateFlags();\n    } else {\n      this.resetStateToDefaults();\n    }\n  }\n\n  constructor() {\n    this.today = new Date();\n\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    this.yesterday = yesterday;\n  }\n\n  get dateFormatForPast(): string {\n    return this.dateFormat || DEFAULT_FORMAT_FOR_DATE_IN_PAST;\n  }\n\n  /**\n   * Date getter.\n   */\n  // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n  get date(): Date | string | undefined {\n    return this._date;\n  }\n\n  /**\n   *\n   * Is date within an hour from now flag getter.\n   */\n  get isWithinHour(): boolean {\n    return this._isWithinHour;\n  }\n\n  /**\n   * Is date within the current day flag getter.\n   */\n  get isToday(): boolean {\n    return this._isToday;\n  }\n\n  /**\n   * Is date within the yesterday date flag getter.\n   */\n  get isYesterday(): boolean {\n    return this._isYesterday;\n  }\n\n  /**\n   * How many minutes from now is the date getter.\n   */\n  get minutesFromNow(): number | undefined {\n    return this._minutesFromNow;\n  }\n\n  private setDateFlags() {\n    this._minutesFromNow = this.getMinutesFromNow(this._date as Date, this.today);\n    this._isToday = this.isSameDay(this._date, this.today);\n    this._isYesterday = this.isSameDay(this._date, this.yesterday);\n    this._isWithinHour = Number(this.minutesFromNow) < 60;\n  }\n\n  private resetStateToDefaults() {\n    this._date = undefined;\n    this._minutesFromNow = undefined;\n    this._isWithinHour = false;\n    this._isToday = false;\n    this._isYesterday = false;\n  }\n\n  private parseDate(value: Date | string | undefined): Date | undefined {\n    if (typeof value === 'undefined' || value instanceof Date) return value;\n\n    return new Date(toISOExtendedFormat(value)).valueOf() ? new Date(toISOExtendedFormat(value)) : undefined;\n  }\n\n  private isSameDay(date1?: Date, date2?: Date): boolean {\n    if (!date1 || !date2) {\n      return false;\n    }\n\n    return date1.toDateString() === date2.toDateString();\n  }\n\n  private getMinutesFromNow(dateTime: Date, currentDateTime: Date): number {\n    const minutesFromNow = Math.floor((currentDateTime.getTime() - dateTime.getTime()) / 60000);\n\n    return minutesFromNow > 0 ? minutesFromNow : 0;\n  }\n}\n\n@Directive({\n  selector: '[bbHumanizedDateCustomizable]',\n})\nexport class HumanizedDateCustomizableDirective extends BbTemplate<HumanizedDateComponent, void> {}\n","<ng-container bbHumanizedDateCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbHumanizedDateCustomizable let-hostRef>\n  <div class=\"sr-only\" i18n=\"Humanized date title@@humanized.date.title\">,Date:</div>\n  <ng-container *ngIf=\"hostRef.date as date\">\n    <time *ngIf=\"hostRef.isToday\" class=\"bb-subheader bb-subheader--regular bb-text-nowrap\">\n      <ng-container *ngIf=\"hostRef.displayRelativeTime; else today\">\n        <ng-container\n          *ngIf=\"hostRef.isWithinHour; else moreThanHourAgo\"\n          i18n=\"Notifications time less than an hour ago date@@notifications.humanized-date.less-than-an-hour-ago\"\n        >\n          { hostRef.minutesFromNow, plural, =0 {now} other {{{hostRef.minutesFromNow}} min ago} }\n        </ng-container>\n\n        <ng-template #moreThanHourAgo>\n          {{ date | bbDate: 'shortTime' }}\n        </ng-template>\n      </ng-container>\n\n      <ng-template #today i18n=\"Notifications today date@@notifications.humanized-date.today\"> today </ng-template>\n    </time>\n\n    <time\n      *ngIf=\"hostRef.isYesterday\"\n      class=\"bb-subheader bb-subheader--regular\"\n      i18n=\"Notifications yesterday date@@notifications.humanized-date.yesterday\"\n    >\n      yesterday\n    </time>\n    <time\n      *ngIf=\"!hostRef.isToday && !hostRef.isYesterday\"\n      class=\"bb-subheader bb-subheader--regular\"\n      [attr.aria-label]=\"date | bbDate: 'mediumDate'\"\n    >\n      {{ date | bbDate: dateFormatForPast }}\n    </time>\n  </ng-container>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationItem } from '@backbase/notifications-common-ang';\n\nimport { SeverityLevelIconMap, severityLevelIconMap } from '../../models/severity-level-icon-map';\nimport { Observable } from 'rxjs';\nimport { WidgetPropertiesService } from '../../services/widget-properties.service';\n\n@Component({\n  selector: 'bb-notifications-list-item',\n  templateUrl: './notifications-list-item.component.html',\n})\nexport class NotificationsListItemComponent {\n  static idCounter = 0;\n\n  /**\n   * The unique ID HTML property for each component instance.\n   */\n  readonly id = `bb-notifications-badge-list-item-${NotificationsListItemComponent.idCounter++}`;\n\n  /**\n   * Notification item data.\n   */\n  @Input() notification!: NotificationItem;\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Event to open notification details.\n   */\n  @Output() openDetails = new EventEmitter<Event>();\n\n  /**\n   * Stream of widget property with the number of lines to show as a notification message.\n   */\n  readonly notificationsMessageLineAmount$: Observable<number> = this.properties.notificationsMessageLineAmount$;\n\n  /**\n   * Stream of widget property with a flag that defines if we should display relative time for today.\n   */\n  readonly displayRelativeTime$: Observable<boolean> = this.properties.displayRelativeTime$;\n\n  /*\n   * Stream of widget property with a flag that defines if we should display relative time for today.\n   */\n  readonly displayShowMoreButtonInBadge$: Observable<boolean> = this.properties.displayShowMoreButtonInBadge$;\n\n  /**\n   * Notifications severity map\n   */\n  readonly levelMap: SeverityLevelIconMap = severityLevelIconMap;\n\n  /**\n   * Getter for icon name from severity level icon map due to level of notification.\n   */\n  get icon(): string {\n    return this.levelMap[this.notification.level].icon;\n  }\n\n  /**\n   * Getter for icon color from severity level icon map due to level of notification.\n   */\n  get color(): string {\n    return this.levelMap[this.notification.level].color;\n  }\n\n  /**\n   * Method to open notification details from the parent component.\n   *\n   * @param event Click event\n   */\n  openNotificationDetails(event: Event) {\n    event.stopPropagation();\n    this.openDetails.emit(event);\n  }\n\n  constructor(private readonly properties: WidgetPropertiesService) {}\n}\n\n@Directive({\n  selector: '[bbNotificationsListItemCustomizable]',\n})\nexport class NotificationListItemCustomizableDirective extends BbTemplate<\n  NotificationsListItemComponent,\n  {\n    notificationsMessageLineAmount: number;\n  }\n> {}\n","<ng-container\n  bbNotificationsListItemCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    notificationsMessageLineAmount: notificationsMessageLineAmount$ | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbNotificationsListItemCustomizable\n  let-hostRef\n  let-notificationsMessageLineAmount=\"context.notificationsMessageLineAmount\"\n>\n  <div\n    tabindex=\"0\"\n    class=\"bb-notifications-badge-list-item bb-notification bb-notification--flush\"\n    data-role=\"notifications-list-item\"\n    [class.bb-notifications-badge-list-item--unread]=\"!hostRef.notification.read\"\n  >\n    <span\n      class=\"sr-only\"\n      i18n=\"Notification item read/unread status@@notifications.list.notification-details.read-unread-status\"\n    >\n      { hostRef.notification.read, select, true { viewed } false { new } } notification,\n    </span>\n    <span\n      class=\"sr-only\"\n      i18n=\"Notification item severity level@@notifications.list.notification-details.read-unread-status\"\n    >\n      { hostRef.notification.level, select, ALERT { Alert } INFO { Info } SUCCESS { Success } WARNING { Warning } },\n    </span>\n    <bb-icon-ui\n      [name]=\"hostRef.icon\"\n      [color]=\"hostRef.color\"\n      class=\"bb-notification__icon\"\n      data-role=\"notifications-list-item-severity-level-icon\"\n    ></bb-icon-ui>\n    <div class=\"bb-notifications-badge-list-item__body bb-notification__body\">\n      <div\n        class=\"bb-notifications-badge-list-item__header bb-notification__title bb-stack\"\n        data-role=\"notification-heading\"\n      >\n        <bb-ellipsis-ui\n          class=\"bb-notifications-badge-list-item__title bb-stack__item bb-text-align-left\"\n          data-role=\"notifications-list-item-title\"\n        >\n          <span [innerHTML]=\"hostRef.notification | notificationLocalization: 'title'\"></span>\n        </bb-ellipsis-ui>\n        <bb-humanized-date\n          class=\"bb-stack__item bb-stack__item--push-right\"\n          [date]=\"hostRef.notification.createdOn\"\n          [displayRelativeTime]=\"hostRef.displayRelativeTime$ | async\"\n          data-role=\"notification-list-item-creation-date\"\n          [dateFormat]=\"dateFormat\"\n        ></bb-humanized-date>\n      </div>\n      <bb-ellipsis-ui\n        data-role=\"notifications-list-item-content\"\n        aria-hidden=\"true\"\n        class=\"bb-notifications-badge-list-item__content bb-text-align-left bb-stack bb-block bb-block--sm\"\n        [tooltipTriggers]=\"''\"\n        [lineClamp]=\"notificationsMessageLineAmount\"\n      >\n        <div\n          #notificationMessage\n          [innerHTML]=\"\n            hostRef.notification | notificationLocalization: 'message' | interpolateLink: hostRef.notification:false\n          \"\n        ></div>\n      </bb-ellipsis-ui>\n      <button\n        type=\"button\"\n        data-role=\"notifications-list-item-show-more-button\"\n        *ngIf=\"hostRef.displayShowMoreButtonInBadge$ | async\"\n        class=\"btn-link-text bb-text-bold bb-block bb-block--sm\"\n        (click)=\"hostRef.openNotificationDetails($event)\"\n        aria-label=\"See more notification details\"\n        i18n=\"Notification badge See more button@@notifications.list.see-more.button\"\n        i18n-aria-label=\"Aria-label for See more button@@notifications.list.see-more.button.aria-label\"\n      >\n        <span>See more</span>\n      </button>\n      <bb-notifications-capability-icon\n        aria-hidden=\"true\"\n        [origin]=\"hostRef.notification?.origin\"\n      ></bb-notifications-capability-icon>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationItem } from '@backbase/notifications-common-ang';\nimport { SeverityLevelIconMap, severityLevelIconMap } from '../../../models/severity-level-icon-map';\nimport { Observable } from 'rxjs';\nimport { WidgetPropertiesService } from '../../../services/widget-properties.service';\n\n@Component({\n  selector: 'bb-notification-details-item',\n  templateUrl: './notification-details-item.component.html',\n})\nexport class NotificationDetailsItemComponent {\n  /**\n   * Notifications severity map\n   */\n  readonly levelMap: SeverityLevelIconMap = severityLevelIconMap;\n\n  /**\n   * Notification item data.\n   */\n  @Input() notification!: NotificationItem;\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Stream of a flag that defines if we should display relative time for today.\n   */\n  readonly displayRelativeTime$: Observable<boolean> = this.properties.displayRelativeTime$;\n\n  /**\n   * Getter for icon name from severity level icon map due to level of notification.\n   */\n  get icon(): string {\n    return this.levelMap[this.notification.level].icon;\n  }\n\n  /**\n   * Getter for icon color from severity level icon map due to level of notification.\n   */\n  get color(): string {\n    return this.levelMap[this.notification.level].color;\n  }\n\n  constructor(private readonly properties: WidgetPropertiesService) {}\n}\n\n@Directive({\n  selector: '[bbNotificationDetailsItemCustomizable]',\n})\nexport class NotificationDetailsItemCustomizableDirective extends BbTemplate<NotificationDetailsItemComponent, void> {}\n","<ng-container bbNotificationDetailsItemCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbNotificationDetailsItemCustomizable let-hostRef>\n  <div class=\"bb-notification bb-notification--flush\">\n    <bb-icon-ui\n      class=\"bb-notification__icon\"\n      [name]=\"hostRef.icon\"\n      [color]=\"hostRef.color\"\n      data-role=\"notification-details-icon\"\n    ></bb-icon-ui>\n    <div class=\"bb-notification__body\">\n      <div class=\"bb-notification__title bb-stack\">\n        <span\n          class=\"bb-stack__item break-word bb-text-default\"\n          data-role=\"notification-details-title\"\n          [innerHTML]=\"hostRef.notification | notificationLocalization: 'title'\"\n        ></span>\n        <bb-humanized-date\n          class=\"bb-stack__item bb-stack__item--push-right\"\n          [date]=\"hostRef.notification.createdOn\"\n          [displayRelativeTime]=\"hostRef.displayRelativeTime$ | async\"\n          [dateFormat]=\"dateFormat\"\n          data-role=\"notification-details-message\"\n        ></bb-humanized-date>\n      </div>\n      <div class=\"bb-stack bb-block bb-block--sm\">\n        <div\n          data-role=\"notification-details-message-text\"\n          class=\"break-word bb-text-align-left\"\n          [innerHTML]=\"\n            hostRef.notification | notificationLocalization: 'message' | interpolateLink: hostRef.notification\n          \"\n        ></div>\n      </div>\n      <bb-notifications-capability-icon [origin]=\"hostRef.notification?.origin\"></bb-notifications-capability-icon>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationItem } from '@backbase/notifications-common-ang';\n\n@Component({\n  selector: 'bb-notification-details',\n  templateUrl: './notification-details.component.html',\n})\nexport class NotificationDetailsComponent {\n  /**\n   * Notification item data.\n   */\n  @Input() notification!: NotificationItem;\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Event to navigate back to notifications list.\n   */\n  @Output() navigateBack = new EventEmitter<void>();\n\n  /**\n   * Event to delete notification.\n   */\n  @Output() delete = new EventEmitter<void>();\n\n  /**\n   * Method to emit delete notification event.\n   */\n  deleteNotification() {\n    this.delete.emit();\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationDetailsCustomizable]',\n})\nexport class NotificationDetailsCustomizableDirective extends BbTemplate<NotificationDetailsComponent, void> {}\n","<ng-container bbNotificationDetailsCustomizable [bbHostRef]=\"this\"> </ng-container>\n\n<ng-template bbNotificationDetailsCustomizable let-hostRef>\n  <div role=\"dialog\" aria-modal=\"false\">\n    <div class=\"bb-card__header\">\n      <div class=\"bb-notifications-badge-widget__back-button bb-stack\">\n        <button\n          bbFocus\n          bbButton\n          color=\"link-text\"\n          class=\"bb-stack__item--push-left\"\n          data-role=\"notification-details-go-back-btn\"\n          (click)=\"hostRef.navigateBack.emit()\"\n        >\n          <bb-icon-ui name=\"arrow-back\" color=\"info\"></bb-icon-ui>\n          <span i18n=\"Notifications details Go back button@@notifications.details.go-back-button\">\n            Back to notifications\n          </span>\n        </button>\n        <button\n          bbButton\n          class=\"bb-stack__item--push-right\"\n          color=\"link\"\n          circle=\"true\"\n          aria-label=\"delete\"\n          i18n-aria-label=\"delete aria-label@@notifications.details.delete-button-aria-label\"\n          bbTooltip=\"Delete\"\n          container=\"body\"\n          i18n-bbTooltip=\"Delete|Button text to delete notification@@notifications.details.delete-button\"\n          triggers=\"hover\"\n          placement=\"top\"\n          data-role=\"notification-details-delete-btn\"\n          (click)=\"hostRef.deleteNotification()\"\n        >\n          <bb-icon-ui name=\"delete\" class=\"bb-text-support\"></bb-icon-ui>\n        </button>\n      </div>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-notification-details-item\n        [notification]=\"hostRef.notification\"\n        [dateFormat]=\"dateFormat\"\n      ></bb-notification-details-item>\n    </div>\n  </div>\n</ng-template>\n","import {\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { asyncScheduler, BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport {\n  filter,\n  first,\n  map,\n  mapTo,\n  observeOn,\n  pairwise,\n  skip,\n  skipUntil,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { NotificationItem, NotificationStreamItem, shareReplayOnce } from '@backbase/notifications-common-ang';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { Pubsub, PUBSUB } from '@backbase/foundation-ang/web-sdk';\n\nimport { NotificationsPaginationService } from '../../services/notifications-pagination.service';\nimport { NotificationsPollingService } from '../../services/notifications-polling.service';\nimport { NotificationsDataService } from '../../services/notifications-data.service';\nimport { NotificationsRouterService } from '../../services/notifications-router.service';\nimport { WidgetPropertiesService } from '../../services/widget-properties.service';\n\nexport const NOTIFICATIONS_BADGE_RELOAD_ON_NAVIGATE_EVENT = 'bb.event.notifications-badge.reload-on-navigate';\n\n@Component({\n  selector: 'bb-notifications-list',\n  templateUrl: './notifications-list.component.html',\n})\nexport class NotificationsListComponent implements OnInit, OnDestroy {\n  /**\n   * Navigation event.\n   */\n  @Output() navigation = new EventEmitter<void>();\n\n  /**\n   * Preselected notification\n   */\n  @Input() set preselectedNotification(notification: NotificationItem | undefined) {\n    this.selectedNotification = notification;\n  }\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  private readonly componentDestroyed$ = new Subject<void>();\n\n  /**\n   * Stream of routes available for navigation.\n   */\n  readonly allowedRoutes$: Observable<string[]> = this.properties.allowedRoutes$;\n\n  /**\n   * Stream of a flag that defines if we should display settings button.\n   */\n  readonly displaySettingsButton$: Observable<boolean> = this.properties.displaySettingsButton$;\n\n  constructor(\n    private readonly routerService: NotificationsRouterService,\n    private readonly notificationsPaginationService: NotificationsPaginationService,\n    private readonly notificationsPollingService: NotificationsPollingService,\n    private readonly notificationService: NotificationsDataService,\n    private readonly showNotificationService: NotificationService,\n    private readonly element: ElementRef,\n    private readonly properties: WidgetPropertiesService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {}\n\n  /**\n   * Stream with notifications items.\n   */\n  readonly notifications$: Observable<NotificationStreamItem[]> =\n    this.notificationsPaginationService.notifications$.pipe(takeUntil(this.componentDestroyed$), shareReplayOnce());\n\n  /**\n   * Stream with error while loading of notifications.\n   */\n  readonly error$ = this.notificationsPaginationService.error$;\n\n  /**\n   * Stream with error while loading of notifications.\n   */\n  readonly updateCountersError$ = this.notificationsPollingService.updateCountersError$;\n\n  /**\n   * Mark as read request error stream which shows if request has failed.\n   */\n  readonly markAllAsReadError$ = this.notificationService.markAllNotificationAsReadError;\n\n  /**\n   * Stream with flag if notifications is loading now or no.\n   */\n  readonly isLoading$ = this.notificationsPaginationService.isLoading$;\n\n  private readonly firstNewNotificationId$ = this.notifications$.pipe(\n    pairwise(),\n    map(([prevNotifications, newNotifications]) => {\n      let firstNewNotification = newNotifications[prevNotifications.length];\n\n      // reset notification to the first page scenario\n      if (prevNotifications.length >= newNotifications.length) {\n        firstNewNotification = newNotifications[0];\n      }\n\n      return firstNewNotification && firstNewNotification.id;\n    }),\n  );\n\n  private readonly notificationWasReadSubject = new Subject<boolean>();\n  private readonly notificationWasRead$ = this.notificationWasReadSubject.asObservable();\n\n  private readonly newNotificationsAvailableSubject = new BehaviorSubject<boolean>(false);\n  private readonly updateCounters$ = this.newNotificationsAvailableSubject.pipe(\n    startWith(false),\n    filter(i => !i),\n    mapTo(true),\n    shareReplayOnce(),\n  );\n\n  /**\n   * Stream with total count of notifications.\n   */\n  readonly totalCount$ = this.updateCounters$.pipe(switchMap(() => this.notificationsPaginationService.totalCount$));\n\n  /**\n   * Stream with notifications about new notification available\n   */\n  readonly newNotificationsAvailable$ = this.newNotificationsAvailableSubject.asObservable();\n\n  /**\n   * Stream with page size.\n   */\n  readonly pageSize$ = this.notificationsPaginationService.sizeProperty$;\n\n  /**\n   * Stream with unread notifications count\n   */\n  readonly unreadCount$ = this.updateCounters$.pipe(\n    switchMap(() =>\n      this.notificationsPollingService.unreadNotificationsCount$.pipe(\n        switchMap(counter =>\n          this.notificationWasRead$.pipe(\n            startWith(false),\n            map(read => {\n              if (!read || !counter) {\n                return counter;\n              }\n\n              return --counter;\n            }),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  private lastSelectedNotificationItemButton: HTMLElement | undefined;\n\n  /**\n   * Steam with the starting page number.\n   */\n  readonly pageFrom$ = this.notificationsPaginationService.pageFrom$;\n\n  /**\n   * Notification item that is shown in notification details now.\n   */\n  selectedNotification: NotificationItem | undefined;\n\n  ngOnInit() {\n    this.firstNewNotificationId$\n      .pipe(\n        filter(Boolean),\n        map(id => `.bb-nt-${id}`),\n        observeOn(asyncScheduler),\n        map(elemClass => this.element.nativeElement.querySelector(elemClass) as HTMLElement),\n        filter<HTMLElement>(Boolean),\n        takeUntil(this.componentDestroyed$),\n      )\n      .subscribe((elemScrollTo: HTMLElement) => {\n        (elemScrollTo.firstChild as HTMLElement)?.focus();\n        elemScrollTo.scrollIntoView({ behavior: 'smooth' });\n      });\n\n    this.notificationsPollingService.newNotificationsAvailable$\n      .pipe(takeUntil(this.componentDestroyed$))\n      .subscribe(value => {\n        this.newNotificationsAvailableSubject.next(value);\n      });\n\n    this.onLoadNewNotifications();\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed$.next();\n    this.componentDestroyed$.complete();\n  }\n\n  /**\n   * Method to mark all notifications as read.\n   */\n  onReadAllNotifications() {\n    this.notificationService.markAllNotificationAsRead().subscribe(() => {\n      this.notificationsPaginationService.markAllAsRead(true);\n    });\n  }\n\n  /**\n   * Method to load new notifications by reloading of the first page.\n   */\n  onLoadNewNotifications() {\n    this.notificationsPollingService.unreadNotificationsCount$\n      .pipe(\n        skip(1), // skip stored value to wait for unread notifications count load occurred\n        first(),\n      )\n      .subscribe(() => {\n        this.newNotificationsAvailableSubject.next(false);\n        this.notificationsPaginationService.markAllAsRead(false);\n        this.notificationsPaginationService.loadPage(0);\n      });\n    this.notificationsPollingService.forceUpdateCounters();\n  }\n\n  /**\n   * Method to load next notifications page.\n   */\n  onLoadMore(totalCount: number, $event: { from: number }) {\n    const asyncNotifications$ = this.notifications$.pipe(\n      skipUntil(of(undefined).pipe(observeOn(asyncScheduler))), // wait for new asynchronously loaded notifications\n    );\n\n    const lastNotification$ = this.notifications$.pipe(\n      first(),\n      map(notifications => notifications[notifications.length - 1]),\n      map(({ id }) => `.bb-nt-${id} [data-role=\"notifications-list-item\"]`),\n      observeOn(asyncScheduler),\n      map(selector => this.element.nativeElement.querySelector(selector)),\n    );\n\n    this.notifications$.pipe(first()).subscribe(data => {\n      const createdOn = data[0].createdOn;\n      this.notificationsPaginationService.loadMore($event.from, createdOn);\n    });\n\n    combineLatest([asyncNotifications$, of(totalCount)])\n      .pipe(\n        take(1),\n        filter(([notifications, total]) => notifications.length >= total),\n        switchMap(() => lastNotification$),\n      )\n      .subscribe(lastNotification => lastNotification.focus());\n  }\n\n  /**\n   * Method to open notification settings.\n   */\n  onNotificationsSettingsOpen() {\n    this.routerService.emitSettingsOpenedNavigation();\n    this.navigation.emit();\n  }\n\n  /**\n   * Method to show notification details view or to navigate to the notification routing URL if routing is enabled.\n   */\n  selectNotification(clickEvent: Event, notification: NotificationItem, openDetailsView?: boolean) {\n    clickEvent.preventDefault();\n    this.allowedRoutes$.subscribe(routes => {\n      const route = notification.routing && notification.routing['where-to'];\n\n      if (!openDetailsView && notification.routing && routes.some(allowedRoute => route === allowedRoute)) {\n        this.pubSub.publish(NOTIFICATIONS_BADGE_RELOAD_ON_NAVIGATE_EVENT, undefined);\n        this.routerService.emitNotificationRouting(notification.routing);\n        this.navigation.emit();\n      } else {\n        this.selectedNotification = notification;\n        this.saveRefToNotification(clickEvent);\n      }\n    });\n\n    if (!notification.read) {\n      this.notificationService.markNotificationAsRead(notification.id).subscribe(() => {\n        notification.read = true;\n        this.notificationWasReadSubject.next(true);\n      });\n    }\n  }\n\n  /**\n   * Method to delete notification.\n   */\n  deleteNotification() {\n    if (this.selectedNotification) {\n      this.notificationService\n        .deleteNotification(this.selectedNotification.id)\n        .pipe(\n          take(1),\n          tap(() => this.notificationsPaginationService.loadPage(0)),\n        )\n        .subscribe(\n          () => {\n            this.selectedNotification = undefined;\n          },\n          error => {\n            this.showNotificationService.showNotification({\n              header: this.getErrorMessage(error),\n              modifier: 'error',\n              message: '',\n            });\n          },\n        );\n    }\n  }\n\n  /**\n   * Method to unselect notification and return back focus position.\n   */\n  unselectNotification() {\n    this.selectedNotification = undefined;\n    this.restoreFocusOnNotification();\n  }\n\n  /**\n   * Method to differentiate notifications by IDs.\n   *\n   * @param _index List item index\n   * @param notification Notification list item\n   * @returns Notification id\n   */\n  trackById(_index: number, notification: NotificationItem): string {\n    return notification.id;\n  }\n\n  private saveRefToNotification(notificationClickEvent: any) {\n    this.lastSelectedNotificationItemButton = notificationClickEvent.target.closest(\n      '[data-role=\"notifications-list-item\"]',\n    );\n  }\n\n  private restoreFocusOnNotification() {\n    setTimeout(() => {\n      if (!this.lastSelectedNotificationItemButton) {\n        return;\n      }\n\n      this.lastSelectedNotificationItemButton.focus();\n    }, 0);\n  }\n\n  private getErrorMessage(error: HttpErrorResponse | Error | string): string {\n    return typeof error !== 'string'\n      ? (error as HttpErrorResponse)?.error?.message || error.message || 'Unknown Error'\n      : error;\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsListCustomizable]',\n})\nexport class NotificationsListCustomizableDirective extends BbTemplate<\n  NotificationsListComponent,\n  {\n    notifications: NotificationItem[];\n    error: any;\n    updateCountersError: HttpErrorResponse | undefined;\n    isLoading: boolean;\n    totalCount: number;\n    pageSize: number;\n    newNotificationsAvailable: boolean;\n    unreadCount: number;\n    markAllAsReadError: boolean;\n  }\n> {}\n","<ng-container\n  bbNotificationsListCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    notifications: notifications$ | async,\n    error: error$ | async,\n    updateCountersError: updateCountersError$ | async,\n    isLoading: isLoading$ | async,\n    totalCount: totalCount$ | async,\n    pageSize: pageSize$ | async,\n    newNotificationsAvailable: newNotificationsAvailable$ | async,\n    unreadCount: unreadCount$ | async,\n    markAllAsReadError: markAllAsReadError$ | async,\n    pageFrom: pageFrom$ | async\n  }\"\n>\n</ng-container>\n\n<ng-template\n  bbNotificationsListCustomizable\n  let-hostRef\n  let-notifications=\"context.notifications\"\n  let-error=\"context.error\"\n  let-updateCountersError=\"context.updateCountersError\"\n  let-isLoading=\"context.isLoading\"\n  let-totalCount=\"context.totalCount\"\n  let-pageSize=\"context.pageSize\"\n  let-newNotificationsAvailable=\"context.newNotificationsAvailable\"\n  let-unreadCount=\"context.unreadCount\"\n  let-markAllAsReadError=\"context.markAllAsReadError\"\n  let-pageFrom=\"context.pageFrom\"\n>\n  <ng-container *ngIf=\"!hostRef.selectedNotification\">\n    <header data-role=\"notifications-list-header\" class=\"bb-card__header bb-stack\">\n      <span class=\"bb-stack__item\">\n        <span class=\"bb-heading-3\" i18n=\"Notifications modal label@@notifications.modalLabel\">Notifications</span>\n      </span>\n      <button\n        bbButton\n        *ngIf=\"hostRef.displaySettingsButton$ | async\"\n        class=\"bb-stack__item bb-stack__item--push-right\"\n        data-role=\"settings-button\"\n        color=\"link\"\n        circle=\"true\"\n        aria-label=\"Redirect to notification settings\"\n        i18n-aria-label=\"Aria-label for settings button@@notifications.notification-settings.aria-label\"\n        (click)=\"hostRef.onNotificationsSettingsOpen()\"\n      >\n        <bb-icon-ui class=\"text-dark\" name=\"settings\" size=\"md\"></bb-icon-ui>\n      </button>\n    </header>\n    <button\n      bbButton\n      *ngIf=\"newNotificationsAvailable\"\n      role=\"status\"\n      color=\"primary\"\n      [block]=\"true\"\n      i18n=\"Label for new notifications loading button@@notifications.new-notifications-available.button\"\n      aria-label=\"New Notification available. Click to refresh\"\n      i18n-aria-label=\"\n        Aria-label for new notifications loading button@@notifications.new-notifications-available.aria-label\"\n      class=\"bb-notifications-badge-widget__load-new-button\"\n      data-role=\"notifications-load-new-btn\"\n      (click)=\"hostRef.onLoadNewNotifications()\"\n    >\n      <span>New Notification available. Click to refresh</span>\n      <bb-icon-ui name=\"loading\" size=\"md\" cropped=\"true\"></bb-icon-ui>\n    </button>\n    <bb-alert-ui\n      *ngIf=\"markAllAsReadError\"\n      class=\"bb-notifications-badge-widget__alert\"\n      data-role=\"mark-all-read-error-alert\"\n      title=\"Error! Couldn’t mark all as read.\"\n      i18n-title=\"Label for mark all as read error@@notifications.mark-all-read.alert.title\"\n      aria-label=\"Error! Couldn’t mark all as read.\"\n      i18n-aria-label=\"Aria-label for mark all as read error@@notifications.mark-all-read.alert.aria-label\"\n      modifier=\"error\"\n      [dismissible]=\"false\"\n    >\n    </bb-alert-ui>\n    <div class=\"bb-notifications-badge-widget__all-read-button\" *ngIf=\"unreadCount > 0\">\n      <button\n        bbButton\n        data-role=\"mark-all-read-button\"\n        class=\"bb-subtitle\"\n        color=\"link-text\"\n        aria-label=\"Mark all notifcations as read\"\n        i18n-aria-label=\"Aria-label for mark all as read button@@notifications.mark-all-read.aria-label\"\n        (click)=\"hostRef.onReadAllNotifications()\"\n      >\n        <bb-icon-ui name=\"playlist-add-check\" size=\"md\" cropped=\"true\"></bb-icon-ui>\n        <span i18n=\"Label for mark all as read button@@notifications.mark-all-read.label\">Mark all as read</span>\n      </button>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"!error && !updateCountersError; else errorState\">\n    <ng-container *ngIf=\"notifications?.length; else emptyState\">\n      <div data-role=\"notifications-list-inner-wrapper\" [ngClass]=\"hostRef.selectedNotification ? 'd-none' : null\">\n        <p\n          aria-live=\"polite\"\n          class=\"sr-only\"\n          i18n=\"Label for new loaded notifications available@@notifications.new-loaded-notifications-available\"\n        >\n          { notifications.length, plural, =1 {new notification of {{ totalCount }}available} other {\n          {{ notifications.length }} new notifications of {{ totalCount }}available } }\n        </p>\n        <ul\n          tabindex=\"-1\"\n          class=\"bb-notifications-badge-widget__list bb-list bb-list--flush-lg\"\n          data-role=\"notifications-list-body\"\n        >\n          <li class=\"bb-list__item\" *ngFor=\"let notification of notifications; trackBy: hostRef.trackById\">\n            <bb-notifications-list-item\n              [notification]=\"notification\"\n              class=\"bb-nt-{{ notification.id }}\"\n              (keydown.enter)=\"hostRef.selectNotification($event, notification)\"\n              (keyup.space)=\"hostRef.selectNotification($event, notification)\"\n              (click)=\"hostRef.selectNotification($event, notification)\"\n              (openDetails)=\"hostRef.selectNotification($event, notification, true)\"\n              [dateFormat]=\"dateFormat\"\n            >\n            </bb-notifications-list-item>\n          </li>\n        </ul>\n\n        <footer class=\"bb-card__footer\">\n          <ng-container *ngIf=\"totalCount > pageSize\">\n            <div\n              *ngIf=\"notifications.length < totalCount; else LoadMoreDisabled\"\n              class=\"bb-button-bar bb-button-bar--center\"\n            >\n              <bb-load-button-ui\n                i18n=\"Load more button@@notifications.notification-list.load-more\"\n                class=\"bb-button-bar__button\"\n                color=\"link\"\n                [size]=\"pageSize\"\n                [from]=\"pageFrom\"\n                [totalCount]=\"totalCount\"\n                [isLoading]=\"isLoading\"\n                [block]=\"false\"\n                (paramChange)=\"hostRef.onLoadMore(totalCount, $event)\"\n              >\n                Load More\n              </bb-load-button-ui>\n            </div>\n            <ng-template #LoadMoreDisabled>\n              <div\n                data-role=\"notification-list-load-more-disabled-text\"\n                class=\"bb-subtitle bb-text-support bb-text-align-center\"\n                i18n=\"Load more disabled text@@notifications.notification-list.load-more-disabled\"\n              >\n                You’ve reached the end of the list.\n              </div>\n            </ng-template>\n          </ng-container>\n        </footer>\n      </div>\n\n      <bb-notification-details\n        *ngIf=\"hostRef.selectedNotification\"\n        [notification]=\"hostRef.selectedNotification\"\n        (navigateBack)=\"hostRef.unselectNotification()\"\n        (delete)=\"hostRef.deleteNotification()\"\n        [dateFormat]=\"dateFormat\"\n      ></bb-notification-details>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #emptyState>\n    <div role=\"alert\" *ngIf=\"notifications && notifications.length === 0; else loadingState\">\n      <div class=\"bb-card__body\">\n        <bb-empty-state-ui\n          data-role=\"notifications-badge-empty-state\"\n          class=\"bb-state-container\"\n          i18n-title=\"Notifications empty state message title@@notifications.state.no-notifications.title\"\n          title=\"No Notifications\"\n          iconModifier=\"notifications-off\"\n          iconSize=\"xxl\"\n          i18n-subtitle=\"Notifications empty state message@@notifications.state.no-notifications.subtitle\"\n          subtitle=\"You don't have any notifications to be displayed\"\n        ></bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <div role=\"alert\">\n      <div class=\"bb-card__body\">\n        <bb-empty-state-ui\n          data-role=\"notifications-badge-error-state\"\n          class=\"bb-state-container\"\n          iconSize=\"xxl\"\n          iconModifier=\"error-outline\"\n          title=\"Notifications couldn’t load\"\n          i18n-title=\"Notifications are not loading title@@notifications.error-state.title\"\n          subtitle=\"Try to reload the page or contact the system administrator.\"\n          i18n-subtitle=\"Notifications are not loading subtitle@@notifications.error-state.subtitle\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #loadingState>\n    <bb-loading-indicator-ui\n      loaderSize=\"md\"\n      text=\"Loading...\"\n      i18n-test=\"Loading title@@notifications.state.loading.title\"\n    ></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n","import { Component, Directive, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { NotificationsPollingService } from '../services/notifications-polling.service';\nimport { NotificationsPaginationService } from '../services/notifications-pagination.service';\nimport { NotificationsDataService } from '../services/notifications-data.service';\nimport { NotificationsRouterService } from '../services/notifications-router.service';\nimport { combineLatest, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { debounceTime, first, map, takeUntil } from 'rxjs/operators';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport {\n  BadgeForceUpdateEventPayload,\n  NotificationItem,\n  NotificationRouting,\n  NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT,\n} from '@backbase/notifications-common-ang';\nimport { DOCUMENT } from '@angular/common';\nimport { MediaQueryService } from '@backbase/ui-ang/media-query-lib';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { WidgetPropertiesService } from '../services/widget-properties.service';\n\nexport const BADGE_FORCE_UPDATE_DEBOUNCE_TIME = 800;\n\n/** @dynamic */\n@Component({\n  selector: 'bb-notifications-badge-widget',\n  templateUrl: './notifications-badge-widget.component.html',\n  providers: [\n    NotificationsPaginationService,\n    NotificationsDataService,\n    NotificationsPollingService,\n    NotificationsRouterService,\n    WidgetPropertiesService,\n    NotificationsPaginationService,\n  ],\n})\nexport class NotificationsBadgeWidgetComponent implements OnDestroy, OnInit {\n  static idCounter = 0;\n\n  private readonly preselectedNotification$$ = new BehaviorSubject<NotificationItem | undefined>(undefined);\n\n  /**\n   * Stream of preselected notification.\n   */\n  readonly preselectedNotification$ = this.preselectedNotification$$.asObservable();\n\n  /**\n   * Preselected notification.\n   */\n  @Input() set preselectedNotification(notification: NotificationItem | undefined) {\n    if (!this.popover) return;\n    this.preselectedNotification$$.next(notification);\n    if (!this.popover.isOpen() && notification) {\n      this.popover.open();\n    }\n  }\n\n  /**\n   * Number of displayed lines in notification message.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('notificationsMessageLineAmount') set notificationsMessageLineAmountValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setNotificationsMessageLineAmount(value);\n    }\n  }\n\n  /**\n   * Display time for today relative to the current point in time (time display format).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('displayRelativeTime') set displayRelativeTimeValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplayRelativeTime(value);\n    }\n  }\n\n  /**\n   * Display See More button.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('displayShowMoreButtonInBadge') set displayShowMoreButtonInBadgeValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplayShowMoreButtonInBadge(value);\n    }\n  }\n\n  /**\n   * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('allowedRoutes') set allowedRoutesValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setAllowedRoutes(value);\n    }\n  }\n\n  /**\n   * Display Settings button (button with the Gear icon that opens Notification Preferences).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('displaySettingsButton') set displaySettingsButtonValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplaySettingsButton(value);\n    }\n  }\n\n  /**\n   * Limit of notifications per paginated request.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('pageSize') set pageSizeValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setPageSize(value);\n    }\n  }\n\n  /**\n   * Comma-separated list of notifications origins to process (empty for all).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('origins') set originsValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setOrigins(value);\n    }\n  }\n\n  /**\n   * Comma-separated list of notifications severity levels to process (empty for all).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('severityLevels') set severityLevelsValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setSeverityLevels(value);\n    }\n  }\n\n  /**\n   * Interval to poll server for unread count (in seconds).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('unreadCountUpdateInterval') set unreadCountUpdateIntervalValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setUnreadCountUpdateInterval(value);\n    }\n  }\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Redirect to Notification Preferences on Settings button click emitter.\n   */\n  @Output() notificationsSettingsOpened = new EventEmitter<void>();\n\n  /**\n   * Navigation data emitter.\n   */\n  @Output() notificationRouting = new EventEmitter<NotificationRouting>();\n\n  /**\n   * Unique id html property for each component instance\n   */\n  readonly id = `bb-notifications-badge-widget-${NotificationsBadgeWidgetComponent.idCounter++}`;\n\n  private readonly destroy$ = new Subject<void>();\n\n  /**\n   * Stream with count of unread notifications.\n   */\n  readonly unreadCount$: Observable<number | undefined> = this.notificationsPollingService.unreadNotificationsCount$;\n\n  /**\n   * Stream that adjusts the layout to the screen size by applying different translateX values.\n   */\n  readonly listTransform$ = this.mediaQService.isMediaBreakpointMatches('max-width', 'sm').pipe(\n    map(isMobileView => {\n      if (isMobileView) {\n        const badge = this.document.querySelector('.bb-notifications-badge-widget');\n\n        if (badge) {\n          const { width: badgeWidth, left } = badge.getBoundingClientRect();\n          const { width: bodyWidth } = this.document.body.getBoundingClientRect();\n\n          return `translateX(${bodyWidth - left - badgeWidth}px)`;\n        }\n      }\n\n      return undefined;\n    }),\n  );\n\n  private readonly origins$: Observable<string[]> = this.properties.origins$;\n\n  private readonly severityLevels$: Observable<string[]> = this.properties.severityLevels$;\n\n  /**\n   * Notification badge dropdown\n   */\n  @ViewChild('popover') readonly popover: NgbDropdown | undefined;\n\n  constructor(\n    private readonly notificationsPollingService: NotificationsPollingService,\n    private readonly routerService: NotificationsRouterService,\n    private readonly mediaQService: MediaQueryService,\n    private readonly properties: WidgetPropertiesService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n    @Inject(DOCUMENT) private readonly document: Document,\n  ) {}\n\n  ngOnInit() {\n    this.setupNavigationSubscriptions();\n    this.setupBadgeUpdateSubscriptions();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * The method to clear the preselected notification value.\n   *\n   * @param isOpen Is notification badge open flag\n   */\n  onOpenChange(isOpen: boolean) {\n    if (!isOpen) {\n      this.preselectedNotification$$.next(undefined);\n    }\n  }\n\n  private setupNavigationSubscriptions() {\n    this.routerService.settingsOpenedNavigation$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(this.notificationsSettingsOpened);\n\n    this.routerService.notificationRouting$.pipe(takeUntil(this.destroy$)).subscribe(this.notificationRouting);\n  }\n\n  private setupBadgeUpdateSubscriptions() {\n    let forceUpdateCounterHandler: (payload: BadgeForceUpdateEventPayload | undefined) => void;\n    const forceUpdateCounters$ = new Subject<void>();\n\n    forceUpdateCounters$\n      .pipe(debounceTime(BADGE_FORCE_UPDATE_DEBOUNCE_TIME), takeUntil(this.destroy$))\n      .subscribe(() => this.notificationsPollingService.forceUpdateCounters());\n\n    combineLatest([this.origins$, this.severityLevels$])\n      .pipe(first())\n      .subscribe(([origins, levels]) => {\n        forceUpdateCounterHandler = payload => {\n          if (\n            payload &&\n            (origins.length === 0 || (payload.origin && origins.includes(payload.origin))) &&\n            (levels.length === 0 || levels.includes(payload.level))\n          ) {\n            forceUpdateCounters$.next();\n          }\n        };\n        this.pubSub.subscribe<undefined | BadgeForceUpdateEventPayload>(\n          NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT,\n          forceUpdateCounterHandler,\n        );\n      });\n\n    this.destroy$.subscribe(() => {\n      this.pubSub.unsubscribe(NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT, forceUpdateCounterHandler);\n    });\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsBadgeCustomizable]',\n})\nexport class NotificationsBadgeWidgetCustomizableDirective extends BbTemplate<\n  NotificationsBadgeWidgetComponent,\n  {\n    unreadCount: number;\n    listTransform?: string;\n  }\n> {}\n","<ng-container\n  bbNotificationsBadgeCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    unreadCount: unreadCount$ | async,\n    listTransform: listTransform$ | async\n  }\"\n>\n</ng-container>\n<ng-template\n  bbNotificationsBadgeCustomizable\n  let-hostRef\n  let-unreadCount=\"context.unreadCount\"\n  let-listTransform=\"context.listTransform\"\n>\n  <div class=\"bb-notifications-badge-widget\">\n    <div #popover=\"ngbDropdown\" ngbDropdown placement=\"bottom-right\" (openChange)=\"hostRef.onOpenChange($event)\">\n      <button\n        bbButton\n        [attr.aria-labelledby]=\"'notifications-badge-label' + hostRef.id\"\n        color=\"transparent\"\n        class=\"bb-notifications-badge-widget__dropdown-button\"\n        ngbDropdownToggle\n      >\n        <bb-icon-ui name=\"notifications\" color=\"secondary\" data-role=\"notifications-icon\" size=\"lg\"></bb-icon-ui>\n        <bb-badge-counter-ui\n          class=\"bb-notifications-badge-widget__dropdown-button-counter\"\n          [count]=\"unreadCount\"\n          maxCount=\"99\"\n          color=\"danger\"\n          data-role=\"notifications-unread-count\"\n        ></bb-badge-counter-ui>\n      </button>\n      <div\n        ngbDropdownMenu\n        class=\"bb-notifications-badge-widget__dropdown-menu dropdown-menu-unstyled\"\n        data-role=\"notifications-list-wrapper\"\n      >\n        <div\n          class=\"bb-notifications-badge-widget__dropdown-menu-list\"\n          data-role=\"notifications-dropdown-menu-list\"\n          [style.transform]=\"listTransform\"\n        >\n          <div class=\"bb-card bb-notifications-badge-widget__list-wrapper\">\n            <bb-notifications-list\n              *ngIf=\"popover.isOpen()\"\n              (navigation)=\"popover.close()\"\n              [preselectedNotification]=\"hostRef.preselectedNotification$ | async\"\n              [dateFormat]=\"dateFormat\"\n            ></bb-notifications-list>\n          </div>\n        </div>\n      </div>\n      <span\n        i18n=\"Notifications badge aria label@notifications.badge.aria-label\"\n        [attr.id]=\"'notifications-badge-label' + hostRef.id\"\n        aria-live=\"polite\"\n        aria-relevant=\"text\"\n        class=\"sr-only\"\n      >\n        { unreadCount || 0, plural, =0 { no new notifications } =1 { {{ unreadCount }} new notification} other {\n        {{ unreadCount }} new notifications } }\n      </span>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';\nimport { HumanizedDateComponent, HumanizedDateCustomizableDirective } from './humanized-date.component';\n\n@NgModule({\n  imports: [CommonModule, BbDatePipeModule],\n  declarations: [HumanizedDateComponent, HumanizedDateCustomizableDirective],\n  exports: [HumanizedDateComponent, HumanizedDateCustomizableDirective],\n})\nexport class HumanizedDateModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  NotificationListItemCustomizableDirective,\n  NotificationsListItemComponent,\n} from './notifications-list-item.component';\n\nimport { HumanizedDateModule } from '../humanized-date/humanized-date.module';\nimport { NotificationsCommonModule } from '@backbase/notifications-common-ang';\n\nimport { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\n\nconst uiModules = [BbDatePipeModule, EllipsisModule];\nconst innerModules = [HumanizedDateModule];\nconst components = [NotificationsListItemComponent, NotificationListItemCustomizableDirective];\n\n@NgModule({\n  imports: [CommonModule, NotificationsCommonModule, ...uiModules, ...innerModules],\n  declarations: [...components],\n  exports: [NotificationsCommonModule, ...uiModules, ...innerModules, ...components],\n})\nexport class NotificationsListItemModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  NotificationDetailsComponent,\n  NotificationDetailsCustomizableDirective,\n} from './notification-details.component';\nimport {\n  NotificationDetailsItemComponent,\n  NotificationDetailsItemCustomizableDirective,\n} from './notification-details-item/notification-details-item.component';\nimport { HumanizedDateModule } from '../humanized-date/humanized-date.module';\nimport { NotificationsCommonModule } from '@backbase/notifications-common-ang';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nconst uiModules = [ButtonModule, FocusModule, EllipsisModule, TooltipModule];\nconst innerModules = [HumanizedDateModule];\nconst components = [\n  NotificationDetailsComponent,\n  NotificationDetailsCustomizableDirective,\n  NotificationDetailsItemComponent,\n  NotificationDetailsItemCustomizableDirective,\n];\n\n@NgModule({\n  imports: [CommonModule, NotificationsCommonModule, ...uiModules, ...innerModules],\n  declarations: [...components],\n  exports: [NotificationsCommonModule, ...uiModules, ...innerModules, ...components],\n})\nexport class NotificationDetailsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NotificationsListComponent, NotificationsListCustomizableDirective } from './notifications-list.component';\nimport { NotificationsListItemModule } from '../notifications-list-item/notifications-list-item.module';\nimport { NotificationDetailsModule } from '../notification-details/notification-details.module';\n\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { AlertModule } from '@backbase/ui-ang/alert';\n\nconst uiModules = [\n  EmptyStateModule,\n  ErrorCommonStateModule,\n  LoadButtonModule,\n  LoadingIndicatorModule,\n  ButtonModule,\n  AlertModule,\n];\nconst innerModules = [NotificationsListItemModule, NotificationDetailsModule];\nconst components = [NotificationsListComponent, NotificationsListCustomizableDirective];\n\n@NgModule({\n  imports: [CommonModule, ...uiModules, ...innerModules],\n  declarations: [...components],\n  exports: [...uiModules, ...innerModules, ...components],\n})\nexport class NotificationsListModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport {\n  NotificationsBadgeWidgetComponent,\n  NotificationsBadgeWidgetCustomizableDirective,\n} from './components/notifications-badge-widget.component';\nimport { NotificationsListModule } from './components/notifications-list/notifications-list.module';\nimport { NotificationsListItemModule } from './components/notifications-list-item/notifications-list-item.module';\n\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { BadgeCounterModule } from '@backbase/ui-ang/badge-counter';\nimport { MediaQueryModule } from '@backbase/ui-ang/media-query-lib';\n\nconst uiModules = [BadgeModule, ButtonModule, IconModule, NgbDropdownModule, BadgeCounterModule, MediaQueryModule];\nconst innerModules = [NotificationsListItemModule, NotificationsListModule];\nconst components = [NotificationsBadgeWidgetComponent, NotificationsBadgeWidgetCustomizableDirective];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { NotificationsBadgeWidgetComponent },\n    }),\n    ...uiModules,\n    ...innerModules,\n  ],\n  declarations: [...components],\n  exports: [...uiModules, ...innerModules, ...components],\n})\nexport class NotificationsBadgeWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i2.WidgetPropertiesService","i2.NotificationsPollingService","i1.WidgetPropertiesService","i2","i4.HumanizedDateComponent","i6","i3.HumanizedDateComponent","i4","i5","i2.NotificationDetailsItemComponent","i3","i7","i9.NotificationsListItemComponent","i11.NotificationDetailsComponent","i15","i1.NotificationsPollingService","i2.NotificationsRouterService","i4.WidgetPropertiesService","i8","i9","i10","uiModules","innerModules","components"],"mappings":"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"}