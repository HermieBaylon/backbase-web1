{"version":3,"file":"backbase-notifications-badge-widget-ang.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/notifications-badge-widget-ang/src/lib/services/widget-properties.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/services/notifications-polling.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/services/notifications-pagination.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/services/notifications-data.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/services/notifications-router.service.ts","../../../../libs/notifications-badge-widget-ang/src/lib/models/notification-severity.ts","../../../../libs/notifications-badge-widget-ang/src/lib/models/severity-level-icon-map.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/humanized-date/humanized-date.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/humanized-date/humanized-date.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list-item/notifications-list-item.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list-item/notifications-list-item.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details-item/notification-details-item.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details-item/notification-details-item.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list/notifications-list.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list/notifications-list.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-badge-widget.component.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-badge-widget.component.html","../../../../libs/notifications-badge-widget-ang/src/lib/components/humanized-date/humanized-date.module.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list-item/notifications-list-item.module.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notification-details/notification-details.module.ts","../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list/notifications-list.module.ts","../../../../libs/notifications-badge-widget-ang/src/lib/notifications-badge-widget.module.ts","../../../../libs/notifications-badge-widget-ang/src/backbase-notifications-badge-widget-ang.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport {\n  getPropertyValue,\n  modelItemToBoolean,\n  secondsToMilliseconds,\n  BaseWidgetPropertiesService,\n  shareReplayOnce,\n} from '@backbase/notifications-common-ang';\nimport { ItemModel } from '@backbase/foundation-ang/core';\n\nexport interface WidgetProperties {\n  displayRelativeTime: boolean;\n  allowedRoutes: string[];\n  displaySettingsButton: boolean;\n  notificationsMessageLineAmount: number;\n  displayShowMoreButtonInBadge: boolean;\n  pageSize: number;\n  origins: string[];\n  severityLevels: string[];\n  unreadCountUpdateInterval: number;\n}\n\nexport const DefaultWidgetProperties: WidgetProperties = {\n  displayRelativeTime: false,\n  allowedRoutes: [],\n  displaySettingsButton: true,\n  notificationsMessageLineAmount: 2,\n  displayShowMoreButtonInBadge: false,\n  pageSize: 5,\n  origins: [],\n  severityLevels: [],\n  unreadCountUpdateInterval: 15,\n};\n\n@Injectable()\nexport class WidgetPropertiesService extends BaseWidgetPropertiesService {\n  constructor(@Optional() protected readonly itemModel?: ItemModel) {\n    super(itemModel);\n  }\n\n  private readonly displayRelativeTime$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly displaySettingsButton$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly notificationsMessageLineAmount$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly displayShowMoreButtonInBadge$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly pageSize$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly unreadCountUpdateInterval$$ = new BehaviorSubject<number | undefined>(undefined);\n\n  readonly displayRelativeTime$ = getPropertyValue(this.displayRelativeTime$$, this.displayRelativeTime);\n  readonly displaySettingsButton$ = getPropertyValue(this.displaySettingsButton$$, this.displaySettingsButton);\n  readonly notificationsMessageLineAmount$ = getPropertyValue(\n    this.notificationsMessageLineAmount$$,\n    this.notificationsMessageLineAmount,\n  );\n  readonly displayShowMoreButtonInBadge$ = getPropertyValue(\n    this.displayShowMoreButtonInBadge$$,\n    this.displayShowMoreButtonInBadge,\n  );\n  readonly pageSize$ = getPropertyValue(this.pageSize$$, this.pageSize);\n  readonly unreadCountUpdateInterval$ = getPropertyValue(\n    this.unreadCountUpdateInterval$$,\n    this.unreadCountUpdateInterval,\n  );\n\n  private get displayRelativeTime(): Observable<boolean> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.displayRelativeTime);\n    }\n\n    return this.itemModel\n      .property('displayRelativeTime', DefaultWidgetProperties.displayRelativeTime)\n      .pipe(map(modelItemToBoolean), first());\n  }\n\n  private get displaySettingsButton(): Observable<boolean> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.displaySettingsButton);\n    }\n\n    return this.itemModel\n      .property('displaySettingsButton', DefaultWidgetProperties.displaySettingsButton)\n      .pipe(map(modelItemToBoolean), first());\n  }\n\n  private get notificationsMessageLineAmount(): Observable<number> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.notificationsMessageLineAmount);\n    }\n\n    return this.itemModel\n      .property('notificationsMessageLineAmount', DefaultWidgetProperties.notificationsMessageLineAmount)\n      .pipe(map(Number), first());\n  }\n\n  private get displayShowMoreButtonInBadge(): Observable<boolean> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.displayShowMoreButtonInBadge);\n    }\n\n    return this.itemModel\n      .property('displayShowMoreButtonInBadge', DefaultWidgetProperties.displayShowMoreButtonInBadge)\n      .pipe(map(modelItemToBoolean), first());\n  }\n\n  private get pageSize(): Observable<number> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.pageSize);\n    }\n\n    return this.itemModel.property('pageSize', DefaultWidgetProperties.pageSize).pipe(map(Number), shareReplayOnce());\n  }\n\n  private get unreadCountUpdateInterval(): Observable<number> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.unreadCountUpdateInterval * 1000);\n    }\n\n    return this.itemModel.property('unreadCountUpdateInterval', DefaultWidgetProperties.unreadCountUpdateInterval).pipe(\n      map(Number),\n      map(n => n * 1000),\n      shareReplayOnce(),\n    );\n  }\n\n  setDisplayRelativeTime(value: string | boolean): void {\n    this.displayRelativeTime$$.next(modelItemToBoolean(value));\n  }\n\n  setDisplaySettingsButton(value: string | boolean): void {\n    this.displaySettingsButton$$.next(modelItemToBoolean(value));\n  }\n\n  setNotificationsMessageLineAmount(value: string | number): void {\n    this.notificationsMessageLineAmount$$.next(Number(value));\n  }\n\n  setDisplayShowMoreButtonInBadge(value: string | boolean): void {\n    this.displayShowMoreButtonInBadge$$.next(modelItemToBoolean(value));\n  }\n\n  setPageSize(value: string | number): void {\n    this.pageSize$$.next(Number(value));\n  }\n\n  setUnreadCountUpdateInterval(value: string | number): void {\n    const updateInterval = Number(value);\n    if (!isNaN(updateInterval) && updateInterval > 0) {\n      this.unreadCountUpdateInterval$$.next(secondsToMilliseconds(updateInterval));\n    }\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { NotificationsHttpService } from '@backbase/data-ang/notifications';\nimport { asyncScheduler, BehaviorSubject, combineLatest, merge, Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { catchError, delay, filter, first, map, observeOn, pairwise, switchMap, tap } from 'rxjs/operators';\nimport { enterZone, leaveZone, shareReplayOnce } from '@backbase/notifications-common-ang';\nimport { WidgetPropertiesService } from './widget-properties.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class NotificationsPollingService {\n  private readonly forceUpdateCountersSubject = new Subject();\n\n  private readonly requestsInterval$ = this.properties.unreadCountUpdateInterval$;\n\n  private readonly repeat$ = new ReplaySubject(1);\n  private readonly load$ = merge(\n    of(''),\n    this.forceUpdateCountersSubject,\n    merge(this.forceUpdateCountersSubject, this.repeat$).pipe(\n      switchMap(() => this.requestsInterval$),\n      switchMap(interval => of('').pipe(delay(interval, leaveZone(this.ngZone, asyncScheduler)))),\n      observeOn(enterZone(this.ngZone, asyncScheduler)),\n    ),\n  );\n\n  private readonly updateCountersErrorSubject$$ = new BehaviorSubject<HttpErrorResponse | undefined>(undefined);\n\n  /**\n   * Stream with update counters request errors\n   */\n  readonly updateCountersError$ = this.updateCountersErrorSubject$$.asObservable();\n\n  /**\n   * Stream with unread notifications count\n   */\n  readonly unreadNotificationsCount$ = this.load$.pipe(\n    switchMap(() => this.requestCount()),\n    tap(() => this.repeat$.next()),\n    filter(count => typeof count !== 'undefined'),\n    shareReplayOnce(),\n  );\n\n  /**\n   * Stream with flag of new available notifications\n   */\n  readonly newNotificationsAvailable$: Observable<boolean> = this.unreadNotificationsCount$.pipe(\n    pairwise(),\n    map(([prev, cur]) => {\n      if (prev === null || prev === undefined) {\n        return false;\n      }\n      if (cur === null || cur === undefined) {\n        return false;\n      }\n\n      return cur - prev > 0;\n    }),\n    filter<boolean>(Boolean),\n  );\n\n  private requestCount() {\n    const origins$ = this.properties.origins$;\n\n    const severityLevels$ = this.properties.severityLevels$;\n\n    return combineLatest([origins$, severityLevels$]).pipe(\n      first(),\n      switchMap(([origins, levels]) =>\n        this.notificationHttpService.getUnreadCount({\n          ...(origins.length && { origins }),\n          ...(levels.length && { levels }),\n        }),\n      ),\n      map(body => {\n        this.updateCountersErrorSubject$$.next(undefined);\n\n        return body?.unread;\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.updateCountersErrorSubject$$.next(error);\n\n        return of(undefined);\n      }),\n    );\n  }\n\n  constructor(\n    private readonly notificationHttpService: NotificationsHttpService,\n    private readonly properties: WidgetPropertiesService,\n    private readonly ngZone: NgZone,\n  ) {}\n\n  /**\n   * Method to trigger force update on unread notifications counter\n   */\n  forceUpdateCounters() {\n    this.forceUpdateCountersSubject.next();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  catchError,\n  distinctUntilChanged,\n  finalize,\n  map,\n  scan,\n  share,\n  switchMap,\n  tap,\n  withLatestFrom,\n  startWith,\n  filter,\n} from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject, zip } from 'rxjs';\n\nimport { NotificationsHttpService } from '@backbase/data-ang/notifications';\nimport { toISOExtendedFormat, NotificationItem } from '@backbase/notifications-common-ang';\nimport { WidgetPropertiesService } from './widget-properties.service';\n\ninterface RequestOptionsForNotificationsPage {\n  from: number;\n  createdOn?: string;\n  append: boolean;\n}\n\n@Injectable()\nexport class NotificationsPaginationService {\n  constructor(\n    private readonly notificationHttpService: NotificationsHttpService,\n    private readonly properties: WidgetPropertiesService,\n  ) {}\n\n  /**\n   * Stream with page size\n   */\n  readonly sizeProperty$ = this.properties.pageSize$;\n\n  private readonly pageSubject = new Subject<RequestOptionsForNotificationsPage>();\n  private readonly page$: Observable<RequestOptionsForNotificationsPage> = this.pageSubject.asObservable();\n  /**\n   * Stream with current page number (work with loadPage method)\n   */\n  readonly pageFrom$ = this.page$.pipe(map(p => p.from));\n\n  private readonly isLoadingSubject = new BehaviorSubject(false);\n\n  /**\n   * Stream with loading flag\n   */\n  readonly isLoading$ = this.isLoadingSubject.asObservable();\n\n  // eslint-disable-next-line\n  private readonly totalCountSubject = new Subject<number>();\n\n  /**\n   * Stream with total count of notifications\n   */\n  readonly totalCount$ = this.totalCountSubject.asObservable();\n\n  private readonly origins$ = this.properties.origins$;\n  private readonly severityLevels$ = this.properties.severityLevels$;\n\n  private readonly notificationsRequest$ = combineLatest([\n    this.page$,\n    this.sizeProperty$,\n    this.origins$,\n    this.severityLevels$,\n  ]).pipe(\n    switchMap(([page, size, origins, levels]) => {\n      this.isLoadingSubject.next(true);\n\n      return this.notificationHttpService\n        .getNotifications(\n          {\n            toDate:\n              page.createdOn && new Date(toISOExtendedFormat(page.createdOn)).toISOString().replace(/\\.\\d+Z/, 'Z'),\n            from: page.from,\n            size,\n            ...(origins.length && { origins }),\n            ...(levels.length && { levels }),\n          },\n          'response',\n        )\n        .pipe(\n          tap(res => {\n            this.totalCountSubject.next(Number(res.headers.get('x-total-count') || '0'));\n          }),\n          map(({ body, headers }) => ({ data: body || [], headers, error: undefined })),\n          catchError(error => of({ data: [] as NotificationItem[], headers: undefined, error })),\n          finalize(() => {\n            this.isLoadingSubject.next(false);\n          }),\n        );\n    }),\n    share(),\n  );\n\n  private readonly notificationsPage$ = this.notificationsRequest$.pipe(map(({ data }) => data));\n\n  private readonly markAllNotificationsAsRead = new BehaviorSubject(false);\n\n  /**\n   * Stream of notifications\n   */\n  readonly notifications$: Observable<NotificationItem[]> = combineLatest([\n    zip(this.page$, this.notificationsPage$).pipe(\n      // reset accumulator for every first page in Append mode or for every page in regular mode\n      scan(\n        (\n          allNotifications: NotificationItem[],\n          [page, notifications]: [RequestOptionsForNotificationsPage, NotificationItem[]],\n        ) => (!page.append || page.from === 0 ? [] : allNotifications).concat(notifications),\n        [],\n      ),\n    ),\n    this.markAllNotificationsAsRead.pipe(startWith(true), filter(Boolean)),\n  ]).pipe(\n    withLatestFrom(this.markAllNotificationsAsRead),\n    // eslint-disable-next-line arrow-body-style\n    map(([[notifications], allAsRead]) => {\n      return allAsRead ? notifications.map(item => (!item.read && { ...item, read: true }) || item) : notifications;\n    }),\n  );\n\n  /**\n   * Stream of errors\n   */\n  readonly error$ = this.notificationsRequest$.pipe(\n    map(({ error }) => error),\n    distinctUntilChanged(),\n  );\n\n  private loadPageData(page: number, append = false, createdOn?: string) {\n    this.pageSubject.next({ from: page, append, createdOn: createdOn });\n  }\n\n  /**\n   * Method to load notifications of specified page\n   *\n   * @param page Page number\n   */\n  loadPage(page: number) {\n    this.loadPageData(page);\n  }\n\n  /**\n   * Method to load next page of notifications\n   *\n   * @param page Page number\n   * @param createdOn Created on notification date\n   */\n  loadMore(page: number, createdOn?: string) {\n    this.loadPageData(page, true, createdOn);\n  }\n\n  /**\n   * Mark all notifications as read\n   *\n   * @param read Is read flag\n   */\n  markAllAsRead(read: boolean) {\n    this.markAllNotificationsAsRead.next(read);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NotificationsHttpService } from '@backbase/data-ang/notifications';\nimport { Observable, BehaviorSubject, EMPTY } from 'rxjs';\nimport { tap, catchError, finalize } from 'rxjs/operators';\n\nimport { NotificationsPollingService } from './notifications-polling.service';\n\n@Injectable()\nexport class NotificationsDataService {\n  constructor(\n    private readonly notificationHttpService: NotificationsHttpService,\n    private readonly notificationsPollingService: NotificationsPollingService,\n  ) {}\n\n  private readonly markAllNotificationAsReadErrorSubject = new BehaviorSubject(false);\n\n  /**\n   * Mark all notification as read error subject\n   */\n  readonly markAllNotificationAsReadError = this.markAllNotificationAsReadErrorSubject\n    .asObservable()\n    .pipe(finalize(() => this.markAllNotificationAsReadErrorSubject.next(false)));\n\n  /**\n   *\n   * Method to mark a notification as read by its id\n   *\n   * @param notificationId Notification\n   * @returns  Mark as read stream\n   */\n  markNotificationAsRead(notificationId: string): Observable<unknown> {\n    return this.notificationHttpService\n      .putMarkAsRead({ id: notificationId, markAsReadPutRequestBody: { read: true } })\n      .pipe(\n        tap(() => {\n          this.notificationsPollingService.forceUpdateCounters();\n        }),\n      );\n  }\n\n  /**\n   * Mark all notifications as read\n   *\n   * @returns Mark all notifications as read stream\n   */\n  markAllNotificationAsRead(): Observable<unknown> {\n    return this.notificationHttpService.putRead(undefined).pipe(\n      catchError(() => {\n        this.markAllNotificationAsReadErrorSubject.next(true);\n\n        return EMPTY;\n      }),\n      tap(() => {\n        this.markAllNotificationAsReadErrorSubject.next(false);\n        this.notificationsPollingService.forceUpdateCounters();\n      }),\n    );\n  }\n\n  /**\n   * @param id Delete notification by id\n   * @returns Notification delete stream\n   */\n  deleteNotification(id: string): Observable<unknown> {\n    return this.notificationHttpService.deleteNotification({ id });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { NotificationRouting } from '@backbase/notifications-common-ang';\n\n@Injectable()\nexport class NotificationsRouterService {\n  private readonly notificationsSettingsOpenedSubject = new Subject<void>();\n  /**\n   * Settings opened navigation subject\n   */\n  readonly settingsOpenedNavigation$: Observable<void> = this.notificationsSettingsOpenedSubject.asObservable();\n\n  private readonly notificationRoutingSubject = new Subject<NotificationRouting>();\n  /**\n   * Notification routing subject\n   */\n  readonly notificationRouting$: Observable<NotificationRouting> = this.notificationRoutingSubject.asObservable();\n\n  /**\n   * Emit notification settings navigation\n   */\n  emitSettingsOpenedNavigation() {\n    this.notificationsSettingsOpenedSubject.next();\n  }\n\n  /**\n   * Emit notification routing\n   *\n   * @param routing Routing subject\n   */\n  emitNotificationRouting(routing: NotificationRouting) {\n    this.notificationRoutingSubject.next(routing);\n  }\n}\n","export enum NotificationSeverity {\n  Alert = 'ALERT',\n  Warning = 'WARNING',\n  Info = 'INFO',\n  Success = 'SUCCESS',\n}\n","import { NotificationSeverity } from './notification-severity';\n\nexport interface SeverityLevelIconMap {\n  [key: string]: {\n    icon: string;\n    color: string;\n  };\n}\n\nexport const severityLevelIconMap: Readonly<SeverityLevelIconMap> = {\n  [NotificationSeverity.Success]: {\n    icon: 'success',\n    color: 'success',\n  },\n  [NotificationSeverity.Info]: {\n    icon: 'info',\n    color: 'primary',\n  },\n  [NotificationSeverity.Alert]: {\n    icon: 'info',\n    color: 'danger',\n  },\n  [NotificationSeverity.Warning]: {\n    icon: 'warning',\n    color: 'warning',\n  },\n};\n","import { Component, Directive, Input } from '@angular/core';\nimport { toISOExtendedFormat } from '@backbase/notifications-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nconst DEFAULT_FORMAT_FOR_DATE_IN_PAST = 'MM/dd/yy';\n\n@Component({\n  selector: 'bb-humanized-date',\n  templateUrl: './humanized-date.component.html',\n})\nexport class HumanizedDateComponent {\n  private readonly today: Date;\n  private readonly yesterday: Date;\n  private _date: Date | undefined;\n  private _minutesFromNow: number | undefined;\n  private _isWithinHour = false;\n  private _isToday = false;\n  private _isYesterday = false;\n\n  /**\n   *  Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n  /**\n   * Flag that defines if we should display relative time for today.\n   */\n  @Input() displayRelativeTime = false;\n  /**\n   * Notification date.\n   */\n  @Input() set date(value: Date | string | undefined) {\n    const date = this.parseDate(value);\n\n    if (date) {\n      this._date = date;\n      this.setDateFlags();\n    } else {\n      this.resetStateToDefaults();\n    }\n  }\n\n  constructor() {\n    this.today = new Date();\n\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    this.yesterday = yesterday;\n  }\n\n  get dateFormatForPast(): string {\n    return this.dateFormat || DEFAULT_FORMAT_FOR_DATE_IN_PAST;\n  }\n\n  /**\n   * Date getter.\n   */\n  // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n  get date(): Date | string | undefined {\n    return this._date;\n  }\n\n  /**\n   *\n   * Is date within an hour from now flag getter.\n   */\n  get isWithinHour(): boolean {\n    return this._isWithinHour;\n  }\n\n  /**\n   * Is date within the current day flag getter.\n   */\n  get isToday(): boolean {\n    return this._isToday;\n  }\n\n  /**\n   * Is date within the yesterday date flag getter.\n   */\n  get isYesterday(): boolean {\n    return this._isYesterday;\n  }\n\n  /**\n   * How many minutes from now is the date getter.\n   */\n  get minutesFromNow(): number | undefined {\n    return this._minutesFromNow;\n  }\n\n  private setDateFlags() {\n    this._minutesFromNow = this.getMinutesFromNow(this._date as Date, this.today);\n    this._isToday = this.isSameDay(this._date, this.today);\n    this._isYesterday = this.isSameDay(this._date, this.yesterday);\n    this._isWithinHour = Number(this.minutesFromNow) < 60;\n  }\n\n  private resetStateToDefaults() {\n    this._date = undefined;\n    this._minutesFromNow = undefined;\n    this._isWithinHour = false;\n    this._isToday = false;\n    this._isYesterday = false;\n  }\n\n  private parseDate(value: Date | string | undefined): Date | undefined {\n    if (typeof value === 'undefined' || value instanceof Date) return value;\n\n    return new Date(toISOExtendedFormat(value)).valueOf() ? new Date(toISOExtendedFormat(value)) : undefined;\n  }\n\n  private isSameDay(date1?: Date, date2?: Date): boolean {\n    if (!date1 || !date2) {\n      return false;\n    }\n\n    return date1.toDateString() === date2.toDateString();\n  }\n\n  private getMinutesFromNow(dateTime: Date, currentDateTime: Date): number {\n    const minutesFromNow = Math.floor((currentDateTime.getTime() - dateTime.getTime()) / 60000);\n\n    return minutesFromNow > 0 ? minutesFromNow : 0;\n  }\n}\n\n@Directive({\n  selector: '[bbHumanizedDateCustomizable]',\n})\nexport class HumanizedDateCustomizableDirective extends BbTemplate<HumanizedDateComponent, void> {}\n","<ng-container bbHumanizedDateCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbHumanizedDateCustomizable let-hostRef>\n  <div class=\"sr-only\" i18n=\"Humanized date title@@humanized.date.title\">,Date:</div>\n  <ng-container *ngIf=\"hostRef.date as date\">\n    <time *ngIf=\"hostRef.isToday\" class=\"bb-subheader bb-subheader--regular bb-text-nowrap\">\n      <ng-container *ngIf=\"hostRef.displayRelativeTime; else today\">\n        <ng-container\n          *ngIf=\"hostRef.isWithinHour; else moreThanHourAgo\"\n          i18n=\"Notifications time less than an hour ago date@@notifications.humanized-date.less-than-an-hour-ago\"\n        >\n          { hostRef.minutesFromNow, plural, =0 {now} other {{{hostRef.minutesFromNow}} min ago} }\n        </ng-container>\n\n        <ng-template #moreThanHourAgo>\n          {{ date | bbDate: 'shortTime' }}\n        </ng-template>\n      </ng-container>\n\n      <ng-template #today i18n=\"Notifications today date@@notifications.humanized-date.today\"> today </ng-template>\n    </time>\n\n    <time\n      *ngIf=\"hostRef.isYesterday\"\n      class=\"bb-subheader bb-subheader--regular\"\n      i18n=\"Notifications yesterday date@@notifications.humanized-date.yesterday\"\n    >\n      yesterday\n    </time>\n    <time\n      *ngIf=\"!hostRef.isToday && !hostRef.isYesterday\"\n      class=\"bb-subheader bb-subheader--regular\"\n      [attr.aria-label]=\"date | bbDate: 'mediumDate'\"\n    >\n      {{ date | bbDate: dateFormatForPast }}\n    </time>\n  </ng-container>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationItem } from '@backbase/notifications-common-ang';\n\nimport { SeverityLevelIconMap, severityLevelIconMap } from '../../models/severity-level-icon-map';\nimport { Observable } from 'rxjs';\nimport { WidgetPropertiesService } from '../../services/widget-properties.service';\n\n@Component({\n  selector: 'bb-notifications-list-item',\n  templateUrl: './notifications-list-item.component.html',\n})\nexport class NotificationsListItemComponent {\n  static idCounter = 0;\n\n  /**\n   * The unique ID HTML property for each component instance.\n   */\n  readonly id = `bb-notifications-badge-list-item-${NotificationsListItemComponent.idCounter++}`;\n\n  /**\n   * Notification item data.\n   */\n  @Input() notification!: NotificationItem;\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Event to open notification details.\n   */\n  @Output() openDetails = new EventEmitter<Event>();\n\n  /**\n   * Stream of widget property with the number of lines to show as a notification message.\n   */\n  readonly notificationsMessageLineAmount$: Observable<number> = this.properties.notificationsMessageLineAmount$;\n\n  /**\n   * Stream of widget property with a flag that defines if we should display relative time for today.\n   */\n  readonly displayRelativeTime$: Observable<boolean> = this.properties.displayRelativeTime$;\n\n  /*\n   * Stream of widget property with a flag that defines if we should display relative time for today.\n   */\n  readonly displayShowMoreButtonInBadge$: Observable<boolean> = this.properties.displayShowMoreButtonInBadge$;\n\n  /**\n   * Notifications severity map\n   */\n  readonly levelMap: SeverityLevelIconMap = severityLevelIconMap;\n\n  /**\n   * Getter for icon name from severity level icon map due to level of notification.\n   */\n  get icon(): string {\n    return this.levelMap[this.notification.level].icon;\n  }\n\n  /**\n   * Getter for icon color from severity level icon map due to level of notification.\n   */\n  get color(): string {\n    return this.levelMap[this.notification.level].color;\n  }\n\n  /**\n   * Method to open notification details from the parent component.\n   *\n   * @param event Click event\n   */\n  openNotificationDetails(event: Event) {\n    event.stopPropagation();\n    this.openDetails.emit(event);\n  }\n\n  constructor(private readonly properties: WidgetPropertiesService) {}\n}\n\n@Directive({\n  selector: '[bbNotificationsListItemCustomizable]',\n})\nexport class NotificationListItemCustomizableDirective extends BbTemplate<\n  NotificationsListItemComponent,\n  {\n    notificationsMessageLineAmount: number;\n  }\n> {}\n","<ng-container\n  bbNotificationsListItemCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    notificationsMessageLineAmount: notificationsMessageLineAmount$ | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbNotificationsListItemCustomizable\n  let-hostRef\n  let-notificationsMessageLineAmount=\"context.notificationsMessageLineAmount\"\n>\n  <div\n    tabindex=\"0\"\n    class=\"bb-notifications-badge-list-item bb-notification bb-notification--flush\"\n    data-role=\"notifications-list-item\"\n    [class.bb-notifications-badge-list-item--unread]=\"!hostRef.notification.read\"\n  >\n    <span\n      class=\"sr-only\"\n      i18n=\"Notification item read/unread status@@notifications.list.notification-details.read-unread-status\"\n    >\n      { hostRef.notification.read, select, true { viewed } false { new } } notification,\n    </span>\n    <span\n      class=\"sr-only\"\n      i18n=\"Notification item severity level@@notifications.list.notification-details.read-unread-status\"\n    >\n      { hostRef.notification.level, select, ALERT { Alert } INFO { Info } SUCCESS { Success } WARNING { Warning } },\n    </span>\n    <bb-icon-ui\n      [name]=\"hostRef.icon\"\n      [color]=\"hostRef.color\"\n      class=\"bb-notification__icon\"\n      data-role=\"notifications-list-item-severity-level-icon\"\n    ></bb-icon-ui>\n    <div class=\"bb-notifications-badge-list-item__body bb-notification__body\">\n      <div\n        class=\"bb-notifications-badge-list-item__header bb-notification__title bb-stack\"\n        data-role=\"notification-heading\"\n      >\n        <bb-ellipsis-ui\n          class=\"bb-notifications-badge-list-item__title bb-stack__item bb-text-align-left\"\n          data-role=\"notifications-list-item-title\"\n        >\n          <span [innerHTML]=\"hostRef.notification | notificationLocalization: 'title'\"></span>\n        </bb-ellipsis-ui>\n        <bb-humanized-date\n          class=\"bb-stack__item bb-stack__item--push-right\"\n          [date]=\"hostRef.notification.createdOn\"\n          [displayRelativeTime]=\"hostRef.displayRelativeTime$ | async\"\n          data-role=\"notification-list-item-creation-date\"\n          [dateFormat]=\"dateFormat\"\n        ></bb-humanized-date>\n      </div>\n      <bb-ellipsis-ui\n        data-role=\"notifications-list-item-content\"\n        aria-hidden=\"true\"\n        class=\"bb-notifications-badge-list-item__content bb-text-align-left bb-stack bb-block bb-block--sm\"\n        [tooltipTriggers]=\"''\"\n        [lineClamp]=\"notificationsMessageLineAmount\"\n      >\n        <div\n          #notificationMessage\n          [innerHTML]=\"\n            hostRef.notification | notificationLocalization: 'message' | interpolateLink: hostRef.notification:false\n          \"\n        ></div>\n      </bb-ellipsis-ui>\n      <button\n        type=\"button\"\n        data-role=\"notifications-list-item-show-more-button\"\n        *ngIf=\"hostRef.displayShowMoreButtonInBadge$ | async\"\n        class=\"btn-link-text bb-text-bold bb-block bb-block--sm\"\n        (click)=\"hostRef.openNotificationDetails($event)\"\n        aria-label=\"See more notification details\"\n        i18n=\"Notification badge See more button@@notifications.list.see-more.button\"\n        i18n-aria-label=\"Aria-label for See more button@@notifications.list.see-more.button.aria-label\"\n      >\n        <span>See more</span>\n      </button>\n      <bb-notifications-capability-icon\n        aria-hidden=\"true\"\n        [origin]=\"hostRef.notification?.origin\"\n      ></bb-notifications-capability-icon>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationItem } from '@backbase/notifications-common-ang';\nimport { SeverityLevelIconMap, severityLevelIconMap } from '../../../models/severity-level-icon-map';\nimport { Observable } from 'rxjs';\nimport { WidgetPropertiesService } from '../../../services/widget-properties.service';\n\n@Component({\n  selector: 'bb-notification-details-item',\n  templateUrl: './notification-details-item.component.html',\n})\nexport class NotificationDetailsItemComponent {\n  /**\n   * Notifications severity map\n   */\n  readonly levelMap: SeverityLevelIconMap = severityLevelIconMap;\n\n  /**\n   * Notification item data.\n   */\n  @Input() notification!: NotificationItem;\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Stream of a flag that defines if we should display relative time for today.\n   */\n  readonly displayRelativeTime$: Observable<boolean> = this.properties.displayRelativeTime$;\n\n  /**\n   * Getter for icon name from severity level icon map due to level of notification.\n   */\n  get icon(): string {\n    return this.levelMap[this.notification.level].icon;\n  }\n\n  /**\n   * Getter for icon color from severity level icon map due to level of notification.\n   */\n  get color(): string {\n    return this.levelMap[this.notification.level].color;\n  }\n\n  constructor(private readonly properties: WidgetPropertiesService) {}\n}\n\n@Directive({\n  selector: '[bbNotificationDetailsItemCustomizable]',\n})\nexport class NotificationDetailsItemCustomizableDirective extends BbTemplate<NotificationDetailsItemComponent, void> {}\n","<ng-container bbNotificationDetailsItemCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbNotificationDetailsItemCustomizable let-hostRef>\n  <div class=\"bb-notification bb-notification--flush\">\n    <bb-icon-ui\n      class=\"bb-notification__icon\"\n      [name]=\"hostRef.icon\"\n      [color]=\"hostRef.color\"\n      data-role=\"notification-details-icon\"\n    ></bb-icon-ui>\n    <div class=\"bb-notification__body\">\n      <div class=\"bb-notification__title bb-stack\">\n        <span\n          class=\"bb-stack__item break-word bb-text-default\"\n          data-role=\"notification-details-title\"\n          [innerHTML]=\"hostRef.notification | notificationLocalization: 'title'\"\n        ></span>\n        <bb-humanized-date\n          class=\"bb-stack__item bb-stack__item--push-right\"\n          [date]=\"hostRef.notification.createdOn\"\n          [displayRelativeTime]=\"hostRef.displayRelativeTime$ | async\"\n          [dateFormat]=\"dateFormat\"\n          data-role=\"notification-details-message\"\n        ></bb-humanized-date>\n      </div>\n      <div class=\"bb-stack bb-block bb-block--sm\">\n        <div\n          data-role=\"notification-details-message-text\"\n          class=\"break-word bb-text-align-left\"\n          [innerHTML]=\"\n            hostRef.notification | notificationLocalization: 'message' | interpolateLink: hostRef.notification\n          \"\n        ></div>\n      </div>\n      <bb-notifications-capability-icon [origin]=\"hostRef.notification?.origin\"></bb-notifications-capability-icon>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationItem } from '@backbase/notifications-common-ang';\n\n@Component({\n  selector: 'bb-notification-details',\n  templateUrl: './notification-details.component.html',\n})\nexport class NotificationDetailsComponent {\n  /**\n   * Notification item data.\n   */\n  @Input() notification!: NotificationItem;\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Event to navigate back to notifications list.\n   */\n  @Output() navigateBack = new EventEmitter<void>();\n\n  /**\n   * Event to delete notification.\n   */\n  @Output() delete = new EventEmitter<void>();\n\n  /**\n   * Method to emit delete notification event.\n   */\n  deleteNotification() {\n    this.delete.emit();\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationDetailsCustomizable]',\n})\nexport class NotificationDetailsCustomizableDirective extends BbTemplate<NotificationDetailsComponent, void> {}\n","<ng-container bbNotificationDetailsCustomizable [bbHostRef]=\"this\"> </ng-container>\n\n<ng-template bbNotificationDetailsCustomizable let-hostRef>\n  <div role=\"dialog\" aria-modal=\"false\">\n    <div class=\"bb-card__header\">\n      <div class=\"bb-notifications-badge-widget__back-button bb-stack\">\n        <button\n          bbFocus\n          bbButton\n          color=\"link-text\"\n          class=\"bb-stack__item--push-left\"\n          data-role=\"notification-details-go-back-btn\"\n          (click)=\"hostRef.navigateBack.emit()\"\n        >\n          <bb-icon-ui name=\"arrow-back\" color=\"info\"></bb-icon-ui>\n          <span i18n=\"Notifications details Go back button@@notifications.details.go-back-button\">\n            Back to notifications\n          </span>\n        </button>\n        <button\n          bbButton\n          class=\"bb-stack__item--push-right\"\n          color=\"link\"\n          circle=\"true\"\n          aria-label=\"delete\"\n          i18n-aria-label=\"delete aria-label@@notifications.details.delete-button-aria-label\"\n          bbTooltip=\"Delete\"\n          container=\"body\"\n          i18n-bbTooltip=\"Delete|Button text to delete notification@@notifications.details.delete-button\"\n          triggers=\"hover\"\n          placement=\"top\"\n          data-role=\"notification-details-delete-btn\"\n          (click)=\"hostRef.deleteNotification()\"\n        >\n          <bb-icon-ui name=\"delete\" class=\"bb-text-support\"></bb-icon-ui>\n        </button>\n      </div>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-notification-details-item\n        [notification]=\"hostRef.notification\"\n        [dateFormat]=\"dateFormat\"\n      ></bb-notification-details-item>\n    </div>\n  </div>\n</ng-template>\n","import {\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { asyncScheduler, BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport {\n  filter,\n  first,\n  map,\n  mapTo,\n  observeOn,\n  pairwise,\n  skip,\n  skipUntil,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { NotificationItem, NotificationStreamItem, shareReplayOnce } from '@backbase/notifications-common-ang';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { Pubsub, PUBSUB } from '@backbase/foundation-ang/web-sdk';\n\nimport { NotificationsPaginationService } from '../../services/notifications-pagination.service';\nimport { NotificationsPollingService } from '../../services/notifications-polling.service';\nimport { NotificationsDataService } from '../../services/notifications-data.service';\nimport { NotificationsRouterService } from '../../services/notifications-router.service';\nimport { WidgetPropertiesService } from '../../services/widget-properties.service';\n\nexport const NOTIFICATIONS_BADGE_RELOAD_ON_NAVIGATE_EVENT = 'bb.event.notifications-badge.reload-on-navigate';\n\n@Component({\n  selector: 'bb-notifications-list',\n  templateUrl: './notifications-list.component.html',\n})\nexport class NotificationsListComponent implements OnInit, OnDestroy {\n  /**\n   * Navigation event.\n   */\n  @Output() navigation = new EventEmitter<void>();\n\n  /**\n   * Preselected notification\n   */\n  @Input() set preselectedNotification(notification: NotificationItem | undefined) {\n    this.selectedNotification = notification;\n  }\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  private readonly componentDestroyed$ = new Subject<void>();\n\n  /**\n   * Stream of routes available for navigation.\n   */\n  readonly allowedRoutes$: Observable<string[]> = this.properties.allowedRoutes$;\n\n  /**\n   * Stream of a flag that defines if we should display settings button.\n   */\n  readonly displaySettingsButton$: Observable<boolean> = this.properties.displaySettingsButton$;\n\n  constructor(\n    private readonly routerService: NotificationsRouterService,\n    private readonly notificationsPaginationService: NotificationsPaginationService,\n    private readonly notificationsPollingService: NotificationsPollingService,\n    private readonly notificationService: NotificationsDataService,\n    private readonly showNotificationService: NotificationService,\n    private readonly element: ElementRef,\n    private readonly properties: WidgetPropertiesService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {}\n\n  /**\n   * Stream with notifications items.\n   */\n  readonly notifications$: Observable<NotificationStreamItem[]> =\n    this.notificationsPaginationService.notifications$.pipe(takeUntil(this.componentDestroyed$), shareReplayOnce());\n\n  /**\n   * Stream with error while loading of notifications.\n   */\n  readonly error$ = this.notificationsPaginationService.error$;\n\n  /**\n   * Stream with error while loading of notifications.\n   */\n  readonly updateCountersError$ = this.notificationsPollingService.updateCountersError$;\n\n  /**\n   * Mark as read request error stream which shows if request has failed.\n   */\n  readonly markAllAsReadError$ = this.notificationService.markAllNotificationAsReadError;\n\n  /**\n   * Stream with flag if notifications is loading now or no.\n   */\n  readonly isLoading$ = this.notificationsPaginationService.isLoading$;\n\n  private readonly firstNewNotificationId$ = this.notifications$.pipe(\n    pairwise(),\n    map(([prevNotifications, newNotifications]) => {\n      let firstNewNotification = newNotifications[prevNotifications.length];\n\n      // reset notification to the first page scenario\n      if (prevNotifications.length >= newNotifications.length) {\n        firstNewNotification = newNotifications[0];\n      }\n\n      return firstNewNotification && firstNewNotification.id;\n    }),\n  );\n\n  private readonly notificationWasReadSubject = new Subject<boolean>();\n  private readonly notificationWasRead$ = this.notificationWasReadSubject.asObservable();\n\n  private readonly newNotificationsAvailableSubject = new BehaviorSubject<boolean>(false);\n  private readonly updateCounters$ = this.newNotificationsAvailableSubject.pipe(\n    startWith(false),\n    filter(i => !i),\n    mapTo(true),\n    shareReplayOnce(),\n  );\n\n  /**\n   * Stream with total count of notifications.\n   */\n  readonly totalCount$ = this.updateCounters$.pipe(switchMap(() => this.notificationsPaginationService.totalCount$));\n\n  /**\n   * Stream with notifications about new notification available\n   */\n  readonly newNotificationsAvailable$ = this.newNotificationsAvailableSubject.asObservable();\n\n  /**\n   * Stream with page size.\n   */\n  readonly pageSize$ = this.notificationsPaginationService.sizeProperty$;\n\n  /**\n   * Stream with unread notifications count\n   */\n  readonly unreadCount$ = this.updateCounters$.pipe(\n    switchMap(() =>\n      this.notificationsPollingService.unreadNotificationsCount$.pipe(\n        switchMap(counter =>\n          this.notificationWasRead$.pipe(\n            startWith(false),\n            map(read => {\n              if (!read || !counter) {\n                return counter;\n              }\n\n              return --counter;\n            }),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  private lastSelectedNotificationItemButton: HTMLElement | undefined;\n\n  /**\n   * Steam with the starting page number.\n   */\n  readonly pageFrom$ = this.notificationsPaginationService.pageFrom$;\n\n  /**\n   * Notification item that is shown in notification details now.\n   */\n  selectedNotification: NotificationItem | undefined;\n\n  ngOnInit() {\n    this.firstNewNotificationId$\n      .pipe(\n        filter(Boolean),\n        map(id => `.bb-nt-${id}`),\n        observeOn(asyncScheduler),\n        map(elemClass => this.element.nativeElement.querySelector(elemClass) as HTMLElement),\n        filter<HTMLElement>(Boolean),\n        takeUntil(this.componentDestroyed$),\n      )\n      .subscribe((elemScrollTo: HTMLElement) => {\n        (elemScrollTo.firstChild as HTMLElement)?.focus();\n        elemScrollTo.scrollIntoView({ behavior: 'smooth' });\n      });\n\n    this.notificationsPollingService.newNotificationsAvailable$\n      .pipe(takeUntil(this.componentDestroyed$))\n      .subscribe(value => {\n        this.newNotificationsAvailableSubject.next(value);\n      });\n\n    this.onLoadNewNotifications();\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed$.next();\n    this.componentDestroyed$.complete();\n  }\n\n  /**\n   * Method to mark all notifications as read.\n   */\n  onReadAllNotifications() {\n    this.notificationService.markAllNotificationAsRead().subscribe(() => {\n      this.notificationsPaginationService.markAllAsRead(true);\n    });\n  }\n\n  /**\n   * Method to load new notifications by reloading of the first page.\n   */\n  onLoadNewNotifications() {\n    this.notificationsPollingService.unreadNotificationsCount$\n      .pipe(\n        skip(1), // skip stored value to wait for unread notifications count load occurred\n        first(),\n      )\n      .subscribe(() => {\n        this.newNotificationsAvailableSubject.next(false);\n        this.notificationsPaginationService.markAllAsRead(false);\n        this.notificationsPaginationService.loadPage(0);\n      });\n    this.notificationsPollingService.forceUpdateCounters();\n  }\n\n  /**\n   * Method to load next notifications page.\n   */\n  onLoadMore(totalCount: number, $event: { from: number }) {\n    const asyncNotifications$ = this.notifications$.pipe(\n      skipUntil(of(undefined).pipe(observeOn(asyncScheduler))), // wait for new asynchronously loaded notifications\n    );\n\n    const lastNotification$ = this.notifications$.pipe(\n      first(),\n      map(notifications => notifications[notifications.length - 1]),\n      map(({ id }) => `.bb-nt-${id} [data-role=\"notifications-list-item\"]`),\n      observeOn(asyncScheduler),\n      map(selector => this.element.nativeElement.querySelector(selector)),\n    );\n\n    this.notifications$.pipe(first()).subscribe(data => {\n      const createdOn = data[0].createdOn;\n      this.notificationsPaginationService.loadMore($event.from, createdOn);\n    });\n\n    combineLatest([asyncNotifications$, of(totalCount)])\n      .pipe(\n        take(1),\n        filter(([notifications, total]) => notifications.length >= total),\n        switchMap(() => lastNotification$),\n      )\n      .subscribe(lastNotification => lastNotification.focus());\n  }\n\n  /**\n   * Method to open notification settings.\n   */\n  onNotificationsSettingsOpen() {\n    this.routerService.emitSettingsOpenedNavigation();\n    this.navigation.emit();\n  }\n\n  /**\n   * Method to show notification details view or to navigate to the notification routing URL if routing is enabled.\n   */\n  selectNotification(clickEvent: Event, notification: NotificationItem, openDetailsView?: boolean) {\n    clickEvent.preventDefault();\n    this.allowedRoutes$.subscribe(routes => {\n      const route = notification.routing && notification.routing['where-to'];\n\n      if (!openDetailsView && notification.routing && routes.some(allowedRoute => route === allowedRoute)) {\n        this.pubSub.publish(NOTIFICATIONS_BADGE_RELOAD_ON_NAVIGATE_EVENT, undefined);\n        this.routerService.emitNotificationRouting(notification.routing);\n        this.navigation.emit();\n      } else {\n        this.selectedNotification = notification;\n        this.saveRefToNotification(clickEvent);\n      }\n    });\n\n    if (!notification.read) {\n      this.notificationService.markNotificationAsRead(notification.id).subscribe(() => {\n        notification.read = true;\n        this.notificationWasReadSubject.next(true);\n      });\n    }\n  }\n\n  /**\n   * Method to delete notification.\n   */\n  deleteNotification() {\n    if (this.selectedNotification) {\n      this.notificationService\n        .deleteNotification(this.selectedNotification.id)\n        .pipe(\n          take(1),\n          tap(() => this.notificationsPaginationService.loadPage(0)),\n        )\n        .subscribe(\n          () => {\n            this.selectedNotification = undefined;\n          },\n          error => {\n            this.showNotificationService.showNotification({\n              header: this.getErrorMessage(error),\n              modifier: 'error',\n              message: '',\n            });\n          },\n        );\n    }\n  }\n\n  /**\n   * Method to unselect notification and return back focus position.\n   */\n  unselectNotification() {\n    this.selectedNotification = undefined;\n    this.restoreFocusOnNotification();\n  }\n\n  /**\n   * Method to differentiate notifications by IDs.\n   *\n   * @param _index List item index\n   * @param notification Notification list item\n   * @returns Notification id\n   */\n  trackById(_index: number, notification: NotificationItem): string {\n    return notification.id;\n  }\n\n  private saveRefToNotification(notificationClickEvent: any) {\n    this.lastSelectedNotificationItemButton = notificationClickEvent.target.closest(\n      '[data-role=\"notifications-list-item\"]',\n    );\n  }\n\n  private restoreFocusOnNotification() {\n    setTimeout(() => {\n      if (!this.lastSelectedNotificationItemButton) {\n        return;\n      }\n\n      this.lastSelectedNotificationItemButton.focus();\n    }, 0);\n  }\n\n  private getErrorMessage(error: HttpErrorResponse | Error | string): string {\n    return typeof error !== 'string'\n      ? (error as HttpErrorResponse)?.error?.message || error.message || 'Unknown Error'\n      : error;\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsListCustomizable]',\n})\nexport class NotificationsListCustomizableDirective extends BbTemplate<\n  NotificationsListComponent,\n  {\n    notifications: NotificationItem[];\n    error: any;\n    updateCountersError: HttpErrorResponse | undefined;\n    isLoading: boolean;\n    totalCount: number;\n    pageSize: number;\n    newNotificationsAvailable: boolean;\n    unreadCount: number;\n    markAllAsReadError: boolean;\n  }\n> {}\n","<ng-container\n  bbNotificationsListCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    notifications: notifications$ | async,\n    error: error$ | async,\n    updateCountersError: updateCountersError$ | async,\n    isLoading: isLoading$ | async,\n    totalCount: totalCount$ | async,\n    pageSize: pageSize$ | async,\n    newNotificationsAvailable: newNotificationsAvailable$ | async,\n    unreadCount: unreadCount$ | async,\n    markAllAsReadError: markAllAsReadError$ | async,\n    pageFrom: pageFrom$ | async\n  }\"\n>\n</ng-container>\n\n<ng-template\n  bbNotificationsListCustomizable\n  let-hostRef\n  let-notifications=\"context.notifications\"\n  let-error=\"context.error\"\n  let-updateCountersError=\"context.updateCountersError\"\n  let-isLoading=\"context.isLoading\"\n  let-totalCount=\"context.totalCount\"\n  let-pageSize=\"context.pageSize\"\n  let-newNotificationsAvailable=\"context.newNotificationsAvailable\"\n  let-unreadCount=\"context.unreadCount\"\n  let-markAllAsReadError=\"context.markAllAsReadError\"\n  let-pageFrom=\"context.pageFrom\"\n>\n  <ng-container *ngIf=\"!hostRef.selectedNotification\">\n    <header data-role=\"notifications-list-header\" class=\"bb-card__header bb-stack\">\n      <span class=\"bb-stack__item\">\n        <span class=\"bb-heading-3\" i18n=\"Notifications modal label@@notifications.modalLabel\">Notifications</span>\n      </span>\n      <button\n        bbButton\n        *ngIf=\"hostRef.displaySettingsButton$ | async\"\n        class=\"bb-stack__item bb-stack__item--push-right\"\n        data-role=\"settings-button\"\n        color=\"link\"\n        circle=\"true\"\n        aria-label=\"Redirect to notification settings\"\n        i18n-aria-label=\"Aria-label for settings button@@notifications.notification-settings.aria-label\"\n        (click)=\"hostRef.onNotificationsSettingsOpen()\"\n      >\n        <bb-icon-ui class=\"text-dark\" name=\"settings\" size=\"md\"></bb-icon-ui>\n      </button>\n    </header>\n    <button\n      bbButton\n      *ngIf=\"newNotificationsAvailable\"\n      role=\"status\"\n      color=\"primary\"\n      [block]=\"true\"\n      i18n=\"Label for new notifications loading button@@notifications.new-notifications-available.button\"\n      aria-label=\"New Notification available. Click to refresh\"\n      i18n-aria-label=\"\n        Aria-label for new notifications loading button@@notifications.new-notifications-available.aria-label\"\n      class=\"bb-notifications-badge-widget__load-new-button\"\n      data-role=\"notifications-load-new-btn\"\n      (click)=\"hostRef.onLoadNewNotifications()\"\n    >\n      <span>New Notification available. Click to refresh</span>\n      <bb-icon-ui name=\"loading\" size=\"md\" cropped=\"true\"></bb-icon-ui>\n    </button>\n    <bb-alert-ui\n      *ngIf=\"markAllAsReadError\"\n      class=\"bb-notifications-badge-widget__alert\"\n      data-role=\"mark-all-read-error-alert\"\n      title=\"Error! Couldn’t mark all as read.\"\n      i18n-title=\"Label for mark all as read error@@notifications.mark-all-read.alert.title\"\n      aria-label=\"Error! Couldn’t mark all as read.\"\n      i18n-aria-label=\"Aria-label for mark all as read error@@notifications.mark-all-read.alert.aria-label\"\n      modifier=\"error\"\n      [dismissible]=\"false\"\n    >\n    </bb-alert-ui>\n    <div class=\"bb-notifications-badge-widget__all-read-button\" *ngIf=\"unreadCount > 0\">\n      <button\n        bbButton\n        data-role=\"mark-all-read-button\"\n        class=\"bb-subtitle\"\n        color=\"link-text\"\n        aria-label=\"Mark all notifcations as read\"\n        i18n-aria-label=\"Aria-label for mark all as read button@@notifications.mark-all-read.aria-label\"\n        (click)=\"hostRef.onReadAllNotifications()\"\n      >\n        <bb-icon-ui name=\"playlist-add-check\" size=\"md\" cropped=\"true\"></bb-icon-ui>\n        <span i18n=\"Label for mark all as read button@@notifications.mark-all-read.label\">Mark all as read</span>\n      </button>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"!error && !updateCountersError; else errorState\">\n    <ng-container *ngIf=\"notifications?.length; else emptyState\">\n      <div data-role=\"notifications-list-inner-wrapper\" [ngClass]=\"hostRef.selectedNotification ? 'd-none' : null\">\n        <p\n          aria-live=\"polite\"\n          class=\"sr-only\"\n          i18n=\"Label for new loaded notifications available@@notifications.new-loaded-notifications-available\"\n        >\n          { notifications.length, plural, =1 {new notification of {{ totalCount }}available} other {\n          {{ notifications.length }} new notifications of {{ totalCount }}available } }\n        </p>\n        <ul\n          tabindex=\"-1\"\n          class=\"bb-notifications-badge-widget__list bb-list bb-list--flush-lg\"\n          data-role=\"notifications-list-body\"\n        >\n          <li class=\"bb-list__item\" *ngFor=\"let notification of notifications; trackBy: hostRef.trackById\">\n            <bb-notifications-list-item\n              [notification]=\"notification\"\n              class=\"bb-nt-{{ notification.id }}\"\n              (keydown.enter)=\"hostRef.selectNotification($event, notification)\"\n              (keyup.space)=\"hostRef.selectNotification($event, notification)\"\n              (click)=\"hostRef.selectNotification($event, notification)\"\n              (openDetails)=\"hostRef.selectNotification($event, notification, true)\"\n              [dateFormat]=\"dateFormat\"\n            >\n            </bb-notifications-list-item>\n          </li>\n        </ul>\n\n        <footer class=\"bb-card__footer\">\n          <ng-container *ngIf=\"totalCount > pageSize\">\n            <div\n              *ngIf=\"notifications.length < totalCount; else LoadMoreDisabled\"\n              class=\"bb-button-bar bb-button-bar--center\"\n            >\n              <bb-load-button-ui\n                i18n=\"Load more button@@notifications.notification-list.load-more\"\n                class=\"bb-button-bar__button\"\n                color=\"link\"\n                [size]=\"pageSize\"\n                [from]=\"pageFrom\"\n                [totalCount]=\"totalCount\"\n                [isLoading]=\"isLoading\"\n                [block]=\"false\"\n                (paramChange)=\"hostRef.onLoadMore(totalCount, $event)\"\n              >\n                Load More\n              </bb-load-button-ui>\n            </div>\n            <ng-template #LoadMoreDisabled>\n              <div\n                data-role=\"notification-list-load-more-disabled-text\"\n                class=\"bb-subtitle bb-text-support bb-text-align-center\"\n                i18n=\"Load more disabled text@@notifications.notification-list.load-more-disabled\"\n              >\n                You’ve reached the end of the list.\n              </div>\n            </ng-template>\n          </ng-container>\n        </footer>\n      </div>\n\n      <bb-notification-details\n        *ngIf=\"hostRef.selectedNotification\"\n        [notification]=\"hostRef.selectedNotification\"\n        (navigateBack)=\"hostRef.unselectNotification()\"\n        (delete)=\"hostRef.deleteNotification()\"\n        [dateFormat]=\"dateFormat\"\n      ></bb-notification-details>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #emptyState>\n    <div role=\"alert\" *ngIf=\"notifications && notifications.length === 0; else loadingState\">\n      <div class=\"bb-card__body\">\n        <bb-empty-state-ui\n          data-role=\"notifications-badge-empty-state\"\n          class=\"bb-state-container\"\n          i18n-title=\"Notifications empty state message title@@notifications.state.no-notifications.title\"\n          title=\"No Notifications\"\n          iconModifier=\"notifications-off\"\n          iconSize=\"xxl\"\n          i18n-subtitle=\"Notifications empty state message@@notifications.state.no-notifications.subtitle\"\n          subtitle=\"You don't have any notifications to be displayed\"\n        ></bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <div role=\"alert\">\n      <div class=\"bb-card__body\">\n        <bb-empty-state-ui\n          data-role=\"notifications-badge-error-state\"\n          class=\"bb-state-container\"\n          iconSize=\"xxl\"\n          iconModifier=\"error-outline\"\n          title=\"Notifications couldn’t load\"\n          i18n-title=\"Notifications are not loading title@@notifications.error-state.title\"\n          subtitle=\"Try to reload the page or contact the system administrator.\"\n          i18n-subtitle=\"Notifications are not loading subtitle@@notifications.error-state.subtitle\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #loadingState>\n    <bb-loading-indicator-ui\n      loaderSize=\"md\"\n      text=\"Loading...\"\n      i18n-test=\"Loading title@@notifications.state.loading.title\"\n    ></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n","import { Component, Directive, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { NotificationsPollingService } from '../services/notifications-polling.service';\nimport { NotificationsPaginationService } from '../services/notifications-pagination.service';\nimport { NotificationsDataService } from '../services/notifications-data.service';\nimport { NotificationsRouterService } from '../services/notifications-router.service';\nimport { combineLatest, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { debounceTime, first, map, takeUntil } from 'rxjs/operators';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport {\n  BadgeForceUpdateEventPayload,\n  NotificationItem,\n  NotificationRouting,\n  NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT,\n} from '@backbase/notifications-common-ang';\nimport { DOCUMENT } from '@angular/common';\nimport { MediaQueryService } from '@backbase/ui-ang/media-query-lib';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { WidgetPropertiesService } from '../services/widget-properties.service';\n\nexport const BADGE_FORCE_UPDATE_DEBOUNCE_TIME = 800;\n\n/** @dynamic */\n@Component({\n  selector: 'bb-notifications-badge-widget',\n  templateUrl: './notifications-badge-widget.component.html',\n  providers: [\n    NotificationsPaginationService,\n    NotificationsDataService,\n    NotificationsPollingService,\n    NotificationsRouterService,\n    WidgetPropertiesService,\n    NotificationsPaginationService,\n  ],\n})\nexport class NotificationsBadgeWidgetComponent implements OnDestroy, OnInit {\n  static idCounter = 0;\n\n  private readonly preselectedNotification$$ = new BehaviorSubject<NotificationItem | undefined>(undefined);\n\n  /**\n   * Stream of preselected notification.\n   */\n  readonly preselectedNotification$ = this.preselectedNotification$$.asObservable();\n\n  /**\n   * Preselected notification.\n   */\n  @Input() set preselectedNotification(notification: NotificationItem | undefined) {\n    if (!this.popover) return;\n    this.preselectedNotification$$.next(notification);\n    if (!this.popover.isOpen() && notification) {\n      this.popover.open();\n    }\n  }\n\n  /**\n   * Number of displayed lines in notification message.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('notificationsMessageLineAmount') set notificationsMessageLineAmountValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setNotificationsMessageLineAmount(value);\n    }\n  }\n\n  /**\n   * Display time for today relative to the current point in time (time display format).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('displayRelativeTime') set displayRelativeTimeValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplayRelativeTime(value);\n    }\n  }\n\n  /**\n   * Display See More button.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('displayShowMoreButtonInBadge') set displayShowMoreButtonInBadgeValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplayShowMoreButtonInBadge(value);\n    }\n  }\n\n  /**\n   * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('allowedRoutes') set allowedRoutesValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setAllowedRoutes(value);\n    }\n  }\n\n  /**\n   * Display Settings button (button with the Gear icon that opens Notification Preferences).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('displaySettingsButton') set displaySettingsButtonValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplaySettingsButton(value);\n    }\n  }\n\n  /**\n   * Limit of notifications per paginated request.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('pageSize') set pageSizeValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setPageSize(value);\n    }\n  }\n\n  /**\n   * Comma-separated list of notifications origins to process (empty for all).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('origins') set originsValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setOrigins(value);\n    }\n  }\n\n  /**\n   * Comma-separated list of notifications severity levels to process (empty for all).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('severityLevels') set severityLevelsValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setSeverityLevels(value);\n    }\n  }\n\n  /**\n   * Interval to poll server for unread count (in seconds).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('unreadCountUpdateInterval') set unreadCountUpdateIntervalValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setUnreadCountUpdateInterval(value);\n    }\n  }\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Redirect to Notification Preferences on Settings button click emitter.\n   */\n  @Output() notificationsSettingsOpened = new EventEmitter<void>();\n\n  /**\n   * Navigation data emitter.\n   */\n  @Output() notificationRouting = new EventEmitter<NotificationRouting>();\n\n  /**\n   * Unique id html property for each component instance\n   */\n  readonly id = `bb-notifications-badge-widget-${NotificationsBadgeWidgetComponent.idCounter++}`;\n\n  private readonly destroy$ = new Subject<void>();\n\n  /**\n   * Stream with count of unread notifications.\n   */\n  readonly unreadCount$: Observable<number | undefined> = this.notificationsPollingService.unreadNotificationsCount$;\n\n  /**\n   * Stream that adjusts the layout to the screen size by applying different translateX values.\n   */\n  readonly listTransform$ = this.mediaQService.isMediaBreakpointMatches('max-width', 'sm').pipe(\n    map(isMobileView => {\n      if (isMobileView) {\n        const badge = this.document.querySelector('.bb-notifications-badge-widget');\n\n        if (badge) {\n          const { width: badgeWidth, left } = badge.getBoundingClientRect();\n          const { width: bodyWidth } = this.document.body.getBoundingClientRect();\n\n          return `translateX(${bodyWidth - left - badgeWidth}px)`;\n        }\n      }\n\n      return undefined;\n    }),\n  );\n\n  private readonly origins$: Observable<string[]> = this.properties.origins$;\n\n  private readonly severityLevels$: Observable<string[]> = this.properties.severityLevels$;\n\n  /**\n   * Notification badge dropdown\n   */\n  @ViewChild('popover') readonly popover: NgbDropdown | undefined;\n\n  constructor(\n    private readonly notificationsPollingService: NotificationsPollingService,\n    private readonly routerService: NotificationsRouterService,\n    private readonly mediaQService: MediaQueryService,\n    private readonly properties: WidgetPropertiesService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n    @Inject(DOCUMENT) private readonly document: Document,\n  ) {}\n\n  ngOnInit() {\n    this.setupNavigationSubscriptions();\n    this.setupBadgeUpdateSubscriptions();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * The method to clear the preselected notification value.\n   *\n   * @param isOpen Is notification badge open flag\n   */\n  onOpenChange(isOpen: boolean) {\n    if (!isOpen) {\n      this.preselectedNotification$$.next(undefined);\n    }\n  }\n\n  private setupNavigationSubscriptions() {\n    this.routerService.settingsOpenedNavigation$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(this.notificationsSettingsOpened);\n\n    this.routerService.notificationRouting$.pipe(takeUntil(this.destroy$)).subscribe(this.notificationRouting);\n  }\n\n  private setupBadgeUpdateSubscriptions() {\n    let forceUpdateCounterHandler: (payload: BadgeForceUpdateEventPayload | undefined) => void;\n    const forceUpdateCounters$ = new Subject<void>();\n\n    forceUpdateCounters$\n      .pipe(debounceTime(BADGE_FORCE_UPDATE_DEBOUNCE_TIME), takeUntil(this.destroy$))\n      .subscribe(() => this.notificationsPollingService.forceUpdateCounters());\n\n    combineLatest([this.origins$, this.severityLevels$])\n      .pipe(first())\n      .subscribe(([origins, levels]) => {\n        forceUpdateCounterHandler = payload => {\n          if (\n            payload &&\n            (origins.length === 0 || (payload.origin && origins.includes(payload.origin))) &&\n            (levels.length === 0 || levels.includes(payload.level))\n          ) {\n            forceUpdateCounters$.next();\n          }\n        };\n        this.pubSub.subscribe<undefined | BadgeForceUpdateEventPayload>(\n          NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT,\n          forceUpdateCounterHandler,\n        );\n      });\n\n    this.destroy$.subscribe(() => {\n      this.pubSub.unsubscribe(NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT, forceUpdateCounterHandler);\n    });\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsBadgeCustomizable]',\n})\nexport class NotificationsBadgeWidgetCustomizableDirective extends BbTemplate<\n  NotificationsBadgeWidgetComponent,\n  {\n    unreadCount: number;\n    listTransform?: string;\n  }\n> {}\n","<ng-container\n  bbNotificationsBadgeCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    unreadCount: unreadCount$ | async,\n    listTransform: listTransform$ | async\n  }\"\n>\n</ng-container>\n<ng-template\n  bbNotificationsBadgeCustomizable\n  let-hostRef\n  let-unreadCount=\"context.unreadCount\"\n  let-listTransform=\"context.listTransform\"\n>\n  <div class=\"bb-notifications-badge-widget\">\n    <div #popover=\"ngbDropdown\" ngbDropdown placement=\"bottom-right\" (openChange)=\"hostRef.onOpenChange($event)\">\n      <button\n        bbButton\n        [attr.aria-labelledby]=\"'notifications-badge-label' + hostRef.id\"\n        color=\"transparent\"\n        class=\"bb-notifications-badge-widget__dropdown-button\"\n        ngbDropdownToggle\n      >\n        <bb-icon-ui name=\"notifications\" color=\"secondary\" data-role=\"notifications-icon\" size=\"lg\"></bb-icon-ui>\n        <bb-badge-counter-ui\n          class=\"bb-notifications-badge-widget__dropdown-button-counter\"\n          [count]=\"unreadCount\"\n          maxCount=\"99\"\n          color=\"danger\"\n          data-role=\"notifications-unread-count\"\n        ></bb-badge-counter-ui>\n      </button>\n      <div\n        ngbDropdownMenu\n        class=\"bb-notifications-badge-widget__dropdown-menu dropdown-menu-unstyled\"\n        data-role=\"notifications-list-wrapper\"\n      >\n        <div\n          class=\"bb-notifications-badge-widget__dropdown-menu-list\"\n          data-role=\"notifications-dropdown-menu-list\"\n          [style.transform]=\"listTransform\"\n        >\n          <div class=\"bb-card bb-notifications-badge-widget__list-wrapper\">\n            <bb-notifications-list\n              *ngIf=\"popover.isOpen()\"\n              (navigation)=\"popover.close()\"\n              [preselectedNotification]=\"hostRef.preselectedNotification$ | async\"\n              [dateFormat]=\"dateFormat\"\n            ></bb-notifications-list>\n          </div>\n        </div>\n      </div>\n      <span\n        i18n=\"Notifications badge aria label@notifications.badge.aria-label\"\n        [attr.id]=\"'notifications-badge-label' + hostRef.id\"\n        aria-live=\"polite\"\n        aria-relevant=\"text\"\n        class=\"sr-only\"\n      >\n        { unreadCount || 0, plural, =0 { no new notifications } =1 { {{ unreadCount }} new notification} other {\n        {{ unreadCount }} new notifications } }\n      </span>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';\nimport { HumanizedDateComponent, HumanizedDateCustomizableDirective } from './humanized-date.component';\n\n@NgModule({\n  imports: [CommonModule, BbDatePipeModule],\n  declarations: [HumanizedDateComponent, HumanizedDateCustomizableDirective],\n  exports: [HumanizedDateComponent, HumanizedDateCustomizableDirective],\n})\nexport class HumanizedDateModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  NotificationListItemCustomizableDirective,\n  NotificationsListItemComponent,\n} from './notifications-list-item.component';\n\nimport { HumanizedDateModule } from '../humanized-date/humanized-date.module';\nimport { NotificationsCommonModule } from '@backbase/notifications-common-ang';\n\nimport { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\n\nconst uiModules = [BbDatePipeModule, EllipsisModule];\nconst innerModules = [HumanizedDateModule];\nconst components = [NotificationsListItemComponent, NotificationListItemCustomizableDirective];\n\n@NgModule({\n  imports: [CommonModule, NotificationsCommonModule, ...uiModules, ...innerModules],\n  declarations: [...components],\n  exports: [NotificationsCommonModule, ...uiModules, ...innerModules, ...components],\n})\nexport class NotificationsListItemModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  NotificationDetailsComponent,\n  NotificationDetailsCustomizableDirective,\n} from './notification-details.component';\nimport {\n  NotificationDetailsItemComponent,\n  NotificationDetailsItemCustomizableDirective,\n} from './notification-details-item/notification-details-item.component';\nimport { HumanizedDateModule } from '../humanized-date/humanized-date.module';\nimport { NotificationsCommonModule } from '@backbase/notifications-common-ang';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nconst uiModules = [ButtonModule, FocusModule, EllipsisModule, TooltipModule];\nconst innerModules = [HumanizedDateModule];\nconst components = [\n  NotificationDetailsComponent,\n  NotificationDetailsCustomizableDirective,\n  NotificationDetailsItemComponent,\n  NotificationDetailsItemCustomizableDirective,\n];\n\n@NgModule({\n  imports: [CommonModule, NotificationsCommonModule, ...uiModules, ...innerModules],\n  declarations: [...components],\n  exports: [NotificationsCommonModule, ...uiModules, ...innerModules, ...components],\n})\nexport class NotificationDetailsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NotificationsListComponent, NotificationsListCustomizableDirective } from './notifications-list.component';\nimport { NotificationsListItemModule } from '../notifications-list-item/notifications-list-item.module';\nimport { NotificationDetailsModule } from '../notification-details/notification-details.module';\n\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { AlertModule } from '@backbase/ui-ang/alert';\n\nconst uiModules = [\n  EmptyStateModule,\n  ErrorCommonStateModule,\n  LoadButtonModule,\n  LoadingIndicatorModule,\n  ButtonModule,\n  AlertModule,\n];\nconst innerModules = [NotificationsListItemModule, NotificationDetailsModule];\nconst components = [NotificationsListComponent, NotificationsListCustomizableDirective];\n\n@NgModule({\n  imports: [CommonModule, ...uiModules, ...innerModules],\n  declarations: [...components],\n  exports: [...uiModules, ...innerModules, ...components],\n})\nexport class NotificationsListModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport {\n  NotificationsBadgeWidgetComponent,\n  NotificationsBadgeWidgetCustomizableDirective,\n} from './components/notifications-badge-widget.component';\nimport { NotificationsListModule } from './components/notifications-list/notifications-list.module';\nimport { NotificationsListItemModule } from './components/notifications-list-item/notifications-list-item.module';\n\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { BadgeCounterModule } from '@backbase/ui-ang/badge-counter';\nimport { MediaQueryModule } from '@backbase/ui-ang/media-query-lib';\n\nconst uiModules = [BadgeModule, ButtonModule, IconModule, NgbDropdownModule, BadgeCounterModule, MediaQueryModule];\nconst innerModules = [NotificationsListItemModule, NotificationsListModule];\nconst components = [NotificationsBadgeWidgetComponent, NotificationsBadgeWidgetCustomizableDirective];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { NotificationsBadgeWidgetComponent },\n    }),\n    ...uiModules,\n    ...innerModules,\n  ],\n  declarations: [...components],\n  exports: [...uiModules, ...innerModules, ...components],\n})\nexport class NotificationsBadgeWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["BehaviorSubject","getPropertyValue","map","modelItemToBoolean","first","shareReplayOnce","secondsToMilliseconds","BaseWidgetPropertiesService","i1","i0","Injectable","Optional","Subject","ReplaySubject","merge","of","switchMap","delay","leaveZone","asyncScheduler","observeOn","enterZone","tap","filter","pairwise","combineLatest","catchError","i2.WidgetPropertiesService","toISOExtendedFormat","finalize","share","zip","scan","startWith","withLatestFrom","distinctUntilChanged","EMPTY","i2.NotificationsPollingService","i2","Component","Input","BbTemplate","Directive","EventEmitter","i1.WidgetPropertiesService","i3","i4.HumanizedDateComponent","i5","i6","Output","i3.HumanizedDateComponent","i4","i2.NotificationDetailsItemComponent","takeUntil","mapTo","skip","skipUntil","take","PUBSUB","i7","i8","i9.NotificationsListItemComponent","i10","i11.NotificationDetailsComponent","i12","i13","i14","i15","Inject","debounceTime","NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT","i1.NotificationsPollingService","i2.NotificationsRouterService","i4.WidgetPropertiesService","DOCUMENT","i9","ViewChild","CommonModule","BbDatePipeModule","NgModule","uiModules","EllipsisModule","innerModules","components","NotificationsCommonModule","ButtonModule","FocusModule","TooltipModule","EmptyStateModule","ErrorCommonStateModule","LoadButtonModule","LoadingIndicatorModule","AlertModule","BadgeModule","IconModule","NgbDropdownModule","BadgeCounterModule","MediaQueryModule","BackbaseCoreModule"],"mappings":"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"}