import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { severityLevelIconMap } from '../../../models/severity-level-icon-map';
import { WidgetPropertiesService } from '../../../services/widget-properties.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/widget-properties.service";
import * as i2 from "@backbase/ui-ang/icon";
import * as i3 from "../../humanized-date/humanized-date.component";
import * as i4 from "@backbase/notifications-common-ang";
import * as i5 from "@angular/common";
export class NotificationDetailsItemComponent {
    constructor(properties) {
        this.properties = properties;
        /**
         * Notifications severity map
         */
        this.levelMap = severityLevelIconMap;
        /**
         * Stream of a flag that defines if we should display relative time for today.
         */
        this.displayRelativeTime$ = this.properties.displayRelativeTime$;
    }
    /**
     * Getter for icon name from severity level icon map due to level of notification.
     */
    get icon() {
        return this.levelMap[this.notification.level].icon;
    }
    /**
     * Getter for icon color from severity level icon map due to level of notification.
     */
    get color() {
        return this.levelMap[this.notification.level].color;
    }
}
/** @nocollapse */ NotificationDetailsItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationDetailsItemComponent, deps: [{ token: i1.WidgetPropertiesService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ NotificationDetailsItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationDetailsItemComponent, selector: "bb-notification-details-item", inputs: { notification: "notification", dateFormat: "dateFormat" }, ngImport: i0, template: "<ng-container bbNotificationDetailsItemCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbNotificationDetailsItemCustomizable let-hostRef>\n  <div class=\"bb-notification bb-notification--flush\">\n    <bb-icon-ui\n      class=\"bb-notification__icon\"\n      [name]=\"hostRef.icon\"\n      [color]=\"hostRef.color\"\n      data-role=\"notification-details-icon\"\n    ></bb-icon-ui>\n    <div class=\"bb-notification__body\">\n      <div class=\"bb-notification__title bb-stack\">\n        <span\n          class=\"bb-stack__item break-word bb-text-default\"\n          data-role=\"notification-details-title\"\n          [innerHTML]=\"hostRef.notification | notificationLocalization: 'title'\"\n        ></span>\n        <bb-humanized-date\n          class=\"bb-stack__item bb-stack__item--push-right\"\n          [date]=\"hostRef.notification.createdOn\"\n          [displayRelativeTime]=\"hostRef.displayRelativeTime$ | async\"\n          [dateFormat]=\"dateFormat\"\n          data-role=\"notification-details-message\"\n        ></bb-humanized-date>\n      </div>\n      <div class=\"bb-stack bb-block bb-block--sm\">\n        <div\n          data-role=\"notification-details-message-text\"\n          class=\"break-word bb-text-align-left\"\n          [innerHTML]=\"\n            hostRef.notification | notificationLocalization: 'message' | interpolateLink: hostRef.notification\n          \"\n        ></div>\n      </div>\n      <bb-notifications-capability-icon [origin]=\"hostRef.notification?.origin\"></bb-notifications-capability-icon>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i2.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i3.HumanizedDateComponent; }), selector: "bb-humanized-date", inputs: ["dateFormat", "displayRelativeTime", "date"] }, { type: i0.forwardRef(function () { return i4.NotificationsCapabilityIconComponent; }), selector: "bb-notifications-capability-icon", inputs: ["origin"] }], directives: [{ type: i0.forwardRef(function () { return NotificationDetailsItemCustomizableDirective; }), selector: "[bbNotificationDetailsItemCustomizable]" }], pipes: { "notificationLocalization": i0.forwardRef(function () { return i4.ӨNotificationLocalizationPipe; }), "async": i0.forwardRef(function () { return i5.AsyncPipe; }), "interpolateLink": i0.forwardRef(function () { return i4.ӨInterpolateLinkPipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationDetailsItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-notification-details-item',
                    templateUrl: './notification-details-item.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.WidgetPropertiesService }]; }, propDecorators: { notification: [{
                type: Input
            }], dateFormat: [{
                type: Input
            }] } });
export class NotificationDetailsItemCustomizableDirective extends BbTemplate {
}
/** @nocollapse */ NotificationDetailsItemCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationDetailsItemCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ NotificationDetailsItemCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: NotificationDetailsItemCustomizableDirective, selector: "[bbNotificationDetailsItemCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationDetailsItemCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbNotificationDetailsItemCustomizable]',
                }]
        }] });
//# sourceMappingURL=notification-details-item.component.js.map