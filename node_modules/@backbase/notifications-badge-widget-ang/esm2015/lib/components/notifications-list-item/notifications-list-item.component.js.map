{"version":3,"file":"notifications-list-item.component.js","sourceRoot":"","sources":["../../../../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list-item/notifications-list-item.component.ts","../../../../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-list-item/notifications-list-item.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAClF,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAG3D,OAAO,EAAwB,oBAAoB,EAAE,MAAM,sCAAsC,CAAC;AAElG,OAAO,EAAE,uBAAuB,EAAE,MAAM,0CAA0C,CAAC;;;;;;;;AAMnF,MAAM,OAAO,8BAA8B;IAmEzC,YAA6B,UAAmC;QAAnC,eAAU,GAAV,UAAU,CAAyB;QAhEhE;;WAEG;QACM,OAAE,GAAG,oCAAoC,8BAA8B,CAAC,SAAS,EAAE,EAAE,CAAC;QAY/F;;WAEG;QACO,gBAAW,GAAG,IAAI,YAAY,EAAS,CAAC;QAElD;;WAEG;QACM,oCAA+B,GAAuB,IAAI,CAAC,UAAU,CAAC,+BAA+B,CAAC;QAE/G;;WAEG;QACM,yBAAoB,GAAwB,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC;QAE1F;;WAEG;QACM,kCAA6B,GAAwB,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC;QAE5G;;WAEG;QACM,aAAQ,GAAyB,oBAAoB,CAAC;IA0BI,CAAC;IAxBpE;;OAEG;IACH,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;IACrD,CAAC;IAED;;OAEG;IACH,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACH,uBAAuB,CAAC,KAAY;QAClC,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;;AAhEM,wCAAS,GAAG,CAAC,CAAC;+IADV,8BAA8B;mIAA9B,8BAA8B,+KCZ3C,6jHAyFA,0tBDJa,yCAAyC;4FAzEzC,8BAA8B;kBAJ1C,SAAS;mBAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE,0CAA0C;iBACxD;8GAYU,YAAY;sBAApB,KAAK;gBAKG,UAAU;sBAAlB,KAAK;gBAKI,WAAW;sBAApB,MAAM;;AAoDT,MAAM,OAAO,yCAA0C,SAAQ,UAK9D;;0JALY,yCAAyC;8IAAzC,yCAAyC;4FAAzC,yCAAyC;kBAHrD,SAAS;mBAAC;oBACT,QAAQ,EAAE,uCAAuC;iBAClD","sourcesContent":["import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationItem } from '@backbase/notifications-common-ang';\n\nimport { SeverityLevelIconMap, severityLevelIconMap } from '../../models/severity-level-icon-map';\nimport { Observable } from 'rxjs';\nimport { WidgetPropertiesService } from '../../services/widget-properties.service';\n\n@Component({\n  selector: 'bb-notifications-list-item',\n  templateUrl: './notifications-list-item.component.html',\n})\nexport class NotificationsListItemComponent {\n  static idCounter = 0;\n\n  /**\n   * The unique ID HTML property for each component instance.\n   */\n  readonly id = `bb-notifications-badge-list-item-${NotificationsListItemComponent.idCounter++}`;\n\n  /**\n   * Notification item data.\n   */\n  @Input() notification!: NotificationItem;\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Event to open notification details.\n   */\n  @Output() openDetails = new EventEmitter<Event>();\n\n  /**\n   * Stream of widget property with the number of lines to show as a notification message.\n   */\n  readonly notificationsMessageLineAmount$: Observable<number> = this.properties.notificationsMessageLineAmount$;\n\n  /**\n   * Stream of widget property with a flag that defines if we should display relative time for today.\n   */\n  readonly displayRelativeTime$: Observable<boolean> = this.properties.displayRelativeTime$;\n\n  /*\n   * Stream of widget property with a flag that defines if we should display relative time for today.\n   */\n  readonly displayShowMoreButtonInBadge$: Observable<boolean> = this.properties.displayShowMoreButtonInBadge$;\n\n  /**\n   * Notifications severity map\n   */\n  readonly levelMap: SeverityLevelIconMap = severityLevelIconMap;\n\n  /**\n   * Getter for icon name from severity level icon map due to level of notification.\n   */\n  get icon(): string {\n    return this.levelMap[this.notification.level].icon;\n  }\n\n  /**\n   * Getter for icon color from severity level icon map due to level of notification.\n   */\n  get color(): string {\n    return this.levelMap[this.notification.level].color;\n  }\n\n  /**\n   * Method to open notification details from the parent component.\n   *\n   * @param event Click event\n   */\n  openNotificationDetails(event: Event) {\n    event.stopPropagation();\n    this.openDetails.emit(event);\n  }\n\n  constructor(private readonly properties: WidgetPropertiesService) {}\n}\n\n@Directive({\n  selector: '[bbNotificationsListItemCustomizable]',\n})\nexport class NotificationListItemCustomizableDirective extends BbTemplate<\n  NotificationsListItemComponent,\n  {\n    notificationsMessageLineAmount: number;\n  }\n> {}\n","<ng-container\n  bbNotificationsListItemCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    notificationsMessageLineAmount: notificationsMessageLineAmount$ | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbNotificationsListItemCustomizable\n  let-hostRef\n  let-notificationsMessageLineAmount=\"context.notificationsMessageLineAmount\"\n>\n  <div\n    tabindex=\"0\"\n    class=\"bb-notifications-badge-list-item bb-notification bb-notification--flush\"\n    data-role=\"notifications-list-item\"\n    [class.bb-notifications-badge-list-item--unread]=\"!hostRef.notification.read\"\n  >\n    <span\n      class=\"sr-only\"\n      i18n=\"Notification item read/unread status@@notifications.list.notification-details.read-unread-status\"\n    >\n      { hostRef.notification.read, select, true { viewed } false { new } } notification,\n    </span>\n    <span\n      class=\"sr-only\"\n      i18n=\"Notification item severity level@@notifications.list.notification-details.read-unread-status\"\n    >\n      { hostRef.notification.level, select, ALERT { Alert } INFO { Info } SUCCESS { Success } WARNING { Warning } },\n    </span>\n    <bb-icon-ui\n      [name]=\"hostRef.icon\"\n      [color]=\"hostRef.color\"\n      class=\"bb-notification__icon\"\n      data-role=\"notifications-list-item-severity-level-icon\"\n    ></bb-icon-ui>\n    <div class=\"bb-notifications-badge-list-item__body bb-notification__body\">\n      <div\n        class=\"bb-notifications-badge-list-item__header bb-notification__title bb-stack\"\n        data-role=\"notification-heading\"\n      >\n        <bb-ellipsis-ui\n          class=\"bb-notifications-badge-list-item__title bb-stack__item bb-text-align-left\"\n          data-role=\"notifications-list-item-title\"\n        >\n          <span [innerHTML]=\"hostRef.notification | notificationLocalization: 'title'\"></span>\n        </bb-ellipsis-ui>\n        <bb-humanized-date\n          class=\"bb-stack__item bb-stack__item--push-right\"\n          [date]=\"hostRef.notification.createdOn\"\n          [displayRelativeTime]=\"hostRef.displayRelativeTime$ | async\"\n          data-role=\"notification-list-item-creation-date\"\n          [dateFormat]=\"dateFormat\"\n        ></bb-humanized-date>\n      </div>\n      <bb-ellipsis-ui\n        data-role=\"notifications-list-item-content\"\n        aria-hidden=\"true\"\n        class=\"bb-notifications-badge-list-item__content bb-text-align-left bb-stack bb-block bb-block--sm\"\n        [tooltipTriggers]=\"''\"\n        [lineClamp]=\"notificationsMessageLineAmount\"\n      >\n        <div\n          #notificationMessage\n          [innerHTML]=\"\n            hostRef.notification | notificationLocalization: 'message' | interpolateLink: hostRef.notification:false\n          \"\n        ></div>\n      </bb-ellipsis-ui>\n      <button\n        type=\"button\"\n        data-role=\"notifications-list-item-show-more-button\"\n        *ngIf=\"hostRef.displayShowMoreButtonInBadge$ | async\"\n        class=\"btn-link-text bb-text-bold bb-block bb-block--sm\"\n        (click)=\"hostRef.openNotificationDetails($event)\"\n        aria-label=\"See more notification details\"\n        i18n=\"Notification badge See more button@@notifications.list.see-more.button\"\n        i18n-aria-label=\"Aria-label for See more button@@notifications.list.see-more.button.aria-label\"\n      >\n        <span>See more</span>\n      </button>\n      <bb-notifications-capability-icon\n        aria-hidden=\"true\"\n        [origin]=\"hostRef.notification?.origin\"\n      ></bb-notifications-capability-icon>\n    </div>\n  </div>\n</ng-template>\n"]}