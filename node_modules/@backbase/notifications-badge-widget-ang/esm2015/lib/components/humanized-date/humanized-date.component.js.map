{"version":3,"file":"humanized-date.component.js","sourceRoot":"","sources":["../../../../../../../libs/notifications-badge-widget-ang/src/lib/components/humanized-date/humanized-date.component.ts","../../../../../../../libs/notifications-badge-widget-ang/src/lib/components/humanized-date/humanized-date.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, Input } from '@angular/core';\nimport { toISOExtendedFormat } from '@backbase/notifications-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nconst DEFAULT_FORMAT_FOR_DATE_IN_PAST = 'MM/dd/yy';\n\n@Component({\n  selector: 'bb-humanized-date',\n  templateUrl: './humanized-date.component.html',\n})\nexport class HumanizedDateComponent {\n  private readonly today: Date;\n  private readonly yesterday: Date;\n  private _date: Date | undefined;\n  private _minutesFromNow: number | undefined;\n  private _isWithinHour = false;\n  private _isToday = false;\n  private _isYesterday = false;\n\n  /**\n   *  Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n  /**\n   * Flag that defines if we should display relative time for today.\n   */\n  @Input() displayRelativeTime = false;\n  /**\n   * Notification date.\n   */\n  @Input() set date(value: Date | string | undefined) {\n    const date = this.parseDate(value);\n\n    if (date) {\n      this._date = date;\n      this.setDateFlags();\n    } else {\n      this.resetStateToDefaults();\n    }\n  }\n\n  constructor() {\n    this.today = new Date();\n\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    this.yesterday = yesterday;\n  }\n\n  get dateFormatForPast(): string {\n    return this.dateFormat || DEFAULT_FORMAT_FOR_DATE_IN_PAST;\n  }\n\n  /**\n   * Date getter.\n   */\n  // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n  get date(): Date | string | undefined {\n    return this._date;\n  }\n\n  /**\n   *\n   * Is date within an hour from now flag getter.\n   */\n  get isWithinHour(): boolean {\n    return this._isWithinHour;\n  }\n\n  /**\n   * Is date within the current day flag getter.\n   */\n  get isToday(): boolean {\n    return this._isToday;\n  }\n\n  /**\n   * Is date within the yesterday date flag getter.\n   */\n  get isYesterday(): boolean {\n    return this._isYesterday;\n  }\n\n  /**\n   * How many minutes from now is the date getter.\n   */\n  get minutesFromNow(): number | undefined {\n    return this._minutesFromNow;\n  }\n\n  private setDateFlags() {\n    this._minutesFromNow = this.getMinutesFromNow(this._date as Date, this.today);\n    this._isToday = this.isSameDay(this._date, this.today);\n    this._isYesterday = this.isSameDay(this._date, this.yesterday);\n    this._isWithinHour = Number(this.minutesFromNow) < 60;\n  }\n\n  private resetStateToDefaults() {\n    this._date = undefined;\n    this._minutesFromNow = undefined;\n    this._isWithinHour = false;\n    this._isToday = false;\n    this._isYesterday = false;\n  }\n\n  private parseDate(value: Date | string | undefined): Date | undefined {\n    if (typeof value === 'undefined' || value instanceof Date) return value;\n\n    return new Date(toISOExtendedFormat(value)).valueOf() ? new Date(toISOExtendedFormat(value)) : undefined;\n  }\n\n  private isSameDay(date1?: Date, date2?: Date): boolean {\n    if (!date1 || !date2) {\n      return false;\n    }\n\n    return date1.toDateString() === date2.toDateString();\n  }\n\n  private getMinutesFromNow(dateTime: Date, currentDateTime: Date): number {\n    const minutesFromNow = Math.floor((currentDateTime.getTime() - dateTime.getTime()) / 60000);\n\n    return minutesFromNow > 0 ? minutesFromNow : 0;\n  }\n}\n\n@Directive({\n  selector: '[bbHumanizedDateCustomizable]',\n})\nexport class HumanizedDateCustomizableDirective extends BbTemplate<HumanizedDateComponent, void> {}\n","<ng-container bbHumanizedDateCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbHumanizedDateCustomizable let-hostRef>\n  <div class=\"sr-only\" i18n=\"Humanized date title@@humanized.date.title\">,Date:</div>\n  <ng-container *ngIf=\"hostRef.date as date\">\n    <time *ngIf=\"hostRef.isToday\" class=\"bb-subheader bb-subheader--regular bb-text-nowrap\">\n      <ng-container *ngIf=\"hostRef.displayRelativeTime; else today\">\n        <ng-container\n          *ngIf=\"hostRef.isWithinHour; else moreThanHourAgo\"\n          i18n=\"Notifications time less than an hour ago date@@notifications.humanized-date.less-than-an-hour-ago\"\n        >\n          { hostRef.minutesFromNow, plural, =0 {now} other {{{hostRef.minutesFromNow}} min ago} }\n        </ng-container>\n\n        <ng-template #moreThanHourAgo>\n          {{ date | bbDate: 'shortTime' }}\n        </ng-template>\n      </ng-container>\n\n      <ng-template #today i18n=\"Notifications today date@@notifications.humanized-date.today\"> today </ng-template>\n    </time>\n\n    <time\n      *ngIf=\"hostRef.isYesterday\"\n      class=\"bb-subheader bb-subheader--regular\"\n      i18n=\"Notifications yesterday date@@notifications.humanized-date.yesterday\"\n    >\n      yesterday\n    </time>\n    <time\n      *ngIf=\"!hostRef.isToday && !hostRef.isYesterday\"\n      class=\"bb-subheader bb-subheader--regular\"\n      [attr.aria-label]=\"date | bbDate: 'mediumDate'\"\n    >\n      {{ date | bbDate: dateFormatForPast }}\n    </time>\n  </ng-container>\n</ng-template>\n"]}