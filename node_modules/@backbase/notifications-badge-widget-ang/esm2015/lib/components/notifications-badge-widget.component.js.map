{"version":3,"file":"notifications-badge-widget.component.js","sourceRoot":"","sources":["../../../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-badge-widget.component.ts","../../../../../../libs/notifications-badge-widget-ang/src/lib/components/notifications-badge-widget.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { NotificationsPollingService } from '../services/notifications-polling.service';\nimport { NotificationsPaginationService } from '../services/notifications-pagination.service';\nimport { NotificationsDataService } from '../services/notifications-data.service';\nimport { NotificationsRouterService } from '../services/notifications-router.service';\nimport { combineLatest, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { debounceTime, first, map, takeUntil } from 'rxjs/operators';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport {\n  BadgeForceUpdateEventPayload,\n  NotificationItem,\n  NotificationRouting,\n  NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT,\n} from '@backbase/notifications-common-ang';\nimport { DOCUMENT } from '@angular/common';\nimport { MediaQueryService } from '@backbase/ui-ang/media-query-lib';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { WidgetPropertiesService } from '../services/widget-properties.service';\n\nexport const BADGE_FORCE_UPDATE_DEBOUNCE_TIME = 800;\n\n/** @dynamic */\n@Component({\n  selector: 'bb-notifications-badge-widget',\n  templateUrl: './notifications-badge-widget.component.html',\n  providers: [\n    NotificationsPaginationService,\n    NotificationsDataService,\n    NotificationsPollingService,\n    NotificationsRouterService,\n    WidgetPropertiesService,\n    NotificationsPaginationService,\n  ],\n})\nexport class NotificationsBadgeWidgetComponent implements OnDestroy, OnInit {\n  static idCounter = 0;\n\n  private readonly preselectedNotification$$ = new BehaviorSubject<NotificationItem | undefined>(undefined);\n\n  /**\n   * Stream of preselected notification.\n   */\n  readonly preselectedNotification$ = this.preselectedNotification$$.asObservable();\n\n  /**\n   * Preselected notification.\n   */\n  @Input() set preselectedNotification(notification: NotificationItem | undefined) {\n    if (!this.popover) return;\n    this.preselectedNotification$$.next(notification);\n    if (!this.popover.isOpen() && notification) {\n      this.popover.open();\n    }\n  }\n\n  /**\n   * Number of displayed lines in notification message.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('notificationsMessageLineAmount') set notificationsMessageLineAmountValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setNotificationsMessageLineAmount(value);\n    }\n  }\n\n  /**\n   * Display time for today relative to the current point in time (time display format).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('displayRelativeTime') set displayRelativeTimeValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplayRelativeTime(value);\n    }\n  }\n\n  /**\n   * Display See More button.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('displayShowMoreButtonInBadge') set displayShowMoreButtonInBadgeValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplayShowMoreButtonInBadge(value);\n    }\n  }\n\n  /**\n   * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('allowedRoutes') set allowedRoutesValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setAllowedRoutes(value);\n    }\n  }\n\n  /**\n   * Display Settings button (button with the Gear icon that opens Notification Preferences).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('displaySettingsButton') set displaySettingsButtonValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplaySettingsButton(value);\n    }\n  }\n\n  /**\n   * Limit of notifications per paginated request.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('pageSize') set pageSizeValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setPageSize(value);\n    }\n  }\n\n  /**\n   * Comma-separated list of notifications origins to process (empty for all).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('origins') set originsValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setOrigins(value);\n    }\n  }\n\n  /**\n   * Comma-separated list of notifications severity levels to process (empty for all).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('severityLevels') set severityLevelsValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setSeverityLevels(value);\n    }\n  }\n\n  /**\n   * Interval to poll server for unread count (in seconds).\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('unreadCountUpdateInterval') set unreadCountUpdateIntervalValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setUnreadCountUpdateInterval(value);\n    }\n  }\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  /**\n   * Redirect to Notification Preferences on Settings button click emitter.\n   */\n  @Output() notificationsSettingsOpened = new EventEmitter<void>();\n\n  /**\n   * Navigation data emitter.\n   */\n  @Output() notificationRouting = new EventEmitter<NotificationRouting>();\n\n  /**\n   * Unique id html property for each component instance\n   */\n  readonly id = `bb-notifications-badge-widget-${NotificationsBadgeWidgetComponent.idCounter++}`;\n\n  private readonly destroy$ = new Subject<void>();\n\n  /**\n   * Stream with count of unread notifications.\n   */\n  readonly unreadCount$: Observable<number | undefined> = this.notificationsPollingService.unreadNotificationsCount$;\n\n  /**\n   * Stream that adjusts the layout to the screen size by applying different translateX values.\n   */\n  readonly listTransform$ = this.mediaQService.isMediaBreakpointMatches('max-width', 'sm').pipe(\n    map(isMobileView => {\n      if (isMobileView) {\n        const badge = this.document.querySelector('.bb-notifications-badge-widget');\n\n        if (badge) {\n          const { width: badgeWidth, left } = badge.getBoundingClientRect();\n          const { width: bodyWidth } = this.document.body.getBoundingClientRect();\n\n          return `translateX(${bodyWidth - left - badgeWidth}px)`;\n        }\n      }\n\n      return undefined;\n    }),\n  );\n\n  private readonly origins$: Observable<string[]> = this.properties.origins$;\n\n  private readonly severityLevels$: Observable<string[]> = this.properties.severityLevels$;\n\n  /**\n   * Notification badge dropdown\n   */\n  @ViewChild('popover') readonly popover: NgbDropdown | undefined;\n\n  constructor(\n    private readonly notificationsPollingService: NotificationsPollingService,\n    private readonly routerService: NotificationsRouterService,\n    private readonly mediaQService: MediaQueryService,\n    private readonly properties: WidgetPropertiesService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n    @Inject(DOCUMENT) private readonly document: Document,\n  ) {}\n\n  ngOnInit() {\n    this.setupNavigationSubscriptions();\n    this.setupBadgeUpdateSubscriptions();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * The method to clear the preselected notification value.\n   *\n   * @param isOpen Is notification badge open flag\n   */\n  onOpenChange(isOpen: boolean) {\n    if (!isOpen) {\n      this.preselectedNotification$$.next(undefined);\n    }\n  }\n\n  private setupNavigationSubscriptions() {\n    this.routerService.settingsOpenedNavigation$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(this.notificationsSettingsOpened);\n\n    this.routerService.notificationRouting$.pipe(takeUntil(this.destroy$)).subscribe(this.notificationRouting);\n  }\n\n  private setupBadgeUpdateSubscriptions() {\n    let forceUpdateCounterHandler: (payload: BadgeForceUpdateEventPayload | undefined) => void;\n    const forceUpdateCounters$ = new Subject<void>();\n\n    forceUpdateCounters$\n      .pipe(debounceTime(BADGE_FORCE_UPDATE_DEBOUNCE_TIME), takeUntil(this.destroy$))\n      .subscribe(() => this.notificationsPollingService.forceUpdateCounters());\n\n    combineLatest([this.origins$, this.severityLevels$])\n      .pipe(first())\n      .subscribe(([origins, levels]) => {\n        forceUpdateCounterHandler = payload => {\n          if (\n            payload &&\n            (origins.length === 0 || (payload.origin && origins.includes(payload.origin))) &&\n            (levels.length === 0 || levels.includes(payload.level))\n          ) {\n            forceUpdateCounters$.next();\n          }\n        };\n        this.pubSub.subscribe<undefined | BadgeForceUpdateEventPayload>(\n          NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT,\n          forceUpdateCounterHandler,\n        );\n      });\n\n    this.destroy$.subscribe(() => {\n      this.pubSub.unsubscribe(NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT, forceUpdateCounterHandler);\n    });\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsBadgeCustomizable]',\n})\nexport class NotificationsBadgeWidgetCustomizableDirective extends BbTemplate<\n  NotificationsBadgeWidgetComponent,\n  {\n    unreadCount: number;\n    listTransform?: string;\n  }\n> {}\n","<ng-container\n  bbNotificationsBadgeCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    unreadCount: unreadCount$ | async,\n    listTransform: listTransform$ | async\n  }\"\n>\n</ng-container>\n<ng-template\n  bbNotificationsBadgeCustomizable\n  let-hostRef\n  let-unreadCount=\"context.unreadCount\"\n  let-listTransform=\"context.listTransform\"\n>\n  <div class=\"bb-notifications-badge-widget\">\n    <div #popover=\"ngbDropdown\" ngbDropdown placement=\"bottom-right\" (openChange)=\"hostRef.onOpenChange($event)\">\n      <button\n        bbButton\n        [attr.aria-labelledby]=\"'notifications-badge-label' + hostRef.id\"\n        color=\"transparent\"\n        class=\"bb-notifications-badge-widget__dropdown-button\"\n        ngbDropdownToggle\n      >\n        <bb-icon-ui name=\"notifications\" color=\"secondary\" data-role=\"notifications-icon\" size=\"lg\"></bb-icon-ui>\n        <bb-badge-counter-ui\n          class=\"bb-notifications-badge-widget__dropdown-button-counter\"\n          [count]=\"unreadCount\"\n          maxCount=\"99\"\n          color=\"danger\"\n          data-role=\"notifications-unread-count\"\n        ></bb-badge-counter-ui>\n      </button>\n      <div\n        ngbDropdownMenu\n        class=\"bb-notifications-badge-widget__dropdown-menu dropdown-menu-unstyled\"\n        data-role=\"notifications-list-wrapper\"\n      >\n        <div\n          class=\"bb-notifications-badge-widget__dropdown-menu-list\"\n          data-role=\"notifications-dropdown-menu-list\"\n          [style.transform]=\"listTransform\"\n        >\n          <div class=\"bb-card bb-notifications-badge-widget__list-wrapper\">\n            <bb-notifications-list\n              *ngIf=\"popover.isOpen()\"\n              (navigation)=\"popover.close()\"\n              [preselectedNotification]=\"hostRef.preselectedNotification$ | async\"\n              [dateFormat]=\"dateFormat\"\n            ></bb-notifications-list>\n          </div>\n        </div>\n      </div>\n      <span\n        i18n=\"Notifications badge aria label@notifications.badge.aria-label\"\n        [attr.id]=\"'notifications-badge-label' + hostRef.id\"\n        aria-live=\"polite\"\n        aria-relevant=\"text\"\n        class=\"sr-only\"\n      >\n        { unreadCount || 0, plural, =0 { no new notifications } =1 { {{ unreadCount }} new notification} other {\n        {{ unreadCount }} new notifications } }\n      </span>\n    </div>\n  </div>\n</ng-template>\n"]}