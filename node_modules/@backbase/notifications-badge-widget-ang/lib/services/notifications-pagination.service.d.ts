import { Observable } from 'rxjs';
import { NotificationsHttpService } from '@backbase/data-ang/notifications';
import { NotificationItem } from '@backbase/notifications-common-ang';
import { WidgetPropertiesService } from './widget-properties.service';
import * as i0 from "@angular/core";
export declare class NotificationsPaginationService {
    private readonly notificationHttpService;
    private readonly properties;
    constructor(notificationHttpService: NotificationsHttpService, properties: WidgetPropertiesService);
    /**
     * Stream with page size
     */
    readonly sizeProperty$: Observable<number>;
    private readonly pageSubject;
    private readonly page$;
    /**
     * Stream with current page number (work with loadPage method)
     */
    readonly pageFrom$: Observable<number>;
    private readonly isLoadingSubject;
    /**
     * Stream with loading flag
     */
    readonly isLoading$: Observable<boolean>;
    private readonly totalCountSubject;
    /**
     * Stream with total count of notifications
     */
    readonly totalCount$: Observable<number>;
    private readonly origins$;
    private readonly severityLevels$;
    private readonly notificationsRequest$;
    private readonly notificationsPage$;
    private readonly markAllNotificationsAsRead;
    /**
     * Stream of notifications
     */
    readonly notifications$: Observable<NotificationItem[]>;
    /**
     * Stream of errors
     */
    readonly error$: Observable<any>;
    private loadPageData;
    /**
     * Method to load notifications of specified page
     *
     * @param page Page number
     */
    loadPage(page: number): void;
    /**
     * Method to load next page of notifications
     *
     * @param page Page number
     * @param createdOn Created on notification date
     */
    loadMore(page: number, createdOn?: string): void;
    /**
     * Mark all notifications as read
     *
     * @param read Is read flag
     */
    markAllAsRead(read: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NotificationsPaginationService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NotificationsPaginationService>;
}
