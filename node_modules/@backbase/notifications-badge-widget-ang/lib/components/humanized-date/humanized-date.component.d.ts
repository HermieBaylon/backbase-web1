import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
export declare class HumanizedDateComponent {
    private readonly today;
    private readonly yesterday;
    private _date;
    private _minutesFromNow;
    private _isWithinHour;
    private _isToday;
    private _isYesterday;
    /**
     *  Format to display date in past
     */
    dateFormat: string | undefined;
    /**
     * Flag that defines if we should display relative time for today.
     */
    displayRelativeTime: boolean;
    /**
     * Notification date.
     */
    set date(value: Date | string | undefined);
    constructor();
    get dateFormatForPast(): string;
    /**
     * Date getter.
     */
    get date(): Date | string | undefined;
    /**
     *
     * Is date within an hour from now flag getter.
     */
    get isWithinHour(): boolean;
    /**
     * Is date within the current day flag getter.
     */
    get isToday(): boolean;
    /**
     * Is date within the yesterday date flag getter.
     */
    get isYesterday(): boolean;
    /**
     * How many minutes from now is the date getter.
     */
    get minutesFromNow(): number | undefined;
    private setDateFlags;
    private resetStateToDefaults;
    private parseDate;
    private isSameDay;
    private getMinutesFromNow;
    static ɵfac: i0.ɵɵFactoryDeclaration<HumanizedDateComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<HumanizedDateComponent, "bb-humanized-date", never, { "dateFormat": "dateFormat"; "displayRelativeTime": "displayRelativeTime"; "date": "date"; }, {}, never, never>;
}
export declare class HumanizedDateCustomizableDirective extends BbTemplate<HumanizedDateComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<HumanizedDateCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<HumanizedDateCustomizableDirective, "[bbHumanizedDateCustomizable]", never, {}, {}, never>;
}
