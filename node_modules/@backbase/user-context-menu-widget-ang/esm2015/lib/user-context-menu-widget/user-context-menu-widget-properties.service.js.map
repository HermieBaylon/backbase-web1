{"version":3,"file":"user-context-menu-widget-properties.service.js","sourceRoot":"","sources":["../../../../../../libs/user-context-menu-widget/src/lib/user-context-menu-widget/user-context-menu-widget-properties.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAC;AAG1D,OAAO,EAAE,eAAe,EAAE,aAAa,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AACtE,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;;;AAErC,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,SAAS,EAAE,UAAU;IACrB,uBAAuB,EAAE,uBAAuB;IAChD,iBAAiB,EAAE,iBAAiB;IACpC,mBAAmB,EAAE,mBAAmB;IACxC,aAAa,EAAE,2BAA2B;CAC3C,CAAC;AAUF,MAAM,CAAC,MAAM,uBAAuB,GAAqB;IACvD,QAAQ,EAAE,CAAC;IACX,qBAAqB,EAAE,IAAI;IAC3B,eAAe,EAAE,CAAC;IAClB,yBAAyB,EAAE,EAAE;IAC7B,iBAAiB,EAAE,IAAI;CACxB,CAAC;AAGF,MAAM,OAAO,sCAAsC;IACjD,YAAyC,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAE5C,qBAAgB,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QACtE,kCAA6B,GAAG,IAAI,eAAe,CAAsB,SAAS,CAAC,CAAC;QACpF,4BAAuB,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QAC7E,sCAAiC,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QACvF,8BAAyB,GAAG,IAAI,eAAe,CAAsB,SAAS,CAAC,CAAC;QAEhF,aAAQ,GAAuB,IAAI,CAAC,SAAS;YAC5D,CAAC,CAAC,IAAI,CAAC,SAAS;iBACX,QAAQ,CAAC,cAAc,CAAC,SAAS,EAAE,GAAG,CAAC;iBACvC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAS,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;YACpE,CAAC,CAAC,EAAE,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QAExB,0BAAqB,GAAwB,IAAI,CAAC,SAAS;YAC1E,CAAC,CAAC,IAAI,CAAC,SAAS;iBACX,QAAQ,CAAC,cAAc,CAAC,uBAAuB,EAAE,MAAM,CAAC;iBACxD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,KAAK,MAAM,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,CAAC;QAErC,oBAAe,GAAuB,IAAI,CAAC,SAAS;YACnE,CAAC,CAAC,IAAI,CAAC,SAAS;iBACX,QAAQ,CAAC,cAAc,CAAC,iBAAiB,EAAE,GAAG,CAAC;iBAC/C,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAS,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;YACpE,CAAC,CAAC,EAAE,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;QAE/B,8BAAyB,GAAuB,IAAI,CAAC,SAAS;YAC7E,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,aAAa,EAAE,EAAE,CAAC;YAC3D,CAAC,CAAC,EAAE,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,CAAC;QAEzC,sBAAiB,GAAwB,IAAI,CAAC,SAAS;YACtE,CAAC,CAAC,IAAI,CAAC,SAAS;iBACX,QAAQ,CAAC,cAAc,CAAC,mBAAmB,EAAE,MAAM,CAAC;iBACpD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,KAAK,MAAM,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;QAEzC,cAAS,GAAG,IAAI,CAAC,WAAW,CAAS,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7F,2BAAsB,GAAG,IAAI,CAAC,WAAW,CAChD,IAAI,CAAC,6BAA6B,EAClC,IAAI,CAAC,qBAAqB,CAC3B,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACnB,qBAAgB,GAAG,IAAI,CAAC,WAAW,CAAS,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAC3G,GAAG,CAAC,MAAM,CAAC,CACZ,CAAC;QACO,+BAA0B,GAAG,IAAI,CAAC,WAAW,CACpD,IAAI,CAAC,iCAAiC,EACtC,IAAI,CAAC,yBAAyB,CAC/B,CAAC;QACO,uBAAkB,GAAG,IAAI,CAAC,WAAW,CAAU,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAgCvG,gBAAW,GAAiC,aAAa,CAAC;YACjE,IAAI,CAAC,SAAS;YACd,IAAI,CAAC,sBAAsB;YAC3B,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,0BAA0B;YAC/B,IAAI,CAAC,kBAAkB;SACxB,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,qBAAqB,EAAE,eAAe,EAAE,yBAAyB,EAAE,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC;YACzG,QAAQ;YACR,qBAAqB;YACrB,eAAe;YACf,yBAAyB;YACzB,iBAAiB;SAClB,CAAC,CAAC,CACJ,CAAC;IA9F8D,CAAC;IAkDzD,WAAW,CAAI,MAAiC,EAAE,SAA+B;QACvF,OAAO,aAAa,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAC5C,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAM,CAAC,CACxE,CAAC;IACJ,CAAC;IAEO,SAAS,CAAC,KAAuB;QACvC,OAAO,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,IAAI,CAAC;IAC5C,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,wBAAwB,CAAC,KAAc;QACrC,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,kBAAkB,CAAC,KAAa;QAC9B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,4BAA4B,CAAC,KAAa;QACxC,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,oBAAoB,CAAC,KAAc;QACjC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;;uJA/EU,sCAAsC;2JAAtC,sCAAsC;4FAAtC,sCAAsC;kBADlD,UAAU;;0BAEI,QAAQ","sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { Property } from '@backbase/foundation-ang/web-sdk';\n\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const WidgetProperty = {\n  PAGE_SIZE: 'pageSize',\n  INCLUDE_CURRENT_CONTEXT: 'includeCurrentContext',\n  SHOW_SEARCH_AFTER: 'showSearchAfter',\n  SHOW_SINGLE_CONTEXT: 'showSingleContext',\n  REDIRECT_PAGE: 'selectContextRedirectPage',\n};\n\nexport interface WidgetProperties {\n  pageSize: number;\n  includeCurrentContext: boolean;\n  showSearchAfter: number;\n  selectContextRedirectPage: string;\n  showSingleContext: boolean;\n}\n\nexport const DefaultWidgetProperties: WidgetProperties = {\n  pageSize: 7,\n  includeCurrentContext: true,\n  showSearchAfter: 7,\n  selectContextRedirectPage: '',\n  showSingleContext: true,\n};\n\n@Injectable()\nexport class UserContextMenuWidgetPropertiesService {\n  constructor(@Optional() private readonly itemModel: ItemModel) {}\n\n  private readonly pageSizeSubject$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly includeCurrentContextSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly showSearchAfterSubject$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly selectContextRedirectPageSubject$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly showSingleContextSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n\n  private readonly pageSize: Observable<number> = this.itemModel\n    ? this.itemModel\n        .property(WidgetProperty.PAGE_SIZE, '7')\n        .pipe(map(propertyValue => parseInt(<string>propertyValue, 10)))\n    : of(DefaultWidgetProperties.pageSize);\n\n  private readonly includeCurrentContext: Observable<boolean> = this.itemModel\n    ? this.itemModel\n        .property(WidgetProperty.INCLUDE_CURRENT_CONTEXT, 'true')\n        .pipe(map(propertyValue => `${propertyValue}` === 'true'))\n    : of(DefaultWidgetProperties.includeCurrentContext);\n\n  private readonly showSearchAfter: Observable<number> = this.itemModel\n    ? this.itemModel\n        .property(WidgetProperty.SHOW_SEARCH_AFTER, '7')\n        .pipe(map(propertyValue => parseInt(<string>propertyValue, 10)))\n    : of(DefaultWidgetProperties.showSearchAfter);\n\n  private readonly selectContextRedirectPage: Observable<string> = this.itemModel\n    ? this.itemModel.property(WidgetProperty.REDIRECT_PAGE, '')\n    : of(DefaultWidgetProperties.selectContextRedirectPage);\n\n  private readonly showSingleContext: Observable<boolean> = this.itemModel\n    ? this.itemModel\n        .property(WidgetProperty.SHOW_SINGLE_CONTEXT, 'true')\n        .pipe(map(propertyValue => `${propertyValue}` === 'true'))\n    : of(DefaultWidgetProperties.showSingleContext);\n\n  readonly pageSize$ = this.getProperty<number>(this.pageSizeSubject$, this.pageSize).pipe(map(Number));\n  readonly includeCurrentContext$ = this.getProperty<boolean>(\n    this.includeCurrentContextSubject$,\n    this.includeCurrentContext,\n  ).pipe(map(this.toBoolean));\n  readonly showSearchAfter$ = this.getProperty<number>(this.showSearchAfterSubject$, this.showSearchAfter).pipe(\n    map(Number),\n  );\n  readonly selectContextRedirectPage$ = this.getProperty<string>(\n    this.selectContextRedirectPageSubject$,\n    this.selectContextRedirectPage,\n  );\n  readonly showSingleContext$ = this.getProperty<boolean>(this.showSingleContextSubject$, this.showSingleContext);\n\n  private getProperty<T>(input$: Observable<T | undefined>, itemModel: Observable<Property>): Observable<T> {\n    return combineLatest([input$, itemModel]).pipe(\n      map(([value, valueIM]) => (value === undefined ? valueIM : value) as T),\n    );\n  }\n\n  private toBoolean(value: string | boolean) {\n    return value === 'true' || value === true;\n  }\n\n  setPageSize(value: number) {\n    this.pageSizeSubject$.next(value);\n  }\n\n  setIncludeCurrentContext(value: boolean) {\n    this.includeCurrentContextSubject$.next(value);\n  }\n\n  setShowSearchAfter(value: number) {\n    this.showSearchAfterSubject$.next(value);\n  }\n\n  setSelectContextRedirectPage(value: string) {\n    this.selectContextRedirectPageSubject$.next(value);\n  }\n\n  setShowSingleContext(value: boolean) {\n    this.showSingleContextSubject$.next(value);\n  }\n\n  readonly properties$: Observable<WidgetProperties> = combineLatest([\n    this.pageSize$,\n    this.includeCurrentContext$,\n    this.showSearchAfter$,\n    this.selectContextRedirectPage$,\n    this.showSingleContext$,\n  ]).pipe(\n    map(([pageSize, includeCurrentContext, showSearchAfter, selectContextRedirectPage, showSingleContext]) => ({\n      pageSize,\n      includeCurrentContext,\n      showSearchAfter,\n      selectContextRedirectPage,\n      showSingleContext,\n    })),\n  );\n}\n"]}