import { Component, Input, EventEmitter, Output, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/accessgroup-ui";
import * as i2 from "@angular/common";
export class UserContextMenuDropdownComponent {
    constructor() {
        this.hostRef = this;
        this.canSelectContext = false;
        this.changeContext = new EventEmitter();
        this.logout = new EventEmitter();
    }
    onChangeContext() {
        if (this.canSelectContext) {
            this.changeContext.emit();
        }
    }
    onLogout() {
        this.logout.emit();
    }
}
/** @nocollapse */ UserContextMenuDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UserContextMenuDropdownComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ UserContextMenuDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: UserContextMenuDropdownComponent, selector: "bb-user-context-menu-dropdown", inputs: { currentContext: "currentContext", showSingleContext: "showSingleContext", canSelectContext: "canSelectContext" }, outputs: { changeContext: "changeContext", logout: "logout" }, ngImport: i0, template: "<ng-container\n  bbUserContextMenuDropdownCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    currentContext: currentContext,\n    canSelectContext: canSelectContext,\n    showSingleContext: showSingleContext\n  }\">\n</ng-container>\n\n<ng-template\n  bbUserContextMenuDropdownCustomizable\n  let-hostRef\n  let-currentContext=\"context.currentContext\"\n  let-canSelectContext=\"context.canSelectContext\"\n  let-showSingleContext=\"context.showSingleContext\">\n  <ng-container *ngIf=\"canSelectContext || showSingleContext\">\n    <button\n      class=\"dropdown-item bb-stack\"\n      role=\"menuitem\"\n      data-role=\"user-context-menu-dropdown-change-context-btn\"\n      (click)=\"hostRef.onChangeContext()\">\n      <div class=\"bb-stack__item\">\n        <bb-user-context-icon-ui\n          [isMaster]=\"currentContext?.isMaster\"\n          [name]=\"currentContext?.name\"></bb-user-context-icon-ui>\n      </div>\n      <div class=\"bb-stack__item\">\n        <div class=\"bb-text-bold\" data-role=\"user-context\">\n          {{ currentContext?.name }}\n        </div>\n        <div\n          class=\"bb-text-support\"\n          data-role=\"change-context\"\n          *ngIf=\"canSelectContext\"\n          i18n=\"Change context|Click to change context label@@user-context-menu.label.clickToChange\">\n          (click to change context)\n        </div>\n      </div>\n    </button>\n\n    <div class=\"dropdown-divider\"></div>\n  </ng-container>\n\n  <button role=\"menuitem\" class=\"dropdown-item\" data-role=\"logout\" (click)=\"hostRef.onLogout()\">\n    <div class=\"user-context-menu-info\" i18n=\"Log out|Click to log out label@@user-context-menu.label.logout\">\n      Log out\n    </div>\n  </button>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.UserContextIconComponent; }), selector: "bb-user-context-icon-ui", inputs: ["isMaster", "name"] }], directives: [{ type: i0.forwardRef(function () { return UserContextMenuDropdownCustomizableDirective; }), selector: "[bbUserContextMenuDropdownCustomizable]" }, { type: i0.forwardRef(function () { return i2.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UserContextMenuDropdownComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-context-menu-dropdown',
                    templateUrl: './user-context-menu-dropdown.component.html',
                }]
        }], propDecorators: { currentContext: [{
                type: Input
            }], showSingleContext: [{
                type: Input
            }], canSelectContext: [{
                type: Input
            }], changeContext: [{
                type: Output
            }], logout: [{
                type: Output
            }] } });
export class UserContextMenuDropdownCustomizableDirective extends BbTemplate {
}
/** @nocollapse */ UserContextMenuDropdownCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UserContextMenuDropdownCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ UserContextMenuDropdownCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: UserContextMenuDropdownCustomizableDirective, selector: "[bbUserContextMenuDropdownCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UserContextMenuDropdownCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserContextMenuDropdownCustomizable]',
                }]
        }] });
//# sourceMappingURL=user-context-menu-dropdown.component.js.map