{"version":3,"file":"user-context-menu.service.js","sourceRoot":"","sources":["../../../../../../libs/user-context-menu-widget/src/lib/user-context-menu-widget/user-context-menu.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EACL,sBAAsB,EACtB,2BAA2B,GAE5B,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,qBAAqB,EAA0B,MAAM,yBAAyB,CAAC;AACxF,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AACtC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;;;;AAMjD,MAAM,OAAO,sBAAsB;IACjC,YACmB,kBAA0C,EAC1C,uBAAoD,EACpD,WAAkC;QAFlC,uBAAkB,GAAlB,kBAAkB,CAAwB;QAC1C,4BAAuB,GAAvB,uBAAuB,CAA6B;QACpD,gBAAW,GAAX,WAAW,CAAuB;QAG5C,mBAAc,GAA6C,IAAI,CAAC,uBAAuB;aAC7F,0BAA0B,EAAE;aAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAEhC,qBAAgB,GAAwB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEzE,aAAQ,GAAqC,IAAI,CAAC,WAAW;aACnE,UAAU,EAAE;aACZ,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAVtC,CAAC;IAYI,yBAAyB;QAC/B,OAAO,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,IAAI,CACnG,GAAG,CAAC,CAAC,QAA0C,EAAE,EAAE;YACjD,MAAM,KAAK,GAAuB,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;YACtD,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1F,CAAC,CAAC,EACF,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;uIA3BU,sBAAsB;2IAAtB,sBAAsB;4FAAtB,sBAAsB;kBADlC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport {\n  UserContextHttpService,\n  ServiceAgreementHttpService,\n  Serviceagreementpartialitem as ServiceAgreement,\n} from '@backbase/data-ang/accesscontrol';\nimport { UserManagementService, GetOwnUser as UserInfo } from '@backbase/data-ang/user';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport { Serviceagreementpartialitem as ServiceAgreement } from '@backbase/data-ang/accesscontrol';\nexport { GetOwnUser as UserInfo } from '@backbase/data-ang/user';\n\n@Injectable()\nexport class UserContextMenuService {\n  constructor(\n    private readonly userContextService: UserContextHttpService,\n    private readonly serviceAgreementService: ServiceAgreementHttpService,\n    private readonly userService: UserManagementService,\n  ) {}\n\n  readonly currentContext: Observable<ServiceAgreement | undefined> = this.serviceAgreementService\n    .getServiceAgreementContext()\n    .pipe(catchError(() => of(undefined)));\n\n  readonly canSelectContext: Observable<boolean> = this.getTotalServiceAgreements();\n\n  readonly userInfo: Observable<UserInfo | undefined> = this.userService\n    .getOwnUser()\n    .pipe(catchError(() => of(undefined)));\n\n  private getTotalServiceAgreements(): Observable<boolean> {\n    return this.userContextService.getUserContextServiceAgreements({ from: 0, size: 2 }, 'response').pipe(\n      map((response: HttpResponse<ServiceAgreement[]>) => {\n        const items: ServiceAgreement[] = response.body || [];\n        return (parseInt(response.headers.get('x-total-count') || '0', 10) || items.length) > 1;\n      }),\n      catchError(() => {\n        return of(false);\n      }),\n    );\n  }\n}\n"]}