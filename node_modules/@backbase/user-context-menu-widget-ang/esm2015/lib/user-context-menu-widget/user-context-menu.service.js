import { Injectable } from '@angular/core';
import { UserContextHttpService, ServiceAgreementHttpService, } from '@backbase/data-ang/accesscontrol';
import { UserManagementService } from '@backbase/data-ang/user';
import { of } from 'rxjs';
import { catchError, map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/accesscontrol";
import * as i2 from "@backbase/data-ang/user";
export class UserContextMenuService {
    constructor(userContextService, serviceAgreementService, userService) {
        this.userContextService = userContextService;
        this.serviceAgreementService = serviceAgreementService;
        this.userService = userService;
        this.currentContext = this.serviceAgreementService
            .getServiceAgreementContext()
            .pipe(catchError(() => of(undefined)));
        this.canSelectContext = this.getTotalServiceAgreements();
        this.userInfo = this.userService
            .getOwnUser()
            .pipe(catchError(() => of(undefined)));
    }
    getTotalServiceAgreements() {
        return this.userContextService.getUserContextServiceAgreements({ from: 0, size: 2 }, 'response').pipe(map((response) => {
            const items = response.body || [];
            return (parseInt(response.headers.get('x-total-count') || '0', 10) || items.length) > 1;
        }), catchError(() => {
            return of(false);
        }));
    }
}
/** @nocollapse */ UserContextMenuService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UserContextMenuService, deps: [{ token: i1.UserContextHttpService }, { token: i1.ServiceAgreementHttpService }, { token: i2.UserManagementService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ UserContextMenuService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UserContextMenuService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: UserContextMenuService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.UserContextHttpService }, { type: i1.ServiceAgreementHttpService }, { type: i2.UserManagementService }]; } });
//# sourceMappingURL=user-context-menu.service.js.map