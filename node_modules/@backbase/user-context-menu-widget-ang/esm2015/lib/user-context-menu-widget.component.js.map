{"version":3,"file":"user-context-menu-widget.component.js","sourceRoot":"","sources":["../../../../../libs/user-context-menu-widget/src/lib/user-context-menu-widget.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,sCAAsC,EAAE,MAAM,wEAAwE,CAAC;AAChI,OAAO,EAAE,sBAAsB,EAAE,MAAM,sDAAsD,CAAC;;;;AAS9F,MAAM,OAAO,8BAA8B;IAqCzC,YAA6B,sCAA8E;QAA9E,2CAAsC,GAAtC,sCAAsC,CAAwC;QAL3G;;WAEG;QACM,yBAAoB,GAAG,cAAc,CAAC;IAE+D,CAAC;IApC/G;;OAEG;IACH,IAAa,QAAQ,CAAC,KAAa;QACjC,IAAI,CAAC,sCAAsC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACjE,CAAC;IACD;;OAEG;IACH,IAAa,qBAAqB,CAAC,KAAc;QAC/C,IAAI,CAAC,sCAAsC,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;IAC9E,CAAC;IACD;;OAEG;IACH,IAAa,eAAe,CAAC,KAAa;QACxC,IAAI,CAAC,sCAAsC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACxE,CAAC;IACD;;OAEG;IACH,IAAa,yBAAyB,CAAC,KAAa;QAClD,IAAI,CAAC,sCAAsC,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC;IAClF,CAAC;IACD;;OAEG;IACH,IAAa,iBAAiB,CAAC,KAAc;QAC3C,IAAI,CAAC,sCAAsC,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAC1E,CAAC;;+IA9BU,8BAA8B;mIAA9B,8BAA8B,0TAF9B,CAAC,sBAAsB,EAAE,sCAAsC,CAAC,0BAHjE;;GAET;4FAGU,8BAA8B;kBAP1C,SAAS;mBAAC;oBACT,QAAQ,EAAE,6BAA6B;oBACvC,QAAQ,EAAE;;GAET;oBACD,SAAS,EAAE,CAAC,sBAAsB,EAAE,sCAAsC,CAAC;iBAC5E;6HAKc,QAAQ;sBAApB,KAAK;gBAMO,qBAAqB;sBAAjC,KAAK;gBAMO,eAAe;sBAA3B,KAAK;gBAMO,yBAAyB;sBAArC,KAAK;gBAMO,iBAAiB;sBAA7B,KAAK;gBAOG,oBAAoB;sBAA5B,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { UserContextMenuWidgetPropertiesService } from './user-context-menu-widget/user-context-menu-widget-properties.service';\nimport { UserContextMenuService } from './user-context-menu-widget/user-context-menu.service';\n\n@Component({\n  selector: 'bb-user-context-menu-widget',\n  template: `\n    <bb-user-context-menu-container [dropdownMenuPosition]=\"dropdownMenuPosition\"></bb-user-context-menu-container>\n  `,\n  providers: [UserContextMenuService, UserContextMenuWidgetPropertiesService],\n})\nexport class UserContextMenuWidgetComponent {\n  /**\n   * Number of service agreements to load per page\n   */\n  @Input() set pageSize(value: number) {\n    this.userContextMenuWidgetPropertiesService.setPageSize(value);\n  }\n  /**\n   * Include current context\n   */\n  @Input() set includeCurrentContext(value: boolean) {\n    this.userContextMenuWidgetPropertiesService.setIncludeCurrentContext(value);\n  }\n  /**\n   * Show search if more than service agreements\n   */\n  @Input() set showSearchAfter(value: number) {\n    this.userContextMenuWidgetPropertiesService.setShowSearchAfter(value);\n  }\n  /**\n   * Redirect after successful context select\n   */\n  @Input() set selectContextRedirectPage(value: string) {\n    this.userContextMenuWidgetPropertiesService.setSelectContextRedirectPage(value);\n  }\n  /**\n   * Show current context in context switcher when there is only one context\n   */\n  @Input() set showSingleContext(value: boolean) {\n    this.userContextMenuWidgetPropertiesService.setShowSingleContext(value);\n  }\n\n  /**\n   * Dropdown menu postion\n   */\n  @Input() dropdownMenuPosition = 'bottom-right';\n\n  constructor(private readonly userContextMenuWidgetPropertiesService: UserContextMenuWidgetPropertiesService) {}\n}\n"]}