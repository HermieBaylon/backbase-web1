import { EventEmitter } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { ServiceAgreement } from '../user-context-menu.service';
import * as i0 from "@angular/core";
export interface UserContextMenuDropdownCustomizableContext {
    currentContext: ServiceAgreement | undefined;
    canSelectContext: boolean;
    showSingleContext: boolean | undefined;
}
export declare class UserContextMenuDropdownComponent {
    hostRef: this;
    currentContext: ServiceAgreement | undefined;
    showSingleContext: boolean | undefined;
    canSelectContext: boolean;
    changeContext: EventEmitter<void>;
    logout: EventEmitter<void>;
    onChangeContext(): void;
    onLogout(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UserContextMenuDropdownComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UserContextMenuDropdownComponent, "bb-user-context-menu-dropdown", never, { "currentContext": "currentContext"; "showSingleContext": "showSingleContext"; "canSelectContext": "canSelectContext"; }, { "changeContext": "changeContext"; "logout": "logout"; }, never, never>;
}
export declare class UserContextMenuDropdownCustomizableDirective extends BbTemplate<UserContextMenuDropdownComponent, UserContextMenuDropdownCustomizableContext> {
    static ɵfac: i0.ɵɵFactoryDeclaration<UserContextMenuDropdownCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<UserContextMenuDropdownCustomizableDirective, "[bbUserContextMenuDropdownCustomizable]", never, {}, {}, never>;
}
