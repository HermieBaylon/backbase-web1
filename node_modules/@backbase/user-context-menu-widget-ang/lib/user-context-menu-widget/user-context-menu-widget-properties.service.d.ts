import { ItemModel } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare const WidgetProperty: {
    PAGE_SIZE: string;
    INCLUDE_CURRENT_CONTEXT: string;
    SHOW_SEARCH_AFTER: string;
    SHOW_SINGLE_CONTEXT: string;
    REDIRECT_PAGE: string;
};
export interface WidgetProperties {
    pageSize: number;
    includeCurrentContext: boolean;
    showSearchAfter: number;
    selectContextRedirectPage: string;
    showSingleContext: boolean;
}
export declare const DefaultWidgetProperties: WidgetProperties;
export declare class UserContextMenuWidgetPropertiesService {
    private readonly itemModel;
    constructor(itemModel: ItemModel);
    private readonly pageSizeSubject$;
    private readonly includeCurrentContextSubject$;
    private readonly showSearchAfterSubject$;
    private readonly selectContextRedirectPageSubject$;
    private readonly showSingleContextSubject$;
    private readonly pageSize;
    private readonly includeCurrentContext;
    private readonly showSearchAfter;
    private readonly selectContextRedirectPage;
    private readonly showSingleContext;
    readonly pageSize$: Observable<number>;
    readonly includeCurrentContext$: Observable<boolean>;
    readonly showSearchAfter$: Observable<number>;
    readonly selectContextRedirectPage$: Observable<string>;
    readonly showSingleContext$: Observable<boolean>;
    private getProperty;
    private toBoolean;
    setPageSize(value: number): void;
    setIncludeCurrentContext(value: boolean): void;
    setShowSearchAfter(value: number): void;
    setSelectContextRedirectPage(value: string): void;
    setShowSingleContext(value: boolean): void;
    readonly properties$: Observable<WidgetProperties>;
    static ɵfac: i0.ɵɵFactoryDeclaration<UserContextMenuWidgetPropertiesService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<UserContextMenuWidgetPropertiesService>;
}
